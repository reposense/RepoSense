name: GitHub Actions preview build manual

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number'
        required: true
        type: string

env:
  NODE_VER: '20.x'
  JAVA_DISTRIBUTION: 'zulu'
  JAVA_VER: 11

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        ref: refs/pull/${{ github.event.inputs.pr_number }}/merge
        fetch-depth: 0

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'

    - name: Install Jekyll
      run: gem install jekyll

    - name: Initialize Jekyll site
      run: |
          jekyll new --skip-bundle ${{ github.workspace }}/reposense-report
      env:
          JEKYLL_ENV: production

    - name: Set up Vite environment
      run: |
        export VITE_BASE_DIR="/$(basename $GITHUB_REPOSITORY)"
        echo "VITE_BASE_DIR: $VITE_BASE_DIR"

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: ${{ env.JAVA_DISTRIBUTION }}
        java-version: ${{ env.JAVA_VER }}

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VER }}

    - name: Set up Gradle caching
      uses: actions/cache@v3
      with:
        path: |
          $HOME/.gradle/caches
          $HOME/.gradle/wrapper
        key: ${{ matrix.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ matrix.os }}-gradle-

    - name: Set up Node caching
      uses: actions/cache@v3
      with:
        path: $HOME/.npm
        key: ${{ matrix.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ matrix.os }}-node-

    - name: Grant execute permission for gradlew
      if: ${{ runner.os != 'Windows' }}
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew run

    - name: Run local website on action runner
      run: |
        gem install bundler
        cd ${SITE}
        bundle install
        bundle exec jekyll serve --detach
      env:
        SITE: ${{github.workspace}}/reposense-report

    - name: Wait for the service to start
      run: sleep 10

    - name: Test connection to deployed website
      run: curl -L http://0.0.0.0:4000/$VITE_BASE_DIR

    - name: Test deployed web page
      uses: treosh/lighthouse-ci-action@v12
      with:
        urls: http://0.0.0.0:4000/${{ env.VITE_BASE_DIR }}
        uploadArtifacts: true

    - name: Display Lighthouse summary
      run: cat .lighthouseci/manifest.json | jq '.'
