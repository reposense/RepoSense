var resultJson = [{"path":"docs/team/hzxcaryn.adoc","lines":[{"lineNumber":1,"author":{"gitID":"hzxcaryn"},"content":"\u003d Caryn Heng - Project Portfolio"},{"lineNumber":2,"author":{"gitID":"-"},"content":":imagesDir: ../images"},{"lineNumber":3,"author":{"gitID":"-"},"content":":stylesDir: ../stylesheets"},{"lineNumber":4,"author":{"gitID":"-"},"content":":xrefstyle: short"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"hzxcaryn"},"content":"\u003d\u003d PROJECT: Part-time Manager (PTMan)"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"\u003d\u003d Overview"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"PTMan is a desktop human resource application used for managing part-time employees. +"},{"lineNumber":11,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"PTMan aims to give part-time employees the freedom of choosing when they want to work by registering for the available shifts set by the manager."},{"lineNumber":13,"author":{"gitID":"-"},"content":"Thereby reducing the hassle of work scheduling for both employers and employees. +"},{"lineNumber":14,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"The user interacts with the application using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC."},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"\u003d\u003d Summary of contributions"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"* *Major enhancement*: Added an interactive *timetable*."},{"lineNumber":20,"author":{"gitID":"-"},"content":"** What it does:"},{"lineNumber":21,"author":{"gitID":"-"},"content":"*** Provides a sophisticated timetable which displays the shifts added by managers."},{"lineNumber":22,"author":{"gitID":"-"},"content":"*** Instantly reflects any changes to shifts on the timetable. This includes the addition/deletion of a shift, and the application/removal of an employee to/from a shift."},{"lineNumber":23,"author":{"gitID":"-"},"content":"*** Allows easy navigation across the different weeks through keyboard shortcuts or mouse clicks."},{"lineNumber":24,"author":{"gitID":"-"},"content":"*** Allows employees to view the shifts they are assigned to on the timetable."},{"lineNumber":25,"author":{"gitID":"-"},"content":"*** Allows users to view which employees are working in any particular shift."},{"lineNumber":26,"author":{"gitID":"-"},"content":"*** Supports the exporting of timetable as image to be saved as a file locally, or forwarded to users through our email service."},{"lineNumber":27,"author":{"gitID":"-"},"content":"** Justification: This feature improves the user experience of PTMan significantly because a user can get helpful visual feedback whenever changes are made to the shifts in PTMan."},{"lineNumber":28,"author":{"gitID":"-"},"content":"Convenience is also brought to employees through the ability to export their work timetable, allowing them to refer to it in the future without the need to access the app."},{"lineNumber":29,"author":{"gitID":"-"},"content":"** Highlights:"},{"lineNumber":30,"author":{"gitID":"-"},"content":"This enhancement puts user experience in high regard."},{"lineNumber":31,"author":{"gitID":"-"},"content":"Lots of consideration is put into making the feature easy to use and useful for users."},{"lineNumber":32,"author":{"gitID":"-"},"content":"The implementation of this enhancement mainly required changes to Ui, Model, and Logic components."},{"lineNumber":33,"author":{"gitID":"-"},"content":"** Credits: https://github.com/dlemmermann/CalendarFX[CalendarFX]"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"* *Minor enhancement*:"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"** Allocated different colors for different tags that are assigned to employees. This allows users to easily classify and identify the different tags."},{"lineNumber":38,"author":{"gitID":"-"},"content":"** Modified the result display to display error messages in red. This allows users to quickly identify when they make a mistake."},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"* *Code contributed*: [https://github.com/CS2103JAN2018-W14-B2/main/blob/master/collated/functional/hzxcaryn.md[Functional code]]"},{"lineNumber":41,"author":{"gitID":"-"},"content":" [https://github.com/CS2103JAN2018-W14-B2/main/blob/master/collated/test/hzxcaryn.md[Test code]]"},{"lineNumber":42,"author":{"gitID":"-"},"content":""},{"lineNumber":43,"author":{"gitID":"-"},"content":"* *Other contributions*:"},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"-"},"content":"** Project management:"},{"lineNumber":46,"author":{"gitID":"-"},"content":"*** Managed releases `v1.2`, `v1.4`, `v1.4.1`, `v1.5rc` and `v1.5` on GitHub"},{"lineNumber":47,"author":{"gitID":"hzxcaryn"},"content":"*** Populated application with sample data for demo purposes. https://github.com/CS2103JAN2018-W14-B2/main/pull/227[#227]"},{"lineNumber":48,"author":{"gitID":"-"},"content":"** Enhancements to existing features:"},{"lineNumber":49,"author":{"gitID":"hzxcaryn"},"content":"*** Revamped the GUI theme. https://github.com/CS2103JAN2018-W14-B2/main/pull/150[#150], https://github.com/CS2103JAN2018-W14-B2/main/pull/166[#166]"},{"lineNumber":50,"author":{"gitID":"hzxcaryn"},"content":"*** Add the `Admin Mode` label that appears when user enters admin mode. https://github.com/CS2103JAN2018-W14-B2/main/pull/125[#125]"},{"lineNumber":51,"author":{"gitID":"-"},"content":"** Documentation:"},{"lineNumber":52,"author":{"gitID":"hzxcaryn"},"content":"*** Rephrased, reformatted and updated screenshots in the User Guide. https://github.com/CS2103JAN2018-W14-B2/main/pull/228[#228], https://github.com/CS2103JAN2018-W14-B2/main/pull/238[#238]"},{"lineNumber":53,"author":{"gitID":"-"},"content":"*** Added user stories and use cases for the Developer Guide. https://github.com/CS2103JAN2018-W14-B2/main/pull/9[#9]"},{"lineNumber":54,"author":{"gitID":"-"},"content":"** Community:"},{"lineNumber":55,"author":{"gitID":"hzxcaryn"},"content":"*** Reported bugs and suggestions for other teams in the module."},{"lineNumber":56,"author":{"gitID":"-"},"content":"https://github.com/CS2103JAN2018-F09-B3/main/issues/148[#148],"},{"lineNumber":57,"author":{"gitID":"hzxcaryn"},"content":"https://github.com/CS2103JAN2018-F09-B3/main/issues/178[#178],"},{"lineNumber":58,"author":{"gitID":"-"},"content":"https://github.com/CS2103JAN2018-F09-B3/main/issues/153[#153],"},{"lineNumber":59,"author":{"gitID":"-"},"content":"https://github.com/CS2103JAN2018-F09-B3/main/issues/164[#164]"},{"lineNumber":60,"author":{"gitID":"-"},"content":"** Tools:"},{"lineNumber":61,"author":{"gitID":"-"},"content":"*** Integrated a third party library (https://github.com/dlemmermann/CalendarFX[CalendarFX]) to the project (https://github.com/CS2103JAN2018-W14-B2/main/pull/116[#116])"},{"lineNumber":62,"author":{"gitID":"-"},"content":""},{"lineNumber":63,"author":{"gitID":"-"},"content":""},{"lineNumber":64,"author":{"gitID":"-"},"content":"\u003d\u003d Contributions to the User Guide"},{"lineNumber":65,"author":{"gitID":"-"},"content":""},{"lineNumber":66,"author":{"gitID":"-"},"content":""},{"lineNumber":67,"author":{"gitID":"-"},"content":"|\u003d\u003d\u003d"},{"lineNumber":68,"author":{"gitID":"-"},"content":"|_Given below are sections I contributed to the User Guide. They showcase my ability to write documentation targeting end-users._"},{"lineNumber":69,"author":{"gitID":"-"},"content":"|\u003d\u003d\u003d"},{"lineNumber":70,"author":{"gitID":"-"},"content":""},{"lineNumber":71,"author":{"gitID":"-"},"content":"include::../UserGuide.adoc[tag\u003dguiWalkthrough]"},{"lineNumber":72,"author":{"gitID":"-"},"content":"include::../UserGuide.adoc[tag\u003dtimetableIntro]"},{"lineNumber":73,"author":{"gitID":"-"},"content":"include::../UserGuide.adoc[tag\u003dtimetableInteractions]"},{"lineNumber":74,"author":{"gitID":"-"},"content":""},{"lineNumber":75,"author":{"gitID":"-"},"content":""},{"lineNumber":76,"author":{"gitID":"-"},"content":"\u003d\u003d Contributions to the Developer Guide"},{"lineNumber":77,"author":{"gitID":"-"},"content":""},{"lineNumber":78,"author":{"gitID":"-"},"content":"|\u003d\u003d\u003d"},{"lineNumber":79,"author":{"gitID":"-"},"content":"|_Given below are sections I contributed to the Developer Guide. They showcase my ability to write technical documentation and the technical depth of my contributions to the project._"},{"lineNumber":80,"author":{"gitID":"-"},"content":"|\u003d\u003d\u003d"},{"lineNumber":81,"author":{"gitID":"-"},"content":""},{"lineNumber":82,"author":{"gitID":"-"},"content":"include::../DeveloperGuide.adoc[tag\u003dtimetable]"}],"authorContributionMap":{"hzxcaryn":10,"-":72}},{"path":"docs/team/SunBangjie.adoc","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"\u003d Sun Bangjie - Project Portfolio"},{"lineNumber":2,"author":{"gitID":"-"},"content":":imagesDir: ../images"},{"lineNumber":3,"author":{"gitID":"-"},"content":":stylesDir: ../stylesheets"},{"lineNumber":4,"author":{"gitID":"-"},"content":":xrefstyle: short"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"hzxcaryn"},"content":"\u003d\u003d PROJECT: Part-time Manager (PTMan)"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"\u003d\u003d Overview"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"Part-Time Manager (PTMan) is a desktop human resource application used for managing part-time employees in outlets such as bubble tea shops and fast food restaurants. PTMan aims to give part-time employees the freedom of choosing when they want to work by registering for the available shifts set by the outlet managers."},{"lineNumber":11,"author":{"gitID":"-"},"content":"Instead of huge amount of paper work and time spent on communication via phone calls and messages, PTMan helps both managers and employees reduce the hassle of work scheduling. +"},{"lineNumber":12,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"The user interacts with the application using a Command Line Interface (CLI), and it has a Graphical User Interface (GUI) created with JavaFX. It is written in Java, and has about 10 kLoC."},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"This project portfolio page aims to showcase my work in the project."},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"\u003d\u003d Summary of contributions"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"* *Major enhancement*: Added the *outlet* feature."},{"lineNumber":20,"author":{"gitID":"-"},"content":"** What it does:"},{"lineNumber":21,"author":{"gitID":"-"},"content":"*** It allows outlet managers to edit outlet information including name, operating hours, contact number and email."},{"lineNumber":22,"author":{"gitID":"-"},"content":"*** It allows managers to create and broadcast announcement to all employees."},{"lineNumber":23,"author":{"gitID":"-"},"content":"*** It allows managers to encrypt and decrypt data stored in local storage files."},{"lineNumber":24,"author":{"gitID":"-"},"content":"** Justification: This feature improves the product significantly because:"},{"lineNumber":25,"author":{"gitID":"-"},"content":". Outlet information is unique and essential. Operating hours will determine the timetable and working schedule. Contact number and email will be used to receive admin password reset. This outlet feature provides convenient ways for managers to manage the outlet."},{"lineNumber":26,"author":{"gitID":"-"},"content":". Creating and broadcasting announcement is necessary as it enhances communication between managers and employees."},{"lineNumber":27,"author":{"gitID":"-"},"content":". Encryption and decryption of local storage files prevents any group of people who do not have the access from interpreting the private and important data, and protects the credential of data."},{"lineNumber":28,"author":{"gitID":"-"},"content":"** Highlights: This enhancement modifies the existing model to store outlet information. It also modifies the UI component to display outlet information. There were design considerations to integrate outlet information into the existing model while minimizing coupling with the other components."},{"lineNumber":29,"author":{"gitID":"-"},"content":"This enhancement also changes the storage component significantly as data stored can be encrypted and decrypted."},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"* *Minor enhancement*: added functionality that backs up local storage files to `.backup` files."},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"-"},"content":"* *Code contributed*: [https://github.com/CS2103JAN2018-W14-B2/main/blob/master/collated/functional/SunBangjie.md[Functional code]]"},{"lineNumber":34,"author":{"gitID":"-"},"content":"                       [https://github.com/CS2103JAN2018-W14-B2/main/blob/master/collated/test/SunBangjie.md[Test code]]"},{"lineNumber":35,"author":{"gitID":"-"},"content":"* *Other contributions*:"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"** Project management:"},{"lineNumber":38,"author":{"gitID":"-"},"content":"*** Managed release `v1.3` (1 release) on GitHub."},{"lineNumber":39,"author":{"gitID":"-"},"content":"** Enhancements to existing features:"},{"lineNumber":40,"author":{"gitID":"-"},"content":"*** Provided methods to encrypt and decrypt local storage files. (Pull requests: https://github.com/CS2103JAN2018-W14-B2/main/pull/121[#121], https://github.com/CS2103JAN2018-W14-B2/main/pull/145[#145], https://github.com/CS2103JAN2018-W14-B2/main/pull/193[#193])"},{"lineNumber":41,"author":{"gitID":"-"},"content":"** Documentation:"},{"lineNumber":42,"author":{"gitID":"-"},"content":"*** Updated user stories, use cases and NFRs in Developer guide: https://github.com/CS2103JAN2018-W14-B2/main/pull/2[#2], https://github.com/CS2103JAN2018-W14-B2/main/pull/10[#10]"},{"lineNumber":43,"author":{"gitID":"-"},"content":"*** Updated formatting of Developer Guide: https://github.com/CS2103JAN2018-W14-B2/main/pull/23[#23]"},{"lineNumber":44,"author":{"gitID":"-"},"content":"*** Updated manual testing in Developer Guide: https://github.com/CS2103JAN2018-W14-B2/main/pull/231[#231]"},{"lineNumber":45,"author":{"gitID":"-"},"content":"** Community:"},{"lineNumber":46,"author":{"gitID":"-"},"content":"*** Reported bugs and suggestions for other teams in the class (examples:  https://github.com/CS2103JAN2018-W13-B2/main/issues/142[#142])"},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"-"},"content":"\u003d\u003d Contributions to the User Guide"},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"-"},"content":"|\u003d\u003d\u003d"},{"lineNumber":53,"author":{"gitID":"-"},"content":"|_Given below are sections I contributed to the User Guide. They showcase my ability to write documentation targeting end-users._"},{"lineNumber":54,"author":{"gitID":"-"},"content":"|\u003d\u003d\u003d"},{"lineNumber":55,"author":{"gitID":"-"},"content":""},{"lineNumber":56,"author":{"gitID":"-"},"content":"include::../UserGuide.adoc[tag\u003doutletManagement]"},{"lineNumber":57,"author":{"gitID":"-"},"content":""},{"lineNumber":58,"author":{"gitID":"-"},"content":"include::../UserGuide.adoc[tag\u003doutletCommand]"},{"lineNumber":59,"author":{"gitID":"-"},"content":""},{"lineNumber":60,"author":{"gitID":"-"},"content":"include::../UserGuide.adoc[tag\u003dbackup]"},{"lineNumber":61,"author":{"gitID":"-"},"content":""},{"lineNumber":62,"author":{"gitID":"-"},"content":"\u003d\u003d Contributions to the Developer Guide"},{"lineNumber":63,"author":{"gitID":"-"},"content":""},{"lineNumber":64,"author":{"gitID":"-"},"content":"|\u003d\u003d\u003d"},{"lineNumber":65,"author":{"gitID":"-"},"content":"|_Given below are sections I contributed to the Developer Guide. They showcase my ability to write technical documentation and the technical depth of my contributions to the project._"},{"lineNumber":66,"author":{"gitID":"-"},"content":"|\u003d\u003d\u003d"},{"lineNumber":67,"author":{"gitID":"-"},"content":""},{"lineNumber":68,"author":{"gitID":"-"},"content":"include::../DeveloperGuide.adoc[tag\u003doutlet]"}],"authorContributionMap":{"hzxcaryn":2,"-":66}},{"path":"docs/team/koo1993.adoc","lines":[{"lineNumber":1,"author":{"gitID":"hzxcaryn"},"content":"\u003d Koo Chin Chye - Project Portfolio"},{"lineNumber":2,"author":{"gitID":"-"},"content":":imagesDir: ../images"},{"lineNumber":3,"author":{"gitID":"-"},"content":":stylesDir: ../stylesheets"},{"lineNumber":4,"author":{"gitID":"-"},"content":":xrefstyle: short"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"hzxcaryn"},"content":"\u003d\u003d PROJECT: Part-time Manager (PTMan)"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"\u003d\u003d Overview"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"PTMan is a desktop human resource application used for managing part-time employees. +"},{"lineNumber":11,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"PTMan aims to give part-time employees the freedom of choosing when they want to work by registering for the available shifts set by the manager."},{"lineNumber":13,"author":{"gitID":"-"},"content":"Thereby reducing the hassle of work scheduling for both employers and employees. +"},{"lineNumber":14,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":15,"author":{"gitID":"koo1993"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC."},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"\u003d\u003d Summary of contributions"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"* *Major enhancement*: Added *access control* that manages functions for employer and employee. [https://github.com/CS2103JAN2018-W14-B2/main/issues/39[Issue #39]]"},{"lineNumber":20,"author":{"gitID":"koo1993"},"content":"** What it does:"},{"lineNumber":21,"author":{"gitID":"koo1993"},"content":"*** Assigns password to each employer and employee."},{"lineNumber":22,"author":{"gitID":"koo1993"},"content":"*** Separates command for employer and employee."},{"lineNumber":23,"author":{"gitID":"koo1993"},"content":"*** Implements API for password checking that needs password."},{"lineNumber":24,"author":{"gitID":"koo1993"},"content":"*** Implements Login/Logout to admin mode for employer to use admin commands at ease."},{"lineNumber":25,"author":{"gitID":"koo1993"},"content":"*** Implements Change/reset password for both group of user with email service."},{"lineNumber":26,"author":{"gitID":"koo1993"},"content":"** Justification: This ensure only authenticated personnel can use the system and restrict employee to use functions that are meant for the employer. This prevent misuse of PTMan."},{"lineNumber":27,"author":{"gitID":"koo1993"},"content":"** Highlights:"},{"lineNumber":28,"author":{"gitID":"koo1993"},"content":"This enhancement puts security in high regard."},{"lineNumber":29,"author":{"gitID":"koo1993"},"content":"Lots of consideration is put into avoiding inconvience for the user while maintaining high security."},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"* *Minor enhancement*: Added salary parameter and addsalary command for employer to manage employees\u0027 pay."},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"-"},"content":"* *Code contributed*: [https://github.com/CS2103JAN2018-W14-B2/main/blob/master/collated/functional/koo1993.md[Functional code]] [https://github.com/CS2103JAN2018-W14-B2/main/blob/master/collated/test/koo1993.md[Test code]]"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"* *Other contributions*:"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"** Project management:"},{"lineNumber":38,"author":{"gitID":"-"},"content":"*** Constantly collate updates from the team and call for meeting if there is a need to."},{"lineNumber":39,"author":{"gitID":"-"},"content":"** Enhancements to existing features:"},{"lineNumber":40,"author":{"gitID":"-"},"content":"*** Implemented obfuscation for password in input text field and history. (Pull requests https://github.com/CS2103JAN2018-W14-B2/main/pull/132[#132], https://github.com/CS2103JAN2018-W14-B2/main/pull/141[#141], https://github.com/CS2103JAN2018-W14-B2/main/pull/157[#157])"},{"lineNumber":41,"author":{"gitID":"-"},"content":"*** Wrote email service to send reset password to employer and employee via email. (Pull requests https://github.com/CS2103JAN2018-W14-B2/main/pull/113[#113])"},{"lineNumber":42,"author":{"gitID":"-"},"content":"*** Fixed a bug when closing the application when minimized (pull requests https://github.com/CS2103JAN2018-W14-B2/main/pull/133[#133])"},{"lineNumber":43,"author":{"gitID":"-"},"content":"** Community:"},{"lineNumber":44,"author":{"gitID":"-"},"content":"*** Reported bugs and suggestions for other teams in the class (Issue:  https://github.com/CS2103JAN2018-W10-B2/main/issues/68[#68], https://github.com/CS2103JAN2018-W10-B2/main/issues/69[#69], https://github.com/CS2103JAN2018-W10-B2/main/issues/72[#72], https://github.com/CS2103JAN2018-W10-B2/main/issues/85[#85], https://github.com/CS2103JAN2018-W10-B2/main/issues/89[#89])"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":"\u003d\u003d Contributions to the User Guide"},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"-"},"content":"|\u003d\u003d\u003d"},{"lineNumber":52,"author":{"gitID":"-"},"content":"|_Given below are sections I contributed to the User Guide. They showcase my ability to write documentation targeting end-users._"},{"lineNumber":53,"author":{"gitID":"-"},"content":"|\u003d\u003d\u003d"},{"lineNumber":54,"author":{"gitID":"-"},"content":""},{"lineNumber":55,"author":{"gitID":"-"},"content":"include::../UserGuide.adoc[tag\u003daccessControl]"},{"lineNumber":56,"author":{"gitID":"-"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":""},{"lineNumber":58,"author":{"gitID":"-"},"content":"\u003d\u003d Contributions to the Developer Guide"},{"lineNumber":59,"author":{"gitID":"-"},"content":""},{"lineNumber":60,"author":{"gitID":"-"},"content":"|\u003d\u003d\u003d"},{"lineNumber":61,"author":{"gitID":"-"},"content":"|_Given below are sections I contributed to the Developer Guide. They showcase my ability to write technical documentation and the technical depth of my contributions to the project._"},{"lineNumber":62,"author":{"gitID":"-"},"content":"|\u003d\u003d\u003d"},{"lineNumber":63,"author":{"gitID":"-"},"content":""},{"lineNumber":64,"author":{"gitID":"-"},"content":"include::../DeveloperGuide.adoc[tag\u003daccessControl]"}],"authorContributionMap":{"koo1993":11,"hzxcaryn":4,"-":49}},{"path":"docs/AboutUs.adoc","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"\u003d About Us"},{"lineNumber":2,"author":{"gitID":"-"},"content":":relfileprefix: team/"},{"lineNumber":3,"author":{"gitID":"-"},"content":":imagesDir: images"},{"lineNumber":4,"author":{"gitID":"-"},"content":":stylesDir: stylesheets"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"koo1993"},"content":"PTMan was developed by the CS2103T AY17/18 W14-B2 Team."},{"lineNumber":7,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"We are a team based in the http://www.comp.nus.edu.sg[School of Computing, National University of Singapore]."},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"\u003d\u003d Project Team"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Shannon Wong"},{"lineNumber":13,"author":{"gitID":"-"},"content":"image::shanwpf.jpg[width\u003d\"150\", align\u003d\"left\"]"},{"lineNumber":14,"author":{"gitID":"-"},"content":"{empty}[https://github.com/shanwpf[github]] [\u003c\u003cshanwpf#, portfolio\u003e\u003e]"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"Role: Developer + Team Lead +"},{"lineNumber":17,"author":{"gitID":"-"},"content":"Responsibilities: Logic Component + Deliverables and Deadlines + Documentation"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"\u0027\u0027\u0027"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"koo1993"},"content":"\u003d\u003d\u003d Koo Chin Chye"},{"lineNumber":22,"author":{"gitID":"koo1993"},"content":"image::koo1993.jpg[width\u003d\"150\", align\u003d\"left\"]"},{"lineNumber":23,"author":{"gitID":"koo1993"},"content":"{empty}[http://github.com/koo1993[github]] [\u003c\u003ckoo1993#, portfolio\u003e\u003e]"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"koo1993"},"content":"Role: Developer +"},{"lineNumber":26,"author":{"gitID":"-"},"content":"Responsibilities: Model Component + Integration + Documentation"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"\u0027\u0027\u0027"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"koo1993"},"content":"\u003d\u003d\u003d Caryn Heng"},{"lineNumber":31,"author":{"gitID":"koo1993"},"content":"image::hzxcaryn.jpg[width\u003d\"150\", align\u003d\"left\"]"},{"lineNumber":32,"author":{"gitID":"koo1993"},"content":"{empty}[http://github.com/hzxcaryn[github]] [\u003c\u003chzxcaryn#, portfolio\u003e\u003e]"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"Role: Developer +"},{"lineNumber":35,"author":{"gitID":"-"},"content":"Responsibilities: UI Component + Integration + Documentation"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"\u0027\u0027\u0027"},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Sun Bangjie"},{"lineNumber":40,"author":{"gitID":"-"},"content":"image::SunBangjie.JPG[width\u003d\"150\", align\u003d\"left\"]"},{"lineNumber":41,"author":{"gitID":"koo1993"},"content":"{empty}[http://github.com/SunBangjie[github]] [\u003c\u003cSunBangjie#, portfolio\u003e\u003e]"},{"lineNumber":42,"author":{"gitID":"-"},"content":""},{"lineNumber":43,"author":{"gitID":"-"},"content":"Role: Developer +"},{"lineNumber":44,"author":{"gitID":"-"},"content":"Responsibilities: Storage Component + Testing + Documentation"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"\u0027\u0027\u0027"},{"lineNumber":47,"author":{"gitID":"koo1993"},"content":""}],"authorContributionMap":{"koo1993":11,"-":36}},{"path":"README.adoc","lines":[{"lineNumber":1,"author":{"gitID":"hzxcaryn"},"content":"\u003d image:docs/images/ptman_logo_readme.png[width\u003d\"400\"]"},{"lineNumber":2,"author":{"gitID":"-"},"content":"ifdef::env-github,env-browser[:relfileprefix: docs/]"},{"lineNumber":3,"author":{"gitID":"-"},"content":""},{"lineNumber":4,"author":{"gitID":"-"},"content":"https://travis-ci.org/CS2103JAN2018-W14-B2/main[image:https://travis-ci.org/CS2103JAN2018-W14-B2/main.svg?branch\u003dmaster[Build Status]]"},{"lineNumber":5,"author":{"gitID":"-"},"content":"https://coveralls.io/repos/github/CS2103JAN2018-W14-B2/main?branch\u003dmaster[image:https://coveralls.io/repos/github/CS2103JAN2018-W14-B2/main/badge.svg?branch\u003dmaster[Coverage Status]]"},{"lineNumber":6,"author":{"gitID":"-"},"content":"https://www.codacy.com/app/shanwpf/main?utm_source\u003dgithub.com\u0026utm_medium\u003dreferral\u0026utm_content\u003dCS2103JAN2018-W14-B2/main\u0026utm_campaign\u003dBadge_Grade[image:https://api.codacy.com/project/badge/Grade/fb966d43886f4005981c9f75ad27c3e2[Codacy Badge]]"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"ifdef::env-github[]"},{"lineNumber":9,"author":{"gitID":"-"},"content":"image::docs/images/Ui.png[width\u003d\"600\"]"},{"lineNumber":10,"author":{"gitID":"-"},"content":"endif::[]"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"ifndef::env-github[]"},{"lineNumber":13,"author":{"gitID":"-"},"content":"image::images/Ui.png[width\u003d\"600\"]"},{"lineNumber":14,"author":{"gitID":"-"},"content":"endif::[]"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"* This is a desktop application for both part-time employers and employees. It has a GUI but most of the user interactions happen using a CLI (Command Line Interface)."},{"lineNumber":17,"author":{"gitID":"-"},"content":"* For employers:"},{"lineNumber":18,"author":{"gitID":"-"},"content":". Provides easy management of employees."},{"lineNumber":19,"author":{"gitID":"-"},"content":". Indicate time slots where manpower is required."},{"lineNumber":20,"author":{"gitID":"-"},"content":"* For employees:"},{"lineNumber":21,"author":{"gitID":"-"},"content":". View the available working time slots through the timetable."},{"lineNumber":22,"author":{"gitID":"-"},"content":". Register for preferred time slots that you want to work at."},{"lineNumber":23,"author":{"gitID":"-"},"content":"* A sophisticated GUI that includes a list panel and an in-built timetable."},{"lineNumber":24,"author":{"gitID":"-"},"content":"* More test cases, including automated GUI testing."},{"lineNumber":25,"author":{"gitID":"-"},"content":"* Support for _Build Automation_ using Gradle and for _Continuous Integration_ using Travis CI."},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":"\u003d\u003d Site Map"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"* \u003c\u003cUserGuide#, User Guide\u003e\u003e"},{"lineNumber":30,"author":{"gitID":"-"},"content":"* \u003c\u003cDeveloperGuide#, Developer Guide\u003e\u003e"},{"lineNumber":31,"author":{"gitID":"-"},"content":"* \u003c\u003cAboutUs#, About Us\u003e\u003e"},{"lineNumber":32,"author":{"gitID":"-"},"content":"* \u003c\u003cContactUs#, Contact Us\u003e\u003e"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"\u003d\u003d Acknowledgements"},{"lineNumber":35,"author":{"gitID":"-"},"content":""},{"lineNumber":36,"author":{"gitID":"-"},"content":"* Some parts of this application were inspired by the excellent http://code.makery.ch/library/javafx-8-tutorial/[Java FX tutorial] by"},{"lineNumber":37,"author":{"gitID":"-"},"content":"_Marco Jakob_."},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"-"},"content":"* AddressBook-Level4 project created by https://github.com/nus-cs2103-AY1718S2/addressbook-level4[SE-EDU] initiative"},{"lineNumber":40,"author":{"gitID":"-"},"content":""},{"lineNumber":41,"author":{"gitID":"-"},"content":"* Libraries used: https://github.com/TomasMikula/EasyBind[EasyBind], https://github.com/TestFX/TestFX[TextFX], https://bitbucket.org/controlsfx/controlsfx/[ControlsFX], https://github.com/FasterXML/jackson[Jackson], https://github.com/google/guava[Guava], https://github.com/junit-team/junit4[JUnit4], https://github.com/dlemmermann/CalendarFX[CalendarFX]"},{"lineNumber":42,"author":{"gitID":"-"},"content":""},{"lineNumber":43,"author":{"gitID":"-"},"content":"\u003d\u003d Licence : link:LICENSE[MIT]"}],"authorContributionMap":{"hzxcaryn":1,"-":42}},{"path":"src/test/java/systemtests/ClearCommandSystemTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.DEFAULT_PASSWORD;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_PASSWORD;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.KEYWORD_MATCHING_MEIER;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.index.Index;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.ClearCommand;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.LogInAdminCommand;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.RedoCommand;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.UndoCommand;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Model;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.ptman.model.ModelManager;"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"public class ClearCommandSystemTest extends PartTimeManagerSystemTest {"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":21,"author":{"gitID":"-"},"content":"    public void clear() {"},{"lineNumber":22,"author":{"gitID":"-"},"content":"        final Model defaultModel \u003d getModel();"},{"lineNumber":23,"author":{"gitID":"-"},"content":"        executeDefaultAdminLogin();"},{"lineNumber":24,"author":{"gitID":"-"},"content":"        /* Case: clear non-empty ptman book, command with leading spaces and trailing alphanumeric characters and"},{"lineNumber":25,"author":{"gitID":"-"},"content":"         * spaces -\u003e cleared"},{"lineNumber":26,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":27,"author":{"gitID":"-"},"content":"        assertCommandSuccess(\"   \" + ClearCommand.COMMAND_WORD + \" ab12   \");"},{"lineNumber":28,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"-"},"content":"        /* Case: undo clearing ptman book -\u003e original ptman book restored */"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        String command \u003d UndoCommand.COMMAND_WORD;"},{"lineNumber":32,"author":{"gitID":"-"},"content":"        String expectedResultMessage \u003d UndoCommand.MESSAGE_SUCCESS;"},{"lineNumber":33,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command,  expectedResultMessage, defaultModel);"},{"lineNumber":34,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":35,"author":{"gitID":"-"},"content":""},{"lineNumber":36,"author":{"gitID":"-"},"content":"        /* Case: redo clearing ptman book -\u003e cleared */"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        command \u003d RedoCommand.COMMAND_WORD;"},{"lineNumber":38,"author":{"gitID":"-"},"content":"        expectedResultMessage \u003d RedoCommand.MESSAGE_SUCCESS;"},{"lineNumber":39,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedResultMessage, new ModelManager());"},{"lineNumber":40,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":41,"author":{"gitID":"-"},"content":""},{"lineNumber":42,"author":{"gitID":"-"},"content":"        /* Case: selects first card in employee list and clears ptman book -\u003e cleared and no card selected */"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        executeCommand(UndoCommand.COMMAND_WORD); // restores the original ptman book"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        selectEmployee(Index.fromOneBased(1));"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        assertCommandSuccess(ClearCommand.COMMAND_WORD);"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        assertSelectedCardDeselected();"},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":"        /* Case: filters the employee list before clearing -\u003e entire ptman book cleared */"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        executeCommand(UndoCommand.COMMAND_WORD); // restores the original ptman book"},{"lineNumber":50,"author":{"gitID":"-"},"content":"        showEmployeesWithName(KEYWORD_MATCHING_MEIER);"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        assertCommandSuccess(ClearCommand.COMMAND_WORD);"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"        /* Case: clear empty ptman book -\u003e cleared */"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        assertCommandSuccess(ClearCommand.COMMAND_WORD);"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":57,"author":{"gitID":"-"},"content":""},{"lineNumber":58,"author":{"gitID":"-"},"content":"        /* Case: mixed case command word -\u003e rejected */"},{"lineNumber":59,"author":{"gitID":"-"},"content":"        assertCommandFailure(\"ClEaR\", MESSAGE_UNKNOWN_COMMAND);"},{"lineNumber":60,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":61,"author":{"gitID":"-"},"content":""},{"lineNumber":62,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":63,"author":{"gitID":"-"},"content":"     * Executes {@code command} and verifies that the command box displays an empty string, the result display"},{"lineNumber":64,"author":{"gitID":"-"},"content":"     * box displays {@code ClearCommand#MESSAGE_SUCCESS} and the model related components equal to an empty model."},{"lineNumber":65,"author":{"gitID":"-"},"content":"     * These verifications are done by"},{"lineNumber":66,"author":{"gitID":"-"},"content":"     * {@code PartTimeManagerSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"},{"lineNumber":67,"author":{"gitID":"-"},"content":"     * Also verifies that the command box has the default style class and the status bar\u0027s sync status changes."},{"lineNumber":68,"author":{"gitID":"-"},"content":"     * @see PartTimeManagerSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":69,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":70,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(String command) {"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, ClearCommand.MESSAGE_SUCCESS, new ModelManager());"},{"lineNumber":72,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"-"},"content":""},{"lineNumber":74,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":75,"author":{"gitID":"-"},"content":"     * Performs the same verification as {@code assertCommandSuccess(String)} except that the result box displays"},{"lineNumber":76,"author":{"gitID":"-"},"content":"     * {@code expectedResultMessage} and the model related components equal to {@code expectedModel}."},{"lineNumber":77,"author":{"gitID":"-"},"content":"     * @see ClearCommandSystemTest#assertCommandSuccess(String)"},{"lineNumber":78,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":79,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(String command, String expectedResultMessage, Model expectedModel) {"},{"lineNumber":80,"author":{"gitID":"-"},"content":"        executeCommand(command);"},{"lineNumber":81,"author":{"gitID":"-"},"content":"        assertApplicationDisplaysExpected(\"\", expectedResultMessage, expectedModel);"},{"lineNumber":82,"author":{"gitID":"-"},"content":"        assertCommandBoxShowsDefaultStyle();"},{"lineNumber":83,"author":{"gitID":"hzxcaryn"},"content":"        assertAdminModeDisplayShowsLoginStyle();"},{"lineNumber":84,"author":{"gitID":"hzxcaryn"},"content":"        assertStatusBarChangedExceptSaveLocation();"},{"lineNumber":85,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":86,"author":{"gitID":"-"},"content":""},{"lineNumber":87,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":88,"author":{"gitID":"-"},"content":"     * Perform to transform PTMan to admin mode."},{"lineNumber":89,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":90,"author":{"gitID":"-"},"content":"    private void executeDefaultAdminLogin() {"},{"lineNumber":91,"author":{"gitID":"-"},"content":"        executeCommand(LogInAdminCommand.COMMAND_WORD + \" \" + PREFIX_PASSWORD + DEFAULT_PASSWORD);"},{"lineNumber":92,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":93,"author":{"gitID":"-"},"content":""},{"lineNumber":94,"author":{"gitID":"-"},"content":""},{"lineNumber":95,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":96,"author":{"gitID":"-"},"content":"     * Executes {@code command} and verifies that the command box displays {@code command}, the result display"},{"lineNumber":97,"author":{"gitID":"-"},"content":"     * box displays {@code expectedResultMessage} and the model related components equal to the current model."},{"lineNumber":98,"author":{"gitID":"-"},"content":"     * These verifications are done by"},{"lineNumber":99,"author":{"gitID":"-"},"content":"     * {@code PartTimeManagerSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"},{"lineNumber":100,"author":{"gitID":"-"},"content":"     * Also verifies that the browser url, selected card and status bar remain unchanged, and the command box has the"},{"lineNumber":101,"author":{"gitID":"-"},"content":"     * error style."},{"lineNumber":102,"author":{"gitID":"-"},"content":"     * @see PartTimeManagerSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":103,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":104,"author":{"gitID":"-"},"content":"    private void assertCommandFailure(String command, String expectedResultMessage) {"},{"lineNumber":105,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":106,"author":{"gitID":"-"},"content":""},{"lineNumber":107,"author":{"gitID":"-"},"content":"        executeCommand(command);"},{"lineNumber":108,"author":{"gitID":"-"},"content":"        assertApplicationDisplaysExpected(command, expectedResultMessage, expectedModel);"},{"lineNumber":109,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":110,"author":{"gitID":"hzxcaryn"},"content":"        assertCommandBoxAndResultDisplayShowsErrorStyle();"},{"lineNumber":111,"author":{"gitID":"-"},"content":"        assertStatusBarUnchanged();"},{"lineNumber":112,"author":{"gitID":"-"},"content":"        assertOutletDetailsPanelUnchanged();"},{"lineNumber":113,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":114,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"hzxcaryn":3,"-":111}},{"path":"src/test/java/systemtests/DeleteCommandSystemTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.DEFAULT_PASSWORD;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.DeleteCommand.MESSAGE_DELETE_EMPLOYEE_SUCCESS;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_PASSWORD;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TestUtil.getEmployee;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TestUtil.getLastIndex;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TestUtil.getMidIndex;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.KEYWORD_MATCHING_MEIER;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_FIRST_EMPLOYEE;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.Messages;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.index.Index;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.DeleteCommand;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.LogInAdminCommand;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.RedoCommand;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.UndoCommand;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Model;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Employee;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.exceptions.EmployeeNotFoundException;"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":"public class DeleteCommandSystemTest extends PartTimeManagerSystemTest {"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    private static final String MESSAGE_INVALID_DELETE_COMMAND_FORMAT \u003d"},{"lineNumber":30,"author":{"gitID":"-"},"content":"            String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE);"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    public void delete() {"},{"lineNumber":34,"author":{"gitID":"-"},"content":"        /* ----------------- Performing delete operation while an unfiltered list is being shown -------------------- */"},{"lineNumber":35,"author":{"gitID":"-"},"content":""},{"lineNumber":36,"author":{"gitID":"-"},"content":"        /* Case: delete the first employee in the list, command with leading spaces and trailing spaces -\u003e deleted */"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":38,"author":{"gitID":"-"},"content":"        executeDefaultAdminLogin();"},{"lineNumber":39,"author":{"gitID":"-"},"content":"        String command \u003d"},{"lineNumber":40,"author":{"gitID":"-"},"content":"                \"     \" + DeleteCommand.COMMAND_WORD + \"      \" + INDEX_FIRST_EMPLOYEE.getOneBased();"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        Employee deletedEmployee \u003d removeEmployee(expectedModel, INDEX_FIRST_EMPLOYEE);"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        String expectedResultMessage \u003d String.format(MESSAGE_DELETE_EMPLOYEE_SUCCESS, deletedEmployee);"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedModel, expectedResultMessage);"},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"-"},"content":"        /* Case: delete the last employee in the list -\u003e deleted */"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        Model modelBeforeDeletingLast \u003d getModel();"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        Index lastEmployeeIndex \u003d getLastIndex(modelBeforeDeletingLast);"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        assertCommandSuccess(lastEmployeeIndex);"},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"-"},"content":"        /* Case: undo deleting the last employee in the list -\u003e last employee restored */"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        command \u003d UndoCommand.COMMAND_WORD;"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        expectedResultMessage \u003d UndoCommand.MESSAGE_SUCCESS;"},{"lineNumber":53,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, modelBeforeDeletingLast, expectedResultMessage);"},{"lineNumber":54,"author":{"gitID":"-"},"content":""},{"lineNumber":55,"author":{"gitID":"-"},"content":"        /* Case: redo deleting the last employee in the list -\u003e last employee deleted again */"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        command \u003d RedoCommand.COMMAND_WORD;"},{"lineNumber":57,"author":{"gitID":"-"},"content":"        removeEmployee(modelBeforeDeletingLast, lastEmployeeIndex);"},{"lineNumber":58,"author":{"gitID":"-"},"content":"        expectedResultMessage \u003d RedoCommand.MESSAGE_SUCCESS;"},{"lineNumber":59,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, modelBeforeDeletingLast, expectedResultMessage);"},{"lineNumber":60,"author":{"gitID":"-"},"content":""},{"lineNumber":61,"author":{"gitID":"-"},"content":"        /* Case: delete the middle employee in the list -\u003e deleted */"},{"lineNumber":62,"author":{"gitID":"-"},"content":"        Index middleEmployeeIndex \u003d getMidIndex(getModel());"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        assertCommandSuccess(middleEmployeeIndex);"},{"lineNumber":64,"author":{"gitID":"-"},"content":""},{"lineNumber":65,"author":{"gitID":"-"},"content":"        /* ------------------ Performing delete operation while a filtered list is being shown ---------------------- */"},{"lineNumber":66,"author":{"gitID":"-"},"content":""},{"lineNumber":67,"author":{"gitID":"-"},"content":"        /* Case: filtered employee list, delete index within bounds of ptman book and employee list -\u003e deleted */"},{"lineNumber":68,"author":{"gitID":"-"},"content":"        showEmployeesWithName(KEYWORD_MATCHING_MEIER);"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        Index index \u003d INDEX_FIRST_EMPLOYEE;"},{"lineNumber":70,"author":{"gitID":"-"},"content":"        assertTrue(index.getZeroBased() \u003c getModel().getFilteredEmployeeList().size());"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        assertCommandSuccess(index);"},{"lineNumber":72,"author":{"gitID":"-"},"content":""},{"lineNumber":73,"author":{"gitID":"-"},"content":"        /* Case: filtered employee list, delete index within bounds of ptman book but out of bounds of employee list"},{"lineNumber":74,"author":{"gitID":"-"},"content":"         * -\u003e rejected"},{"lineNumber":75,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":76,"author":{"gitID":"-"},"content":"        showEmployeesWithName(KEYWORD_MATCHING_MEIER);"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        int invalidIndex \u003d getModel().getPartTimeManager().getEmployeeList().size();"},{"lineNumber":78,"author":{"gitID":"-"},"content":"        command \u003d DeleteCommand.COMMAND_WORD + \" \" + invalidIndex;"},{"lineNumber":79,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX);"},{"lineNumber":80,"author":{"gitID":"-"},"content":""},{"lineNumber":81,"author":{"gitID":"-"},"content":"        /* ------------------- Performing delete operation while a employee card is selected ---------------------- */"},{"lineNumber":82,"author":{"gitID":"-"},"content":""},{"lineNumber":83,"author":{"gitID":"-"},"content":"        /* Case: delete the selected employee -\u003e employee list panel selects the employee before the deleted employee */"},{"lineNumber":84,"author":{"gitID":"-"},"content":"        showAllEmployees();"},{"lineNumber":85,"author":{"gitID":"-"},"content":"        expectedModel \u003d getModel();"},{"lineNumber":86,"author":{"gitID":"-"},"content":"        Index selectedIndex \u003d getLastIndex(expectedModel);"},{"lineNumber":87,"author":{"gitID":"-"},"content":"        Index expectedIndex \u003d Index.fromZeroBased(selectedIndex.getZeroBased() - 1);"},{"lineNumber":88,"author":{"gitID":"-"},"content":"        selectEmployee(selectedIndex);"},{"lineNumber":89,"author":{"gitID":"-"},"content":"        command \u003d DeleteCommand.COMMAND_WORD + \" \" + selectedIndex.getOneBased();"},{"lineNumber":90,"author":{"gitID":"-"},"content":"        deletedEmployee \u003d removeEmployee(expectedModel, selectedIndex);"},{"lineNumber":91,"author":{"gitID":"-"},"content":"        expectedResultMessage \u003d String.format(MESSAGE_DELETE_EMPLOYEE_SUCCESS, deletedEmployee);"},{"lineNumber":92,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedModel, expectedResultMessage, expectedIndex);"},{"lineNumber":93,"author":{"gitID":"-"},"content":""},{"lineNumber":94,"author":{"gitID":"-"},"content":"        /* --------------------------------- Performing invalid delete operation ------------------------------------ */"},{"lineNumber":95,"author":{"gitID":"-"},"content":""},{"lineNumber":96,"author":{"gitID":"-"},"content":"        /* Case: invalid index (0) -\u003e rejected */"},{"lineNumber":97,"author":{"gitID":"-"},"content":"        command \u003d DeleteCommand.COMMAND_WORD + \" 0 \";"},{"lineNumber":98,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, MESSAGE_INVALID_DELETE_COMMAND_FORMAT);"},{"lineNumber":99,"author":{"gitID":"-"},"content":""},{"lineNumber":100,"author":{"gitID":"-"},"content":"        /* Case: invalid index (-1) -\u003e rejected */"},{"lineNumber":101,"author":{"gitID":"-"},"content":"        command \u003d DeleteCommand.COMMAND_WORD + \" -1 \";"},{"lineNumber":102,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, MESSAGE_INVALID_DELETE_COMMAND_FORMAT);"},{"lineNumber":103,"author":{"gitID":"-"},"content":""},{"lineNumber":104,"author":{"gitID":"-"},"content":"        /* Case: invalid index (size + 1) -\u003e rejected */"},{"lineNumber":105,"author":{"gitID":"-"},"content":"        Index outOfBoundsIndex \u003d Index.fromOneBased("},{"lineNumber":106,"author":{"gitID":"-"},"content":"                getModel().getPartTimeManager().getEmployeeList().size() + 1);"},{"lineNumber":107,"author":{"gitID":"-"},"content":"        command \u003d DeleteCommand.COMMAND_WORD + \" \" + outOfBoundsIndex.getOneBased();"},{"lineNumber":108,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX);"},{"lineNumber":109,"author":{"gitID":"-"},"content":""},{"lineNumber":110,"author":{"gitID":"-"},"content":"        /* Case: invalid arguments (alphabets) -\u003e rejected */"},{"lineNumber":111,"author":{"gitID":"-"},"content":"        assertCommandFailure(DeleteCommand.COMMAND_WORD + \" abc\", MESSAGE_INVALID_DELETE_COMMAND_FORMAT);"},{"lineNumber":112,"author":{"gitID":"-"},"content":""},{"lineNumber":113,"author":{"gitID":"-"},"content":"        /* Case: invalid arguments (extra argument) -\u003e rejected */"},{"lineNumber":114,"author":{"gitID":"-"},"content":"        assertCommandFailure(DeleteCommand.COMMAND_WORD + \" 1 abc\", MESSAGE_INVALID_DELETE_COMMAND_FORMAT);"},{"lineNumber":115,"author":{"gitID":"-"},"content":""},{"lineNumber":116,"author":{"gitID":"-"},"content":"        /* Case: mixed case command word -\u003e rejected */"},{"lineNumber":117,"author":{"gitID":"-"},"content":"        assertCommandFailure(\"DelETE 1\", MESSAGE_UNKNOWN_COMMAND);"},{"lineNumber":118,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":119,"author":{"gitID":"-"},"content":""},{"lineNumber":120,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":121,"author":{"gitID":"-"},"content":"     * Removes the {@code Employee} at the specified {@code index} in {@code model}\u0027s ptman book."},{"lineNumber":122,"author":{"gitID":"-"},"content":"     * @return the removed employee"},{"lineNumber":123,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":124,"author":{"gitID":"-"},"content":"    private Employee removeEmployee(Model model, Index index) {"},{"lineNumber":125,"author":{"gitID":"-"},"content":"        Employee targetEmployee \u003d getEmployee(model, index);"},{"lineNumber":126,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":127,"author":{"gitID":"-"},"content":"            model.deleteEmployee(targetEmployee);"},{"lineNumber":128,"author":{"gitID":"-"},"content":"        } catch (EmployeeNotFoundException pnfe) {"},{"lineNumber":129,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"targetEmployee is retrieved from model.\");"},{"lineNumber":130,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":131,"author":{"gitID":"-"},"content":"        return targetEmployee;"},{"lineNumber":132,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":133,"author":{"gitID":"-"},"content":""},{"lineNumber":134,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":135,"author":{"gitID":"-"},"content":"     * Deletes the employee at {@code toDelete} by creating a default {@code DeleteCommand} using {@code toDelete} and"},{"lineNumber":136,"author":{"gitID":"-"},"content":"     * performs the same verification as {@code assertCommandSuccess(String, Model, String)}."},{"lineNumber":137,"author":{"gitID":"-"},"content":"     * @see DeleteCommandSystemTest#assertCommandSuccess(String, Model, String)"},{"lineNumber":138,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":139,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(Index toDelete) {"},{"lineNumber":140,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":141,"author":{"gitID":"-"},"content":"        Employee deletedEmployee \u003d removeEmployee(expectedModel, toDelete);"},{"lineNumber":142,"author":{"gitID":"-"},"content":"        String expectedResultMessage \u003d String.format(MESSAGE_DELETE_EMPLOYEE_SUCCESS, deletedEmployee);"},{"lineNumber":143,"author":{"gitID":"-"},"content":""},{"lineNumber":144,"author":{"gitID":"-"},"content":"        assertCommandSuccess(DeleteCommand.COMMAND_WORD + \" \" + toDelete.getOneBased(),"},{"lineNumber":145,"author":{"gitID":"-"},"content":"                expectedModel, expectedResultMessage);"},{"lineNumber":146,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":147,"author":{"gitID":"-"},"content":""},{"lineNumber":148,"author":{"gitID":"-"},"content":""},{"lineNumber":149,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":150,"author":{"gitID":"-"},"content":"     * Executes {@code command} and in addition,\u003cbr\u003e"},{"lineNumber":151,"author":{"gitID":"-"},"content":"     * 1. Asserts that the command box displays an empty string.\u003cbr\u003e"},{"lineNumber":152,"author":{"gitID":"-"},"content":"     * 2. Asserts that the result display box displays {@code expectedResultMessage}.\u003cbr\u003e"},{"lineNumber":153,"author":{"gitID":"-"},"content":"     * 3. Asserts that the model related components equal to {@code expectedModel}.\u003cbr\u003e"},{"lineNumber":154,"author":{"gitID":"-"},"content":"     * 4. Asserts that the browser url and selected card remains unchanged.\u003cbr\u003e"},{"lineNumber":155,"author":{"gitID":"-"},"content":"     * 5. Asserts that the status bar\u0027s sync status changes.\u003cbr\u003e"},{"lineNumber":156,"author":{"gitID":"-"},"content":"     * 6. Asserts that the command box has the default style class.\u003cbr\u003e"},{"lineNumber":157,"author":{"gitID":"-"},"content":"     * Verifications 1 to 3 are performed by"},{"lineNumber":158,"author":{"gitID":"-"},"content":"     * {@code PartTimeManagerSystemTest#assertApplicationDisplaysExpected(String, String, Model)}."},{"lineNumber":159,"author":{"gitID":"-"},"content":"     * @see PartTimeManagerSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":160,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":161,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(String command, Model expectedModel, String expectedResultMessage) {"},{"lineNumber":162,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedModel, expectedResultMessage, null);"},{"lineNumber":163,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":164,"author":{"gitID":"-"},"content":""},{"lineNumber":165,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":166,"author":{"gitID":"-"},"content":"     * Performs the same verification as {@code assertCommandSuccess(String, Model, String)} except that the browser url"},{"lineNumber":167,"author":{"gitID":"-"},"content":"     * and selected card are expected to update accordingly depending on the card at {@code expectedSelectedCardIndex}."},{"lineNumber":168,"author":{"gitID":"-"},"content":"     * @see DeleteCommandSystemTest#assertCommandSuccess(String, Model, String)"},{"lineNumber":169,"author":{"gitID":"-"},"content":"     * @see PartTimeManagerSystemTest#assertSelectedCardChanged(Index)"},{"lineNumber":170,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":171,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(String command, Model expectedModel, String expectedResultMessage,"},{"lineNumber":172,"author":{"gitID":"-"},"content":"            Index expectedSelectedCardIndex) {"},{"lineNumber":173,"author":{"gitID":"-"},"content":"        executeCommand(command);"},{"lineNumber":174,"author":{"gitID":"-"},"content":"        assertApplicationDisplaysExpected(\"\", expectedResultMessage, expectedModel);"},{"lineNumber":175,"author":{"gitID":"-"},"content":""},{"lineNumber":176,"author":{"gitID":"-"},"content":"        if (expectedSelectedCardIndex !\u003d null) {"},{"lineNumber":177,"author":{"gitID":"-"},"content":"            assertSelectedCardChanged(expectedSelectedCardIndex);"},{"lineNumber":178,"author":{"gitID":"-"},"content":"        } else {"},{"lineNumber":179,"author":{"gitID":"-"},"content":"            assertSelectedCardUnchanged();"},{"lineNumber":180,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":181,"author":{"gitID":"-"},"content":""},{"lineNumber":182,"author":{"gitID":"-"},"content":"        assertCommandBoxShowsDefaultStyle();"},{"lineNumber":183,"author":{"gitID":"hzxcaryn"},"content":"        assertAdminModeDisplayShowsLoginStyle();"},{"lineNumber":184,"author":{"gitID":"hzxcaryn"},"content":"        assertStatusBarChangedExceptSaveLocation();"},{"lineNumber":185,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":186,"author":{"gitID":"-"},"content":""},{"lineNumber":187,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":188,"author":{"gitID":"-"},"content":"     * Perform to transform PTMan to admin mode."},{"lineNumber":189,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":190,"author":{"gitID":"-"},"content":"    private void executeDefaultAdminLogin() {"},{"lineNumber":191,"author":{"gitID":"-"},"content":"        executeCommand(LogInAdminCommand.COMMAND_WORD + \" \" + PREFIX_PASSWORD + DEFAULT_PASSWORD);"},{"lineNumber":192,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":193,"author":{"gitID":"-"},"content":""},{"lineNumber":194,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":195,"author":{"gitID":"-"},"content":"     * Executes {@code command} and in addition,\u003cbr\u003e"},{"lineNumber":196,"author":{"gitID":"-"},"content":"     * 1. Asserts that the command box displays {@code command}.\u003cbr\u003e"},{"lineNumber":197,"author":{"gitID":"-"},"content":"     * 2. Asserts that result display box displays {@code expectedResultMessage}.\u003cbr\u003e"},{"lineNumber":198,"author":{"gitID":"-"},"content":"     * 3. Asserts that the model related components equal to the current model.\u003cbr\u003e"},{"lineNumber":199,"author":{"gitID":"-"},"content":"     * 4. Asserts that the browser url, selected card and status bar remain unchanged.\u003cbr\u003e"},{"lineNumber":200,"author":{"gitID":"-"},"content":"     * 5. Asserts that the command box has the error style.\u003cbr\u003e"},{"lineNumber":201,"author":{"gitID":"-"},"content":"     * Verifications 1 to 3 are performed by"},{"lineNumber":202,"author":{"gitID":"-"},"content":"     * {@code PartTimeManagerSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"},{"lineNumber":203,"author":{"gitID":"-"},"content":"     * @see PartTimeManagerSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":204,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":205,"author":{"gitID":"-"},"content":"    private void assertCommandFailure(String command, String expectedResultMessage) {"},{"lineNumber":206,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":207,"author":{"gitID":"-"},"content":""},{"lineNumber":208,"author":{"gitID":"-"},"content":"        executeCommand(command);"},{"lineNumber":209,"author":{"gitID":"-"},"content":"        assertApplicationDisplaysExpected(command, expectedResultMessage, expectedModel);"},{"lineNumber":210,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":211,"author":{"gitID":"hzxcaryn"},"content":"        assertCommandBoxAndResultDisplayShowsErrorStyle();"},{"lineNumber":212,"author":{"gitID":"-"},"content":"        assertStatusBarUnchanged();"},{"lineNumber":213,"author":{"gitID":"-"},"content":"        assertOutletDetailsPanelUnchanged();"},{"lineNumber":214,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":215,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"hzxcaryn":3,"-":212}},{"path":"src/test/java/systemtests/AddCommandSystemTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.DEFAULT_PASSWORD;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.INVALID_NAME_DESC;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.INVALID_SALARY_DESC;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.INVALID_TAG_DESC;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.NAME_DESC_AMY;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.NAME_DESC_BOB;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.PHONE_DESC_AMY;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.PHONE_DESC_BOB;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.SALARY_DESC_AMY;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.SALARY_DESC_BOB;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.VALID_NAME_AMY;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.VALID_NAME_BOB;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.VALID_PHONE_AMY;"},{"lineNumber":30,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.VALID_PHONE_BOB;"},{"lineNumber":31,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.VALID_SALARY_AMY;"},{"lineNumber":32,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.VALID_SALARY_BOB;"},{"lineNumber":33,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;"},{"lineNumber":34,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_PASSWORD;"},{"lineNumber":35,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_TAG;"},{"lineNumber":36,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.ALICE;"},{"lineNumber":37,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.AMY;"},{"lineNumber":38,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.BOB;"},{"lineNumber":39,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.CARL;"},{"lineNumber":40,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.HOON;"},{"lineNumber":41,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.IDA;"},{"lineNumber":42,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.KEYWORD_MATCHING_MEIER;"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.Messages;"},{"lineNumber":47,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.index.Index;"},{"lineNumber":48,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.AddCommand;"},{"lineNumber":49,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.LogInAdminCommand;"},{"lineNumber":50,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.RedoCommand;"},{"lineNumber":51,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.UndoCommand;"},{"lineNumber":52,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Model;"},{"lineNumber":53,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Address;"},{"lineNumber":54,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Email;"},{"lineNumber":55,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Employee;"},{"lineNumber":56,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Name;"},{"lineNumber":57,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Phone;"},{"lineNumber":58,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Salary;"},{"lineNumber":59,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.exceptions.DuplicateEmployeeException;"},{"lineNumber":60,"author":{"gitID":"-"},"content":"import seedu.ptman.model.tag.Tag;"},{"lineNumber":61,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.EmployeeBuilder;"},{"lineNumber":62,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.EmployeeUtil;"},{"lineNumber":63,"author":{"gitID":"-"},"content":""},{"lineNumber":64,"author":{"gitID":"-"},"content":"public class AddCommandSystemTest extends PartTimeManagerSystemTest {"},{"lineNumber":65,"author":{"gitID":"-"},"content":""},{"lineNumber":66,"author":{"gitID":"-"},"content":""},{"lineNumber":67,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":68,"author":{"gitID":"-"},"content":"    public void add() throws Exception {"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        Model model \u003d getModel();"},{"lineNumber":70,"author":{"gitID":"-"},"content":"        executeDefaultAdminLogin();"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        /* ------------------------ Perform add operations on the shown unfiltered list ----------------------------- */"},{"lineNumber":72,"author":{"gitID":"-"},"content":""},{"lineNumber":73,"author":{"gitID":"-"},"content":"        /* Case: add a employee without tags to a non-empty ptman book, command with leading spaces and trailing spaces"},{"lineNumber":74,"author":{"gitID":"-"},"content":"         * -\u003e added"},{"lineNumber":75,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":76,"author":{"gitID":"-"},"content":"        Employee toAdd \u003d AMY;"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        String command \u003d \"   \" + AddCommand.COMMAND_WORD + \"  \" + NAME_DESC_AMY + \"  \" + PHONE_DESC_AMY + \" \""},{"lineNumber":78,"author":{"gitID":"-"},"content":"                + EMAIL_DESC_AMY + \"   \" + ADDRESS_DESC_AMY + \" \" + SALARY_DESC_AMY + \"   \" + TAG_DESC_FRIEND;"},{"lineNumber":79,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, toAdd);"},{"lineNumber":80,"author":{"gitID":"-"},"content":""},{"lineNumber":81,"author":{"gitID":"-"},"content":"        /* Case: undo adding Amy to the list -\u003e Amy deleted */"},{"lineNumber":82,"author":{"gitID":"-"},"content":"        command \u003d UndoCommand.COMMAND_WORD + \" \";"},{"lineNumber":83,"author":{"gitID":"-"},"content":"        String expectedResultMessage \u003d UndoCommand.MESSAGE_SUCCESS;"},{"lineNumber":84,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, model, expectedResultMessage);"},{"lineNumber":85,"author":{"gitID":"-"},"content":""},{"lineNumber":86,"author":{"gitID":"-"},"content":"        /* Case: redo adding Amy to the list -\u003e Amy added again */"},{"lineNumber":87,"author":{"gitID":"-"},"content":"        command \u003d RedoCommand.COMMAND_WORD + \" \";"},{"lineNumber":88,"author":{"gitID":"-"},"content":"        model.addEmployee(toAdd);"},{"lineNumber":89,"author":{"gitID":"-"},"content":"        expectedResultMessage \u003d RedoCommand.MESSAGE_SUCCESS;"},{"lineNumber":90,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, model, expectedResultMessage);"},{"lineNumber":91,"author":{"gitID":"-"},"content":""},{"lineNumber":92,"author":{"gitID":"-"},"content":"        /* Case: add a employee with all fields same as another employee in PTMan except name -\u003e added */"},{"lineNumber":93,"author":{"gitID":"-"},"content":"        toAdd \u003d new EmployeeBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)"},{"lineNumber":94,"author":{"gitID":"-"},"content":"                .withAddress(VALID_ADDRESS_AMY).withSalary(VALID_SALARY_AMY).withTags(VALID_TAG_FRIEND).build();"},{"lineNumber":95,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_BOB + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY"},{"lineNumber":96,"author":{"gitID":"-"},"content":"                + SALARY_DESC_AMY + TAG_DESC_FRIEND;"},{"lineNumber":97,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, toAdd);"},{"lineNumber":98,"author":{"gitID":"-"},"content":""},{"lineNumber":99,"author":{"gitID":"-"},"content":"        /* Case: add a employee with all fields same as another employee in PTMan except phone -\u003e added */"},{"lineNumber":100,"author":{"gitID":"-"},"content":"        toAdd \u003d new EmployeeBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY)"},{"lineNumber":101,"author":{"gitID":"-"},"content":"                .withAddress(VALID_ADDRESS_AMY).withSalary(VALID_SALARY_AMY).withTags(VALID_TAG_FRIEND).build();"},{"lineNumber":102,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_AMY + ADDRESS_DESC_AMY"},{"lineNumber":103,"author":{"gitID":"-"},"content":"                + SALARY_DESC_AMY + TAG_DESC_FRIEND;"},{"lineNumber":104,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, toAdd);"},{"lineNumber":105,"author":{"gitID":"-"},"content":""},{"lineNumber":106,"author":{"gitID":"-"},"content":"        /* Case: add a employee with all fields same as another employee in PTMan except email -\u003e added */"},{"lineNumber":107,"author":{"gitID":"-"},"content":"        toAdd \u003d new EmployeeBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_BOB)"},{"lineNumber":108,"author":{"gitID":"-"},"content":"                .withAddress(VALID_ADDRESS_AMY).withSalary(VALID_SALARY_AMY).withTags(VALID_TAG_FRIEND).build();"},{"lineNumber":109,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_BOB + ADDRESS_DESC_AMY"},{"lineNumber":110,"author":{"gitID":"-"},"content":"                + SALARY_DESC_AMY + TAG_DESC_FRIEND;"},{"lineNumber":111,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, toAdd);"},{"lineNumber":112,"author":{"gitID":"-"},"content":""},{"lineNumber":113,"author":{"gitID":"-"},"content":"        /* Case: add a employee with all fields same as another employee in PTMan except address -\u003e added */"},{"lineNumber":114,"author":{"gitID":"-"},"content":"        toAdd \u003d new EmployeeBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)"},{"lineNumber":115,"author":{"gitID":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withSalary(VALID_SALARY_AMY).withTags(VALID_TAG_FRIEND).build();"},{"lineNumber":116,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_BOB"},{"lineNumber":117,"author":{"gitID":"-"},"content":"                + SALARY_DESC_AMY + TAG_DESC_FRIEND;"},{"lineNumber":118,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, toAdd);"},{"lineNumber":119,"author":{"gitID":"-"},"content":""},{"lineNumber":120,"author":{"gitID":"-"},"content":"        /* Case: add a employee with all fields same as another employee in PTMan except salary -\u003e added */"},{"lineNumber":121,"author":{"gitID":"-"},"content":"        toAdd \u003d new EmployeeBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)"},{"lineNumber":122,"author":{"gitID":"-"},"content":"                .withAddress(VALID_ADDRESS_AMY).withSalary(VALID_SALARY_BOB).withTags(VALID_TAG_FRIEND).build();"},{"lineNumber":123,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY"},{"lineNumber":124,"author":{"gitID":"-"},"content":"                + SALARY_DESC_BOB + TAG_DESC_FRIEND;"},{"lineNumber":125,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, toAdd);"},{"lineNumber":126,"author":{"gitID":"-"},"content":""},{"lineNumber":127,"author":{"gitID":"-"},"content":"        /* Case: add to empty ptman book -\u003e added */"},{"lineNumber":128,"author":{"gitID":"-"},"content":"        deleteAllEmployees();"},{"lineNumber":129,"author":{"gitID":"-"},"content":"        assertCommandSuccess(ALICE);"},{"lineNumber":130,"author":{"gitID":"-"},"content":""},{"lineNumber":131,"author":{"gitID":"-"},"content":"        /* Case: add a employee with tags, command with parameters in random order -\u003e added */"},{"lineNumber":132,"author":{"gitID":"-"},"content":"        toAdd \u003d BOB;"},{"lineNumber":133,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + TAG_DESC_FRIEND + PHONE_DESC_BOB + ADDRESS_DESC_BOB + NAME_DESC_BOB"},{"lineNumber":134,"author":{"gitID":"-"},"content":"                + SALARY_DESC_BOB + TAG_DESC_HUSBAND + EMAIL_DESC_BOB;"},{"lineNumber":135,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, toAdd);"},{"lineNumber":136,"author":{"gitID":"-"},"content":""},{"lineNumber":137,"author":{"gitID":"-"},"content":"        /* Case: add a employee, missing tags -\u003e added */"},{"lineNumber":138,"author":{"gitID":"-"},"content":"        assertCommandSuccess(HOON);"},{"lineNumber":139,"author":{"gitID":"-"},"content":""},{"lineNumber":140,"author":{"gitID":"-"},"content":"        /* -------------------------- Perform add operation on the shown filtered list ------------------------------ */"},{"lineNumber":141,"author":{"gitID":"-"},"content":""},{"lineNumber":142,"author":{"gitID":"-"},"content":"        /* Case: filters the employee list before adding -\u003e added */"},{"lineNumber":143,"author":{"gitID":"-"},"content":"        showEmployeesWithName(KEYWORD_MATCHING_MEIER);"},{"lineNumber":144,"author":{"gitID":"-"},"content":"        assertCommandSuccess(IDA);"},{"lineNumber":145,"author":{"gitID":"-"},"content":""},{"lineNumber":146,"author":{"gitID":"-"},"content":"        /* ---------------------- Perform add operation while a employee card is selected ------------------------- */"},{"lineNumber":147,"author":{"gitID":"-"},"content":""},{"lineNumber":148,"author":{"gitID":"-"},"content":"        /* Case: selects first card in the employee list, add a employee -\u003e added, card selection remains unchanged */"},{"lineNumber":149,"author":{"gitID":"-"},"content":"        selectEmployee(Index.fromOneBased(1));"},{"lineNumber":150,"author":{"gitID":"-"},"content":"        assertCommandSuccess(CARL);"},{"lineNumber":151,"author":{"gitID":"-"},"content":""},{"lineNumber":152,"author":{"gitID":"-"},"content":"        /* ----------------------------------- Perform invalid add operations --------------------------------------- */"},{"lineNumber":153,"author":{"gitID":"-"},"content":""},{"lineNumber":154,"author":{"gitID":"-"},"content":"        /* Case: add a duplicate employee -\u003e rejected */"},{"lineNumber":155,"author":{"gitID":"-"},"content":"        command \u003d EmployeeUtil.getAddCommand(HOON);"},{"lineNumber":156,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, AddCommand.MESSAGE_DUPLICATE_EMPLOYEE);"},{"lineNumber":157,"author":{"gitID":"-"},"content":""},{"lineNumber":158,"author":{"gitID":"-"},"content":"        /* Case: add a duplicate employee except with different tags -\u003e rejected */"},{"lineNumber":159,"author":{"gitID":"-"},"content":"        // \"friends\" is an existing tag used in the default model, see TypicalEmployees#ALICE"},{"lineNumber":160,"author":{"gitID":"-"},"content":"        // This test will fail if a new tag that is not in the model is used, see the bug documented in"},{"lineNumber":161,"author":{"gitID":"-"},"content":"        // PartTimeManager#addEmployee(Employee)"},{"lineNumber":162,"author":{"gitID":"-"},"content":"        command \u003d EmployeeUtil.getAddCommand(HOON) + \" \" + PREFIX_TAG.getPrefix() + \"friends\";"},{"lineNumber":163,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, AddCommand.MESSAGE_DUPLICATE_EMPLOYEE);"},{"lineNumber":164,"author":{"gitID":"-"},"content":""},{"lineNumber":165,"author":{"gitID":"-"},"content":"        /* Case: missing name -\u003e rejected */"},{"lineNumber":166,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + SALARY_DESC_AMY;"},{"lineNumber":167,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"},{"lineNumber":168,"author":{"gitID":"-"},"content":""},{"lineNumber":169,"author":{"gitID":"-"},"content":"        /* Case: missing phone -\u003e rejected */"},{"lineNumber":170,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + SALARY_DESC_AMY;"},{"lineNumber":171,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"},{"lineNumber":172,"author":{"gitID":"-"},"content":""},{"lineNumber":173,"author":{"gitID":"-"},"content":"        /* Case: missing email -\u003e rejected */"},{"lineNumber":174,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + ADDRESS_DESC_AMY + SALARY_DESC_AMY;"},{"lineNumber":175,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"},{"lineNumber":176,"author":{"gitID":"-"},"content":""},{"lineNumber":177,"author":{"gitID":"-"},"content":"        /* Case: missing address -\u003e rejected */"},{"lineNumber":178,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + SALARY_DESC_AMY;"},{"lineNumber":179,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"},{"lineNumber":180,"author":{"gitID":"-"},"content":""},{"lineNumber":181,"author":{"gitID":"-"},"content":"        /* Case: missing salary -\u003e rejected */"},{"lineNumber":182,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;"},{"lineNumber":183,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"},{"lineNumber":184,"author":{"gitID":"-"},"content":""},{"lineNumber":185,"author":{"gitID":"-"},"content":"        /* Case: invalid keyword -\u003e rejected */"},{"lineNumber":186,"author":{"gitID":"-"},"content":"        command \u003d \"addss \" + EmployeeUtil.getEmployeeDetails(toAdd);"},{"lineNumber":187,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, Messages.MESSAGE_UNKNOWN_COMMAND);"},{"lineNumber":188,"author":{"gitID":"-"},"content":""},{"lineNumber":189,"author":{"gitID":"-"},"content":"        /* Case: invalid name -\u003e rejected */"},{"lineNumber":190,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + INVALID_NAME_DESC + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY"},{"lineNumber":191,"author":{"gitID":"-"},"content":"                + SALARY_DESC_AMY;"},{"lineNumber":192,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, Name.MESSAGE_NAME_CONSTRAINTS);"},{"lineNumber":193,"author":{"gitID":"-"},"content":""},{"lineNumber":194,"author":{"gitID":"-"},"content":"        /* Case: invalid phone -\u003e rejected */"},{"lineNumber":195,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + INVALID_PHONE_DESC + EMAIL_DESC_AMY + ADDRESS_DESC_AMY"},{"lineNumber":196,"author":{"gitID":"-"},"content":"                + SALARY_DESC_AMY;"},{"lineNumber":197,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, Phone.MESSAGE_PHONE_CONSTRAINTS);"},{"lineNumber":198,"author":{"gitID":"-"},"content":""},{"lineNumber":199,"author":{"gitID":"-"},"content":"        /* Case: invalid email -\u003e rejected */"},{"lineNumber":200,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + INVALID_EMAIL_DESC + ADDRESS_DESC_AMY"},{"lineNumber":201,"author":{"gitID":"-"},"content":"                + SALARY_DESC_AMY;"},{"lineNumber":202,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, Email.MESSAGE_EMAIL_CONSTRAINTS);"},{"lineNumber":203,"author":{"gitID":"-"},"content":""},{"lineNumber":204,"author":{"gitID":"-"},"content":"        /* Case: invalid address -\u003e rejected */"},{"lineNumber":205,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + INVALID_ADDRESS_DESC"},{"lineNumber":206,"author":{"gitID":"-"},"content":"                + SALARY_DESC_AMY;"},{"lineNumber":207,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, Address.MESSAGE_ADDRESS_CONSTRAINTS);"},{"lineNumber":208,"author":{"gitID":"-"},"content":""},{"lineNumber":209,"author":{"gitID":"-"},"content":"        /* Case: invalid salary -\u003e rejected */"},{"lineNumber":210,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY"},{"lineNumber":211,"author":{"gitID":"-"},"content":"                + INVALID_SALARY_DESC;"},{"lineNumber":212,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, Salary.MESSAGE_SALARY_CONSTRAINTS);"},{"lineNumber":213,"author":{"gitID":"-"},"content":""},{"lineNumber":214,"author":{"gitID":"-"},"content":"        /* Case: invalid tag -\u003e rejected */"},{"lineNumber":215,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY"},{"lineNumber":216,"author":{"gitID":"-"},"content":"                + SALARY_DESC_AMY + INVALID_TAG_DESC;"},{"lineNumber":217,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, Tag.MESSAGE_TAG_CONSTRAINTS);"},{"lineNumber":218,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":219,"author":{"gitID":"-"},"content":""},{"lineNumber":220,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":221,"author":{"gitID":"-"},"content":"     * Executes the {@code AddCommand} that adds {@code toAdd} to the model and asserts that the,\u003cbr\u003e"},{"lineNumber":222,"author":{"gitID":"-"},"content":"     * 1. Command box displays an empty string.\u003cbr\u003e"},{"lineNumber":223,"author":{"gitID":"-"},"content":"     * 2. Command box has the default style class.\u003cbr\u003e"},{"lineNumber":224,"author":{"gitID":"-"},"content":"     * 3. Result display box displays the success message of executing {@code AddCommand} with the details of"},{"lineNumber":225,"author":{"gitID":"-"},"content":"     * {@code toAdd}.\u003cbr\u003e"},{"lineNumber":226,"author":{"gitID":"-"},"content":"     * 4. {@code Model}, {@code Storage} and {@code EmployeeListPanel} equal to the corresponding components in"},{"lineNumber":227,"author":{"gitID":"-"},"content":"     * the current model added with {@code toAdd}.\u003cbr\u003e"},{"lineNumber":228,"author":{"gitID":"-"},"content":"     * 5. Browser url and selected card remain unchanged.\u003cbr\u003e"},{"lineNumber":229,"author":{"gitID":"-"},"content":"     * 6. Status bar\u0027s sync status changes.\u003cbr\u003e"},{"lineNumber":230,"author":{"gitID":"-"},"content":"     * Verifications 1, 3 and 4 are performed by"},{"lineNumber":231,"author":{"gitID":"-"},"content":"     * {@code PartTimeManagerSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"},{"lineNumber":232,"author":{"gitID":"-"},"content":"     * @see PartTimeManagerSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":233,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":234,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(Employee toAdd) {"},{"lineNumber":235,"author":{"gitID":"-"},"content":"        assertCommandSuccess(EmployeeUtil.getAddCommand(toAdd), toAdd);"},{"lineNumber":236,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":237,"author":{"gitID":"-"},"content":""},{"lineNumber":238,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":239,"author":{"gitID":"-"},"content":"     * Performs the same verification as {@code assertCommandSuccess(Employee)}. Executes {@code command}"},{"lineNumber":240,"author":{"gitID":"-"},"content":"     * instead."},{"lineNumber":241,"author":{"gitID":"-"},"content":"     * @see AddCommandSystemTest#assertCommandSuccess(Employee)"},{"lineNumber":242,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":243,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(String command, Employee toAdd) {"},{"lineNumber":244,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":245,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":246,"author":{"gitID":"-"},"content":"            expectedModel.addEmployee(toAdd);"},{"lineNumber":247,"author":{"gitID":"-"},"content":"        } catch (DuplicateEmployeeException dpe) {"},{"lineNumber":248,"author":{"gitID":"-"},"content":"            throw new IllegalArgumentException(\"toAdd already exists in the model.\");"},{"lineNumber":249,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":250,"author":{"gitID":"-"},"content":"        String expectedResultMessage \u003d String.format(AddCommand.MESSAGE_SUCCESS, toAdd);"},{"lineNumber":251,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedModel, expectedResultMessage);"},{"lineNumber":252,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":253,"author":{"gitID":"-"},"content":""},{"lineNumber":254,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":255,"author":{"gitID":"-"},"content":"     * Performs the same verification as {@code assertCommandSuccess(String, Employee)} except asserts that"},{"lineNumber":256,"author":{"gitID":"-"},"content":"     * the,\u003cbr\u003e"},{"lineNumber":257,"author":{"gitID":"-"},"content":"     * 1. Result display box displays {@code expectedResultMessage}.\u003cbr\u003e"},{"lineNumber":258,"author":{"gitID":"-"},"content":"     * 2. {@code Model}, {@code Storage} and {@code EmployeeListPanel} equal to the corresponding components in"},{"lineNumber":259,"author":{"gitID":"-"},"content":"     * {@code expectedModel}.\u003cbr\u003e"},{"lineNumber":260,"author":{"gitID":"-"},"content":"     * @see AddCommandSystemTest#assertCommandSuccess(String, Employee)"},{"lineNumber":261,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":262,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(String command, Model expectedModel, String expectedResultMessage) {"},{"lineNumber":263,"author":{"gitID":"-"},"content":"        executeCommand(command);"},{"lineNumber":264,"author":{"gitID":"-"},"content":"        assertApplicationDisplaysExpected(\"\", expectedResultMessage, expectedModel);"},{"lineNumber":265,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":266,"author":{"gitID":"-"},"content":"        assertCommandBoxShowsDefaultStyle();"},{"lineNumber":267,"author":{"gitID":"hzxcaryn"},"content":"        assertStatusBarChangedExceptSaveLocation();"},{"lineNumber":268,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":269,"author":{"gitID":"-"},"content":""},{"lineNumber":270,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":271,"author":{"gitID":"-"},"content":"     * Perform to transform PTMan to admin mode."},{"lineNumber":272,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":273,"author":{"gitID":"-"},"content":"    private void executeDefaultAdminLogin() {"},{"lineNumber":274,"author":{"gitID":"-"},"content":"        executeCommand(LogInAdminCommand.COMMAND_WORD + \" \" + PREFIX_PASSWORD + DEFAULT_PASSWORD);"},{"lineNumber":275,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":276,"author":{"gitID":"-"},"content":""},{"lineNumber":277,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":278,"author":{"gitID":"-"},"content":"     * Executes {@code command} and asserts that the,\u003cbr\u003e"},{"lineNumber":279,"author":{"gitID":"-"},"content":"     * 1. Command box displays {@code command}.\u003cbr\u003e"},{"lineNumber":280,"author":{"gitID":"-"},"content":"     * 2. Command box has the error style class.\u003cbr\u003e"},{"lineNumber":281,"author":{"gitID":"-"},"content":"     * 3. Result display box displays {@code expectedResultMessage}.\u003cbr\u003e"},{"lineNumber":282,"author":{"gitID":"-"},"content":"     * 4. {@code Model}, {@code Storage} and {@code EmployeeListPanel} remain unchanged.\u003cbr\u003e"},{"lineNumber":283,"author":{"gitID":"-"},"content":"     * 5. Browser url, selected card and status bar remain unchanged.\u003cbr\u003e"},{"lineNumber":284,"author":{"gitID":"-"},"content":"     * Verifications 1, 3 and 4 are performed by"},{"lineNumber":285,"author":{"gitID":"-"},"content":"     * {@code PartTimeManagerSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"},{"lineNumber":286,"author":{"gitID":"-"},"content":"     * @see PartTimeManagerSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":287,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":288,"author":{"gitID":"-"},"content":"    private void assertCommandFailure(String command, String expectedResultMessage) {"},{"lineNumber":289,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":290,"author":{"gitID":"-"},"content":""},{"lineNumber":291,"author":{"gitID":"-"},"content":"        executeCommand(command);"},{"lineNumber":292,"author":{"gitID":"-"},"content":"        assertApplicationDisplaysExpected(command, expectedResultMessage, expectedModel);"},{"lineNumber":293,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":294,"author":{"gitID":"hzxcaryn"},"content":"        assertCommandBoxAndResultDisplayShowsErrorStyle();"},{"lineNumber":295,"author":{"gitID":"-"},"content":"        assertStatusBarUnchanged();"},{"lineNumber":296,"author":{"gitID":"-"},"content":"        assertOutletDetailsPanelUnchanged();"},{"lineNumber":297,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":298,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"hzxcaryn":2,"-":296}},{"path":"src/test/java/systemtests/FindCommandSystemTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_EMPLOYEES_LISTED_OVERVIEW;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_PASSWORD;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.EmployeeUtil.DEFAULT_PASSWORD;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.BENSON;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.CARL;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.DANIEL;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.KEYWORD_MATCHING_MEIER;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.index.Index;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.DeleteCommand;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.FindCommand;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.LogInAdminCommand;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.RedoCommand;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.UndoCommand;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Model;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.ptman.model.tag.Tag;"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":"public class FindCommandSystemTest extends PartTimeManagerSystemTest {"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    public void find() {"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        /* Case: find multiple employees in ptman book, command with leading spaces and trailing spaces"},{"lineNumber":32,"author":{"gitID":"-"},"content":"         * -\u003e 2 employees found"},{"lineNumber":33,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":34,"author":{"gitID":"-"},"content":"        String command \u003d \"   \" + FindCommand.COMMAND_WORD + \" \" + KEYWORD_MATCHING_MEIER + \"   \";"},{"lineNumber":35,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        executeDefaultAdminLogin();"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        ModelHelper.setFilteredList(expectedModel, BENSON, DANIEL); // first names of Benson and Daniel are \"Meier\""},{"lineNumber":38,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":39,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":40,"author":{"gitID":"-"},"content":""},{"lineNumber":41,"author":{"gitID":"-"},"content":"        /* Case: repeat previous find command where employee list is displaying the employees we are finding"},{"lineNumber":42,"author":{"gitID":"-"},"content":"         * -\u003e 2 employees found"},{"lineNumber":43,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" \" + KEYWORD_MATCHING_MEIER;"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":"        /* Case: find employee where employee list is not displaying the employee we are finding -\u003e 1 employee found */"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" Carl\";"},{"lineNumber":50,"author":{"gitID":"-"},"content":"        ModelHelper.setFilteredList(expectedModel, CARL);"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"        /* Case: find multiple employees in ptman book, 2 keywords -\u003e 2 employees found */"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" Benson Daniel\";"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        ModelHelper.setFilteredList(expectedModel, BENSON, DANIEL);"},{"lineNumber":57,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":58,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":59,"author":{"gitID":"-"},"content":""},{"lineNumber":60,"author":{"gitID":"-"},"content":"        /* Case: find multiple employees in ptman book, 2 keywords in reversed order -\u003e 2 employees found */"},{"lineNumber":61,"author":{"gitID":"-"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" Daniel Benson\";"},{"lineNumber":62,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":64,"author":{"gitID":"-"},"content":""},{"lineNumber":65,"author":{"gitID":"-"},"content":"        /* Case: find multiple employees in ptman book, 2 keywords with 1 repeat -\u003e 2 employees found */"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" Daniel Benson Daniel\";"},{"lineNumber":67,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":68,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":69,"author":{"gitID":"-"},"content":""},{"lineNumber":70,"author":{"gitID":"-"},"content":"        /* Case: find multiple employees in ptman book, 2 matching keywords and 1 non-matching keyword"},{"lineNumber":71,"author":{"gitID":"-"},"content":"         * -\u003e 2 employees found"},{"lineNumber":72,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":73,"author":{"gitID":"-"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" Daniel Benson NonMatchingKeyWord\";"},{"lineNumber":74,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":75,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":76,"author":{"gitID":"-"},"content":""},{"lineNumber":77,"author":{"gitID":"-"},"content":"        /* Case: undo previous find command -\u003e rejected */"},{"lineNumber":78,"author":{"gitID":"-"},"content":"        command \u003d UndoCommand.COMMAND_WORD;"},{"lineNumber":79,"author":{"gitID":"-"},"content":"        String expectedResultMessage \u003d UndoCommand.MESSAGE_FAILURE;"},{"lineNumber":80,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, expectedResultMessage);"},{"lineNumber":81,"author":{"gitID":"-"},"content":""},{"lineNumber":82,"author":{"gitID":"-"},"content":"        /* Case: redo previous find command -\u003e rejected */"},{"lineNumber":83,"author":{"gitID":"-"},"content":"        command \u003d RedoCommand.COMMAND_WORD;"},{"lineNumber":84,"author":{"gitID":"-"},"content":"        expectedResultMessage \u003d RedoCommand.MESSAGE_FAILURE;"},{"lineNumber":85,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, expectedResultMessage);"},{"lineNumber":86,"author":{"gitID":"-"},"content":""},{"lineNumber":87,"author":{"gitID":"-"},"content":"        /* Case: find same employees in ptman book after deleting 1 of them -\u003e 1 employee found */"},{"lineNumber":88,"author":{"gitID":"-"},"content":"        executeCommand(DeleteCommand.COMMAND_WORD + \" 1\");"},{"lineNumber":89,"author":{"gitID":"-"},"content":"        assertFalse(getModel().getPartTimeManager().getEmployeeList().contains(BENSON));"},{"lineNumber":90,"author":{"gitID":"-"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" \" + KEYWORD_MATCHING_MEIER;"},{"lineNumber":91,"author":{"gitID":"-"},"content":"        expectedModel \u003d getModel();"},{"lineNumber":92,"author":{"gitID":"-"},"content":"        ModelHelper.setFilteredList(expectedModel, DANIEL);"},{"lineNumber":93,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":94,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":95,"author":{"gitID":"-"},"content":""},{"lineNumber":96,"author":{"gitID":"-"},"content":"        /* Case: find employee in ptman book, keyword is same as name but of different case -\u003e 1 employee found */"},{"lineNumber":97,"author":{"gitID":"-"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" MeIeR\";"},{"lineNumber":98,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":99,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":100,"author":{"gitID":"-"},"content":""},{"lineNumber":101,"author":{"gitID":"-"},"content":"        /* Case: find employee in ptman book, keyword is substring of name -\u003e 0 employees found */"},{"lineNumber":102,"author":{"gitID":"-"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" Mei\";"},{"lineNumber":103,"author":{"gitID":"-"},"content":"        ModelHelper.setFilteredList(expectedModel);"},{"lineNumber":104,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":105,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":106,"author":{"gitID":"-"},"content":""},{"lineNumber":107,"author":{"gitID":"-"},"content":"        /* Case: find employee in ptman book, name is substring of keyword -\u003e 0 employees found */"},{"lineNumber":108,"author":{"gitID":"-"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" Meiers\";"},{"lineNumber":109,"author":{"gitID":"-"},"content":"        ModelHelper.setFilteredList(expectedModel);"},{"lineNumber":110,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":111,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":112,"author":{"gitID":"-"},"content":""},{"lineNumber":113,"author":{"gitID":"-"},"content":"        /* Case: find employee not in ptman book -\u003e 0 employees found */"},{"lineNumber":114,"author":{"gitID":"-"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" Mark\";"},{"lineNumber":115,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":116,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":117,"author":{"gitID":"-"},"content":""},{"lineNumber":118,"author":{"gitID":"-"},"content":"        /* Case: find phone number of employee in ptman book -\u003e 0 employees found */"},{"lineNumber":119,"author":{"gitID":"-"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" \" + DANIEL.getPhone().value;"},{"lineNumber":120,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":121,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":122,"author":{"gitID":"-"},"content":""},{"lineNumber":123,"author":{"gitID":"-"},"content":"        /* Case: find ptman of employee in ptman book -\u003e 0 employees found */"},{"lineNumber":124,"author":{"gitID":"-"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" \" + DANIEL.getAddress().value;"},{"lineNumber":125,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":126,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":127,"author":{"gitID":"-"},"content":""},{"lineNumber":128,"author":{"gitID":"-"},"content":"        /* Case: find email of employee in ptman book -\u003e 0 employees found */"},{"lineNumber":129,"author":{"gitID":"-"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" \" + DANIEL.getEmail().value;"},{"lineNumber":130,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":131,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":132,"author":{"gitID":"-"},"content":""},{"lineNumber":133,"author":{"gitID":"-"},"content":"        /* Case: find tags of employee in ptman book -\u003e 0 employees found */"},{"lineNumber":134,"author":{"gitID":"-"},"content":"        List\u003cTag\u003e tags \u003d new ArrayList\u003c\u003e(DANIEL.getTags());"},{"lineNumber":135,"author":{"gitID":"-"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" \" + tags.get(0).tagName;"},{"lineNumber":136,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":137,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":138,"author":{"gitID":"-"},"content":""},{"lineNumber":139,"author":{"gitID":"-"},"content":"        /* Case: find while a employee is selected -\u003e selected card deselected */"},{"lineNumber":140,"author":{"gitID":"-"},"content":"        showAllEmployees();"},{"lineNumber":141,"author":{"gitID":"-"},"content":"        selectEmployee(Index.fromOneBased(1));"},{"lineNumber":142,"author":{"gitID":"-"},"content":"        assertFalse(getEmployeeListPanel().getHandleToSelectedCard().getName().equals(DANIEL.getName().fullName));"},{"lineNumber":143,"author":{"gitID":"-"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" Daniel\";"},{"lineNumber":144,"author":{"gitID":"-"},"content":"        ModelHelper.setFilteredList(expectedModel, DANIEL);"},{"lineNumber":145,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":146,"author":{"gitID":"-"},"content":"        assertSelectedCardDeselected();"},{"lineNumber":147,"author":{"gitID":"-"},"content":""},{"lineNumber":148,"author":{"gitID":"-"},"content":"        /* Case: find employee in empty ptman book -\u003e 0 employees found */"},{"lineNumber":149,"author":{"gitID":"-"},"content":"        deleteAllEmployees();"},{"lineNumber":150,"author":{"gitID":"-"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" \" + KEYWORD_MATCHING_MEIER;"},{"lineNumber":151,"author":{"gitID":"-"},"content":"        expectedModel \u003d getModel();"},{"lineNumber":152,"author":{"gitID":"-"},"content":"        ModelHelper.setFilteredList(expectedModel, DANIEL);"},{"lineNumber":153,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":154,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":155,"author":{"gitID":"-"},"content":""},{"lineNumber":156,"author":{"gitID":"-"},"content":"        /* Case: mixed case command word -\u003e rejected */"},{"lineNumber":157,"author":{"gitID":"-"},"content":"        command \u003d \"FiNd Meier\";"},{"lineNumber":158,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, MESSAGE_UNKNOWN_COMMAND);"},{"lineNumber":159,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":160,"author":{"gitID":"-"},"content":""},{"lineNumber":161,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":162,"author":{"gitID":"-"},"content":"     * Executes {@code command} and verifies that the command box displays an empty string, the result display"},{"lineNumber":163,"author":{"gitID":"-"},"content":"     * box displays {@code Messages#MESSAGE_EMPLOYEES_LISTED_OVERVIEW} with the number of people in the filtered list,"},{"lineNumber":164,"author":{"gitID":"-"},"content":"     * and the model related components equal to {@code expectedModel}."},{"lineNumber":165,"author":{"gitID":"-"},"content":"     * These verifications are done by"},{"lineNumber":166,"author":{"gitID":"-"},"content":"     * {@code PartTimeManagerSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"},{"lineNumber":167,"author":{"gitID":"-"},"content":"     * Also verifies that the status bar remains unchanged, and the command box has the default style class, and the"},{"lineNumber":168,"author":{"gitID":"-"},"content":"     * selected card updated accordingly, depending on {@code cardStatus}."},{"lineNumber":169,"author":{"gitID":"-"},"content":"     * @see PartTimeManagerSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":170,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":171,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(String command, Model expectedModel) {"},{"lineNumber":172,"author":{"gitID":"-"},"content":"        String expectedResultMessage \u003d String.format("},{"lineNumber":173,"author":{"gitID":"-"},"content":"                MESSAGE_EMPLOYEES_LISTED_OVERVIEW, expectedModel.getFilteredEmployeeList().size());"},{"lineNumber":174,"author":{"gitID":"-"},"content":""},{"lineNumber":175,"author":{"gitID":"-"},"content":"        executeCommand(command);"},{"lineNumber":176,"author":{"gitID":"-"},"content":"        assertApplicationDisplaysExpected(\"\", expectedResultMessage, expectedModel);"},{"lineNumber":177,"author":{"gitID":"-"},"content":"        assertCommandBoxShowsDefaultStyle();"},{"lineNumber":178,"author":{"gitID":"-"},"content":"        assertStatusBarUnchanged();"},{"lineNumber":179,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":180,"author":{"gitID":"-"},"content":""},{"lineNumber":181,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":182,"author":{"gitID":"-"},"content":"     * Perform to transform PTMan to admin mode."},{"lineNumber":183,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":184,"author":{"gitID":"-"},"content":"    private void executeDefaultAdminLogin() {"},{"lineNumber":185,"author":{"gitID":"-"},"content":"        executeCommand(LogInAdminCommand.COMMAND_WORD + \" \" + PREFIX_PASSWORD + DEFAULT_PASSWORD);"},{"lineNumber":186,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":187,"author":{"gitID":"-"},"content":""},{"lineNumber":188,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":189,"author":{"gitID":"-"},"content":"     * Executes {@code command} and verifies that the command box displays {@code command}, the result display"},{"lineNumber":190,"author":{"gitID":"-"},"content":"     * box displays {@code expectedResultMessage} and the model related components equal to the current model."},{"lineNumber":191,"author":{"gitID":"-"},"content":"     * These verifications are done by"},{"lineNumber":192,"author":{"gitID":"-"},"content":"     * {@code PartTimeManagerSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"},{"lineNumber":193,"author":{"gitID":"-"},"content":"     * Also verifies that the browser url, selected card and status bar remain unchanged, and the command box has the"},{"lineNumber":194,"author":{"gitID":"-"},"content":"     * error style."},{"lineNumber":195,"author":{"gitID":"-"},"content":"     * @see PartTimeManagerSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":196,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":197,"author":{"gitID":"-"},"content":"    private void assertCommandFailure(String command, String expectedResultMessage) {"},{"lineNumber":198,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":199,"author":{"gitID":"-"},"content":""},{"lineNumber":200,"author":{"gitID":"-"},"content":"        executeCommand(command);"},{"lineNumber":201,"author":{"gitID":"-"},"content":"        assertApplicationDisplaysExpected(command, expectedResultMessage, expectedModel);"},{"lineNumber":202,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":203,"author":{"gitID":"hzxcaryn"},"content":"        assertCommandBoxAndResultDisplayShowsErrorStyle();"},{"lineNumber":204,"author":{"gitID":"-"},"content":"        assertStatusBarUnchanged();"},{"lineNumber":205,"author":{"gitID":"-"},"content":"        assertOutletDetailsPanelUnchanged();"},{"lineNumber":206,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":207,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"hzxcaryn":1,"-":206}},{"path":"docs/UserGuide.adoc","lines":[{"lineNumber":1,"author":{"gitID":"hzxcaryn"},"content":"\u003d image:ptman_logo_ug.png[width\u003d\"400\"]"},{"lineNumber":2,"author":{"gitID":"-"},"content":":toc:"},{"lineNumber":3,"author":{"gitID":"-"},"content":":toclevels: 3"},{"lineNumber":4,"author":{"gitID":"-"},"content":":toc-title: Table of Contents"},{"lineNumber":5,"author":{"gitID":"-"},"content":":toc-placement: preamble"},{"lineNumber":6,"author":{"gitID":"-"},"content":":sectnums:"},{"lineNumber":7,"author":{"gitID":"-"},"content":":imagesDir: images"},{"lineNumber":8,"author":{"gitID":"-"},"content":":stylesDir: stylesheets"},{"lineNumber":9,"author":{"gitID":"-"},"content":":xrefstyle: full"},{"lineNumber":10,"author":{"gitID":"-"},"content":":experimental:"},{"lineNumber":11,"author":{"gitID":"-"},"content":"ifdef::env-github[]"},{"lineNumber":12,"author":{"gitID":"-"},"content":":tip-caption: :bulb:"},{"lineNumber":13,"author":{"gitID":"-"},"content":":note-caption: :information_source:"},{"lineNumber":14,"author":{"gitID":"-"},"content":"endif::[]"},{"lineNumber":15,"author":{"gitID":"-"},"content":":repoURL: https://github.com/CS2103JAN2018-W14-B2/main"},{"lineNumber":16,"author":{"gitID":"-"},"content":":xrefstyle: short"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"By: `W14-B2`      Since: `March 2018`      Licence: `MIT`"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":"\u003d\u003d Introduction"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"Part-Time Manager (PTMan) is an application made for companies to manage their part-timers and their respective working schedules."},{"lineNumber":23,"author":{"gitID":"-"},"content":"PTMan allows managers to easily schedule work shifts and keep track of their employees\u0027 information."},{"lineNumber":24,"author":{"gitID":"-"},"content":"It also allows the part-timers to have the flexibility of choosing their own working schedules by applying for the available shifts."},{"lineNumber":25,"author":{"gitID":"-"},"content":"The primary mode of interaction with PTMan is via keyboard commands, so if you are a proficient typist, then you will feel right at home using PTMan!"},{"lineNumber":26,"author":{"gitID":"hzxcaryn"},"content":" +"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"This user guide comes with comprehensive instructions and examples of the various features to help you get started."},{"lineNumber":29,"author":{"gitID":"-"},"content":"Sounds great? Jump straight to \u003c\u003cQuick Start, Quick Start\u003e\u003e to get started. Enjoy!"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"\u003d\u003d Quick Start"},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"-"},"content":"Here are the steps required to get PTMan up and running on your computer:"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":".  Ensure you have Java version `1.8.0_60` or later installed in your computer."},{"lineNumber":36,"author":{"gitID":"-"},"content":"+"},{"lineNumber":37,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":38,"author":{"gitID":"-"},"content":"Having any Java 8 version is not enough. +"},{"lineNumber":39,"author":{"gitID":"-"},"content":"This app will not work with earlier versions of Java 8."},{"lineNumber":40,"author":{"gitID":"-"},"content":"+"},{"lineNumber":41,"author":{"gitID":"-"},"content":".  Download the latest `PTMan.jar` link:{repoURL}/releases[here]."},{"lineNumber":42,"author":{"gitID":"-"},"content":".  Copy the file to the folder you want to use as the home folder for PTMan."},{"lineNumber":43,"author":{"gitID":"-"},"content":".  Double-click the file to start the app. The graphical user interface (GUI) as seen in _\u003c\u003cfig-Startup\u003e\u003e_ should appear in a few seconds."},{"lineNumber":44,"author":{"gitID":"-"},"content":"+"},{"lineNumber":45,"author":{"gitID":"-"},"content":"[[fig-Startup]]"},{"lineNumber":46,"author":{"gitID":"-"},"content":".Successful start up window"},{"lineNumber":47,"author":{"gitID":"-"},"content":"image::Ui.png[width\u003d\"790\"]"},{"lineNumber":48,"author":{"gitID":"-"},"content":".  Type a command in the command box and press kbd:[Enter] to execute it. +"},{"lineNumber":49,"author":{"gitID":"-"},"content":"e.g. typing *`help`* and pressing kbd:[Enter] will open the help window."},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":52,"author":{"gitID":"-"},"content":"You may refer to \u003c\u003cCommands\u003e\u003e for more details of the available commands."},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"[IMPORTANT]"},{"lineNumber":55,"author":{"gitID":"-"},"content":"If you are a manager, you have access to \u003c\u003cAdmin Mode, admin mode\u003e\u003e. Admin mode allows you to access all the \u003c\u003cManager Commands, manager commands\u003e\u003e."},{"lineNumber":56,"author":{"gitID":"-"},"content":"To prevent unauthorised access, please change your default admin mode password using the `changeadminpw` command."},{"lineNumber":57,"author":{"gitID":"-"},"content":"You may refer to \u003c\u003cCap\u003e\u003e for instructions on how to do so."},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"-"},"content":"// tag::guiWalkthrough[]"},{"lineNumber":60,"author":{"gitID":"-"},"content":"\u003d\u003d Graphical User Interface"},{"lineNumber":61,"author":{"gitID":"-"},"content":""},{"lineNumber":62,"author":{"gitID":"-"},"content":"This section will help you understand the different sections of PTMan\u0027s Graphical User Interface(GUI)."},{"lineNumber":63,"author":{"gitID":"-"},"content":""},{"lineNumber":64,"author":{"gitID":"-"},"content":"_\u003c\u003cfig-GUIwalkthrough\u003e\u003e_ below shows a typical PTMan GUI with its different sections highlighted and labelled."},{"lineNumber":65,"author":{"gitID":"-"},"content":""},{"lineNumber":66,"author":{"gitID":"-"},"content":"[[fig-GUIwalkthrough]]"},{"lineNumber":67,"author":{"gitID":"-"},"content":".Typical PTMan with UI Sections Highlighted +"},{"lineNumber":68,"author":{"gitID":"-"},"content":"image::GUIwalkthrough.png[width\u003d\"790\"]"},{"lineNumber":69,"author":{"gitID":"-"},"content":""},{"lineNumber":70,"author":{"gitID":"-"},"content":"Following the labels in _\u003c\u003cfig-GUIwalkthrough\u003e\u003e_, here are what the different sections are responsible for."},{"lineNumber":71,"author":{"gitID":"-"},"content":""},{"lineNumber":72,"author":{"gitID":"-"},"content":"[width\u003d100%, cols\u003d\"1,4,20\"]"},{"lineNumber":73,"author":{"gitID":"-"},"content":"|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":74,"author":{"gitID":"-"},"content":"|Label |Name |What it is for"},{"lineNumber":75,"author":{"gitID":"-"},"content":""},{"lineNumber":76,"author":{"gitID":"-"},"content":"|1 |Command Box |Allows you to type in your commands into PTMan."},{"lineNumber":77,"author":{"gitID":"-"},"content":"|2 |Result Display |Shows the resulting feedback from your most recent command."},{"lineNumber":78,"author":{"gitID":"-"},"content":"|3 |Outlet Display |Displays all your outlet details."},{"lineNumber":79,"author":{"gitID":"-"},"content":"|4 |Timetable Panel |Displays the weekly timetable containing all the shifts stored in PTMan."},{"lineNumber":80,"author":{"gitID":"-"},"content":"|5 |Employee List Panel |Shows a list of all the part-time employees stored in PTMan."},{"lineNumber":81,"author":{"gitID":"-"},"content":"|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":82,"author":{"gitID":"-"},"content":"// end::guiWalkthrough[]"},{"lineNumber":83,"author":{"gitID":"-"},"content":""},{"lineNumber":84,"author":{"gitID":"-"},"content":"[[Features]]"},{"lineNumber":85,"author":{"gitID":"-"},"content":"\u003d\u003d Features"},{"lineNumber":86,"author":{"gitID":"-"},"content":"In this section, you will be introduced to the various features of PTMan."},{"lineNumber":87,"author":{"gitID":"-"},"content":""},{"lineNumber":88,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d User Authentication"},{"lineNumber":89,"author":{"gitID":"-"},"content":"PTMan has user authentication for both managers and employees to prevent unauthorised execution of \u003c\u003cCommands, commands\u003e\u003e."},{"lineNumber":90,"author":{"gitID":"-"},"content":""},{"lineNumber":91,"author":{"gitID":"-"},"content":"Managers can refer to \u003c\u003cAdmin mode\u003e\u003e for admin authentication, while employees can refer to \u003c\u003cEmployee password\u003e\u003e for employee authentication."},{"lineNumber":92,"author":{"gitID":"-"},"content":""},{"lineNumber":93,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Admin mode"},{"lineNumber":94,"author":{"gitID":"-"},"content":"For managers, admin mode allows you to access all the \u003c\u003cManager Commands, manager commands\u003e\u003e in PTMan."},{"lineNumber":95,"author":{"gitID":"-"},"content":"To enter admin mode, please refer to \u003c\u003cLogging in to admin mode: `login`\u003e\u003e."},{"lineNumber":96,"author":{"gitID":"-"},"content":"// TODO: SCREENSHOT"},{"lineNumber":97,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":98,"author":{"gitID":"-"},"content":"The default admin password is `DEFAULT1`."},{"lineNumber":99,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":100,"author":{"gitID":"-"},"content":"[IMPORTANT]"},{"lineNumber":101,"author":{"gitID":"-"},"content":"It is crucial to change the default admin password to prevent unauthorised access to admin mode."},{"lineNumber":102,"author":{"gitID":"-"},"content":"You may refer to \u003c\u003cCap\u003e\u003e for instructions on how to do so."},{"lineNumber":103,"author":{"gitID":"-"},"content":""},{"lineNumber":104,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Employee password"},{"lineNumber":105,"author":{"gitID":"-"},"content":"For employees, your employee password identifies you and authorizes you to execute \u003c\u003cEmployee Commands, employee commands\u003e\u003e."},{"lineNumber":106,"author":{"gitID":"-"},"content":"It ensures that you are unable to, for example, \u003c\u003cApplying for a shift: `apply`, `apply`\u003e\u003e someone else for a shift without knowing their password."},{"lineNumber":107,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":108,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":109,"author":{"gitID":"-"},"content":"The default employee password is `DEFAULT1`."},{"lineNumber":110,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":111,"author":{"gitID":"-"},"content":"[IMPORTANT]"},{"lineNumber":112,"author":{"gitID":"-"},"content":"It is crucial to change the default employee password to prevent unauthorised execution of employee commands."},{"lineNumber":113,"author":{"gitID":"koo1993"},"content":"You may refer to \u003c\u003cChanging your employee password: `changepw`\u003e\u003e for instructions on how to do so."},{"lineNumber":114,"author":{"gitID":"-"},"content":""},{"lineNumber":115,"author":{"gitID":"-"},"content":"// tag::outletManagement[]"},{"lineNumber":116,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Outlet Management"},{"lineNumber":117,"author":{"gitID":"-"},"content":"If you are a manager, PTMan allows you to manage your outlet. You can edit your outlet name, operating hours, contact number and email."},{"lineNumber":118,"author":{"gitID":"-"},"content":"The timetable automatically re-sizes according to the operating hours. You can also create announcements to broadcast to your employees."},{"lineNumber":119,"author":{"gitID":"-"},"content":"Moreover, PTMan allows you to encrypt and decrypt data stored locally to prevent unauthorised users from interpreting and understanding essential and private data."},{"lineNumber":120,"author":{"gitID":"-"},"content":""},{"lineNumber":121,"author":{"gitID":"-"},"content":"If you are an employee, you can view announcements created by your manager and take actions accordingly."},{"lineNumber":122,"author":{"gitID":"-"},"content":""},{"lineNumber":123,"author":{"gitID":"-"},"content":"_\u003c\u003cfig-Feature_Outlet\u003e\u003e_ shows the Outlet Display where you can view your outlet information."},{"lineNumber":124,"author":{"gitID":"-"},"content":""},{"lineNumber":125,"author":{"gitID":"-"},"content":"[[fig-Feature_Outlet]]"},{"lineNumber":126,"author":{"gitID":"-"},"content":".Sample Outlet Information Displayed +"},{"lineNumber":127,"author":{"gitID":"-"},"content":"image::IntroductionToOutlet.jpg[width\u003d\"790\"]"},{"lineNumber":128,"author":{"gitID":"-"},"content":"// end::outletManagement[]"},{"lineNumber":129,"author":{"gitID":"-"},"content":""},{"lineNumber":130,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Shift Management"},{"lineNumber":131,"author":{"gitID":"-"},"content":"If you are a manager, PTMan allows you to manage your employees\u0027 work shifts."},{"lineNumber":132,"author":{"gitID":"-"},"content":"You can add shifts, remove shifts and decide which employees are working at each shift."},{"lineNumber":133,"author":{"gitID":"-"},"content":"This can significantly reduce your paperwork related to employee scheduling."},{"lineNumber":134,"author":{"gitID":"-"},"content":""},{"lineNumber":135,"author":{"gitID":"-"},"content":"If you are an employee, PTMan gives you flexibility in your working hours by allowing you to apply for shifts that you wish to work in."},{"lineNumber":136,"author":{"gitID":"-"},"content":""},{"lineNumber":137,"author":{"gitID":"-"},"content":"Shifts that are in PTMan can be viewed via the \u003c\u003cTimetable, timetable\u003e\u003e."},{"lineNumber":138,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":139,"author":{"gitID":"-"},"content":"// tag::timetableIntro[]"},{"lineNumber":140,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Timetable"},{"lineNumber":141,"author":{"gitID":"-"},"content":"PTMan has a timetable that displays all the shifts in a weekly format. There are many interactions between the"},{"lineNumber":142,"author":{"gitID":"-"},"content":"timetable and you, as a user, so this section aims to familiarise you with the timetable."},{"lineNumber":143,"author":{"gitID":"-"},"content":""},{"lineNumber":144,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Shift colours"},{"lineNumber":145,"author":{"gitID":"-"},"content":""},{"lineNumber":146,"author":{"gitID":"-"},"content":"The shifts in PTMan are colour-coded, and here is what the different colours mean:"},{"lineNumber":147,"author":{"gitID":"-"},"content":""},{"lineNumber":148,"author":{"gitID":"-"},"content":"* *Green*: Shift is available with multiple slots left."},{"lineNumber":149,"author":{"gitID":"-"},"content":"* *Yellow*: Shift is available, but slots are running out."},{"lineNumber":150,"author":{"gitID":"-"},"content":"* *Red*: Shift is no longer available, all slots for the shift have run out."},{"lineNumber":151,"author":{"gitID":"-"},"content":"* *Blue*: Shift is taken up by currently selected employee."},{"lineNumber":152,"author":{"gitID":"-"},"content":"* *Brown*: Shift is not taken up by currently selected employee."},{"lineNumber":153,"author":{"gitID":"-"},"content":""},{"lineNumber":154,"author":{"gitID":"-"},"content":"_\u003c\u003cfig-Feature_Timetable1\u003e\u003e_ below shows how the timetable looks like in a sample PTMan app. +"},{"lineNumber":155,"author":{"gitID":"-"},"content":" +"},{"lineNumber":156,"author":{"gitID":"-"},"content":"[[fig-Feature_Timetable1]]"},{"lineNumber":157,"author":{"gitID":"-"},"content":".A Sample Timetable with Shifts +"},{"lineNumber":158,"author":{"gitID":"-"},"content":"image::Feature_Timetable1.png[width\u003d\"790\"]"},{"lineNumber":159,"author":{"gitID":"-"},"content":""},{"lineNumber":160,"author":{"gitID":"-"},"content":"PTMan also allows employees to view their own shifts using the \u003c\u003cDisplaying an employee’s shifts on the timetable: `select`, `select`\u003e\u003e command."},{"lineNumber":161,"author":{"gitID":"-"},"content":"_\u003c\u003cfig-Feature_Timetable2\u003e\u003e_ shows how the timetable look like in a sample PTMan app when an employee is selected."},{"lineNumber":162,"author":{"gitID":"-"},"content":" +"},{"lineNumber":163,"author":{"gitID":"-"},"content":"[[fig-Feature_Timetable2]]"},{"lineNumber":164,"author":{"gitID":"-"},"content":".A Sample Timetable with Shifts after `select` +"},{"lineNumber":165,"author":{"gitID":"-"},"content":"image::Feature_Timetable2.png[width\u003d\"790\"]"},{"lineNumber":166,"author":{"gitID":"-"},"content":""},{"lineNumber":167,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Timetable navigation"},{"lineNumber":168,"author":{"gitID":"-"},"content":""},{"lineNumber":169,"author":{"gitID":"-"},"content":"There are two ways to navigate through the different weeks in the timetable:"},{"lineNumber":170,"author":{"gitID":"-"},"content":""},{"lineNumber":171,"author":{"gitID":"-"},"content":". Using Keyboard Shortcuts"},{"lineNumber":172,"author":{"gitID":"-"},"content":"+"},{"lineNumber":173,"author":{"gitID":"-"},"content":"* For Windows:"},{"lineNumber":174,"author":{"gitID":"-"},"content":"** kbd:[Ctrl] + kbd:[Shift] + kbd:[\u0026rarr;] : Navigates timetable to the next week."},{"lineNumber":175,"author":{"gitID":"-"},"content":"** kbd:[Ctrl] + kbd:[Shift] + kbd:[\u0026larr;] : Navigates timetable to the previous week."},{"lineNumber":176,"author":{"gitID":"-"},"content":"** kbd:[Ctrl] + kbd:[Shift] + kbd:[\u0026darr;] : Navigates timetable to the current week."},{"lineNumber":177,"author":{"gitID":"-"},"content":"* For Mac:"},{"lineNumber":178,"author":{"gitID":"-"},"content":"** kbd:[Command] + kbd:[Shift] + kbd:[\u0026rarr;] : Navigates timetable to the next week."},{"lineNumber":179,"author":{"gitID":"-"},"content":"** kbd:[Command] + kbd:[Shift] + kbd:[\u0026larr;] : Navigates timetable to the previous week."},{"lineNumber":180,"author":{"gitID":"-"},"content":"** kbd:[Command] + kbd:[Shift] + kbd:[\u0026darr;] : Navigates timetable to the current week."},{"lineNumber":181,"author":{"gitID":"-"},"content":". Using Mouse Clicks"},{"lineNumber":182,"author":{"gitID":"-"},"content":"+"},{"lineNumber":183,"author":{"gitID":"-"},"content":"* At the top of the timetable, there is a navigation bar with two arrow buttons which you can click on."},{"lineNumber":184,"author":{"gitID":"-"},"content":"These buttons `\u003c` and `\u003e` navigates the timetable to the previous and next week respectively."},{"lineNumber":185,"author":{"gitID":"-"},"content":"_\u003c\u003cfig-Feature_Timetable3\u003e\u003e_ below shows the navigation bar, with the two arrow buttons circled. +"},{"lineNumber":186,"author":{"gitID":"-"},"content":"+"},{"lineNumber":187,"author":{"gitID":"-"},"content":"[[fig-Feature_Timetable3]]"},{"lineNumber":188,"author":{"gitID":"-"},"content":".Navigation Bar of Timetable +"},{"lineNumber":189,"author":{"gitID":"-"},"content":"image::Feature_Timetable3.png[width\u003d\"790\"]"},{"lineNumber":190,"author":{"gitID":"-"},"content":"// end::timetableIntro[]"},{"lineNumber":191,"author":{"gitID":"-"},"content":""},{"lineNumber":192,"author":{"gitID":"-"},"content":""},{"lineNumber":193,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Saving the Data"},{"lineNumber":194,"author":{"gitID":"-"},"content":""},{"lineNumber":195,"author":{"gitID":"-"},"content":"All the data is saved in the hard disk automatically upon execution of any command that changes the data. There is no need to manually save your changes."},{"lineNumber":196,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":197,"author":{"gitID":"-"},"content":"// tag::backup[]"},{"lineNumber":198,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Backing Up the Data"},{"lineNumber":199,"author":{"gitID":"-"},"content":"Backup files are automatically created and saved in the hard disk upon exiting the app. There is no need to do backup manually. +"},{"lineNumber":200,"author":{"gitID":"-"},"content":"Following these steps, you can replace your corrupted local storage files with the backup files:"},{"lineNumber":201,"author":{"gitID":"-"},"content":""},{"lineNumber":202,"author":{"gitID":"-"},"content":". Copy the backup files named `outletinformation.xml.backup` and `parttimemanager.xml.backup`."},{"lineNumber":203,"author":{"gitID":"-"},"content":". Open the folder where you store `PTMan.jar`."},{"lineNumber":204,"author":{"gitID":"-"},"content":". Open the `data` folder."},{"lineNumber":205,"author":{"gitID":"-"},"content":". Paste your copied backup files in this `data` folder."},{"lineNumber":206,"author":{"gitID":"-"},"content":". Rename `outletinformation.xml.backup` to `outletinformation.xml`."},{"lineNumber":207,"author":{"gitID":"-"},"content":". Rename `parttimemanager.xml.backup` to `parttimemanager.xml`."},{"lineNumber":208,"author":{"gitID":"-"},"content":". Run the app `PTMan.jar` and you will see all the restored data read from backup files."},{"lineNumber":209,"author":{"gitID":"-"},"content":"// end::backup[]"},{"lineNumber":210,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":211,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Keeping Track of Employees\u0027 Monthly Salaries [Coming in v2.0]"},{"lineNumber":212,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":213,"author":{"gitID":"-"},"content":"If you are a manager, PTMan will help you keep track of your employees\u0027 monthly salaries."},{"lineNumber":214,"author":{"gitID":"-"},"content":"PTMan do so by calculating the number of hours each employee has worked based on the shifts that they applied for throughout the month."},{"lineNumber":215,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":216,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Saving Data to the Cloud [Coming in v2.0]"},{"lineNumber":217,"author":{"gitID":"-"},"content":""},{"lineNumber":218,"author":{"gitID":"-"},"content":"Currently, PTMan is meant to be used on a single shared device as it is limited by local storage."},{"lineNumber":219,"author":{"gitID":"-"},"content":"By saving PTMan\u0027s data to the cloud, both employees and managers can access PTMan from their own devices since data can now be shared."},{"lineNumber":220,"author":{"gitID":"-"},"content":""},{"lineNumber":221,"author":{"gitID":"-"},"content":"\u003d\u003d Commands"},{"lineNumber":222,"author":{"gitID":"-"},"content":"The main method of user interaction with PTMan is via keyboard commands."},{"lineNumber":223,"author":{"gitID":"-"},"content":"Commands are split into 3 sub-sections, \u003c\u003cManager Commands, Manager Commands\u003e\u003e, \u003c\u003cEmployee Commands, Employee Commands\u003e\u003e, and \u003c\u003cGeneral Commands, General Commands\u003e\u003e. +"},{"lineNumber":224,"author":{"gitID":"-"},"content":""},{"lineNumber":225,"author":{"gitID":"-"},"content":"Take note that for this user guide, our commands will follow the format as stated below."},{"lineNumber":226,"author":{"gitID":"-"},"content":""},{"lineNumber":227,"author":{"gitID":"hzxcaryn"},"content":"\u003d\u003d\u003d\u003d"},{"lineNumber":228,"author":{"gitID":"-"},"content":"*Command Format*"},{"lineNumber":229,"author":{"gitID":"-"},"content":""},{"lineNumber":230,"author":{"gitID":"hzxcaryn"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user. +"},{"lineNumber":231,"author":{"gitID":"hzxcaryn"},"content":"e.g. In `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`."},{"lineNumber":232,"author":{"gitID":"hzxcaryn"},"content":"* Items in square brackets are optional. +"},{"lineNumber":233,"author":{"gitID":"hzxcaryn"},"content":"e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`."},{"lineNumber":234,"author":{"gitID":"hzxcaryn"},"content":"* Items with `…`​ after them can be used multiple times, or none at all. +"},{"lineNumber":235,"author":{"gitID":"hzxcaryn"},"content":"e.g. `[t/TAG]...` can be used as `{nbsp}` (i.e. 0 times), `t/friend`, `t/friend t/family` etc."},{"lineNumber":236,"author":{"gitID":"hzxcaryn"},"content":"* Parameters can be in any order. +"},{"lineNumber":237,"author":{"gitID":"-"},"content":"e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, then `p/PHONE_NUMBER n/NAME` is also acceptable."},{"lineNumber":238,"author":{"gitID":"-"},"content":"* For your convenience, many commands have a shorthand. +"},{"lineNumber":239,"author":{"gitID":"hzxcaryn"},"content":"eg. `list` and `l` will both show a list of all employees in PTMan."},{"lineNumber":240,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d"},{"lineNumber":241,"author":{"gitID":"-"},"content":""},{"lineNumber":242,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Manager Commands"},{"lineNumber":243,"author":{"gitID":"-"},"content":"As a manager, you are able to access all commands in this section in addition to the \u003c\u003cGeneral Commands, general commands\u003e\u003e."},{"lineNumber":244,"author":{"gitID":"-"},"content":"These manager commands require prior logging in to \u003c\u003cAdmin Mode, admin mode\u003e\u003e as shown in \u003c\u003cLogging in to admin mode: `login`\u003e\u003e."},{"lineNumber":245,"author":{"gitID":"-"},"content":""},{"lineNumber":246,"author":{"gitID":"-"},"content":"// tag::accessControl[]"},{"lineNumber":247,"author":{"gitID":"-"},"content":""},{"lineNumber":248,"author":{"gitID":"-"},"content":"[[Login]]"},{"lineNumber":249,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Logging in to admin mode: `login`"},{"lineNumber":250,"author":{"gitID":"-"},"content":"Logs in to \u003c\u003cAdmin mode, admin mode\u003e\u003e, allowing you to use all the manager commands."},{"lineNumber":251,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":252,"author":{"gitID":"-"},"content":"*Format:* `login pw/ADMIN_PASSWORD`"},{"lineNumber":253,"author":{"gitID":"-"},"content":""},{"lineNumber":254,"author":{"gitID":"-"},"content":"[IMPORTANT]"},{"lineNumber":255,"author":{"gitID":"-"},"content":"Please remember to logout after you are done making changes."},{"lineNumber":256,"author":{"gitID":"-"},"content":"This is to prevent unauthorised access to manager commands. +"},{"lineNumber":257,"author":{"gitID":"-"},"content":"Refer to \u003c\u003cLogging out of admin mode: `logout`\u003e\u003e for more information."},{"lineNumber":258,"author":{"gitID":"-"},"content":""},{"lineNumber":259,"author":{"gitID":"-"},"content":"*Guided Example:*"},{"lineNumber":260,"author":{"gitID":"-"},"content":""},{"lineNumber":261,"author":{"gitID":"-"},"content":"* To login, key in the command with your password as shown in  _\u003c\u003cfig-Login\u003e\u003e_."},{"lineNumber":262,"author":{"gitID":"-"},"content":"+"},{"lineNumber":263,"author":{"gitID":"-"},"content":"[[fig-Login]]"},{"lineNumber":264,"author":{"gitID":"-"},"content":".PTMan Admin Login Command +"},{"lineNumber":265,"author":{"gitID":"-"},"content":"image::loginPassword.png[width\u003d\"790\"]"},{"lineNumber":266,"author":{"gitID":"-"},"content":""},{"lineNumber":267,"author":{"gitID":"-"},"content":"* Once you are logged in, an `AdminMode` label will appear in the command box."},{"lineNumber":268,"author":{"gitID":"-"},"content":"This indicates that you are now in admin mode as shown in _\u003c\u003cfig-LoginSuccess\u003e\u003e_."},{"lineNumber":269,"author":{"gitID":"-"},"content":"+"},{"lineNumber":270,"author":{"gitID":"-"},"content":"[[fig-LoginSuccess]]"},{"lineNumber":271,"author":{"gitID":"-"},"content":".Successful PTMan Admin Login +"},{"lineNumber":272,"author":{"gitID":"-"},"content":"image::loginSuccess.png[width\u003d\"790\"]"},{"lineNumber":273,"author":{"gitID":"-"},"content":""},{"lineNumber":274,"author":{"gitID":"-"},"content":"[[Logout]]"},{"lineNumber":275,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Logging out of admin mode: `logout`"},{"lineNumber":276,"author":{"gitID":"-"},"content":"Logs out of \u003c\u003cAdmin mode, admin mode\u003e\u003e, preventing further usage of manager commands."},{"lineNumber":277,"author":{"gitID":"-"},"content":""},{"lineNumber":278,"author":{"gitID":"-"},"content":"*Format:* `logout`"},{"lineNumber":279,"author":{"gitID":"-"},"content":""},{"lineNumber":280,"author":{"gitID":"-"},"content":"*Guided Example:*"},{"lineNumber":281,"author":{"gitID":"-"},"content":""},{"lineNumber":282,"author":{"gitID":"-"},"content":"* To logout, key in the command as shown in _\u003c\u003cfig-loggingOut\u003e\u003e_."},{"lineNumber":283,"author":{"gitID":"-"},"content":"+"},{"lineNumber":284,"author":{"gitID":"-"},"content":"[[fig-loggingOut]]"},{"lineNumber":285,"author":{"gitID":"-"},"content":".PTMan Admin Logout Command +"},{"lineNumber":286,"author":{"gitID":"-"},"content":"image::logout.png[width\u003d\"790\"]"},{"lineNumber":287,"author":{"gitID":"-"},"content":""},{"lineNumber":288,"author":{"gitID":"-"},"content":"* After you have logged out, the `AdminMode` label will disappear from the command box as shown in _\u003c\u003cfig-logoutSuccess\u003e\u003e_."},{"lineNumber":289,"author":{"gitID":"-"},"content":"+"},{"lineNumber":290,"author":{"gitID":"-"},"content":"[[fig-logoutSuccess]]"},{"lineNumber":291,"author":{"gitID":"-"},"content":".Successful PTMan Admin Logout +"},{"lineNumber":292,"author":{"gitID":"-"},"content":"image::loginNoAdminIcon.png[width\u003d\"790\"]"},{"lineNumber":293,"author":{"gitID":"-"},"content":""},{"lineNumber":294,"author":{"gitID":"-"},"content":"[[Cap]]"},{"lineNumber":295,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Changing the admin password: `changeadminpw`"},{"lineNumber":296,"author":{"gitID":"-"},"content":"Changes the password to enter \u003c\u003cAdmin mode, admin mode\u003e\u003e."},{"lineNumber":297,"author":{"gitID":"-"},"content":""},{"lineNumber":298,"author":{"gitID":"-"},"content":"*Format:* `changeadminpw pw/CURRENT_PASSWORD pw/NEW_PASSWORD pw/CONFIRM_NEW_PASSWORD` +"},{"lineNumber":299,"author":{"gitID":"-"},"content":"*Shorthand:* `cap` `pw/CURRENT_PASSWORD pw/NEW_PASSWORD pw/CONFIRM_NEW_PASSWORD`"},{"lineNumber":300,"author":{"gitID":"-"},"content":""},{"lineNumber":301,"author":{"gitID":"-"},"content":"[IMPORTANT]"},{"lineNumber":302,"author":{"gitID":"-"},"content":"To prevent unauthorised access to admin mode, managers should change the admin password when running PTMan for the first time."},{"lineNumber":303,"author":{"gitID":"-"},"content":""},{"lineNumber":304,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":305,"author":{"gitID":"-"},"content":"The password should be at least 8 characters long. +"},{"lineNumber":306,"author":{"gitID":"-"},"content":"You must key in the current and new password in the correct sequence as given in the format."},{"lineNumber":307,"author":{"gitID":"-"},"content":""},{"lineNumber":308,"author":{"gitID":"-"},"content":"*Guided Example:*"},{"lineNumber":309,"author":{"gitID":"-"},"content":""},{"lineNumber":310,"author":{"gitID":"-"},"content":"* To change the password from `DEFAULT1` to `hunter22`, type: `changeadminpw pw/DEFAULT1 pw/hunter22 pw/hunter22`."},{"lineNumber":311,"author":{"gitID":"-"},"content":"The passwords will be masked by asterisks as shown in _\u003c\u003cfig-changingAdminPassword\u003e\u003e_."},{"lineNumber":312,"author":{"gitID":"-"},"content":"+"},{"lineNumber":313,"author":{"gitID":"-"},"content":"[[fig-changingAdminPassword]]"},{"lineNumber":314,"author":{"gitID":"-"},"content":".PTMan Admin Password Change Command  +"},{"lineNumber":315,"author":{"gitID":"-"},"content":"image::changingAdminPassword.png[width\u003d\"790\"]"},{"lineNumber":316,"author":{"gitID":"-"},"content":""},{"lineNumber":317,"author":{"gitID":"-"},"content":"* After the password is successfully changed, a confirmation message will be displayed in the result display as seen in _\u003c\u003cfig-changedAdminPassword\u003e\u003e_."},{"lineNumber":318,"author":{"gitID":"-"},"content":"+"},{"lineNumber":319,"author":{"gitID":"-"},"content":"[[fig-changedAdminPassword]]"},{"lineNumber":320,"author":{"gitID":"-"},"content":".Successful PTMan Admin Password Change +"},{"lineNumber":321,"author":{"gitID":"-"},"content":"image::changedAdminPassword.png[width\u003d\"790\"]"},{"lineNumber":322,"author":{"gitID":"-"},"content":""},{"lineNumber":323,"author":{"gitID":"-"},"content":"[[Rap]]"},{"lineNumber":324,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Resetting the admin password: `resetadminpw`"},{"lineNumber":325,"author":{"gitID":"-"},"content":""},{"lineNumber":326,"author":{"gitID":"-"},"content":"Resets the password to enter \u003c\u003cAdmin mode, admin mode\u003e\u003e and sends a randomly generated password to the outlet\u0027s email address. +"},{"lineNumber":327,"author":{"gitID":"-"},"content":"You may use the new password to login and change to your preferred password."},{"lineNumber":328,"author":{"gitID":"-"},"content":""},{"lineNumber":329,"author":{"gitID":"-"},"content":"*Format:* `resetadminpw` +"},{"lineNumber":330,"author":{"gitID":"-"},"content":"*Shorthand:* `rap`"},{"lineNumber":331,"author":{"gitID":"-"},"content":""},{"lineNumber":332,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":333,"author":{"gitID":"-"},"content":"The randomly generated password will be sent to the outlet\u0027s email address stored in PTMan."},{"lineNumber":334,"author":{"gitID":"-"},"content":"You can view this email address under the outlet display of the GUI."},{"lineNumber":335,"author":{"gitID":"-"},"content":""},{"lineNumber":336,"author":{"gitID":"-"},"content":"*Guided Example:*"},{"lineNumber":337,"author":{"gitID":"-"},"content":""},{"lineNumber":338,"author":{"gitID":"-"},"content":"* To reset admin password, key in the command as shown in _\u003c\u003cfig-resetAdminPassword\u003e\u003e_."},{"lineNumber":339,"author":{"gitID":"-"},"content":"+"},{"lineNumber":340,"author":{"gitID":"-"},"content":"[[fig-resetAdminPassword]]"},{"lineNumber":341,"author":{"gitID":"-"},"content":".PTMan Admin Password Reset Command +"},{"lineNumber":342,"author":{"gitID":"-"},"content":"image::resetAdminPassword.png[width\u003d\"790\"]"},{"lineNumber":343,"author":{"gitID":"-"},"content":""},{"lineNumber":344,"author":{"gitID":"-"},"content":"* After the command is executed successfully, a confirmation message will be displayed in the result display as shown in _\u003c\u003cfig-resetAdminPasswordSuccess\u003e\u003e_."},{"lineNumber":345,"author":{"gitID":"-"},"content":"+"},{"lineNumber":346,"author":{"gitID":"-"},"content":"[[fig-resetAdminPasswordSuccess]]"},{"lineNumber":347,"author":{"gitID":"-"},"content":".Successful PTMan Admin Password Reset +"},{"lineNumber":348,"author":{"gitID":"-"},"content":"image::resetAdminPasswordSuccess.png[width\u003d\"790\"]"},{"lineNumber":349,"author":{"gitID":"-"},"content":""},{"lineNumber":350,"author":{"gitID":"-"},"content":"// end::accessControl[]"},{"lineNumber":351,"author":{"gitID":"-"},"content":""},{"lineNumber":352,"author":{"gitID":"-"},"content":"[[Add]]"},{"lineNumber":353,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Adding an employee: `add`"},{"lineNumber":354,"author":{"gitID":"-"},"content":""},{"lineNumber":355,"author":{"gitID":"-"},"content":"Adds an employee to PTMan. +"},{"lineNumber":356,"author":{"gitID":"-"},"content":""},{"lineNumber":357,"author":{"gitID":"-"},"content":"*Format:* `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS s/SALARY [t/TAG]...` +"},{"lineNumber":358,"author":{"gitID":"-"},"content":"*Shorthand:* `a n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS s/SALARY [t/TAG]...`"},{"lineNumber":359,"author":{"gitID":"-"},"content":""},{"lineNumber":360,"author":{"gitID":"-"},"content":"[TIP]"},{"lineNumber":361,"author":{"gitID":"-"},"content":"An employee can have any number of tags (including 0)"},{"lineNumber":362,"author":{"gitID":"-"},"content":""},{"lineNumber":363,"author":{"gitID":"-"},"content":"*Guided Example*:"},{"lineNumber":364,"author":{"gitID":"-"},"content":""},{"lineNumber":365,"author":{"gitID":"-"},"content":"* To add an employee into PTMan, key in the following as illustrated in _\u003c\u003cfig-Add1\u003e\u003e_."},{"lineNumber":366,"author":{"gitID":"-"},"content":"+"},{"lineNumber":367,"author":{"gitID":"-"},"content":"[[fig-Add1]]"},{"lineNumber":368,"author":{"gitID":"-"},"content":".PTMan Add Employee Command +"},{"lineNumber":369,"author":{"gitID":"-"},"content":"image::Ui_add1.png[width\u003d\"790\"]"},{"lineNumber":370,"author":{"gitID":"-"},"content":""},{"lineNumber":371,"author":{"gitID":"-"},"content":"* Upon successful addition of the employee, you will see a confirmation message in the result display, and the employee being added into your Employee list."},{"lineNumber":372,"author":{"gitID":"-"},"content":"_\u003c\u003cfig-Add2\u003e\u003e_ shows how PTMan should look like after the above command."},{"lineNumber":373,"author":{"gitID":"-"},"content":"+"},{"lineNumber":374,"author":{"gitID":"-"},"content":"[[fig-Add2]]"},{"lineNumber":375,"author":{"gitID":"-"},"content":".Successful Addition of Employee into PTMan +"},{"lineNumber":376,"author":{"gitID":"-"},"content":"image::Ui_add2.png[width\u003d\"790\"]"},{"lineNumber":377,"author":{"gitID":"-"},"content":""},{"lineNumber":378,"author":{"gitID":"-"},"content":""},{"lineNumber":379,"author":{"gitID":"koo1993"},"content":"// tag::accessControl[]"},{"lineNumber":380,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":381,"author":{"gitID":"-"},"content":"[[AddSalary]]"},{"lineNumber":382,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Adding salary to an employee: `addsalary`"},{"lineNumber":383,"author":{"gitID":"-"},"content":""},{"lineNumber":384,"author":{"gitID":"-"},"content":"Adds a specified amount to an employee\u0027s salary."},{"lineNumber":385,"author":{"gitID":"-"},"content":""},{"lineNumber":386,"author":{"gitID":"-"},"content":"*Format:* `addsalary EMPLOYEE_INDEX s/AMOUNT_TO_ADD` +"},{"lineNumber":387,"author":{"gitID":"-"},"content":"*Shorthand:* `adds EMPLOYEE_INDEX s/AMOUNT_TO_ADD`"},{"lineNumber":388,"author":{"gitID":"-"},"content":""},{"lineNumber":389,"author":{"gitID":"-"},"content":"*Guided Example:*"},{"lineNumber":390,"author":{"gitID":"-"},"content":""},{"lineNumber":391,"author":{"gitID":"-"},"content":"* To increase the first employee\u0027s salary by $100, key in the command as shown below in _\u003c\u003cfig-addingSalary\u003e\u003e_."},{"lineNumber":392,"author":{"gitID":"-"},"content":"+"},{"lineNumber":393,"author":{"gitID":"-"},"content":"[[fig-addingSalary]]"},{"lineNumber":394,"author":{"gitID":"-"},"content":".PTMan Add Employee Salary Command +"},{"lineNumber":395,"author":{"gitID":"-"},"content":"image::addingSalary.png[width\u003d\"790\"]"},{"lineNumber":396,"author":{"gitID":"-"},"content":""},{"lineNumber":397,"author":{"gitID":"-"},"content":"* Upon successful execution of the command, you will see a confirmation message in the result display and the applied salary as shown in _\u003c\u003cfig-addSalarySuccess\u003e\u003e_."},{"lineNumber":398,"author":{"gitID":"-"},"content":"+"},{"lineNumber":399,"author":{"gitID":"-"},"content":"[[fig-addSalarySuccess]]"},{"lineNumber":400,"author":{"gitID":"-"},"content":".Successful Addition of Salary for Employee in PTMan +"},{"lineNumber":401,"author":{"gitID":"-"},"content":"image::addSalarySuccess.png[width\u003d\"790\"]"},{"lineNumber":402,"author":{"gitID":"-"},"content":""},{"lineNumber":403,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":404,"author":{"gitID":"-"},"content":"Employee\u0027s salary cannot be deducted using this command."},{"lineNumber":405,"author":{"gitID":"-"},"content":""},{"lineNumber":406,"author":{"gitID":"koo1993"},"content":"// end::accessControl[]"},{"lineNumber":407,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":408,"author":{"gitID":"-"},"content":"[[Edit]]"},{"lineNumber":409,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Editing an employee: `edit`"},{"lineNumber":410,"author":{"gitID":"-"},"content":""},{"lineNumber":411,"author":{"gitID":"-"},"content":"Edits an existing employee in PTMan. +"},{"lineNumber":412,"author":{"gitID":"-"},"content":""},{"lineNumber":413,"author":{"gitID":"-"},"content":"*Format:* `edit EMPLOYEE_INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [s/SALARY] [t/TAG]...` +"},{"lineNumber":414,"author":{"gitID":"-"},"content":"*Shorthand:* `e EMPLOYEE_INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [s/SALARY] [t/TAG]...`"},{"lineNumber":415,"author":{"gitID":"-"},"content":""},{"lineNumber":416,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":417,"author":{"gitID":"-"},"content":"An employee\u0027s password can only be edited by the employee. +"},{"lineNumber":418,"author":{"gitID":"-"},"content":""},{"lineNumber":419,"author":{"gitID":"-"},"content":"****"},{"lineNumber":420,"author":{"gitID":"-"},"content":"* Edits the employee at the specified `EMPLOYEE_INDEX`. The index refers to the index number shown in the last employee listing. The index *must be a positive integer* 1, 2, 3, ..."},{"lineNumber":421,"author":{"gitID":"-"},"content":"* At least one of the optional fields must be provided."},{"lineNumber":422,"author":{"gitID":"-"},"content":"* Existing values will be updated to the input values."},{"lineNumber":423,"author":{"gitID":"-"},"content":"* When editing tags, the existing tags of the employee will be removed i.e adding of tags is not cumulative."},{"lineNumber":424,"author":{"gitID":"-"},"content":"* You can remove all the employee\u0027s tags by typing `t/` without specifying any tags after it."},{"lineNumber":425,"author":{"gitID":"-"},"content":"****"},{"lineNumber":426,"author":{"gitID":"-"},"content":""},{"lineNumber":427,"author":{"gitID":"-"},"content":"*Guided Example:*"},{"lineNumber":428,"author":{"gitID":"-"},"content":""},{"lineNumber":429,"author":{"gitID":"-"},"content":"* To edit the first employee\u0027s email and tags, key in the following as illustrated in _\u003c\u003cfig-Ui_edit1\u003e\u003e_."},{"lineNumber":430,"author":{"gitID":"-"},"content":"+"},{"lineNumber":431,"author":{"gitID":"-"},"content":"[[fig-Ui_edit1]]"},{"lineNumber":432,"author":{"gitID":"-"},"content":".PTMan Edit Employee Details Command  +"},{"lineNumber":433,"author":{"gitID":"-"},"content":"image::Ui_edit1.png[width\u003d\"790\"]"},{"lineNumber":434,"author":{"gitID":"-"},"content":""},{"lineNumber":435,"author":{"gitID":"-"},"content":"* Upon successful execution of the command, you will see a confirmation message in the result display, and the edited details of the employee as shown in _\u003c\u003cfig-Ui_edit2\u003e\u003e_."},{"lineNumber":436,"author":{"gitID":"-"},"content":"+"},{"lineNumber":437,"author":{"gitID":"-"},"content":"[[fig-Ui_edit2]]"},{"lineNumber":438,"author":{"gitID":"-"},"content":".Successful Edit of Employee Details in PTMan +"},{"lineNumber":439,"author":{"gitID":"-"},"content":"image::Ui_edit2.png[width\u003d\"790\"]"},{"lineNumber":440,"author":{"gitID":"-"},"content":""},{"lineNumber":441,"author":{"gitID":"-"},"content":""},{"lineNumber":442,"author":{"gitID":"-"},"content":"// TODO: SCREENSHOT BEFORE + AFTER?"},{"lineNumber":443,"author":{"gitID":"-"},"content":"*More Examples:*"},{"lineNumber":444,"author":{"gitID":"-"},"content":""},{"lineNumber":445,"author":{"gitID":"-"},"content":"* To edit the phone number and email address of the employee `1` to be `91234567` and `johndoe@example.com` respectively, type: +"},{"lineNumber":446,"author":{"gitID":"-"},"content":"`edit 1 p/91234567 e/johndoe@example.com` +"},{"lineNumber":447,"author":{"gitID":"-"},"content":"* To edit the name of the employee `2` to be `Betsy Crower` and clear all existing tags, type: +"},{"lineNumber":448,"author":{"gitID":"-"},"content":"`edit 2 n/Betsy Crower t/`"},{"lineNumber":449,"author":{"gitID":"-"},"content":""},{"lineNumber":450,"author":{"gitID":"-"},"content":"[[Delete]]"},{"lineNumber":451,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Deleting an employee : `delete`"},{"lineNumber":452,"author":{"gitID":"-"},"content":""},{"lineNumber":453,"author":{"gitID":"-"},"content":"Deletes the specified employee from PTMan. +"},{"lineNumber":454,"author":{"gitID":"-"},"content":""},{"lineNumber":455,"author":{"gitID":"-"},"content":"*Format:* `delete EMPLOYEE_INDEX` +"},{"lineNumber":456,"author":{"gitID":"-"},"content":"*Shorthand:* `d EMPLOYEE_INDEX`"},{"lineNumber":457,"author":{"gitID":"-"},"content":""},{"lineNumber":458,"author":{"gitID":"-"},"content":"****"},{"lineNumber":459,"author":{"gitID":"-"},"content":"* The employee will be deleted at the specified EMPLOYEE_INDEX."},{"lineNumber":460,"author":{"gitID":"-"},"content":"* The EMPLOYEE_INDEX refers to the index number shown in the most recent employee listing."},{"lineNumber":461,"author":{"gitID":"-"},"content":"* The EMPLOYEE_INDEX *must be a positive integer* 1, 2, 3, ..."},{"lineNumber":462,"author":{"gitID":"-"},"content":"****"},{"lineNumber":463,"author":{"gitID":"-"},"content":""},{"lineNumber":464,"author":{"gitID":"-"},"content":"*Guided Example:*"},{"lineNumber":465,"author":{"gitID":"-"},"content":""},{"lineNumber":466,"author":{"gitID":"-"},"content":"* To delete the first employee from PTMan, key in the following as illustrated in _\u003c\u003cfig-Ui_delete1\u003e\u003e_."},{"lineNumber":467,"author":{"gitID":"-"},"content":"+"},{"lineNumber":468,"author":{"gitID":"-"},"content":"[[fig-Ui_delete1]]"},{"lineNumber":469,"author":{"gitID":"-"},"content":".PTMan Delete Employee Command +"},{"lineNumber":470,"author":{"gitID":"-"},"content":"image::Ui_delete1.png[width\u003d\"790\"]"},{"lineNumber":471,"author":{"gitID":"-"},"content":""},{"lineNumber":472,"author":{"gitID":"-"},"content":"* _\u003c\u003cfig-Ui_delete2\u003e\u003e_ shows the employee list panel before the `delete` command is carried out."},{"lineNumber":473,"author":{"gitID":"-"},"content":"+"},{"lineNumber":474,"author":{"gitID":"-"},"content":"[[fig-Ui_delete2]]"},{"lineNumber":475,"author":{"gitID":"-"},"content":".Employee List Panel Before Deletion +"},{"lineNumber":476,"author":{"gitID":"-"},"content":"image::Ui_delete2.png[width\u003d\"300\"]"},{"lineNumber":477,"author":{"gitID":"-"},"content":""},{"lineNumber":478,"author":{"gitID":"-"},"content":"* Upon successful deletion, you will see a confirmation message in the result display and the employee being deleted from the employee list panel as shown in _\u003c\u003cfig-Ui_delete3\u003e\u003e_."},{"lineNumber":479,"author":{"gitID":"-"},"content":"+"},{"lineNumber":480,"author":{"gitID":"-"},"content":"[[fig-Ui_delete3]]"},{"lineNumber":481,"author":{"gitID":"-"},"content":".Successful Deletion of Employee in PTMan +"},{"lineNumber":482,"author":{"gitID":"-"},"content":"image::Ui_delete3.png[width\u003d\"790\"]"},{"lineNumber":483,"author":{"gitID":"-"},"content":""},{"lineNumber":484,"author":{"gitID":"-"},"content":"*More Examples:*"},{"lineNumber":485,"author":{"gitID":"-"},"content":""},{"lineNumber":486,"author":{"gitID":"-"},"content":"* To delete employee `1` from the results of the \u003c\u003cFind, `find`\u003e\u003e command, type: +"},{"lineNumber":487,"author":{"gitID":"-"},"content":"`find Betsy` +"},{"lineNumber":488,"author":{"gitID":"-"},"content":"`delete 1` +"},{"lineNumber":489,"author":{"gitID":"-"},"content":"* To delete employee `2` from the results of the \u003c\u003cViewshift, `viewshift`\u003e\u003e command type: +"},{"lineNumber":490,"author":{"gitID":"-"},"content":"`viewshift SHIFT_INDEX`"},{"lineNumber":491,"author":{"gitID":"-"},"content":"`delete 2` +"},{"lineNumber":492,"author":{"gitID":"-"},"content":""},{"lineNumber":493,"author":{"gitID":"-"},"content":"[[Clear]]"},{"lineNumber":494,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Clearing all entries : `clear`"},{"lineNumber":495,"author":{"gitID":"-"},"content":""},{"lineNumber":496,"author":{"gitID":"-"},"content":"Clears all shifts and employees from PTMan. +"},{"lineNumber":497,"author":{"gitID":"-"},"content":""},{"lineNumber":498,"author":{"gitID":"-"},"content":"*Format:* `clear` +"},{"lineNumber":499,"author":{"gitID":"-"},"content":"*Shorthand:* `c`"},{"lineNumber":500,"author":{"gitID":"-"},"content":""},{"lineNumber":501,"author":{"gitID":"-"},"content":"[CAUTION]"},{"lineNumber":502,"author":{"gitID":"-"},"content":"You may use the `undo` command if you have accidentally cleared all shifts and employees. +"},{"lineNumber":503,"author":{"gitID":"-"},"content":"Please refer to \u003c\u003cUndo\u003e\u003e for more information."},{"lineNumber":504,"author":{"gitID":"-"},"content":""},{"lineNumber":505,"author":{"gitID":"-"},"content":"[[Undo]]"},{"lineNumber":506,"author":{"gitID":"-"},"content":"// tag::undoredo[]"},{"lineNumber":507,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Undoing the previous command : `undo`"},{"lineNumber":508,"author":{"gitID":"-"},"content":""},{"lineNumber":509,"author":{"gitID":"-"},"content":"Restores PTMan to the state before the previous _undoable_ command was executed. +"},{"lineNumber":510,"author":{"gitID":"-"},"content":""},{"lineNumber":511,"author":{"gitID":"-"},"content":"*Format:* `undo` +"},{"lineNumber":512,"author":{"gitID":"-"},"content":"*Shorthand:* `u`"},{"lineNumber":513,"author":{"gitID":"-"},"content":""},{"lineNumber":514,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":515,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d"},{"lineNumber":516,"author":{"gitID":"-"},"content":"Undoable commands: Commands that modify PTMan\u0027s data (`add`, `delete`, `edit`, `clear`, `addshift`, `deleteshift`, `apply`, `unapply`, `editoutlet` and `announcement`)."},{"lineNumber":517,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d"},{"lineNumber":518,"author":{"gitID":"-"},"content":""},{"lineNumber":519,"author":{"gitID":"-"},"content":"*Examples*:"},{"lineNumber":520,"author":{"gitID":"-"},"content":""},{"lineNumber":521,"author":{"gitID":"-"},"content":"* `delete 1` +"},{"lineNumber":522,"author":{"gitID":"-"},"content":"`undo` (reverses the `delete 1` command) +"},{"lineNumber":523,"author":{"gitID":"-"},"content":""},{"lineNumber":524,"author":{"gitID":"hzxcaryn"},"content":"* `list` +"},{"lineNumber":525,"author":{"gitID":"-"},"content":"`undo` +"},{"lineNumber":526,"author":{"gitID":"-"},"content":"The `undo` command fails as there are no undoable commands executed previously."},{"lineNumber":527,"author":{"gitID":"-"},"content":""},{"lineNumber":528,"author":{"gitID":"-"},"content":"* `delete 1` +"},{"lineNumber":529,"author":{"gitID":"-"},"content":"`clear` +"},{"lineNumber":530,"author":{"gitID":"-"},"content":"`undo` (reverses the `clear` command) +"},{"lineNumber":531,"author":{"gitID":"-"},"content":"`undo` (reverses the `delete 1` command) +"},{"lineNumber":532,"author":{"gitID":"-"},"content":""},{"lineNumber":533,"author":{"gitID":"-"},"content":"[[Redo]]"},{"lineNumber":534,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Redoing the previously undone command: `redo`"},{"lineNumber":535,"author":{"gitID":"-"},"content":""},{"lineNumber":536,"author":{"gitID":"-"},"content":"Reverses the most recent `undo` command. +"},{"lineNumber":537,"author":{"gitID":"-"},"content":""},{"lineNumber":538,"author":{"gitID":"-"},"content":"*Format:* `redo` +"},{"lineNumber":539,"author":{"gitID":"-"},"content":"*Shorthand:* `r`"},{"lineNumber":540,"author":{"gitID":"-"},"content":""},{"lineNumber":541,"author":{"gitID":"-"},"content":"*Examples*:"},{"lineNumber":542,"author":{"gitID":"-"},"content":""},{"lineNumber":543,"author":{"gitID":"-"},"content":"* `delete 1` +"},{"lineNumber":544,"author":{"gitID":"-"},"content":"`undo` (reverses the `delete 1` command) +"},{"lineNumber":545,"author":{"gitID":"-"},"content":"`redo` (reapplies the `delete 1` command) +"},{"lineNumber":546,"author":{"gitID":"-"},"content":""},{"lineNumber":547,"author":{"gitID":"-"},"content":"* `delete 1` +"},{"lineNumber":548,"author":{"gitID":"-"},"content":"`redo` +"},{"lineNumber":549,"author":{"gitID":"-"},"content":"The `redo` command fails as there are no `undo` commands executed previously."},{"lineNumber":550,"author":{"gitID":"-"},"content":""},{"lineNumber":551,"author":{"gitID":"hzxcaryn"},"content":"* `delete 1 pw/ADMIN_PASSWORD` +"},{"lineNumber":552,"author":{"gitID":"-"},"content":"`clear` +"},{"lineNumber":553,"author":{"gitID":"-"},"content":"`undo` (reverses the `clear` command) +"},{"lineNumber":554,"author":{"gitID":"-"},"content":"`undo` (reverses the `delete 1` command) +"},{"lineNumber":555,"author":{"gitID":"-"},"content":"`redo` (reapplies the `delete 1` command) +"},{"lineNumber":556,"author":{"gitID":"-"},"content":"`redo` (reapplies the `clear` command) +"},{"lineNumber":557,"author":{"gitID":"-"},"content":"// end::undoredo[]"},{"lineNumber":558,"author":{"gitID":"-"},"content":""},{"lineNumber":559,"author":{"gitID":"-"},"content":"// tag::outletCommand[]"},{"lineNumber":560,"author":{"gitID":"-"},"content":"[[Editoutlet]]"},{"lineNumber":561,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Editing the outlet information: `editoutlet`"},{"lineNumber":562,"author":{"gitID":"-"},"content":"Edits the outlet information. +"},{"lineNumber":563,"author":{"gitID":"-"},"content":""},{"lineNumber":564,"author":{"gitID":"-"},"content":"*Format:* `editoutlet n/OUTLET_NAME h/OPERATING_HOURS c/CONTACT_NUMBER e/EMAIL`  +"},{"lineNumber":565,"author":{"gitID":"-"},"content":"*Shorthand:* `eo n/OUTLET_NAME h/OPERATING_HOURS c/CONTACT_NUMBER e/EMAIL`"},{"lineNumber":566,"author":{"gitID":"-"},"content":"****"},{"lineNumber":567,"author":{"gitID":"-"},"content":"* At least one of the optional fields must be provided."},{"lineNumber":568,"author":{"gitID":"-"},"content":"* Existing values will be updated to the input values."},{"lineNumber":569,"author":{"gitID":"-"},"content":"* `OPERATING_HOURS` are in HHMM-HHMM format."},{"lineNumber":570,"author":{"gitID":"-"},"content":"****"},{"lineNumber":571,"author":{"gitID":"-"},"content":""},{"lineNumber":572,"author":{"gitID":"-"},"content":"[IMPORTANT]"},{"lineNumber":573,"author":{"gitID":"-"},"content":"Ensure that the outlet email is valid as it will be used to reset the admin password should you forget it."},{"lineNumber":574,"author":{"gitID":"-"},"content":""},{"lineNumber":575,"author":{"gitID":"-"},"content":"*Guided Example:*"},{"lineNumber":576,"author":{"gitID":"-"},"content":""},{"lineNumber":577,"author":{"gitID":"-"},"content":"* To edit the name, operating hours, contact number, and email of the outlet, key in the following as shown in _\u003c\u003cfig-Edit1\u003e\u003e_."},{"lineNumber":578,"author":{"gitID":"-"},"content":"+"},{"lineNumber":579,"author":{"gitID":"-"},"content":"[[fig-Edit1]]"},{"lineNumber":580,"author":{"gitID":"-"},"content":".PTMan Edit Outlet Information Command +"},{"lineNumber":581,"author":{"gitID":"-"},"content":"image::Ui_editoutlet1.png[width\u003d\"790\"]"},{"lineNumber":582,"author":{"gitID":"-"},"content":""},{"lineNumber":583,"author":{"gitID":"-"},"content":"* Upon successful execution of the command, you would see a confirmation message below the command bar, and the changes applied to the outlet information."},{"lineNumber":584,"author":{"gitID":"-"},"content":"_\u003c\u003cfig-Edit2\u003e\u003e_ shows how PTMan should look like after the above command."},{"lineNumber":585,"author":{"gitID":"-"},"content":"+"},{"lineNumber":586,"author":{"gitID":"-"},"content":"[[fig-Edit2]]"},{"lineNumber":587,"author":{"gitID":"-"},"content":".Successful Edit of Outlet Information in PTMan +"},{"lineNumber":588,"author":{"gitID":"-"},"content":"image::Ui_editoutlet2.png[width\u003d\"600\"]"},{"lineNumber":589,"author":{"gitID":"-"},"content":""},{"lineNumber":590,"author":{"gitID":"-"},"content":"* To edit only the name and contact number, key in the following as shown in _\u003c\u003cfig-Edit3\u003e\u003e_"},{"lineNumber":591,"author":{"gitID":"-"},"content":"+"},{"lineNumber":592,"author":{"gitID":"-"},"content":"[[fig-Edit3]]"},{"lineNumber":593,"author":{"gitID":"-"},"content":".PTMan Edit Selective Outlet Information Command +"},{"lineNumber":594,"author":{"gitID":"-"},"content":"image::Ui_editoutlet3.png[width\u003d\"790\"]"},{"lineNumber":595,"author":{"gitID":"-"},"content":""},{"lineNumber":596,"author":{"gitID":"-"},"content":"* Upon successful execution of the command, a confirmation message will be displayed in the result display, and changes will be applied to the outlet information."},{"lineNumber":597,"author":{"gitID":"-"},"content":"  _\u003c\u003cfig-Edit4\u003e\u003e_ shows how PTMan should look like after the above command."},{"lineNumber":598,"author":{"gitID":"-"},"content":"+"},{"lineNumber":599,"author":{"gitID":"-"},"content":"[[fig-Edit4]]"},{"lineNumber":600,"author":{"gitID":"-"},"content":".Successful Edit of Selective Outlet Information in PTMan +"},{"lineNumber":601,"author":{"gitID":"-"},"content":"image::Ui_editoutlet4.png[width\u003d\"600\"]"},{"lineNumber":602,"author":{"gitID":"-"},"content":""},{"lineNumber":603,"author":{"gitID":"-"},"content":"[[Announcement]]"},{"lineNumber":604,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Creating an announcement: `announcement`"},{"lineNumber":605,"author":{"gitID":"-"},"content":"Sets an announcement for the outlet. +"},{"lineNumber":606,"author":{"gitID":"-"},"content":""},{"lineNumber":607,"author":{"gitID":"-"},"content":"*Format:* `announcement ANNOUNCEMENT_MESSAGE` +"},{"lineNumber":608,"author":{"gitID":"-"},"content":"*Shorthand:* `announce`"},{"lineNumber":609,"author":{"gitID":"-"},"content":""},{"lineNumber":610,"author":{"gitID":"-"},"content":"*Guided Example:*"},{"lineNumber":611,"author":{"gitID":"-"},"content":""},{"lineNumber":612,"author":{"gitID":"-"},"content":"* To make an announcement in PTMan, type the following command as illustrated in _\u003c\u003cfig-Announce1\u003e\u003e_."},{"lineNumber":613,"author":{"gitID":"-"},"content":"+"},{"lineNumber":614,"author":{"gitID":"-"},"content":"[[fig-Announce1]]"},{"lineNumber":615,"author":{"gitID":"-"},"content":".PTMan Announcement Command +"},{"lineNumber":616,"author":{"gitID":"-"},"content":"image::Ui_announcement1.png[width\u003d\"790\"]"},{"lineNumber":617,"author":{"gitID":"-"},"content":""},{"lineNumber":618,"author":{"gitID":"-"},"content":"* When a successful announcement is made, a confirmation message will be displayed in the result display, and the changes will  be applied to the announcement."},{"lineNumber":619,"author":{"gitID":"-"},"content":"_\u003c\u003cfig-Announce2\u003e\u003e_ shows how PTMan should look like after the above command."},{"lineNumber":620,"author":{"gitID":"-"},"content":"+"},{"lineNumber":621,"author":{"gitID":"-"},"content":"[[fig-Announce2]]"},{"lineNumber":622,"author":{"gitID":"-"},"content":".Successful Announcement Made in PTMan +"},{"lineNumber":623,"author":{"gitID":"-"},"content":"image::Ui_announcement2.png[width\u003d\"600\"]"},{"lineNumber":624,"author":{"gitID":"-"},"content":""},{"lineNumber":625,"author":{"gitID":"-"},"content":"[[Encrypt]]"},{"lineNumber":626,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Encrypting the local storage files: `encrypt`"},{"lineNumber":627,"author":{"gitID":"-"},"content":"Encrypts data stored in the files of the `data` folder."},{"lineNumber":628,"author":{"gitID":"-"},"content":""},{"lineNumber":629,"author":{"gitID":"-"},"content":"*Format:* `encrypt`"},{"lineNumber":630,"author":{"gitID":"-"},"content":""},{"lineNumber":631,"author":{"gitID":"-"},"content":"*Guided Example:*"},{"lineNumber":632,"author":{"gitID":"-"},"content":""},{"lineNumber":633,"author":{"gitID":"-"},"content":"* After your `encrypt` command is executed successfully, a confirmation message will be displayed in the result display as shown in _\u003c\u003cfig-SuccessfulEncryptCommand\u003e\u003e_."},{"lineNumber":634,"author":{"gitID":"-"},"content":"+"},{"lineNumber":635,"author":{"gitID":"-"},"content":"[[fig-SuccessfulEncryptCommand]]"},{"lineNumber":636,"author":{"gitID":"-"},"content":".Successful Encryption of Local Files in PTMan +"},{"lineNumber":637,"author":{"gitID":"-"},"content":"image::SuccessfulEncryptCommand.png[width\u003d\"450\"]"},{"lineNumber":638,"author":{"gitID":"-"},"content":"+"},{"lineNumber":639,"author":{"gitID":"-"},"content":"You can view your data stored in local files with the following steps:"},{"lineNumber":640,"author":{"gitID":"-"},"content":""},{"lineNumber":641,"author":{"gitID":"-"},"content":". Open the folder where your app `PTMan.jar` is at."},{"lineNumber":642,"author":{"gitID":"-"},"content":". Open the folder named `data`. You will see two files `outletinformation.xml` and `parttimemanager.xml` there."},{"lineNumber":643,"author":{"gitID":"-"},"content":". Open `outletinformation.xml` with Internet Explorer (IE) or your favourite editor. The third line of the file indicates the encryption status with reference to _\u003c\u003cfig-Encrypt\u003e\u003e_."},{"lineNumber":644,"author":{"gitID":"-"},"content":""},{"lineNumber":645,"author":{"gitID":"-"},"content":"* _\u003c\u003cfig-Encrypt\u003e\u003e_ shows an example of what the `outletinformation.xml` file should look like when the `encrypt` command is successfully executed."},{"lineNumber":646,"author":{"gitID":"-"},"content":""},{"lineNumber":647,"author":{"gitID":"-"},"content":"+"},{"lineNumber":648,"author":{"gitID":"-"},"content":"[[fig-Encrypt]]"},{"lineNumber":649,"author":{"gitID":"-"},"content":".Example of an Encrypted `outletinformation.xml` File +"},{"lineNumber":650,"author":{"gitID":"-"},"content":"image::OutletInformationEncryptedXMLFile.jpg[width\u003d\"790\"]"},{"lineNumber":651,"author":{"gitID":"-"},"content":""},{"lineNumber":652,"author":{"gitID":"-"},"content":"[[Decrypt]]"},{"lineNumber":653,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Decrypting the local storage files: `decrypt`"},{"lineNumber":654,"author":{"gitID":"-"},"content":"Decrypts data stored in the files in `data` folder."},{"lineNumber":655,"author":{"gitID":"-"},"content":""},{"lineNumber":656,"author":{"gitID":"-"},"content":"*Format:* `decrypt`"},{"lineNumber":657,"author":{"gitID":"-"},"content":""},{"lineNumber":658,"author":{"gitID":"-"},"content":"*Guided Example:*"},{"lineNumber":659,"author":{"gitID":"-"},"content":""},{"lineNumber":660,"author":{"gitID":"-"},"content":"* After your `decrypt` command is executed successfully, a confirmation message will be displayed in the result display as shown in _\u003c\u003cfig-SuccessfulDecryptCommand\u003e\u003e_."},{"lineNumber":661,"author":{"gitID":"-"},"content":"+"},{"lineNumber":662,"author":{"gitID":"-"},"content":"[[fig-SuccessfulDecryptCommand]]"},{"lineNumber":663,"author":{"gitID":"-"},"content":".Successful Decryption of Local Files in PTMan +"},{"lineNumber":664,"author":{"gitID":"-"},"content":"image::SuccessfulDecryptCommand.png[width\u003d\"450\"]"},{"lineNumber":665,"author":{"gitID":"-"},"content":""},{"lineNumber":666,"author":{"gitID":"-"},"content":"* Open `outletinformation.xml` file again, now you can read and understand the data stored as shown in _\u003c\u003cfig-Decrypt\u003e\u003e_."},{"lineNumber":667,"author":{"gitID":"-"},"content":"+"},{"lineNumber":668,"author":{"gitID":"-"},"content":"[[fig-Decrypt]]"},{"lineNumber":669,"author":{"gitID":"-"},"content":".Example of a Decrypted `outletinformation.xml` File +"},{"lineNumber":670,"author":{"gitID":"-"},"content":"image::OutletInformationDecryptedXMLFile.jpg[width\u003d\"790\"]"},{"lineNumber":671,"author":{"gitID":"-"},"content":""},{"lineNumber":672,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Viewing encryption status: `viewencrytion`"},{"lineNumber":673,"author":{"gitID":"-"},"content":""},{"lineNumber":674,"author":{"gitID":"-"},"content":"Shows encryption status of local storage files."},{"lineNumber":675,"author":{"gitID":"-"},"content":""},{"lineNumber":676,"author":{"gitID":"-"},"content":"*Format:* `viewencryption` +"},{"lineNumber":677,"author":{"gitID":"-"},"content":"*Shorthand:* `ve`"},{"lineNumber":678,"author":{"gitID":"-"},"content":""},{"lineNumber":679,"author":{"gitID":"-"},"content":"*Guided Example:*"},{"lineNumber":680,"author":{"gitID":"-"},"content":""},{"lineNumber":681,"author":{"gitID":"-"},"content":"* After your `viewencryption` command is executed successfully, the encryption status will be displayed in the result display as shown in _\u003c\u003cfig-SuccessfulVECommand\u003e\u003e_."},{"lineNumber":682,"author":{"gitID":"-"},"content":"+"},{"lineNumber":683,"author":{"gitID":"-"},"content":"[[fig-SuccessfulVECommand]]"},{"lineNumber":684,"author":{"gitID":"-"},"content":".Encryption Status Shown in PTMan +"},{"lineNumber":685,"author":{"gitID":"-"},"content":"image::SuccessfulVECommand.png[width\u003d\"450\"]"},{"lineNumber":686,"author":{"gitID":"-"},"content":"// end::outletCommand[]"},{"lineNumber":687,"author":{"gitID":"-"},"content":""},{"lineNumber":688,"author":{"gitID":"-"},"content":"// tag::shiftmanager[]"},{"lineNumber":689,"author":{"gitID":"-"},"content":"[[Addshift]]"},{"lineNumber":690,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Adding a shift: `addshift`"},{"lineNumber":691,"author":{"gitID":"-"},"content":"Adds a shift to the timetable to indicate that you require employees at that period. +"},{"lineNumber":692,"author":{"gitID":"-"},"content":""},{"lineNumber":693,"author":{"gitID":"-"},"content":"*Format:* `addshift d/DATE ts/START_TIME te/END_TIME c/EMPLOYEE_CAPACITY` +"},{"lineNumber":694,"author":{"gitID":"-"},"content":"*Shorthand:* `as d/DATE ts/START_TIME te/END_TIME c/EMPLOYEE_CAPACITY`"},{"lineNumber":695,"author":{"gitID":"-"},"content":""},{"lineNumber":696,"author":{"gitID":"-"},"content":"****"},{"lineNumber":697,"author":{"gitID":"-"},"content":"* The `DATE` should be in DD-MM-YY format. +"},{"lineNumber":698,"author":{"gitID":"-"},"content":"* The `START_TIME` and `END_TIME` are in HHMM format. +"},{"lineNumber":699,"author":{"gitID":"-"},"content":"* The `CAPACITY` should be a positive integer."},{"lineNumber":700,"author":{"gitID":"-"},"content":"****"},{"lineNumber":701,"author":{"gitID":"-"},"content":""},{"lineNumber":702,"author":{"gitID":"-"},"content":"*Guided Example*:"},{"lineNumber":703,"author":{"gitID":"-"},"content":""},{"lineNumber":704,"author":{"gitID":"-"},"content":". To add a shift on 13th April 2018 from 12pm to 6pm that requires 3 employees, execute the command +"},{"lineNumber":705,"author":{"gitID":"-"},"content":"`addshift d/13-04-18 ts/1200 te/1800 c/3` as shown in _\u003c\u003cfig-addshiftBefore\u003e\u003e_."},{"lineNumber":706,"author":{"gitID":"-"},"content":"+"},{"lineNumber":707,"author":{"gitID":"-"},"content":"[[fig-addshiftBefore]]"},{"lineNumber":708,"author":{"gitID":"-"},"content":".PTMan Add Shift Command +"},{"lineNumber":709,"author":{"gitID":"-"},"content":"image::AddshiftBefore.png[width\u003d\"800\"]"},{"lineNumber":710,"author":{"gitID":"-"},"content":"+"},{"lineNumber":711,"author":{"gitID":"-"},"content":". You should see a confirmation message in the result display along with the shift you\u0027ve added being displayed in the timetable."},{"lineNumber":712,"author":{"gitID":"-"},"content":"This is illustrated in _\u003c\u003cfig-addshiftAfter\u003e\u003e_."},{"lineNumber":713,"author":{"gitID":"-"},"content":"+"},{"lineNumber":714,"author":{"gitID":"-"},"content":"[[fig-addshiftAfter]]"},{"lineNumber":715,"author":{"gitID":"-"},"content":".Successful Adding of a Shift in PTMan +"},{"lineNumber":716,"author":{"gitID":"-"},"content":"image::AddshiftAfter.png[width\u003d\"800\"]"},{"lineNumber":717,"author":{"gitID":"-"},"content":""},{"lineNumber":718,"author":{"gitID":"-"},"content":"[[Deleteshift]]"},{"lineNumber":719,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Deleting a shift: `deleteshift`"},{"lineNumber":720,"author":{"gitID":"-"},"content":"Deletes a shift from the timetable."},{"lineNumber":721,"author":{"gitID":"-"},"content":""},{"lineNumber":722,"author":{"gitID":"-"},"content":"*Format:* `deleteshift SHIFT_INDEX` +"},{"lineNumber":723,"author":{"gitID":"-"},"content":"*Shorthand:* `ds SHIFT_INDEX`"},{"lineNumber":724,"author":{"gitID":"-"},"content":"****"},{"lineNumber":725,"author":{"gitID":"-"},"content":"* The `SHIFT_INDEX` refers to the shift number in the timetable."},{"lineNumber":726,"author":{"gitID":"-"},"content":"* The `SHIFT_INDEX` *must be a positive integer* 1, 2, 3, ..."},{"lineNumber":727,"author":{"gitID":"-"},"content":"****"},{"lineNumber":728,"author":{"gitID":"-"},"content":""},{"lineNumber":729,"author":{"gitID":"-"},"content":"*Guided Example*:"},{"lineNumber":730,"author":{"gitID":"-"},"content":""},{"lineNumber":731,"author":{"gitID":"-"},"content":". If you wish to delete shift 1, execute the command `deleteshift 1` as shown in _\u003c\u003cfig-deleteShiftBefore\u003e\u003e_ below."},{"lineNumber":732,"author":{"gitID":"-"},"content":"+"},{"lineNumber":733,"author":{"gitID":"-"},"content":"[[fig-deleteShiftBefore]]"},{"lineNumber":734,"author":{"gitID":"-"},"content":".PTMan Delete Shift 1 Command +"},{"lineNumber":735,"author":{"gitID":"-"},"content":"image::DeleteShiftBefore.png[width\u003d\"800\"]"},{"lineNumber":736,"author":{"gitID":"-"},"content":"+"},{"lineNumber":737,"author":{"gitID":"-"},"content":". Upon successful deletion, you will see a confirmation message in the result display and you can no longer see the shift in the timetable."},{"lineNumber":738,"author":{"gitID":"-"},"content":"_\u003c\u003cfig-deleteShiftAfter\u003e\u003e_ illustrates the successful deletion of shift 1."},{"lineNumber":739,"author":{"gitID":"-"},"content":"+"},{"lineNumber":740,"author":{"gitID":"-"},"content":"[[fig-deleteShiftAfter]]"},{"lineNumber":741,"author":{"gitID":"-"},"content":".Successful Deletion of Shift 1 in PTMan +"},{"lineNumber":742,"author":{"gitID":"-"},"content":"image::DeleteShiftAfter.png[width\u003d\"800\"]"},{"lineNumber":743,"author":{"gitID":"-"},"content":"// end::shiftmanager[]"},{"lineNumber":744,"author":{"gitID":"-"},"content":""},{"lineNumber":745,"author":{"gitID":"-"},"content":"[[Apply]]"},{"lineNumber":746,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Applying an employee for a shift: `apply`"},{"lineNumber":747,"author":{"gitID":"-"},"content":"Applies an employee for a shift. +"},{"lineNumber":748,"author":{"gitID":"-"},"content":""},{"lineNumber":749,"author":{"gitID":"-"},"content":"*Format:* `apply EMPLOYEE_INDEX SHIFT_INDEX` +"},{"lineNumber":750,"author":{"gitID":"-"},"content":"*Shorthand:* `ap EMPLOYEE_INDEX SHIFT_INDEX`"},{"lineNumber":751,"author":{"gitID":"-"},"content":"****"},{"lineNumber":752,"author":{"gitID":"-"},"content":"* The `EMPLOYEE_INDEX` refers to the index number shown in the most recent employee listing."},{"lineNumber":753,"author":{"gitID":"-"},"content":"* The `SHIFT_INDEX` refers to the shift number in the timetable."},{"lineNumber":754,"author":{"gitID":"-"},"content":"* Both indexes *must be positive integers* 1, 2, 3, ..."},{"lineNumber":755,"author":{"gitID":"-"},"content":"****"},{"lineNumber":756,"author":{"gitID":"-"},"content":""},{"lineNumber":757,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":758,"author":{"gitID":"-"},"content":"If you have accidentally applied the employee for the wrong shift, you may use the `unapply` command. +"},{"lineNumber":759,"author":{"gitID":"-"},"content":"Refer to \u003c\u003cRemoving an employee from a shift: `unapply`\u003e\u003e for more information."},{"lineNumber":760,"author":{"gitID":"-"},"content":""},{"lineNumber":761,"author":{"gitID":"-"},"content":"*Guided Example*:"},{"lineNumber":762,"author":{"gitID":"-"},"content":""},{"lineNumber":763,"author":{"gitID":"-"},"content":". To apply Sum Ting Wong for shift 3, execute the command `apply 2 3` as shown in _\u003c\u003cfig-applyAdminBefore\u003e\u003e_ below."},{"lineNumber":764,"author":{"gitID":"-"},"content":"+"},{"lineNumber":765,"author":{"gitID":"-"},"content":"[[fig-applyAdminBefore]]"},{"lineNumber":766,"author":{"gitID":"-"},"content":".PTMan Apply Employee 2 to Shift 3 Command +"},{"lineNumber":767,"author":{"gitID":"-"},"content":"image::ApplyAdminBefore.png[width\u003d\"800\"]"},{"lineNumber":768,"author":{"gitID":"-"},"content":""},{"lineNumber":769,"author":{"gitID":"-"},"content":"+"},{"lineNumber":770,"author":{"gitID":"-"},"content":". As highlighted by the red boxes in _\u003c\u003cfig-applyAdminAfter\u003e\u003e_, you should see a confirmation message in the result display"},{"lineNumber":771,"author":{"gitID":"-"},"content":"and the slots left in the shift will decrease by 1 upon successful application."},{"lineNumber":772,"author":{"gitID":"-"},"content":"+"},{"lineNumber":773,"author":{"gitID":"-"},"content":"[[fig-applyAdminAfter]]"},{"lineNumber":774,"author":{"gitID":"-"},"content":".Successful Application of Employee 2 to Shift 3 in PTMan +"},{"lineNumber":775,"author":{"gitID":"-"},"content":"image::ApplyAdminAfter.png[width\u003d\"800\"]"},{"lineNumber":776,"author":{"gitID":"-"},"content":""},{"lineNumber":777,"author":{"gitID":"-"},"content":"[[Unapply]]"},{"lineNumber":778,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Removing an employee from a shift: `unapply`"},{"lineNumber":779,"author":{"gitID":"-"},"content":"Removes an employee from a shift. +"},{"lineNumber":780,"author":{"gitID":"-"},"content":""},{"lineNumber":781,"author":{"gitID":"-"},"content":"*Format:* `unapply EMPLOYEE_INDEX SHIFT_INDEX` +"},{"lineNumber":782,"author":{"gitID":"-"},"content":"*Shorthand:* `uap EMPLOYEE_INDEX SHIFT_INDEX`"},{"lineNumber":783,"author":{"gitID":"-"},"content":"****"},{"lineNumber":784,"author":{"gitID":"-"},"content":"* The `EMPLOYEE_INDEX` refers to the index number shown in the most recent employee listing."},{"lineNumber":785,"author":{"gitID":"-"},"content":"* The `SHIFT_INDEX` refers to the shift number in the timetable."},{"lineNumber":786,"author":{"gitID":"-"},"content":"* Both indexes *must be positive integers* 1, 2, 3, ..."},{"lineNumber":787,"author":{"gitID":"-"},"content":"****"},{"lineNumber":788,"author":{"gitID":"-"},"content":""},{"lineNumber":789,"author":{"gitID":"-"},"content":"*Guided Example*:"},{"lineNumber":790,"author":{"gitID":"-"},"content":""},{"lineNumber":791,"author":{"gitID":"-"},"content":". To remove Sum Ting Wong from shift 3, execute the command `unapply 2 3` as shown in _\u003c\u003cfig-unapplyAdminBefore\u003e\u003e_ below."},{"lineNumber":792,"author":{"gitID":"-"},"content":"+"},{"lineNumber":793,"author":{"gitID":"-"},"content":"[[fig-unapplyAdminBefore]]"},{"lineNumber":794,"author":{"gitID":"-"},"content":".PTMan Remove Employee 2 from Shift 3 Command +"},{"lineNumber":795,"author":{"gitID":"-"},"content":"image::UnapplyAdminBefore.png[width\u003d\"800\"]"},{"lineNumber":796,"author":{"gitID":"-"},"content":". As highlighted by the red boxes in _\u003c\u003cfig-unapplyAdminAfter\u003e\u003e_, you should see a confirmation message in the result display"},{"lineNumber":797,"author":{"gitID":"-"},"content":"and the slots left in the shift will increase by 1 upon successful removal."},{"lineNumber":798,"author":{"gitID":"-"},"content":"+"},{"lineNumber":799,"author":{"gitID":"-"},"content":"[[fig-unapplyAdminAfter]]"},{"lineNumber":800,"author":{"gitID":"-"},"content":".Successful Removal of Employee 2 from Shift 3 in PTMan +"},{"lineNumber":801,"author":{"gitID":"-"},"content":"image::UnapplyAdminAfter.png[width\u003d\"800\"]"},{"lineNumber":802,"author":{"gitID":"-"},"content":""},{"lineNumber":803,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Employee Commands"},{"lineNumber":804,"author":{"gitID":"-"},"content":"As an employee, you are able to access these commands in addition to the \u003c\u003cGeneral Commands, general commands\u003e\u003e."},{"lineNumber":805,"author":{"gitID":"-"},"content":"These employee commands require the use of your employee password."},{"lineNumber":806,"author":{"gitID":"-"},"content":""},{"lineNumber":807,"author":{"gitID":"-"},"content":"// tag::shiftemployee[]"},{"lineNumber":808,"author":{"gitID":"-"},"content":"[[Apply-2]]"},{"lineNumber":809,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Applying for a shift: `apply`"},{"lineNumber":810,"author":{"gitID":"-"},"content":"Applies for a shift. +"},{"lineNumber":811,"author":{"gitID":"-"},"content":""},{"lineNumber":812,"author":{"gitID":"-"},"content":"*Format:* `apply EMPLOYEE_INDEX SHIFT_INDEX pw/PASSWORD` +"},{"lineNumber":813,"author":{"gitID":"-"},"content":"*Shorthand:* `ap EMPLOYEE_INDEX SHIFT_INDEX pw/PASSWORD`"},{"lineNumber":814,"author":{"gitID":"-"},"content":"****"},{"lineNumber":815,"author":{"gitID":"-"},"content":"* The `EMPLOYEE_INDEX` refers to the index number shown in the most recent employee listing."},{"lineNumber":816,"author":{"gitID":"-"},"content":"* The `SHIFT_INDEX` refers to the shift number in the timetable."},{"lineNumber":817,"author":{"gitID":"-"},"content":"* Both indexes *must be positive integers* 1, 2, 3, ..."},{"lineNumber":818,"author":{"gitID":"-"},"content":"****"},{"lineNumber":819,"author":{"gitID":"-"},"content":""},{"lineNumber":820,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":821,"author":{"gitID":"-"},"content":"If you have accidentally applied for the wrong shift, you may use the `unapply` command. +"},{"lineNumber":822,"author":{"gitID":"-"},"content":"Refer to \u003c\u003cRemoving yourself from a shift: `unapply`\u003e\u003e for more information."},{"lineNumber":823,"author":{"gitID":"-"},"content":""},{"lineNumber":824,"author":{"gitID":"-"},"content":"*Guided Example*:"},{"lineNumber":825,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":826,"author":{"gitID":"-"},"content":". If you are Sum Ting Wong and you wish to apply for shift 3, execute the command +"},{"lineNumber":827,"author":{"gitID":"-"},"content":"`apply 2 3 pw/YOUR_PASSWORD` as shown in _\u003c\u003cfig-applyBefore\u003e\u003e_ below."},{"lineNumber":828,"author":{"gitID":"-"},"content":"+"},{"lineNumber":829,"author":{"gitID":"-"},"content":"[[fig-applyBefore]]"},{"lineNumber":830,"author":{"gitID":"-"},"content":".PTMan Apply Employee 2 to Shift 3 Command +"},{"lineNumber":831,"author":{"gitID":"-"},"content":"image::ApplyBefore.png[width\u003d\"800\"]"},{"lineNumber":832,"author":{"gitID":"-"},"content":"+"},{"lineNumber":833,"author":{"gitID":"-"},"content":". As highlighted by the red boxes in _\u003c\u003cfig-applyAfter\u003e\u003e_, you should see a confirmation message in the result display"},{"lineNumber":834,"author":{"gitID":"-"},"content":"and the slots left in the shift will decrease by 1 upon successful application."},{"lineNumber":835,"author":{"gitID":"-"},"content":"+"},{"lineNumber":836,"author":{"gitID":"-"},"content":"[[fig-applyAfter]]"},{"lineNumber":837,"author":{"gitID":"-"},"content":".Successful Application of Employee 2 to Shift 3 in PTMan +"},{"lineNumber":838,"author":{"gitID":"-"},"content":"image::ApplyAfter.png[width\u003d\"800\"]"},{"lineNumber":839,"author":{"gitID":"-"},"content":""},{"lineNumber":840,"author":{"gitID":"-"},"content":"[[Unapply-2]]"},{"lineNumber":841,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Removing yourself from a shift: `unapply`"},{"lineNumber":842,"author":{"gitID":"-"},"content":"Removes youreself from a shift. +"},{"lineNumber":843,"author":{"gitID":"-"},"content":""},{"lineNumber":844,"author":{"gitID":"-"},"content":"*Format:* `unapply EMPLOYEE_INDEX SHIFT_INDEX pw/PASSWORD` +"},{"lineNumber":845,"author":{"gitID":"-"},"content":"*Shorthand:* `uap EMPLOYEE_INDEX SHIFT_INDEX pw/PASSWORD`"},{"lineNumber":846,"author":{"gitID":"-"},"content":"****"},{"lineNumber":847,"author":{"gitID":"-"},"content":"* The `EMPLOYEE_INDEX` refers to the index number shown in the most recent employee listing."},{"lineNumber":848,"author":{"gitID":"-"},"content":"* The `SHIFT_INDEX` refers to the shift number in the timetable."},{"lineNumber":849,"author":{"gitID":"-"},"content":"* Both indexes *must be positive integers* 1, 2, 3, ..."},{"lineNumber":850,"author":{"gitID":"-"},"content":"****"},{"lineNumber":851,"author":{"gitID":"-"},"content":""},{"lineNumber":852,"author":{"gitID":"-"},"content":"*Guided Example*:"},{"lineNumber":853,"author":{"gitID":"-"},"content":""},{"lineNumber":854,"author":{"gitID":"-"},"content":". If you are Sum Ting Wong and you wish to remove yourself from shift 3, execute the command +"},{"lineNumber":855,"author":{"gitID":"-"},"content":"`unapply 2 3 pw/YOUR_PASSWORD` as shown in _\u003c\u003cfig-unapplyBefore\u003e\u003e_ below."},{"lineNumber":856,"author":{"gitID":"-"},"content":"+"},{"lineNumber":857,"author":{"gitID":"-"},"content":"[[fig-unapplyBefore]]"},{"lineNumber":858,"author":{"gitID":"-"},"content":".PTMan Remove Employee 2 from Shift 3 Command +"},{"lineNumber":859,"author":{"gitID":"-"},"content":"image::UnapplyBefore.png[width\u003d\"800\"]"},{"lineNumber":860,"author":{"gitID":"-"},"content":"+"},{"lineNumber":861,"author":{"gitID":"-"},"content":". As highlighted by the red boxes in _\u003c\u003cfig-unapplyAfter\u003e\u003e_, you should see a confirmation message in the result display"},{"lineNumber":862,"author":{"gitID":"-"},"content":"and the slots left in the shift will increase by 1 upon successful removal."},{"lineNumber":863,"author":{"gitID":"-"},"content":"+"},{"lineNumber":864,"author":{"gitID":"-"},"content":"[[fig-unapplyAfter]]"},{"lineNumber":865,"author":{"gitID":"-"},"content":".Successful Removal of Employee 2 from Shift 3 in PTMan +"},{"lineNumber":866,"author":{"gitID":"-"},"content":"image::UnapplyAfter.png[width\u003d\"800\"]"},{"lineNumber":867,"author":{"gitID":"-"},"content":"// end::shiftemployee[]"},{"lineNumber":868,"author":{"gitID":"-"},"content":""},{"lineNumber":869,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":870,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":871,"author":{"gitID":"-"},"content":"[[Cp]]"},{"lineNumber":872,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Changing your employee password: `changepw`"},{"lineNumber":873,"author":{"gitID":"-"},"content":""},{"lineNumber":874,"author":{"gitID":"-"},"content":"Changes your employee password."},{"lineNumber":875,"author":{"gitID":"-"},"content":"For security purposes, you are highly encouraged to change your password once your manager creates your account. +"},{"lineNumber":876,"author":{"gitID":"-"},"content":""},{"lineNumber":877,"author":{"gitID":"-"},"content":"*Format:* `changepw EMPLOYEE_INDEX pw/CURRENT_PASSWORD pw/NEW_PASSWORD pw/CONFIRM_NEW_PASSWORD` +"},{"lineNumber":878,"author":{"gitID":"-"},"content":"*Shorthand:* `cp EMPLOYEE_INDEX pw/CURRENT_PASSWORD pw/NEW_PASSWORD pw/CONFIRM_NEW_PASSWORD`"},{"lineNumber":879,"author":{"gitID":"-"},"content":""},{"lineNumber":880,"author":{"gitID":"-"},"content":"*Guided Example:*"},{"lineNumber":881,"author":{"gitID":"-"},"content":""},{"lineNumber":882,"author":{"gitID":"-"},"content":"* If you are Asther toh, you can execute the command as shown in _\u003c\u003cfig-changingpw\u003e\u003e_."},{"lineNumber":883,"author":{"gitID":"-"},"content":"+"},{"lineNumber":884,"author":{"gitID":"-"},"content":"[[fig-changingpw]]"},{"lineNumber":885,"author":{"gitID":"-"},"content":".PTMan Change Employee Password Command +"},{"lineNumber":886,"author":{"gitID":"-"},"content":"image::changingpw.png[width\u003d\"790\"]"},{"lineNumber":887,"author":{"gitID":"-"},"content":""},{"lineNumber":888,"author":{"gitID":"-"},"content":"* Upon successful execution of `changepw`, a confirmation message will be displayed in the result display as shown in _\u003c\u003cfig-changepw\u003e\u003e_."},{"lineNumber":889,"author":{"gitID":"-"},"content":"+"},{"lineNumber":890,"author":{"gitID":"-"},"content":"[[fig-changepw]]"},{"lineNumber":891,"author":{"gitID":"-"},"content":".Successful Change of Employee Password in PTMan +"},{"lineNumber":892,"author":{"gitID":"-"},"content":"image::changepw.png[width\u003d\"790\"]"},{"lineNumber":893,"author":{"gitID":"-"},"content":""},{"lineNumber":894,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":895,"author":{"gitID":"-"},"content":"The password should be at least 8 characters long. +"},{"lineNumber":896,"author":{"gitID":"-"},"content":"The sequence of current and new password entered must be of the format."},{"lineNumber":897,"author":{"gitID":"-"},"content":""},{"lineNumber":898,"author":{"gitID":"-"},"content":"//****"},{"lineNumber":899,"author":{"gitID":"-"},"content":"//* The `INDEX` refers to the index number shown in the most recent employee listing."},{"lineNumber":900,"author":{"gitID":"-"},"content":"//* The `INDEX` *must be a positive integer* 1, 2, 3, ..."},{"lineNumber":901,"author":{"gitID":"-"},"content":"//****"},{"lineNumber":902,"author":{"gitID":"-"},"content":""},{"lineNumber":903,"author":{"gitID":"-"},"content":"*More Examples:*"},{"lineNumber":904,"author":{"gitID":"-"},"content":""},{"lineNumber":905,"author":{"gitID":"-"},"content":"* If your index is `5`, your current password is `DEFAULT1`, and you wish to change it to `hunter22`, type: +"},{"lineNumber":906,"author":{"gitID":"-"},"content":"`cp 5 pw/DEFAULT1 pw/hunter22 pw/hunter22`"},{"lineNumber":907,"author":{"gitID":"-"},"content":"//* If your index is `2`, your current password is `mypassword`, and you wish to change it to `NewPassw0rd`, type: +"},{"lineNumber":908,"author":{"gitID":"-"},"content":"//`cp 2 pw/mypassword pw/NewPassw0rd pw/NewPassw0rd`"},{"lineNumber":909,"author":{"gitID":"-"},"content":""},{"lineNumber":910,"author":{"gitID":"-"},"content":"[[Rp]]"},{"lineNumber":911,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Resetting your employee password: `resetpw`"},{"lineNumber":912,"author":{"gitID":"-"},"content":""},{"lineNumber":913,"author":{"gitID":"-"},"content":"Resets your employee password. This sends a temporary password to your email address."},{"lineNumber":914,"author":{"gitID":"-"},"content":"You can use this command if you have forgotten your password."},{"lineNumber":915,"author":{"gitID":"-"},"content":""},{"lineNumber":916,"author":{"gitID":"-"},"content":"*Format:* `resetpw EMPLOYEE_INDEX` +"},{"lineNumber":917,"author":{"gitID":"-"},"content":"*Shorthand:* `rp EMPLOYEE_INDEX` +"},{"lineNumber":918,"author":{"gitID":"-"},"content":""},{"lineNumber":919,"author":{"gitID":"-"},"content":"*Guided Example:*"},{"lineNumber":920,"author":{"gitID":"-"},"content":""},{"lineNumber":921,"author":{"gitID":"-"},"content":"* To reset your password, execute the command with your `EMPLOYEE_INDEX`, as illustrated in _\u003c\u003cfig-resetingPw\u003e\u003e_."},{"lineNumber":922,"author":{"gitID":"-"},"content":"+"},{"lineNumber":923,"author":{"gitID":"koo1993"},"content":"[[fig-resetingPw]]"},{"lineNumber":924,"author":{"gitID":"-"},"content":".PTMan Reset Employee Password"},{"lineNumber":925,"author":{"gitID":"-"},"content":"image::resettingpw.png[width\u003d\"790\"]"},{"lineNumber":926,"author":{"gitID":"-"},"content":""},{"lineNumber":927,"author":{"gitID":"-"},"content":"//****"},{"lineNumber":928,"author":{"gitID":"-"},"content":"//* The `INDEX` refers to the index number shown in the most recent employee listing."},{"lineNumber":929,"author":{"gitID":"-"},"content":"//* The `INDEX` *must be a positive integer* 1, 2, 3, ..."},{"lineNumber":930,"author":{"gitID":"-"},"content":"//****"},{"lineNumber":931,"author":{"gitID":"-"},"content":""},{"lineNumber":932,"author":{"gitID":"-"},"content":"* After executing `resetpw`, a temporary password will be sent to the email address that your manager has registered you with."},{"lineNumber":933,"author":{"gitID":"-"},"content":" _\u003c\u003cfig-resetPw\u003e\u003e_ shows what you should see after executing the command."},{"lineNumber":934,"author":{"gitID":"-"},"content":"+"},{"lineNumber":935,"author":{"gitID":"-"},"content":"[[fig-resetPw]]"},{"lineNumber":936,"author":{"gitID":"-"},"content":".Successful Reset of Employee Password in PTMan"},{"lineNumber":937,"author":{"gitID":"-"},"content":"image::resetpw.png[width\u003d\"790\"]"},{"lineNumber":938,"author":{"gitID":"-"},"content":""},{"lineNumber":939,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":940,"author":{"gitID":"-"},"content":"Temporary password should be changed immediately after resetting."},{"lineNumber":941,"author":{"gitID":"-"},"content":""},{"lineNumber":942,"author":{"gitID":"-"},"content":""},{"lineNumber":943,"author":{"gitID":"-"},"content":"//Examples:"},{"lineNumber":944,"author":{"gitID":"-"},"content":""},{"lineNumber":945,"author":{"gitID":"-"},"content":"//* If your index is `5`, type: +"},{"lineNumber":946,"author":{"gitID":"-"},"content":"//`rp 5`"},{"lineNumber":947,"author":{"gitID":"-"},"content":"//* If your index is `3`, type: +"},{"lineNumber":948,"author":{"gitID":"-"},"content":"//`rp 3`"},{"lineNumber":949,"author":{"gitID":"-"},"content":""},{"lineNumber":950,"author":{"gitID":"-"},"content":""},{"lineNumber":951,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d General Commands"},{"lineNumber":952,"author":{"gitID":"-"},"content":"These commands can be executed by both employees and managers."},{"lineNumber":953,"author":{"gitID":"-"},"content":""},{"lineNumber":954,"author":{"gitID":"-"},"content":"[[Help]]"},{"lineNumber":955,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Viewing help: `help`"},{"lineNumber":956,"author":{"gitID":"-"},"content":""},{"lineNumber":957,"author":{"gitID":"-"},"content":"Opens this user guide in another window. +"},{"lineNumber":958,"author":{"gitID":"-"},"content":""},{"lineNumber":959,"author":{"gitID":"-"},"content":"*Format:* `help`"},{"lineNumber":960,"author":{"gitID":"-"},"content":""},{"lineNumber":961,"author":{"gitID":"-"},"content":"[TIP]"},{"lineNumber":962,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d"},{"lineNumber":963,"author":{"gitID":"-"},"content":"Alternatively, you can find the help option by pressing kbd:[F1] or from the menu bar, as shown in _\u003c\u003cfig-Help\u003e\u003e_."},{"lineNumber":964,"author":{"gitID":"-"},"content":""},{"lineNumber":965,"author":{"gitID":"-"},"content":"[[fig-Help]]"},{"lineNumber":966,"author":{"gitID":"-"},"content":".Accessing the Help Option From the Menu Bar"},{"lineNumber":967,"author":{"gitID":"-"},"content":"image::Ui_help.png[width\u003d\"790\"]"},{"lineNumber":968,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d"},{"lineNumber":969,"author":{"gitID":"-"},"content":""},{"lineNumber":970,"author":{"gitID":"-"},"content":""},{"lineNumber":971,"author":{"gitID":"-"},"content":"[[Find]]"},{"lineNumber":972,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Locating an employee by name: `find`"},{"lineNumber":973,"author":{"gitID":"-"},"content":""},{"lineNumber":974,"author":{"gitID":"-"},"content":"Finds employees whose names contain any of the given keywords. +"},{"lineNumber":975,"author":{"gitID":"-"},"content":""},{"lineNumber":976,"author":{"gitID":"hzxcaryn"},"content":"*Format:* `find KEYWORD [MORE_KEYWORDS]` +"},{"lineNumber":977,"author":{"gitID":"hzxcaryn"},"content":"*Shorthand:* `f KEYWORD [MORE_KEYWORDS]`"},{"lineNumber":978,"author":{"gitID":"-"},"content":""},{"lineNumber":979,"author":{"gitID":"-"},"content":"****"},{"lineNumber":980,"author":{"gitID":"-"},"content":"* The search is case insensitive. e.g `hans` will match `Hans`"},{"lineNumber":981,"author":{"gitID":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`"},{"lineNumber":982,"author":{"gitID":"-"},"content":"* Only the name is searched."},{"lineNumber":983,"author":{"gitID":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`"},{"lineNumber":984,"author":{"gitID":"-"},"content":"* Employees matching at least one keyword will be returned (i.e. `OR` search). e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`"},{"lineNumber":985,"author":{"gitID":"-"},"content":"****"},{"lineNumber":986,"author":{"gitID":"-"},"content":""},{"lineNumber":987,"author":{"gitID":"-"},"content":"*Examples*:"},{"lineNumber":988,"author":{"gitID":"-"},"content":""},{"lineNumber":989,"author":{"gitID":"-"},"content":"* To find employees `john` and `John Doe`, type: +"},{"lineNumber":990,"author":{"gitID":"-"},"content":" `find John`"},{"lineNumber":991,"author":{"gitID":"-"},"content":"* To find any employee having names `Betsy`, `Tim`, or `John`, type: +"},{"lineNumber":992,"author":{"gitID":"-"},"content":"`find Betsy Tim John` +"},{"lineNumber":993,"author":{"gitID":"-"},"content":""},{"lineNumber":994,"author":{"gitID":"-"},"content":"[[List]]"},{"lineNumber":995,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Listing all employees: `list`"},{"lineNumber":996,"author":{"gitID":"-"},"content":""},{"lineNumber":997,"author":{"gitID":"-"},"content":"Shows a list of all employees in PTMan. +"},{"lineNumber":998,"author":{"gitID":"-"},"content":""},{"lineNumber":999,"author":{"gitID":"hzxcaryn"},"content":"*Format:* `list` +"},{"lineNumber":1000,"author":{"gitID":"hzxcaryn"},"content":"*Shorthand:* `l`"},{"lineNumber":1001,"author":{"gitID":"-"},"content":""},{"lineNumber":1002,"author":{"gitID":"-"},"content":"// tag::timetableInteractions[]"},{"lineNumber":1003,"author":{"gitID":"-"},"content":""},{"lineNumber":1004,"author":{"gitID":"-"},"content":"[[Viewshift]]"},{"lineNumber":1005,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Listing all employees: `viewshift`"},{"lineNumber":1006,"author":{"gitID":"-"},"content":""},{"lineNumber":1007,"author":{"gitID":"-"},"content":"Shows a list of all employees who have applied for the specified shift index in PTMan. +"},{"lineNumber":1008,"author":{"gitID":"-"},"content":""},{"lineNumber":1009,"author":{"gitID":"-"},"content":"*Format:* `viewshift SHIFT_INDEX` +"},{"lineNumber":1010,"author":{"gitID":"-"},"content":"*Shorthand:* `vs SHIFT_INDEX`"},{"lineNumber":1011,"author":{"gitID":"-"},"content":""},{"lineNumber":1012,"author":{"gitID":"-"},"content":"[TIP]"},{"lineNumber":1013,"author":{"gitID":"-"},"content":"To stop displaying the employees of the specified shift, use the \u003c\u003cList, `list`\u003e\u003e command."},{"lineNumber":1014,"author":{"gitID":"-"},"content":""},{"lineNumber":1015,"author":{"gitID":"-"},"content":"*Guided Example:*"},{"lineNumber":1016,"author":{"gitID":"-"},"content":""},{"lineNumber":1017,"author":{"gitID":"-"},"content":"* To view all employees in the second shift, key in the following as illustrated in _\u003c\u003cfig-Ui_viewshift1\u003e\u003e_."},{"lineNumber":1018,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1019,"author":{"gitID":"-"},"content":"[[fig-Ui_viewshift1]]"},{"lineNumber":1020,"author":{"gitID":"-"},"content":".Viewing Employees in Shift 2 +"},{"lineNumber":1021,"author":{"gitID":"-"},"content":"image::Ui_viewshift1.png[width\u003d\"790\"]"},{"lineNumber":1022,"author":{"gitID":"-"},"content":""},{"lineNumber":1023,"author":{"gitID":"-"},"content":"* Upon successful execution of the command, you will see a confirmation message in the result display, and the employees listed in the employee list panel as shown in _\u003c\u003cfig-Ui_viewshift2\u003e\u003e_."},{"lineNumber":1024,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1025,"author":{"gitID":"-"},"content":"[[fig-Ui_viewshift2]]"},{"lineNumber":1026,"author":{"gitID":"-"},"content":".Successful Edit of Employee Details in PTMan +"},{"lineNumber":1027,"author":{"gitID":"-"},"content":"image::Ui_viewshift2.png[width\u003d\"790\"]"},{"lineNumber":1028,"author":{"gitID":"-"},"content":""},{"lineNumber":1029,"author":{"gitID":"-"},"content":""},{"lineNumber":1030,"author":{"gitID":"-"},"content":"[[Select]]"},{"lineNumber":1031,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Displaying an employee\u0027s shift on the timetable: `select`"},{"lineNumber":1032,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":1033,"author":{"gitID":"-"},"content":"Displays the shifts of the selected employee on the timetable view. Shifts applied by the selected employee would be displayed"},{"lineNumber":1034,"author":{"gitID":"-"},"content":" in blue, while the other shifts would be displayed in brown. +"},{"lineNumber":1035,"author":{"gitID":"-"},"content":""},{"lineNumber":1036,"author":{"gitID":"-"},"content":"*Format:* `select EMPLOYEE_INDEX` +"},{"lineNumber":1037,"author":{"gitID":"-"},"content":"*Shorthand:* `sel EMPLOYEE_INDEX`"},{"lineNumber":1038,"author":{"gitID":"-"},"content":""},{"lineNumber":1039,"author":{"gitID":"-"},"content":"[TIP]"},{"lineNumber":1040,"author":{"gitID":"-"},"content":"Alternatively, you can select an employee by clicking on the employee\u0027s card in the employee list."},{"lineNumber":1041,"author":{"gitID":"-"},"content":""},{"lineNumber":1042,"author":{"gitID":"-"},"content":"[TIP]"},{"lineNumber":1043,"author":{"gitID":"-"},"content":"To stop displaying the employee\u0027s shifts on the timetable, use the \u003c\u003cDsel,`deselect`\u003e\u003e command. +"},{"lineNumber":1044,"author":{"gitID":"-"},"content":""},{"lineNumber":1045,"author":{"gitID":"-"},"content":"*Guided Example:*"},{"lineNumber":1046,"author":{"gitID":"-"},"content":""},{"lineNumber":1047,"author":{"gitID":"-"},"content":"* To highlight shifts applied by the third employee, key in the following as illustrated in _\u003c\u003cfig-Ui_select1\u003e\u003e_."},{"lineNumber":1048,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1049,"author":{"gitID":"-"},"content":"[[fig-Ui_select1]]"},{"lineNumber":1050,"author":{"gitID":"-"},"content":".Selecting Employee to Highlight Applied Shifts +"},{"lineNumber":1051,"author":{"gitID":"-"},"content":"image::Ui_select1.png[width\u003d\"790\"]"},{"lineNumber":1052,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1053,"author":{"gitID":"-"},"content":"_\u003c\u003cfig-Feature_Timetable1\u003e\u003e_ shows how the timetable looks like prior to the `select` command."},{"lineNumber":1054,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1055,"author":{"gitID":"-"},"content":"[[fig-Feature_Timetable1]]"},{"lineNumber":1056,"author":{"gitID":"-"},"content":".Initial Timetable Before Selection of Employee +"},{"lineNumber":1057,"author":{"gitID":"-"},"content":"image::Feature_Timetable1.png[width\u003d\"500\"]"},{"lineNumber":1058,"author":{"gitID":"-"},"content":""},{"lineNumber":1059,"author":{"gitID":"-"},"content":""},{"lineNumber":1060,"author":{"gitID":"-"},"content":"* Upon successful execution of the command, you will see a confirmation message in the result display, and the shifts highlighted in the timetable as shown in _\u003c\u003cfig-Ui_select2\u003e\u003e_."},{"lineNumber":1061,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1062,"author":{"gitID":"-"},"content":"[[fig-Ui_select2]]"},{"lineNumber":1063,"author":{"gitID":"-"},"content":".Successful Selection of Employee with Shifts Highlighted +"},{"lineNumber":1064,"author":{"gitID":"-"},"content":"image::Ui_select2.png[width\u003d\"790\"]"},{"lineNumber":1065,"author":{"gitID":"-"},"content":""},{"lineNumber":1066,"author":{"gitID":"-"},"content":"*More Examples:*"},{"lineNumber":1067,"author":{"gitID":"-"},"content":""},{"lineNumber":1068,"author":{"gitID":"-"},"content":"* To select the employee `1` in the results of the `find` command and display their shifts in the timetable, type: +"},{"lineNumber":1069,"author":{"gitID":"-"},"content":"`find Betsy` +"},{"lineNumber":1070,"author":{"gitID":"hzxcaryn"},"content":"`select 1` +"},{"lineNumber":1071,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":1072,"author":{"gitID":"-"},"content":"[[Dsel]]"},{"lineNumber":1073,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Deselecting an employee: `deselect`"},{"lineNumber":1074,"author":{"gitID":"-"},"content":""},{"lineNumber":1075,"author":{"gitID":"-"},"content":"Displays the timetable without any employee selected."},{"lineNumber":1076,"author":{"gitID":"-"},"content":"Useful for users to navigate back to the default timetable after using the `select` command. +"},{"lineNumber":1077,"author":{"gitID":"-"},"content":""},{"lineNumber":1078,"author":{"gitID":"-"},"content":"*Format:* `deselect`"},{"lineNumber":1079,"author":{"gitID":"-"},"content":"*Shorthand:* `dsel`"},{"lineNumber":1080,"author":{"gitID":"-"},"content":""},{"lineNumber":1081,"author":{"gitID":"-"},"content":"[[Export]]"},{"lineNumber":1082,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Exporting the timetable as image: `export`"},{"lineNumber":1083,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":1084,"author":{"gitID":"-"},"content":"Exports the current timetable displayed as an image and either saves it locally into the location for your jar file,"},{"lineNumber":1085,"author":{"gitID":"-"},"content":" or emails the exported timetable to the input email address. +"},{"lineNumber":1086,"author":{"gitID":"-"},"content":""},{"lineNumber":1087,"author":{"gitID":"-"},"content":"*Format:* `export [e/EMAIL]` +"},{"lineNumber":1088,"author":{"gitID":"-"},"content":"*Shorthand:* `exp [e/EMAIL]`"},{"lineNumber":1089,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":1090,"author":{"gitID":"-"},"content":"*Guided Example:*"},{"lineNumber":1091,"author":{"gitID":"-"},"content":""},{"lineNumber":1092,"author":{"gitID":"-"},"content":"* To export the timetable and email it to yourself, key in the following as illustrated in _\u003c\u003cfig-Ui_export1\u003e\u003e_."},{"lineNumber":1093,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1094,"author":{"gitID":"-"},"content":"[[fig-Ui_export1]]"},{"lineNumber":1095,"author":{"gitID":"-"},"content":".Exporting Timetable to Email +"},{"lineNumber":1096,"author":{"gitID":"-"},"content":"image::Ui_export1.png[width\u003d\"790\"]"},{"lineNumber":1097,"author":{"gitID":"-"},"content":""},{"lineNumber":1098,"author":{"gitID":"-"},"content":"* Upon successful execution of the command, you will see a confirmation message in the result display as shown in _\u003c\u003cfig-Ui_export2\u003e\u003e_."},{"lineNumber":1099,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1100,"author":{"gitID":"-"},"content":"[[fig-Ui_export2]]"},{"lineNumber":1101,"author":{"gitID":"-"},"content":".Successful Export of Timetable to Email +"},{"lineNumber":1102,"author":{"gitID":"-"},"content":"image::Ui_export2.png[width\u003d\"450\"]"},{"lineNumber":1103,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1104,"author":{"gitID":"-"},"content":"An email will also be sent to you as show in _\u003c\u003cfig-Ui_export3\u003e\u003e_."},{"lineNumber":1105,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1106,"author":{"gitID":"-"},"content":"[[fig-Ui_export3]]"},{"lineNumber":1107,"author":{"gitID":"-"},"content":".Successful Selection of Employee with Shifts Highlighted +"},{"lineNumber":1108,"author":{"gitID":"-"},"content":"image::Ui_export3.png[width\u003d\"790\"]"},{"lineNumber":1109,"author":{"gitID":"-"},"content":""},{"lineNumber":1110,"author":{"gitID":"-"},"content":""},{"lineNumber":1111,"author":{"gitID":"-"},"content":"*More Examples:*"},{"lineNumber":1112,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":1113,"author":{"gitID":"-"},"content":"* To export the current timetable in PTMan, type: +"},{"lineNumber":1114,"author":{"gitID":"-"},"content":"`export` +"},{"lineNumber":1115,"author":{"gitID":"-"},"content":"* To export the timetable with the shifts of employee `1` in PTMan, type: +"},{"lineNumber":1116,"author":{"gitID":"-"},"content":"`select 1` +"},{"lineNumber":1117,"author":{"gitID":"hzxcaryn"},"content":"`export` +"},{"lineNumber":1118,"author":{"gitID":"-"},"content":"* To export the timetable with the shifts of employee `1` in PTMan and send the exported timetable as email, type: +"},{"lineNumber":1119,"author":{"gitID":"-"},"content":"`select 1` +"},{"lineNumber":1120,"author":{"gitID":"-"},"content":"`export e/email@example.com`"},{"lineNumber":1121,"author":{"gitID":"-"},"content":"// end::timetableInteractions[]"},{"lineNumber":1122,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":1123,"author":{"gitID":"-"},"content":"[[History]]"},{"lineNumber":1124,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Listing entered commands: `history`"},{"lineNumber":1125,"author":{"gitID":"-"},"content":""},{"lineNumber":1126,"author":{"gitID":"-"},"content":"Lists all the commands that you have entered in reverse chronological order. +"},{"lineNumber":1127,"author":{"gitID":"-"},"content":""},{"lineNumber":1128,"author":{"gitID":"hzxcaryn"},"content":"*Format:* `history` +"},{"lineNumber":1129,"author":{"gitID":"hzxcaryn"},"content":"*Shorthand:* `h`"},{"lineNumber":1130,"author":{"gitID":"-"},"content":""},{"lineNumber":1131,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":1132,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d"},{"lineNumber":1133,"author":{"gitID":"-"},"content":"Pressing the kbd:[\u0026uarr;] and kbd:[\u0026darr;] arrows will display the previous and next input respectively in the command box."},{"lineNumber":1134,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d"},{"lineNumber":1135,"author":{"gitID":"-"},"content":""},{"lineNumber":1136,"author":{"gitID":"-"},"content":"[[Exit]]"},{"lineNumber":1137,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Exiting the program: `exit`"},{"lineNumber":1138,"author":{"gitID":"-"},"content":""},{"lineNumber":1139,"author":{"gitID":"-"},"content":"Exits the app. +"},{"lineNumber":1140,"author":{"gitID":"-"},"content":""},{"lineNumber":1141,"author":{"gitID":"hzxcaryn"},"content":"*Format:* `exit`"},{"lineNumber":1142,"author":{"gitID":"-"},"content":""},{"lineNumber":1143,"author":{"gitID":"-"},"content":"\u003d\u003d FAQ"},{"lineNumber":1144,"author":{"gitID":"-"},"content":""},{"lineNumber":1145,"author":{"gitID":"-"},"content":"*Q*: How do I transfer my data to another computer? +"},{"lineNumber":1146,"author":{"gitID":"-"},"content":"*A*: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous PTMan folder."},{"lineNumber":1147,"author":{"gitID":"-"},"content":""},{"lineNumber":1148,"author":{"gitID":"-"},"content":"\u003d\u003d Command Summary"},{"lineNumber":1149,"author":{"gitID":"-"},"content":""},{"lineNumber":1150,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Shared Commands"},{"lineNumber":1151,"author":{"gitID":"-"},"content":""},{"lineNumber":1152,"author":{"gitID":"-"},"content":"* \u003c\u003cHelp, *Help*\u003e\u003e: `help`"},{"lineNumber":1153,"author":{"gitID":"-"},"content":"* \u003c\u003cFind, *Find*\u003e\u003e: `find KEYWORD [MORE_KEYWORDS]`"},{"lineNumber":1154,"author":{"gitID":"-"},"content":"* \u003c\u003cList, *List*\u003e\u003e: `list`"},{"lineNumber":1155,"author":{"gitID":"-"},"content":"* \u003c\u003cViewshift, *View shift*\u003e\u003e: `viewshift SHIFT_INDEX`"},{"lineNumber":1156,"author":{"gitID":"-"},"content":"* \u003c\u003cSelect, *Display employee\u0027s shifts*\u003e\u003e: `select EMPLOYEE_INDEX`"},{"lineNumber":1157,"author":{"gitID":"-"},"content":"* \u003c\u003cDsel, *Stop displaying employee\u0027s shifts*\u003e\u003e: `deselect`"},{"lineNumber":1158,"author":{"gitID":"-"},"content":"* \u003c\u003cExport, *Export timetable*\u003e\u003e: `export`"},{"lineNumber":1159,"author":{"gitID":"-"},"content":"* \u003c\u003cHistory, *History*\u003e\u003e: `history`"},{"lineNumber":1160,"author":{"gitID":"-"},"content":"* \u003c\u003cExit, *Exit*\u003e\u003e: `exit`"},{"lineNumber":1161,"author":{"gitID":"-"},"content":""},{"lineNumber":1162,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Manager Commands"},{"lineNumber":1163,"author":{"gitID":"-"},"content":""},{"lineNumber":1164,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Admin management"},{"lineNumber":1165,"author":{"gitID":"-"},"content":"* \u003c\u003cLogin, *Login*\u003e\u003e: `login pw/PASSWORD`"},{"lineNumber":1166,"author":{"gitID":"-"},"content":"* \u003c\u003cLogout, *Logout*\u003e\u003e: `logout`"},{"lineNumber":1167,"author":{"gitID":"-"},"content":"* \u003c\u003cCap, *Change admin password*\u003e\u003e: `cap` `pw/CURRENT_PASSWORD pw/NEW_PASSWORD pw/CONFIRM_NEW_PASSWORD` +"},{"lineNumber":1168,"author":{"gitID":"-"},"content":"* \u003c\u003cRap, *Reset admin password*\u003e\u003e: `rap`"},{"lineNumber":1169,"author":{"gitID":"-"},"content":""},{"lineNumber":1170,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Employee management"},{"lineNumber":1171,"author":{"gitID":"-"},"content":"* \u003c\u003cAdd, *Add*\u003e\u003e: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS s/SALARY pw/AdminPassword t/TAG...`"},{"lineNumber":1172,"author":{"gitID":"-"},"content":"* \u003c\u003cEdit, *Edit*\u003e\u003e: `edit INDEX n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS s/SALARY t/TAG...`"},{"lineNumber":1173,"author":{"gitID":"-"},"content":"* \u003c\u003cDelete, *Delete*\u003e\u003e: `delete EMPLOYEE_INDEX`"},{"lineNumber":1174,"author":{"gitID":"-"},"content":""},{"lineNumber":1175,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Outlet management"},{"lineNumber":1176,"author":{"gitID":"-"},"content":"* \u003c\u003cEo, *Edit outlet information*\u003e\u003e: `editoutlet n/NAME h/OPERATING_HOURS c/CONTACT_NUMBER e/EMAIL`"},{"lineNumber":1177,"author":{"gitID":"-"},"content":"* \u003c\u003cAnnouncement, *Create announcement*\u003e\u003e: `announcement ANNOUNCEMENT_MESSAGE`"},{"lineNumber":1178,"author":{"gitID":"-"},"content":""},{"lineNumber":1179,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Shift management"},{"lineNumber":1180,"author":{"gitID":"-"},"content":"* \u003c\u003cAddshift, *Add shift*\u003e\u003e: `addshift d/DATE ts/TIME_START te/TIME_END c/CAPACITY`"},{"lineNumber":1181,"author":{"gitID":"-"},"content":"* \u003c\u003cDeleteshift, *Delete shift*\u003e\u003e: `deleteshift SHIFT_INDEX`"},{"lineNumber":1182,"author":{"gitID":"-"},"content":"* \u003c\u003cApply, *Apply*\u003e\u003e: `apply EMPLOYEE_INDEX SHIFT_INDEX`"},{"lineNumber":1183,"author":{"gitID":"-"},"content":"* \u003c\u003cUnapply, *Unapply*\u003e\u003e: `unapply EMPLOYEE_INDEX SHIFT_INDEX`"},{"lineNumber":1184,"author":{"gitID":"-"},"content":""},{"lineNumber":1185,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Storage management"},{"lineNumber":1186,"author":{"gitID":"-"},"content":"* \u003c\u003cEncrypt, *Encrypt storage files*\u003e\u003e: `encrypt`"},{"lineNumber":1187,"author":{"gitID":"-"},"content":"* \u003c\u003cDecrypt, *Decrypt storage files*\u003e\u003e: `encrypt`"},{"lineNumber":1188,"author":{"gitID":"-"},"content":""},{"lineNumber":1189,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d General commands"},{"lineNumber":1190,"author":{"gitID":"-"},"content":"* \u003c\u003cClear, *Clear*\u003e\u003e: `clear`"},{"lineNumber":1191,"author":{"gitID":"-"},"content":"* \u003c\u003cUndo, *Undo*\u003e\u003e: `undo`"},{"lineNumber":1192,"author":{"gitID":"-"},"content":"* \u003c\u003cRedo, *Redo*\u003e\u003e: `redo`"},{"lineNumber":1193,"author":{"gitID":"-"},"content":""},{"lineNumber":1194,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Employee Commands"},{"lineNumber":1195,"author":{"gitID":"-"},"content":""},{"lineNumber":1196,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Shift management"},{"lineNumber":1197,"author":{"gitID":"-"},"content":"* \u003c\u003cApply-2, *Apply*\u003e\u003e: `apply EMPLOYEE_INDEX SHIFT_INDEX pw/PASSWORD`"},{"lineNumber":1198,"author":{"gitID":"-"},"content":"* \u003c\u003cUnapply-2, *Unapply*\u003e\u003e: `unapply EMPLOYEE_INDEX SHIFT_INDEX pw/PASSWORD`"},{"lineNumber":1199,"author":{"gitID":"-"},"content":""},{"lineNumber":1200,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Password management"},{"lineNumber":1201,"author":{"gitID":"-"},"content":"* \u003c\u003cCp, *Change password*\u003e\u003e: `cp EMPLOYEE_INDEX pw/CURRENT_PASSWORD pw/NEW_PASSWORD pw/CONFIRM_NEW_PASSWORD`"},{"lineNumber":1202,"author":{"gitID":"-"},"content":"* \u003c\u003cRp, *Reset password*\u003e\u003e: `rp EMPLOYEE_INDEX`"}],"authorContributionMap":{"koo1993":8,"hzxcaryn":38,"-":1156}},{"path":"src/test/java/systemtests/SelectCommandSystemTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.SelectCommand.MESSAGE_SELECT_EMPLOYEE_SUCCESS;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_PASSWORD;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.EmployeeUtil.DEFAULT_PASSWORD;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.KEYWORD_MATCHING_MEIER;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.getTypicalEmployees;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_FIRST_EMPLOYEE;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.index.Index;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.LogInAdminCommand;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.RedoCommand;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.SelectCommand;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.UndoCommand;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Model;"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"-"},"content":"public class SelectCommandSystemTest extends PartTimeManagerSystemTest {"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":25,"author":{"gitID":"-"},"content":"    public void select() {"},{"lineNumber":26,"author":{"gitID":"-"},"content":"        executeDefaultAdminLogin();"},{"lineNumber":27,"author":{"gitID":"-"},"content":"        /* ------------------------ Perform select operations on the shown unfiltered list -------------------------- */"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"        /* Case: select the first card in the employee list, command with leading spaces and trailing spaces"},{"lineNumber":30,"author":{"gitID":"-"},"content":"         * -\u003e selected"},{"lineNumber":31,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":32,"author":{"gitID":"-"},"content":"        String command \u003d \"   \" + SelectCommand.COMMAND_WORD + \" \" + INDEX_FIRST_EMPLOYEE.getOneBased() + \"   \";"},{"lineNumber":33,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, INDEX_FIRST_EMPLOYEE);"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"        /* Case: select the last card in the employee list -\u003e selected */"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        Index employeeCount \u003d Index.fromOneBased(getTypicalEmployees().size());"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        command \u003d SelectCommand.COMMAND_WORD + \" \" + employeeCount.getOneBased();"},{"lineNumber":38,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, employeeCount);"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"        /* Case: undo previous selection -\u003e rejected */"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        command \u003d UndoCommand.COMMAND_WORD;"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        String expectedResultMessage \u003d UndoCommand.MESSAGE_FAILURE;"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, expectedResultMessage);"},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"-"},"content":"        /* Case: redo selecting last card in the list -\u003e rejected */"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        command \u003d RedoCommand.COMMAND_WORD;"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        expectedResultMessage \u003d RedoCommand.MESSAGE_FAILURE;"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, expectedResultMessage);"},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"-"},"content":"        /* Case: select the middle card in the employee list -\u003e selected */"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        Index middleIndex \u003d Index.fromOneBased(employeeCount.getOneBased() / 2);"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        command \u003d SelectCommand.COMMAND_WORD + \" \" + middleIndex.getOneBased();"},{"lineNumber":53,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, middleIndex);"},{"lineNumber":54,"author":{"gitID":"-"},"content":""},{"lineNumber":55,"author":{"gitID":"-"},"content":"        /* Case: select the current selected card -\u003e selected */"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, middleIndex);"},{"lineNumber":57,"author":{"gitID":"-"},"content":""},{"lineNumber":58,"author":{"gitID":"-"},"content":"        /* ------------------------ Perform select operations on the shown filtered list ---------------------------- */"},{"lineNumber":59,"author":{"gitID":"-"},"content":""},{"lineNumber":60,"author":{"gitID":"-"},"content":"        /* Case: filtered employee list, select index within bounds of ptman book but out of bounds of employee list"},{"lineNumber":61,"author":{"gitID":"-"},"content":"         * -\u003e rejected"},{"lineNumber":62,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        showEmployeesWithName(KEYWORD_MATCHING_MEIER);"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        int invalidIndex \u003d getModel().getPartTimeManager().getEmployeeList().size();"},{"lineNumber":65,"author":{"gitID":"-"},"content":"        assertCommandFailure(SelectCommand.COMMAND_WORD + \" \" + invalidIndex, MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX);"},{"lineNumber":66,"author":{"gitID":"-"},"content":""},{"lineNumber":67,"author":{"gitID":"-"},"content":"        /* Case: filtered employee list, select index within bounds of ptman book and employee list -\u003e selected */"},{"lineNumber":68,"author":{"gitID":"-"},"content":"        Index validIndex \u003d Index.fromOneBased(1);"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        assertTrue(validIndex.getZeroBased() \u003c getModel().getFilteredEmployeeList().size());"},{"lineNumber":70,"author":{"gitID":"-"},"content":"        command \u003d SelectCommand.COMMAND_WORD + \" \" + validIndex.getOneBased();"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, validIndex);"},{"lineNumber":72,"author":{"gitID":"-"},"content":""},{"lineNumber":73,"author":{"gitID":"-"},"content":"        /* ----------------------------------- Perform invalid select operations ------------------------------------ */"},{"lineNumber":74,"author":{"gitID":"-"},"content":""},{"lineNumber":75,"author":{"gitID":"-"},"content":"        /* Case: invalid index (0) -\u003e rejected */"},{"lineNumber":76,"author":{"gitID":"-"},"content":"        assertCommandFailure(SelectCommand.COMMAND_WORD + \" \" + 0,"},{"lineNumber":77,"author":{"gitID":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectCommand.MESSAGE_USAGE));"},{"lineNumber":78,"author":{"gitID":"-"},"content":""},{"lineNumber":79,"author":{"gitID":"-"},"content":"        /* Case: invalid index (-1) -\u003e rejected */"},{"lineNumber":80,"author":{"gitID":"-"},"content":"        assertCommandFailure(SelectCommand.COMMAND_WORD + \" \" + -1,"},{"lineNumber":81,"author":{"gitID":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectCommand.MESSAGE_USAGE));"},{"lineNumber":82,"author":{"gitID":"-"},"content":""},{"lineNumber":83,"author":{"gitID":"-"},"content":"        /* Case: invalid index (size + 1) -\u003e rejected */"},{"lineNumber":84,"author":{"gitID":"-"},"content":"        invalidIndex \u003d getModel().getFilteredEmployeeList().size() + 1;"},{"lineNumber":85,"author":{"gitID":"-"},"content":"        assertCommandFailure(SelectCommand.COMMAND_WORD + \" \" + invalidIndex, MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX);"},{"lineNumber":86,"author":{"gitID":"-"},"content":""},{"lineNumber":87,"author":{"gitID":"-"},"content":"        /* Case: invalid arguments (alphabets) -\u003e rejected */"},{"lineNumber":88,"author":{"gitID":"-"},"content":"        assertCommandFailure(SelectCommand.COMMAND_WORD + \" abc\","},{"lineNumber":89,"author":{"gitID":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectCommand.MESSAGE_USAGE));"},{"lineNumber":90,"author":{"gitID":"-"},"content":""},{"lineNumber":91,"author":{"gitID":"-"},"content":"        /* Case: invalid arguments (extra argument) -\u003e rejected */"},{"lineNumber":92,"author":{"gitID":"-"},"content":"        assertCommandFailure(SelectCommand.COMMAND_WORD + \" 1 abc\","},{"lineNumber":93,"author":{"gitID":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectCommand.MESSAGE_USAGE));"},{"lineNumber":94,"author":{"gitID":"-"},"content":""},{"lineNumber":95,"author":{"gitID":"-"},"content":"        /* Case: mixed case command word -\u003e rejected */"},{"lineNumber":96,"author":{"gitID":"-"},"content":"        assertCommandFailure(\"SeLeCt 1\", MESSAGE_UNKNOWN_COMMAND);"},{"lineNumber":97,"author":{"gitID":"-"},"content":""},{"lineNumber":98,"author":{"gitID":"-"},"content":"        /* Case: select from empty ptman book -\u003e rejected */"},{"lineNumber":99,"author":{"gitID":"-"},"content":"        deleteAllEmployees();"},{"lineNumber":100,"author":{"gitID":"-"},"content":"        assertCommandFailure(SelectCommand.COMMAND_WORD + \" \" + INDEX_FIRST_EMPLOYEE.getOneBased(),"},{"lineNumber":101,"author":{"gitID":"-"},"content":"                MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX);"},{"lineNumber":102,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":103,"author":{"gitID":"-"},"content":""},{"lineNumber":104,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":105,"author":{"gitID":"-"},"content":"     * Executes {@code command} and asserts that the,\u003cbr\u003e"},{"lineNumber":106,"author":{"gitID":"-"},"content":"     * 1. Command box displays an empty string.\u003cbr\u003e"},{"lineNumber":107,"author":{"gitID":"-"},"content":"     * 2. Command box has the default style class.\u003cbr\u003e"},{"lineNumber":108,"author":{"gitID":"-"},"content":"     * 3. Result display box displays the success message of executing select command with the"},{"lineNumber":109,"author":{"gitID":"-"},"content":"     * {@code expectedSelectedCardIndex} of the selected employee.\u003cbr\u003e"},{"lineNumber":110,"author":{"gitID":"-"},"content":"     * 4. {@code Model}, {@code Storage} and {@code EmployeeListPanel} remain unchanged.\u003cbr\u003e"},{"lineNumber":111,"author":{"gitID":"-"},"content":"     * 5. Selected card is at {@code expectedSelectedCardIndex} and the browser url is updated accordingly.\u003cbr\u003e"},{"lineNumber":112,"author":{"gitID":"-"},"content":"     * 6. Status bar remains unchanged.\u003cbr\u003e"},{"lineNumber":113,"author":{"gitID":"-"},"content":"     * Verifications 1, 3 and 4 are performed by"},{"lineNumber":114,"author":{"gitID":"-"},"content":"     * {@code PartTimeManagerSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"},{"lineNumber":115,"author":{"gitID":"-"},"content":"     * @see PartTimeManagerSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":116,"author":{"gitID":"-"},"content":"     * @see PartTimeManagerSystemTest#assertSelectedCardChanged(Index)"},{"lineNumber":117,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":118,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(String command, Index expectedSelectedCardIndex) {"},{"lineNumber":119,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":120,"author":{"gitID":"-"},"content":"        String expectedResultMessage \u003d String.format("},{"lineNumber":121,"author":{"gitID":"-"},"content":"                MESSAGE_SELECT_EMPLOYEE_SUCCESS, expectedSelectedCardIndex.getOneBased());"},{"lineNumber":122,"author":{"gitID":"-"},"content":"        int preExecutionSelectedCardIndex \u003d getEmployeeListPanel().getSelectedCardIndex();"},{"lineNumber":123,"author":{"gitID":"-"},"content":""},{"lineNumber":124,"author":{"gitID":"-"},"content":"        executeCommand(command);"},{"lineNumber":125,"author":{"gitID":"-"},"content":"        assertApplicationDisplaysExpected(\"\", expectedResultMessage, expectedModel);"},{"lineNumber":126,"author":{"gitID":"-"},"content":""},{"lineNumber":127,"author":{"gitID":"-"},"content":"        if (preExecutionSelectedCardIndex \u003d\u003d expectedSelectedCardIndex.getZeroBased()) {"},{"lineNumber":128,"author":{"gitID":"-"},"content":"            assertSelectedCardUnchanged();"},{"lineNumber":129,"author":{"gitID":"-"},"content":"        } else {"},{"lineNumber":130,"author":{"gitID":"-"},"content":"            assertSelectedCardChanged(expectedSelectedCardIndex);"},{"lineNumber":131,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":132,"author":{"gitID":"-"},"content":""},{"lineNumber":133,"author":{"gitID":"-"},"content":"        assertCommandBoxShowsDefaultStyle();"},{"lineNumber":134,"author":{"gitID":"-"},"content":"        assertStatusBarUnchanged();"},{"lineNumber":135,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":136,"author":{"gitID":"-"},"content":""},{"lineNumber":137,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":138,"author":{"gitID":"-"},"content":"     * Perform to transform PTMan to admin mode."},{"lineNumber":139,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":140,"author":{"gitID":"-"},"content":"    private void executeDefaultAdminLogin() {"},{"lineNumber":141,"author":{"gitID":"-"},"content":"        executeCommand(LogInAdminCommand.COMMAND_WORD + \" \" + PREFIX_PASSWORD + DEFAULT_PASSWORD);"},{"lineNumber":142,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":143,"author":{"gitID":"-"},"content":""},{"lineNumber":144,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":145,"author":{"gitID":"-"},"content":"     * Executes {@code command} and asserts that the,\u003cbr\u003e"},{"lineNumber":146,"author":{"gitID":"-"},"content":"     * 1. Command box displays {@code command}.\u003cbr\u003e"},{"lineNumber":147,"author":{"gitID":"-"},"content":"     * 2. Command box has the error style class.\u003cbr\u003e"},{"lineNumber":148,"author":{"gitID":"-"},"content":"     * 3. Result display box displays {@code expectedResultMessage}.\u003cbr\u003e"},{"lineNumber":149,"author":{"gitID":"-"},"content":"     * 4. {@code Model}, {@code Storage} and {@code EmployeeListPanel} remain unchanged.\u003cbr\u003e"},{"lineNumber":150,"author":{"gitID":"-"},"content":"     * 5. Browser url, selected card and status bar remain unchanged.\u003cbr\u003e"},{"lineNumber":151,"author":{"gitID":"-"},"content":"     * Verifications 1, 3 and 4 are performed by"},{"lineNumber":152,"author":{"gitID":"-"},"content":"     * {@code PartTimeManagerSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"},{"lineNumber":153,"author":{"gitID":"-"},"content":"     * @see PartTimeManagerSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":154,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":155,"author":{"gitID":"-"},"content":"    private void assertCommandFailure(String command, String expectedResultMessage) {"},{"lineNumber":156,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":157,"author":{"gitID":"-"},"content":""},{"lineNumber":158,"author":{"gitID":"-"},"content":"        executeCommand(command);"},{"lineNumber":159,"author":{"gitID":"-"},"content":"        assertApplicationDisplaysExpected(command, expectedResultMessage, expectedModel);"},{"lineNumber":160,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":161,"author":{"gitID":"hzxcaryn"},"content":"        assertCommandBoxAndResultDisplayShowsErrorStyle();"},{"lineNumber":162,"author":{"gitID":"-"},"content":"        assertStatusBarUnchanged();"},{"lineNumber":163,"author":{"gitID":"-"},"content":"        assertOutletDetailsPanelUnchanged();"},{"lineNumber":164,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":165,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"hzxcaryn":1,"-":164}},{"path":"src/test/java/systemtests/EditCommandSystemTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.DEFAULT_PASSWORD;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.INVALID_NAME_DESC;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.INVALID_SALARY_DESC;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.INVALID_TAG_DESC;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.NAME_DESC_AMY;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.NAME_DESC_BOB;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.PHONE_DESC_AMY;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.PHONE_DESC_BOB;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.SALARY_DESC_AMY;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.SALARY_DESC_BOB;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.VALID_NAME_BOB;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.VALID_PHONE_BOB;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;"},{"lineNumber":30,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_PASSWORD;"},{"lineNumber":31,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_TAG;"},{"lineNumber":32,"author":{"gitID":"-"},"content":"import static seedu.ptman.model.Model.PREDICATE_SHOW_ALL_EMPLOYEES;"},{"lineNumber":33,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.AMY;"},{"lineNumber":34,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.BOB;"},{"lineNumber":35,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.KEYWORD_MATCHING_MEIER;"},{"lineNumber":36,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_FIRST_EMPLOYEE;"},{"lineNumber":37,"author":{"gitID":"-"},"content":""},{"lineNumber":38,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.Messages;"},{"lineNumber":41,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.index.Index;"},{"lineNumber":42,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.EditCommand;"},{"lineNumber":43,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.LogInAdminCommand;"},{"lineNumber":44,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.RedoCommand;"},{"lineNumber":45,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.UndoCommand;"},{"lineNumber":46,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Model;"},{"lineNumber":47,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Address;"},{"lineNumber":48,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Email;"},{"lineNumber":49,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Employee;"},{"lineNumber":50,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Name;"},{"lineNumber":51,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Phone;"},{"lineNumber":52,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Salary;"},{"lineNumber":53,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.exceptions.DuplicateEmployeeException;"},{"lineNumber":54,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.exceptions.EmployeeNotFoundException;"},{"lineNumber":55,"author":{"gitID":"-"},"content":"import seedu.ptman.model.tag.Tag;"},{"lineNumber":56,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.EmployeeBuilder;"},{"lineNumber":57,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.EmployeeUtil;"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"-"},"content":"public class EditCommandSystemTest extends PartTimeManagerSystemTest {"},{"lineNumber":60,"author":{"gitID":"-"},"content":""},{"lineNumber":61,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":62,"author":{"gitID":"-"},"content":"    public void edit() throws Exception {"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        Model model \u003d getModel();"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        executeDefaultAdminLogin();"},{"lineNumber":65,"author":{"gitID":"-"},"content":"        /* ----------------- Performing edit operation while an unfiltered list is being shown ---------------------- */"},{"lineNumber":66,"author":{"gitID":"-"},"content":""},{"lineNumber":67,"author":{"gitID":"-"},"content":"        /* Case: edit all fields, command with leading spaces, trailing spaces and multiple spaces between each field"},{"lineNumber":68,"author":{"gitID":"-"},"content":"         * -\u003e edited"},{"lineNumber":69,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":70,"author":{"gitID":"-"},"content":"        Index index \u003d INDEX_FIRST_EMPLOYEE;"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        String command \u003d \" \" + EditCommand.COMMAND_WORD + \"  \" + index.getOneBased() + \"  \" + NAME_DESC_BOB"},{"lineNumber":72,"author":{"gitID":"-"},"content":"                + PHONE_DESC_BOB + \" \" + EMAIL_DESC_BOB + \"  \" + ADDRESS_DESC_BOB + \" \" + TAG_DESC_HUSBAND;"},{"lineNumber":73,"author":{"gitID":"-"},"content":"        Employee editedEmployee \u003d new EmployeeBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)"},{"lineNumber":74,"author":{"gitID":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();"},{"lineNumber":75,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, index, editedEmployee);"},{"lineNumber":76,"author":{"gitID":"-"},"content":""},{"lineNumber":77,"author":{"gitID":"-"},"content":"        /* Case: undo editing the last employee in the list -\u003e last employee restored */"},{"lineNumber":78,"author":{"gitID":"-"},"content":"        command \u003d UndoCommand.COMMAND_WORD;"},{"lineNumber":79,"author":{"gitID":"-"},"content":"        String expectedResultMessage \u003d UndoCommand.MESSAGE_SUCCESS;"},{"lineNumber":80,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, model, expectedResultMessage);"},{"lineNumber":81,"author":{"gitID":"-"},"content":""},{"lineNumber":82,"author":{"gitID":"-"},"content":"        /* Case: redo editing the last employee in the list -\u003e last employee edited again */"},{"lineNumber":83,"author":{"gitID":"-"},"content":"        command \u003d RedoCommand.COMMAND_WORD;"},{"lineNumber":84,"author":{"gitID":"-"},"content":"        expectedResultMessage \u003d RedoCommand.MESSAGE_SUCCESS;"},{"lineNumber":85,"author":{"gitID":"-"},"content":"        model.updateEmployee("},{"lineNumber":86,"author":{"gitID":"-"},"content":"                getModel().getFilteredEmployeeList().get(INDEX_FIRST_EMPLOYEE.getZeroBased()), editedEmployee);"},{"lineNumber":87,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, model, expectedResultMessage);"},{"lineNumber":88,"author":{"gitID":"-"},"content":""},{"lineNumber":89,"author":{"gitID":"-"},"content":"        /* Case: edit a employee with new values same as existing values -\u003e edited */"},{"lineNumber":90,"author":{"gitID":"-"},"content":"        command \u003d EditCommand.COMMAND_WORD + \" \" + index.getOneBased() + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB"},{"lineNumber":91,"author":{"gitID":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + TAG_DESC_HUSBAND;"},{"lineNumber":92,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, index, BOB);"},{"lineNumber":93,"author":{"gitID":"-"},"content":""},{"lineNumber":94,"author":{"gitID":"-"},"content":"        /* Case: edit some fields -\u003e edited */"},{"lineNumber":95,"author":{"gitID":"-"},"content":"        index \u003d INDEX_FIRST_EMPLOYEE;"},{"lineNumber":96,"author":{"gitID":"-"},"content":"        command \u003d EditCommand.COMMAND_WORD + \" \" + index.getOneBased() + TAG_DESC_FRIEND;"},{"lineNumber":97,"author":{"gitID":"-"},"content":"        Employee employeeToEdit \u003d getModel().getFilteredEmployeeList().get(index.getZeroBased());"},{"lineNumber":98,"author":{"gitID":"-"},"content":"        editedEmployee \u003d new EmployeeBuilder(employeeToEdit).withTags(VALID_TAG_FRIEND).build();"},{"lineNumber":99,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, index, editedEmployee);"},{"lineNumber":100,"author":{"gitID":"-"},"content":""},{"lineNumber":101,"author":{"gitID":"-"},"content":"        /* Case: clear tags -\u003e cleared */"},{"lineNumber":102,"author":{"gitID":"-"},"content":"        index \u003d INDEX_FIRST_EMPLOYEE;"},{"lineNumber":103,"author":{"gitID":"-"},"content":"        command \u003d EditCommand.COMMAND_WORD + \" \" + index.getOneBased() + \" \" + PREFIX_TAG.getPrefix();"},{"lineNumber":104,"author":{"gitID":"-"},"content":"        editedEmployee \u003d new EmployeeBuilder(employeeToEdit).withTags().build();"},{"lineNumber":105,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, index, editedEmployee);"},{"lineNumber":106,"author":{"gitID":"-"},"content":""},{"lineNumber":107,"author":{"gitID":"-"},"content":"        /* ------------------ Performing edit operation while a filtered list is being shown ------------------------ */"},{"lineNumber":108,"author":{"gitID":"-"},"content":""},{"lineNumber":109,"author":{"gitID":"-"},"content":"        /* Case: filtered employee list, edit index within bounds of ptman book and employee list -\u003e edited */"},{"lineNumber":110,"author":{"gitID":"-"},"content":"        showEmployeesWithName(KEYWORD_MATCHING_MEIER);"},{"lineNumber":111,"author":{"gitID":"-"},"content":"        index \u003d INDEX_FIRST_EMPLOYEE;"},{"lineNumber":112,"author":{"gitID":"-"},"content":"        assertTrue(index.getZeroBased() \u003c getModel().getFilteredEmployeeList().size());"},{"lineNumber":113,"author":{"gitID":"-"},"content":"        command \u003d EditCommand.COMMAND_WORD + \" \" + index.getOneBased() + \" \" + NAME_DESC_BOB;"},{"lineNumber":114,"author":{"gitID":"-"},"content":"        employeeToEdit \u003d getModel().getFilteredEmployeeList().get(index.getZeroBased());"},{"lineNumber":115,"author":{"gitID":"-"},"content":"        editedEmployee \u003d new EmployeeBuilder(employeeToEdit).withName(VALID_NAME_BOB).build();"},{"lineNumber":116,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, index, editedEmployee);"},{"lineNumber":117,"author":{"gitID":"-"},"content":""},{"lineNumber":118,"author":{"gitID":"-"},"content":"        /* Case: filtered employee list, edit index within bounds of ptman book but out of bounds of employee list"},{"lineNumber":119,"author":{"gitID":"-"},"content":"         * -\u003e rejected"},{"lineNumber":120,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":121,"author":{"gitID":"-"},"content":"        showEmployeesWithName(KEYWORD_MATCHING_MEIER);"},{"lineNumber":122,"author":{"gitID":"-"},"content":"        int invalidIndex \u003d getModel().getPartTimeManager().getEmployeeList().size();"},{"lineNumber":123,"author":{"gitID":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" \" + invalidIndex + NAME_DESC_BOB,"},{"lineNumber":124,"author":{"gitID":"-"},"content":"                Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX);"},{"lineNumber":125,"author":{"gitID":"-"},"content":""},{"lineNumber":126,"author":{"gitID":"-"},"content":"        /* ------------------- Performing edit operation while a employee card is selected ------------------------ */"},{"lineNumber":127,"author":{"gitID":"-"},"content":""},{"lineNumber":128,"author":{"gitID":"-"},"content":"        /* Case: selects first card in the employee list, edit a employee -\u003e edited,"},{"lineNumber":129,"author":{"gitID":"-"},"content":"         * card selection remains unchanged but browser url changes"},{"lineNumber":130,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":131,"author":{"gitID":"-"},"content":"        showAllEmployees();"},{"lineNumber":132,"author":{"gitID":"-"},"content":"        index \u003d INDEX_FIRST_EMPLOYEE;"},{"lineNumber":133,"author":{"gitID":"-"},"content":"        selectEmployee(index);"},{"lineNumber":134,"author":{"gitID":"-"},"content":"        command \u003d EditCommand.COMMAND_WORD + \" \" + index.getOneBased() + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY"},{"lineNumber":135,"author":{"gitID":"-"},"content":"                + ADDRESS_DESC_AMY + SALARY_DESC_AMY + TAG_DESC_FRIEND;"},{"lineNumber":136,"author":{"gitID":"-"},"content":"        // this can be misleading: card selection actually remains unchanged but the"},{"lineNumber":137,"author":{"gitID":"-"},"content":"        // browser\u0027s url is updated to reflect the new employee\u0027s name"},{"lineNumber":138,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, index, AMY, index);"},{"lineNumber":139,"author":{"gitID":"-"},"content":""},{"lineNumber":140,"author":{"gitID":"-"},"content":"        /* --------------------------------- Performing invalid edit operation -------------------------------------- */"},{"lineNumber":141,"author":{"gitID":"-"},"content":""},{"lineNumber":142,"author":{"gitID":"-"},"content":"        /* Case: invalid index (0) -\u003e rejected */"},{"lineNumber":143,"author":{"gitID":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" 0\" + NAME_DESC_BOB,"},{"lineNumber":144,"author":{"gitID":"-"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));"},{"lineNumber":145,"author":{"gitID":"-"},"content":""},{"lineNumber":146,"author":{"gitID":"-"},"content":"        /* Case: invalid index (-1) -\u003e rejected */"},{"lineNumber":147,"author":{"gitID":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" -1\" + NAME_DESC_BOB,"},{"lineNumber":148,"author":{"gitID":"-"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));"},{"lineNumber":149,"author":{"gitID":"-"},"content":""},{"lineNumber":150,"author":{"gitID":"-"},"content":"        /* Case: invalid index (size + 1) -\u003e rejected */"},{"lineNumber":151,"author":{"gitID":"-"},"content":"        invalidIndex \u003d getModel().getFilteredEmployeeList().size() + 1;"},{"lineNumber":152,"author":{"gitID":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" \" + invalidIndex + NAME_DESC_BOB,"},{"lineNumber":153,"author":{"gitID":"-"},"content":"                Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX);"},{"lineNumber":154,"author":{"gitID":"-"},"content":""},{"lineNumber":155,"author":{"gitID":"-"},"content":"        /* Case: missing index -\u003e rejected */"},{"lineNumber":156,"author":{"gitID":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + NAME_DESC_BOB,"},{"lineNumber":157,"author":{"gitID":"-"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));"},{"lineNumber":158,"author":{"gitID":"-"},"content":""},{"lineNumber":159,"author":{"gitID":"-"},"content":"        /* Case: missing all fields -\u003e rejected */"},{"lineNumber":160,"author":{"gitID":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" \" + INDEX_FIRST_EMPLOYEE.getOneBased(),"},{"lineNumber":161,"author":{"gitID":"-"},"content":"                EditCommand.MESSAGE_NOT_EDITED);"},{"lineNumber":162,"author":{"gitID":"-"},"content":""},{"lineNumber":163,"author":{"gitID":"-"},"content":"        /* Case: invalid name -\u003e rejected */"},{"lineNumber":164,"author":{"gitID":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" \" + INDEX_FIRST_EMPLOYEE.getOneBased()"},{"lineNumber":165,"author":{"gitID":"-"},"content":"                        + INVALID_NAME_DESC, Name.MESSAGE_NAME_CONSTRAINTS);"},{"lineNumber":166,"author":{"gitID":"-"},"content":""},{"lineNumber":167,"author":{"gitID":"-"},"content":"        /* Case: invalid phone -\u003e rejected */"},{"lineNumber":168,"author":{"gitID":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" \" + INDEX_FIRST_EMPLOYEE.getOneBased()"},{"lineNumber":169,"author":{"gitID":"-"},"content":"                        + INVALID_PHONE_DESC, Phone.MESSAGE_PHONE_CONSTRAINTS);"},{"lineNumber":170,"author":{"gitID":"-"},"content":""},{"lineNumber":171,"author":{"gitID":"-"},"content":"        /* Case: invalid email -\u003e rejected */"},{"lineNumber":172,"author":{"gitID":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" \" + INDEX_FIRST_EMPLOYEE.getOneBased()"},{"lineNumber":173,"author":{"gitID":"-"},"content":"                        + INVALID_EMAIL_DESC, Email.MESSAGE_EMAIL_CONSTRAINTS);"},{"lineNumber":174,"author":{"gitID":"-"},"content":""},{"lineNumber":175,"author":{"gitID":"-"},"content":"        /* Case: invalid address -\u003e rejected */"},{"lineNumber":176,"author":{"gitID":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" \" + INDEX_FIRST_EMPLOYEE.getOneBased()"},{"lineNumber":177,"author":{"gitID":"-"},"content":"                        + INVALID_ADDRESS_DESC, Address.MESSAGE_ADDRESS_CONSTRAINTS);"},{"lineNumber":178,"author":{"gitID":"-"},"content":""},{"lineNumber":179,"author":{"gitID":"-"},"content":"        /* Case: invalid salary -\u003e rejected */"},{"lineNumber":180,"author":{"gitID":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" \" + INDEX_FIRST_EMPLOYEE.getOneBased()"},{"lineNumber":181,"author":{"gitID":"-"},"content":"                        + INVALID_SALARY_DESC, Salary.MESSAGE_SALARY_CONSTRAINTS);"},{"lineNumber":182,"author":{"gitID":"-"},"content":""},{"lineNumber":183,"author":{"gitID":"-"},"content":"        /* Case: invalid tag -\u003e rejected */"},{"lineNumber":184,"author":{"gitID":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" \" + INDEX_FIRST_EMPLOYEE.getOneBased()"},{"lineNumber":185,"author":{"gitID":"-"},"content":"                        + INVALID_TAG_DESC, Tag.MESSAGE_TAG_CONSTRAINTS);"},{"lineNumber":186,"author":{"gitID":"-"},"content":""},{"lineNumber":187,"author":{"gitID":"-"},"content":"        /* Case: edit a employee with new values same as another employee\u0027s values -\u003e rejected */"},{"lineNumber":188,"author":{"gitID":"-"},"content":"        executeCommand(EmployeeUtil.getAddCommand(BOB));"},{"lineNumber":189,"author":{"gitID":"-"},"content":"        assertTrue(getModel().getPartTimeManager().getEmployeeList().contains(BOB));"},{"lineNumber":190,"author":{"gitID":"-"},"content":"        index \u003d INDEX_FIRST_EMPLOYEE;"},{"lineNumber":191,"author":{"gitID":"-"},"content":"        assertFalse(getModel().getFilteredEmployeeList().get(index.getZeroBased()).equals(BOB));"},{"lineNumber":192,"author":{"gitID":"-"},"content":"        command \u003d EditCommand.COMMAND_WORD + \" \" + index.getOneBased() + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB"},{"lineNumber":193,"author":{"gitID":"-"},"content":"                + ADDRESS_DESC_BOB + SALARY_DESC_BOB + TAG_DESC_FRIEND + TAG_DESC_HUSBAND;"},{"lineNumber":194,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, EditCommand.MESSAGE_DUPLICATE_EMPLOYEE);"},{"lineNumber":195,"author":{"gitID":"-"},"content":""},{"lineNumber":196,"author":{"gitID":"-"},"content":"        /* Case: edit a employee with new values same as another employee\u0027s values"},{"lineNumber":197,"author":{"gitID":"-"},"content":"         * but with different tags -\u003e rejected */"},{"lineNumber":198,"author":{"gitID":"-"},"content":"        command \u003d EditCommand.COMMAND_WORD + \" \" + index.getOneBased() + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB"},{"lineNumber":199,"author":{"gitID":"-"},"content":"                + ADDRESS_DESC_BOB + SALARY_DESC_BOB + TAG_DESC_HUSBAND;"},{"lineNumber":200,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, EditCommand.MESSAGE_DUPLICATE_EMPLOYEE);"},{"lineNumber":201,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":202,"author":{"gitID":"-"},"content":""},{"lineNumber":203,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":204,"author":{"gitID":"-"},"content":"     * Performs the same verification as {@code assertCommandSuccess(String, Index, Employee, Index)} except that"},{"lineNumber":205,"author":{"gitID":"-"},"content":"     * the browser url and selected card remain unchanged."},{"lineNumber":206,"author":{"gitID":"-"},"content":"     * @param toEdit the index of the current model\u0027s filtered list"},{"lineNumber":207,"author":{"gitID":"-"},"content":"     * @see EditCommandSystemTest#assertCommandSuccess(String, Index, Employee, Index)"},{"lineNumber":208,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":209,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(String command, Index toEdit, Employee editedEmployee) {"},{"lineNumber":210,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, toEdit, editedEmployee, null);"},{"lineNumber":211,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":212,"author":{"gitID":"-"},"content":""},{"lineNumber":213,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":214,"author":{"gitID":"-"},"content":"     * Performs the same verification as {@code assertCommandSuccess(String, Model, String, Index)} and in addition,\u003cbr\u003e"},{"lineNumber":215,"author":{"gitID":"-"},"content":"     * 1. Asserts that result display box displays the success message of executing {@code EditCommand}.\u003cbr\u003e"},{"lineNumber":216,"author":{"gitID":"-"},"content":"     * 2. Asserts that the model related components are updated to reflect the employee at index {@code toEdit} being"},{"lineNumber":217,"author":{"gitID":"-"},"content":"     * updated to values specified {@code editedEmployee}.\u003cbr\u003e"},{"lineNumber":218,"author":{"gitID":"-"},"content":"     * @param toEdit the index of the current model\u0027s filtered list."},{"lineNumber":219,"author":{"gitID":"-"},"content":"     * @see EditCommandSystemTest#assertCommandSuccess(String, Model, String, Index)"},{"lineNumber":220,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":221,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(String command, Index toEdit, Employee editedEmployee,"},{"lineNumber":222,"author":{"gitID":"-"},"content":"            Index expectedSelectedCardIndex) {"},{"lineNumber":223,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":224,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":225,"author":{"gitID":"-"},"content":"            expectedModel.updateEmployee("},{"lineNumber":226,"author":{"gitID":"-"},"content":"                    expectedModel.getFilteredEmployeeList().get(toEdit.getZeroBased()), editedEmployee);"},{"lineNumber":227,"author":{"gitID":"-"},"content":"            expectedModel.updateFilteredEmployeeList(PREDICATE_SHOW_ALL_EMPLOYEES);"},{"lineNumber":228,"author":{"gitID":"-"},"content":"        } catch (DuplicateEmployeeException | EmployeeNotFoundException e) {"},{"lineNumber":229,"author":{"gitID":"-"},"content":"            throw new IllegalArgumentException("},{"lineNumber":230,"author":{"gitID":"-"},"content":"                    \"editedEmployee is a duplicate in expectedModel, or it isn\u0027t found in the model.\");"},{"lineNumber":231,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":232,"author":{"gitID":"-"},"content":""},{"lineNumber":233,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedModel,"},{"lineNumber":234,"author":{"gitID":"-"},"content":"                String.format(EditCommand.MESSAGE_EDIT_EMPLOYEE_SUCCESS, editedEmployee), expectedSelectedCardIndex);"},{"lineNumber":235,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":236,"author":{"gitID":"-"},"content":""},{"lineNumber":237,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":238,"author":{"gitID":"-"},"content":"     * Performs the same verification as {@code assertCommandSuccess(String, Model, String, Index)} except that the"},{"lineNumber":239,"author":{"gitID":"-"},"content":"     * browser url and selected card remain unchanged."},{"lineNumber":240,"author":{"gitID":"-"},"content":"     * @see EditCommandSystemTest#assertCommandSuccess(String, Model, String, Index)"},{"lineNumber":241,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":242,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(String command, Model expectedModel, String expectedResultMessage) {"},{"lineNumber":243,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedModel, expectedResultMessage, null);"},{"lineNumber":244,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":245,"author":{"gitID":"-"},"content":""},{"lineNumber":246,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":247,"author":{"gitID":"-"},"content":"     * Executes {@code command} and in addition,\u003cbr\u003e"},{"lineNumber":248,"author":{"gitID":"-"},"content":"     * 1. Asserts that the command box displays an empty string.\u003cbr\u003e"},{"lineNumber":249,"author":{"gitID":"-"},"content":"     * 2. Asserts that the result display box displays {@code expectedResultMessage}.\u003cbr\u003e"},{"lineNumber":250,"author":{"gitID":"-"},"content":"     * 3. Asserts that the model related components equal to {@code expectedModel}.\u003cbr\u003e"},{"lineNumber":251,"author":{"gitID":"-"},"content":"     * 4. Asserts that the browser url and selected card update accordingly depending on the card at"},{"lineNumber":252,"author":{"gitID":"-"},"content":"     * {@code expectedSelectedCardIndex}.\u003cbr\u003e"},{"lineNumber":253,"author":{"gitID":"-"},"content":"     * 5. Asserts that the status bar\u0027s sync status changes.\u003cbr\u003e"},{"lineNumber":254,"author":{"gitID":"-"},"content":"     * 6. Asserts that the command box has the default style class.\u003cbr\u003e"},{"lineNumber":255,"author":{"gitID":"-"},"content":"     * Verifications 1 to 3 are performed by"},{"lineNumber":256,"author":{"gitID":"-"},"content":"     * {@code PartTimeManagerSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"},{"lineNumber":257,"author":{"gitID":"-"},"content":"     * @see PartTimeManagerSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":258,"author":{"gitID":"-"},"content":"     * @see PartTimeManagerSystemTest#assertSelectedCardChanged(Index)"},{"lineNumber":259,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":260,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(String command, Model expectedModel, String expectedResultMessage,"},{"lineNumber":261,"author":{"gitID":"-"},"content":"            Index expectedSelectedCardIndex) {"},{"lineNumber":262,"author":{"gitID":"-"},"content":"        executeCommand(command);"},{"lineNumber":263,"author":{"gitID":"-"},"content":"        expectedModel.updateFilteredEmployeeList(PREDICATE_SHOW_ALL_EMPLOYEES);"},{"lineNumber":264,"author":{"gitID":"-"},"content":"        assertApplicationDisplaysExpected(\"\", expectedResultMessage, expectedModel);"},{"lineNumber":265,"author":{"gitID":"-"},"content":"        assertCommandBoxShowsDefaultStyle();"},{"lineNumber":266,"author":{"gitID":"-"},"content":"        if (expectedSelectedCardIndex !\u003d null) {"},{"lineNumber":267,"author":{"gitID":"-"},"content":"            assertSelectedCardChanged(expectedSelectedCardIndex);"},{"lineNumber":268,"author":{"gitID":"-"},"content":"        } else {"},{"lineNumber":269,"author":{"gitID":"-"},"content":"            assertSelectedCardUnchanged();"},{"lineNumber":270,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":271,"author":{"gitID":"hzxcaryn"},"content":"        assertStatusBarChangedExceptSaveLocation();"},{"lineNumber":272,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":273,"author":{"gitID":"-"},"content":""},{"lineNumber":274,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":275,"author":{"gitID":"-"},"content":"     * Perform to transform PTMan to admin mode."},{"lineNumber":276,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":277,"author":{"gitID":"-"},"content":"    private void executeDefaultAdminLogin() {"},{"lineNumber":278,"author":{"gitID":"-"},"content":"        executeCommand(LogInAdminCommand.COMMAND_WORD + \" \" + PREFIX_PASSWORD + DEFAULT_PASSWORD);"},{"lineNumber":279,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":280,"author":{"gitID":"-"},"content":""},{"lineNumber":281,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":282,"author":{"gitID":"-"},"content":"     * Executes {@code command} and in addition,\u003cbr\u003e"},{"lineNumber":283,"author":{"gitID":"-"},"content":"     * 1. Asserts that the command box displays {@code command}.\u003cbr\u003e"},{"lineNumber":284,"author":{"gitID":"-"},"content":"     * 2. Asserts that result display box displays {@code expectedResultMessage}.\u003cbr\u003e"},{"lineNumber":285,"author":{"gitID":"-"},"content":"     * 3. Asserts that the model related components equal to the current model.\u003cbr\u003e"},{"lineNumber":286,"author":{"gitID":"-"},"content":"     * 4. Asserts that the browser url, selected card and status bar remain unchanged.\u003cbr\u003e"},{"lineNumber":287,"author":{"gitID":"-"},"content":"     * 5. Asserts that the command box has the error style.\u003cbr\u003e"},{"lineNumber":288,"author":{"gitID":"-"},"content":"     * Verifications 1 to 3 are performed by"},{"lineNumber":289,"author":{"gitID":"-"},"content":"     * {@code PartTimeManagerSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"},{"lineNumber":290,"author":{"gitID":"-"},"content":"     * @see PartTimeManagerSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":291,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":292,"author":{"gitID":"-"},"content":"    private void assertCommandFailure(String command, String expectedResultMessage) {"},{"lineNumber":293,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":294,"author":{"gitID":"-"},"content":""},{"lineNumber":295,"author":{"gitID":"-"},"content":"        executeCommand(command);"},{"lineNumber":296,"author":{"gitID":"-"},"content":"        assertApplicationDisplaysExpected(command, expectedResultMessage, expectedModel);"},{"lineNumber":297,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":298,"author":{"gitID":"hzxcaryn"},"content":"        assertCommandBoxAndResultDisplayShowsErrorStyle();"},{"lineNumber":299,"author":{"gitID":"-"},"content":"        assertStatusBarUnchanged();"},{"lineNumber":300,"author":{"gitID":"-"},"content":"        assertOutletDetailsPanelUnchanged();"},{"lineNumber":301,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":302,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"hzxcaryn":2,"-":300}},{"path":"src/test/java/systemtests/PartTimeManagerSystemTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.ui.StatusBarFooter.NUM_EMPLOYEES_STATUS;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.ui.StatusBarFooter.SYNC_STATUS_INITIAL;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.ptman.ui.StatusBarFooter.SYNC_STATUS_UPDATED;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import static seedu.ptman.ui.testutil.GuiTestAssert.assertListMatching;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import java.util.Date;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"import org.junit.After;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import org.junit.BeforeClass;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import org.junit.ClassRule;"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"hzxcaryn"},"content":"import guitests.guihandles.AdminModeDisplayHandle;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import guitests.guihandles.CommandBoxHandle;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import guitests.guihandles.EmployeeListPanelHandle;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import guitests.guihandles.MainMenuHandle;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import guitests.guihandles.MainWindowHandle;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import guitests.guihandles.OutletDetailsPanelHandle;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import guitests.guihandles.ResultDisplayHandle;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"import guitests.guihandles.StatusBarFooterHandle;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"import guitests.guihandles.TimetablePanelHandle;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"import seedu.ptman.TestApp;"},{"lineNumber":30,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.EventsCenter;"},{"lineNumber":31,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.index.Index;"},{"lineNumber":32,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.ClearCommand;"},{"lineNumber":33,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.FindCommand;"},{"lineNumber":34,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.ListCommand;"},{"lineNumber":35,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.SelectCommand;"},{"lineNumber":36,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Model;"},{"lineNumber":37,"author":{"gitID":"-"},"content":"import seedu.ptman.model.PartTimeManager;"},{"lineNumber":38,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.TypicalEmployees;"},{"lineNumber":39,"author":{"gitID":"hzxcaryn"},"content":"import seedu.ptman.ui.AdminModeDisplay;"},{"lineNumber":40,"author":{"gitID":"-"},"content":"import seedu.ptman.ui.CommandBox;"},{"lineNumber":41,"author":{"gitID":"-"},"content":"import seedu.ptman.ui.ResultDisplay;"},{"lineNumber":42,"author":{"gitID":"-"},"content":""},{"lineNumber":43,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":44,"author":{"gitID":"-"},"content":" * A system test class for PartTimeManager, which provides access to handles of GUI components and helper methods"},{"lineNumber":45,"author":{"gitID":"-"},"content":" * for test verification."},{"lineNumber":46,"author":{"gitID":"-"},"content":" */"},{"lineNumber":47,"author":{"gitID":"-"},"content":"public abstract class PartTimeManagerSystemTest {"},{"lineNumber":48,"author":{"gitID":"-"},"content":"    @ClassRule"},{"lineNumber":49,"author":{"gitID":"-"},"content":"    public static ClockRule clockRule \u003d new ClockRule();"},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"koo1993"},"content":"    private static final List\u003cString\u003e COMMAND_BOX_DEFAULT_STYLE \u003d"},{"lineNumber":52,"author":{"gitID":"koo1993"},"content":"            Arrays.asList(\"text-input\", \"text-field\", \"password-field\");"},{"lineNumber":53,"author":{"gitID":"-"},"content":"    private static final List\u003cString\u003e COMMAND_BOX_ERROR_STYLE \u003d"},{"lineNumber":54,"author":{"gitID":"koo1993"},"content":"            Arrays.asList(\"text-input\", \"text-field\", \"password-field\", CommandBox.ERROR_STYLE_CLASS);"},{"lineNumber":55,"author":{"gitID":"-"},"content":""},{"lineNumber":56,"author":{"gitID":"hzxcaryn"},"content":"    private List\u003cString\u003e defaultStyleOfResultDisplay;"},{"lineNumber":57,"author":{"gitID":"hzxcaryn"},"content":"    private List\u003cString\u003e errorStyleOfResultDisplay;"},{"lineNumber":58,"author":{"gitID":"hzxcaryn"},"content":"    private List\u003cString\u003e defaultStyleOfAdminModeDisplay;"},{"lineNumber":59,"author":{"gitID":"hzxcaryn"},"content":"    private List\u003cString\u003e loginStyleOfAdminModeDisplay;"},{"lineNumber":60,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":61,"author":{"gitID":"-"},"content":"    private MainWindowHandle mainWindowHandle;"},{"lineNumber":62,"author":{"gitID":"-"},"content":"    private TestApp testApp;"},{"lineNumber":63,"author":{"gitID":"-"},"content":"    private SystemTestSetupHelper setupHelper;"},{"lineNumber":64,"author":{"gitID":"-"},"content":""},{"lineNumber":65,"author":{"gitID":"-"},"content":"    @BeforeClass"},{"lineNumber":66,"author":{"gitID":"-"},"content":"    public static void setupBeforeClass() {"},{"lineNumber":67,"author":{"gitID":"-"},"content":"        SystemTestSetupHelper.initialize();"},{"lineNumber":68,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitID":"-"},"content":""},{"lineNumber":70,"author":{"gitID":"-"},"content":"    @Before"},{"lineNumber":71,"author":{"gitID":"-"},"content":"    public void setUp() {"},{"lineNumber":72,"author":{"gitID":"-"},"content":"        setupHelper \u003d new SystemTestSetupHelper();"},{"lineNumber":73,"author":{"gitID":"-"},"content":"        testApp \u003d setupHelper.setupApplication(this::getInitialData, getDataFileLocation());"},{"lineNumber":74,"author":{"gitID":"-"},"content":"        mainWindowHandle \u003d setupHelper.setupMainWindowHandle();"},{"lineNumber":75,"author":{"gitID":"-"},"content":""},{"lineNumber":76,"author":{"gitID":"hzxcaryn"},"content":"        defaultStyleOfResultDisplay \u003d mainWindowHandle.getResultDisplay().getStyleClass();"},{"lineNumber":77,"author":{"gitID":"hzxcaryn"},"content":"        errorStyleOfResultDisplay \u003d mainWindowHandle.getResultDisplay().getStyleClass();"},{"lineNumber":78,"author":{"gitID":"hzxcaryn"},"content":"        errorStyleOfResultDisplay.add(ResultDisplay.ERROR_STYLE_CLASS);"},{"lineNumber":79,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":80,"author":{"gitID":"hzxcaryn"},"content":"        defaultStyleOfAdminModeDisplay \u003d mainWindowHandle.getAdminModeDisplay().getStyleClass();"},{"lineNumber":81,"author":{"gitID":"hzxcaryn"},"content":"        loginStyleOfAdminModeDisplay \u003d mainWindowHandle.getAdminModeDisplay().getStyleClass();"},{"lineNumber":82,"author":{"gitID":"hzxcaryn"},"content":"        loginStyleOfAdminModeDisplay.remove(AdminModeDisplay.LABEL_STYLE_CLASS_NON_ADMIN);"},{"lineNumber":83,"author":{"gitID":"hzxcaryn"},"content":"        loginStyleOfAdminModeDisplay.add(AdminModeDisplay.LABEL_STYLE_CLASS_ADMIN);"},{"lineNumber":84,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":85,"author":{"gitID":"-"},"content":"        assertApplicationStartingStateIsCorrect();"},{"lineNumber":86,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":87,"author":{"gitID":"-"},"content":""},{"lineNumber":88,"author":{"gitID":"-"},"content":"    @After"},{"lineNumber":89,"author":{"gitID":"-"},"content":"    public void tearDown() throws Exception {"},{"lineNumber":90,"author":{"gitID":"-"},"content":"        setupHelper.tearDownStage();"},{"lineNumber":91,"author":{"gitID":"-"},"content":"        EventsCenter.clearSubscribers();"},{"lineNumber":92,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":93,"author":{"gitID":"-"},"content":""},{"lineNumber":94,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":95,"author":{"gitID":"-"},"content":"     * Returns the data to be loaded into the file in {@link #getDataFileLocation()}."},{"lineNumber":96,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":97,"author":{"gitID":"-"},"content":"    protected PartTimeManager getInitialData() {"},{"lineNumber":98,"author":{"gitID":"-"},"content":"        return TypicalEmployees.getTypicalPartTimeManager();"},{"lineNumber":99,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":100,"author":{"gitID":"-"},"content":""},{"lineNumber":101,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":102,"author":{"gitID":"-"},"content":"     * Returns the directory of the data file."},{"lineNumber":103,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":104,"author":{"gitID":"-"},"content":"    protected String getDataFileLocation() {"},{"lineNumber":105,"author":{"gitID":"-"},"content":"        return TestApp.SAVE_LOCATION_FOR_TESTING;"},{"lineNumber":106,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":107,"author":{"gitID":"-"},"content":""},{"lineNumber":108,"author":{"gitID":"-"},"content":"    public MainWindowHandle getMainWindowHandle() {"},{"lineNumber":109,"author":{"gitID":"-"},"content":"        return mainWindowHandle;"},{"lineNumber":110,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":111,"author":{"gitID":"-"},"content":""},{"lineNumber":112,"author":{"gitID":"-"},"content":"    public CommandBoxHandle getCommandBox() {"},{"lineNumber":113,"author":{"gitID":"-"},"content":"        return mainWindowHandle.getCommandBox();"},{"lineNumber":114,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":115,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":116,"author":{"gitID":"-"},"content":""},{"lineNumber":117,"author":{"gitID":"hzxcaryn"},"content":"    public AdminModeDisplayHandle getAdminModeDisplay() {"},{"lineNumber":118,"author":{"gitID":"hzxcaryn"},"content":"        return mainWindowHandle.getAdminModeDisplay();"},{"lineNumber":119,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":120,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":121,"author":{"gitID":"-"},"content":"    public EmployeeListPanelHandle getEmployeeListPanel() {"},{"lineNumber":122,"author":{"gitID":"-"},"content":"        return mainWindowHandle.getEmployeeListPanel();"},{"lineNumber":123,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":124,"author":{"gitID":"-"},"content":""},{"lineNumber":125,"author":{"gitID":"-"},"content":"    public MainMenuHandle getMainMenu() {"},{"lineNumber":126,"author":{"gitID":"-"},"content":"        return mainWindowHandle.getMainMenu();"},{"lineNumber":127,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":128,"author":{"gitID":"-"},"content":""},{"lineNumber":129,"author":{"gitID":"-"},"content":"    public OutletDetailsPanelHandle getOutletDetailsPanel() {"},{"lineNumber":130,"author":{"gitID":"-"},"content":"        return mainWindowHandle.getOutletDetailsPanel();"},{"lineNumber":131,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":132,"author":{"gitID":"-"},"content":""},{"lineNumber":133,"author":{"gitID":"-"},"content":"    public TimetablePanelHandle getTimetablePanel() {"},{"lineNumber":134,"author":{"gitID":"-"},"content":"        return mainWindowHandle.getTimetablePanel();"},{"lineNumber":135,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":136,"author":{"gitID":"-"},"content":""},{"lineNumber":137,"author":{"gitID":"-"},"content":"    public StatusBarFooterHandle getStatusBarFooter() {"},{"lineNumber":138,"author":{"gitID":"-"},"content":"        return mainWindowHandle.getStatusBarFooter();"},{"lineNumber":139,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":140,"author":{"gitID":"-"},"content":""},{"lineNumber":141,"author":{"gitID":"-"},"content":"    public ResultDisplayHandle getResultDisplay() {"},{"lineNumber":142,"author":{"gitID":"-"},"content":"        return mainWindowHandle.getResultDisplay();"},{"lineNumber":143,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":144,"author":{"gitID":"-"},"content":""},{"lineNumber":145,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":146,"author":{"gitID":"-"},"content":"     * Executes {@code command} in the application\u0027s {@code CommandBox}."},{"lineNumber":147,"author":{"gitID":"-"},"content":"     * Method returns after UI components have been updated."},{"lineNumber":148,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":149,"author":{"gitID":"-"},"content":"    protected void executeCommand(String command) {"},{"lineNumber":150,"author":{"gitID":"-"},"content":"        rememberStates();"},{"lineNumber":151,"author":{"gitID":"-"},"content":"        // Injects a fixed clock before executing a command so that the time stamp shown in the status bar"},{"lineNumber":152,"author":{"gitID":"-"},"content":"        // after each command is predictable and also different from the previous command."},{"lineNumber":153,"author":{"gitID":"-"},"content":"        clockRule.setInjectedClockToCurrentTime();"},{"lineNumber":154,"author":{"gitID":"-"},"content":""},{"lineNumber":155,"author":{"gitID":"-"},"content":"        mainWindowHandle.getCommandBox().run(command);"},{"lineNumber":156,"author":{"gitID":"-"},"content":""},{"lineNumber":157,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":158,"author":{"gitID":"-"},"content":""},{"lineNumber":159,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":160,"author":{"gitID":"-"},"content":"     * Displays all employees in PTMan."},{"lineNumber":161,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":162,"author":{"gitID":"-"},"content":"    protected void showAllEmployees() {"},{"lineNumber":163,"author":{"gitID":"-"},"content":"        executeCommand(ListCommand.COMMAND_WORD);"},{"lineNumber":164,"author":{"gitID":"-"},"content":"        assertEquals(getModel().getPartTimeManager().getEmployeeList().size(),"},{"lineNumber":165,"author":{"gitID":"-"},"content":"                getModel().getFilteredEmployeeList().size());"},{"lineNumber":166,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":167,"author":{"gitID":"-"},"content":""},{"lineNumber":168,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":169,"author":{"gitID":"-"},"content":"     * Displays all employees with any parts of their names matching {@code keyword} (case-insensitive)."},{"lineNumber":170,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":171,"author":{"gitID":"-"},"content":"    protected void showEmployeesWithName(String keyword) {"},{"lineNumber":172,"author":{"gitID":"-"},"content":"        executeCommand(FindCommand.COMMAND_WORD + \" \" + keyword);"},{"lineNumber":173,"author":{"gitID":"-"},"content":"        assertTrue(getModel().getFilteredEmployeeList().size()"},{"lineNumber":174,"author":{"gitID":"-"},"content":"                \u003c getModel().getPartTimeManager().getEmployeeList().size());"},{"lineNumber":175,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":176,"author":{"gitID":"-"},"content":""},{"lineNumber":177,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":178,"author":{"gitID":"-"},"content":"     * Selects the employee at {@code index} of the displayed list."},{"lineNumber":179,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":180,"author":{"gitID":"-"},"content":"    protected void selectEmployee(Index index) {"},{"lineNumber":181,"author":{"gitID":"-"},"content":"        executeCommand(SelectCommand.COMMAND_WORD + \" \" + index.getOneBased());"},{"lineNumber":182,"author":{"gitID":"-"},"content":"        assertEquals(index.getZeroBased(), getEmployeeListPanel().getSelectedCardIndex());"},{"lineNumber":183,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":184,"author":{"gitID":"-"},"content":""},{"lineNumber":185,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":186,"author":{"gitID":"-"},"content":"     * Deletes all employees in PTMan."},{"lineNumber":187,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":188,"author":{"gitID":"-"},"content":"    protected void deleteAllEmployees() {"},{"lineNumber":189,"author":{"gitID":"-"},"content":"        executeCommand(ClearCommand.COMMAND_WORD + \" \");"},{"lineNumber":190,"author":{"gitID":"-"},"content":"        assertEquals(0, getModel().getPartTimeManager().getEmployeeList().size());"},{"lineNumber":191,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":192,"author":{"gitID":"-"},"content":""},{"lineNumber":193,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":194,"author":{"gitID":"-"},"content":"     * Asserts that the {@code CommandBox} displays {@code expectedCommandInput}, the {@code ResultDisplay} displays"},{"lineNumber":195,"author":{"gitID":"-"},"content":"     * {@code expectedResultMessage}, the model and storage contains the same employee objects as {@code expectedModel}"},{"lineNumber":196,"author":{"gitID":"-"},"content":"     * and the employee list panel displays the employees in the model correctly."},{"lineNumber":197,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":198,"author":{"gitID":"-"},"content":"    protected void assertApplicationDisplaysExpected(String expectedCommandInput, String expectedResultMessage,"},{"lineNumber":199,"author":{"gitID":"-"},"content":"            Model expectedModel) {"},{"lineNumber":200,"author":{"gitID":"-"},"content":"        assertEquals(expectedCommandInput, getCommandBox().getInput());"},{"lineNumber":201,"author":{"gitID":"-"},"content":"        assertEquals(expectedResultMessage, getResultDisplay().getText());"},{"lineNumber":202,"author":{"gitID":"-"},"content":"        assertEquals(expectedModel, getModel());"},{"lineNumber":203,"author":{"gitID":"-"},"content":"        assertEquals(expectedModel.getPartTimeManager(), testApp.readStoragePartTimeManager());"},{"lineNumber":204,"author":{"gitID":"-"},"content":"        assertListMatching(getEmployeeListPanel(), expectedModel.getFilteredEmployeeList());"},{"lineNumber":205,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":206,"author":{"gitID":"-"},"content":""},{"lineNumber":207,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":208,"author":{"gitID":"-"},"content":"     * Calls {@code OutletDetailsPanelHandle}, {@code EmployeeListPanelHandle} and {@code StatusBarFooterHandle} to"},{"lineNumber":209,"author":{"gitID":"-"},"content":"     * remember their current state."},{"lineNumber":210,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":211,"author":{"gitID":"-"},"content":"    private void rememberStates() {"},{"lineNumber":212,"author":{"gitID":"-"},"content":"        OutletDetailsPanelHandle outletDetailsPanelHandle \u003d getOutletDetailsPanel();"},{"lineNumber":213,"author":{"gitID":"-"},"content":"        outletDetailsPanelHandle.rememberOutletAnnouncement();"},{"lineNumber":214,"author":{"gitID":"-"},"content":"        outletDetailsPanelHandle.rememberOutletInformation();"},{"lineNumber":215,"author":{"gitID":"-"},"content":"        outletDetailsPanelHandle.rememberOutletName();"},{"lineNumber":216,"author":{"gitID":"-"},"content":"        StatusBarFooterHandle statusBarFooterHandle \u003d getStatusBarFooter();"},{"lineNumber":217,"author":{"gitID":"-"},"content":"        statusBarFooterHandle.rememberSaveLocation();"},{"lineNumber":218,"author":{"gitID":"-"},"content":"        statusBarFooterHandle.rememberSyncStatus();"},{"lineNumber":219,"author":{"gitID":"-"},"content":"        statusBarFooterHandle.rememberNumEmployees();"},{"lineNumber":220,"author":{"gitID":"-"},"content":"        getEmployeeListPanel().rememberSelectedEmployeeCard();"},{"lineNumber":221,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":222,"author":{"gitID":"-"},"content":""},{"lineNumber":223,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":224,"author":{"gitID":"-"},"content":"     * Asserts that the previously selected card is now deselected."},{"lineNumber":225,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":226,"author":{"gitID":"-"},"content":"    protected void assertSelectedCardDeselected() {"},{"lineNumber":227,"author":{"gitID":"-"},"content":"        assertFalse(getEmployeeListPanel().isAnyCardSelected());"},{"lineNumber":228,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":229,"author":{"gitID":"-"},"content":""},{"lineNumber":230,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":231,"author":{"gitID":"-"},"content":"     * Asserts that the timetable view is changed to display the details of the employee in the employee list panel at"},{"lineNumber":232,"author":{"gitID":"-"},"content":"     * {@code expectedSelectedCardIndex}, and only the card at {@code expectedSelectedCardIndex} is selected."},{"lineNumber":233,"author":{"gitID":"-"},"content":"     * @see EmployeeListPanelHandle#isSelectedEmployeeCardChanged()"},{"lineNumber":234,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":235,"author":{"gitID":"-"},"content":"    protected void assertSelectedCardChanged(Index expectedSelectedCardIndex) {"},{"lineNumber":236,"author":{"gitID":"-"},"content":"        assertEquals(expectedSelectedCardIndex.getZeroBased(), getEmployeeListPanel().getSelectedCardIndex());"},{"lineNumber":237,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":238,"author":{"gitID":"-"},"content":""},{"lineNumber":239,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":240,"author":{"gitID":"-"},"content":"     * Asserts that the selected card in the employee list panel remain unchanged."},{"lineNumber":241,"author":{"gitID":"-"},"content":"     * @see EmployeeListPanelHandle#isSelectedEmployeeCardChanged()"},{"lineNumber":242,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":243,"author":{"gitID":"-"},"content":"    protected void assertSelectedCardUnchanged() {"},{"lineNumber":244,"author":{"gitID":"-"},"content":"        assertFalse(getEmployeeListPanel().isSelectedEmployeeCardChanged());"},{"lineNumber":245,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":246,"author":{"gitID":"-"},"content":""},{"lineNumber":247,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":248,"author":{"gitID":"hzxcaryn"},"content":"     * Asserts that the command box and result display shows the default style."},{"lineNumber":249,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":250,"author":{"gitID":"-"},"content":"    protected void assertCommandBoxShowsDefaultStyle() {"},{"lineNumber":251,"author":{"gitID":"koo1993"},"content":"        assertEquals(COMMAND_BOX_DEFAULT_STYLE, getCommandBox().getStyleClass());"},{"lineNumber":252,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(defaultStyleOfResultDisplay, getResultDisplay().getStyleClass());"},{"lineNumber":253,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":254,"author":{"gitID":"-"},"content":""},{"lineNumber":255,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":256,"author":{"gitID":"hzxcaryn"},"content":"     * Asserts that the command box and result display shows the error style."},{"lineNumber":257,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":258,"author":{"gitID":"hzxcaryn"},"content":"    protected void assertCommandBoxAndResultDisplayShowsErrorStyle() {"},{"lineNumber":259,"author":{"gitID":"koo1993"},"content":"        assertEquals(COMMAND_BOX_ERROR_STYLE, getCommandBox().getStyleClass());"},{"lineNumber":260,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(errorStyleOfResultDisplay, getResultDisplay().getStyleClass());"},{"lineNumber":261,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":262,"author":{"gitID":"-"},"content":""},{"lineNumber":263,"author":{"gitID":"hzxcaryn"},"content":"    //@@author hzxcaryn"},{"lineNumber":264,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":265,"author":{"gitID":"hzxcaryn"},"content":"     * Asserts that the admin mode display shows the default(logout) style."},{"lineNumber":266,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":267,"author":{"gitID":"hzxcaryn"},"content":"    protected void assertAdminModeDisplayShowsDefaultStyle() {"},{"lineNumber":268,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(defaultStyleOfAdminModeDisplay, getAdminModeDisplay().getStyleClass());"},{"lineNumber":269,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":270,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":271,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":272,"author":{"gitID":"hzxcaryn"},"content":"     * Asserts that the admin mode display shows the login style."},{"lineNumber":273,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":274,"author":{"gitID":"hzxcaryn"},"content":"    protected void assertAdminModeDisplayShowsLoginStyle() {"},{"lineNumber":275,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(loginStyleOfAdminModeDisplay, getAdminModeDisplay().getStyleClass());"},{"lineNumber":276,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":277,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":278,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":279,"author":{"gitID":"hzxcaryn"},"content":"     * Asserts that the entire outlet panel remains the same."},{"lineNumber":280,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":281,"author":{"gitID":"hzxcaryn"},"content":"    protected void assertOutletDetailsPanelUnchanged() {"},{"lineNumber":282,"author":{"gitID":"hzxcaryn"},"content":"        OutletDetailsPanelHandle handle \u003d getOutletDetailsPanel();"},{"lineNumber":283,"author":{"gitID":"hzxcaryn"},"content":"        assertFalse(handle.isOutletAnnouncementChanged());"},{"lineNumber":284,"author":{"gitID":"hzxcaryn"},"content":"        assertFalse(handle.isOutletInformationChanged());"},{"lineNumber":285,"author":{"gitID":"hzxcaryn"},"content":"        assertFalse(handle.isOutletNameChanged());"},{"lineNumber":286,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":287,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":288,"author":{"gitID":"hzxcaryn"},"content":"    //@@author"},{"lineNumber":289,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":290,"author":{"gitID":"-"},"content":"     * Asserts that the entire status bar remains the same."},{"lineNumber":291,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":292,"author":{"gitID":"-"},"content":"    protected void assertStatusBarUnchanged() {"},{"lineNumber":293,"author":{"gitID":"-"},"content":"        StatusBarFooterHandle handle \u003d getStatusBarFooter();"},{"lineNumber":294,"author":{"gitID":"-"},"content":"        assertFalse(handle.isSaveLocationChanged());"},{"lineNumber":295,"author":{"gitID":"-"},"content":"        assertFalse(handle.isNumEmployeesChanged());"},{"lineNumber":296,"author":{"gitID":"-"},"content":"        assertFalse(handle.isSyncStatusChanged());"},{"lineNumber":297,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":298,"author":{"gitID":"-"},"content":""},{"lineNumber":299,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":300,"author":{"gitID":"hzxcaryn"},"content":"     * Asserts that only the save location in the status bar was unchanged, while sync status"},{"lineNumber":301,"author":{"gitID":"-"},"content":"     * is changed to the timing of {@code ClockRule#getInjectedClock()}, and num employees updates to"},{"lineNumber":302,"author":{"gitID":"-"},"content":"     * the current num of employees."},{"lineNumber":303,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":304,"author":{"gitID":"hzxcaryn"},"content":"    protected void assertStatusBarChangedExceptSaveLocation() {"},{"lineNumber":305,"author":{"gitID":"-"},"content":"        StatusBarFooterHandle handle \u003d getStatusBarFooter();"},{"lineNumber":306,"author":{"gitID":"-"},"content":"        String timestamp \u003d new Date(clockRule.getInjectedClock().millis()).toString();"},{"lineNumber":307,"author":{"gitID":"-"},"content":"        String expectedSyncStatus \u003d String.format(SYNC_STATUS_UPDATED, timestamp);"},{"lineNumber":308,"author":{"gitID":"-"},"content":"        int currNumEmployees \u003d testApp.getModel().getPartTimeManager().getEmployeeList().size();"},{"lineNumber":309,"author":{"gitID":"-"},"content":"        String expectedNumEmployees \u003d String.format(NUM_EMPLOYEES_STATUS, currNumEmployees);"},{"lineNumber":310,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":311,"author":{"gitID":"-"},"content":"        assertEquals(expectedSyncStatus, handle.getSyncStatus());"},{"lineNumber":312,"author":{"gitID":"-"},"content":"        assertEquals(expectedNumEmployees, handle.getNumEmployees());"},{"lineNumber":313,"author":{"gitID":"-"},"content":"        assertFalse(handle.isSaveLocationChanged());"},{"lineNumber":314,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":315,"author":{"gitID":"-"},"content":""},{"lineNumber":316,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":317,"author":{"gitID":"-"},"content":"     * Asserts that the starting state of the application is correct."},{"lineNumber":318,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":319,"author":{"gitID":"-"},"content":"    private void assertApplicationStartingStateIsCorrect() {"},{"lineNumber":320,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":321,"author":{"gitID":"-"},"content":"            assertEquals(\"\", getCommandBox().getInput());"},{"lineNumber":322,"author":{"gitID":"-"},"content":"            assertEquals(\"Welcome to PTMan. Type a command in the search bar above to get started. \""},{"lineNumber":323,"author":{"gitID":"-"},"content":"                    + \"If you need somewhere to start, search “help” to view the user guide.\","},{"lineNumber":324,"author":{"gitID":"-"},"content":"                    getResultDisplay().getText());"},{"lineNumber":325,"author":{"gitID":"-"},"content":"            assertListMatching(getEmployeeListPanel(), getModel().getFilteredEmployeeList());"},{"lineNumber":326,"author":{"gitID":"-"},"content":"            assertEquals(\"./\" + testApp.getStorageSaveLocation(), getStatusBarFooter().getSaveLocation());"},{"lineNumber":327,"author":{"gitID":"-"},"content":"            assertEquals(SYNC_STATUS_INITIAL, getStatusBarFooter().getSyncStatus());"},{"lineNumber":328,"author":{"gitID":"-"},"content":"            assertEquals(String.format(NUM_EMPLOYEES_STATUS,"},{"lineNumber":329,"author":{"gitID":"-"},"content":"                    getModel().getPartTimeManager().getEmployeeList().size()), getStatusBarFooter().getNumEmployees());"},{"lineNumber":330,"author":{"gitID":"hzxcaryn"},"content":"            assertAdminModeDisplayShowsDefaultStyle();"},{"lineNumber":331,"author":{"gitID":"-"},"content":"        } catch (Exception e) {"},{"lineNumber":332,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"Starting state is wrong.\", e);"},{"lineNumber":333,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":334,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":335,"author":{"gitID":"-"},"content":""},{"lineNumber":336,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":337,"author":{"gitID":"-"},"content":"     * Returns a defensive copy of the current model."},{"lineNumber":338,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":339,"author":{"gitID":"-"},"content":"    protected Model getModel() {"},{"lineNumber":340,"author":{"gitID":"-"},"content":"        return testApp.getModel();"},{"lineNumber":341,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":342,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"koo1993":6,"hzxcaryn":55,"-":281}},{"path":"src/test/java/seedu/ptman/ui/ResultDisplayTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.EventsUtil.postNow;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"hzxcaryn"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import guitests.guihandles.ResultDisplayHandle;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.ui.NewResultAvailableEvent;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"hzxcaryn"},"content":"//@@author hzxcaryn"},{"lineNumber":15,"author":{"gitID":"hzxcaryn"},"content":"public class ResultDisplayTest extends GuiUnitTest {"},{"lineNumber":16,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":17,"author":{"gitID":"hzxcaryn"},"content":"    private static final NewResultAvailableEvent NEW_RESULT_EVENT_SUCCESS \u003d"},{"lineNumber":18,"author":{"gitID":"hzxcaryn"},"content":"            new NewResultAvailableEvent(\"Success\", false);"},{"lineNumber":19,"author":{"gitID":"hzxcaryn"},"content":"    private static final NewResultAvailableEvent NEW_RESULT_EVENT_FAILED \u003d"},{"lineNumber":20,"author":{"gitID":"hzxcaryn"},"content":"            new NewResultAvailableEvent(\"Failed\", true);"},{"lineNumber":21,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":22,"author":{"gitID":"hzxcaryn"},"content":"    private ArrayList\u003cString\u003e defaultStyleOfResultDisplay;"},{"lineNumber":23,"author":{"gitID":"hzxcaryn"},"content":"    private ArrayList\u003cString\u003e errorStyleOfResultDisplay;"},{"lineNumber":24,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":25,"author":{"gitID":"hzxcaryn"},"content":"    private ResultDisplayHandle resultDisplayHandle;"},{"lineNumber":26,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":27,"author":{"gitID":"hzxcaryn"},"content":"    @Before"},{"lineNumber":28,"author":{"gitID":"hzxcaryn"},"content":"    public void setUp() {"},{"lineNumber":29,"author":{"gitID":"hzxcaryn"},"content":"        ResultDisplay resultDisplay \u003d new ResultDisplay();"},{"lineNumber":30,"author":{"gitID":"hzxcaryn"},"content":"        uiPartRule.setUiPart(resultDisplay);"},{"lineNumber":31,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":32,"author":{"gitID":"hzxcaryn"},"content":"        resultDisplayHandle \u003d new ResultDisplayHandle(getChildNode(resultDisplay.getRoot(),"},{"lineNumber":33,"author":{"gitID":"hzxcaryn"},"content":"                ResultDisplayHandle.RESULT_DISPLAY_ID));"},{"lineNumber":34,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":35,"author":{"gitID":"hzxcaryn"},"content":"        defaultStyleOfResultDisplay \u003d new ArrayList\u003c\u003e(resultDisplayHandle.getStyleClass());"},{"lineNumber":36,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":37,"author":{"gitID":"hzxcaryn"},"content":"        errorStyleOfResultDisplay \u003d new ArrayList\u003c\u003e(defaultStyleOfResultDisplay);"},{"lineNumber":38,"author":{"gitID":"hzxcaryn"},"content":"        errorStyleOfResultDisplay.add(CommandBox.ERROR_STYLE_CLASS);"},{"lineNumber":39,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":41,"author":{"gitID":"hzxcaryn"},"content":"    @Test"},{"lineNumber":42,"author":{"gitID":"hzxcaryn"},"content":"    public void display() {"},{"lineNumber":43,"author":{"gitID":"hzxcaryn"},"content":"        // default result text"},{"lineNumber":44,"author":{"gitID":"hzxcaryn"},"content":"        guiRobot.pauseForHuman();"},{"lineNumber":45,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(\"Welcome to PTMan. Type a command in the search bar above to get started. \""},{"lineNumber":46,"author":{"gitID":"hzxcaryn"},"content":"                + \"If you need somewhere to start, search “help” to view the user guide.\","},{"lineNumber":47,"author":{"gitID":"hzxcaryn"},"content":"                resultDisplayHandle.getText());"},{"lineNumber":48,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(defaultStyleOfResultDisplay, resultDisplayHandle.getStyleClass());"},{"lineNumber":49,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":50,"author":{"gitID":"hzxcaryn"},"content":"        // new results received"},{"lineNumber":51,"author":{"gitID":"hzxcaryn"},"content":"        assertExpectedResultDisplay(NEW_RESULT_EVENT_SUCCESS);"},{"lineNumber":52,"author":{"gitID":"hzxcaryn"},"content":"        assertExpectedResultDisplay(NEW_RESULT_EVENT_FAILED);"},{"lineNumber":53,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":54,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":55,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":56,"author":{"gitID":"hzxcaryn"},"content":"     * Runs a new result event, then verifies that \u003cbr\u003e"},{"lineNumber":57,"author":{"gitID":"hzxcaryn"},"content":"     *      - the text remains \u003cbr\u003e"},{"lineNumber":58,"author":{"gitID":"hzxcaryn"},"content":"     *      - a successful event result display\u0027s style is the same as {@code defaultStyleOfResultDisplay}."},{"lineNumber":59,"author":{"gitID":"hzxcaryn"},"content":"     *      - a failed event result display\u0027s style is the same as {@code errorStyleOfResultDisplay}."},{"lineNumber":60,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":61,"author":{"gitID":"hzxcaryn"},"content":"    private void assertExpectedResultDisplay(NewResultAvailableEvent event) {"},{"lineNumber":62,"author":{"gitID":"hzxcaryn"},"content":"        postNow(event);"},{"lineNumber":63,"author":{"gitID":"hzxcaryn"},"content":"        guiRobot.pauseForHuman();"},{"lineNumber":64,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(event.message, resultDisplayHandle.getText());"},{"lineNumber":65,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":66,"author":{"gitID":"hzxcaryn"},"content":"        if (event.isError) {"},{"lineNumber":67,"author":{"gitID":"hzxcaryn"},"content":"            assertEquals(errorStyleOfResultDisplay, resultDisplayHandle.getStyleClass());"},{"lineNumber":68,"author":{"gitID":"hzxcaryn"},"content":"        } else {"},{"lineNumber":69,"author":{"gitID":"hzxcaryn"},"content":"            assertEquals(defaultStyleOfResultDisplay, resultDisplayHandle.getStyleClass());"},{"lineNumber":70,"author":{"gitID":"hzxcaryn"},"content":"        }"},{"lineNumber":71,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":72,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":74,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":75,"author":{"gitID":"hzxcaryn"},"content":"}"}],"authorContributionMap":{"hzxcaryn":64,"-":11}},{"path":"src/test/java/seedu/ptman/ui/TimetablePanelTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertNotNull;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.util.DateUtil.getNextWeekDate;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.util.DateUtil.getPrevWeekDate;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.EventsUtil.postNow;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.ALICE;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalShifts.SHIFT_MONDAY_AM;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalShifts.getTypicalPartTimeManagerWithShifts;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import static seedu.ptman.ui.TimetablePanel.TIMETABLE_IMAGE_FILE_FORMAT;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import static seedu.ptman.ui.testutil.GuiTestAssert.assertEntryDisplaysShift;"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"import java.io.File;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import java.nio.file.Files;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import java.time.LocalDate;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"import org.junit.After;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"import com.calendarfx.model.Entry;"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"-"},"content":"import guitests.guihandles.TimetablePanelHandle;"},{"lineNumber":31,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":32,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.ui.EmployeePanelSelectionChangedEvent;"},{"lineNumber":33,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.ui.ExportTimetableAsImageAndEmailRequestEvent;"},{"lineNumber":34,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.ui.ExportTimetableAsImageRequestEvent;"},{"lineNumber":35,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.ui.TimetableWeekChangeRequestEvent;"},{"lineNumber":36,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.ui.TimetableWeekChangeRequestEvent.WeekChangeRequest;"},{"lineNumber":37,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.Logic;"},{"lineNumber":38,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.LogicManager;"},{"lineNumber":39,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Model;"},{"lineNumber":40,"author":{"gitID":"-"},"content":"import seedu.ptman.model.ModelManager;"},{"lineNumber":41,"author":{"gitID":"-"},"content":"import seedu.ptman.model.PartTimeManager;"},{"lineNumber":42,"author":{"gitID":"-"},"content":"import seedu.ptman.model.UserPrefs;"},{"lineNumber":43,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Email;"},{"lineNumber":44,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":45,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Shift;"},{"lineNumber":46,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.exceptions.DuplicateShiftException;"},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"hzxcaryn"},"content":"//@@author hzxcaryn"},{"lineNumber":50,"author":{"gitID":"hzxcaryn"},"content":"public class TimetablePanelTest extends GuiUnitTest {"},{"lineNumber":51,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":52,"author":{"gitID":"hzxcaryn"},"content":"    private static final PartTimeManager TYPICAL_PTMAN \u003d"},{"lineNumber":53,"author":{"gitID":"hzxcaryn"},"content":"            getTypicalPartTimeManagerWithShifts();"},{"lineNumber":54,"author":{"gitID":"hzxcaryn"},"content":"    private static final ObservableList\u003cShift\u003e TYPICAL_SHIFTS \u003d TYPICAL_PTMAN.getShiftList();"},{"lineNumber":55,"author":{"gitID":"hzxcaryn"},"content":"    private static final OutletInformation TYPICAL_OUTLET \u003d TYPICAL_PTMAN.getOutletInformation();"},{"lineNumber":56,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":57,"author":{"gitID":"hzxcaryn"},"content":"    private static final String TIMETABLE_IMAGE_FILE_NAME_FIRST_TEST \u003d \"Testing1\";"},{"lineNumber":58,"author":{"gitID":"hzxcaryn"},"content":"    private static final String TIMETABLE_IMAGE_FILE_NAME_SECOND_TEST \u003d \"Testing2\";"},{"lineNumber":59,"author":{"gitID":"hzxcaryn"},"content":"    private static final Email TIMETABLE_IMAGE_EMAIL_TEST \u003d new Email(\"example@gmail.com\");"},{"lineNumber":60,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":61,"author":{"gitID":"hzxcaryn"},"content":"    private EmployeePanelSelectionChangedEvent employeePanelSelectionChangedEventAliceStub;"},{"lineNumber":62,"author":{"gitID":"hzxcaryn"},"content":"    private EmployeePanelSelectionChangedEvent employeePanelSelectionChangedEventNullStub;"},{"lineNumber":63,"author":{"gitID":"hzxcaryn"},"content":"    private ExportTimetableAsImageRequestEvent exportTimetableAsImageRequestEventStub;"},{"lineNumber":64,"author":{"gitID":"hzxcaryn"},"content":"    private ExportTimetableAsImageAndEmailRequestEvent exportTimetableAsImageAndEmailRequestEventStub;"},{"lineNumber":65,"author":{"gitID":"hzxcaryn"},"content":"    private TimetableWeekChangeRequestEvent timetableWeekChangeRequestEventPrevStub;"},{"lineNumber":66,"author":{"gitID":"hzxcaryn"},"content":"    private TimetableWeekChangeRequestEvent timetableWeekChangeRequestEventNextStub;"},{"lineNumber":67,"author":{"gitID":"hzxcaryn"},"content":"    private TimetableWeekChangeRequestEvent timetableWeekChangeRequestEventCurrStub;"},{"lineNumber":68,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":69,"author":{"gitID":"hzxcaryn"},"content":"    private TimetablePanel timetablePanel;"},{"lineNumber":70,"author":{"gitID":"hzxcaryn"},"content":"    private TimetablePanelHandle timetablePanelHandle;"},{"lineNumber":71,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":72,"author":{"gitID":"hzxcaryn"},"content":"    private Path testFilePathFirst;"},{"lineNumber":73,"author":{"gitID":"hzxcaryn"},"content":"    private Path testFilePathSecond;"},{"lineNumber":74,"author":{"gitID":"hzxcaryn"},"content":"    private String testFilePathNameSecond;"},{"lineNumber":75,"author":{"gitID":"hzxcaryn"},"content":"    private LocalDate startingDate;"},{"lineNumber":76,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":77,"author":{"gitID":"hzxcaryn"},"content":"    private Logic logic;"},{"lineNumber":78,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":79,"author":{"gitID":"hzxcaryn"},"content":"    @Before"},{"lineNumber":80,"author":{"gitID":"hzxcaryn"},"content":"    public void setUp() throws DuplicateShiftException {"},{"lineNumber":81,"author":{"gitID":"hzxcaryn"},"content":"        setUpAllEventStubs();"},{"lineNumber":82,"author":{"gitID":"hzxcaryn"},"content":"        setUpTestFiles();"},{"lineNumber":83,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":84,"author":{"gitID":"hzxcaryn"},"content":"        Model model \u003d new ModelManager(TYPICAL_PTMAN, new UserPrefs(), TYPICAL_OUTLET);"},{"lineNumber":85,"author":{"gitID":"hzxcaryn"},"content":"        logic \u003d new LogicManager(model);"},{"lineNumber":86,"author":{"gitID":"hzxcaryn"},"content":"        logic.setFilteredShiftListToCustomWeek(SHIFT_MONDAY_AM.getDate().getLocalDate());"},{"lineNumber":87,"author":{"gitID":"hzxcaryn"},"content":"        timetablePanel \u003d new TimetablePanel(logic);"},{"lineNumber":88,"author":{"gitID":"hzxcaryn"},"content":"        timetablePanelHandle \u003d new TimetablePanelHandle(timetablePanel.getRoot());"},{"lineNumber":89,"author":{"gitID":"hzxcaryn"},"content":"        uiPartRule.setUiPart(timetablePanel);"},{"lineNumber":90,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":91,"author":{"gitID":"hzxcaryn"},"content":"        startingDate \u003d timetablePanelHandle.getTimetableDate();"},{"lineNumber":92,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":93,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":94,"author":{"gitID":"hzxcaryn"},"content":"    @Test"},{"lineNumber":95,"author":{"gitID":"hzxcaryn"},"content":"    public void display() {"},{"lineNumber":96,"author":{"gitID":"hzxcaryn"},"content":"        // Default timetable view: Displays current week view"},{"lineNumber":97,"author":{"gitID":"hzxcaryn"},"content":"        assertNotNull(timetablePanel.getRoot());"},{"lineNumber":98,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(timetablePanelHandle.getSelectedPage(), timetablePanelHandle.getWeekPage());"},{"lineNumber":99,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(startingDate, timetablePanelHandle.getTimetableDate());"},{"lineNumber":100,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":101,"author":{"gitID":"hzxcaryn"},"content":"        // Default timetable view: Displays all shifts in the week in default mode"},{"lineNumber":102,"author":{"gitID":"hzxcaryn"},"content":"        List\u003cEntry\u003e defaultEntries \u003d timetablePanelHandle.getTimetableEntriesFromDefaultMode();"},{"lineNumber":103,"author":{"gitID":"hzxcaryn"},"content":"        for (int i \u003d 0; i \u003c TYPICAL_SHIFTS.size(); i++) {"},{"lineNumber":104,"author":{"gitID":"hzxcaryn"},"content":"            Shift expectedShift \u003d TYPICAL_SHIFTS.get(i);"},{"lineNumber":105,"author":{"gitID":"hzxcaryn"},"content":"            Entry actualEntry \u003d defaultEntries.get(i);"},{"lineNumber":106,"author":{"gitID":"hzxcaryn"},"content":"            assertEntryDisplaysShift(expectedShift, actualEntry, i + 1);"},{"lineNumber":107,"author":{"gitID":"hzxcaryn"},"content":"        }"},{"lineNumber":108,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":109,"author":{"gitID":"hzxcaryn"},"content":"        // Associated shifts of employee highlighted: Displays all shifts in selected employee mode"},{"lineNumber":110,"author":{"gitID":"hzxcaryn"},"content":"        postNow(employeePanelSelectionChangedEventAliceStub);"},{"lineNumber":111,"author":{"gitID":"hzxcaryn"},"content":"        List\u003cEntry\u003e entriesAfterSelectionEventAlice \u003d"},{"lineNumber":112,"author":{"gitID":"hzxcaryn"},"content":"                timetablePanelHandle.getTimetableEntriesFromSelectedEmployeeMode();"},{"lineNumber":113,"author":{"gitID":"hzxcaryn"},"content":"        for (int i \u003d 0; i \u003c TYPICAL_SHIFTS.size(); i++) {"},{"lineNumber":114,"author":{"gitID":"hzxcaryn"},"content":"            Shift expectedShift \u003d TYPICAL_SHIFTS.get(i);"},{"lineNumber":115,"author":{"gitID":"hzxcaryn"},"content":"            Entry actualEntry \u003d entriesAfterSelectionEventAlice.get(i);"},{"lineNumber":116,"author":{"gitID":"hzxcaryn"},"content":"            assertEntryDisplaysShift(expectedShift, actualEntry, i + 1);"},{"lineNumber":117,"author":{"gitID":"hzxcaryn"},"content":"        }"},{"lineNumber":118,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":119,"author":{"gitID":"hzxcaryn"},"content":"        // Loads back to default timetable view: Displays all shifts in the week in default mode"},{"lineNumber":120,"author":{"gitID":"hzxcaryn"},"content":"        postNow(employeePanelSelectionChangedEventNullStub);"},{"lineNumber":121,"author":{"gitID":"hzxcaryn"},"content":"        List\u003cEntry\u003e entriesAfterSelectionEventNull \u003d timetablePanelHandle.getTimetableEntriesFromDefaultMode();"},{"lineNumber":122,"author":{"gitID":"hzxcaryn"},"content":"        for (int i \u003d 0; i \u003c logic.getFilteredShiftList().size(); i++) {"},{"lineNumber":123,"author":{"gitID":"hzxcaryn"},"content":"            Shift expectedShift \u003d TYPICAL_SHIFTS.get(i);"},{"lineNumber":124,"author":{"gitID":"hzxcaryn"},"content":"            Entry actualEntry \u003d entriesAfterSelectionEventNull.get(i);"},{"lineNumber":125,"author":{"gitID":"hzxcaryn"},"content":"            assertEntryDisplaysShift(expectedShift, actualEntry, i + 1);"},{"lineNumber":126,"author":{"gitID":"hzxcaryn"},"content":"        }"},{"lineNumber":127,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":128,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":129,"author":{"gitID":"hzxcaryn"},"content":"    @Test"},{"lineNumber":130,"author":{"gitID":"hzxcaryn"},"content":"    public void timetablePanel_handleTimetableWeekChangeRequestEvent() {"},{"lineNumber":131,"author":{"gitID":"hzxcaryn"},"content":"        postNow(timetableWeekChangeRequestEventNextStub);"},{"lineNumber":132,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(getNextWeekDate(startingDate), timetablePanelHandle.getTimetableDate());"},{"lineNumber":133,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":134,"author":{"gitID":"hzxcaryn"},"content":"        postNow(timetableWeekChangeRequestEventPrevStub);"},{"lineNumber":135,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(startingDate, timetablePanelHandle.getTimetableDate());"},{"lineNumber":136,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":137,"author":{"gitID":"hzxcaryn"},"content":"        postNow(timetableWeekChangeRequestEventPrevStub);"},{"lineNumber":138,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(getPrevWeekDate(startingDate), timetablePanelHandle.getTimetableDate());"},{"lineNumber":139,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":140,"author":{"gitID":"hzxcaryn"},"content":"        postNow(timetableWeekChangeRequestEventCurrStub);"},{"lineNumber":141,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(LocalDate.now(), timetablePanelHandle.getTimetableDate());"},{"lineNumber":142,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":143,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":144,"author":{"gitID":"hzxcaryn"},"content":"    @Test"},{"lineNumber":145,"author":{"gitID":"hzxcaryn"},"content":"    public void handleTimetableWeekChangeRequestEvent_usingButtons() {"},{"lineNumber":146,"author":{"gitID":"hzxcaryn"},"content":"        timetablePanelHandle.navigateToNextUsingButton();"},{"lineNumber":147,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(getNextWeekDate(startingDate), timetablePanelHandle.getTimetableDate());"},{"lineNumber":148,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":149,"author":{"gitID":"hzxcaryn"},"content":"        timetablePanelHandle.navigateToPrevUsingButton();"},{"lineNumber":150,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(startingDate, timetablePanelHandle.getTimetableDate());"},{"lineNumber":151,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":152,"author":{"gitID":"hzxcaryn"},"content":"        timetablePanelHandle.navigateToPrevUsingButton();"},{"lineNumber":153,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(getPrevWeekDate(startingDate), timetablePanelHandle.getTimetableDate());"},{"lineNumber":154,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":155,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":156,"author":{"gitID":"hzxcaryn"},"content":"    @Test"},{"lineNumber":157,"author":{"gitID":"hzxcaryn"},"content":"    public void timetablePanel_monthDisplay() {"},{"lineNumber":158,"author":{"gitID":"hzxcaryn"},"content":"        String expectedMonthDisplay \u003d startingDate.getMonth().name() + \" \" + startingDate.getYear();"},{"lineNumber":159,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(expectedMonthDisplay, timetablePanelHandle.getDisplayedMonthYear());"},{"lineNumber":160,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":161,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":162,"author":{"gitID":"hzxcaryn"},"content":"    @Test"},{"lineNumber":163,"author":{"gitID":"hzxcaryn"},"content":"    public void timetablePanel_handleExportTimetableAsImageRequestEvent() {"},{"lineNumber":164,"author":{"gitID":"hzxcaryn"},"content":"        // Snapshot taken when export command called"},{"lineNumber":165,"author":{"gitID":"hzxcaryn"},"content":"        postNow(exportTimetableAsImageRequestEventStub);"},{"lineNumber":166,"author":{"gitID":"hzxcaryn"},"content":"        assertTrue(Files.exists(testFilePathFirst) \u0026\u0026 Files.isRegularFile(testFilePathFirst));"},{"lineNumber":167,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":168,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":169,"author":{"gitID":"hzxcaryn"},"content":"    @Test"},{"lineNumber":170,"author":{"gitID":"hzxcaryn"},"content":"    public void timetablePanel_handleExportTimetableAsImageAndEmailRequestEvent() {"},{"lineNumber":171,"author":{"gitID":"hzxcaryn"},"content":"        // Snapshot taken when export and email command called: Emailed file is not saved locally"},{"lineNumber":172,"author":{"gitID":"hzxcaryn"},"content":"        File testFileSecond \u003d new File(testFilePathNameSecond);"},{"lineNumber":173,"author":{"gitID":"hzxcaryn"},"content":"        postNow(exportTimetableAsImageAndEmailRequestEventStub);"},{"lineNumber":174,"author":{"gitID":"hzxcaryn"},"content":"        assertFalse(Files.exists(testFilePathSecond));"},{"lineNumber":175,"author":{"gitID":"hzxcaryn"},"content":"        assertFalse(testFileSecond.exists());"},{"lineNumber":176,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":177,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":178,"author":{"gitID":"hzxcaryn"},"content":"    @After"},{"lineNumber":179,"author":{"gitID":"hzxcaryn"},"content":"    public void tearDown() {"},{"lineNumber":180,"author":{"gitID":"hzxcaryn"},"content":"        try {"},{"lineNumber":181,"author":{"gitID":"hzxcaryn"},"content":"            Files.deleteIfExists(testFilePathFirst);"},{"lineNumber":182,"author":{"gitID":"hzxcaryn"},"content":"            Files.deleteIfExists(testFilePathSecond);"},{"lineNumber":183,"author":{"gitID":"hzxcaryn"},"content":"        } catch (IOException e) {"},{"lineNumber":184,"author":{"gitID":"hzxcaryn"},"content":"            throw new AssertionError(\"Error deleting test files.\");"},{"lineNumber":185,"author":{"gitID":"hzxcaryn"},"content":"        }"},{"lineNumber":186,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":187,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":188,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":189,"author":{"gitID":"hzxcaryn"},"content":"     * Prepares all event stubs required for the tests"},{"lineNumber":190,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":191,"author":{"gitID":"hzxcaryn"},"content":"    private void setUpAllEventStubs() {"},{"lineNumber":192,"author":{"gitID":"hzxcaryn"},"content":"        // Event stubs"},{"lineNumber":193,"author":{"gitID":"hzxcaryn"},"content":"        employeePanelSelectionChangedEventAliceStub \u003d"},{"lineNumber":194,"author":{"gitID":"hzxcaryn"},"content":"                new EmployeePanelSelectionChangedEvent(new EmployeeCard(ALICE, 0));"},{"lineNumber":195,"author":{"gitID":"hzxcaryn"},"content":"        employeePanelSelectionChangedEventNullStub \u003d new EmployeePanelSelectionChangedEvent(null);"},{"lineNumber":196,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":197,"author":{"gitID":"hzxcaryn"},"content":"        exportTimetableAsImageRequestEventStub \u003d"},{"lineNumber":198,"author":{"gitID":"hzxcaryn"},"content":"                new ExportTimetableAsImageRequestEvent(TIMETABLE_IMAGE_FILE_NAME_FIRST_TEST);"},{"lineNumber":199,"author":{"gitID":"hzxcaryn"},"content":"        exportTimetableAsImageAndEmailRequestEventStub \u003d new ExportTimetableAsImageAndEmailRequestEvent("},{"lineNumber":200,"author":{"gitID":"hzxcaryn"},"content":"                TIMETABLE_IMAGE_FILE_NAME_SECOND_TEST, TIMETABLE_IMAGE_EMAIL_TEST);"},{"lineNumber":201,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":202,"author":{"gitID":"hzxcaryn"},"content":"        timetableWeekChangeRequestEventPrevStub \u003d new TimetableWeekChangeRequestEvent(WeekChangeRequest.PREVIOUS);"},{"lineNumber":203,"author":{"gitID":"hzxcaryn"},"content":"        timetableWeekChangeRequestEventNextStub \u003d new TimetableWeekChangeRequestEvent(WeekChangeRequest.NEXT);"},{"lineNumber":204,"author":{"gitID":"hzxcaryn"},"content":"        timetableWeekChangeRequestEventCurrStub \u003d new TimetableWeekChangeRequestEvent(WeekChangeRequest.CURRENT);"},{"lineNumber":205,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":206,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":207,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":208,"author":{"gitID":"hzxcaryn"},"content":"     * Prepares all required test files that will be used to test the exporting of timetable"},{"lineNumber":209,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":210,"author":{"gitID":"hzxcaryn"},"content":"    private void setUpTestFiles() {"},{"lineNumber":211,"author":{"gitID":"hzxcaryn"},"content":"        testFilePathFirst \u003d Paths.get(\".\" + File.separator + TIMETABLE_IMAGE_FILE_NAME_FIRST_TEST + \".\""},{"lineNumber":212,"author":{"gitID":"hzxcaryn"},"content":"                + TIMETABLE_IMAGE_FILE_FORMAT);"},{"lineNumber":213,"author":{"gitID":"hzxcaryn"},"content":"        testFilePathNameSecond \u003d \".\" + File.separator + TIMETABLE_IMAGE_FILE_NAME_SECOND_TEST + \".\""},{"lineNumber":214,"author":{"gitID":"hzxcaryn"},"content":"                + TIMETABLE_IMAGE_FILE_FORMAT;"},{"lineNumber":215,"author":{"gitID":"hzxcaryn"},"content":"        testFilePathSecond \u003d Paths.get(testFilePathNameSecond);"},{"lineNumber":216,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":217,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":218,"author":{"gitID":"hzxcaryn"},"content":"}"}],"authorContributionMap":{"hzxcaryn":170,"-":48}},{"path":"src/test/java/seedu/ptman/ui/CommandBoxTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":10,"author":{"gitID":"hzxcaryn"},"content":"import org.junit.Rule;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import guitests.guihandles.CommandBoxHandle;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import javafx.scene.input.KeyCode;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.ui.NewResultAvailableEvent;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.Logic;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.LogicManager;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.ListCommand;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Model;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.ptman.model.ModelManager;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.ptman.ui.testutil.EventsCollectorRule;"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"-"},"content":"public class CommandBoxTest extends GuiUnitTest {"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"    private static final String COMMAND_THAT_SUCCEEDS \u003d ListCommand.COMMAND_WORD;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    private static final String COMMAND_THAT_FAILS \u003d \"invalid command\";"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"hzxcaryn"},"content":"    @Rule"},{"lineNumber":29,"author":{"gitID":"hzxcaryn"},"content":"    public final EventsCollectorRule eventsCollectorRule \u003d new EventsCollectorRule();"},{"lineNumber":30,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"    private ArrayList\u003cString\u003e defaultStyleOfCommandBox;"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    private ArrayList\u003cString\u003e errorStyleOfCommandBox;"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"    private CommandBoxHandle commandBoxHandle;"},{"lineNumber":35,"author":{"gitID":"-"},"content":"    private CommandBoxHandle commandBoxHandleOutput;"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"    @Before"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    public void setUp() {"},{"lineNumber":39,"author":{"gitID":"-"},"content":"        Model model \u003d new ModelManager();"},{"lineNumber":40,"author":{"gitID":"-"},"content":"        Logic logic \u003d new LogicManager(model);"},{"lineNumber":41,"author":{"gitID":"-"},"content":""},{"lineNumber":42,"author":{"gitID":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(logic);"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        commandBoxHandle \u003d new CommandBoxHandle(getChildNode(commandBox.getRoot(),"},{"lineNumber":44,"author":{"gitID":"koo1993"},"content":"                CommandBoxHandle.COMMAND_FIELD_ID));"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        commandBoxHandleOutput \u003d new CommandBoxHandle(getChildNode(commandBox.getRoot(),"},{"lineNumber":46,"author":{"gitID":"koo1993"},"content":"                CommandBoxHandle.COMMAND_FIELD_ID));"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        uiPartRule.setUiPart(commandBox);"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"-"},"content":"        defaultStyleOfCommandBox \u003d new ArrayList\u003c\u003e(commandBoxHandle.getStyleClass());"},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"-"},"content":"        errorStyleOfCommandBox \u003d new ArrayList\u003c\u003e(defaultStyleOfCommandBox);"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        errorStyleOfCommandBox.add(CommandBox.ERROR_STYLE_CLASS);"},{"lineNumber":53,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitID":"-"},"content":""},{"lineNumber":55,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":56,"author":{"gitID":"-"},"content":"    public void commandBox_startingWithSuccessfulCommand() {"},{"lineNumber":57,"author":{"gitID":"-"},"content":"        assertBehaviorForSuccessfulCommand();"},{"lineNumber":58,"author":{"gitID":"-"},"content":"        assertBehaviorForFailedCommand();"},{"lineNumber":59,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":60,"author":{"gitID":"-"},"content":""},{"lineNumber":61,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":62,"author":{"gitID":"-"},"content":"    public void commandBox_startingWithFailedCommand() {"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        assertBehaviorForFailedCommand();"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        assertBehaviorForSuccessfulCommand();"},{"lineNumber":65,"author":{"gitID":"-"},"content":""},{"lineNumber":66,"author":{"gitID":"-"},"content":"        // verify that style is changed correctly even after multiple consecutive failed commands"},{"lineNumber":67,"author":{"gitID":"-"},"content":"        assertBehaviorForSuccessfulCommand();"},{"lineNumber":68,"author":{"gitID":"-"},"content":"        assertBehaviorForFailedCommand();"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        assertBehaviorForFailedCommand();"},{"lineNumber":70,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitID":"-"},"content":""},{"lineNumber":72,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":73,"author":{"gitID":"-"},"content":"    public void commandBox_handleKeyPress() {"},{"lineNumber":74,"author":{"gitID":"-"},"content":"        commandBoxHandle.run(COMMAND_THAT_FAILS);"},{"lineNumber":75,"author":{"gitID":"-"},"content":"        assertEquals(errorStyleOfCommandBox, commandBoxHandleOutput.getStyleClass());"},{"lineNumber":76,"author":{"gitID":"-"},"content":"        guiRobot.push(KeyCode.ESCAPE);"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        assertEquals(errorStyleOfCommandBox, commandBoxHandleOutput.getStyleClass());"},{"lineNumber":78,"author":{"gitID":"-"},"content":""},{"lineNumber":79,"author":{"gitID":"-"},"content":"        guiRobot.push(KeyCode.A);"},{"lineNumber":80,"author":{"gitID":"-"},"content":"        assertEquals(defaultStyleOfCommandBox, commandBoxHandleOutput.getStyleClass());"},{"lineNumber":81,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":82,"author":{"gitID":"-"},"content":""},{"lineNumber":83,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":84,"author":{"gitID":"-"},"content":"    public void handleKeyPress_startingWithUp() {"},{"lineNumber":85,"author":{"gitID":"-"},"content":"        // empty history"},{"lineNumber":86,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.UP, \"\");"},{"lineNumber":87,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.DOWN, \"\");"},{"lineNumber":88,"author":{"gitID":"-"},"content":""},{"lineNumber":89,"author":{"gitID":"-"},"content":"        // one command"},{"lineNumber":90,"author":{"gitID":"-"},"content":"        commandBoxHandle.run(COMMAND_THAT_SUCCEEDS);"},{"lineNumber":91,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.UP, COMMAND_THAT_SUCCEEDS);"},{"lineNumber":92,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.DOWN, \"\");"},{"lineNumber":93,"author":{"gitID":"-"},"content":""},{"lineNumber":94,"author":{"gitID":"-"},"content":"        // two commands (latest command is failure)"},{"lineNumber":95,"author":{"gitID":"-"},"content":"        commandBoxHandle.run(COMMAND_THAT_FAILS);"},{"lineNumber":96,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.UP, COMMAND_THAT_SUCCEEDS);"},{"lineNumber":97,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.UP, COMMAND_THAT_SUCCEEDS);"},{"lineNumber":98,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.DOWN, COMMAND_THAT_FAILS);"},{"lineNumber":99,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.DOWN, \"\");"},{"lineNumber":100,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.DOWN, \"\");"},{"lineNumber":101,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.UP, COMMAND_THAT_FAILS);"},{"lineNumber":102,"author":{"gitID":"-"},"content":""},{"lineNumber":103,"author":{"gitID":"-"},"content":"        // insert command in the middle of retrieving previous commands"},{"lineNumber":104,"author":{"gitID":"-"},"content":"        guiRobot.push(KeyCode.UP);"},{"lineNumber":105,"author":{"gitID":"-"},"content":"        String thirdCommand \u003d \"list\";"},{"lineNumber":106,"author":{"gitID":"-"},"content":"        commandBoxHandle.run(thirdCommand);"},{"lineNumber":107,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.UP, thirdCommand);"},{"lineNumber":108,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.UP, COMMAND_THAT_FAILS);"},{"lineNumber":109,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.UP, COMMAND_THAT_SUCCEEDS);"},{"lineNumber":110,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.DOWN, COMMAND_THAT_FAILS);"},{"lineNumber":111,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.DOWN, thirdCommand);"},{"lineNumber":112,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.DOWN, \"\");"},{"lineNumber":113,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":114,"author":{"gitID":"-"},"content":""},{"lineNumber":115,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":116,"author":{"gitID":"-"},"content":"    public void handleKeyPress_startingWithDown() {"},{"lineNumber":117,"author":{"gitID":"-"},"content":"        // empty history"},{"lineNumber":118,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.DOWN, \"\");"},{"lineNumber":119,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.UP, \"\");"},{"lineNumber":120,"author":{"gitID":"-"},"content":""},{"lineNumber":121,"author":{"gitID":"-"},"content":"        // one command"},{"lineNumber":122,"author":{"gitID":"-"},"content":"        commandBoxHandle.run(COMMAND_THAT_SUCCEEDS);"},{"lineNumber":123,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.DOWN, \"\");"},{"lineNumber":124,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.UP, COMMAND_THAT_SUCCEEDS);"},{"lineNumber":125,"author":{"gitID":"-"},"content":""},{"lineNumber":126,"author":{"gitID":"-"},"content":"        // two commands"},{"lineNumber":127,"author":{"gitID":"-"},"content":"        commandBoxHandle.run(COMMAND_THAT_FAILS);"},{"lineNumber":128,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.DOWN, \"\");"},{"lineNumber":129,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.UP, COMMAND_THAT_FAILS);"},{"lineNumber":130,"author":{"gitID":"-"},"content":""},{"lineNumber":131,"author":{"gitID":"-"},"content":"        // insert command in the middle of retrieving previous commands"},{"lineNumber":132,"author":{"gitID":"-"},"content":"        guiRobot.push(KeyCode.UP);"},{"lineNumber":133,"author":{"gitID":"-"},"content":"        String thirdCommand \u003d \"list\";"},{"lineNumber":134,"author":{"gitID":"-"},"content":"        commandBoxHandle.run(thirdCommand);"},{"lineNumber":135,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.DOWN, \"\");"},{"lineNumber":136,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.UP, thirdCommand);"},{"lineNumber":137,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":138,"author":{"gitID":"-"},"content":""},{"lineNumber":139,"content":"    //@@author hzxcaryn-reused"},{"lineNumber":140,"author":{"gitID":"-"},"content":"    //Reused from original code base with modifications to test for error style"},{"lineNumber":141,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":142,"author":{"gitID":"-"},"content":"     * Runs a command that fails, then verifies that \u003cbr\u003e"},{"lineNumber":143,"author":{"gitID":"-"},"content":"     *      - the text remains \u003cbr\u003e"},{"lineNumber":144,"author":{"gitID":"-"},"content":"     *      - the command box\u0027s style is the same as {@code errorStyleOfCommandBox}."},{"lineNumber":145,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":146,"author":{"gitID":"-"},"content":"    private void assertBehaviorForFailedCommand() {"},{"lineNumber":147,"author":{"gitID":"-"},"content":"        commandBoxHandle.run(COMMAND_THAT_FAILS);"},{"lineNumber":148,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":149,"author":{"gitID":"hzxcaryn"},"content":"        assertTrue(((NewResultAvailableEvent) eventsCollectorRule.eventsCollector.getMostRecent()).isError);"},{"lineNumber":150,"author":{"gitID":"hzxcaryn"},"content":"        assertTrue(eventsCollectorRule.eventsCollector.getSize() \u003d\u003d 1);"},{"lineNumber":151,"author":{"gitID":"hzxcaryn"},"content":"        eventsCollectorRule.eventsCollector.reset();"},{"lineNumber":152,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":153,"author":{"gitID":"-"},"content":"        assertEquals(COMMAND_THAT_FAILS, commandBoxHandle.getInput());"},{"lineNumber":154,"author":{"gitID":"-"},"content":"        assertEquals(errorStyleOfCommandBox, commandBoxHandleOutput.getStyleClass());"},{"lineNumber":155,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":156,"author":{"gitID":"-"},"content":""},{"lineNumber":157,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":158,"author":{"gitID":"-"},"content":"     * Runs a command that succeeds, then verifies that \u003cbr\u003e"},{"lineNumber":159,"author":{"gitID":"-"},"content":"     *      - the text is cleared \u003cbr\u003e"},{"lineNumber":160,"author":{"gitID":"-"},"content":"     *      - the command box\u0027s style is the same as {@code defaultStyleOfCommandBox}."},{"lineNumber":161,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":162,"author":{"gitID":"-"},"content":"    private void assertBehaviorForSuccessfulCommand() {"},{"lineNumber":163,"author":{"gitID":"-"},"content":"        commandBoxHandle.run(COMMAND_THAT_SUCCEEDS);"},{"lineNumber":164,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":165,"author":{"gitID":"hzxcaryn"},"content":"        assertFalse(((NewResultAvailableEvent) eventsCollectorRule.eventsCollector.getMostRecent()).isError);"},{"lineNumber":166,"author":{"gitID":"hzxcaryn"},"content":"        assertTrue(eventsCollectorRule.eventsCollector.getSize() \u003d\u003d 1);"},{"lineNumber":167,"author":{"gitID":"hzxcaryn"},"content":"        eventsCollectorRule.eventsCollector.reset();"},{"lineNumber":168,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":169,"author":{"gitID":"-"},"content":"        assertEquals(\"\", commandBoxHandleOutput.getInput());"},{"lineNumber":170,"author":{"gitID":"-"},"content":"        assertEquals(defaultStyleOfCommandBox, commandBoxHandleOutput.getStyleClass());"},{"lineNumber":171,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":172,"author":{"gitID":"-"},"content":""},{"lineNumber":173,"content":"    //@@author"},{"lineNumber":174,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":175,"author":{"gitID":"-"},"content":"     * Pushes {@code keycode} and checks that the input in the {@code commandBox} equals to {@code expectedCommand}."},{"lineNumber":176,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":177,"author":{"gitID":"-"},"content":"    private void assertInputHistory(KeyCode keycode, String expectedCommand) {"},{"lineNumber":178,"author":{"gitID":"-"},"content":"        guiRobot.push(keycode);"},{"lineNumber":179,"author":{"gitID":"-"},"content":"        assertEquals(expectedCommand, commandBoxHandle.getInput());"},{"lineNumber":180,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":181,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"null":2,"koo1993":2,"hzxcaryn":14,"-":163}},{"path":"docs/DeveloperGuide.adoc","lines":[{"lineNumber":1,"author":{"gitID":"hzxcaryn"},"content":"\u003d image:ptman_logo_dg.png[width\u003d\"400\"]"},{"lineNumber":2,"author":{"gitID":"-"},"content":":toc:"},{"lineNumber":3,"author":{"gitID":"-"},"content":":toc-title: Table of Contents"},{"lineNumber":4,"author":{"gitID":"-"},"content":":toc-placement: preamble"},{"lineNumber":5,"author":{"gitID":"-"},"content":":sectnums:"},{"lineNumber":6,"author":{"gitID":"-"},"content":":sectnumlevels: 5"},{"lineNumber":7,"author":{"gitID":"-"},"content":":imagesDir: images"},{"lineNumber":8,"author":{"gitID":"-"},"content":":stylesDir: stylesheets"},{"lineNumber":9,"author":{"gitID":"-"},"content":":xrefstyle: full"},{"lineNumber":10,"author":{"gitID":"-"},"content":"ifdef::env-github[]"},{"lineNumber":11,"author":{"gitID":"-"},"content":":tip-caption: :bulb:"},{"lineNumber":12,"author":{"gitID":"-"},"content":":note-caption: :information_source:"},{"lineNumber":13,"author":{"gitID":"-"},"content":"endif::[]"},{"lineNumber":14,"author":{"gitID":"-"},"content":":repoURL: https://github.com/CS2103JAN2018-W14-B2/main/tree/master/"},{"lineNumber":15,"author":{"gitID":"-"},"content":":xrefstyle: short"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"By: `W14-B2`      Since: `March 2018`      Licence: `MIT`"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"\u003d\u003d Introduction"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":"Part-time Manager (PTMan) is a Java application that helps employers manage and schedule their part-time employees. +"},{"lineNumber":22,"author":{"gitID":"-"},"content":"It provides a graphical user interface for displaying schedules and employee information while making use of a command-line interface as the primary mode of input."},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"\u003d\u003d Setting Up"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Prerequisites"},{"lineNumber":27,"author":{"gitID":"-"},"content":"You need to make sure the following prerequisites are installed on your computer before proceeding:"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":". *JDK `1.8.0_60`* or later"},{"lineNumber":30,"author":{"gitID":"-"},"content":"+"},{"lineNumber":31,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":32,"author":{"gitID":"-"},"content":"Having any Java 8 version is not enough. +"},{"lineNumber":33,"author":{"gitID":"-"},"content":"This app will not work with earlier versions of Java 8."},{"lineNumber":34,"author":{"gitID":"-"},"content":"+"},{"lineNumber":35,"author":{"gitID":"-"},"content":""},{"lineNumber":36,"author":{"gitID":"-"},"content":". *IntelliJ* IDE"},{"lineNumber":37,"author":{"gitID":"-"},"content":"+"},{"lineNumber":38,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":39,"author":{"gitID":"-"},"content":"IntelliJ by default has Gradle and JavaFx plugins installed. +"},{"lineNumber":40,"author":{"gitID":"-"},"content":"Do not disable them. If you have disabled them, go to `File` \u003e `Settings` \u003e `Plugins` to re-enable them."},{"lineNumber":41,"author":{"gitID":"-"},"content":""},{"lineNumber":42,"author":{"gitID":"-"},"content":""},{"lineNumber":43,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Setting Up the Project in Your Computer"},{"lineNumber":44,"author":{"gitID":"-"},"content":"Follow these steps to set up the project in your computer:"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":". Fork this repo, and clone the fork to your computer."},{"lineNumber":47,"author":{"gitID":"-"},"content":". Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."},{"lineNumber":48,"author":{"gitID":"-"},"content":". Set up the correct JDK version for Gradle."},{"lineNumber":49,"author":{"gitID":"-"},"content":".. Click `Configure` \u003e `Project Defaults` \u003e `Project Structure`."},{"lineNumber":50,"author":{"gitID":"-"},"content":".. Click `New...` and find the directory of the JDK."},{"lineNumber":51,"author":{"gitID":"-"},"content":". Click `Import Project`."},{"lineNumber":52,"author":{"gitID":"-"},"content":". Locate the `build.gradle` file and select it. Click `OK`."},{"lineNumber":53,"author":{"gitID":"-"},"content":". Click `Open as Project`."},{"lineNumber":54,"author":{"gitID":"-"},"content":". Click `OK` to accept the default settings."},{"lineNumber":55,"author":{"gitID":"-"},"content":". Open a console and run the command `gradlew processResources` (Mac/Linux: `./gradlew processResources`). It should finish with the `BUILD SUCCESSFUL` message. +"},{"lineNumber":56,"author":{"gitID":"-"},"content":"This will generate all resources required by the application and tests."},{"lineNumber":57,"author":{"gitID":"-"},"content":""},{"lineNumber":58,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Verifying the Setup"},{"lineNumber":59,"author":{"gitID":"-"},"content":"You may check that you have setup the project correctly by following these steps:"},{"lineNumber":60,"author":{"gitID":"-"},"content":""},{"lineNumber":61,"author":{"gitID":"-"},"content":". Run the `seedu.ptman.MainApp` and try a few commands"},{"lineNumber":62,"author":{"gitID":"-"},"content":". \u003c\u003cTesting,Run the tests\u003e\u003e to ensure they all pass."},{"lineNumber":63,"author":{"gitID":"-"},"content":""},{"lineNumber":64,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Configurations to do Before Writing Code"},{"lineNumber":65,"author":{"gitID":"-"},"content":""},{"lineNumber":66,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Configuring the coding style"},{"lineNumber":67,"author":{"gitID":"-"},"content":""},{"lineNumber":68,"author":{"gitID":"-"},"content":"This project follows https://github.com/oss-generic/process/blob/master/docs/CodingStandards.adoc[oss-generic coding standards]. IntelliJ\u0027s default style is mostly compliant with ours but it uses a different import order from ours. To rectify:"},{"lineNumber":69,"author":{"gitID":"-"},"content":""},{"lineNumber":70,"author":{"gitID":"-"},"content":". Go to `File` \u003e `Settings...` (Windows/Linux), or `IntelliJ IDEA` \u003e `Preferences...` (macOS)"},{"lineNumber":71,"author":{"gitID":"-"},"content":". Select `Editor` \u003e `Code Style` \u003e `Java`"},{"lineNumber":72,"author":{"gitID":"-"},"content":". Click on the `Imports` tab to set the order:"},{"lineNumber":73,"author":{"gitID":"-"},"content":"* For `Class count to use import with \u0027\\*\u0027` and `Names count to use static import with \u0027*\u0027`: Set to `999` to prevent IntelliJ from contracting the import statements."},{"lineNumber":74,"author":{"gitID":"-"},"content":"* For `Import Layout`: Set the order to be `import static all other imports`, `import java.\\*`, `import javax.*`, `import org.\\*`, `import com.*`, `import all other imports`. Add a `\u003cblank line\u003e` between each `import`."},{"lineNumber":75,"author":{"gitID":"-"},"content":""},{"lineNumber":76,"author":{"gitID":"-"},"content":"Optionally, you can follow the \u003c\u003cUsingCheckstyle#, UsingCheckstyle.adoc\u003e\u003e document to configure Intellij to check style-compliance as you write code."},{"lineNumber":77,"author":{"gitID":"-"},"content":""},{"lineNumber":78,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Updating documentation to match your fork"},{"lineNumber":79,"author":{"gitID":"-"},"content":""},{"lineNumber":80,"author":{"gitID":"-"},"content":"After forking the repo, links in the documentation will still point to the `CS2103JAN2018-W14-B2/main` repo. If you plan to develop this as a separate product (i.e. instead of contributing to the `CS2103JAN2018-W14-B2/main`) , you should replace the URL in the variable `repoURL` in `DeveloperGuide.adoc` and `UserGuide.adoc` with the URL of your fork."},{"lineNumber":81,"author":{"gitID":"-"},"content":""},{"lineNumber":82,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Setting up CI"},{"lineNumber":83,"author":{"gitID":"-"},"content":""},{"lineNumber":84,"author":{"gitID":"-"},"content":"Set up Travis to perform Continuous Integration (CI) for your fork. See \u003c\u003cUsingTravis#, UsingTravis.adoc\u003e\u003e to learn how to set it up."},{"lineNumber":85,"author":{"gitID":"-"},"content":""},{"lineNumber":86,"author":{"gitID":"-"},"content":"After setting up Travis, you can optionally set up coverage reporting for your team fork (see \u003c\u003cUsingCoveralls#, UsingCoveralls.adoc\u003e\u003e)."},{"lineNumber":87,"author":{"gitID":"-"},"content":""},{"lineNumber":88,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":89,"author":{"gitID":"-"},"content":"Coverage reporting could be useful for a team repository that hosts the final version but it is not that useful for your personal fork."},{"lineNumber":90,"author":{"gitID":"-"},"content":""},{"lineNumber":91,"author":{"gitID":"-"},"content":"Optionally, you can set up AppVeyor as a second CI (see \u003c\u003cUsingAppVeyor#, UsingAppVeyor.adoc\u003e\u003e)."},{"lineNumber":92,"author":{"gitID":"-"},"content":""},{"lineNumber":93,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":94,"author":{"gitID":"-"},"content":"Having both Travis and AppVeyor ensures your App works on both Unix-based platforms and Windows-based platforms (Travis is Unix-based and AppVeyor is Windows-based)"},{"lineNumber":95,"author":{"gitID":"-"},"content":""},{"lineNumber":96,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Getting started with coding"},{"lineNumber":97,"author":{"gitID":"-"},"content":""},{"lineNumber":98,"author":{"gitID":"-"},"content":"Here are some tips before you get started with coding:"},{"lineNumber":99,"author":{"gitID":"-"},"content":""},{"lineNumber":100,"author":{"gitID":"-"},"content":"1. Get some sense of the overall design by reading \u003c\u003cDesign-Architecture\u003e\u003e."},{"lineNumber":101,"author":{"gitID":"-"},"content":"2. Take a look at \u003c\u003cGetStartedProgramming\u003e\u003e."},{"lineNumber":102,"author":{"gitID":"-"},"content":""},{"lineNumber":103,"author":{"gitID":"-"},"content":"\u003d\u003d Design"},{"lineNumber":104,"author":{"gitID":"-"},"content":"// TODO: Update diagrams"},{"lineNumber":105,"author":{"gitID":"-"},"content":"This section explains the design of the app."},{"lineNumber":106,"author":{"gitID":"-"},"content":""},{"lineNumber":107,"author":{"gitID":"-"},"content":"[[Design-Architecture]]"},{"lineNumber":108,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Architecture"},{"lineNumber":109,"author":{"gitID":"-"},"content":""},{"lineNumber":110,"author":{"gitID":"-"},"content":"_\u003c\u003cfig-ArchitectureDiagram\u003e\u003e_ below illustrates the high-level design of the app."},{"lineNumber":111,"author":{"gitID":"-"},"content":""},{"lineNumber":112,"author":{"gitID":"-"},"content":"[[fig-ArchitectureDiagram]]"},{"lineNumber":113,"author":{"gitID":"-"},"content":".Architecture Diagram"},{"lineNumber":114,"author":{"gitID":"-"},"content":"image::Architecture.png[width\u003d\"600\"]"},{"lineNumber":115,"author":{"gitID":"-"},"content":""},{"lineNumber":116,"author":{"gitID":"-"},"content":"[TIP]"},{"lineNumber":117,"author":{"gitID":"-"},"content":"The `.pptx` files used to create diagrams in this document can be found in the link:{repoURL}/docs/diagrams/[diagrams] folder. To update a diagram, modify the diagram in the pptx file, select the objects of the diagram, and choose `Save as picture`."},{"lineNumber":118,"author":{"gitID":"-"},"content":""},{"lineNumber":119,"author":{"gitID":"-"},"content":"In this section, \u0027components\u0027 refer to the `UI`, `Logic`, `Model`, `Storage`, `Commons`, and `Main` as seen in \u003c\u003cfig-ArchitectureDiagram\u003e\u003e."},{"lineNumber":120,"author":{"gitID":"-"},"content":""},{"lineNumber":121,"author":{"gitID":"-"},"content":"Here is a quick overview of each component:"},{"lineNumber":122,"author":{"gitID":"-"},"content":""},{"lineNumber":123,"author":{"gitID":"-"},"content":"* `Main`: Contains a class called link:{repoURL}/src/main/java/seedu/ptman/MainApp.java[`MainApp`], which is responsible for:"},{"lineNumber":124,"author":{"gitID":"-"},"content":""},{"lineNumber":125,"author":{"gitID":"-"},"content":"** At app launch: Initializing the components in the correct sequence and connecting them up with each other."},{"lineNumber":126,"author":{"gitID":"-"},"content":"** At shut down: Shutting down the components and invoking cleanup methods where necessary."},{"lineNumber":127,"author":{"gitID":"-"},"content":""},{"lineNumber":128,"author":{"gitID":"-"},"content":"* \u003c\u003cDesign-Commons,*`Commons`*\u003e\u003e: Contains a collection of classes used by other components. Two of those classes play important roles at the architectural level:"},{"lineNumber":129,"author":{"gitID":"-"},"content":""},{"lineNumber":130,"author":{"gitID":"-"},"content":"** `EventsCenter` : This class (written using https://github.com/google/guava/wiki/EventBusExplained[Google\u0027s Event Bus library]) is used by components to communicate with other components using events (i.e. a form of _Event Driven_ design)."},{"lineNumber":131,"author":{"gitID":"-"},"content":"** `LogsCenter` : This class is used to write log messages to the app\u0027s log file."},{"lineNumber":132,"author":{"gitID":"-"},"content":""},{"lineNumber":133,"author":{"gitID":"-"},"content":"* \u003c\u003cDesign-Ui,*`UI`*\u003e\u003e: Displays the UI of the app."},{"lineNumber":134,"author":{"gitID":"-"},"content":"* \u003c\u003cDesign-Logic,*`Logic`*\u003e\u003e: Executes commands."},{"lineNumber":135,"author":{"gitID":"-"},"content":"* \u003c\u003cDesign-Model,*`Model`*\u003e\u003e: Holds the data of the app in-memory."},{"lineNumber":136,"author":{"gitID":"-"},"content":"* \u003c\u003cDesign-Storage,*`Storage`*\u003e\u003e: Reads data from, and writes data to, the hard disk."},{"lineNumber":137,"author":{"gitID":"-"},"content":""},{"lineNumber":138,"author":{"gitID":"-"},"content":"The API of the `UI`, `Logic`, `Model` and `Storage` components are structured similarly. These components:"},{"lineNumber":139,"author":{"gitID":"-"},"content":""},{"lineNumber":140,"author":{"gitID":"-"},"content":"* Define their API in an `interface` with the same name as the component."},{"lineNumber":141,"author":{"gitID":"-"},"content":"* Expose their functionality using a `{Component Name}Manager` class."},{"lineNumber":142,"author":{"gitID":"-"},"content":""},{"lineNumber":143,"author":{"gitID":"-"},"content":"For example, the `Logic` component, illustrated by _\u003c\u003cfig-LogicClassDiagram\u003e\u003e_, defines it\u0027s API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class."},{"lineNumber":144,"author":{"gitID":"-"},"content":""},{"lineNumber":145,"author":{"gitID":"-"},"content":"[[fig-LogicClassDiagram]]"},{"lineNumber":146,"author":{"gitID":"-"},"content":".Class Diagram of the Logic Component"},{"lineNumber":147,"author":{"gitID":"-"},"content":"image::LogicClassDiagram.png[width\u003d\"800\"]"},{"lineNumber":148,"author":{"gitID":"-"},"content":""},{"lineNumber":149,"author":{"gitID":"-"},"content":"[discrete]"},{"lineNumber":150,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Events-Driven nature of the design"},{"lineNumber":151,"author":{"gitID":"-"},"content":""},{"lineNumber":152,"author":{"gitID":"-"},"content":"_\u003c\u003cfig-DeleteSeq1\u003e\u003e_ below shows how the components interact for the scenario where the user issues the command `delete 1`."},{"lineNumber":153,"author":{"gitID":"-"},"content":""},{"lineNumber":154,"author":{"gitID":"-"},"content":"[[fig-DeleteSeq1]]"},{"lineNumber":155,"author":{"gitID":"-"},"content":".Component Interactions for `delete 1` Command (Part 1)"},{"lineNumber":156,"author":{"gitID":"-"},"content":"image::SDforDeletePerson.png[width\u003d\"800\"]"},{"lineNumber":157,"author":{"gitID":"-"},"content":""},{"lineNumber":158,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":159,"author":{"gitID":"-"},"content":"Note how the `Model` simply raises a `PartTimeManagerChangedEvent` when the Part-Time Manager\u0027s data is changed, instead of asking the `Storage` to save the updates to the hard disk."},{"lineNumber":160,"author":{"gitID":"-"},"content":""},{"lineNumber":161,"author":{"gitID":"-"},"content":"_\u003c\u003cfig-DeleteSeq2\u003e\u003e_ below shows how the `EventsCenter` reacts to that event, which eventually results in the updates being saved to the hard disk and the status bar of the UI being updated to reflect the \u0027Last Updated\u0027 time."},{"lineNumber":162,"author":{"gitID":"-"},"content":""},{"lineNumber":163,"author":{"gitID":"-"},"content":"[[fig-DeleteSeq2]]"},{"lineNumber":164,"author":{"gitID":"-"},"content":".Component Interactions for `delete 1` Command (Part 2)"},{"lineNumber":165,"author":{"gitID":"-"},"content":"image::SDforDeletePersonEventHandling.png[width\u003d\"800\"]"},{"lineNumber":166,"author":{"gitID":"-"},"content":""},{"lineNumber":167,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":168,"author":{"gitID":"-"},"content":"Note how the event is propagated through the `EventsCenter` to the `Storage` and `UI` without `Model` having to be coupled to either of them. This is an example of how this Event Driven approach helps us reduce direct coupling between components."},{"lineNumber":169,"author":{"gitID":"-"},"content":""},{"lineNumber":170,"author":{"gitID":"-"},"content":"The sections below give more details of each component."},{"lineNumber":171,"author":{"gitID":"-"},"content":""},{"lineNumber":172,"author":{"gitID":"-"},"content":"[[Design-Ui]]"},{"lineNumber":173,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d UI Component"},{"lineNumber":174,"author":{"gitID":"-"},"content":""},{"lineNumber":175,"author":{"gitID":"-"},"content":"The `UI` component is responsible for displaying information to the user."},{"lineNumber":176,"author":{"gitID":"-"},"content":"_\u003c\u003cfig-UI\u003e\u003e_ below shows the structure of the `UI` component."},{"lineNumber":177,"author":{"gitID":"-"},"content":""},{"lineNumber":178,"author":{"gitID":"-"},"content":"[[fig-UI]]"},{"lineNumber":179,"author":{"gitID":"-"},"content":".Structure of the UI Component"},{"lineNumber":180,"author":{"gitID":"-"},"content":"image::UiClassDiagram.png[width\u003d\"800\"]"},{"lineNumber":181,"author":{"gitID":"-"},"content":""},{"lineNumber":182,"author":{"gitID":"-"},"content":"*API* : link:{repoURL}/src/main/java/seedu/ptman/ui/Ui.java[`Ui.java`]"},{"lineNumber":183,"author":{"gitID":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `EmployeeListPanel`, `StatusBarFooter`, `BrowserPanel` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class."},{"lineNumber":184,"author":{"gitID":"-"},"content":""},{"lineNumber":185,"author":{"gitID":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the link:{repoURL}/src/main/java/seedu/ptman/ui/MainWindow.java[`MainWindow`] is specified in link:{repoURL}/src/main/resources/view/MainWindow.fxml[`MainWindow.fxml`]"},{"lineNumber":186,"author":{"gitID":"-"},"content":""},{"lineNumber":187,"author":{"gitID":"-"},"content":"The `UI` component:"},{"lineNumber":188,"author":{"gitID":"-"},"content":""},{"lineNumber":189,"author":{"gitID":"-"},"content":"* Executes user commands using the `Logic` component."},{"lineNumber":190,"author":{"gitID":"-"},"content":"* Binds itself to some data in the `Model` so that the UI can automatically update when data in the `Model` changes."},{"lineNumber":191,"author":{"gitID":"-"},"content":"* Responds to events raised from various parts of the app and updates the UI accordingly."},{"lineNumber":192,"author":{"gitID":"-"},"content":""},{"lineNumber":193,"author":{"gitID":"-"},"content":"[[Design-Logic]]"},{"lineNumber":194,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Logic Component"},{"lineNumber":195,"author":{"gitID":"-"},"content":""},{"lineNumber":196,"author":{"gitID":"-"},"content":"_\u003c\u003cfig-LogicClassDiagram2\u003e\u003e_ shows the overall structure of the `Logic` component."},{"lineNumber":197,"author":{"gitID":"-"},"content":""},{"lineNumber":198,"author":{"gitID":"-"},"content":"[[fig-LogicClassDiagram2]]"},{"lineNumber":199,"author":{"gitID":"-"},"content":".Structure of the Logic Component"},{"lineNumber":200,"author":{"gitID":"-"},"content":"image::LogicClassDiagram.png[width\u003d\"800\"]"},{"lineNumber":201,"author":{"gitID":"-"},"content":""},{"lineNumber":202,"author":{"gitID":"-"},"content":"_\u003c\u003cfig-CommandStructure\u003e\u003e_ shows finer details concerning `XYZCommand` and `Command` in _\u003c\u003cfig-LogicClassDiagram2\u003e\u003e_"},{"lineNumber":203,"author":{"gitID":"-"},"content":""},{"lineNumber":204,"author":{"gitID":"-"},"content":"[[fig-CommandStructure]]"},{"lineNumber":205,"author":{"gitID":"-"},"content":".Structure of Commands in the Logic Component."},{"lineNumber":206,"author":{"gitID":"-"},"content":"image::LogicCommandClassDiagram.png[width\u003d\"800\"]"},{"lineNumber":207,"author":{"gitID":"-"},"content":""},{"lineNumber":208,"author":{"gitID":"-"},"content":"*API* :"},{"lineNumber":209,"author":{"gitID":"-"},"content":"link:{repoURL}/src/main/java/seedu/ptman/logic/Logic.java[`Logic.java`]"},{"lineNumber":210,"author":{"gitID":"-"},"content":""},{"lineNumber":211,"author":{"gitID":"-"},"content":"The `Logic` component:"},{"lineNumber":212,"author":{"gitID":"-"},"content":""},{"lineNumber":213,"author":{"gitID":"-"},"content":". Parses user commands using the `PartTimeManagerParser` class and returns a `Command` object."},{"lineNumber":214,"author":{"gitID":"-"},"content":". Executes the `Command` object using `LogicManager`."},{"lineNumber":215,"author":{"gitID":"-"},"content":"  The command execution can affect the `Model` (e.g. adding a person) and/or raise events."},{"lineNumber":216,"author":{"gitID":"-"},"content":". Passes the result of the command execution (`CommandResult`) to the `UI`."},{"lineNumber":217,"author":{"gitID":"-"},"content":""},{"lineNumber":218,"author":{"gitID":"-"},"content":"_\u003c\u003cfig-DeleteSd\u003e\u003e_ is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call."},{"lineNumber":219,"author":{"gitID":"-"},"content":""},{"lineNumber":220,"author":{"gitID":"-"},"content":"[[fig-DeleteSd]]"},{"lineNumber":221,"author":{"gitID":"koo1993"},"content":".Interactions inside the Logic Component for the `delete 1` Admin Command"},{"lineNumber":222,"author":{"gitID":"-"},"content":"image::DeletePersonSdForLogic.png[width\u003d\"800\"]"},{"lineNumber":223,"author":{"gitID":"-"},"content":""},{"lineNumber":224,"author":{"gitID":"-"},"content":"[[Design-Model]]"},{"lineNumber":225,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Model Component"},{"lineNumber":226,"author":{"gitID":"-"},"content":"_\u003c\u003cfig-ModelClassDiagram\u003e\u003e_ shows the overview of the `Model` component."},{"lineNumber":227,"author":{"gitID":"-"},"content":""},{"lineNumber":228,"author":{"gitID":"-"},"content":"[[fig-ModelClassDiagram]]"},{"lineNumber":229,"author":{"gitID":"-"},"content":".Structure of the Model Component"},{"lineNumber":230,"author":{"gitID":"-"},"content":"image::ModelClassDiagram.png[width\u003d\"800\"]"},{"lineNumber":231,"author":{"gitID":"-"},"content":""},{"lineNumber":232,"author":{"gitID":"-"},"content":"*API* : link:{repoURL}/src/main/java/seedu/ptman/model/Model.java[`Model.java`]"},{"lineNumber":233,"author":{"gitID":"-"},"content":""},{"lineNumber":234,"author":{"gitID":"-"},"content":"The `Model` component:"},{"lineNumber":235,"author":{"gitID":"-"},"content":""},{"lineNumber":236,"author":{"gitID":"-"},"content":"* Stores a `UserPref` object that represents the user\u0027s preferences."},{"lineNumber":237,"author":{"gitID":"-"},"content":"* Stores the `PartTimeManager` data in memory."},{"lineNumber":238,"author":{"gitID":"-"},"content":"* Exposes an unmodifiable `ObservableList\u003cEmployee\u003e` and `ObservableList\u003cShift\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the lists change."},{"lineNumber":239,"author":{"gitID":"-"},"content":"* Does not depend on any of the other three components (`UI`, `Storage` and `Logic`)."},{"lineNumber":240,"author":{"gitID":"-"},"content":""},{"lineNumber":241,"author":{"gitID":"-"},"content":"[[Design-Storage]]"},{"lineNumber":242,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Storage Component"},{"lineNumber":243,"author":{"gitID":"-"},"content":"_\u003c\u003cfig-StorageClassDiagram\u003e\u003e_ shows the overview of the `Storage` component."},{"lineNumber":244,"author":{"gitID":"-"},"content":""},{"lineNumber":245,"author":{"gitID":"-"},"content":"[[fig-StorageClassDiagram]]"},{"lineNumber":246,"author":{"gitID":"-"},"content":".Structure of the Storage Component"},{"lineNumber":247,"author":{"gitID":"-"},"content":"image::StorageClassDiagram.png[width\u003d\"800\"]"},{"lineNumber":248,"author":{"gitID":"-"},"content":""},{"lineNumber":249,"author":{"gitID":"-"},"content":"*API* : link:{repoURL}/src/main/java/seedu/ptman/storage/Storage.java[`Storage.java`]"},{"lineNumber":250,"author":{"gitID":"-"},"content":""},{"lineNumber":251,"author":{"gitID":"-"},"content":"The `Storage` component:"},{"lineNumber":252,"author":{"gitID":"-"},"content":""},{"lineNumber":253,"author":{"gitID":"-"},"content":"* Saves `UserPref` objects in json format and reads it back."},{"lineNumber":254,"author":{"gitID":"-"},"content":"* Saves the PartTimeManager data in xml format and reads it back."},{"lineNumber":255,"author":{"gitID":"-"},"content":""},{"lineNumber":256,"author":{"gitID":"-"},"content":"[[Design-Commons]]"},{"lineNumber":257,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Common Classes"},{"lineNumber":258,"author":{"gitID":"-"},"content":"// TODO: Either add content or delete"},{"lineNumber":259,"author":{"gitID":"-"},"content":"Classes used by multiple components are in the `seedu.ptman.commons` package."},{"lineNumber":260,"author":{"gitID":"-"},"content":""},{"lineNumber":261,"author":{"gitID":"-"},"content":"\u003d\u003d Implementation"},{"lineNumber":262,"author":{"gitID":"-"},"content":""},{"lineNumber":263,"author":{"gitID":"-"},"content":"This section describes some noteworthy details on how certain features are implemented."},{"lineNumber":264,"author":{"gitID":"-"},"content":""},{"lineNumber":265,"author":{"gitID":"-"},"content":""},{"lineNumber":266,"author":{"gitID":"-"},"content":"// tag::outlet[]"},{"lineNumber":267,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Outlet Feature"},{"lineNumber":268,"author":{"gitID":"-"},"content":""},{"lineNumber":269,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Reason for implementation"},{"lineNumber":270,"author":{"gitID":"-"},"content":"PTMan is designed for outlets such as bubble tea shops and fast food restaurants which require a large number of part-time workers."},{"lineNumber":271,"author":{"gitID":"-"},"content":"This outlet feature stores essential outlet information such as outlet name, operating hours, contact number, email and admin password."},{"lineNumber":272,"author":{"gitID":"-"},"content":"Such details are also important to facilitate other functions such as the access control system and the timetable displayed in the app."},{"lineNumber":273,"author":{"gitID":"-"},"content":""},{"lineNumber":274,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d How it is implemented"},{"lineNumber":275,"author":{"gitID":"-"},"content":""},{"lineNumber":276,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d OutletInformation class"},{"lineNumber":277,"author":{"gitID":"-"},"content":"The `OutletInformation` class represents an outlet in PTMan."},{"lineNumber":278,"author":{"gitID":"-"},"content":"It supports commands that utilize attributes of this class. It is also responsible for information displayed in the UI and data stored in local storage files. +"},{"lineNumber":279,"author":{"gitID":"-"},"content":""},{"lineNumber":280,"author":{"gitID":"-"},"content":"_\u003c\u003cfig-OutletClassDiagram\u003e\u003e_ is a class diagram that displays the association between `OutletInformation` and other classes in the `Model`."},{"lineNumber":281,"author":{"gitID":"-"},"content":""},{"lineNumber":282,"author":{"gitID":"-"},"content":"[[fig-OutletClassDiagram]]"},{"lineNumber":283,"author":{"gitID":"-"},"content":".Overview of the OutletInformation Class in the Model Component"},{"lineNumber":284,"author":{"gitID":"-"},"content":"image::OutletInformationClassDiagram.png[width\u003d\"800\"]"},{"lineNumber":285,"author":{"gitID":"-"},"content":""},{"lineNumber":286,"author":{"gitID":"-"},"content":"With reference to _\u003c\u003cfig-OutletClassDiagram\u003e\u003e_, an `OutletInformation` object stores a boolean value `isDataEncrypted` and six other attributes, including `masterPassword`, `outletName`, `operatingHours`, `outletEmail`, `outletContact` and `announcement`."},{"lineNumber":287,"author":{"gitID":"-"},"content":"Currently, the `OutletInformation` object initialized in the `PartTimeManager` is created by calling its default constructor:"},{"lineNumber":288,"author":{"gitID":"-"},"content":"[source, java]"},{"lineNumber":289,"author":{"gitID":"-"},"content":"----"},{"lineNumber":290,"author":{"gitID":"-"},"content":"OutletInformation outlet \u003d new OutletInformation();"},{"lineNumber":291,"author":{"gitID":"-"},"content":"----"},{"lineNumber":292,"author":{"gitID":"-"},"content":"This default constructor initializes a boolean value `isDataEncrypted` to false and six other attributes to respective default values."},{"lineNumber":293,"author":{"gitID":"-"},"content":"This is because with the help of initial values, any employer new to PTMan does not need to create a new `OutletInformation` object using commands such as `addoutlet`."},{"lineNumber":294,"author":{"gitID":"-"},"content":"It provides convenience for users. Outlet managers can edit those values by entering an `editoutlet` command after they log in."},{"lineNumber":295,"author":{"gitID":"-"},"content":""},{"lineNumber":296,"author":{"gitID":"-"},"content":""},{"lineNumber":297,"author":{"gitID":"-"},"content":""},{"lineNumber":298,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Commands"},{"lineNumber":299,"author":{"gitID":"-"},"content":""},{"lineNumber":300,"author":{"gitID":"-"},"content":"Currently, there are two commands that allow outlet managers to change attributes of the `OutletInformation`: `editoutlet` and `announcement` commands which are implemented in similar ways."},{"lineNumber":301,"author":{"gitID":"-"},"content":"The implementation of `editoutlet` command will be explained in details."},{"lineNumber":302,"author":{"gitID":"-"},"content":"In addition, there are also commands that allow managers to encrypt and decrypt local storage files."},{"lineNumber":303,"author":{"gitID":"-"},"content":"The implementation of `encrypt` command and how data is encrypted will be explained in details. +"},{"lineNumber":304,"author":{"gitID":"-"},"content":""},{"lineNumber":305,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d Edit outlet command"},{"lineNumber":306,"author":{"gitID":"-"},"content":""},{"lineNumber":307,"author":{"gitID":"-"},"content":"The `editoutlet` command can change outlet name, operating hours, contact number and email, which are displayed in the app as shown in _\u003c\u003cfig-OutletInformationDisplayed\u003e\u003e_."},{"lineNumber":308,"author":{"gitID":"-"},"content":"The information displayed will change after a successful command."},{"lineNumber":309,"author":{"gitID":"-"},"content":""},{"lineNumber":310,"author":{"gitID":"-"},"content":"[[fig-OutletInformationDisplayed]]"},{"lineNumber":311,"author":{"gitID":"-"},"content":".Example of the Outlet Information Displayed"},{"lineNumber":312,"author":{"gitID":"-"},"content":"image::outletinformationdisplay.jpg[width\u003d\"600\"]"},{"lineNumber":313,"author":{"gitID":"-"},"content":""},{"lineNumber":314,"author":{"gitID":"-"},"content":"When an `editoutlet` command executes successfully, three events will be raised and handled as shown in _\u003c\u003cfig-EditOutletCommandHighLevelSequenceDiagram\u003e\u003e_:"},{"lineNumber":315,"author":{"gitID":"-"},"content":""},{"lineNumber":316,"author":{"gitID":"-"},"content":". `OutletNameChangedEvent` updates the outlet name displayed in the app."},{"lineNumber":317,"author":{"gitID":"-"},"content":". `OutletInformationChangedEvent` updates the operating hours, contact number and email displayed in the app."},{"lineNumber":318,"author":{"gitID":"-"},"content":". `OutletDataChangedEvent` saves latest outlet information to the local storage file \"data/outletinformation.xml\"."},{"lineNumber":319,"author":{"gitID":"-"},"content":""},{"lineNumber":320,"author":{"gitID":"-"},"content":"[[fig-EditOutletCommandHighLevelSequenceDiagram]]"},{"lineNumber":321,"author":{"gitID":"-"},"content":".High Level Sequence Diagram for the `editoutlet` Command"},{"lineNumber":322,"author":{"gitID":"-"},"content":"image::EditOutletCommandHighLevelSequenceDiagrams.png[width\u003d\"800\"]"},{"lineNumber":323,"author":{"gitID":"-"},"content":""},{"lineNumber":324,"author":{"gitID":"-"},"content":"The following sequence diagram (_\u003c\u003cfig-EditOutletCommandSequenceDiagram\u003e\u003e_) illustrates how an `editoutlet` command is executed in the Logic Component, and how it interacts with the Model Component."},{"lineNumber":325,"author":{"gitID":"-"},"content":""},{"lineNumber":326,"author":{"gitID":"-"},"content":"[[fig-EditOutletCommandSequenceDiagram]]"},{"lineNumber":327,"author":{"gitID":"-"},"content":".Interactions inside the Logic Component for the `editoutlet n/Edited Outlet` Admin Command"},{"lineNumber":328,"author":{"gitID":"-"},"content":"image::EditOutletCommandSequenceDiagram.png[width\u003d\"800\"]"},{"lineNumber":329,"author":{"gitID":"-"},"content":""},{"lineNumber":330,"author":{"gitID":"-"},"content":"Currently, editing outlet information with some fields unspecified is allowed."},{"lineNumber":331,"author":{"gitID":"-"},"content":"For example, `editoutlet n/OUTLETNAME` is a valid command."},{"lineNumber":332,"author":{"gitID":"-"},"content":"The reason why it is implemented in this why is that it enables employers to edit only the information required for change."},{"lineNumber":333,"author":{"gitID":"-"},"content":""},{"lineNumber":334,"author":{"gitID":"-"},"content":"In order to check whether some fields are specified, several branches are created in the `setOutletInformation` method of the `OutletInformation` class."},{"lineNumber":335,"author":{"gitID":"-"},"content":"When all fields are null, it throws a new exception as shown below:"},{"lineNumber":336,"author":{"gitID":"-"},"content":"[source,java]"},{"lineNumber":337,"author":{"gitID":"-"},"content":"----"},{"lineNumber":338,"author":{"gitID":"-"},"content":"if (name \u003d\u003d null \u0026\u0026 operatingHours \u003d\u003d null \u0026\u0026 outletContact \u003d\u003d null \u0026\u0026 outletEmail \u003d\u003d null) {"},{"lineNumber":339,"author":{"gitID":"-"},"content":"    throw new NoOutletInformationFieldChangeException();"},{"lineNumber":340,"author":{"gitID":"-"},"content":"}"},{"lineNumber":341,"author":{"gitID":"-"},"content":""},{"lineNumber":342,"author":{"gitID":"-"},"content":"----"},{"lineNumber":343,"author":{"gitID":"-"},"content":"This `NoOutletInformationFieldChangeException` is then handled by the `EditOutletCommand`."},{"lineNumber":344,"author":{"gitID":"-"},"content":"When the exception is caught, the `CommandException` with a message of command failure will be thrown,"},{"lineNumber":345,"author":{"gitID":"-"},"content":"with reference to the function below:"},{"lineNumber":346,"author":{"gitID":"-"},"content":"[source,java]"},{"lineNumber":347,"author":{"gitID":"-"},"content":"----"},{"lineNumber":348,"author":{"gitID":"-"},"content":"try {"},{"lineNumber":349,"author":{"gitID":"-"},"content":"    editedOutlet.setOutletInformation(name, operatingHours, outletContact, outletEmail);"},{"lineNumber":350,"author":{"gitID":"-"},"content":"} catch (NoOutletInformationFieldChangeException e) {"},{"lineNumber":351,"author":{"gitID":"-"},"content":"    throw new CommandException(MESSAGE_EDIT_OUTLET_FAILURE);"},{"lineNumber":352,"author":{"gitID":"-"},"content":"}"},{"lineNumber":353,"author":{"gitID":"-"},"content":"----"},{"lineNumber":354,"author":{"gitID":"-"},"content":""},{"lineNumber":355,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d Encrypt and decrypt commands"},{"lineNumber":356,"author":{"gitID":"-"},"content":"Since PTMan stores files locally, it is highly possible that any worker in the outlet can open the storage files and read data inside."},{"lineNumber":357,"author":{"gitID":"-"},"content":"Such files store a large amount of essential and private data such as admin password, employees\u0027 passwords, employees\u0027 phones, addresses, and emails."},{"lineNumber":358,"author":{"gitID":"-"},"content":"By using the `encrypt` command, the data in local storage files can be hidden from any group of people who do not have the access to it."},{"lineNumber":359,"author":{"gitID":"-"},"content":"Managers can use the `decrypt` command to make the files human-readable."},{"lineNumber":360,"author":{"gitID":"-"},"content":""},{"lineNumber":361,"author":{"gitID":"-"},"content":"When an `encrypt` command executes successfully, two events will be raised and handled with reference to _\u003c\u003cfig-EncryptCommandHighLevelSequenceDiagram\u003e\u003e_:"},{"lineNumber":362,"author":{"gitID":"-"},"content":""},{"lineNumber":363,"author":{"gitID":"-"},"content":". `PartTimeManagerChangedEvent` saves encrypted or decrypted information of employees and shifts to the local storage file \"data/parttimemanager.xml\"."},{"lineNumber":364,"author":{"gitID":"-"},"content":". `OutletDataChangedEvent` saves encrypted or decrypted outlet information to the local storage file \"data/outletinformation.xml\"."},{"lineNumber":365,"author":{"gitID":"-"},"content":""},{"lineNumber":366,"author":{"gitID":"-"},"content":"[[fig-EncryptCommandHighLevelSequenceDiagram]]"},{"lineNumber":367,"author":{"gitID":"-"},"content":".High Level Sequence Diagram for the `encrypt` Command"},{"lineNumber":368,"author":{"gitID":"-"},"content":"image::EncryptCommandHighLevelSequenceDiagrams.png[width\u003d\"800\"]"},{"lineNumber":369,"author":{"gitID":"-"},"content":""},{"lineNumber":370,"author":{"gitID":"-"},"content":"The following sequence diagram (_\u003c\u003cfig-EncryptCommandSequenceDiagram\u003e\u003e_) illustrates how an `encrypt` command is executed in the Logic Component, and how it interacts with the Model Component."},{"lineNumber":371,"author":{"gitID":"-"},"content":""},{"lineNumber":372,"author":{"gitID":"-"},"content":"[[fig-EncryptCommandSequenceDiagram]]"},{"lineNumber":373,"author":{"gitID":"-"},"content":".Interactions inside the Logic Component for the `encrypt` Admin Command"},{"lineNumber":374,"author":{"gitID":"-"},"content":"image::EncryptDataCommandSequenceDiagram.png[width\u003d\"800\"]"},{"lineNumber":375,"author":{"gitID":"-"},"content":""},{"lineNumber":376,"author":{"gitID":"-"},"content":"Currently, the local data is encrypted in the Advanced Encryption Standard (AES) in XML files."},{"lineNumber":377,"author":{"gitID":"-"},"content":"The secret key used is a byte array of \"TheBestSecretKey\"."},{"lineNumber":378,"author":{"gitID":"-"},"content":"The function below demonstrates how encryption is implemented using `javax.crypto.Cipher`: +"},{"lineNumber":379,"author":{"gitID":"-"},"content":"[source, java]"},{"lineNumber":380,"author":{"gitID":"-"},"content":"----"},{"lineNumber":381,"author":{"gitID":"-"},"content":"Key key \u003d generateKey();"},{"lineNumber":382,"author":{"gitID":"-"},"content":"Cipher c \u003d Cipher.getInstance(ALGO);"},{"lineNumber":383,"author":{"gitID":"-"},"content":"c.init(Cipher.ENCRYPT_MODE, key);"},{"lineNumber":384,"author":{"gitID":"-"},"content":"byte[] encVal \u003d c.doFinal(data.getBytes());"},{"lineNumber":385,"author":{"gitID":"-"},"content":"return Base64.getEncoder().encodeToString(encVal);"},{"lineNumber":386,"author":{"gitID":"-"},"content":"----"},{"lineNumber":387,"author":{"gitID":"-"},"content":"The encryption status is stored in `OutletInformation` as a variable `isDataEncrypted`."},{"lineNumber":388,"author":{"gitID":"-"},"content":"The encryption status stored in local files, with reference to the third line of _\u003c\u003cfig-OutletEncrypt\u003e\u003e_, is always plaintext because it is used to convert strings in XML files to models."},{"lineNumber":389,"author":{"gitID":"-"},"content":"In encryption mode, data writen to or read from XML files will be encrypted using `encrypt(String plainText)` or decrypted using `decrypt(String cipherText)` respectively."},{"lineNumber":390,"author":{"gitID":"-"},"content":""},{"lineNumber":391,"author":{"gitID":"-"},"content":"[[fig-OutletEncrypt]]"},{"lineNumber":392,"author":{"gitID":"-"},"content":".Example of an Encrypted XML File of Outlet Information"},{"lineNumber":393,"author":{"gitID":"-"},"content":"image::OutletInformationEncryptedXMLFile.jpg[width\u003d\"800\"]"},{"lineNumber":394,"author":{"gitID":"-"},"content":""},{"lineNumber":395,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Design considerations"},{"lineNumber":396,"author":{"gitID":"-"},"content":""},{"lineNumber":397,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Aspect: implementation of OutletInformation class"},{"lineNumber":398,"author":{"gitID":"-"},"content":""},{"lineNumber":399,"author":{"gitID":"-"},"content":"* **Alternative 1 (current choice):** Use default constructor to initialize all attributes with default values."},{"lineNumber":400,"author":{"gitID":"-"},"content":"** Pros: Provides convenience to users because they do not have to create a new outlet by themselves."},{"lineNumber":401,"author":{"gitID":"-"},"content":"** Cons: Lacks flexibility to initialize the attributes with user-defined values."},{"lineNumber":402,"author":{"gitID":"-"},"content":"* **Alternative 2:** Use a constructor with more parameters."},{"lineNumber":403,"author":{"gitID":"-"},"content":"** Pros: Allows flexibility in storing outlet information."},{"lineNumber":404,"author":{"gitID":"-"},"content":"** Cons: Needs to be very careful when calling the constructor. Since `isDataEncrypted` can be initialized to true, users new to this app must be informed clearly that data stored in local files are encrypted."},{"lineNumber":405,"author":{"gitID":"-"},"content":"Moreover, the default admin password in the User Guide must be updated to what is initialized in the `masterPassword`."},{"lineNumber":406,"author":{"gitID":"-"},"content":"Otherwise, users are unable to log in with correct password when they start using the app for the first time."},{"lineNumber":407,"author":{"gitID":"-"},"content":""},{"lineNumber":408,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Aspect: implementation of encryption and decryption"},{"lineNumber":409,"author":{"gitID":"-"},"content":""},{"lineNumber":410,"author":{"gitID":"-"},"content":"* **Alternative 1 (current choice):** Encrypt and decrypt data writen to and read from XML files."},{"lineNumber":411,"author":{"gitID":"-"},"content":"** Pros: Successfully prevents any user of the computer directly interpreting the stored information in a clean and fast way."},{"lineNumber":412,"author":{"gitID":"-"},"content":"** Cons: Still maintains the XML file structure and does not encrypt the title of each element as shown in _\u003c\u003cfig-OutletEncrypt\u003e\u003e_. It is possible that any user with advanced knowledge of data encryption is able to decrypt the data with the found patterns."},{"lineNumber":413,"author":{"gitID":"-"},"content":""},{"lineNumber":414,"author":{"gitID":"-"},"content":"* **Alternative 2:** Encrypt and decrypt XML files with the XMLCipher package from apache.org with reference to the code below."},{"lineNumber":415,"author":{"gitID":"-"},"content":"** Pros: Enhances safety of data since there are no more obvious patterns in XML files."},{"lineNumber":416,"author":{"gitID":"-"},"content":"** Cons: Increases difficulty in saving and backing up data in local files because additional encrypted and decrypted files need to be created and replace original files."},{"lineNumber":417,"author":{"gitID":"-"},"content":""},{"lineNumber":418,"author":{"gitID":"-"},"content":"[source, java]"},{"lineNumber":419,"author":{"gitID":"-"},"content":"----"},{"lineNumber":420,"author":{"gitID":"-"},"content":"public static Document encryptDocument(Document document, SecretKey secretKey, String algorithm) throws Exception {"},{"lineNumber":421,"author":{"gitID":"-"},"content":"    Element rootElement \u003d document.getDocumentElement();"},{"lineNumber":422,"author":{"gitID":"-"},"content":"    XMLCipher xmlCipher \u003d XMLCipher.getInstance(algorithm);"},{"lineNumber":423,"author":{"gitID":"-"},"content":"    xmlCipher.init(XMLCipher.ENCRYPT_MODE, secretKey);"},{"lineNumber":424,"author":{"gitID":"-"},"content":"    xmlCipher.doFinal(document, rootElement, true);"},{"lineNumber":425,"author":{"gitID":"-"},"content":"    return document;"},{"lineNumber":426,"author":{"gitID":"-"},"content":"}"},{"lineNumber":427,"author":{"gitID":"-"},"content":"----"},{"lineNumber":428,"author":{"gitID":"-"},"content":"// end::outlet[]"},{"lineNumber":429,"author":{"gitID":"-"},"content":""},{"lineNumber":430,"author":{"gitID":"-"},"content":""},{"lineNumber":431,"author":{"gitID":"-"},"content":"// tag::shifts[]"},{"lineNumber":432,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Shifts Feature"},{"lineNumber":433,"author":{"gitID":"-"},"content":""},{"lineNumber":434,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Reason for implementation"},{"lineNumber":435,"author":{"gitID":"-"},"content":""},{"lineNumber":436,"author":{"gitID":"-"},"content":"PTMan is designed to give employees the freedom and flexibility to choose the shifts they want to work in."},{"lineNumber":437,"author":{"gitID":"-"},"content":"By allowing employers to add or delete shifts, employees can then apply for the shifts that are available."},{"lineNumber":438,"author":{"gitID":"-"},"content":""},{"lineNumber":439,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d How it is implemented"},{"lineNumber":440,"author":{"gitID":"-"},"content":"The `Shift` class represents a shift in PTMan. +"},{"lineNumber":441,"author":{"gitID":"-"},"content":""},{"lineNumber":442,"author":{"gitID":"-"},"content":"It stores:"},{"lineNumber":443,"author":{"gitID":"-"},"content":""},{"lineNumber":444,"author":{"gitID":"-"},"content":". The `Date` of the shift."},{"lineNumber":445,"author":{"gitID":"-"},"content":"`Date` is a class that wraps Java\u0027s `LocalDate` class."},{"lineNumber":446,"author":{"gitID":"-"},"content":". The starting and ending `Time` of the shift."},{"lineNumber":447,"author":{"gitID":"-"},"content":"`Time` is a class that wraps Java\u0027s `LocalTime` class."},{"lineNumber":448,"author":{"gitID":"-"},"content":". The employee `Capacity` for the shift."},{"lineNumber":449,"author":{"gitID":"-"},"content":"`Capacity` is a class that wraps an integer."},{"lineNumber":450,"author":{"gitID":"-"},"content":". The `UniqueEmployeeList` of employees working in the shift."},{"lineNumber":451,"author":{"gitID":"-"},"content":"`UniqueEmployeeList` is a list that stores the `Employee` objects of employees that have applied for the shift."},{"lineNumber":452,"author":{"gitID":"-"},"content":"It guarantees there are no duplicate employees in the shift."},{"lineNumber":453,"author":{"gitID":"-"},"content":""},{"lineNumber":454,"author":{"gitID":"-"},"content":"_\u003c\u003cfig-ShiftClassDiagram\u003e\u003e_ is a class diagram that displays the association between `Shift` and other components in the `Model`."},{"lineNumber":455,"author":{"gitID":"-"},"content":""},{"lineNumber":456,"author":{"gitID":"-"},"content":"[[fig-ShiftClassDiagram]]"},{"lineNumber":457,"author":{"gitID":"-"},"content":".Overview of the Shift Class in the Model Component"},{"lineNumber":458,"author":{"gitID":"-"},"content":"image::ShiftClassDiagram.png[width\u003d\"800\"]"},{"lineNumber":459,"author":{"gitID":"-"},"content":""},{"lineNumber":460,"author":{"gitID":"-"},"content":"`Date` and `Time` use Java\u0027s `LocalDate` and `LocalTime` classes for easy integration with the timetable."},{"lineNumber":461,"author":{"gitID":"-"},"content":"They also make formatting and parsing simple through the use of Java\u0027s `DateTimeFormatter`."},{"lineNumber":462,"author":{"gitID":"-"},"content":""},{"lineNumber":463,"author":{"gitID":"-"},"content":"To store a list of shifts in `PartTimeManager`, we use a `UniqueShiftList` to ensure there are no duplicate shifts."},{"lineNumber":464,"author":{"gitID":"-"},"content":""},{"lineNumber":465,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Commands"},{"lineNumber":466,"author":{"gitID":"-"},"content":""},{"lineNumber":467,"author":{"gitID":"-"},"content":"The following are commands that directly interact with the `Shift` class:"},{"lineNumber":468,"author":{"gitID":"-"},"content":""},{"lineNumber":469,"author":{"gitID":"-"},"content":". `AddShiftCommand`: Creates a `Shift` and adds it to the `UniqueShiftList` in `PartTimeManager`. +"},{"lineNumber":470,"author":{"gitID":"-"},"content":". `DeleteShiftCommand`: Deletes a `Shift` from the `UniqueShiftList` in `PartTimeManager`."},{"lineNumber":471,"author":{"gitID":"-"},"content":". `ApplyCommand`: Adds an `Employee` to the `UniqueEmployeeList` in the `Shift`. +"},{"lineNumber":472,"author":{"gitID":"-"},"content":"To adhere to defensive programming practices, instead of simply adding the `Employee` to the `Shift`, `ApplyCommand` does the following:"},{"lineNumber":473,"author":{"gitID":"-"},"content":".. Create a copy of the specified `Shift`"},{"lineNumber":474,"author":{"gitID":"-"},"content":".. Add the `Employee` to the copy."},{"lineNumber":475,"author":{"gitID":"-"},"content":".. Replace the original `Shift` with the copy."},{"lineNumber":476,"author":{"gitID":"-"},"content":". `UnapplyCommand`: Removes an `Employee` from the `UniqueEmployeeList` in the `Shift`. +"},{"lineNumber":477,"author":{"gitID":"-"},"content":"Similar to `ApplyCommand`, `UnapplyCommand` will:"},{"lineNumber":478,"author":{"gitID":"-"},"content":".. Create a copy of the specified `Shift`."},{"lineNumber":479,"author":{"gitID":"-"},"content":".. Remove the `Employee` from the copy."},{"lineNumber":480,"author":{"gitID":"-"},"content":".. Replace the original with the copy."},{"lineNumber":481,"author":{"gitID":"-"},"content":""},{"lineNumber":482,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Shift indexing"},{"lineNumber":483,"author":{"gitID":"-"},"content":""},{"lineNumber":484,"author":{"gitID":"-"},"content":"The commands `DeleteShiftCommand`, `ApplyCommand` and `UnapplyCommand` access the specified `Shift` via it\u0027s index displayed on the timetable."},{"lineNumber":485,"author":{"gitID":"-"},"content":"The preferred behaviour for the indexes is to have the first shift of the week start from index 1, with subsequent shifts incrementing that index."},{"lineNumber":486,"author":{"gitID":"-"},"content":"However, having shifts that are earlier than the current timetable week will cause the first shift of the week to have an index that is greater than 1. +"},{"lineNumber":487,"author":{"gitID":"-"},"content":"As seen in _\u003c\u003cfig-ShiftIndexBad\u003e\u003e_ below, the shift on Monday has index 5 because there are 4 other shifts in the week(s) before the current week."},{"lineNumber":488,"author":{"gitID":"-"},"content":""},{"lineNumber":489,"author":{"gitID":"-"},"content":"[[fig-ShiftIndexBad]]"},{"lineNumber":490,"author":{"gitID":"-"},"content":".Example of Undesired Shift Indexing"},{"lineNumber":491,"author":{"gitID":"-"},"content":"image::ShiftIndexBad.png[width\u003d\"800\"]"},{"lineNumber":492,"author":{"gitID":"-"},"content":""},{"lineNumber":493,"author":{"gitID":"-"},"content":"To avoid this, we only want to index shifts that are visible in the current timetable view. +"},{"lineNumber":494,"author":{"gitID":"-"},"content":"This can be achieved by setting the `Predicate\u003cShift\u003e` for the `FilteredList\u003cShift\u003e` in `ModelManager` to filter shifts in the current week as shown below:"},{"lineNumber":495,"author":{"gitID":"-"},"content":"----"},{"lineNumber":496,"author":{"gitID":"-"},"content":"// In Model"},{"lineNumber":497,"author":{"gitID":"-"},"content":"public static Predicate\u003cShift\u003e PREDICATE_SHOW_WEEK_SHIFTS \u003d shift -\u003e"},{"lineNumber":498,"author":{"gitID":"-"},"content":"    getWeekFromDate(shift.getDate().getLocalDate()) \u003d\u003d getWeekFromDate(LocalDate.now());"},{"lineNumber":499,"author":{"gitID":"-"},"content":""},{"lineNumber":500,"author":{"gitID":"-"},"content":"// In ModelManager"},{"lineNumber":501,"author":{"gitID":"-"},"content":"updateFilteredShiftList(PREDICATE_SHOW_WEEK_SHIFTS);"},{"lineNumber":502,"author":{"gitID":"-"},"content":"----"},{"lineNumber":503,"author":{"gitID":"-"},"content":"This results in the desired shift indexing as shown in _\u003c\u003cfig-ShiftIndexGood\u003e\u003e_ below."},{"lineNumber":504,"author":{"gitID":"-"},"content":""},{"lineNumber":505,"author":{"gitID":"-"},"content":"[[fig-ShiftIndexGood]]"},{"lineNumber":506,"author":{"gitID":"-"},"content":".Example of Desired Shift Indexing"},{"lineNumber":507,"author":{"gitID":"-"},"content":"image::ShiftIndexGood.png[width\u003d800]"},{"lineNumber":508,"author":{"gitID":"-"},"content":"// end::shifts[]"},{"lineNumber":509,"author":{"gitID":"-"},"content":""},{"lineNumber":510,"author":{"gitID":"-"},"content":"// tag::timetable[]"},{"lineNumber":511,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Timetable Feature"},{"lineNumber":512,"author":{"gitID":"-"},"content":""},{"lineNumber":513,"author":{"gitID":"-"},"content":"PTMan has a timetable that increases interactivity between users and shifts."},{"lineNumber":514,"author":{"gitID":"-"},"content":"_\u003c\u003cfig-Feature_Timetable1\u003e\u003e_ below shows how the timetable looks like."},{"lineNumber":515,"author":{"gitID":"-"},"content":""},{"lineNumber":516,"author":{"gitID":"-"},"content":"[[fig-Feature_Timetable1]]"},{"lineNumber":517,"author":{"gitID":"-"},"content":".Example of the Timetable in PTMan"},{"lineNumber":518,"author":{"gitID":"-"},"content":"image::Feature_Timetable1.png[width\u003d800]"},{"lineNumber":519,"author":{"gitID":"-"},"content":""},{"lineNumber":520,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Reason for implementation"},{"lineNumber":521,"author":{"gitID":"-"},"content":""},{"lineNumber":522,"author":{"gitID":"-"},"content":"A timetable is useful for both employers and employees, as it allows them to visualise the shifts and access them via their indexes."},{"lineNumber":523,"author":{"gitID":"-"},"content":"The timetable instantly reflects any changes to the shifts and allows selected employee\u0027s shifts to be highlighted."},{"lineNumber":524,"author":{"gitID":"-"},"content":"Users are also allowed to export the timetable as image for future reference."},{"lineNumber":525,"author":{"gitID":"-"},"content":"All in all, the timetable feature improves user experience and brings convenience to the user."},{"lineNumber":526,"author":{"gitID":"-"},"content":""},{"lineNumber":527,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d How it is implemented"},{"lineNumber":528,"author":{"gitID":"-"},"content":""},{"lineNumber":529,"author":{"gitID":"-"},"content":"The timetable is created with the help of the https://github.com/dlemmermann/CalendarFX[CalendarFX] library, and `TimetablePanel`"},{"lineNumber":530,"author":{"gitID":"-"},"content":" is the main class in charge of displaying the timetable. +"},{"lineNumber":531,"author":{"gitID":"-"},"content":""},{"lineNumber":532,"author":{"gitID":"-"},"content":"`TimetablePanel` contains the following JavaFX components:"},{"lineNumber":533,"author":{"gitID":"-"},"content":""},{"lineNumber":534,"author":{"gitID":"-"},"content":". A `CalendarView` object."},{"lineNumber":535,"author":{"gitID":"-"},"content":"`CalendarView` is a class in CalendarFX, and it is responsible for displaying the timetable in the `TimetablePanel`."},{"lineNumber":536,"author":{"gitID":"-"},"content":". A `BorderPane` object."},{"lineNumber":537,"author":{"gitID":"-"},"content":"`BorderPane` is the object in charge of displaying the navigation bar of the timetable."},{"lineNumber":538,"author":{"gitID":"-"},"content":". A `Label` object."},{"lineNumber":539,"author":{"gitID":"-"},"content":"`Label` is the object in charge of displaying the text (in this case, the month and year) in the navigation bar."},{"lineNumber":540,"author":{"gitID":"-"},"content":". Two `Button` objects."},{"lineNumber":541,"author":{"gitID":"-"},"content":"Each of the `Button` object is in charge of displaying the left/right buttons in the navigation bar."},{"lineNumber":542,"author":{"gitID":"-"},"content":"It allows users to click on them to navigate through the weeks in the timetable."},{"lineNumber":543,"author":{"gitID":"-"},"content":". A `VBox` object."},{"lineNumber":544,"author":{"gitID":"-"},"content":"`VBox` is in charge of laying `BorderPane` and `CalendarView` out in a vertical column."},{"lineNumber":545,"author":{"gitID":"-"},"content":""},{"lineNumber":546,"author":{"gitID":"-"},"content":"_\u003c\u003cfig-TimetablePanelClassDiagram\u003e\u003e_ below shows a class diagram of the `TimetablePanel` and its association with JavaFX components. +"},{"lineNumber":547,"author":{"gitID":"-"},"content":" +"},{"lineNumber":548,"author":{"gitID":"-"},"content":"[[fig-TimetablePanelClassDiagram]]"},{"lineNumber":549,"author":{"gitID":"-"},"content":".Overview of the TimetablePanel Class in the UI Component"},{"lineNumber":550,"author":{"gitID":"-"},"content":"image::TimetablePanelClassDiagram.png[width\u003d\"800\"]"},{"lineNumber":551,"author":{"gitID":"-"},"content":""},{"lineNumber":552,"author":{"gitID":"-"},"content":"A `TimetablePanel` is created with its constructor:"},{"lineNumber":553,"author":{"gitID":"-"},"content":"[source,java]"},{"lineNumber":554,"author":{"gitID":"-"},"content":"----"},{"lineNumber":555,"author":{"gitID":"-"},"content":"public TimetablePanel(Logic logic) {"},{"lineNumber":556,"author":{"gitID":"-"},"content":"    // ..."},{"lineNumber":557,"author":{"gitID":"-"},"content":"    this.logic \u003d logic;"},{"lineNumber":558,"author":{"gitID":"-"},"content":"    this.shiftObservableList \u003d logic.getFilteredShiftList();"},{"lineNumber":559,"author":{"gitID":"-"},"content":"    this.outletInformation \u003d logic.getOutletInformation();"},{"lineNumber":560,"author":{"gitID":"-"},"content":"    // ..."},{"lineNumber":561,"author":{"gitID":"-"},"content":"}"},{"lineNumber":562,"author":{"gitID":"-"},"content":"----"},{"lineNumber":563,"author":{"gitID":"-"},"content":""},{"lineNumber":564,"author":{"gitID":"-"},"content":"Using the `logic` argument, the `TimetablePanel` constructor initialises `shiftObservableList` and `outletInformation`."},{"lineNumber":565,"author":{"gitID":"-"},"content":"These pieces of information are important to the `TimetablePanel` because:"},{"lineNumber":566,"author":{"gitID":"-"},"content":""},{"lineNumber":567,"author":{"gitID":"-"},"content":"* `shiftObservableList` is an `ObservableList\u003cShift\u003e` object, and is responsible for providing `TimetablePanel` with the shifts required to build the timetable."},{"lineNumber":568,"author":{"gitID":"-"},"content":"Shifts are added to the timetable in the method `setShifts()`."},{"lineNumber":569,"author":{"gitID":"-"},"content":"* `outletInformation` is an `OutletInformation` object, and is responsible for providing `TimetablePanel` with the operating hours of the outlet."},{"lineNumber":570,"author":{"gitID":"-"},"content":"The timetable re-scales according to the operating hours of the outlet, in the method `setTimetableRange()`."},{"lineNumber":571,"author":{"gitID":"-"},"content":""},{"lineNumber":572,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Updating the timetable"},{"lineNumber":573,"author":{"gitID":"-"},"content":""},{"lineNumber":574,"author":{"gitID":"-"},"content":"The main method in charge of updating the timetable is `updateTimetableView()`."},{"lineNumber":575,"author":{"gitID":"-"},"content":"When this method is called, the `Label` in the navigation bar is set to show the month that is being displayed"},{"lineNumber":576,"author":{"gitID":"-"},"content":"on the timetable, and the timetable is rebuilt with the newly set shifts and operating hours."},{"lineNumber":577,"author":{"gitID":"-"},"content":"`updateTimetableView()` is called whenever a `PartTimeManagerChangedEvent`, `TimetableWeekChangeRequestEvent` or `EmployeePanelSelectionChangedEvent` is posted. +"},{"lineNumber":578,"author":{"gitID":"-"},"content":""},{"lineNumber":579,"author":{"gitID":"-"},"content":"We will use `PartTimeManagerChangedEvent` to illustrate `updateTimetableView()` works."},{"lineNumber":580,"author":{"gitID":"-"},"content":"_\u003c\u003cfig-updateTimetableViewHighLevelSequenceDiagram\u003e\u003e_ below shows a high level sequence diagram of what happens when a `PartTimeManagerChangedEvent`"},{"lineNumber":581,"author":{"gitID":"-"},"content":" is posted and how it causes the `UI` to call `updateTimetableView()`. +"},{"lineNumber":582,"author":{"gitID":"-"},"content":" +"},{"lineNumber":583,"author":{"gitID":"-"},"content":"[[fig-updateTimetableViewHighLevelSequenceDiagram]]"},{"lineNumber":584,"author":{"gitID":"-"},"content":".Component Interactions for a `PartTimeManagerChangedEvent`"},{"lineNumber":585,"author":{"gitID":"-"},"content":"image::updateTimetableViewHighLevelSequenceDiagram.png[width\u003d\"800\"]"},{"lineNumber":586,"author":{"gitID":"-"},"content":""},{"lineNumber":587,"author":{"gitID":"-"},"content":"_\u003c\u003cfig-updateTimetableViewSequenceDiagram\u003e\u003e_ below shows the sequence diagram of how `TimetablePanel` carries out `updateTimetableView()` to"},{"lineNumber":588,"author":{"gitID":"-"},"content":"respond to a `PartTimeManagerChangedEvent`. +"},{"lineNumber":589,"author":{"gitID":"-"},"content":" +"},{"lineNumber":590,"author":{"gitID":"-"},"content":"[[fig-updateTimetableViewSequenceDiagram]]"},{"lineNumber":591,"author":{"gitID":"-"},"content":".Sequence Diagram to Update Timetable"},{"lineNumber":592,"author":{"gitID":"-"},"content":"image::updateTimetableViewSequenceDiagram.png[width\u003d\"750\"]"},{"lineNumber":593,"author":{"gitID":"-"},"content":""},{"lineNumber":594,"author":{"gitID":"-"},"content":"Here are some examples of when `updateTimetableView()` is called: +"},{"lineNumber":595,"author":{"gitID":"-"},"content":""},{"lineNumber":596,"author":{"gitID":"-"},"content":"* A `Shift` is added, removed, or altered:"},{"lineNumber":597,"author":{"gitID":"-"},"content":"`PartTimeManagerChangedEvent` is posted which is handled by calling `updateTimetableView()` to rebuild the timetable with the changed shifts."},{"lineNumber":598,"author":{"gitID":"-"},"content":"* `OutletInformation` is edited:"},{"lineNumber":599,"author":{"gitID":"-"},"content":"`OutletInformationChangedEvent` is posted which is handled by calling `updateTimetableView()` to rebuild the timetable and fit in the updated operating hours."},{"lineNumber":600,"author":{"gitID":"-"},"content":"* The user wants to navigate the timetable to the next/previous/current week:"},{"lineNumber":601,"author":{"gitID":"-"},"content":"`TimetableWeekChangeRequestEvent` is posted which is handled by calling `navigateToNextWeek()`, `navigateToPreviousWeek()` or `navigateToCurrWeek()` accordingly."},{"lineNumber":602,"author":{"gitID":"-"},"content":"All of these methods call `updateTimetableView()` to rebuild the timetable displaying the appropriate weeks."},{"lineNumber":603,"author":{"gitID":"-"},"content":"* Selection/Deselection of an employee:"},{"lineNumber":604,"author":{"gitID":"-"},"content":"`EmployeePanelSelectionChangedEvent` is posted which is handled by calling `loadEmployeeTimetable(employee)` or `loadDefaultTimetable()` accordingly. Both of these"},{"lineNumber":605,"author":{"gitID":"-"},"content":"methods call `updateTimetableView()` to rebuild the timetable with the appropriate colours of the entries."},{"lineNumber":606,"author":{"gitID":"-"},"content":""},{"lineNumber":607,"author":{"gitID":"-"},"content":""},{"lineNumber":608,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Commands"},{"lineNumber":609,"author":{"gitID":"-"},"content":""},{"lineNumber":610,"author":{"gitID":"-"},"content":"The following are commands that are supported as part of the timetable feature:"},{"lineNumber":611,"author":{"gitID":"-"},"content":""},{"lineNumber":612,"author":{"gitID":"-"},"content":". \u003c\u003cSelect, `SelectCommand`\u003e\u003e: Selects an employee and highlight their shifts on the timetable."},{"lineNumber":613,"author":{"gitID":"-"},"content":". \u003c\u003cDeselect, `DeselectCommand`\u003e\u003e: Returns the timetable back to the default view of the current week."},{"lineNumber":614,"author":{"gitID":"-"},"content":". \u003c\u003cExport, `ExportCommand`\u003e\u003e: Exports timetable as an image."},{"lineNumber":615,"author":{"gitID":"-"},"content":""},{"lineNumber":616,"author":{"gitID":"-"},"content":"[[Select]]"},{"lineNumber":617,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Viewing of individual employee\u0027s shifts"},{"lineNumber":618,"author":{"gitID":"-"},"content":""},{"lineNumber":619,"author":{"gitID":"-"},"content":"PTMan allows employees to highlight their own shifts on the timetable through `SelectCommand`. When a particular employee is"},{"lineNumber":620,"author":{"gitID":"-"},"content":"being selected, `EmployeePanelSelectionChangedEvent` is posted with the selected employee as its argument. +"},{"lineNumber":621,"author":{"gitID":"-"},"content":""},{"lineNumber":622,"author":{"gitID":"-"},"content":"`EmployeePanelSelectionChangedEvent` has the following constructor:"},{"lineNumber":623,"author":{"gitID":"-"},"content":"----"},{"lineNumber":624,"author":{"gitID":"-"},"content":"public EmployeePanelSelectionChangedEvent(EmployeeCard newSelection)"},{"lineNumber":625,"author":{"gitID":"-"},"content":"----"},{"lineNumber":626,"author":{"gitID":"-"},"content":""},{"lineNumber":627,"author":{"gitID":"-"},"content":"`TimetablePanel` subscribes to this event and handles it by calling the `loadEmployeeTimetable` method for the `newSelection`. +"},{"lineNumber":628,"author":{"gitID":"-"},"content":" +"},{"lineNumber":629,"author":{"gitID":"-"},"content":""},{"lineNumber":630,"author":{"gitID":"-"},"content":"[[Deselect]]"},{"lineNumber":631,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Returning to default view of timetable"},{"lineNumber":632,"author":{"gitID":"-"},"content":""},{"lineNumber":633,"author":{"gitID":"-"},"content":"The `DeselectCommand` deselects any selected employee and returns the timetable back to its default style."},{"lineNumber":634,"author":{"gitID":"-"},"content":"`EmployeePanelSelectionChangedEvent` is posted with `null` as its argument."},{"lineNumber":635,"author":{"gitID":"-"},"content":""},{"lineNumber":636,"author":{"gitID":"-"},"content":"`TimetablePanel` subscribes to this event and handles it by calling the `loadDefaultTimetable` method. +"},{"lineNumber":637,"author":{"gitID":"-"},"content":" +"},{"lineNumber":638,"author":{"gitID":"-"},"content":""},{"lineNumber":639,"author":{"gitID":"-"},"content":"[[Export]]"},{"lineNumber":640,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Exporting timetable"},{"lineNumber":641,"author":{"gitID":"-"},"content":""},{"lineNumber":642,"author":{"gitID":"-"},"content":"Exporting of the timetable is triggered by `ExportCommand`, which:"},{"lineNumber":643,"author":{"gitID":"-"},"content":""},{"lineNumber":644,"author":{"gitID":"-"},"content":"* Saves the timetable as an image locally if no email address is specified, or"},{"lineNumber":645,"author":{"gitID":"-"},"content":"* Sends the timetable as an image through email if an email address is specified."},{"lineNumber":646,"author":{"gitID":"-"},"content":""},{"lineNumber":647,"author":{"gitID":"-"},"content":"The former posts an `ExportTimetableAsImageRequestEvent`, while the latter posts an `ExportTimetableAsImageAndEmailRequestEvent`,"},{"lineNumber":648,"author":{"gitID":"-"},"content":"both of which are subscribed to by `TimetablePanel`. +"},{"lineNumber":649,"author":{"gitID":"-"},"content":""},{"lineNumber":650,"author":{"gitID":"-"},"content":"`TimetablePanel` handles them by calling `exportTimetableAsImage` or `exportTimetableAsImageAndEmail` accordingly."},{"lineNumber":651,"author":{"gitID":"-"},"content":"The exporting works by taking a Snapshot of the `timetableView` node, and then writing it into a local file."},{"lineNumber":652,"author":{"gitID":"-"},"content":"If `exportTimetableAsImageAndEmail` is called instead of `exportTimetableAsImage`, this image"},{"lineNumber":653,"author":{"gitID":"-"},"content":"will be emailed through the `EmailService` class, and then deleted from local storage."},{"lineNumber":654,"author":{"gitID":"-"},"content":""},{"lineNumber":655,"author":{"gitID":"-"},"content":"// end::timetable[]"},{"lineNumber":656,"author":{"gitID":"-"},"content":""},{"lineNumber":657,"author":{"gitID":"-"},"content":""},{"lineNumber":658,"author":{"gitID":"-"},"content":"// tag::undoredo[]"},{"lineNumber":659,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Undo/Redo Feature"},{"lineNumber":660,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d How it is implemented"},{"lineNumber":661,"author":{"gitID":"-"},"content":""},{"lineNumber":662,"author":{"gitID":"-"},"content":"The undo/redo mechanism is facilitated by an `UndoRedoStack`, which resides inside `LogicManager`. It supports undoing and redoing of commands that modifies the state of the Part-time Manager (e.g. `add`, `edit`). Such commands will inherit from `UndoableCommand`."},{"lineNumber":663,"author":{"gitID":"-"},"content":""},{"lineNumber":664,"author":{"gitID":"-"},"content":"`UndoRedoStack` only deals with `UndoableCommands`. Commands that cannot be undone will inherit from `Command` instead. The following diagram (_\u003c\u003cfig-LogicCommand\u003e\u003e_) shows the inheritance diagram for commands:"},{"lineNumber":665,"author":{"gitID":"-"},"content":"{nbsp} +"},{"lineNumber":666,"author":{"gitID":"-"},"content":""},{"lineNumber":667,"author":{"gitID":"-"},"content":"[[fig-LogicCommand]]"},{"lineNumber":668,"author":{"gitID":"-"},"content":".Inheritance Diagram for Commands"},{"lineNumber":669,"author":{"gitID":"-"},"content":"image::LogicCommandClassDiagram.png[width\u003d\"800\"]"},{"lineNumber":670,"author":{"gitID":"-"},"content":""},{"lineNumber":671,"author":{"gitID":"-"},"content":"{nbsp} +"},{"lineNumber":672,"author":{"gitID":"-"},"content":""},{"lineNumber":673,"author":{"gitID":"-"},"content":"As you can see from _\u003c\u003cfig-LogicCommand\u003e\u003e_, `UndoableCommand` adds an extra layer between the abstract `Command` class and concrete commands that can be undone, such as the `DeleteCommand`. Note that extra tasks need to be done when executing a command in an _undoable_ way, such as saving the state of the Part-time Manager before execution. `UndoableCommand` contains the high-level algorithm for those extra tasks while the child classes implement the details of how to execute the specific command. Note that this technique of putting the high-level algorithm in the parent class and lower-level steps of the algorithm in child classes is also known as the https://www.tutorialspoint.com/design_pattern/template_pattern.htm[template pattern]."},{"lineNumber":674,"author":{"gitID":"-"},"content":""},{"lineNumber":675,"author":{"gitID":"-"},"content":"Commands that are not undoable are implemented this way:"},{"lineNumber":676,"author":{"gitID":"-"},"content":"[source,java]"},{"lineNumber":677,"author":{"gitID":"-"},"content":"----"},{"lineNumber":678,"author":{"gitID":"-"},"content":"public class ListCommand extends Command {"},{"lineNumber":679,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":680,"author":{"gitID":"-"},"content":"    public CommandResult execute() {"},{"lineNumber":681,"author":{"gitID":"-"},"content":"        // ... list logic ..."},{"lineNumber":682,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":683,"author":{"gitID":"-"},"content":"}"},{"lineNumber":684,"author":{"gitID":"-"},"content":"----"},{"lineNumber":685,"author":{"gitID":"-"},"content":""},{"lineNumber":686,"author":{"gitID":"-"},"content":"With the extra layer, the commands that are undoable are implemented this way:"},{"lineNumber":687,"author":{"gitID":"-"},"content":"[source,java]"},{"lineNumber":688,"author":{"gitID":"-"},"content":"----"},{"lineNumber":689,"author":{"gitID":"-"},"content":"public abstract class UndoableCommand extends Command {"},{"lineNumber":690,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":691,"author":{"gitID":"-"},"content":"    public CommandResult execute() {"},{"lineNumber":692,"author":{"gitID":"-"},"content":"        // ... undo logic ..."},{"lineNumber":693,"author":{"gitID":"-"},"content":""},{"lineNumber":694,"author":{"gitID":"-"},"content":"        executeUndoableCommand();"},{"lineNumber":695,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":696,"author":{"gitID":"-"},"content":"}"},{"lineNumber":697,"author":{"gitID":"-"},"content":""},{"lineNumber":698,"author":{"gitID":"-"},"content":"public class DeleteCommand extends UndoableCommand {"},{"lineNumber":699,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":700,"author":{"gitID":"-"},"content":"    public CommandResult executeUndoableCommand() {"},{"lineNumber":701,"author":{"gitID":"-"},"content":"        // ... delete logic ..."},{"lineNumber":702,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":703,"author":{"gitID":"-"},"content":"}"},{"lineNumber":704,"author":{"gitID":"-"},"content":"----"},{"lineNumber":705,"author":{"gitID":"-"},"content":""},{"lineNumber":706,"author":{"gitID":"-"},"content":"Suppose that the user has just launched the application. The `UndoRedoStack` will be empty at the beginning."},{"lineNumber":707,"author":{"gitID":"-"},"content":""},{"lineNumber":708,"author":{"gitID":"-"},"content":"The user executes a new `UndoableCommand`, `delete 5`, to delete the 5th person in the Part-time Manager. The current state of the Part-time Manager is saved before the `delete 5` command executes. The `delete 5` command will then be pushed onto the `undoStack` (the current state is saved together with the command) as shown in _\u003c\u003cfig-Undo1\u003e\u003e_."},{"lineNumber":709,"author":{"gitID":"-"},"content":""},{"lineNumber":710,"author":{"gitID":"-"},"content":"[[fig-Undo1]]"},{"lineNumber":711,"author":{"gitID":"-"},"content":".Demonstration of `delete 5` Command in Undo and Redo Stack"},{"lineNumber":712,"author":{"gitID":"-"},"content":"image::UndoRedoStartingStackDiagram.png[width\u003d\"800\"]"},{"lineNumber":713,"author":{"gitID":"-"},"content":""},{"lineNumber":714,"author":{"gitID":"-"},"content":"{nbsp} +"},{"lineNumber":715,"author":{"gitID":"-"},"content":""},{"lineNumber":716,"author":{"gitID":"-"},"content":"As the user continues to use the program, more commands are added into the `undoStack`. For example, the user may execute `add n/David ...` to add a new person, as shown in _\u003c\u003cfig-Undo2\u003e\u003e_."},{"lineNumber":717,"author":{"gitID":"-"},"content":""},{"lineNumber":718,"author":{"gitID":"-"},"content":"[[fig-Undo2]]"},{"lineNumber":719,"author":{"gitID":"-"},"content":".Demonstration of `add n/David ...` Command in Undo and Redo Stack"},{"lineNumber":720,"author":{"gitID":"-"},"content":"image::UndoRedoNewCommand1StackDiagram.png[width\u003d\"800\"]"},{"lineNumber":721,"author":{"gitID":"-"},"content":""},{"lineNumber":722,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":723,"author":{"gitID":"-"},"content":"If a command fails its execution, it will not be pushed to the `UndoRedoStack` at all."},{"lineNumber":724,"author":{"gitID":"-"},"content":""},{"lineNumber":725,"author":{"gitID":"-"},"content":"{nbsp} +"},{"lineNumber":726,"author":{"gitID":"-"},"content":""},{"lineNumber":727,"author":{"gitID":"-"},"content":"The user now decides that adding the person was a mistake, and decides to undo that action using `undo`."},{"lineNumber":728,"author":{"gitID":"-"},"content":""},{"lineNumber":729,"author":{"gitID":"-"},"content":"We will pop the most recent command out of the `undoStack` and push it back to the `redoStack`. We will restore the Part-time Manager to the state before the `add` command executed as shown in _\u003c\u003cfig-Undo3\u003e\u003e_.."},{"lineNumber":730,"author":{"gitID":"-"},"content":""},{"lineNumber":731,"author":{"gitID":"-"},"content":"[[fig-Undo3]]"},{"lineNumber":732,"author":{"gitID":"-"},"content":".Demonstration of `undo` Command in Undo and Redo Stack"},{"lineNumber":733,"author":{"gitID":"-"},"content":"image::UndoRedoExecuteUndoStackDiagram.png[width\u003d\"800\"]"},{"lineNumber":734,"author":{"gitID":"-"},"content":""},{"lineNumber":735,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":736,"author":{"gitID":"-"},"content":"If the `undoStack` is empty, then there are no other commands left to be undone, and an `Exception` will be thrown when popping the `undoStack`."},{"lineNumber":737,"author":{"gitID":"-"},"content":""},{"lineNumber":738,"author":{"gitID":"-"},"content":"{nbsp} +"},{"lineNumber":739,"author":{"gitID":"-"},"content":"The following sequence diagram (_\u003c\u003cfig-UndoRedoSD\u003e\u003e_) shows how the undo operation works:"},{"lineNumber":740,"author":{"gitID":"-"},"content":""},{"lineNumber":741,"author":{"gitID":"-"},"content":"[[fig-UndoRedoSD]]"},{"lineNumber":742,"author":{"gitID":"-"},"content":".Sequence Diagram for Undo Operation"},{"lineNumber":743,"author":{"gitID":"-"},"content":"image::UndoRedoSequenceDiagram.png[width\u003d\"800\"]"},{"lineNumber":744,"author":{"gitID":"-"},"content":""},{"lineNumber":745,"author":{"gitID":"-"},"content":"{nbsp} +"},{"lineNumber":746,"author":{"gitID":"-"},"content":""},{"lineNumber":747,"author":{"gitID":"-"},"content":"The redo does the exact opposite (pops from `redoStack`, push to `undoStack`, and restores the Part-time Manager to the state after the command is executed)."},{"lineNumber":748,"author":{"gitID":"-"},"content":""},{"lineNumber":749,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":750,"author":{"gitID":"-"},"content":"If the `redoStack` is empty, then there are no other commands left to be redone, and an `Exception` will be thrown when popping the `redoStack`."},{"lineNumber":751,"author":{"gitID":"-"},"content":""},{"lineNumber":752,"author":{"gitID":"-"},"content":"The user now decides to execute a new command, `clear`. As before, `clear` will be pushed into the `undoStack`. This time the `redoStack` is no longer empty. It will be purged as it no longer makes sense to redo the `add n/David` command (this is the behavior that most modern desktop applications follow). _\u003c\u003cfig-Undo4\u003e\u003e_ shows changes in undoStack and redoStack after a `clear` command."},{"lineNumber":753,"author":{"gitID":"-"},"content":""},{"lineNumber":754,"author":{"gitID":"-"},"content":"[[fig-Undo4]]"},{"lineNumber":755,"author":{"gitID":"-"},"content":".Demonstration of `clear` Command in Undo and Redo Stack"},{"lineNumber":756,"author":{"gitID":"-"},"content":"image::UndoRedoNewCommand2StackDiagram.png[width\u003d\"800\"]"},{"lineNumber":757,"author":{"gitID":"-"},"content":""},{"lineNumber":758,"author":{"gitID":"-"},"content":"{empty} +"},{"lineNumber":759,"author":{"gitID":"-"},"content":""},{"lineNumber":760,"author":{"gitID":"-"},"content":"Commands that are not undoable are not added into the `undoStack`. For example, `list`, which inherits from `Command` rather than `UndoableCommand`, will not be added after execution, as shown in _\u003c\u003cfig-Undo5\u003e\u003e_."},{"lineNumber":761,"author":{"gitID":"-"},"content":""},{"lineNumber":762,"author":{"gitID":"-"},"content":"[[fig-Undo5]]"},{"lineNumber":763,"author":{"gitID":"-"},"content":".Demonstration of `list` Command in Undo and Redo Stack"},{"lineNumber":764,"author":{"gitID":"-"},"content":"image::UndoRedoNewCommand3StackDiagram.png[width\u003d\"800\"]"},{"lineNumber":765,"author":{"gitID":"-"},"content":""},{"lineNumber":766,"author":{"gitID":"-"},"content":"{nbsp} +"},{"lineNumber":767,"author":{"gitID":"-"},"content":""},{"lineNumber":768,"author":{"gitID":"-"},"content":"The following activity diagram summarize what happens inside the `UndoRedoStack` when a user executes a new command, as shown in _\u003c\u003cfig-Undo6\u003e\u003e_."},{"lineNumber":769,"author":{"gitID":"-"},"content":""},{"lineNumber":770,"author":{"gitID":"-"},"content":"[[fig-Undo6]]"},{"lineNumber":771,"author":{"gitID":"-"},"content":".Activity Diagram for Undo/Redo Feature"},{"lineNumber":772,"author":{"gitID":"-"},"content":"image::UndoRedoActivityDiagram.png[width\u003d\"650\"]"},{"lineNumber":773,"author":{"gitID":"-"},"content":""},{"lineNumber":774,"author":{"gitID":"-"},"content":"{nbsp} +"},{"lineNumber":775,"author":{"gitID":"-"},"content":""},{"lineNumber":776,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Design considerations"},{"lineNumber":777,"author":{"gitID":"-"},"content":"This section highlights the considerations behind our application\u0027s design choices."},{"lineNumber":778,"author":{"gitID":"-"},"content":""},{"lineNumber":779,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Aspect: implementation of `UndoableCommand`"},{"lineNumber":780,"author":{"gitID":"-"},"content":""},{"lineNumber":781,"author":{"gitID":"-"},"content":"* **Alternative 1 (current choice):** Add a new abstract method `executeUndoableCommand()`."},{"lineNumber":782,"author":{"gitID":"-"},"content":"** Pros: We will not lose any undone/redone functionality as it is now part of the default behaviour. Classes that deal with `Command` do not have to know that `executeUndoableCommand()` exist."},{"lineNumber":783,"author":{"gitID":"-"},"content":"** Cons: Hard for new developers to understand the template pattern."},{"lineNumber":784,"author":{"gitID":"-"},"content":"* **Alternative 2:** Just override `execute()`"},{"lineNumber":785,"author":{"gitID":"-"},"content":"** Pros: Does not involve the template pattern, easier for new developers to understand."},{"lineNumber":786,"author":{"gitID":"-"},"content":"** Cons: Classes that inherit from `UndoableCommand` must remember to call `super.execute()`, or lose the ability to undo/redo."},{"lineNumber":787,"author":{"gitID":"-"},"content":""},{"lineNumber":788,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Aspect: how undo \u0026 redo executes"},{"lineNumber":789,"author":{"gitID":"-"},"content":""},{"lineNumber":790,"author":{"gitID":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire Part-time Manager."},{"lineNumber":791,"author":{"gitID":"-"},"content":"** Pros: Easy to implement."},{"lineNumber":792,"author":{"gitID":"-"},"content":"** Cons: May have performance issues in terms of memory usage."},{"lineNumber":793,"author":{"gitID":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by itself."},{"lineNumber":794,"author":{"gitID":"-"},"content":"** Pros: Will use less memory (e.g. for `delete`, just save the person being deleted)."},{"lineNumber":795,"author":{"gitID":"-"},"content":"** Cons: We must ensure that the implementation of each command is correct."},{"lineNumber":796,"author":{"gitID":"-"},"content":""},{"lineNumber":797,"author":{"gitID":"-"},"content":""},{"lineNumber":798,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Aspect: type of commands that can be undone/redone"},{"lineNumber":799,"author":{"gitID":"-"},"content":""},{"lineNumber":800,"author":{"gitID":"-"},"content":"* **Alternative 1 (current choice):** Only include commands that modify the Part-time Manager (`add`, `clear`, `edit`)."},{"lineNumber":801,"author":{"gitID":"-"},"content":"** Pros: We only revert changes that are hard to change back (the view can easily be re-modified as no data are lost)."},{"lineNumber":802,"author":{"gitID":"-"},"content":"** Cons: User might think that undo also applies when the list is modified (undoing filtering for example),  only to realize that it does not do that, after executing `undo`."},{"lineNumber":803,"author":{"gitID":"-"},"content":"* **Alternative 2:** Include all commands."},{"lineNumber":804,"author":{"gitID":"-"},"content":"** Pros: PTMan might be more intuitive for the user."},{"lineNumber":805,"author":{"gitID":"-"},"content":"** Cons: User has no way of skipping such commands if he or she just want to reset the state of PTMan and not the view."},{"lineNumber":806,"author":{"gitID":"-"},"content":"**Additional Info:** See our discussion  https://github.com/se-edu/addressbook-level4/issues/390#issuecomment-298936672[here]."},{"lineNumber":807,"author":{"gitID":"-"},"content":""},{"lineNumber":808,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Aspect: data structure to support the undo/redo commands"},{"lineNumber":809,"author":{"gitID":"-"},"content":""},{"lineNumber":810,"author":{"gitID":"-"},"content":"* **Alternative 1 (current choice):** Use separate stack for undo and redo"},{"lineNumber":811,"author":{"gitID":"-"},"content":"** Pros: Easy to understand for new Computer Science undergraduates, who are likely to be the new incoming developers of our project."},{"lineNumber":812,"author":{"gitID":"-"},"content":"** Cons: Logic is duplicated twice. For example, when a new command is executed, we must remember to update  both `HistoryManager` and `UndoRedoStack`."},{"lineNumber":813,"author":{"gitID":"-"},"content":"* **Alternative 2:** Use `HistoryManager` for undo/redo"},{"lineNumber":814,"author":{"gitID":"-"},"content":"** Pros: We do not need to maintain a separate stack, and just reuse what is already in the codebase."},{"lineNumber":815,"author":{"gitID":"-"},"content":"** Cons: Requires dealing with commands that have already been undone: We must remember to skip these commands. Violates Single Responsibility Principle and Separation of Concerns as `HistoryManager` now needs to do two different things."},{"lineNumber":816,"author":{"gitID":"-"},"content":"// end::undoredo[]"},{"lineNumber":817,"author":{"gitID":"-"},"content":""},{"lineNumber":818,"author":{"gitID":"-"},"content":""},{"lineNumber":819,"author":{"gitID":"-"},"content":""},{"lineNumber":820,"author":{"gitID":"-"},"content":"// tag::accessControl[]"},{"lineNumber":821,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Password Feature"},{"lineNumber":822,"author":{"gitID":"-"},"content":""},{"lineNumber":823,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Reason for implementation"},{"lineNumber":824,"author":{"gitID":"-"},"content":"As PTMan is currently designed to use locally on a system, both employer and employee must go through the same system to allocate their preferred slot or to edit the data in PTMan. A Password class is given to both employer and employee to ensure that they are the authorized person that is using the system."},{"lineNumber":825,"author":{"gitID":"-"},"content":""},{"lineNumber":826,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d How it is implemented"},{"lineNumber":827,"author":{"gitID":"-"},"content":"A Password class is created with two constructors."},{"lineNumber":828,"author":{"gitID":"-"},"content":"----"},{"lineNumber":829,"author":{"gitID":"-"},"content":"new Password();"},{"lineNumber":830,"author":{"gitID":"-"},"content":"new Password(String hashCode);"},{"lineNumber":831,"author":{"gitID":"-"},"content":"----"},{"lineNumber":832,"author":{"gitID":"-"},"content":"`new Password()` produce hash code converted by https://en.wikipedia.org/wiki/SHA-2[SHA-256] using the default password \"DEFAULT1\" and store it within the class. +"},{"lineNumber":833,"author":{"gitID":"-"},"content":""},{"lineNumber":834,"author":{"gitID":"-"},"content":"`new Password(String hashCode)` allows storage to directly insert the generated hash code to create the password class upon loading. +"},{"lineNumber":835,"author":{"gitID":"-"},"content":""},{"lineNumber":836,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":837,"author":{"gitID":"-"},"content":"To create a password with desired password String, one can invoke the method below."},{"lineNumber":838,"author":{"gitID":"-"},"content":"----"},{"lineNumber":839,"author":{"gitID":"-"},"content":"createPassword(String password)"},{"lineNumber":840,"author":{"gitID":"-"},"content":"----"},{"lineNumber":841,"author":{"gitID":"-"},"content":""},{"lineNumber":842,"author":{"gitID":"-"},"content":"As of version 1.2, each person and outlet now has a `Password` class. You may refer to _\u003c\u003cfig-PasswordCD\u003e\u003e_ for an overview of the `Password` class."},{"lineNumber":843,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":844,"author":{"gitID":"-"},"content":"[[fig-PasswordCD]]"},{"lineNumber":845,"author":{"gitID":"-"},"content":".Overview of the Password Class in Model Component"},{"lineNumber":846,"author":{"gitID":"koo1993"},"content":"image::PasswordClassDiagram.png[width\u003d\"700\"]"},{"lineNumber":847,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":848,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":849,"author":{"gitID":"-"},"content":"The reason of converting password string to hashCode is to protect user’s password from being seen in the storage file.  Anyone who get hold of the data are not able to convert the hashCode back to the original password string as SHA-256 is a https://en.wikipedia.org/wiki/Collision_resistance[collision resistant] hash."},{"lineNumber":850,"author":{"gitID":"-"},"content":""},{"lineNumber":851,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Admin Mode and Command Feature"},{"lineNumber":852,"author":{"gitID":"-"},"content":""},{"lineNumber":853,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Reason for implementation"},{"lineNumber":854,"author":{"gitID":"koo1993"},"content":"Initial startup of PTMan require huge amount of manual input by admin. To promote hassle-free commands, employers can log in to admin mode with `login` command and use the command provided without the need to be autheticated for every command."},{"lineNumber":855,"author":{"gitID":"-"},"content":""},{"lineNumber":856,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d How it is implemented  (admin mode)"},{"lineNumber":857,"author":{"gitID":"-"},"content":"Model component now implement three new API for logic component to use."},{"lineNumber":858,"author":{"gitID":"-"},"content":"----"},{"lineNumber":859,"author":{"gitID":"-"},"content":"boolean isAdminMode();"},{"lineNumber":860,"author":{"gitID":"-"},"content":"boolean setTrueAdminMode(Password password);"},{"lineNumber":861,"author":{"gitID":"-"},"content":""},{"lineNumber":862,"author":{"gitID":"koo1993"},"content":"/** guarantee to set adminMode to false */"},{"lineNumber":863,"author":{"gitID":"-"},"content":"setFalseAdminMode();"},{"lineNumber":864,"author":{"gitID":"-"},"content":"----"},{"lineNumber":865,"author":{"gitID":"-"},"content":""},{"lineNumber":866,"author":{"gitID":"-"},"content":"`setTrueAdminMode(Password password)` requires a password that will check against the outlet password and set admin mode accordingly. Failing to give the correct password will result in returning false."},{"lineNumber":867,"author":{"gitID":"-"},"content":""},{"lineNumber":868,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d How it is implemented (admin command)"},{"lineNumber":869,"author":{"gitID":"koo1993"},"content":"In order to enable commands to be usable only in admin mode the code below must be added to the execution() of the command *first*."},{"lineNumber":870,"author":{"gitID":"-"},"content":"----"},{"lineNumber":871,"author":{"gitID":"-"},"content":"if (!model.isAdminMode()) {"},{"lineNumber":872,"author":{"gitID":"-"},"content":"    throw new CommandException(MESSAGE_ACCESS_DENIED);"},{"lineNumber":873,"author":{"gitID":"-"},"content":"}"},{"lineNumber":874,"author":{"gitID":"-"},"content":"----"},{"lineNumber":875,"author":{"gitID":"-"},"content":"_\u003c\u003cfig-DeleteSD\u003e\u003e_ below illustrates how the admin command is generally executed."},{"lineNumber":876,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":877,"author":{"gitID":"-"},"content":"[[fig-DeleteSD]]"},{"lineNumber":878,"author":{"gitID":"koo1993"},"content":".Interactions inside the Logic Component for the `delete 1` Admin Command"},{"lineNumber":879,"author":{"gitID":"-"},"content":"image::DeletePersonSdForLogic.png[width\u003d\"800\"]"},{"lineNumber":880,"author":{"gitID":"-"},"content":""},{"lineNumber":881,"author":{"gitID":"-"},"content":""},{"lineNumber":882,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Email Service Feature"},{"lineNumber":883,"author":{"gitID":"-"},"content":""},{"lineNumber":884,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Reason for implementation"},{"lineNumber":885,"author":{"gitID":"-"},"content":"Email service can be useful to send reset password and notification to employee. To facilitate easy sending of email, a https://en.wikipedia.org/wiki/Singleton_pattern[singleton] `EmailService` class is introduced."},{"lineNumber":886,"author":{"gitID":"-"},"content":""},{"lineNumber":887,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d How it is implementation"},{"lineNumber":888,"author":{"gitID":"-"},"content":"To get an instance of the email service the following code can be called anywhere."},{"lineNumber":889,"author":{"gitID":"-"},"content":"----"},{"lineNumber":890,"author":{"gitID":"-"},"content":"EmailService.getInstance();"},{"lineNumber":891,"author":{"gitID":"-"},"content":"----"},{"lineNumber":892,"author":{"gitID":"-"},"content":"Currently, there are two specialized methods in `EmailService` class that can be used to send email."},{"lineNumber":893,"author":{"gitID":"-"},"content":"----"},{"lineNumber":894,"author":{"gitID":"-"},"content":"sendTimetableAttachment(String email, String filename)"},{"lineNumber":895,"author":{"gitID":"-"},"content":"sendResetPasswordMessage(String name, String email, String newPassword)"},{"lineNumber":896,"author":{"gitID":"-"},"content":"----"},{"lineNumber":897,"author":{"gitID":"-"},"content":"`sendTimetableAttachment` crafts a specialized email and send to the specified `email` with attachment from `filename`. +"},{"lineNumber":898,"author":{"gitID":"-"},"content":""},{"lineNumber":899,"author":{"gitID":"-"},"content":"`sendResetPasswordMessage` crafts a specialized email and send to the specified `email` to the intended personnel."},{"lineNumber":900,"author":{"gitID":"-"},"content":""},{"lineNumber":901,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":902,"author":{"gitID":"-"},"content":"`EmailService` class is free for extension."},{"lineNumber":903,"author":{"gitID":"-"},"content":"// end::accessControl[]"},{"lineNumber":904,"author":{"gitID":"-"},"content":""},{"lineNumber":905,"author":{"gitID":"-"},"content":"// tag::backup[]"},{"lineNumber":906,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Backup Storage"},{"lineNumber":907,"author":{"gitID":"-"},"content":""},{"lineNumber":908,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Reason for implementation"},{"lineNumber":909,"author":{"gitID":"-"},"content":"Sometimes local storage files might be corrupted due to accidents."},{"lineNumber":910,"author":{"gitID":"-"},"content":"It is important to keep backup files to prevent any loss of essential data."},{"lineNumber":911,"author":{"gitID":"-"},"content":""},{"lineNumber":912,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d How it is implemented"},{"lineNumber":913,"author":{"gitID":"-"},"content":"Currently, backup files are stored with file extension \".backup\" in the same folder as local storage files."},{"lineNumber":914,"author":{"gitID":"-"},"content":"Backup files are updated upon exit of the app."},{"lineNumber":915,"author":{"gitID":"-"},"content":"It is implemented by calling `backupPartTimeManager(ReadOnlyPartTimeManager partTimeManager)` and `backupOutletInformation(OutletInformation outletInformation)` in the `MainApp.java` as shown below:"},{"lineNumber":916,"author":{"gitID":"-"},"content":"----"},{"lineNumber":917,"author":{"gitID":"-"},"content":"public void stop() {"},{"lineNumber":918,"author":{"gitID":"-"},"content":"    ..."},{"lineNumber":919,"author":{"gitID":"-"},"content":"    storage.backupPartTimeManager(model.getPartTimeManager());"},{"lineNumber":920,"author":{"gitID":"-"},"content":"    storage.backupOutletInformation(model.getOutletInformation());"},{"lineNumber":921,"author":{"gitID":"-"},"content":"    ..."},{"lineNumber":922,"author":{"gitID":"-"},"content":"}"},{"lineNumber":923,"author":{"gitID":"-"},"content":"----"},{"lineNumber":924,"author":{"gitID":"-"},"content":"An alternative implementation would be not only saving backup files but also sending them to the cloud such as Dropbox and Google Drive."},{"lineNumber":925,"author":{"gitID":"-"},"content":"It can be done using the respective Dropbox and Google Drive APIs."},{"lineNumber":926,"author":{"gitID":"-"},"content":"// end::backup[]"},{"lineNumber":927,"author":{"gitID":"-"},"content":""},{"lineNumber":928,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Logging"},{"lineNumber":929,"author":{"gitID":"-"},"content":""},{"lineNumber":930,"author":{"gitID":"-"},"content":"We are using the `java.util.logging` package for logging. The `LogsCenter` class is used to manage the logging levels and logging destinations."},{"lineNumber":931,"author":{"gitID":"-"},"content":""},{"lineNumber":932,"author":{"gitID":"-"},"content":"* The logging level can be controlled using the `logLevel` setting in the configuration file. (See \u003c\u003cImplementation-Configuration\u003e\u003e)"},{"lineNumber":933,"author":{"gitID":"-"},"content":"* The `Logger` for a class can be obtained using `LogsCenter.getLogger(Class)` which will log messages according to the specified logging level."},{"lineNumber":934,"author":{"gitID":"-"},"content":"* Currently, log messages are output to `Console` and to a `.log` file."},{"lineNumber":935,"author":{"gitID":"-"},"content":""},{"lineNumber":936,"author":{"gitID":"-"},"content":"*Logging Levels*"},{"lineNumber":937,"author":{"gitID":"-"},"content":""},{"lineNumber":938,"author":{"gitID":"-"},"content":"* `SEVERE` : Logs critical problems which may possibly cause the termination of the application."},{"lineNumber":939,"author":{"gitID":"-"},"content":"* `WARNING` : Logs potential problems."},{"lineNumber":940,"author":{"gitID":"-"},"content":"* `INFO` : Logs the noteworthy actions of app."},{"lineNumber":941,"author":{"gitID":"-"},"content":"* `FINE` : Logs details that are not usually noteworthy but may be useful in debugging e.g. printing the actual list instead of just it\u0027s size."},{"lineNumber":942,"author":{"gitID":"-"},"content":""},{"lineNumber":943,"author":{"gitID":"-"},"content":"[[Implementation-Configuration]]"},{"lineNumber":944,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Configuration"},{"lineNumber":945,"author":{"gitID":"-"},"content":""},{"lineNumber":946,"author":{"gitID":"-"},"content":"Certain properties of the application can be controlled (e.g app name, logging level) through the configuration file (default: `config.json`)."},{"lineNumber":947,"author":{"gitID":"-"},"content":""},{"lineNumber":948,"author":{"gitID":"-"},"content":"\u003d\u003d Documentation"},{"lineNumber":949,"author":{"gitID":"-"},"content":""},{"lineNumber":950,"author":{"gitID":"-"},"content":"This section describes how to edit, publish and convert documentation. We use asciidoc for writing documentation."},{"lineNumber":951,"author":{"gitID":"-"},"content":""},{"lineNumber":952,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":953,"author":{"gitID":"-"},"content":"We chose asciidoc over Markdown because asciidoc, although a bit more complex than Markdown, provides more flexibility in formatting."},{"lineNumber":954,"author":{"gitID":"-"},"content":""},{"lineNumber":955,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Editing Documentation"},{"lineNumber":956,"author":{"gitID":"-"},"content":""},{"lineNumber":957,"author":{"gitID":"-"},"content":"See \u003c\u003cUsingGradle#rendering-asciidoc-files, UsingGradle.adoc\u003e\u003e to learn how to render `.adoc` files locally to preview the end result of your edits."},{"lineNumber":958,"author":{"gitID":"-"},"content":"Alternatively, you can download the AsciiDoc plugin for IntelliJ, which allows you to preview the changes you have made to your `.adoc` files in real-time."},{"lineNumber":959,"author":{"gitID":"-"},"content":""},{"lineNumber":960,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Publishing Documentation"},{"lineNumber":961,"author":{"gitID":"-"},"content":""},{"lineNumber":962,"author":{"gitID":"-"},"content":"See \u003c\u003cUsingTravis#deploying-github-pages, UsingTravis.adoc\u003e\u003e to learn how to deploy GitHub Pages using Travis."},{"lineNumber":963,"author":{"gitID":"-"},"content":""},{"lineNumber":964,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Converting Documentation to PDF Format"},{"lineNumber":965,"author":{"gitID":"-"},"content":""},{"lineNumber":966,"author":{"gitID":"-"},"content":"We use https://www.google.com/chrome/browser/desktop/[Google Chrome] for converting documentation to PDF format, as Chrome\u0027s PDF engine preserves hyperlinks used in webpages."},{"lineNumber":967,"author":{"gitID":"-"},"content":""},{"lineNumber":968,"author":{"gitID":"-"},"content":"Here are the steps to convert the project documentation files to PDF format:"},{"lineNumber":969,"author":{"gitID":"-"},"content":""},{"lineNumber":970,"author":{"gitID":"-"},"content":".  Follow the instructions in \u003c\u003cUsingGradle#rendering-asciidoc-files, UsingGradle.adoc\u003e\u003e to convert the AsciiDoc files in the `docs/` directory to HTML format."},{"lineNumber":971,"author":{"gitID":"-"},"content":".  Go to `build/docs` folder, your should see the generated HTML files."},{"lineNumber":972,"author":{"gitID":"-"},"content":".  Right click on the file and select `Open with` -\u003e `Google Chrome`. You should see a Google Chrome window."},{"lineNumber":973,"author":{"gitID":"-"},"content":".  Click on the `Print` option in Chrome\u0027s menu. You should see a `Print` window as shown in _\u003c\u003cfig-SaveDoc\u003e\u003e_ below."},{"lineNumber":974,"author":{"gitID":"-"},"content":".  Set the destination to `Save as PDF`."},{"lineNumber":975,"author":{"gitID":"-"},"content":".  Click `Save` to save a copy of the file in PDF format. For the best results, use the settings indicated in _\u003c\u003cfig-SaveDoc\u003e\u003e_."},{"lineNumber":976,"author":{"gitID":"-"},"content":""},{"lineNumber":977,"author":{"gitID":"-"},"content":"[[fig-SaveDoc]]"},{"lineNumber":978,"author":{"gitID":"-"},"content":".Saving Documentation as PDF Files in Chrome"},{"lineNumber":979,"author":{"gitID":"-"},"content":"image::chrome_save_as_pdf.png[width\u003d\"300\"]"},{"lineNumber":980,"author":{"gitID":"-"},"content":""},{"lineNumber":981,"author":{"gitID":"-"},"content":"[[Testing]]"},{"lineNumber":982,"author":{"gitID":"-"},"content":"\u003d\u003d Testing"},{"lineNumber":983,"author":{"gitID":"-"},"content":""},{"lineNumber":984,"author":{"gitID":"-"},"content":"This section explains how to run the different types of tests and test troubleshooting."},{"lineNumber":985,"author":{"gitID":"-"},"content":""},{"lineNumber":986,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Running Tests"},{"lineNumber":987,"author":{"gitID":"-"},"content":""},{"lineNumber":988,"author":{"gitID":"-"},"content":"There are three ways to run tests."},{"lineNumber":989,"author":{"gitID":"-"},"content":""},{"lineNumber":990,"author":{"gitID":"-"},"content":"[TIP]"},{"lineNumber":991,"author":{"gitID":"-"},"content":"The most reliable way to run tests is the third one. The first two methods might fail in some GUI tests due to platform/resolution-specific idiosyncrasies."},{"lineNumber":992,"author":{"gitID":"-"},"content":""},{"lineNumber":993,"author":{"gitID":"-"},"content":"*Method 1: Using IntelliJ JUnit Test Runner*"},{"lineNumber":994,"author":{"gitID":"-"},"content":""},{"lineNumber":995,"author":{"gitID":"-"},"content":"* Right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027` to run all tests."},{"lineNumber":996,"author":{"gitID":"-"},"content":"* Right-click on a test package, test class, or a test and choose `Run \u0027ABC\u0027` to run a subset of tests."},{"lineNumber":997,"author":{"gitID":"-"},"content":""},{"lineNumber":998,"author":{"gitID":"-"},"content":"*Method 2: Using Gradle*"},{"lineNumber":999,"author":{"gitID":"-"},"content":""},{"lineNumber":1000,"author":{"gitID":"-"},"content":"* Open a console and run the command `gradlew clean allTests`. If you are using Mac/Linux system, run the command `./gradlew clean allTests` instead."},{"lineNumber":1001,"author":{"gitID":"-"},"content":""},{"lineNumber":1002,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":1003,"author":{"gitID":"-"},"content":"See \u003c\u003cUsingGradle#, UsingGradle.adoc\u003e\u003e for more information on how to run tests using Gradle."},{"lineNumber":1004,"author":{"gitID":"-"},"content":""},{"lineNumber":1005,"author":{"gitID":"-"},"content":"*Method 3: Using Gradle (Headless)*"},{"lineNumber":1006,"author":{"gitID":"-"},"content":""},{"lineNumber":1007,"author":{"gitID":"-"},"content":"* Open a console and run the command `gradlew clean headless allTests` to run tests in headless mode. If you are using Mac/Linux system, run the command `./gradlew clean headless allTests` instead."},{"lineNumber":1008,"author":{"gitID":"-"},"content":""},{"lineNumber":1009,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":1010,"author":{"gitID":"-"},"content":"Thanks to the https://github.com/TestFX/TestFX[TestFX] library, our GUI tests can be run in the _headless_ mode. In the headless mode, GUI tests do not show up on the screen. That means the developer can do other things on the computer while the tests are running."},{"lineNumber":1011,"author":{"gitID":"-"},"content":""},{"lineNumber":1012,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Types of Tests"},{"lineNumber":1013,"author":{"gitID":"-"},"content":""},{"lineNumber":1014,"author":{"gitID":"-"},"content":"We have two types of tests:"},{"lineNumber":1015,"author":{"gitID":"-"},"content":""},{"lineNumber":1016,"author":{"gitID":"-"},"content":".  *GUI Tests* +"},{"lineNumber":1017,"author":{"gitID":"-"},"content":" These are tests involving the GUI. They include:"},{"lineNumber":1018,"author":{"gitID":"-"},"content":"* _System tests_ test the entire app by simulating user actions on the GUI. These are in the `systemtests` package."},{"lineNumber":1019,"author":{"gitID":"-"},"content":"* _Unit tests_ test the individual UI components. These are in the `seedu.ptman.ui` package."},{"lineNumber":1020,"author":{"gitID":"-"},"content":".  *Non-GUI Tests* +"},{"lineNumber":1021,"author":{"gitID":"-"},"content":" These are tests not involving the GUI. They include:"},{"lineNumber":1022,"author":{"gitID":"-"},"content":"*  _Unit tests_ test methods/classes at the lowest level. +"},{"lineNumber":1023,"author":{"gitID":"-"},"content":"e.g. `seedu.ptman.commons.StringUtilTest`"},{"lineNumber":1024,"author":{"gitID":"-"},"content":"*  _Integration tests_ test the integration of multiple code units. Those code units are assumed to be working. +"},{"lineNumber":1025,"author":{"gitID":"-"},"content":"e.g. `seedu.ptman.storage.StorageManagerTest`"},{"lineNumber":1026,"author":{"gitID":"-"},"content":"*  Hybrids of _unit_ and _integration tests_ test multiple code units as well as how they are connected together. +"},{"lineNumber":1027,"author":{"gitID":"-"},"content":"e.g. `seedu.ptman.logic.LogicManagerTest`"},{"lineNumber":1028,"author":{"gitID":"-"},"content":""},{"lineNumber":1029,"author":{"gitID":"-"},"content":""},{"lineNumber":1030,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Troubleshooting Testing"},{"lineNumber":1031,"author":{"gitID":"-"},"content":""},{"lineNumber":1032,"author":{"gitID":"-"},"content":"The common problems encountered while testing are listed here."},{"lineNumber":1033,"author":{"gitID":"-"},"content":""},{"lineNumber":1034,"author":{"gitID":"-"},"content":"**Problem:** `HelpWindowTest` fails with a `NullPointerException`."},{"lineNumber":1035,"author":{"gitID":"-"},"content":""},{"lineNumber":1036,"author":{"gitID":"-"},"content":"* Reason: One of its dependencies, `UserGuide.html` in `src/main/resources/docs` is missing."},{"lineNumber":1037,"author":{"gitID":"-"},"content":"* Solution: Execute Gradle task `processResources`."},{"lineNumber":1038,"author":{"gitID":"-"},"content":""},{"lineNumber":1039,"author":{"gitID":"-"},"content":"\u003d\u003d Dev Ops"},{"lineNumber":1040,"author":{"gitID":"-"},"content":"The following sections help you ensure that the project is fully integrated, tested, and built for release."},{"lineNumber":1041,"author":{"gitID":"-"},"content":""},{"lineNumber":1042,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Build Automation"},{"lineNumber":1043,"author":{"gitID":"-"},"content":""},{"lineNumber":1044,"author":{"gitID":"-"},"content":"See \u003c\u003cUsingGradle#, UsingGradle.adoc\u003e\u003e to learn how to use Gradle for build automation."},{"lineNumber":1045,"author":{"gitID":"-"},"content":""},{"lineNumber":1046,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Continuous Integration"},{"lineNumber":1047,"author":{"gitID":"-"},"content":""},{"lineNumber":1048,"author":{"gitID":"-"},"content":"We use https://travis-ci.org/[Travis CI] and https://www.appveyor.com/[AppVeyor] to perform continuous integration on our projects. See \u003c\u003cUsingTravis#, UsingTravis.adoc\u003e\u003e and \u003c\u003cUsingAppVeyor#, UsingAppVeyor.adoc\u003e\u003e for more details."},{"lineNumber":1049,"author":{"gitID":"-"},"content":""},{"lineNumber":1050,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Coverage Reporting"},{"lineNumber":1051,"author":{"gitID":"-"},"content":""},{"lineNumber":1052,"author":{"gitID":"-"},"content":"We use https://coveralls.io/[Coveralls] to track the code coverage of our projects. See \u003c\u003cUsingCoveralls#, UsingCoveralls.adoc\u003e\u003e for more details."},{"lineNumber":1053,"author":{"gitID":"-"},"content":""},{"lineNumber":1054,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Documentation Previews"},{"lineNumber":1055,"author":{"gitID":"-"},"content":"When a pull request has changes to asciidoc files, you can use https://www.netlify.com/[Netlify] to see a preview of how the HTML version of those asciidoc files will look like when the pull request is merged. See \u003c\u003cUsingNetlify#, UsingNetlify.adoc\u003e\u003e for more details."},{"lineNumber":1056,"author":{"gitID":"-"},"content":""},{"lineNumber":1057,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Making a Release"},{"lineNumber":1058,"author":{"gitID":"-"},"content":""},{"lineNumber":1059,"author":{"gitID":"-"},"content":"Here are the steps to create a new release:"},{"lineNumber":1060,"author":{"gitID":"-"},"content":""},{"lineNumber":1061,"author":{"gitID":"-"},"content":".  Update the version number in link:{repoURL}/src/main/java/seedu/address/MainApp.java[`MainApp.java`]."},{"lineNumber":1062,"author":{"gitID":"-"},"content":".  Generate a JAR file \u003c\u003cUsingGradle#creating-the-jar-file, using Gradle\u003e\u003e."},{"lineNumber":1063,"author":{"gitID":"-"},"content":".  Tag the repo with the version number. e.g. `v0.1`"},{"lineNumber":1064,"author":{"gitID":"-"},"content":".  https://help.github.com/articles/creating-releases/[Create a new release using GitHub] and upload the JAR file you created."},{"lineNumber":1065,"author":{"gitID":"-"},"content":""},{"lineNumber":1066,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Managing Dependencies"},{"lineNumber":1067,"author":{"gitID":"-"},"content":""},{"lineNumber":1068,"author":{"gitID":"-"},"content":"A project often depends on third-party libraries. For example, PTMan depends on the http://wiki.fasterxml.com/JacksonHome[Jackson library] for XML parsing. Managing these dependencies can be automated using Gradle. One advantage of Gradle is that it can download these dependencies automatically, which is better than the below alternatives: +"},{"lineNumber":1069,"author":{"gitID":"-"},"content":""},{"lineNumber":1070,"author":{"gitID":"-"},"content":"..  Including the third-party libraries in the repo. This bloats the repo size. +"},{"lineNumber":1071,"author":{"gitID":"-"},"content":"..  Making developers download the third-party libraries manually. This creates extra work for developers."},{"lineNumber":1072,"author":{"gitID":"-"},"content":""},{"lineNumber":1073,"author":{"gitID":"-"},"content":""},{"lineNumber":1074,"author":{"gitID":"-"},"content":"[appendix]"},{"lineNumber":1075,"author":{"gitID":"-"},"content":"\u003d\u003d Product Scope"},{"lineNumber":1076,"author":{"gitID":"-"},"content":""},{"lineNumber":1077,"author":{"gitID":"-"},"content":"*Target user profile*:"},{"lineNumber":1078,"author":{"gitID":"-"},"content":""},{"lineNumber":1079,"author":{"gitID":"-"},"content":"* has a need to manage part-time employees."},{"lineNumber":1080,"author":{"gitID":"-"},"content":"* wants to give employees flexibility in their working hours."},{"lineNumber":1081,"author":{"gitID":"-"},"content":"* can type fast."},{"lineNumber":1082,"author":{"gitID":"-"},"content":"* prefers typing over mouse input."},{"lineNumber":1083,"author":{"gitID":"-"},"content":"* is reasonably comfortable using CLI apps."},{"lineNumber":1084,"author":{"gitID":"-"},"content":""},{"lineNumber":1085,"author":{"gitID":"-"},"content":"*Value proposition*: manage part-time employees faster than a typical mouse/GUI driven app"},{"lineNumber":1086,"author":{"gitID":"-"},"content":""},{"lineNumber":1087,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Feature Contribution"},{"lineNumber":1088,"author":{"gitID":"-"},"content":"*Shannon*:"},{"lineNumber":1089,"author":{"gitID":"-"},"content":""},{"lineNumber":1090,"author":{"gitID":"-"},"content":". *Shifts (Major)*:"},{"lineNumber":1091,"author":{"gitID":"-"},"content":".. *Add/remove shifts*: Added commands for the employer to add/remove shifts. Employees can then view the available shifts, their working hours, and the capacity of each shift."},{"lineNumber":1092,"author":{"gitID":"-"},"content":".. *Select/Deselect shifts*: Added commands for employees to choose the shifts they want to work in."},{"lineNumber":1093,"author":{"gitID":"-"},"content":". *Command aliases (Minor)*: Added aliases to most commands. These aliases can be used in place of the full length commands for the user\u0027s convenience."},{"lineNumber":1094,"author":{"gitID":"-"},"content":""},{"lineNumber":1095,"author":{"gitID":"-"},"content":"*Chin Chye*:"},{"lineNumber":1096,"author":{"gitID":"-"},"content":""},{"lineNumber":1097,"author":{"gitID":"-"},"content":". *Access Control (Major)*:"},{"lineNumber":1098,"author":{"gitID":"-"},"content":".. *Password*: Give password to every employee and outlet to protect from accidental/misuse of command."},{"lineNumber":1099,"author":{"gitID":"-"},"content":".. *Login for edit/admin Mode*: Using the password in outlet, employer are able to login to access admin functions."},{"lineNumber":1100,"author":{"gitID":"-"},"content":".. *Change/reset password command*: Employee and employer are able to change/reset password to keep their data/password a secret."},{"lineNumber":1101,"author":{"gitID":"-"},"content":". *Salary (Minor)*: Added salary to employee. This variable is used to keep track of how much employee has earned so far."},{"lineNumber":1102,"author":{"gitID":"-"},"content":""},{"lineNumber":1103,"author":{"gitID":"-"},"content":"*Caryn*:"},{"lineNumber":1104,"author":{"gitID":"-"},"content":""},{"lineNumber":1105,"author":{"gitID":"-"},"content":". *Timetable (Major)*:"},{"lineNumber":1106,"author":{"gitID":"hzxcaryn"},"content":".. *Timetable view*: Added the interactive timetable for users to interact through the Shift commands."},{"lineNumber":1107,"author":{"gitID":"hzxcaryn"},"content":".. *Export timetable*: Added a command for exporting timetable as image."},{"lineNumber":1108,"author":{"gitID":"hzxcaryn"},"content":".. *View shifts applied by employee*: Modified a command for employees to view their own shifts on the timetable."},{"lineNumber":1109,"author":{"gitID":"hzxcaryn"},"content":".. *View employees working in shift*: Added a command for listing employees working in any particular shift."},{"lineNumber":1110,"author":{"gitID":"-"},"content":". *Tag colors (Minor)*: Added different colors for different tags inside person cards. Tags are allocated colors based on their hashcode."},{"lineNumber":1111,"author":{"gitID":"-"},"content":""},{"lineNumber":1112,"author":{"gitID":"-"},"content":"*Bangjie*:"},{"lineNumber":1113,"author":{"gitID":"-"},"content":""},{"lineNumber":1114,"author":{"gitID":"-"},"content":". *Outlet Feature(Major)*:"},{"lineNumber":1115,"author":{"gitID":"-"},"content":".. *Edit outlet information*: Commands are added for the employers to edit outlet information, including outlet name and operating hours."},{"lineNumber":1116,"author":{"gitID":"-"},"content":".. *Create announcement*: Announcement command is added for the employers to broadcast important messages to all employees."},{"lineNumber":1117,"author":{"gitID":"-"},"content":".. *Display outlet information*: Outlet information will be displayed in the UI. Any change in the outlet information will be reflected as well."},{"lineNumber":1118,"author":{"gitID":"-"},"content":".. *Store outlet information*: Outlet information is stored in a separate file."},{"lineNumber":1119,"author":{"gitID":"-"},"content":".. *Data encryption*: Storage files can be encrypted and decrypted on command to ensure that data cannot be obtained and understood by any third party."},{"lineNumber":1120,"author":{"gitID":"-"},"content":". *Backup storage files (Minor)*: Backup files with file extension \".backup\" are created and updated upon exit of the app."},{"lineNumber":1121,"author":{"gitID":"-"},"content":""},{"lineNumber":1122,"author":{"gitID":"-"},"content":"[appendix]"},{"lineNumber":1123,"author":{"gitID":"-"},"content":"\u003d\u003d User Stories"},{"lineNumber":1124,"author":{"gitID":"-"},"content":""},{"lineNumber":1125,"author":{"gitID":"-"},"content":"Priorities: High (must have) - `* * \\*`, Medium (nice to have) - `* \\*`, Low (unlikely to have) - `*`"},{"lineNumber":1126,"author":{"gitID":"-"},"content":""},{"lineNumber":1127,"author":{"gitID":"-"},"content":"[width\u003d\"59%\",cols\u003d\"22%,\u003c23%,\u003c25%,\u003c30%\",options\u003d\"header\",]"},{"lineNumber":1128,"author":{"gitID":"-"},"content":"|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":1129,"author":{"gitID":"-"},"content":"|Priority |As a ... |I want to ... |So that I can..."},{"lineNumber":1130,"author":{"gitID":"-"},"content":""},{"lineNumber":1131,"author":{"gitID":"-"},"content":"|`* * *` |user |have a user manual |know how to use the app."},{"lineNumber":1132,"author":{"gitID":"-"},"content":""},{"lineNumber":1133,"author":{"gitID":"-"},"content":"|`* * *` |user |have access control |prevent unauthorized access to my information."},{"lineNumber":1134,"author":{"gitID":"-"},"content":""},{"lineNumber":1135,"author":{"gitID":"-"},"content":"|`* * *` |user |update my password |keep my information secure."},{"lineNumber":1136,"author":{"gitID":"-"},"content":""},{"lineNumber":1137,"author":{"gitID":"-"},"content":"|`* * *` |user |reset my password |reset when i forget my password."},{"lineNumber":1138,"author":{"gitID":"-"},"content":""},{"lineNumber":1139,"author":{"gitID":"-"},"content":"|`* * *` |user |constantly back up my local files |retrieve important information if some files are corrupted."},{"lineNumber":1140,"author":{"gitID":"-"},"content":""},{"lineNumber":1141,"author":{"gitID":"-"},"content":"|`* * *` |user |navigate through the weeks of the timetable |manage shifts ahead of time, and revisit old shifts."},{"lineNumber":1142,"author":{"gitID":"-"},"content":""},{"lineNumber":1143,"author":{"gitID":"-"},"content":"|`* * *` |employer |add a new employee |store them in the record."},{"lineNumber":1144,"author":{"gitID":"-"},"content":""},{"lineNumber":1145,"author":{"gitID":"-"},"content":"|`* * *` |employer |add an employee to a shift |assign employees to their shifts."},{"lineNumber":1146,"author":{"gitID":"-"},"content":""},{"lineNumber":1147,"author":{"gitID":"-"},"content":"|`* * *` |employer |remove an employee from a shift |reassign employees their shifts."},{"lineNumber":1148,"author":{"gitID":"-"},"content":""},{"lineNumber":1149,"author":{"gitID":"-"},"content":"|`* * *` |employer |view employees working in a shift |keep track of who is working."},{"lineNumber":1150,"author":{"gitID":"-"},"content":""},{"lineNumber":1151,"author":{"gitID":"-"},"content":"|`* * *` |employer |view an employee’s contact |contact them."},{"lineNumber":1152,"author":{"gitID":"-"},"content":""},{"lineNumber":1153,"author":{"gitID":"-"},"content":"|`* * *` |employer |view an employee’s salary |view their salary."},{"lineNumber":1154,"author":{"gitID":"-"},"content":""},{"lineNumber":1155,"author":{"gitID":"-"},"content":"|`* * *` |employer |edit an employee’s salary |update their salary."},{"lineNumber":1156,"author":{"gitID":"-"},"content":""},{"lineNumber":1157,"author":{"gitID":"-"},"content":"|`* * *` |employer |delete an existing employee |remove employees that are no longer working."},{"lineNumber":1158,"author":{"gitID":"-"},"content":""},{"lineNumber":1159,"author":{"gitID":"-"},"content":"|`* * *` |employer |update the schedule |show employees the available slots."},{"lineNumber":1160,"author":{"gitID":"-"},"content":""},{"lineNumber":1161,"author":{"gitID":"-"},"content":"|`* * *` |employer |encrypt and decrypt local storage files on demand |prevent unauthorised users from retrieving local file data."},{"lineNumber":1162,"author":{"gitID":"-"},"content":""},{"lineNumber":1163,"author":{"gitID":"-"},"content":"|`* * *` |employee |view the schedule |choose when I want to work."},{"lineNumber":1164,"author":{"gitID":"-"},"content":""},{"lineNumber":1165,"author":{"gitID":"-"},"content":"|`* * *` |employee |select from the available slots in the schedule |work during that slot."},{"lineNumber":1166,"author":{"gitID":"-"},"content":""},{"lineNumber":1167,"author":{"gitID":"-"},"content":"|`* *` |employer |edit an employee’s contact |update their outdated contact information."},{"lineNumber":1168,"author":{"gitID":"-"},"content":""},{"lineNumber":1169,"author":{"gitID":"-"},"content":"|`* *` |employer |edit the outlet information |update the outdated outlet information."},{"lineNumber":1170,"author":{"gitID":"-"},"content":""},{"lineNumber":1171,"author":{"gitID":"-"},"content":"|`* *` |employer |sort employees by name |have a clearer view of all employees’ details."},{"lineNumber":1172,"author":{"gitID":"-"},"content":""},{"lineNumber":1173,"author":{"gitID":"-"},"content":"|`* *` |employer |find an employee by name |locate details of employees without having to go through the entire list."},{"lineNumber":1174,"author":{"gitID":"-"},"content":""},{"lineNumber":1175,"author":{"gitID":"-"},"content":"|`* *` |employer |view an employee’s address|view their address information."},{"lineNumber":1176,"author":{"gitID":"-"},"content":""},{"lineNumber":1177,"author":{"gitID":"-"},"content":"|`* *` |employer |edit an employee’s address|update their outdated address."},{"lineNumber":1178,"author":{"gitID":"-"},"content":""},{"lineNumber":1179,"author":{"gitID":"-"},"content":"|`* *` |employee |view my own shifts in the timetable |so that I can easily recall when I need to work."},{"lineNumber":1180,"author":{"gitID":"-"},"content":""},{"lineNumber":1181,"author":{"gitID":"-"},"content":"|`* *` |employee |export timetable as image |have easy access to the time slots I\u0027m working at."},{"lineNumber":1182,"author":{"gitID":"-"},"content":""},{"lineNumber":1183,"author":{"gitID":"-"},"content":"|`* *` |employee |edit my contact and address |update my particulars."},{"lineNumber":1184,"author":{"gitID":"-"},"content":""},{"lineNumber":1185,"author":{"gitID":"-"},"content":"|`* *` |employee |view my salary so far for the month |plan my expenses."},{"lineNumber":1186,"author":{"gitID":"-"},"content":""},{"lineNumber":1187,"author":{"gitID":"-"},"content":"|`*` |employer |add an employee’s photo |view it at any time."},{"lineNumber":1188,"author":{"gitID":"-"},"content":""},{"lineNumber":1189,"author":{"gitID":"-"},"content":"|`*` |employer |edit an employee’s photo |change an employee\u0027s photo to a newer one."},{"lineNumber":1190,"author":{"gitID":"-"},"content":""},{"lineNumber":1191,"author":{"gitID":"-"},"content":"|`*` |employer |view an employee’s photo |recognize the employee."},{"lineNumber":1192,"author":{"gitID":"-"},"content":""},{"lineNumber":1193,"author":{"gitID":"-"},"content":"|`*` |employer |remove an employee’s photo |remove their old photo."},{"lineNumber":1194,"author":{"gitID":"-"},"content":""},{"lineNumber":1195,"author":{"gitID":"-"},"content":"|`*` |employee |add a photo |be easily identified by my employer."},{"lineNumber":1196,"author":{"gitID":"-"},"content":""},{"lineNumber":1197,"author":{"gitID":"-"},"content":"|`*` |employee |have a notification for slot confirmation |be assured that I am working at that slot."},{"lineNumber":1198,"author":{"gitID":"-"},"content":"|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":1199,"author":{"gitID":"-"},"content":""},{"lineNumber":1200,"author":{"gitID":"-"},"content":"[appendix]"},{"lineNumber":1201,"author":{"gitID":"-"},"content":"\u003d\u003d Use Cases"},{"lineNumber":1202,"author":{"gitID":"-"},"content":""},{"lineNumber":1203,"author":{"gitID":"-"},"content":"(For all use cases below, the *System* is the `PTMan` and the *Actor* is the `employer`, unless specified otherwise)"},{"lineNumber":1204,"author":{"gitID":"-"},"content":""},{"lineNumber":1205,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Use Case: Add Employee"},{"lineNumber":1206,"author":{"gitID":"-"},"content":""},{"lineNumber":1207,"author":{"gitID":"-"},"content":"*MSS*"},{"lineNumber":1208,"author":{"gitID":"-"},"content":""},{"lineNumber":1209,"author":{"gitID":"-"},"content":"1.  Employer logs in to their admin account."},{"lineNumber":1210,"author":{"gitID":"-"},"content":"2.  Employer enters the employee\u0027s details."},{"lineNumber":1211,"author":{"gitID":"-"},"content":"3.  PTMan adds the employee."},{"lineNumber":1212,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1213,"author":{"gitID":"-"},"content":"Use case ends."},{"lineNumber":1214,"author":{"gitID":"-"},"content":""},{"lineNumber":1215,"author":{"gitID":"-"},"content":"*Extensions*"},{"lineNumber":1216,"author":{"gitID":"-"},"content":""},{"lineNumber":1217,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1218,"author":{"gitID":"-"},"content":"* 2a. The entered format is invalid."},{"lineNumber":1219,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1220,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1221,"author":{"gitID":"-"},"content":"** 2a1. PTMan shows an error message."},{"lineNumber":1222,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1223,"author":{"gitID":"-"},"content":"Use case resumes at step 1."},{"lineNumber":1224,"author":{"gitID":"-"},"content":""},{"lineNumber":1225,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Use Case: Add Shift"},{"lineNumber":1226,"author":{"gitID":"-"},"content":""},{"lineNumber":1227,"author":{"gitID":"-"},"content":"*MSS*"},{"lineNumber":1228,"author":{"gitID":"-"},"content":""},{"lineNumber":1229,"author":{"gitID":"-"},"content":"1.  Employer logs in to their admin account."},{"lineNumber":1230,"author":{"gitID":"-"},"content":"2.  Employer enters the shift details."},{"lineNumber":1231,"author":{"gitID":"-"},"content":"3.  PTMan adds the shift."},{"lineNumber":1232,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1233,"author":{"gitID":"-"},"content":"Use case ends."},{"lineNumber":1234,"author":{"gitID":"-"},"content":""},{"lineNumber":1235,"author":{"gitID":"-"},"content":"*Extensions*"},{"lineNumber":1236,"author":{"gitID":"-"},"content":""},{"lineNumber":1237,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1238,"author":{"gitID":"-"},"content":"* 2a. The entered format is invalid."},{"lineNumber":1239,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1240,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1241,"author":{"gitID":"-"},"content":"** 2a1. PTMan shows an error message."},{"lineNumber":1242,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1243,"author":{"gitID":"-"},"content":"Use case resumes at step 1."},{"lineNumber":1244,"author":{"gitID":"-"},"content":""},{"lineNumber":1245,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Use Case: Delete Shift"},{"lineNumber":1246,"author":{"gitID":"-"},"content":""},{"lineNumber":1247,"author":{"gitID":"-"},"content":"*MSS*"},{"lineNumber":1248,"author":{"gitID":"-"},"content":""},{"lineNumber":1249,"author":{"gitID":"-"},"content":"1.  Employer logs in to their admin account."},{"lineNumber":1250,"author":{"gitID":"-"},"content":"2.  Employer enters the shift\u0027s index."},{"lineNumber":1251,"author":{"gitID":"-"},"content":"3.  PTMan deletes the shift."},{"lineNumber":1252,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1253,"author":{"gitID":"-"},"content":"Use case ends."},{"lineNumber":1254,"author":{"gitID":"-"},"content":""},{"lineNumber":1255,"author":{"gitID":"-"},"content":"*Extensions*"},{"lineNumber":1256,"author":{"gitID":"-"},"content":""},{"lineNumber":1257,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1258,"author":{"gitID":"-"},"content":"* 2a. The entered format is invalid."},{"lineNumber":1259,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1260,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1261,"author":{"gitID":"-"},"content":"** 2a1. PTMan shows an error message."},{"lineNumber":1262,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1263,"author":{"gitID":"-"},"content":"Use case resumes at step 2."},{"lineNumber":1264,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1265,"author":{"gitID":"-"},"content":"* 2b. The entered index does not exist."},{"lineNumber":1266,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1267,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1268,"author":{"gitID":"-"},"content":"** 2b1. PTMan shows an error message."},{"lineNumber":1269,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1270,"author":{"gitID":"-"},"content":"Use case resumes at step 2."},{"lineNumber":1271,"author":{"gitID":"-"},"content":""},{"lineNumber":1272,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Use Case: Delete Employee"},{"lineNumber":1273,"author":{"gitID":"-"},"content":""},{"lineNumber":1274,"author":{"gitID":"-"},"content":"*MSS*"},{"lineNumber":1275,"author":{"gitID":"-"},"content":""},{"lineNumber":1276,"author":{"gitID":"-"},"content":"1.  Employer requests to list employees."},{"lineNumber":1277,"author":{"gitID":"-"},"content":"2.  PTMan shows a list of employees."},{"lineNumber":1278,"author":{"gitID":"-"},"content":"3.  Employer requests to delete a specific employee in the list."},{"lineNumber":1279,"author":{"gitID":"-"},"content":"4.  PTMan deletes the employee."},{"lineNumber":1280,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1281,"author":{"gitID":"-"},"content":"Use case ends."},{"lineNumber":1282,"author":{"gitID":"-"},"content":""},{"lineNumber":1283,"author":{"gitID":"-"},"content":"*Extensions*"},{"lineNumber":1284,"author":{"gitID":"-"},"content":""},{"lineNumber":1285,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1286,"author":{"gitID":"-"},"content":"* 2a. The list is empty."},{"lineNumber":1287,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1288,"author":{"gitID":"-"},"content":"Use case ends."},{"lineNumber":1289,"author":{"gitID":"-"},"content":""},{"lineNumber":1290,"author":{"gitID":"-"},"content":"* 3a. The given index is invalid."},{"lineNumber":1291,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1292,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1293,"author":{"gitID":"-"},"content":"** 3a1. PTMan shows an error message."},{"lineNumber":1294,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1295,"author":{"gitID":"-"},"content":"Use case resumes at step 2."},{"lineNumber":1296,"author":{"gitID":"-"},"content":""},{"lineNumber":1297,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Use Case: Edit Employee"},{"lineNumber":1298,"author":{"gitID":"-"},"content":""},{"lineNumber":1299,"author":{"gitID":"-"},"content":"*MSS*"},{"lineNumber":1300,"author":{"gitID":"-"},"content":""},{"lineNumber":1301,"author":{"gitID":"-"},"content":"1.  Employer logs in to their admin account."},{"lineNumber":1302,"author":{"gitID":"-"},"content":"2.  Employer enters the employee\u0027s index and the new details of the employee."},{"lineNumber":1303,"author":{"gitID":"-"},"content":"3.  PTMan changes the employee\u0027s details."},{"lineNumber":1304,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1305,"author":{"gitID":"-"},"content":"Use case ends."},{"lineNumber":1306,"author":{"gitID":"-"},"content":""},{"lineNumber":1307,"author":{"gitID":"-"},"content":"*Extensions*"},{"lineNumber":1308,"author":{"gitID":"-"},"content":""},{"lineNumber":1309,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1310,"author":{"gitID":"-"},"content":"* 2a. The entered format is invalid."},{"lineNumber":1311,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1312,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1313,"author":{"gitID":"-"},"content":"** 2a1. PTMan shows an error message."},{"lineNumber":1314,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1315,"author":{"gitID":"-"},"content":"Use case resumes at step 2."},{"lineNumber":1316,"author":{"gitID":"-"},"content":"* 2b. The employee cannot be found."},{"lineNumber":1317,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1318,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1319,"author":{"gitID":"-"},"content":"** 2b1. PTMan shows an error message."},{"lineNumber":1320,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1321,"author":{"gitID":"-"},"content":"Use case resumes at step 2."},{"lineNumber":1322,"author":{"gitID":"-"},"content":"* 2c. The entered format of new details is invalid."},{"lineNumber":1323,"author":{"gitID":"hzxcaryn"},"content":"+"},{"lineNumber":1324,"author":{"gitID":"hzxcaryn"},"content":"[none]"},{"lineNumber":1325,"author":{"gitID":"-"},"content":"** 2c1. PTMan shows an error message."},{"lineNumber":1326,"author":{"gitID":"hzxcaryn"},"content":"+"},{"lineNumber":1327,"author":{"gitID":"-"},"content":"Use case resumes at step 2."},{"lineNumber":1328,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":1329,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Use Case: Edit Outlet Information"},{"lineNumber":1330,"author":{"gitID":"-"},"content":""},{"lineNumber":1331,"author":{"gitID":"-"},"content":"*MSS*"},{"lineNumber":1332,"author":{"gitID":"-"},"content":""},{"lineNumber":1333,"author":{"gitID":"-"},"content":"1.  Employer logs in to their admin account."},{"lineNumber":1334,"author":{"gitID":"-"},"content":"2.  PTMan changes to admin mode."},{"lineNumber":1335,"author":{"gitID":"-"},"content":"3.  Employer enters new values for outlet."},{"lineNumber":1336,"author":{"gitID":"-"},"content":"4.  PTMan changes the outlet\u0027s details."},{"lineNumber":1337,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1338,"author":{"gitID":"-"},"content":"Use case ends."},{"lineNumber":1339,"author":{"gitID":"-"},"content":""},{"lineNumber":1340,"author":{"gitID":"-"},"content":"*Extensions*"},{"lineNumber":1341,"author":{"gitID":"-"},"content":""},{"lineNumber":1342,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1343,"author":{"gitID":"-"},"content":"* 3a. The entered format is invalid."},{"lineNumber":1344,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1345,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1346,"author":{"gitID":"-"},"content":"** 3a1. PTMan shows an error message."},{"lineNumber":1347,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1348,"author":{"gitID":"-"},"content":"Use case resumes at step 3."},{"lineNumber":1349,"author":{"gitID":"-"},"content":"* 3b. The entered format of new details is invalid."},{"lineNumber":1350,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1351,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1352,"author":{"gitID":"-"},"content":"** 3b1. PTMan shows an error message."},{"lineNumber":1353,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1354,"author":{"gitID":"-"},"content":"Use case resumes at step 3."},{"lineNumber":1355,"author":{"gitID":"-"},"content":""},{"lineNumber":1356,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Use Case: Sign Up for Available Shifts"},{"lineNumber":1357,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":1358,"author":{"gitID":"hzxcaryn"},"content":"*MSS*"},{"lineNumber":1359,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":1360,"author":{"gitID":"-"},"content":"1.  Employee enters a shift that he wants to work in."},{"lineNumber":1361,"author":{"gitID":"-"},"content":"2.  PTMan sends a confirmation message to the employee."},{"lineNumber":1362,"author":{"gitID":"-"},"content":"3.  PTMan updates the indicated time slot in the timetable of the indicated outlet."},{"lineNumber":1363,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1364,"author":{"gitID":"-"},"content":"Use case ends."},{"lineNumber":1365,"author":{"gitID":"-"},"content":""},{"lineNumber":1366,"author":{"gitID":"-"},"content":"*Extensions*"},{"lineNumber":1367,"author":{"gitID":"-"},"content":""},{"lineNumber":1368,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1369,"author":{"gitID":"-"},"content":"* 1a. The entered format is invalid."},{"lineNumber":1370,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1371,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1372,"author":{"gitID":"-"},"content":"** 1a1. PTMan shows an error message."},{"lineNumber":1373,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1374,"author":{"gitID":"-"},"content":"Use case resumes at step 1."},{"lineNumber":1375,"author":{"gitID":"-"},"content":"* 1b. The shift is full."},{"lineNumber":1376,"author":{"gitID":"hzxcaryn"},"content":"+"},{"lineNumber":1377,"author":{"gitID":"hzxcaryn"},"content":"[none]"},{"lineNumber":1378,"author":{"gitID":"hzxcaryn"},"content":"** 1b1. PTMan shows an error message."},{"lineNumber":1379,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1380,"author":{"gitID":"-"},"content":"Use case resumes at step 1."},{"lineNumber":1381,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":1382,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1383,"author":{"gitID":"-"},"content":""},{"lineNumber":1384,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Use Case: Encrypt Local Files"},{"lineNumber":1385,"author":{"gitID":"-"},"content":""},{"lineNumber":1386,"author":{"gitID":"-"},"content":"*MSS*"},{"lineNumber":1387,"author":{"gitID":"-"},"content":""},{"lineNumber":1388,"author":{"gitID":"-"},"content":"1.  Employer requests to encrypt local files."},{"lineNumber":1389,"author":{"gitID":"-"},"content":"2.  PTMan encrypts local files and sends a confirmation message to the employer."},{"lineNumber":1390,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1391,"author":{"gitID":"-"},"content":"Use case ends."},{"lineNumber":1392,"author":{"gitID":"-"},"content":""},{"lineNumber":1393,"author":{"gitID":"-"},"content":"*Extensions*"},{"lineNumber":1394,"author":{"gitID":"-"},"content":""},{"lineNumber":1395,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1396,"author":{"gitID":"-"},"content":"* 1a. The entered format is invalid."},{"lineNumber":1397,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1398,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1399,"author":{"gitID":"-"},"content":"** 1a1. PTMan shows an error message."},{"lineNumber":1400,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1401,"author":{"gitID":"-"},"content":"Use case resumes at step 1."},{"lineNumber":1402,"author":{"gitID":"-"},"content":"* 1b. Local files have already been encrypted."},{"lineNumber":1403,"author":{"gitID":"hzxcaryn"},"content":"+"},{"lineNumber":1404,"author":{"gitID":"hzxcaryn"},"content":"[none]"},{"lineNumber":1405,"author":{"gitID":"hzxcaryn"},"content":"** 1b1. PTMan shows an error message."},{"lineNumber":1406,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1407,"author":{"gitID":"-"},"content":"Use case resumes at step 1."},{"lineNumber":1408,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":1409,"author":{"gitID":"-"},"content":"[discrete]"},{"lineNumber":1410,"author":{"gitID":"-"},"content":"\u003d\u003d Non Functional Requirements"},{"lineNumber":1411,"author":{"gitID":"-"},"content":""},{"lineNumber":1412,"author":{"gitID":"-"},"content":".  Should work on any \u003c\u003cmainstream-os,mainstream OS\u003e\u003e as long as it has Java `1.8.0_60` or higher installed."},{"lineNumber":1413,"author":{"gitID":"-"},"content":".  Should work on both 32-bit and 64-bit environment."},{"lineNumber":1414,"author":{"gitID":"-"},"content":".  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage."},{"lineNumber":1415,"author":{"gitID":"-"},"content":".  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse."},{"lineNumber":1416,"author":{"gitID":"-"},"content":".  Should respond within 2 seconds after entering any command."},{"lineNumber":1417,"author":{"gitID":"-"},"content":".  Should be able to use by users who has never used a command line interface before."},{"lineNumber":1418,"author":{"gitID":"-"},"content":".  Should be able to manage contact details of part-time workers in any outlet."},{"lineNumber":1419,"author":{"gitID":"-"},"content":".  Should be able to manage work schedule in any outlet."},{"lineNumber":1420,"author":{"gitID":"-"},"content":".  Should not be required to handle the printing of contact details and schedules."},{"lineNumber":1421,"author":{"gitID":"-"},"content":""},{"lineNumber":1422,"author":{"gitID":"-"},"content":"[appendix]"},{"lineNumber":1423,"author":{"gitID":"-"},"content":"\u003d\u003d Glossary"},{"lineNumber":1424,"author":{"gitID":"-"},"content":""},{"lineNumber":1425,"author":{"gitID":"-"},"content":"[[mainstream-os]] Mainstream OS::"},{"lineNumber":1426,"author":{"gitID":"-"},"content":"Windows, Linux, Unix, OS-X"},{"lineNumber":1427,"author":{"gitID":"-"},"content":""},{"lineNumber":1428,"author":{"gitID":"-"},"content":"[[private-contact-detail]] Private contact detail::"},{"lineNumber":1429,"author":{"gitID":"-"},"content":"A contact detail that is not meant to be shared with others"},{"lineNumber":1430,"author":{"gitID":"-"},"content":""},{"lineNumber":1431,"author":{"gitID":"-"},"content":"[appendix]"},{"lineNumber":1432,"author":{"gitID":"-"},"content":"\u003d\u003d Instructions for Manual Testing"},{"lineNumber":1433,"author":{"gitID":"-"},"content":""},{"lineNumber":1434,"author":{"gitID":"-"},"content":"Given below are instructions to test the app manually."},{"lineNumber":1435,"author":{"gitID":"-"},"content":""},{"lineNumber":1436,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":1437,"author":{"gitID":"-"},"content":"These instructions only provide a starting point for testers to work on; testers are expected to do more _exploratory_ testing."},{"lineNumber":1438,"author":{"gitID":"-"},"content":""},{"lineNumber":1439,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Launch and Shutdown"},{"lineNumber":1440,"author":{"gitID":"-"},"content":""},{"lineNumber":1441,"author":{"gitID":"-"},"content":". Initial launch"},{"lineNumber":1442,"author":{"gitID":"-"},"content":""},{"lineNumber":1443,"author":{"gitID":"-"},"content":".. Download the jar file and copy into an empty folder"},{"lineNumber":1444,"author":{"gitID":"-"},"content":".. Double-click the jar file +"},{"lineNumber":1445,"author":{"gitID":"-"},"content":"   Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum."},{"lineNumber":1446,"author":{"gitID":"-"},"content":""},{"lineNumber":1447,"author":{"gitID":"-"},"content":". Saving window preferences"},{"lineNumber":1448,"author":{"gitID":"-"},"content":""},{"lineNumber":1449,"author":{"gitID":"-"},"content":".. Resize the window to an optimum size. Move the window to a different location. Close the window."},{"lineNumber":1450,"author":{"gitID":"-"},"content":".. Re-launch the app by double-clicking the jar file. +"},{"lineNumber":1451,"author":{"gitID":"-"},"content":"   Expected: The most recent window size and location is retained."},{"lineNumber":1452,"author":{"gitID":"-"},"content":""},{"lineNumber":1453,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Admin Mode Logging in / Logging out"},{"lineNumber":1454,"author":{"gitID":"-"},"content":""},{"lineNumber":1455,"author":{"gitID":"-"},"content":". Logging in to admin mode in order to do admin-only commands."},{"lineNumber":1456,"author":{"gitID":"-"},"content":".. Prerequisites: It must be your first login and you did not change the admin password."},{"lineNumber":1457,"author":{"gitID":"-"},"content":".. Test case: `login pw/DEFAULT1` +"},{"lineNumber":1458,"author":{"gitID":"-"},"content":"   Expected: log in successfully and you will see red sign \"Admin Mode\" at the top right corner of the app."},{"lineNumber":1459,"author":{"gitID":"-"},"content":".. Test case: `login pw/wrongPassword123` +"},{"lineNumber":1460,"author":{"gitID":"-"},"content":"   Expected: login fails."},{"lineNumber":1461,"author":{"gitID":"-"},"content":""},{"lineNumber":1462,"author":{"gitID":"-"},"content":". Logging out of admin mode."},{"lineNumber":1463,"author":{"gitID":"-"},"content":".. Test case: `logout` +"},{"lineNumber":1464,"author":{"gitID":"-"},"content":"   Expected: If you logged in, now you will log out and red sign \"Admin Mode\" will disappear."},{"lineNumber":1465,"author":{"gitID":"-"},"content":"   Otherwise, you cannot log out again."},{"lineNumber":1466,"author":{"gitID":"-"},"content":""},{"lineNumber":1467,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Editing Outlet Information"},{"lineNumber":1468,"author":{"gitID":"-"},"content":". Editing outlet information"},{"lineNumber":1469,"author":{"gitID":"-"},"content":""},{"lineNumber":1470,"author":{"gitID":"-"},"content":".. Prerequisites: Login with the correct admin password. Make sure you are in the admin mode. (The default admin password is `DEFAULT1`)"},{"lineNumber":1471,"author":{"gitID":"-"},"content":".. Test case: `editoutlet n/Cool Coffee h/1000-2000 c/92223333 e/coolcoffee@gmail.com` +"},{"lineNumber":1472,"author":{"gitID":"-"},"content":"   Expected: Outlet information displayed changes accordingly. Timetable resizes accordingly."},{"lineNumber":1473,"author":{"gitID":"-"},"content":".. Test case: `editoutlet n/Cool Tea NUS` +"},{"lineNumber":1474,"author":{"gitID":"-"},"content":"   Expected: Outlet information displayed changes accordingly."},{"lineNumber":1475,"author":{"gitID":"-"},"content":".. Test case: `editoutlet n/Cool Tea @ NUS` +"},{"lineNumber":1476,"author":{"gitID":"-"},"content":"   Expected: No outlet information is changed. Error details shown in the status message."},{"lineNumber":1477,"author":{"gitID":"-"},"content":".. Test case: `editoutlet h/2000-1000` +"},{"lineNumber":1478,"author":{"gitID":"-"},"content":"   Expected: No outlet information is changed. Error details shown in the status message."},{"lineNumber":1479,"author":{"gitID":"-"},"content":""},{"lineNumber":1480,"author":{"gitID":"-"},"content":". Editing announcement"},{"lineNumber":1481,"author":{"gitID":"-"},"content":""},{"lineNumber":1482,"author":{"gitID":"-"},"content":".. Prerequisites: Login with the correct admin password. Make sure you are in the admin mode. (The default admin password is `DEFAULT1`)"},{"lineNumber":1483,"author":{"gitID":"-"},"content":".. Test case: `announcement It is a new announcement!` +"},{"lineNumber":1484,"author":{"gitID":"-"},"content":"   Expected: Announcement displayed changes accordingly."},{"lineNumber":1485,"author":{"gitID":"-"},"content":".. Test case: `announce It is another announcement!` +"},{"lineNumber":1486,"author":{"gitID":"-"},"content":"   Expected: Announcement displayed changes accordingly."},{"lineNumber":1487,"author":{"gitID":"-"},"content":""},{"lineNumber":1488,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Changing Password"},{"lineNumber":1489,"author":{"gitID":"-"},"content":""},{"lineNumber":1490,"author":{"gitID":"-"},"content":". Changing admin password."},{"lineNumber":1491,"author":{"gitID":"-"},"content":".. Prerequisites: Login with the correct admin password. Make sure you are in the admin mode. (The default admin password is `DEFAULT1`)"},{"lineNumber":1492,"author":{"gitID":"-"},"content":".. Test case: `changeadminpw pw/DEFAULT1 pw/newPassword pw/newPassword` +"},{"lineNumber":1493,"author":{"gitID":"-"},"content":"   Expected: Your master password changed successfully and now you can login with the new password."},{"lineNumber":1494,"author":{"gitID":"-"},"content":".. Test case: `changeadminpw pw/WRONG_PASSWORD pw/newPassword pw/newPassword` +"},{"lineNumber":1495,"author":{"gitID":"-"},"content":"   Expected: Your old password is incorrect. Error details shown in the status message."},{"lineNumber":1496,"author":{"gitID":"-"},"content":""},{"lineNumber":1497,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Resetting Password"},{"lineNumber":1498,"author":{"gitID":"-"},"content":""},{"lineNumber":1499,"author":{"gitID":"-"},"content":". Resetting admin password."},{"lineNumber":1500,"author":{"gitID":"-"},"content":".. Prerequisites: Make sure the email address of the outlet is valid (your own email address for testing) and Internet is in good condition. Otherwise, you are unable to receive the email."},{"lineNumber":1501,"author":{"gitID":"-"},"content":".. Test case: `resetadminpw`"},{"lineNumber":1502,"author":{"gitID":"-"},"content":"   Expected: Email will be sent to the outlet email address after a few seconds depending on your Internet speed. +"},{"lineNumber":1503,"author":{"gitID":"-"},"content":"   Note: You can now log in with the password sent to you. It is a temporary password, you must change ur password immediately."},{"lineNumber":1504,"author":{"gitID":"-"},"content":""},{"lineNumber":1505,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Adding a Shift"},{"lineNumber":1506,"author":{"gitID":"-"},"content":""},{"lineNumber":1507,"author":{"gitID":"-"},"content":". Adding a Shift"},{"lineNumber":1508,"author":{"gitID":"-"},"content":".. Test case: `addshift d/21-04-18 ts/1200 te/1500 c/5` +"},{"lineNumber":1509,"author":{"gitID":"-"},"content":"   Expected: A shift is successfully added."},{"lineNumber":1510,"author":{"gitID":"-"},"content":".. Test case: `addshift d/10-03-18 ts/1200 te/1500 c/5` +"},{"lineNumber":1511,"author":{"gitID":"-"},"content":"   Expected: No shift added. Error details shown in the status message."},{"lineNumber":1512,"author":{"gitID":"-"},"content":".. Test case: `addshift d/21-04-18 ts/1600 te/1500 c/5` +"},{"lineNumber":1513,"author":{"gitID":"-"},"content":"   Expected: No shift added. Error details shown in the status message."},{"lineNumber":1514,"author":{"gitID":"-"},"content":""},{"lineNumber":1515,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Deleting a Shift"},{"lineNumber":1516,"author":{"gitID":"-"},"content":""},{"lineNumber":1517,"author":{"gitID":"-"},"content":". Deleting a Shift"},{"lineNumber":1518,"author":{"gitID":"-"},"content":".. Test case: `deleteshift 1` +"},{"lineNumber":1519,"author":{"gitID":"-"},"content":"   Expected: A chosen shift is deleted. Shift indices updated."},{"lineNumber":1520,"author":{"gitID":"-"},"content":".. Test case: `deleteshift x` where x is larger than all the shift indices in the timetable. +"},{"lineNumber":1521,"author":{"gitID":"-"},"content":"   Expected: No shift deleted. Error details shown in the status message."},{"lineNumber":1522,"author":{"gitID":"-"},"content":""},{"lineNumber":1523,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Applying an Employee for a Shift"},{"lineNumber":1524,"author":{"gitID":"-"},"content":""},{"lineNumber":1525,"author":{"gitID":"-"},"content":". Applying an employee for a shift"},{"lineNumber":1526,"author":{"gitID":"-"},"content":".. Prerequisites: Login with the correct admin password. Make sure you are in the admin mode. (The default admin password is `DEFAULT1`)."},{"lineNumber":1527,"author":{"gitID":"-"},"content":"   Make sure you have added some shifts."},{"lineNumber":1528,"author":{"gitID":"-"},"content":".. Test case: `apply 1 1` +"},{"lineNumber":1529,"author":{"gitID":"-"},"content":"   Expected: The first employee is successfully added to the first shift."},{"lineNumber":1530,"author":{"gitID":"-"},"content":".. Test case: `apply 1 1` again +"},{"lineNumber":1531,"author":{"gitID":"-"},"content":"   Expected: Employee is already in the shift. Error details shown in the status message."},{"lineNumber":1532,"author":{"gitID":"-"},"content":".. Test case: `apply 1 x` where x is a shift on a past date, or an invalid index."},{"lineNumber":1533,"author":{"gitID":"-"},"content":"   Expected: Error details shown in the status message."},{"lineNumber":1534,"author":{"gitID":"-"},"content":""},{"lineNumber":1535,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Unapplying an Employee from a Shift"},{"lineNumber":1536,"author":{"gitID":"-"},"content":""},{"lineNumber":1537,"author":{"gitID":"-"},"content":". Unapplying an employee from a shift"},{"lineNumber":1538,"author":{"gitID":"-"},"content":".. Prerequisites: Login with the correct admin password. Make sure you are in the admin mode. (The default admin password is `DEFAULT1`)."},{"lineNumber":1539,"author":{"gitID":"-"},"content":"   Make sure you have added some employees into some shifts."},{"lineNumber":1540,"author":{"gitID":"-"},"content":".. Test case: `unapply 1 1` +"},{"lineNumber":1541,"author":{"gitID":"-"},"content":"   Expected: The first employee is successfully removed from the first shift."},{"lineNumber":1542,"author":{"gitID":"-"},"content":".. Test case: `unapply 1 1` again +"},{"lineNumber":1543,"author":{"gitID":"-"},"content":"   Expectd: Employee is not in the shift as just removed. Error details shown in the status message."},{"lineNumber":1544,"author":{"gitID":"-"},"content":""},{"lineNumber":1545,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Displaying an Employee\u0027s Shift on the Timetable"},{"lineNumber":1546,"author":{"gitID":"-"},"content":""},{"lineNumber":1547,"author":{"gitID":"-"},"content":". Displaying an employee on the timetable"},{"lineNumber":1548,"author":{"gitID":"-"},"content":".. Test case: `select 1` -\u003e `apply 1 1` +"},{"lineNumber":1549,"author":{"gitID":"-"},"content":"   Expected: You can see shift 1 colour has changed from brown to blue, indicating that the first employee is enrolled in shift 1."},{"lineNumber":1550,"author":{"gitID":"-"},"content":""},{"lineNumber":1551,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Viewing All Employees in a Shift"},{"lineNumber":1552,"author":{"gitID":"-"},"content":""},{"lineNumber":1553,"author":{"gitID":"-"},"content":". Viewing all employees in a shift"},{"lineNumber":1554,"author":{"gitID":"-"},"content":".. Prerequisites: Make sure you have added some shifts and added some employees into the shifts."},{"lineNumber":1555,"author":{"gitID":"-"},"content":".. Test case: `viewshift 1` +"},{"lineNumber":1556,"author":{"gitID":"-"},"content":"   Expected: Correct number of employees listed in employee list."},{"lineNumber":1557,"author":{"gitID":"-"},"content":""},{"lineNumber":1558,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Encrypting and Decrypting Local Storage Files"},{"lineNumber":1559,"author":{"gitID":"-"},"content":". Encrypting local storage files"},{"lineNumber":1560,"author":{"gitID":"-"},"content":""},{"lineNumber":1561,"author":{"gitID":"-"},"content":".. Prerequisites: Login with the correct admin password. Make sure you are in the admin mode. (The default admin password is `DEFAULT1`)"},{"lineNumber":1562,"author":{"gitID":"-"},"content":".. Test case: `encrypt` +"},{"lineNumber":1563,"author":{"gitID":"-"},"content":"   Expectd: If your files are not encrypted, after this command, files will be encrypted after a few seconds."},{"lineNumber":1564,"author":{"gitID":"-"},"content":"   If your files have already been encrypted, after this command, files will not be affected and error details will be shown in the status message."},{"lineNumber":1565,"author":{"gitID":"-"},"content":""},{"lineNumber":1566,"author":{"gitID":"-"},"content":". Decrypting local storage files"},{"lineNumber":1567,"author":{"gitID":"-"},"content":""},{"lineNumber":1568,"author":{"gitID":"-"},"content":".. Prerequisites: Login with the correct admin password. Make sure you are in the admin mode. (The default admin password is `DEFAULT1`)"},{"lineNumber":1569,"author":{"gitID":"-"},"content":".. Test case: `decrypt` +"},{"lineNumber":1570,"author":{"gitID":"-"},"content":"   Expectd: If your files are encrypted, after this command, files will be decrypted after a few seconds."},{"lineNumber":1571,"author":{"gitID":"-"},"content":"   If your files have already been decrypted, after this command, files will not be affected and error details will be shown in the status message."},{"lineNumber":1572,"author":{"gitID":"-"},"content":""},{"lineNumber":1573,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Saving and Recovering Data"},{"lineNumber":1574,"author":{"gitID":"-"},"content":""},{"lineNumber":1575,"author":{"gitID":"-"},"content":". Dealing with missing/corrupted data files"},{"lineNumber":1576,"author":{"gitID":"-"},"content":""},{"lineNumber":1577,"author":{"gitID":"-"},"content":".. Prerequisites: You have already run the app once, and exited. You will see files with extension \".backup\" in `data` folder."},{"lineNumber":1578,"author":{"gitID":"-"},"content":".. Simulate missing/corrupted data files:"},{"lineNumber":1579,"author":{"gitID":"-"},"content":"... Open `data` folder."},{"lineNumber":1580,"author":{"gitID":"-"},"content":"... Delete \"parttimemanager.xml\" and \"outletinformation.xml\"."},{"lineNumber":1581,"author":{"gitID":"-"},"content":"... Copy \"parttimemanager.xml.backup\" and \"outletinformation.xml.backup\" to another folder."},{"lineNumber":1582,"author":{"gitID":"-"},"content":".. Recover data:"},{"lineNumber":1583,"author":{"gitID":"-"},"content":"... Rename \"parttimemanager.xml.backup\" to \"parttimemanager.xml\"."},{"lineNumber":1584,"author":{"gitID":"-"},"content":"... Rename \"outletinformation.xml.backup\" to \"outletinformation.xml\"."},{"lineNumber":1585,"author":{"gitID":"-"},"content":"... Paste those two files back into `data` folder."},{"lineNumber":1586,"author":{"gitID":"-"},"content":"... Run the app and you will see data recovered."},{"lineNumber":1587,"author":{"gitID":"-"},"content":".. If both of your `.xml` and `.backup` files are missing/corrupted, you are unable to recover data."},{"lineNumber":1588,"author":{"gitID":"-"},"content":".. If you feel that data read from local files are not correct, *DO NOT* close the app. Quickly copy and paste `.backup` files into another folder and follow `recover data` procedures."}],"authorContributionMap":{"koo1993":10,"hzxcaryn":20,"-":1558}},{"path":"src/test/java/seedu/ptman/ui/EmployeeListPanelTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"hzxcaryn"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.EventsUtil.postNow;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.getTypicalEmployees;"},{"lineNumber":7,"author":{"gitID":"hzxcaryn"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_FIRST_EMPLOYEE;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_SECOND_EMPLOYEE;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import static seedu.ptman.ui.testutil.GuiTestAssert.assertCardDisplaysEmployee;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import static seedu.ptman.ui.testutil.GuiTestAssert.assertCardEquals;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"import guitests.guihandles.EmployeeCardHandle;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import guitests.guihandles.EmployeeListPanelHandle;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.ui.JumpToListRequestEvent;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Employee;"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"public class EmployeeListPanelTest extends GuiUnitTest {"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    private static final ObservableList\u003cEmployee\u003e TYPICAL_EMPLOYEES \u003d"},{"lineNumber":24,"author":{"gitID":"-"},"content":"            FXCollections.observableList(getTypicalEmployees());"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"hzxcaryn"},"content":"    private static final JumpToListRequestEvent JUMP_TO_SECOND_AND_SELECT_EVENT \u003d"},{"lineNumber":27,"author":{"gitID":"hzxcaryn"},"content":"            new JumpToListRequestEvent(INDEX_SECOND_EMPLOYEE, true);"},{"lineNumber":28,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":29,"author":{"gitID":"hzxcaryn"},"content":"    private static final JumpToListRequestEvent JUMP_TO_TOP_AND_DESELECT_EVENT \u003d"},{"lineNumber":30,"author":{"gitID":"hzxcaryn"},"content":"            new JumpToListRequestEvent(INDEX_FIRST_EMPLOYEE, false);"},{"lineNumber":31,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"    private EmployeeListPanelHandle employeeListPanelHandle;"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"    @Before"},{"lineNumber":35,"author":{"gitID":"-"},"content":"    public void setUp() {"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        EmployeeListPanel employeeListPanel \u003d new EmployeeListPanel(TYPICAL_EMPLOYEES);"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        uiPartRule.setUiPart(employeeListPanel);"},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"-"},"content":"        employeeListPanelHandle \u003d new EmployeeListPanelHandle(getChildNode(employeeListPanel.getRoot(),"},{"lineNumber":40,"author":{"gitID":"-"},"content":"                EmployeeListPanelHandle.EMPLOYEE_LIST_VIEW_ID));"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":42,"author":{"gitID":"-"},"content":""},{"lineNumber":43,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    public void display() {"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        for (int i \u003d 0; i \u003c TYPICAL_EMPLOYEES.size(); i++) {"},{"lineNumber":46,"author":{"gitID":"-"},"content":"            employeeListPanelHandle.navigateToCard(TYPICAL_EMPLOYEES.get(i));"},{"lineNumber":47,"author":{"gitID":"-"},"content":"            Employee expectedEmployee \u003d TYPICAL_EMPLOYEES.get(i);"},{"lineNumber":48,"author":{"gitID":"-"},"content":"            EmployeeCardHandle actualCard \u003d employeeListPanelHandle.getEmployeeCardHandle(i);"},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"-"},"content":"            assertCardDisplaysEmployee(expectedEmployee, actualCard);"},{"lineNumber":51,"author":{"gitID":"-"},"content":"            assertEquals(Integer.toString(i + 1), actualCard.getId());"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":53,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitID":"-"},"content":""},{"lineNumber":55,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":56,"author":{"gitID":"-"},"content":"    public void handleJumpToListRequestEvent() {"},{"lineNumber":57,"author":{"gitID":"hzxcaryn"},"content":"        // new selection"},{"lineNumber":58,"author":{"gitID":"hzxcaryn"},"content":"        postNow(JUMP_TO_SECOND_AND_SELECT_EVENT);"},{"lineNumber":59,"author":{"gitID":"-"},"content":"        guiRobot.pauseForHuman();"},{"lineNumber":60,"author":{"gitID":"-"},"content":""},{"lineNumber":61,"author":{"gitID":"-"},"content":"        EmployeeCardHandle expectedCard \u003d"},{"lineNumber":62,"author":{"gitID":"-"},"content":"                employeeListPanelHandle.getEmployeeCardHandle(INDEX_SECOND_EMPLOYEE.getZeroBased());"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        EmployeeCardHandle selectedCard \u003d employeeListPanelHandle.getHandleToSelectedCard();"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        assertCardEquals(expectedCard, selectedCard);"},{"lineNumber":65,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":66,"author":{"gitID":"hzxcaryn"},"content":"        // remove selection"},{"lineNumber":67,"author":{"gitID":"hzxcaryn"},"content":"        postNow(JUMP_TO_TOP_AND_DESELECT_EVENT);"},{"lineNumber":68,"author":{"gitID":"-"},"content":"        guiRobot.pauseForHuman();"},{"lineNumber":69,"author":{"gitID":"-"},"content":""},{"lineNumber":70,"author":{"gitID":"hzxcaryn"},"content":"        assertFalse(employeeListPanelHandle.isAnyCardSelected());"},{"lineNumber":71,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":72,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"hzxcaryn":14,"-":58}},{"path":"src/test/java/seedu/ptman/ui/testutil/UiPartRule.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.ui.testutil;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.concurrent.TimeoutException;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import org.testfx.api.FxToolkit;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import javafx.scene.Parent;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import javafx.scene.Scene;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.ptman.ui.UiPart;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitID":"-"},"content":" * Provides an isolated stage to test an individual {@code UiPart}."},{"lineNumber":13,"author":{"gitID":"-"},"content":" */"},{"lineNumber":14,"author":{"gitID":"-"},"content":"public class UiPartRule extends StageRule {"},{"lineNumber":15,"author":{"gitID":"hzxcaryn"},"content":"    private static final String[] CSS_FILES \u003d {\"view/PtmanTheme.css\", \"view/Extensions.css\"};"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"    public void setUiPart(final UiPart\u003c? extends Parent\u003e uiPart) {"},{"lineNumber":18,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":19,"author":{"gitID":"-"},"content":"            FxToolkit.setupScene(() -\u003e {"},{"lineNumber":20,"author":{"gitID":"-"},"content":"                Scene scene \u003d new Scene(uiPart.getRoot());"},{"lineNumber":21,"author":{"gitID":"-"},"content":"                scene.getStylesheets().setAll(CSS_FILES);"},{"lineNumber":22,"author":{"gitID":"-"},"content":"                return scene;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"            });"},{"lineNumber":24,"author":{"gitID":"-"},"content":"            FxToolkit.showStage();"},{"lineNumber":25,"author":{"gitID":"-"},"content":"        } catch (TimeoutException te) {"},{"lineNumber":26,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"Timeout should not happen.\", te);"},{"lineNumber":27,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":28,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"hzxcaryn":1,"-":28}},{"path":"src/test/java/seedu/ptman/ui/OutletDetailsPanelTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.EventsUtil.postNow;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import guitests.guihandles.OutletDetailsPanelHandle;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.ui.AnnouncementChangedEvent;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.ui.OutletInformationChangedEvent;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.ui.OutletNameChangedEvent;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"hzxcaryn"},"content":"//@@author hzxcaryn"},{"lineNumber":16,"author":{"gitID":"hzxcaryn"},"content":"public class OutletDetailsPanelTest extends GuiUnitTest {"},{"lineNumber":17,"author":{"gitID":"hzxcaryn"},"content":"    private OutletInformationChangedEvent outletInformationChangedEventStub;"},{"lineNumber":18,"author":{"gitID":"hzxcaryn"},"content":"    private OutletNameChangedEvent outletNameChangedEventStub;"},{"lineNumber":19,"author":{"gitID":"hzxcaryn"},"content":"    private AnnouncementChangedEvent announcementChangedEventStub;"},{"lineNumber":20,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":21,"author":{"gitID":"hzxcaryn"},"content":"    private OutletDetailsPanel outletDetailsPanel;"},{"lineNumber":22,"author":{"gitID":"hzxcaryn"},"content":"    private OutletDetailsPanelHandle outletDetailsPanelHandle;"},{"lineNumber":23,"author":{"gitID":"hzxcaryn"},"content":"    private OutletInformation outlet \u003d new OutletInformation();"},{"lineNumber":24,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":25,"author":{"gitID":"hzxcaryn"},"content":"    @Before"},{"lineNumber":26,"author":{"gitID":"hzxcaryn"},"content":"    public void setUp() {"},{"lineNumber":27,"author":{"gitID":"hzxcaryn"},"content":"        outletInformationChangedEventStub \u003d new OutletInformationChangedEvent(\"New Operating Hours\","},{"lineNumber":28,"author":{"gitID":"hzxcaryn"},"content":"                \"New Outlet Contact\", \"New Outlet Email\");"},{"lineNumber":29,"author":{"gitID":"hzxcaryn"},"content":"        outletNameChangedEventStub \u003d new OutletNameChangedEvent(\"New Outlet Name\");"},{"lineNumber":30,"author":{"gitID":"hzxcaryn"},"content":"        announcementChangedEventStub \u003d new AnnouncementChangedEvent(\"New Announcement\");"},{"lineNumber":31,"author":{"gitID":"hzxcaryn"},"content":"        outletDetailsPanel \u003d new OutletDetailsPanel(outlet);"},{"lineNumber":32,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":33,"author":{"gitID":"hzxcaryn"},"content":"        uiPartRule.setUiPart(outletDetailsPanel);"},{"lineNumber":34,"author":{"gitID":"hzxcaryn"},"content":"        outletDetailsPanelHandle \u003d new OutletDetailsPanelHandle(outletDetailsPanel.getRoot());"},{"lineNumber":35,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":36,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":37,"author":{"gitID":"hzxcaryn"},"content":"    @Test"},{"lineNumber":38,"author":{"gitID":"hzxcaryn"},"content":"    public void display() {"},{"lineNumber":39,"author":{"gitID":"hzxcaryn"},"content":"        // Default outlet name and information"},{"lineNumber":40,"author":{"gitID":"hzxcaryn"},"content":"        String expectedDefaultOutletName \u003d \"DefaultOutlet\";"},{"lineNumber":41,"author":{"gitID":"hzxcaryn"},"content":"        String expectedTrimmedDefaultOutletOperatingHours \u003d \"09:00-22:00\";"},{"lineNumber":42,"author":{"gitID":"hzxcaryn"},"content":"        String expectedTrimmedDefaultOutletContact \u003d \"91234567\";"},{"lineNumber":43,"author":{"gitID":"hzxcaryn"},"content":"        String expectedTrimmedDefaultOutletEmail \u003d \"DefaultOutlet@gmail.com\";"},{"lineNumber":44,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(expectedTrimmedDefaultOutletOperatingHours,"},{"lineNumber":45,"author":{"gitID":"hzxcaryn"},"content":"                outletDetailsPanelHandle.getOutletOperatingHours().trim());"},{"lineNumber":46,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(expectedTrimmedDefaultOutletContact, outletDetailsPanelHandle.getOutletContact().trim());"},{"lineNumber":47,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(expectedTrimmedDefaultOutletEmail, outletDetailsPanelHandle.getOutletEmail().trim());"},{"lineNumber":48,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(expectedDefaultOutletName, outletDetailsPanelHandle.getOutletName());"},{"lineNumber":49,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":50,"author":{"gitID":"hzxcaryn"},"content":"        // Outlet Information: Operating Hours Updated"},{"lineNumber":51,"author":{"gitID":"hzxcaryn"},"content":"        postNow(outletInformationChangedEventStub);"},{"lineNumber":52,"author":{"gitID":"hzxcaryn"},"content":"        String expectedTrimmedOutletOperatingHours \u003d \"New Operating Hours\";"},{"lineNumber":53,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(expectedTrimmedOutletOperatingHours, outletDetailsPanelHandle.getOutletOperatingHours().trim());"},{"lineNumber":54,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":55,"author":{"gitID":"hzxcaryn"},"content":"        // Outlet Information: Contact Updated"},{"lineNumber":56,"author":{"gitID":"hzxcaryn"},"content":"        postNow(outletInformationChangedEventStub);"},{"lineNumber":57,"author":{"gitID":"hzxcaryn"},"content":"        String expectedTrimmedOutletContact \u003d \"New Outlet Contact\";"},{"lineNumber":58,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(expectedTrimmedOutletContact, outletDetailsPanelHandle.getOutletContact().trim());"},{"lineNumber":59,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":60,"author":{"gitID":"hzxcaryn"},"content":"        // Outlet Information: Email Updated"},{"lineNumber":61,"author":{"gitID":"hzxcaryn"},"content":"        postNow(outletInformationChangedEventStub);"},{"lineNumber":62,"author":{"gitID":"hzxcaryn"},"content":"        String expectedTrimmedOutletEmail \u003d \"New Outlet Email\";"},{"lineNumber":63,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(expectedTrimmedOutletEmail, outletDetailsPanelHandle.getOutletEmail().trim());"},{"lineNumber":64,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":65,"author":{"gitID":"hzxcaryn"},"content":"        // Outlet Name Updated"},{"lineNumber":66,"author":{"gitID":"hzxcaryn"},"content":"        postNow(outletNameChangedEventStub);"},{"lineNumber":67,"author":{"gitID":"hzxcaryn"},"content":"        String expectedOutletName \u003d \"New Outlet Name\";"},{"lineNumber":68,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(expectedOutletName, outletDetailsPanelHandle.getOutletName());"},{"lineNumber":69,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":70,"author":{"gitID":"hzxcaryn"},"content":"        // Announcement Updated"},{"lineNumber":71,"author":{"gitID":"hzxcaryn"},"content":"        postNow(announcementChangedEventStub);"},{"lineNumber":72,"author":{"gitID":"hzxcaryn"},"content":"        String expectedAnnouncement \u003d \"New Announcement\";"},{"lineNumber":73,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(expectedAnnouncement, outletDetailsPanelHandle.getAnnouncement());"},{"lineNumber":74,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":75,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":76,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":77,"author":{"gitID":"hzxcaryn"},"content":"}"}],"authorContributionMap":{"hzxcaryn":63,"-":14}},{"path":"src/test/java/seedu/ptman/ui/testutil/GuiTestAssert.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.ui.testutil;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"hzxcaryn"},"content":"import static org.junit.Assert.fail;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"hzxcaryn"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import com.calendarfx.model.Entry;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import guitests.guihandles.EmployeeCardHandle;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import guitests.guihandles.EmployeeListPanelHandle;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import guitests.guihandles.ResultDisplayHandle;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Employee;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Shift;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.ptman.ui.EmployeeCard;"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":20,"author":{"gitID":"-"},"content":" * A set of assertion methods useful for writing GUI tests."},{"lineNumber":21,"author":{"gitID":"-"},"content":" */"},{"lineNumber":22,"author":{"gitID":"-"},"content":"public class GuiTestAssert {"},{"lineNumber":23,"author":{"gitID":"hzxcaryn"},"content":"    private static final String LABEL_DEFAULT_STYLE \u003d \"label\";"},{"lineNumber":24,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":26,"author":{"gitID":"-"},"content":"     * Asserts that {@code actualCard} displays the same values as {@code expectedCard}."},{"lineNumber":27,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":28,"author":{"gitID":"-"},"content":"    public static void assertCardEquals(EmployeeCardHandle expectedCard, EmployeeCardHandle actualCard) {"},{"lineNumber":29,"author":{"gitID":"-"},"content":"        assertEquals(expectedCard.getId(), actualCard.getId());"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        assertEquals(expectedCard.getAddress(), actualCard.getAddress());"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        assertEquals(expectedCard.getEmail(), actualCard.getEmail());"},{"lineNumber":32,"author":{"gitID":"-"},"content":"        assertEquals(expectedCard.getName(), actualCard.getName());"},{"lineNumber":33,"author":{"gitID":"-"},"content":"        assertEquals(expectedCard.getPhone(), actualCard.getPhone());"},{"lineNumber":34,"author":{"gitID":"-"},"content":"        assertEquals(expectedCard.getTags(), actualCard.getTags());"},{"lineNumber":35,"author":{"gitID":"hzxcaryn"},"content":"        expectedCard.getTags().forEach(tag -\u003e {"},{"lineNumber":36,"author":{"gitID":"hzxcaryn"},"content":"            assertEquals(expectedCard.getTagStyleClasses(tag), actualCard.getTagStyleClasses(tag));"},{"lineNumber":37,"author":{"gitID":"hzxcaryn"},"content":"        });"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":41,"author":{"gitID":"-"},"content":"     * Asserts that {@code actualCard} displays the details of {@code expectedEmployee}."},{"lineNumber":42,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":43,"author":{"gitID":"-"},"content":"    public static void assertCardDisplaysEmployee(Employee expectedEmployee, EmployeeCardHandle actualCard) {"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        assertEquals(expectedEmployee.getName().fullName, actualCard.getName());"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        assertEquals(expectedEmployee.getPhone().value, actualCard.getPhone());"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        assertEquals(expectedEmployee.getEmail().value, actualCard.getEmail());"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        assertEquals(expectedEmployee.getAddress().value, actualCard.getAddress());"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        assertEquals(expectedEmployee.getTags().stream().map(tag -\u003e tag.tagName).collect(Collectors.toList()),"},{"lineNumber":49,"author":{"gitID":"-"},"content":"                actualCard.getTags());"},{"lineNumber":50,"author":{"gitID":"-"},"content":"        assertTagEquals(expectedEmployee, actualCard);"},{"lineNumber":51,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":53,"author":{"gitID":"hzxcaryn"},"content":"    //@@author hzxcaryn"},{"lineNumber":54,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":55,"author":{"gitID":"hzxcaryn"},"content":"     * Asserts that {@code actualEntry} displays the details of {@code expectedShift}."},{"lineNumber":56,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":57,"author":{"gitID":"hzxcaryn"},"content":"    public static void assertEntryDisplaysShift(Shift expectedShift, Entry actualEntry, int index) {"},{"lineNumber":58,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(expectedShift.getDate().getLocalDate(), actualEntry.getStartDate());"},{"lineNumber":59,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(expectedShift.getDate().getLocalDate(), actualEntry.getEndDate());"},{"lineNumber":60,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(expectedShift.getStartTime().getLocalTime(), actualEntry.getStartTime());"},{"lineNumber":61,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(expectedShift.getEndTime().getLocalTime(), actualEntry.getEndTime());"},{"lineNumber":62,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(\"SHIFT \" + index + \"\\nSlots left: \" + expectedShift.getSlotsLeft() + \"/\""},{"lineNumber":63,"author":{"gitID":"hzxcaryn"},"content":"                        + expectedShift.getCapacity().getCapacity(), actualEntry.getTitle());"},{"lineNumber":64,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":65,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":66,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":67,"author":{"gitID":"hzxcaryn"},"content":"     * Returns the color style for {@code tagName}\u0027s label. The tag\u0027s color is determined by looking up the color"},{"lineNumber":68,"author":{"gitID":"hzxcaryn"},"content":"     * in {@code EmployeeCard#TAG_COLOR_STYLES}, using an index generated by the hash code of the tag\u0027s content."},{"lineNumber":69,"author":{"gitID":"hzxcaryn"},"content":"     *"},{"lineNumber":70,"author":{"gitID":"hzxcaryn"},"content":"     * @see EmployeeCard#getTagColor(String)"},{"lineNumber":71,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":72,"author":{"gitID":"hzxcaryn"},"content":"    private static String getTagColor(String tagName) {"},{"lineNumber":73,"author":{"gitID":"hzxcaryn"},"content":"        switch (tagName) {"},{"lineNumber":74,"author":{"gitID":"hzxcaryn"},"content":"        case \"supervisor\":"},{"lineNumber":75,"author":{"gitID":"hzxcaryn"},"content":"        case \"chef\":"},{"lineNumber":76,"author":{"gitID":"hzxcaryn"},"content":"            return \"purple\";"},{"lineNumber":77,"author":{"gitID":"hzxcaryn"},"content":"        case \"paperwork\":"},{"lineNumber":78,"author":{"gitID":"hzxcaryn"},"content":"            return \"mint\";"},{"lineNumber":79,"author":{"gitID":"hzxcaryn"},"content":"        case \"classmates\":"},{"lineNumber":80,"author":{"gitID":"hzxcaryn"},"content":"        case \"owesMoney\":"},{"lineNumber":81,"author":{"gitID":"hzxcaryn"},"content":"            return \"salmon\";"},{"lineNumber":82,"author":{"gitID":"hzxcaryn"},"content":"        case \"colleagues\":"},{"lineNumber":83,"author":{"gitID":"hzxcaryn"},"content":"        case \"neighbours\":"},{"lineNumber":84,"author":{"gitID":"hzxcaryn"},"content":"            return \"teal\";"},{"lineNumber":85,"author":{"gitID":"hzxcaryn"},"content":"        case \"family\":"},{"lineNumber":86,"author":{"gitID":"hzxcaryn"},"content":"        case \"friend\":"},{"lineNumber":87,"author":{"gitID":"hzxcaryn"},"content":"        case \"barista\":"},{"lineNumber":88,"author":{"gitID":"hzxcaryn"},"content":"            return \"pink\";"},{"lineNumber":89,"author":{"gitID":"hzxcaryn"},"content":"        case \"friends\":"},{"lineNumber":90,"author":{"gitID":"hzxcaryn"},"content":"        case \"bartender\":"},{"lineNumber":91,"author":{"gitID":"hzxcaryn"},"content":"            return \"pale-blue\";"},{"lineNumber":92,"author":{"gitID":"hzxcaryn"},"content":"        case \"husband\":"},{"lineNumber":93,"author":{"gitID":"hzxcaryn"},"content":"        case \"cashier\":"},{"lineNumber":94,"author":{"gitID":"hzxcaryn"},"content":"            return \"yellow\";"},{"lineNumber":95,"author":{"gitID":"hzxcaryn"},"content":"        case \"alfresco\":"},{"lineNumber":96,"author":{"gitID":"hzxcaryn"},"content":"            return \"turquoise\";"},{"lineNumber":97,"author":{"gitID":"hzxcaryn"},"content":"        default:"},{"lineNumber":98,"author":{"gitID":"hzxcaryn"},"content":"            fail(tagName + \" does not have a color assigned.\");"},{"lineNumber":99,"author":{"gitID":"hzxcaryn"},"content":"            return \"\";"},{"lineNumber":100,"author":{"gitID":"hzxcaryn"},"content":"        }"},{"lineNumber":101,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":102,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":103,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":104,"author":{"gitID":"hzxcaryn"},"content":"     * Asserts that the tags in {@code actualCard} matches all the tags in"},{"lineNumber":105,"author":{"gitID":"hzxcaryn"},"content":"     * {@code expectedEmployee} with the correct color."},{"lineNumber":106,"author":{"gitID":"hzxcaryn"},"content":"     * */"},{"lineNumber":107,"author":{"gitID":"hzxcaryn"},"content":"    private static void assertTagEquals(Employee expectedEmployee,"},{"lineNumber":108,"author":{"gitID":"hzxcaryn"},"content":"                                        EmployeeCardHandle actualCard) {"},{"lineNumber":109,"author":{"gitID":"hzxcaryn"},"content":"        List\u003cString\u003e expectedTags \u003d expectedEmployee.getTags().stream().map(tag -\u003e tag.tagName)"},{"lineNumber":110,"author":{"gitID":"hzxcaryn"},"content":"                .collect(Collectors.toList());"},{"lineNumber":111,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(expectedTags, actualCard.getTags());"},{"lineNumber":112,"author":{"gitID":"hzxcaryn"},"content":"        expectedTags.forEach(tag -\u003e"},{"lineNumber":113,"author":{"gitID":"hzxcaryn"},"content":"                assertEquals(Arrays.asList(LABEL_DEFAULT_STYLE, getTagColor(tag)), actualCard.getTagStyleClasses(tag)));"},{"lineNumber":114,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":115,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":116,"author":{"gitID":"hzxcaryn"},"content":"    //@@author"},{"lineNumber":117,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":118,"author":{"gitID":"-"},"content":"     * Asserts that the list in {@code employeeListPanelHandle} displays the details of {@code employees} correctly and"},{"lineNumber":119,"author":{"gitID":"-"},"content":"     * in the correct order."},{"lineNumber":120,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":121,"author":{"gitID":"-"},"content":"    public static void assertListMatching(EmployeeListPanelHandle employeeListPanelHandle, Employee... employees) {"},{"lineNumber":122,"author":{"gitID":"-"},"content":"        for (int i \u003d 0; i \u003c employees.length; i++) {"},{"lineNumber":123,"author":{"gitID":"-"},"content":"            assertCardDisplaysEmployee(employees[i], employeeListPanelHandle.getEmployeeCardHandle(i));"},{"lineNumber":124,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":125,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":126,"author":{"gitID":"-"},"content":""},{"lineNumber":127,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":128,"author":{"gitID":"-"},"content":"     * Asserts that the list in {@code employeeListPanelHandle} displays the details of {@code employees} correctly and"},{"lineNumber":129,"author":{"gitID":"-"},"content":"     * in the correct order."},{"lineNumber":130,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":131,"author":{"gitID":"-"},"content":"    public static void assertListMatching(EmployeeListPanelHandle employeeListPanelHandle, List\u003cEmployee\u003e employees) {"},{"lineNumber":132,"author":{"gitID":"-"},"content":"        assertListMatching(employeeListPanelHandle, employees.toArray(new Employee[0]));"},{"lineNumber":133,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":134,"author":{"gitID":"-"},"content":""},{"lineNumber":135,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":136,"author":{"gitID":"-"},"content":"     * Asserts the size of the list in {@code employeeListPanelHandle} equals to {@code size}."},{"lineNumber":137,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":138,"author":{"gitID":"-"},"content":"    public static void assertListSize(EmployeeListPanelHandle employeeListPanelHandle, int size) {"},{"lineNumber":139,"author":{"gitID":"-"},"content":"        int numberOfPeople \u003d employeeListPanelHandle.getListSize();"},{"lineNumber":140,"author":{"gitID":"-"},"content":"        assertEquals(size, numberOfPeople);"},{"lineNumber":141,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":142,"author":{"gitID":"-"},"content":""},{"lineNumber":143,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":144,"author":{"gitID":"-"},"content":"     * Asserts the message shown in {@code resultDisplayHandle} equals to {@code expected}."},{"lineNumber":145,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":146,"author":{"gitID":"-"},"content":"    public static void assertResultMessage(ResultDisplayHandle resultDisplayHandle, String expected) {"},{"lineNumber":147,"author":{"gitID":"-"},"content":"        assertEquals(expected, resultDisplayHandle.getText());"},{"lineNumber":148,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":149,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"hzxcaryn":73,"-":76}},{"path":"src/test/java/seedu/ptman/ui/StatusBarFooterTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.EventsUtil.postNow;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.ALICE;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.ui.StatusBarFooter.NUM_EMPLOYEES_STATUS;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.ui.StatusBarFooter.SYNC_STATUS_INITIAL;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.ptman.ui.StatusBarFooter.SYNC_STATUS_UPDATED;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import java.time.Clock;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import java.time.Instant;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import java.util.Date;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"import org.junit.AfterClass;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import org.junit.BeforeClass;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":"import guitests.guihandles.StatusBarFooterHandle;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.model.PartTimeManagerChangedEvent;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.PartTimeManagerBuilder;"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"public class StatusBarFooterTest extends GuiUnitTest {"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"    private static final String STUB_SAVE_LOCATION \u003d \"Stub\";"},{"lineNumber":27,"author":{"gitID":"-"},"content":"    private static final String RELATIVE_PATH \u003d \"./\";"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    private static final int INITIAL_NUM_EMPLOYEES \u003d 0;"},{"lineNumber":30,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"    private static final PartTimeManagerChangedEvent EVENT_STUB \u003d new PartTimeManagerChangedEvent("},{"lineNumber":32,"author":{"gitID":"-"},"content":"            new PartTimeManagerBuilder().withEmployee(ALICE).build());"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"    private static final Clock originalClock \u003d StatusBarFooter.getClock();"},{"lineNumber":35,"author":{"gitID":"-"},"content":"    private static final Clock injectedClock \u003d Clock.fixed(Instant.now(), ZoneId.systemDefault());"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"    private StatusBarFooterHandle statusBarFooterHandle;"},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"-"},"content":"    @BeforeClass"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    public static void setUpBeforeClass() {"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        // inject fixed clock"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        StatusBarFooter.setClock(injectedClock);"},{"lineNumber":43,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"-"},"content":"    @AfterClass"},{"lineNumber":46,"author":{"gitID":"-"},"content":"    public static void tearDownAfterClass() {"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        // restore original clock"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        StatusBarFooter.setClock(originalClock);"},{"lineNumber":49,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"-"},"content":"    @Before"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    public void setUp() {"},{"lineNumber":53,"author":{"gitID":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(STUB_SAVE_LOCATION, INITIAL_NUM_EMPLOYEES);"},{"lineNumber":54,"author":{"gitID":"-"},"content":"        uiPartRule.setUiPart(statusBarFooter);"},{"lineNumber":55,"author":{"gitID":"-"},"content":""},{"lineNumber":56,"author":{"gitID":"-"},"content":"        statusBarFooterHandle \u003d new StatusBarFooterHandle(statusBarFooter.getRoot());"},{"lineNumber":57,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":60,"author":{"gitID":"-"},"content":"    public void display() {"},{"lineNumber":61,"author":{"gitID":"-"},"content":"        // initial state"},{"lineNumber":62,"author":{"gitID":"hzxcaryn"},"content":"        assertStatusBarContent(RELATIVE_PATH + STUB_SAVE_LOCATION, SYNC_STATUS_INITIAL,"},{"lineNumber":63,"author":{"gitID":"-"},"content":"                String.format(NUM_EMPLOYEES_STATUS, INITIAL_NUM_EMPLOYEES));"},{"lineNumber":64,"author":{"gitID":"-"},"content":""},{"lineNumber":65,"author":{"gitID":"-"},"content":"        // after ptman book is updated"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        postNow(EVENT_STUB);"},{"lineNumber":67,"author":{"gitID":"-"},"content":"        assertStatusBarContent(RELATIVE_PATH + STUB_SAVE_LOCATION,"},{"lineNumber":68,"author":{"gitID":"hzxcaryn"},"content":"                String.format(SYNC_STATUS_UPDATED, new Date(injectedClock.millis()).toString()),"},{"lineNumber":69,"author":{"gitID":"-"},"content":"                String.format(NUM_EMPLOYEES_STATUS, EVENT_STUB.data.getEmployeeList().size()));"},{"lineNumber":70,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitID":"-"},"content":""},{"lineNumber":72,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":73,"author":{"gitID":"hzxcaryn"},"content":"     * Asserts that the save location matches that of {@code expectedSaveLocation}, the"},{"lineNumber":74,"author":{"gitID":"-"},"content":"     * sync status matches that of {@code expectedSyncStatus}, and the num employees matches"},{"lineNumber":75,"author":{"gitID":"-"},"content":"     * that of {@code expectedNumEmployees}"},{"lineNumber":76,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":77,"author":{"gitID":"hzxcaryn"},"content":"    private void assertStatusBarContent(String expectedSaveLocation,"},{"lineNumber":78,"author":{"gitID":"-"},"content":"                                        String expectedSyncStatus, String expectedNumEmployees) {"},{"lineNumber":79,"author":{"gitID":"-"},"content":"        assertEquals(expectedSaveLocation, statusBarFooterHandle.getSaveLocation());"},{"lineNumber":80,"author":{"gitID":"-"},"content":"        assertEquals(expectedNumEmployees, statusBarFooterHandle.getNumEmployees());"},{"lineNumber":81,"author":{"gitID":"-"},"content":"        assertEquals(expectedSyncStatus, statusBarFooterHandle.getSyncStatus());"},{"lineNumber":82,"author":{"gitID":"-"},"content":"        guiRobot.pauseForHuman();"},{"lineNumber":83,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":84,"author":{"gitID":"-"},"content":""},{"lineNumber":85,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"hzxcaryn":5,"-":80}},{"path":"src/test/java/seedu/ptman/ui/AdminModeDisplayTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.EventsUtil.postNow;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"hzxcaryn"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"hzxcaryn"},"content":"import guitests.guihandles.AdminModeDisplayHandle;"},{"lineNumber":12,"author":{"gitID":"hzxcaryn"},"content":"import seedu.ptman.commons.events.model.UserModeChangedEvent;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.Logic;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.LogicManager;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Model;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.ptman.model.ModelManager;"},{"lineNumber":17,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":18,"author":{"gitID":"hzxcaryn"},"content":"//@@author hzxcaryn"},{"lineNumber":19,"author":{"gitID":"hzxcaryn"},"content":"public class AdminModeDisplayTest extends GuiUnitTest {"},{"lineNumber":20,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":21,"author":{"gitID":"hzxcaryn"},"content":"    private UserModeChangedEvent userModeChangedEventLoginStub \u003d new UserModeChangedEvent(true);"},{"lineNumber":22,"author":{"gitID":"hzxcaryn"},"content":"    private UserModeChangedEvent userModeChangedEventLogoutStub \u003d new UserModeChangedEvent(false);"},{"lineNumber":23,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":24,"author":{"gitID":"hzxcaryn"},"content":"    private ArrayList\u003cString\u003e defaultStyleOfAdminModeDetails;"},{"lineNumber":25,"author":{"gitID":"hzxcaryn"},"content":"    private ArrayList\u003cString\u003e loginStyleOfAdminModeDetails;"},{"lineNumber":26,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":27,"author":{"gitID":"hzxcaryn"},"content":"    private AdminModeDisplayHandle adminModeDisplayHandle;"},{"lineNumber":28,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":29,"author":{"gitID":"hzxcaryn"},"content":"    @Before"},{"lineNumber":30,"author":{"gitID":"hzxcaryn"},"content":"    public void setUp() {"},{"lineNumber":31,"author":{"gitID":"hzxcaryn"},"content":"        Model model \u003d new ModelManager();"},{"lineNumber":32,"author":{"gitID":"hzxcaryn"},"content":"        Logic logic \u003d new LogicManager(model);"},{"lineNumber":33,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":34,"author":{"gitID":"hzxcaryn"},"content":"        AdminModeDisplay adminModeDisplay \u003d new AdminModeDisplay(logic.isAdminMode());"},{"lineNumber":35,"author":{"gitID":"hzxcaryn"},"content":"        uiPartRule.setUiPart(adminModeDisplay);"},{"lineNumber":36,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":37,"author":{"gitID":"hzxcaryn"},"content":"        adminModeDisplayHandle \u003d new AdminModeDisplayHandle(getChildNode(adminModeDisplay.getRoot(),"},{"lineNumber":38,"author":{"gitID":"hzxcaryn"},"content":"                adminModeDisplayHandle.ADMIN_MODE_DISPLAY_LABEL_ID));"},{"lineNumber":39,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":40,"author":{"gitID":"hzxcaryn"},"content":"        defaultStyleOfAdminModeDetails \u003d new ArrayList\u003c\u003e(adminModeDisplayHandle.getStyleClass());"},{"lineNumber":41,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":42,"author":{"gitID":"hzxcaryn"},"content":"        loginStyleOfAdminModeDetails \u003d new ArrayList\u003c\u003e(defaultStyleOfAdminModeDetails);"},{"lineNumber":43,"author":{"gitID":"hzxcaryn"},"content":"        loginStyleOfAdminModeDetails.remove(AdminModeDisplay.LABEL_STYLE_CLASS_NON_ADMIN);"},{"lineNumber":44,"author":{"gitID":"hzxcaryn"},"content":"        loginStyleOfAdminModeDetails.add(AdminModeDisplay.LABEL_STYLE_CLASS_ADMIN);"},{"lineNumber":45,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":47,"author":{"gitID":"hzxcaryn"},"content":"    @Test"},{"lineNumber":48,"author":{"gitID":"hzxcaryn"},"content":"    public void display() {"},{"lineNumber":49,"author":{"gitID":"hzxcaryn"},"content":"        // default Admin Mode Display text"},{"lineNumber":50,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(\"Admin Mode\", adminModeDisplayHandle.getText());"},{"lineNumber":51,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(defaultStyleOfAdminModeDetails, adminModeDisplayHandle.getStyleClass());"},{"lineNumber":52,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":53,"author":{"gitID":"hzxcaryn"},"content":"        // login performed"},{"lineNumber":54,"author":{"gitID":"hzxcaryn"},"content":"        postNow(userModeChangedEventLoginStub);"},{"lineNumber":55,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(loginStyleOfAdminModeDetails, adminModeDisplayHandle.getStyleClass());"},{"lineNumber":56,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":57,"author":{"gitID":"hzxcaryn"},"content":"        // logout performed"},{"lineNumber":58,"author":{"gitID":"hzxcaryn"},"content":"        postNow(userModeChangedEventLogoutStub);"},{"lineNumber":59,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(defaultStyleOfAdminModeDetails, adminModeDisplayHandle.getStyleClass());"},{"lineNumber":60,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":61,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":62,"author":{"gitID":"hzxcaryn"},"content":"}"}],"authorContributionMap":{"hzxcaryn":50,"-":12}},{"path":"src/test/java/seedu/ptman/commons/encrypter/EncrypterTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.commons.encrypter;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.encrypter.DataEncrypter.decrypt;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.encrypter.DataEncrypter.encrypt;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":10,"author":{"gitID":"SunBangjie"},"content":"public class EncrypterTest {"},{"lineNumber":11,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":12,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":13,"author":{"gitID":"SunBangjie"},"content":"    public void encrypt_validString_returnsCorrectEncryptedString() throws Exception {"},{"lineNumber":14,"author":{"gitID":"SunBangjie"},"content":"        String plainText \u003d \"Alex Yeoh\";"},{"lineNumber":15,"author":{"gitID":"SunBangjie"},"content":"        String expectedCipherText \u003d \"CurU9CCNY0mueTcpOaMg/w\u003d\u003d\";"},{"lineNumber":16,"author":{"gitID":"SunBangjie"},"content":"        String cipherText \u003d encrypt(plainText);"},{"lineNumber":17,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(cipherText, expectedCipherText);"},{"lineNumber":18,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":20,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":21,"author":{"gitID":"SunBangjie"},"content":"    public void decrypt_validString_returnsCorrectDecryptedString() throws Exception {"},{"lineNumber":22,"author":{"gitID":"SunBangjie"},"content":"        String expectedPlainText \u003d \"Alex Yeoh\";"},{"lineNumber":23,"author":{"gitID":"SunBangjie"},"content":"        String cipherText \u003d \"CurU9CCNY0mueTcpOaMg/w\u003d\u003d\";"},{"lineNumber":24,"author":{"gitID":"SunBangjie"},"content":"        String plainText \u003d decrypt(cipherText);"},{"lineNumber":25,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(plainText, expectedPlainText);"},{"lineNumber":26,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":8,"SunBangjie":19}},{"path":"src/test/java/seedu/ptman/commons/util/DateUtilTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.commons.util;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"shanwpf"},"content":"//@@author shanwpf"},{"lineNumber":12,"author":{"gitID":"shanwpf"},"content":"public class DateUtilTest {"},{"lineNumber":13,"author":{"gitID":"shanwpf"},"content":"    @Rule"},{"lineNumber":14,"author":{"gitID":"shanwpf"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":15,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":16,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":17,"author":{"gitID":"shanwpf"},"content":"    public void getWeekFromDate_validDate_returnsWeekNumber() {"},{"lineNumber":18,"author":{"gitID":"shanwpf"},"content":"        // 14th Jan 2018 is in the 2nd week of 2018"},{"lineNumber":19,"author":{"gitID":"shanwpf"},"content":"        assertEquals(DateUtil.getWeekFromDate(LocalDate.of(2018, 1, 14)), 2);"},{"lineNumber":20,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":21,"author":{"gitID":"shanwpf"},"content":"        // 15th Jan 2018 is in the 3rd week of 2018"},{"lineNumber":22,"author":{"gitID":"shanwpf"},"content":"        assertEquals(DateUtil.getWeekFromDate(LocalDate.of(2018, 1, 15)), 3);"},{"lineNumber":23,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":24,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":25,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":26,"author":{"gitID":"shanwpf"},"content":"    public void getWeekFromDate_null_throwsNullPointerException() {"},{"lineNumber":27,"author":{"gitID":"shanwpf"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":28,"author":{"gitID":"shanwpf"},"content":"        DateUtil.getWeekFromDate(null);"},{"lineNumber":29,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":30,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":31,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":32,"author":{"gitID":"shanwpf"},"content":"    public void getMondayOfDate_validDate_returnsMondayDate() {"},{"lineNumber":33,"author":{"gitID":"shanwpf"},"content":"        // Sunday 8th April 2018 returns Monday 2nd April 2018"},{"lineNumber":34,"author":{"gitID":"shanwpf"},"content":"        assertEquals(DateUtil.getMondayOfDate(LocalDate.of(2018, 4, 8)), LocalDate.of(2018, 4, 2));"},{"lineNumber":35,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":36,"author":{"gitID":"shanwpf"},"content":"        // Monday 9th April 2018 returns Monday 9th April 2018"},{"lineNumber":37,"author":{"gitID":"shanwpf"},"content":"        assertEquals(DateUtil.getMondayOfDate(LocalDate.of(2018, 4, 9)), LocalDate.of(2018, 4, 9));"},{"lineNumber":38,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":40,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":41,"author":{"gitID":"shanwpf"},"content":"    public void getMondayOfDate_null_throwsNullPointerException() {"},{"lineNumber":42,"author":{"gitID":"shanwpf"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":43,"author":{"gitID":"shanwpf"},"content":"        DateUtil.getMondayOfDate(null);"},{"lineNumber":44,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":46,"author":{"gitID":"hzxcaryn"},"content":"    //@@author hzxcaryn"},{"lineNumber":47,"author":{"gitID":"hzxcaryn"},"content":"    @Test"},{"lineNumber":48,"author":{"gitID":"hzxcaryn"},"content":"    public void getThursdayOfDate_validDate_returnsThursdayDate() {"},{"lineNumber":49,"author":{"gitID":"hzxcaryn"},"content":"        // Sunday 8th April 2018 returns Thursday 5th April 2018"},{"lineNumber":50,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(DateUtil.getThursdayOfDate(LocalDate.of(2018, 4, 8)), LocalDate.of(2018, 4, 5));"},{"lineNumber":51,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":52,"author":{"gitID":"hzxcaryn"},"content":"        // Monday 9th April 2018 returns Thursday 12th April 2018"},{"lineNumber":53,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(DateUtil.getThursdayOfDate(LocalDate.of(2018, 4, 9)), LocalDate.of(2018, 4, 12));"},{"lineNumber":54,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":55,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":56,"author":{"gitID":"hzxcaryn"},"content":"    @Test"},{"lineNumber":57,"author":{"gitID":"hzxcaryn"},"content":"    public void getThursdayOfDate_null_throwsNullPointerException() {"},{"lineNumber":58,"author":{"gitID":"hzxcaryn"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":59,"author":{"gitID":"hzxcaryn"},"content":"        DateUtil.getThursdayOfDate(null);"},{"lineNumber":60,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":61,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":62,"author":{"gitID":"hzxcaryn"},"content":"    @Test"},{"lineNumber":63,"author":{"gitID":"hzxcaryn"},"content":"    public void getNextWeekDate_validDate_returnsNextWeekDate() {"},{"lineNumber":64,"author":{"gitID":"hzxcaryn"},"content":"        // Sunday 8th April 2018 returns 15th April 2018"},{"lineNumber":65,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(DateUtil.getNextWeekDate(LocalDate.of(2018, 4, 8)), LocalDate.of(2018, 4, 15));"},{"lineNumber":66,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":67,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":68,"author":{"gitID":"hzxcaryn"},"content":"    @Test"},{"lineNumber":69,"author":{"gitID":"hzxcaryn"},"content":"    public void getNextWeekDate_null_throwsNullPointerException() {"},{"lineNumber":70,"author":{"gitID":"hzxcaryn"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":71,"author":{"gitID":"hzxcaryn"},"content":"        DateUtil.getNextWeekDate(null);"},{"lineNumber":72,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":74,"author":{"gitID":"hzxcaryn"},"content":"    @Test"},{"lineNumber":75,"author":{"gitID":"hzxcaryn"},"content":"    public void getPrevWeekDate_validDate_returnsNextWeekDate() {"},{"lineNumber":76,"author":{"gitID":"hzxcaryn"},"content":"        // Sunday 8th April 2018 returns 1st April 2018"},{"lineNumber":77,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(DateUtil.getPrevWeekDate(LocalDate.of(2018, 4, 8)), LocalDate.of(2018, 4, 1));"},{"lineNumber":78,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":79,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":80,"author":{"gitID":"hzxcaryn"},"content":"    @Test"},{"lineNumber":81,"author":{"gitID":"hzxcaryn"},"content":"    public void getPrevWeekDate_null_throwsNullPointerException() {"},{"lineNumber":82,"author":{"gitID":"hzxcaryn"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":83,"author":{"gitID":"hzxcaryn"},"content":"        DateUtil.getPrevWeekDate(null);"},{"lineNumber":84,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":85,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":86,"author":{"gitID":"hzxcaryn"},"content":"    @Test"},{"lineNumber":87,"author":{"gitID":"hzxcaryn"},"content":"    public void getMonthYearFromDate_validDate_returnsMonthYear() {"},{"lineNumber":88,"author":{"gitID":"hzxcaryn"},"content":"        // Sunday 8th April 2018 returns APRIL 2018"},{"lineNumber":89,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(DateUtil.getMonthYearFromDate(LocalDate.of(2018, 4, 8)), \"APRIL 2018\");"},{"lineNumber":90,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":91,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":92,"author":{"gitID":"hzxcaryn"},"content":"    @Test"},{"lineNumber":93,"author":{"gitID":"hzxcaryn"},"content":"    public void getMonthYearFromDate_null_throwsNullPointerException() {"},{"lineNumber":94,"author":{"gitID":"hzxcaryn"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":95,"author":{"gitID":"hzxcaryn"},"content":"        DateUtil.getMonthYearFromDate(null);"},{"lineNumber":96,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":97,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":98,"author":{"gitID":"hzxcaryn"},"content":"}"}],"authorContributionMap":{"shanwpf":35,"hzxcaryn":53,"-":10}},{"path":"src/test/java/seedu/ptman/logic/parser/ApplyCommandParserTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CommandParserTestUtil.assertParseFailure;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CommandParserTestUtil.assertParseSuccess;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_FIRST_EMPLOYEE;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_FIRST_SHIFT;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.ApplyCommand;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"shanwpf"},"content":"//@@author shanwpf"},{"lineNumber":17,"author":{"gitID":"shanwpf"},"content":"public class ApplyCommandParserTest {"},{"lineNumber":18,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":19,"author":{"gitID":"shanwpf"},"content":"    private ApplyCommandParser parser \u003d new ApplyCommandParser();"},{"lineNumber":20,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":21,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":22,"author":{"gitID":"shanwpf"},"content":"    public void parse_validArgs_returnsApplyCommand() {"},{"lineNumber":23,"author":{"gitID":"shanwpf"},"content":"        assertParseSuccess(parser, \"1 1 pw/DEFAULT1\","},{"lineNumber":24,"author":{"gitID":"shanwpf"},"content":"                new ApplyCommand(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, Optional.of(new Password())));"},{"lineNumber":25,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":27,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":28,"author":{"gitID":"shanwpf"},"content":"    public void parse_noPassword_returnsApplyCommand() {"},{"lineNumber":29,"author":{"gitID":"shanwpf"},"content":"        assertParseSuccess(parser, \"1 1\", new ApplyCommand(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, Optional.empty()));"},{"lineNumber":30,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":32,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":33,"author":{"gitID":"shanwpf"},"content":"    public void parse_invalidArgs_throwsParseException() {"},{"lineNumber":34,"author":{"gitID":"shanwpf"},"content":"        assertParseFailure(parser, \"a b pw/DEFAULT1\","},{"lineNumber":35,"author":{"gitID":"shanwpf"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ApplyCommand.MESSAGE_USAGE));"},{"lineNumber":36,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":37,"author":{"gitID":"shanwpf"},"content":"}"}],"authorContributionMap":{"shanwpf":22,"-":15}},{"path":"src/test/java/seedu/ptman/logic/parser/UnapplyCommandParserTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CommandParserTestUtil.assertParseFailure;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CommandParserTestUtil.assertParseSuccess;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_FIRST_EMPLOYEE;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_FIRST_SHIFT;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.UnapplyCommand;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"shanwpf"},"content":"//@@author shanwpf"},{"lineNumber":17,"author":{"gitID":"shanwpf"},"content":"public class UnapplyCommandParserTest {"},{"lineNumber":18,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":19,"author":{"gitID":"shanwpf"},"content":"    private UnapplyCommandParser parser \u003d new UnapplyCommandParser();"},{"lineNumber":20,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":21,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":22,"author":{"gitID":"shanwpf"},"content":"    public void parse_userModeValidArgs_returnsApplyCommand() {"},{"lineNumber":23,"author":{"gitID":"shanwpf"},"content":"        assertParseSuccess(parser, \"1 1 pw/DEFAULT1\","},{"lineNumber":24,"author":{"gitID":"shanwpf"},"content":"                new UnapplyCommand(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, Optional.of(new Password())));"},{"lineNumber":25,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":27,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":28,"author":{"gitID":"shanwpf"},"content":"    public void parse_adminModeValidArgs_returnsApplyCommand() {"},{"lineNumber":29,"author":{"gitID":"shanwpf"},"content":"        assertParseSuccess(parser, \"1 1\","},{"lineNumber":30,"author":{"gitID":"shanwpf"},"content":"                new UnapplyCommand(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, Optional.empty()));"},{"lineNumber":31,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":32,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":33,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":34,"author":{"gitID":"shanwpf"},"content":"    public void parse_invalidArgs_throwsParseException() {"},{"lineNumber":35,"author":{"gitID":"shanwpf"},"content":"        assertParseFailure(parser, \"a b pw/DEFAULT1\","},{"lineNumber":36,"author":{"gitID":"shanwpf"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnapplyCommand.MESSAGE_USAGE));"},{"lineNumber":37,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"shanwpf"},"content":"}"}],"authorContributionMap":{"shanwpf":23,"-":15}},{"path":"src/test/java/seedu/ptman/logic/parser/LogInAdminCommandParserTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CommandParserTestUtil.assertParseFailure;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CommandParserTestUtil.assertParseSuccess;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.LogInAdminCommand;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"koo1993"},"content":"//@@author koo1993"},{"lineNumber":13,"author":{"gitID":"koo1993"},"content":"public class LogInAdminCommandParserTest {"},{"lineNumber":14,"author":{"gitID":"koo1993"},"content":"    private LogInAdminCommandParser parser \u003d new LogInAdminCommandParser();"},{"lineNumber":15,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":16,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":17,"author":{"gitID":"koo1993"},"content":"    public void parse_invalidArg_throwsParseException() {"},{"lineNumber":18,"author":{"gitID":"koo1993"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,"},{"lineNumber":19,"author":{"gitID":"koo1993"},"content":"                LogInAdminCommand.MESSAGE_USAGE));"},{"lineNumber":20,"author":{"gitID":"koo1993"},"content":"        assertParseFailure(parser, \"log in\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,"},{"lineNumber":21,"author":{"gitID":"koo1993"},"content":"                LogInAdminCommand.MESSAGE_USAGE));"},{"lineNumber":22,"author":{"gitID":"koo1993"},"content":"        assertParseFailure(parser, \"login\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,"},{"lineNumber":23,"author":{"gitID":"koo1993"},"content":"                LogInAdminCommand.MESSAGE_USAGE));"},{"lineNumber":24,"author":{"gitID":"koo1993"},"content":"        assertParseFailure(parser, \"login pw\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,"},{"lineNumber":25,"author":{"gitID":"koo1993"},"content":"                LogInAdminCommand.MESSAGE_USAGE));"},{"lineNumber":26,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":28,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":29,"author":{"gitID":"koo1993"},"content":"    public void parse_validArgs_returnsFindCommand() {"},{"lineNumber":30,"author":{"gitID":"koo1993"},"content":"        // no leading and trailing whitespaces"},{"lineNumber":31,"author":{"gitID":"koo1993"},"content":"        LogInAdminCommand expectedFindCommand \u003d new LogInAdminCommand(new Password());"},{"lineNumber":32,"author":{"gitID":"koo1993"},"content":"        assertParseSuccess(parser, \"login pw/DEFAULT1\", expectedFindCommand);"},{"lineNumber":33,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":34,"author":{"gitID":"koo1993"},"content":"        // multiple whitespaces between keywords"},{"lineNumber":35,"author":{"gitID":"koo1993"},"content":"        assertParseSuccess(parser, \" \\n login \\n \\t pw/DEFAULT1  \\t\", expectedFindCommand);"},{"lineNumber":36,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":37,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":38,"author":{"gitID":"koo1993"},"content":"}"}],"authorContributionMap":{"koo1993":27,"-":11}},{"path":"src/test/java/seedu/ptman/logic/parser/DeleteShiftCommandParserTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CommandParserTestUtil.assertParseFailure;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CommandParserTestUtil.assertParseSuccess;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_FIRST_SHIFT;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.DeleteShiftCommand;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"shanwpf"},"content":"//@@author shanwpf"},{"lineNumber":13,"author":{"gitID":"shanwpf"},"content":"public class DeleteShiftCommandParserTest {"},{"lineNumber":14,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":15,"author":{"gitID":"shanwpf"},"content":"    private DeleteShiftCommandParser parser \u003d new DeleteShiftCommandParser();"},{"lineNumber":16,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":17,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"shanwpf"},"content":"    public void parse_validArgs_returnsDeleteShiftCommand() {"},{"lineNumber":19,"author":{"gitID":"shanwpf"},"content":"        assertParseSuccess(parser, \"1\", new DeleteShiftCommand(INDEX_FIRST_SHIFT));"},{"lineNumber":20,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":22,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":23,"author":{"gitID":"shanwpf"},"content":"    public void parse_invalidArgs_throwsParseException() {"},{"lineNumber":24,"author":{"gitID":"shanwpf"},"content":"        assertParseFailure(parser, \"a\","},{"lineNumber":25,"author":{"gitID":"shanwpf"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteShiftCommand.MESSAGE_USAGE));"},{"lineNumber":26,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"shanwpf"},"content":"}"}],"authorContributionMap":{"shanwpf":16,"-":11}},{"path":"src/test/java/seedu/ptman/logic/parser/ResetPasswordCommandParserTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CommandParserTestUtil.assertParseFailure;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CommandParserTestUtil.assertParseSuccess;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_FIRST_EMPLOYEE;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.ResetPasswordCommand;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"koo1993"},"content":"//@@author koo1993"},{"lineNumber":13,"author":{"gitID":"koo1993"},"content":"public class ResetPasswordCommandParserTest {"},{"lineNumber":14,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":15,"author":{"gitID":"koo1993"},"content":"    private ResetPasswordCommandParser parser \u003d new ResetPasswordCommandParser();"},{"lineNumber":16,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":17,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"koo1993"},"content":"    public void parse_invalidArgs_throwsParseException() {"},{"lineNumber":19,"author":{"gitID":"koo1993"},"content":"        // letters"},{"lineNumber":20,"author":{"gitID":"koo1993"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,"},{"lineNumber":21,"author":{"gitID":"koo1993"},"content":"                ResetPasswordCommand.MESSAGE_USAGE));"},{"lineNumber":22,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":23,"author":{"gitID":"koo1993"},"content":"        // no index and no field specified"},{"lineNumber":24,"author":{"gitID":"koo1993"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,"},{"lineNumber":25,"author":{"gitID":"koo1993"},"content":"                ResetPasswordCommand.MESSAGE_USAGE));"},{"lineNumber":26,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":27,"author":{"gitID":"koo1993"},"content":"        // no index and extra letters"},{"lineNumber":28,"author":{"gitID":"koo1993"},"content":"        assertParseFailure(parser, \"1 abc\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,"},{"lineNumber":29,"author":{"gitID":"koo1993"},"content":"                ResetPasswordCommand.MESSAGE_USAGE));"},{"lineNumber":30,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":31,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":32,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":33,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":34,"author":{"gitID":"koo1993"},"content":"    public void parse_validArgs_success() {"},{"lineNumber":35,"author":{"gitID":"koo1993"},"content":"        assertParseSuccess(parser, \" 1\","},{"lineNumber":36,"author":{"gitID":"koo1993"},"content":"                new ResetPasswordCommand(INDEX_FIRST_EMPLOYEE));"},{"lineNumber":37,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":38,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"koo1993"},"content":"}"}],"authorContributionMap":{"koo1993":28,"-":11}},{"path":"src/test/java/seedu/ptman/logic/parser/ChangeAdminPasswordCommandParserTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CommandParserTestUtil.assertParseFailure;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CommandParserTestUtil.assertParseSuccess;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"koo1993"},"content":"import seedu.ptman.logic.commands.ChangeAdminPasswordCommand;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"koo1993"},"content":"//@@author koo1993"},{"lineNumber":15,"author":{"gitID":"koo1993"},"content":"public class ChangeAdminPasswordCommandParserTest {"},{"lineNumber":16,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":17,"author":{"gitID":"koo1993"},"content":"    private ChangeAdminPasswordCommandParser parser \u003d new ChangeAdminPasswordCommandParser();"},{"lineNumber":18,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":19,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":20,"author":{"gitID":"koo1993"},"content":"    public void parse_invalidArgs_throwsParseException() {"},{"lineNumber":21,"author":{"gitID":"koo1993"},"content":"        // letters"},{"lineNumber":22,"author":{"gitID":"koo1993"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,"},{"lineNumber":23,"author":{"gitID":"koo1993"},"content":"                ChangeAdminPasswordCommand.MESSAGE_USAGE));"},{"lineNumber":24,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":25,"author":{"gitID":"koo1993"},"content":"        //no field specified"},{"lineNumber":26,"author":{"gitID":"koo1993"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,"},{"lineNumber":27,"author":{"gitID":"koo1993"},"content":"                ChangeAdminPasswordCommand.MESSAGE_USAGE));"},{"lineNumber":28,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":29,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":30,"author":{"gitID":"koo1993"},"content":"        // missing one confirm password"},{"lineNumber":31,"author":{"gitID":"koo1993"},"content":"        assertParseFailure(parser, \" pw/default1 pw/default1\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,"},{"lineNumber":32,"author":{"gitID":"koo1993"},"content":"                ChangeAdminPasswordCommand.MESSAGE_USAGE));"},{"lineNumber":33,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":34,"author":{"gitID":"koo1993"},"content":"        // new password that fulfill the 8 characters"},{"lineNumber":35,"author":{"gitID":"koo1993"},"content":"        assertParseFailure(parser, \" pw/default1 pw/newnot8 pw/newnot8\", Password.MESSAGE_PASSWORD_CONSTRAINTS);"},{"lineNumber":36,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":37,"author":{"gitID":"koo1993"},"content":"        // extra letters"},{"lineNumber":38,"author":{"gitID":"koo1993"},"content":"        assertParseFailure(parser, \" pw/default1 pw/default2 abc pw/default2  \", Password.MESSAGE_PASSWORD_CONSTRAINTS);"},{"lineNumber":39,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":40,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":41,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":42,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":43,"author":{"gitID":"koo1993"},"content":"    public void parse_validArgs_success() {"},{"lineNumber":44,"author":{"gitID":"koo1993"},"content":"        ArrayList\u003cString\u003e passwords \u003d new ArrayList\u003c\u003e();"},{"lineNumber":45,"author":{"gitID":"koo1993"},"content":"        passwords.add(\"default1\");"},{"lineNumber":46,"author":{"gitID":"koo1993"},"content":"        passwords.add(\"newpassword\");"},{"lineNumber":47,"author":{"gitID":"koo1993"},"content":"        passwords.add(\"newpassword\");"},{"lineNumber":48,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":49,"author":{"gitID":"koo1993"},"content":"        assertParseSuccess(parser, \" pw/default1 pw/newpassword pw/newpassword\","},{"lineNumber":50,"author":{"gitID":"koo1993"},"content":"                new ChangeAdminPasswordCommand(passwords));"},{"lineNumber":51,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":52,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":53,"author":{"gitID":"koo1993"},"content":"}"}],"authorContributionMap":{"koo1993":41,"-":12}},{"path":"src/test/java/seedu/ptman/logic/parser/AnnouncementCommandParserTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CommandParserTestUtil.assertParseFailure;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CommandParserTestUtil.assertParseSuccess;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.AnnouncementCommand;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.Announcement;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":12,"author":{"gitID":"SunBangjie"},"content":"public class AnnouncementCommandParserTest {"},{"lineNumber":13,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":14,"author":{"gitID":"SunBangjie"},"content":"    private AnnouncementCommandParser parser \u003d new AnnouncementCommandParser();"},{"lineNumber":15,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":16,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":17,"author":{"gitID":"SunBangjie"},"content":"    public void parse_emptyArg_throwsParseException() {"},{"lineNumber":18,"author":{"gitID":"SunBangjie"},"content":"        assertParseFailure(parser, \"     \", AnnouncementCommand.MESSAGE_EDIT_OUTLET_FAILURE);"},{"lineNumber":19,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":20,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":21,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":22,"author":{"gitID":"SunBangjie"},"content":"    public void parse_validArgs_returnsAnnouncementCommand() {"},{"lineNumber":23,"author":{"gitID":"SunBangjie"},"content":"        AnnouncementCommand expectedCommand \u003d new AnnouncementCommand(new Announcement(\"new announcement\"));"},{"lineNumber":24,"author":{"gitID":"SunBangjie"},"content":"        assertParseSuccess(parser, \"new announcement\", expectedCommand);"},{"lineNumber":25,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":10,"SunBangjie":16}},{"path":"src/test/java/seedu/ptman/logic/parser/ChangePasswordCommandParserTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CommandParserTestUtil.assertParseFailure;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CommandParserTestUtil.assertParseSuccess;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_FIRST_EMPLOYEE;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.ChangePasswordCommand;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"koo1993"},"content":"//@@author koo1993"},{"lineNumber":16,"author":{"gitID":"koo1993"},"content":"public class ChangePasswordCommandParserTest {"},{"lineNumber":17,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":18,"author":{"gitID":"koo1993"},"content":"    private ChangePasswordCommandParser parser \u003d new ChangePasswordCommandParser();"},{"lineNumber":19,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":20,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":21,"author":{"gitID":"koo1993"},"content":"    public void parse_invalidArgs_throwsParseException() {"},{"lineNumber":22,"author":{"gitID":"koo1993"},"content":"        // letters"},{"lineNumber":23,"author":{"gitID":"koo1993"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,"},{"lineNumber":24,"author":{"gitID":"koo1993"},"content":"                ChangePasswordCommand.MESSAGE_USAGE));"},{"lineNumber":25,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":26,"author":{"gitID":"koo1993"},"content":"        // no index and no field specified"},{"lineNumber":27,"author":{"gitID":"koo1993"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,"},{"lineNumber":28,"author":{"gitID":"koo1993"},"content":"                ChangePasswordCommand.MESSAGE_USAGE));"},{"lineNumber":29,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":30,"author":{"gitID":"koo1993"},"content":"        // no index and extra letters"},{"lineNumber":31,"author":{"gitID":"koo1993"},"content":"        assertParseFailure(parser, \"1 abc\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,"},{"lineNumber":32,"author":{"gitID":"koo1993"},"content":"                ChangePasswordCommand.MESSAGE_USAGE));"},{"lineNumber":33,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":34,"author":{"gitID":"koo1993"},"content":"        // missing one confirm password"},{"lineNumber":35,"author":{"gitID":"koo1993"},"content":"        assertParseFailure(parser, \"1 pw/default1 pw/default1\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,"},{"lineNumber":36,"author":{"gitID":"koo1993"},"content":"                ChangePasswordCommand.MESSAGE_USAGE));"},{"lineNumber":37,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":38,"author":{"gitID":"koo1993"},"content":"        // new password that fulfill the 8 characters"},{"lineNumber":39,"author":{"gitID":"koo1993"},"content":"        assertParseFailure(parser, \"1 pw/default1 pw/newnot8 pw/newnot8\", Password.MESSAGE_PASSWORD_CONSTRAINTS);"},{"lineNumber":40,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":41,"author":{"gitID":"koo1993"},"content":"        // random character inbetween prefix"},{"lineNumber":42,"author":{"gitID":"koo1993"},"content":"        assertParseFailure(parser, \"1 pw/default1 pw/default2 ab1 pw/default2\", Password.MESSAGE_PASSWORD_CONSTRAINTS);"},{"lineNumber":43,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":45,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"koo1993"},"content":"    public void parse_validArgs_success() {"},{"lineNumber":47,"author":{"gitID":"koo1993"},"content":"        ArrayList\u003cString\u003e passwords \u003d new ArrayList\u003c\u003e();"},{"lineNumber":48,"author":{"gitID":"koo1993"},"content":"        passwords.add(\"default1\");"},{"lineNumber":49,"author":{"gitID":"koo1993"},"content":"        passwords.add(\"newpassword\");"},{"lineNumber":50,"author":{"gitID":"koo1993"},"content":"        passwords.add(\"newpassword\");"},{"lineNumber":51,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":52,"author":{"gitID":"koo1993"},"content":"        assertParseSuccess(parser, \" 1 pw/default1 pw/newpassword pw/newpassword\","},{"lineNumber":53,"author":{"gitID":"koo1993"},"content":"                new ChangePasswordCommand(INDEX_FIRST_EMPLOYEE, passwords));"},{"lineNumber":54,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":55,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"koo1993"},"content":"}"}],"authorContributionMap":{"koo1993":42,"-":14}},{"path":"src/test/java/seedu/ptman/logic/parser/EditOutletCommandParserTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.INVALID_OPERATING_HOURS_DESC;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.INVALID_OUTLET_CONTACT_DESC;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.INVALID_OUTLET_EMAIL_DESC;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.INVALID_OUTLET_NAME_DESC;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.OPERATING_HOURS_DESC;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.OUTLET_CONTACT_DESC;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.OUTLET_EMAIL_DESC;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.OUTLET_NAME_DESC;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.VALID_OPERATING_HOURS;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.VALID_OUTLET_CONTACT;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.VALID_OUTLET_EMAIL;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.VALID_OUTLET_NAME;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CommandParserTestUtil.assertParseFailure;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CommandParserTestUtil.assertParseSuccess;"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.EditOutletCommand;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OperatingHours;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletContact;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletEmail;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletName;"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":27,"author":{"gitID":"SunBangjie"},"content":"public class EditOutletCommandParserTest {"},{"lineNumber":28,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":29,"author":{"gitID":"SunBangjie"},"content":"    private EditOutletCommandParser parser \u003d new EditOutletCommandParser();"},{"lineNumber":30,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":31,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":32,"author":{"gitID":"SunBangjie"},"content":"    public void parse_invalidValue_failure() {"},{"lineNumber":33,"author":{"gitID":"SunBangjie"},"content":"        String commandInvalidName \u003d EditOutletCommand.COMMAND_WORD + INVALID_OUTLET_NAME_DESC;"},{"lineNumber":34,"author":{"gitID":"SunBangjie"},"content":"        assertParseFailure(parser, commandInvalidName, OutletName.MESSAGE_NAME_CONSTRAINTS);"},{"lineNumber":35,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":36,"author":{"gitID":"SunBangjie"},"content":"        String commandInvalidOperatingHours \u003d EditOutletCommand.COMMAND_WORD + INVALID_OPERATING_HOURS_DESC;"},{"lineNumber":37,"author":{"gitID":"SunBangjie"},"content":"        assertParseFailure(parser, commandInvalidOperatingHours,"},{"lineNumber":38,"author":{"gitID":"SunBangjie"},"content":"                OperatingHours.MESSAGE_OPERATING_HOUR_CONSTRAINTS);"},{"lineNumber":39,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":40,"author":{"gitID":"SunBangjie"},"content":"        String commandInvalidOutletContact \u003d EditOutletCommand.COMMAND_WORD + INVALID_OUTLET_CONTACT_DESC;"},{"lineNumber":41,"author":{"gitID":"SunBangjie"},"content":"        assertParseFailure(parser, commandInvalidOutletContact, OutletContact.MESSAGE_OUTLET_CONTACT_CONSTRAINTS);"},{"lineNumber":42,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":43,"author":{"gitID":"SunBangjie"},"content":"        String commandInvalidOutletEmail \u003d EditOutletCommand.COMMAND_WORD + INVALID_OUTLET_EMAIL_DESC;"},{"lineNumber":44,"author":{"gitID":"SunBangjie"},"content":"        assertParseFailure(parser, commandInvalidOutletEmail, OutletEmail.MESSAGE_OUTLET_EMAIL_CONSTRAINTS);"},{"lineNumber":45,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":47,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":48,"author":{"gitID":"SunBangjie"},"content":"    public void parse_allFieldsValid_success() {"},{"lineNumber":49,"author":{"gitID":"SunBangjie"},"content":"        String userInput \u003d EditOutletCommand.COMMAND_WORD"},{"lineNumber":50,"author":{"gitID":"SunBangjie"},"content":"                + OUTLET_NAME_DESC + OPERATING_HOURS_DESC + OUTLET_CONTACT_DESC + OUTLET_EMAIL_DESC;"},{"lineNumber":51,"author":{"gitID":"SunBangjie"},"content":"        OutletName outletName \u003d new OutletName(VALID_OUTLET_NAME);"},{"lineNumber":52,"author":{"gitID":"SunBangjie"},"content":"        OperatingHours operatingHours \u003d new OperatingHours(VALID_OPERATING_HOURS);"},{"lineNumber":53,"author":{"gitID":"SunBangjie"},"content":"        OutletContact outletContact \u003d new OutletContact(VALID_OUTLET_CONTACT);"},{"lineNumber":54,"author":{"gitID":"SunBangjie"},"content":"        OutletEmail outletEmail \u003d new OutletEmail(VALID_OUTLET_EMAIL);"},{"lineNumber":55,"author":{"gitID":"SunBangjie"},"content":"        EditOutletCommand expectedCommand \u003d new EditOutletCommand(outletName, operatingHours,"},{"lineNumber":56,"author":{"gitID":"SunBangjie"},"content":"                outletContact, outletEmail);"},{"lineNumber":57,"author":{"gitID":"SunBangjie"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);"},{"lineNumber":58,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":59,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":25,"SunBangjie":34}},{"path":"src/test/java/seedu/ptman/logic/parser/AddSalaryCommandParserTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.INVALID_SALARY_DESC;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CommandParserTestUtil.assertParseFailure;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CommandParserTestUtil.assertParseSuccess;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_FIRST_EMPLOYEE;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.AddSalaryCommand;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Salary;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"koo1993"},"content":"//@@author koo1993"},{"lineNumber":16,"author":{"gitID":"koo1993"},"content":"public class AddSalaryCommandParserTest {"},{"lineNumber":17,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":18,"author":{"gitID":"koo1993"},"content":"    private AddSalaryCommandParser parser \u003d new AddSalaryCommandParser();"},{"lineNumber":19,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":20,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":21,"author":{"gitID":"koo1993"},"content":"    public void parse_invalidArgs_throwsParseException() {"},{"lineNumber":22,"author":{"gitID":"koo1993"},"content":"        //alphabet index"},{"lineNumber":23,"author":{"gitID":"koo1993"},"content":"        assertParseFailure(parser, \"a \" + INVALID_SALARY_DESC, MESSAGE_INVALID_INDEX);"},{"lineNumber":24,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":25,"author":{"gitID":"koo1993"},"content":"        //no index"},{"lineNumber":26,"author":{"gitID":"koo1993"},"content":"        assertParseFailure(parser, \"s/123\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,"},{"lineNumber":27,"author":{"gitID":"koo1993"},"content":"                AddSalaryCommand.MESSAGE_USAGE));"},{"lineNumber":28,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":29,"author":{"gitID":"koo1993"},"content":"        //no salary prefix"},{"lineNumber":30,"author":{"gitID":"koo1993"},"content":"        assertParseFailure(parser, \"1 123\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,"},{"lineNumber":31,"author":{"gitID":"koo1993"},"content":"                AddSalaryCommand.MESSAGE_USAGE));"},{"lineNumber":32,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":33,"author":{"gitID":"koo1993"},"content":"        //wrong salary input"},{"lineNumber":34,"author":{"gitID":"koo1993"},"content":"        assertParseFailure(parser, \"1 s/abc\", Salary.MESSAGE_SALARY_CONSTRAINTS);"},{"lineNumber":35,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":36,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":37,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":38,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":39,"author":{"gitID":"koo1993"},"content":"    public void parse_validArgs_success() {"},{"lineNumber":40,"author":{"gitID":"koo1993"},"content":"        Salary salary \u003d new Salary(\"100\");"},{"lineNumber":41,"author":{"gitID":"koo1993"},"content":"        assertParseSuccess(parser, \" 1 s/100\", new AddSalaryCommand(INDEX_FIRST_EMPLOYEE, salary));"},{"lineNumber":42,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":43,"author":{"gitID":"koo1993"},"content":"}"}],"authorContributionMap":{"koo1993":29,"-":14}},{"path":"src/test/java/seedu/ptman/logic/parser/ViewShiftCommandParserTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CommandParserTestUtil.assertParseFailure;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CommandParserTestUtil.assertParseSuccess;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_FIRST_SHIFT;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.ViewShiftCommand;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"hzxcaryn"},"content":"//@@author hzxcaryn"},{"lineNumber":13,"author":{"gitID":"hzxcaryn"},"content":"public class ViewShiftCommandParserTest {"},{"lineNumber":14,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":15,"author":{"gitID":"hzxcaryn"},"content":"    private ViewShiftCommandParser parser \u003d new ViewShiftCommandParser();"},{"lineNumber":16,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":17,"author":{"gitID":"hzxcaryn"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"hzxcaryn"},"content":"    public void parse_validArgs_returnsSelectCommand() {"},{"lineNumber":19,"author":{"gitID":"hzxcaryn"},"content":"        assertParseSuccess(parser, \"1\", new ViewShiftCommand(INDEX_FIRST_SHIFT));"},{"lineNumber":20,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":22,"author":{"gitID":"hzxcaryn"},"content":"    @Test"},{"lineNumber":23,"author":{"gitID":"hzxcaryn"},"content":"    public void parse_invalidArgs_throwsParseException() {"},{"lineNumber":24,"author":{"gitID":"hzxcaryn"},"content":"        assertParseFailure(parser, \"a\","},{"lineNumber":25,"author":{"gitID":"hzxcaryn"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewShiftCommand.MESSAGE_USAGE));"},{"lineNumber":26,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"hzxcaryn"},"content":"}"}],"authorContributionMap":{"hzxcaryn":16,"-":11}},{"path":"src/test/java/seedu/ptman/logic/parser/DeleteCommandParserTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CommandParserTestUtil.assertParseFailure;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CommandParserTestUtil.assertParseSuccess;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_FIRST_EMPLOYEE;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.DeleteCommand;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"koo1993"},"content":"//@@author koo1993"},{"lineNumber":13,"author":{"gitID":"koo1993"},"content":"public class DeleteCommandParserTest {"},{"lineNumber":14,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":15,"author":{"gitID":"koo1993"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();"},{"lineNumber":16,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":17,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"koo1993"},"content":"    public void parse_validArgs_returnsDeleteCommand() {"},{"lineNumber":19,"author":{"gitID":"koo1993"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_EMPLOYEE));"},{"lineNumber":20,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":22,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":23,"author":{"gitID":"koo1993"},"content":"    public void parse_invalidArgs_throwsParseException() {"},{"lineNumber":24,"author":{"gitID":"koo1993"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));"},{"lineNumber":25,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"koo1993"},"content":"}"}],"authorContributionMap":{"koo1993":15,"-":11}},{"path":"src/test/java/seedu/ptman/logic/parser/ParserUtilTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_FIRST_EMPLOYEE;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import java.util.HashSet;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import java.util.Set;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.exceptions.IllegalValueException;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Address;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Email;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Name;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Phone;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OperatingHours;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletContact;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletName;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Capacity;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Time;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"import seedu.ptman.model.tag.Tag;"},{"lineNumber":30,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.Assert;"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"public class ParserUtilTest {"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";"},{"lineNumber":34,"author":{"gitID":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";"},{"lineNumber":35,"author":{"gitID":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";"},{"lineNumber":36,"author":{"gitID":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    private static final String INVALID_OUTLET_NAME \u003d \"Awesome@Outlet\";"},{"lineNumber":39,"author":{"gitID":"-"},"content":"    private static final String INVALID_OUTLET_CONTACT \u003d \"+1234\";"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    private static final String INVALID_OPERATING_HOURS \u003d \"09:00/18:00\";"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    private static final String INVALID_START_END_TIME \u003d \"2000-1000\";"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    private static final String INVALID_TIME \u003d \"1pm\";"},{"lineNumber":43,"author":{"gitID":"-"},"content":"    private static final String INVALID_CAPACITY \u003d \"one\";"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";"},{"lineNumber":45,"author":{"gitID":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";"},{"lineNumber":46,"author":{"gitID":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";"},{"lineNumber":48,"author":{"gitID":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";"},{"lineNumber":49,"author":{"gitID":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";"},{"lineNumber":50,"author":{"gitID":"-"},"content":"    private static final String VALID_OUTLET_NAME \u003d \"AwesomeOutlet\";"},{"lineNumber":51,"author":{"gitID":"-"},"content":"    private static final String VALID_OUTLET_CONTACT \u003d \"91234567\";"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    private static final String VALID_OPERATING_HOURS \u003d \"0900-1800\";"},{"lineNumber":53,"author":{"gitID":"-"},"content":"    private static final String VALID_TIME \u003d \"1300\";"},{"lineNumber":54,"author":{"gitID":"-"},"content":"    private static final String VALID_CAPACITY \u003d \"10\";"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";"},{"lineNumber":56,"author":{"gitID":"-"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":58,"author":{"gitID":"-"},"content":"    public final ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":59,"author":{"gitID":"-"},"content":""},{"lineNumber":60,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":61,"author":{"gitID":"-"},"content":"    public void parseIndex_invalidInput_throwsIllegalValueException() throws Exception {"},{"lineNumber":62,"author":{"gitID":"-"},"content":"        thrown.expect(IllegalValueException.class);"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        ParserUtil.parseIndex(\"10 a\");"},{"lineNumber":64,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitID":"-"},"content":""},{"lineNumber":66,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":67,"author":{"gitID":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsIllegalValueException() throws Exception {"},{"lineNumber":68,"author":{"gitID":"-"},"content":"        thrown.expect(IllegalValueException.class);"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        thrown.expectMessage(MESSAGE_INVALID_INDEX);"},{"lineNumber":70,"author":{"gitID":"-"},"content":"        ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1));"},{"lineNumber":71,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":72,"author":{"gitID":"-"},"content":""},{"lineNumber":73,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":74,"author":{"gitID":"-"},"content":"    public void parseSecondIndex_insufficientArgs_throwsIllegalValueException() throws IllegalValueException {"},{"lineNumber":75,"author":{"gitID":"-"},"content":"        thrown.expect(IllegalValueException.class);"},{"lineNumber":76,"author":{"gitID":"-"},"content":"        thrown.expectMessage(MESSAGE_INVALID_INDEX);"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        ParserUtil.parseSecondIndex(\"1\");"},{"lineNumber":78,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":79,"author":{"gitID":"-"},"content":""},{"lineNumber":80,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":81,"author":{"gitID":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {"},{"lineNumber":82,"author":{"gitID":"-"},"content":"        // No whitespaces"},{"lineNumber":83,"author":{"gitID":"-"},"content":"        assertEquals(INDEX_FIRST_EMPLOYEE, ParserUtil.parseIndex(\"1\"));"},{"lineNumber":84,"author":{"gitID":"-"},"content":""},{"lineNumber":85,"author":{"gitID":"-"},"content":"        // Leading and trailing whitespaces"},{"lineNumber":86,"author":{"gitID":"-"},"content":"        assertEquals(INDEX_FIRST_EMPLOYEE, ParserUtil.parseIndex(\"  1  \"));"},{"lineNumber":87,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":88,"author":{"gitID":"-"},"content":""},{"lineNumber":89,"author":{"gitID":"shanwpf"},"content":"    //@@author shanwpf"},{"lineNumber":90,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":91,"author":{"gitID":"shanwpf"},"content":"    public void parseTime_null_throwsNullPointerException() {"},{"lineNumber":92,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTime((String) null));"},{"lineNumber":93,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTime((Optional\u003cString\u003e) null));"},{"lineNumber":94,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":95,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":96,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":97,"author":{"gitID":"shanwpf"},"content":"    public void parseTime_invalidValue_throwsIllegalValueException() {"},{"lineNumber":98,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(IllegalValueException.class, () -\u003e ParserUtil.parseTime(INVALID_TIME));"},{"lineNumber":99,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(IllegalValueException.class, () -\u003e ParserUtil.parseTime(Optional.of(INVALID_TIME)));"},{"lineNumber":100,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":101,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":102,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":103,"author":{"gitID":"shanwpf"},"content":"    public void parseTime_optionalEmpty_returnsOptionalEmpty() throws Exception {"},{"lineNumber":104,"author":{"gitID":"shanwpf"},"content":"        assertFalse(ParserUtil.parseTime(Optional.empty()).isPresent());"},{"lineNumber":105,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":106,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":107,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":108,"author":{"gitID":"shanwpf"},"content":"    public void parseTime_validValueWithoutWhitespace_returnsTime() throws Exception {"},{"lineNumber":109,"author":{"gitID":"shanwpf"},"content":"        Time expectedTime \u003d new Time(VALID_TIME);"},{"lineNumber":110,"author":{"gitID":"shanwpf"},"content":"        assertEquals(expectedTime, ParserUtil.parseTime(VALID_TIME));"},{"lineNumber":111,"author":{"gitID":"shanwpf"},"content":"        assertEquals(Optional.of(expectedTime), ParserUtil.parseTime(Optional.of(VALID_TIME)));"},{"lineNumber":112,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":113,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":114,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":115,"author":{"gitID":"shanwpf"},"content":"    public void parseTime_validValueWithWhitespace_returnsTrimmedTime() throws Exception {"},{"lineNumber":116,"author":{"gitID":"shanwpf"},"content":"        String timeWithWhitespace \u003d WHITESPACE + VALID_TIME + WHITESPACE;"},{"lineNumber":117,"author":{"gitID":"shanwpf"},"content":"        Time expectedTime \u003d new Time(VALID_TIME);"},{"lineNumber":118,"author":{"gitID":"shanwpf"},"content":"        assertEquals(expectedTime, ParserUtil.parseTime(timeWithWhitespace));"},{"lineNumber":119,"author":{"gitID":"shanwpf"},"content":"        assertEquals(Optional.of(expectedTime), ParserUtil.parseTime(Optional.of(timeWithWhitespace)));"},{"lineNumber":120,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":121,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":122,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":123,"author":{"gitID":"shanwpf"},"content":"    public void parseCapacity_null_throwsNullPointerException() {"},{"lineNumber":124,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseCapacity((String) null));"},{"lineNumber":125,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseCapacity((Optional\u003cString\u003e) null));"},{"lineNumber":126,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":127,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":128,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":129,"author":{"gitID":"shanwpf"},"content":"    public void parseCapacity_invalidValue_throwsIllegalValueException() {"},{"lineNumber":130,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(IllegalValueException.class, () -\u003e ParserUtil.parseCapacity(INVALID_CAPACITY));"},{"lineNumber":131,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(IllegalValueException.class, () -\u003e ParserUtil.parseCapacity(Optional.of(INVALID_CAPACITY)));"},{"lineNumber":132,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":133,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":134,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":135,"author":{"gitID":"shanwpf"},"content":"    public void parseCapacity_optionalEmpty_returnsOptionalEmpty() throws Exception {"},{"lineNumber":136,"author":{"gitID":"shanwpf"},"content":"        assertFalse(ParserUtil.parseCapacity(Optional.empty()).isPresent());"},{"lineNumber":137,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":138,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":139,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":140,"author":{"gitID":"shanwpf"},"content":"    public void parseCapacity_validValueWithoutWhitespace_returnsCapacity() throws Exception {"},{"lineNumber":141,"author":{"gitID":"shanwpf"},"content":"        Capacity expectedCapacity \u003d new Capacity(VALID_CAPACITY);"},{"lineNumber":142,"author":{"gitID":"shanwpf"},"content":"        assertEquals(expectedCapacity, ParserUtil.parseCapacity(VALID_CAPACITY));"},{"lineNumber":143,"author":{"gitID":"shanwpf"},"content":"        assertEquals(Optional.of(expectedCapacity), ParserUtil.parseCapacity(Optional.of(VALID_CAPACITY)));"},{"lineNumber":144,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":145,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":146,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":147,"author":{"gitID":"shanwpf"},"content":"    public void parseCapacity_validValueWithWhitespace_returnsTrimmedCapacity() throws Exception {"},{"lineNumber":148,"author":{"gitID":"shanwpf"},"content":"        String capacityWithWhitespace \u003d WHITESPACE + VALID_CAPACITY + WHITESPACE;"},{"lineNumber":149,"author":{"gitID":"shanwpf"},"content":"        Capacity expectedCapacity \u003d new Capacity(VALID_CAPACITY);"},{"lineNumber":150,"author":{"gitID":"shanwpf"},"content":"        assertEquals(expectedCapacity, ParserUtil.parseCapacity(capacityWithWhitespace));"},{"lineNumber":151,"author":{"gitID":"shanwpf"},"content":"        assertEquals(Optional.of(expectedCapacity), ParserUtil.parseCapacity(Optional.of(capacityWithWhitespace)));"},{"lineNumber":152,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":153,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":154,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":155,"author":{"gitID":"shanwpf"},"content":"    public void parseSecondIndex_invalidValue_throwsIllegalValueException() {"},{"lineNumber":156,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(IllegalValueException.class, () -\u003e ParserUtil.parseSecondIndex(\"1 a\"));"},{"lineNumber":157,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(IllegalValueException.class, () -\u003e ParserUtil.parseSecondIndex(\"1 -1\"));"},{"lineNumber":158,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":159,"author":{"gitID":"shanwpf"},"content":"    //@@author"},{"lineNumber":160,"author":{"gitID":"-"},"content":""},{"lineNumber":161,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":162,"author":{"gitID":"-"},"content":"    public void parseName_null_throwsNullPointerException() {"},{"lineNumber":163,"author":{"gitID":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));"},{"lineNumber":164,"author":{"gitID":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((Optional\u003cString\u003e) null));"},{"lineNumber":165,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":166,"author":{"gitID":"-"},"content":""},{"lineNumber":167,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":168,"author":{"gitID":"-"},"content":"    public void parseName_invalidValue_throwsIllegalValueException() {"},{"lineNumber":169,"author":{"gitID":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));"},{"lineNumber":170,"author":{"gitID":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, () -\u003e ParserUtil.parseName(Optional.of(INVALID_NAME)));"},{"lineNumber":171,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":172,"author":{"gitID":"-"},"content":""},{"lineNumber":173,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":174,"author":{"gitID":"-"},"content":"    public void parseName_optionalEmpty_returnsOptionalEmpty() throws Exception {"},{"lineNumber":175,"author":{"gitID":"-"},"content":"        assertFalse(ParserUtil.parseName(Optional.empty()).isPresent());"},{"lineNumber":176,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":177,"author":{"gitID":"-"},"content":""},{"lineNumber":178,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":179,"author":{"gitID":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {"},{"lineNumber":180,"author":{"gitID":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);"},{"lineNumber":181,"author":{"gitID":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));"},{"lineNumber":182,"author":{"gitID":"-"},"content":"        assertEquals(Optional.of(expectedName), ParserUtil.parseName(Optional.of(VALID_NAME)));"},{"lineNumber":183,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":184,"author":{"gitID":"-"},"content":""},{"lineNumber":185,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":186,"author":{"gitID":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {"},{"lineNumber":187,"author":{"gitID":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;"},{"lineNumber":188,"author":{"gitID":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);"},{"lineNumber":189,"author":{"gitID":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));"},{"lineNumber":190,"author":{"gitID":"-"},"content":"        assertEquals(Optional.of(expectedName), ParserUtil.parseName(Optional.of(nameWithWhitespace)));"},{"lineNumber":191,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":192,"author":{"gitID":"-"},"content":""},{"lineNumber":193,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":194,"author":{"gitID":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {"},{"lineNumber":195,"author":{"gitID":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));"},{"lineNumber":196,"author":{"gitID":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((Optional\u003cString\u003e) null));"},{"lineNumber":197,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":198,"author":{"gitID":"-"},"content":""},{"lineNumber":199,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":200,"author":{"gitID":"-"},"content":"    public void parsePhone_invalidValue_throwsIllegalValueException() {"},{"lineNumber":201,"author":{"gitID":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));"},{"lineNumber":202,"author":{"gitID":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, () -\u003e ParserUtil.parsePhone(Optional.of(INVALID_PHONE)));"},{"lineNumber":203,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":204,"author":{"gitID":"-"},"content":""},{"lineNumber":205,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":206,"author":{"gitID":"-"},"content":"    public void parsePhone_optionalEmpty_returnsOptionalEmpty() throws Exception {"},{"lineNumber":207,"author":{"gitID":"-"},"content":"        assertFalse(ParserUtil.parsePhone(Optional.empty()).isPresent());"},{"lineNumber":208,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":209,"author":{"gitID":"-"},"content":""},{"lineNumber":210,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":211,"author":{"gitID":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {"},{"lineNumber":212,"author":{"gitID":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);"},{"lineNumber":213,"author":{"gitID":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));"},{"lineNumber":214,"author":{"gitID":"-"},"content":"        assertEquals(Optional.of(expectedPhone), ParserUtil.parsePhone(Optional.of(VALID_PHONE)));"},{"lineNumber":215,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":216,"author":{"gitID":"-"},"content":""},{"lineNumber":217,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":218,"author":{"gitID":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {"},{"lineNumber":219,"author":{"gitID":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;"},{"lineNumber":220,"author":{"gitID":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);"},{"lineNumber":221,"author":{"gitID":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));"},{"lineNumber":222,"author":{"gitID":"-"},"content":"        assertEquals(Optional.of(expectedPhone), ParserUtil.parsePhone(Optional.of(phoneWithWhitespace)));"},{"lineNumber":223,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":224,"author":{"gitID":"-"},"content":""},{"lineNumber":225,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":226,"author":{"gitID":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {"},{"lineNumber":227,"author":{"gitID":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));"},{"lineNumber":228,"author":{"gitID":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((Optional\u003cString\u003e) null));"},{"lineNumber":229,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":230,"author":{"gitID":"-"},"content":""},{"lineNumber":231,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":232,"author":{"gitID":"-"},"content":"    public void parseAddress_invalidValue_throwsIllegalValueException() {"},{"lineNumber":233,"author":{"gitID":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));"},{"lineNumber":234,"author":{"gitID":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, () -\u003e ParserUtil.parseAddress(Optional.of(INVALID_ADDRESS)));"},{"lineNumber":235,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":236,"author":{"gitID":"-"},"content":""},{"lineNumber":237,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":238,"author":{"gitID":"-"},"content":"    public void parseAddress_optionalEmpty_returnsOptionalEmpty() throws Exception {"},{"lineNumber":239,"author":{"gitID":"-"},"content":"        assertFalse(ParserUtil.parseAddress(Optional.empty()).isPresent());"},{"lineNumber":240,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":241,"author":{"gitID":"-"},"content":""},{"lineNumber":242,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":243,"author":{"gitID":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {"},{"lineNumber":244,"author":{"gitID":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);"},{"lineNumber":245,"author":{"gitID":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));"},{"lineNumber":246,"author":{"gitID":"-"},"content":"        assertEquals(Optional.of(expectedAddress), ParserUtil.parseAddress(Optional.of(VALID_ADDRESS)));"},{"lineNumber":247,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":248,"author":{"gitID":"-"},"content":""},{"lineNumber":249,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":250,"author":{"gitID":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {"},{"lineNumber":251,"author":{"gitID":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;"},{"lineNumber":252,"author":{"gitID":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);"},{"lineNumber":253,"author":{"gitID":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));"},{"lineNumber":254,"author":{"gitID":"-"},"content":"        assertEquals(Optional.of(expectedAddress), ParserUtil.parseAddress(Optional.of(addressWithWhitespace)));"},{"lineNumber":255,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":256,"author":{"gitID":"-"},"content":""},{"lineNumber":257,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":258,"author":{"gitID":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {"},{"lineNumber":259,"author":{"gitID":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));"},{"lineNumber":260,"author":{"gitID":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((Optional\u003cString\u003e) null));"},{"lineNumber":261,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":262,"author":{"gitID":"-"},"content":""},{"lineNumber":263,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":264,"author":{"gitID":"-"},"content":"    public void parseEmail_invalidValue_throwsIllegalValueException() {"},{"lineNumber":265,"author":{"gitID":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));"},{"lineNumber":266,"author":{"gitID":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, () -\u003e ParserUtil.parseEmail(Optional.of(INVALID_EMAIL)));"},{"lineNumber":267,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":268,"author":{"gitID":"-"},"content":""},{"lineNumber":269,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":270,"author":{"gitID":"-"},"content":"    public void parseEmail_optionalEmpty_returnsOptionalEmpty() throws Exception {"},{"lineNumber":271,"author":{"gitID":"-"},"content":"        assertFalse(ParserUtil.parseEmail(Optional.empty()).isPresent());"},{"lineNumber":272,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":273,"author":{"gitID":"-"},"content":""},{"lineNumber":274,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":275,"author":{"gitID":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {"},{"lineNumber":276,"author":{"gitID":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);"},{"lineNumber":277,"author":{"gitID":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));"},{"lineNumber":278,"author":{"gitID":"-"},"content":"        assertEquals(Optional.of(expectedEmail), ParserUtil.parseEmail(Optional.of(VALID_EMAIL)));"},{"lineNumber":279,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":280,"author":{"gitID":"-"},"content":""},{"lineNumber":281,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":282,"author":{"gitID":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {"},{"lineNumber":283,"author":{"gitID":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;"},{"lineNumber":284,"author":{"gitID":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);"},{"lineNumber":285,"author":{"gitID":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));"},{"lineNumber":286,"author":{"gitID":"-"},"content":"        assertEquals(Optional.of(expectedEmail), ParserUtil.parseEmail(Optional.of(emailWithWhitespace)));"},{"lineNumber":287,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":288,"author":{"gitID":"-"},"content":""},{"lineNumber":289,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":290,"author":{"gitID":"-"},"content":"    public void parseTag_null_throwsNullPointerException() throws Exception {"},{"lineNumber":291,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":292,"author":{"gitID":"-"},"content":"        ParserUtil.parseTag(null);"},{"lineNumber":293,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":294,"author":{"gitID":"-"},"content":""},{"lineNumber":295,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":296,"author":{"gitID":"-"},"content":"    public void parseTag_invalidValue_throwsIllegalValueException() throws Exception {"},{"lineNumber":297,"author":{"gitID":"-"},"content":"        thrown.expect(IllegalValueException.class);"},{"lineNumber":298,"author":{"gitID":"-"},"content":"        ParserUtil.parseTag(INVALID_TAG);"},{"lineNumber":299,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":300,"author":{"gitID":"-"},"content":""},{"lineNumber":301,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":302,"author":{"gitID":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {"},{"lineNumber":303,"author":{"gitID":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);"},{"lineNumber":304,"author":{"gitID":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));"},{"lineNumber":305,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":306,"author":{"gitID":"-"},"content":""},{"lineNumber":307,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":308,"author":{"gitID":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {"},{"lineNumber":309,"author":{"gitID":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;"},{"lineNumber":310,"author":{"gitID":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);"},{"lineNumber":311,"author":{"gitID":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));"},{"lineNumber":312,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":313,"author":{"gitID":"-"},"content":""},{"lineNumber":314,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":315,"author":{"gitID":"-"},"content":"    public void parseTags_null_throwsNullPointerException() throws Exception {"},{"lineNumber":316,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":317,"author":{"gitID":"-"},"content":"        ParserUtil.parseTags(null);"},{"lineNumber":318,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":319,"author":{"gitID":"-"},"content":""},{"lineNumber":320,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":321,"author":{"gitID":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsIllegalValueException() throws Exception {"},{"lineNumber":322,"author":{"gitID":"-"},"content":"        thrown.expect(IllegalValueException.class);"},{"lineNumber":323,"author":{"gitID":"-"},"content":"        ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG));"},{"lineNumber":324,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":325,"author":{"gitID":"-"},"content":""},{"lineNumber":326,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":327,"author":{"gitID":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {"},{"lineNumber":328,"author":{"gitID":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());"},{"lineNumber":329,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":330,"author":{"gitID":"-"},"content":""},{"lineNumber":331,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":332,"author":{"gitID":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {"},{"lineNumber":333,"author":{"gitID":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));"},{"lineNumber":334,"author":{"gitID":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));"},{"lineNumber":335,"author":{"gitID":"-"},"content":""},{"lineNumber":336,"author":{"gitID":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);"},{"lineNumber":337,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":338,"author":{"gitID":"-"},"content":""},{"lineNumber":339,"author":{"gitID":"SunBangjie"},"content":"    //@@author SunBangjie"},{"lineNumber":340,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":341,"author":{"gitID":"SunBangjie"},"content":"    public void parseOutletName_null_throwsNullPointerException() {"},{"lineNumber":342,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseOutletName((String) null));"},{"lineNumber":343,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseOutletName((Optional\u003cString\u003e) null));"},{"lineNumber":344,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":345,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":346,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":347,"author":{"gitID":"SunBangjie"},"content":"    public void parseOutletName_invalidValue_throwsIllegalValueException() {"},{"lineNumber":348,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(IllegalValueException.class, () -\u003e ParserUtil.parseOutletName(INVALID_OUTLET_NAME));"},{"lineNumber":349,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(IllegalValueException.class, () -\u003e ParserUtil.parseOutletName("},{"lineNumber":350,"author":{"gitID":"SunBangjie"},"content":"                Optional.of(INVALID_OUTLET_NAME)));"},{"lineNumber":351,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":352,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":353,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":354,"author":{"gitID":"SunBangjie"},"content":"    public void parseOutletName_optionalEmpty_returnsOptionalEmpty() throws Exception {"},{"lineNumber":355,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(ParserUtil.parseOutletName(Optional.empty()).isPresent());"},{"lineNumber":356,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":357,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":358,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":359,"author":{"gitID":"SunBangjie"},"content":"    public void parseOutletName_validValueWithoutWhitespace_returnsOutletName() throws Exception {"},{"lineNumber":360,"author":{"gitID":"SunBangjie"},"content":"        OutletName expectedName \u003d new OutletName(VALID_OUTLET_NAME);"},{"lineNumber":361,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(expectedName, ParserUtil.parseOutletName(VALID_OUTLET_NAME));"},{"lineNumber":362,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(Optional.of(expectedName), ParserUtil.parseOutletName(Optional.of(VALID_OUTLET_NAME)));"},{"lineNumber":363,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":364,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":365,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":366,"author":{"gitID":"SunBangjie"},"content":"    public void parseOutletName_validValueWithWhitespace_returnsTrimmedOutletName() throws Exception {"},{"lineNumber":367,"author":{"gitID":"SunBangjie"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_OUTLET_NAME + WHITESPACE;"},{"lineNumber":368,"author":{"gitID":"SunBangjie"},"content":"        OutletName expectedName \u003d new OutletName(VALID_OUTLET_NAME);"},{"lineNumber":369,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(expectedName, ParserUtil.parseOutletName(nameWithWhitespace));"},{"lineNumber":370,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(Optional.of(expectedName), ParserUtil.parseOutletName(Optional.of(nameWithWhitespace)));"},{"lineNumber":371,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":372,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":373,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":374,"author":{"gitID":"SunBangjie"},"content":"    public void parseOutletContact_null_throwsNullPointerException() {"},{"lineNumber":375,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseOutletContact((String) null));"},{"lineNumber":376,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseOutletContact((Optional\u003cString\u003e) null));"},{"lineNumber":377,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":378,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":379,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":380,"author":{"gitID":"SunBangjie"},"content":"    public void parseOutletContact_invalidValue_throwsIllegalValueException() {"},{"lineNumber":381,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(IllegalValueException.class, () -\u003e ParserUtil.parseOutletContact("},{"lineNumber":382,"author":{"gitID":"SunBangjie"},"content":"                INVALID_OUTLET_CONTACT));"},{"lineNumber":383,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(IllegalValueException.class, () -\u003e ParserUtil.parseOutletContact("},{"lineNumber":384,"author":{"gitID":"SunBangjie"},"content":"                Optional.of(INVALID_OUTLET_CONTACT)));"},{"lineNumber":385,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":386,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":387,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":388,"author":{"gitID":"SunBangjie"},"content":"    public void parseOutletContact_optionalEmpty_returnsOptionalEmpty() throws Exception {"},{"lineNumber":389,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(ParserUtil.parseOutletContact(Optional.empty()).isPresent());"},{"lineNumber":390,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":391,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":392,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":393,"author":{"gitID":"SunBangjie"},"content":"    public void parseOutletContact_validValueWithoutWhitespace_returnsOutletContact() throws Exception {"},{"lineNumber":394,"author":{"gitID":"SunBangjie"},"content":"        OutletContact expectedOutletContact \u003d new OutletContact(VALID_OUTLET_CONTACT);"},{"lineNumber":395,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(expectedOutletContact, ParserUtil.parseOutletContact(VALID_OUTLET_CONTACT));"},{"lineNumber":396,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(Optional.of(expectedOutletContact), ParserUtil.parseOutletContact("},{"lineNumber":397,"author":{"gitID":"SunBangjie"},"content":"                Optional.of(VALID_OUTLET_CONTACT)));"},{"lineNumber":398,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":399,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":400,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":401,"author":{"gitID":"SunBangjie"},"content":"    public void parseOutletContact_validValueWithWhitespace_returnsTrimmedOutletContact() throws Exception {"},{"lineNumber":402,"author":{"gitID":"SunBangjie"},"content":"        String outletContactWithWhitespace \u003d WHITESPACE + VALID_OUTLET_CONTACT + WHITESPACE;"},{"lineNumber":403,"author":{"gitID":"SunBangjie"},"content":"        OutletContact expectedOutletContact \u003d new OutletContact(VALID_OUTLET_CONTACT);"},{"lineNumber":404,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(expectedOutletContact, ParserUtil.parseOutletContact(outletContactWithWhitespace));"},{"lineNumber":405,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(Optional.of(expectedOutletContact), ParserUtil.parseOutletContact("},{"lineNumber":406,"author":{"gitID":"SunBangjie"},"content":"                Optional.of(outletContactWithWhitespace)));"},{"lineNumber":407,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":408,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":409,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":410,"author":{"gitID":"SunBangjie"},"content":"    public void parseOperatingHours_null_throwsNullPointerException() {"},{"lineNumber":411,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseOperatingHours((String) null));"},{"lineNumber":412,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseOperatingHours((Optional\u003cString\u003e) null));"},{"lineNumber":413,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":414,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":415,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":416,"author":{"gitID":"SunBangjie"},"content":"    public void parseOperatingHours_invalidValue_throwsIllegalValueException() {"},{"lineNumber":417,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(IllegalValueException.class, () -\u003e ParserUtil.parseOperatingHours("},{"lineNumber":418,"author":{"gitID":"SunBangjie"},"content":"                INVALID_OPERATING_HOURS));"},{"lineNumber":419,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(IllegalValueException.class, () -\u003e ParserUtil.parseOperatingHours("},{"lineNumber":420,"author":{"gitID":"SunBangjie"},"content":"                Optional.of(INVALID_OPERATING_HOURS)));"},{"lineNumber":421,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":422,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":423,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":424,"author":{"gitID":"SunBangjie"},"content":"    public void parseOperatingHours_invalidStartEndTimeOrder_throwsIllegalValueException() {"},{"lineNumber":425,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(IllegalValueException.class, () -\u003e ParserUtil.parseOperatingHours("},{"lineNumber":426,"author":{"gitID":"SunBangjie"},"content":"                INVALID_START_END_TIME));"},{"lineNumber":427,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(IllegalValueException.class, () -\u003e ParserUtil.parseOperatingHours("},{"lineNumber":428,"author":{"gitID":"SunBangjie"},"content":"                Optional.of(INVALID_START_END_TIME)));"},{"lineNumber":429,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":430,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":431,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":432,"author":{"gitID":"SunBangjie"},"content":"    public void parseOperatingHours_optionalEmpty_returnsOptionalEmpty() throws Exception {"},{"lineNumber":433,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(ParserUtil.parseOperatingHours(Optional.empty()).isPresent());"},{"lineNumber":434,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":435,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":436,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":437,"author":{"gitID":"SunBangjie"},"content":"    public void parseOperatingHours_validValueWithoutWhitespace_returnsOperatingHours() throws Exception {"},{"lineNumber":438,"author":{"gitID":"SunBangjie"},"content":"        OperatingHours expectedOperatingHours \u003d new OperatingHours(VALID_OPERATING_HOURS);"},{"lineNumber":439,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(expectedOperatingHours, ParserUtil.parseOperatingHours(VALID_OPERATING_HOURS));"},{"lineNumber":440,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(Optional.of(expectedOperatingHours), ParserUtil.parseOperatingHours("},{"lineNumber":441,"author":{"gitID":"SunBangjie"},"content":"                Optional.of(VALID_OPERATING_HOURS)));"},{"lineNumber":442,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":443,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":444,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":445,"author":{"gitID":"SunBangjie"},"content":"    public void parseOperatingHours_validValueWithWhitespace_returnsTrimmedOperatingHours() throws Exception {"},{"lineNumber":446,"author":{"gitID":"SunBangjie"},"content":"        String operatingHoursWithWhitespace \u003d WHITESPACE + VALID_OPERATING_HOURS + WHITESPACE;"},{"lineNumber":447,"author":{"gitID":"SunBangjie"},"content":"        OperatingHours expectedOperatingHours \u003d new OperatingHours(VALID_OPERATING_HOURS);"},{"lineNumber":448,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(expectedOperatingHours, ParserUtil.parseOperatingHours(operatingHoursWithWhitespace));"},{"lineNumber":449,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(Optional.of(expectedOperatingHours), ParserUtil.parseOperatingHours("},{"lineNumber":450,"author":{"gitID":"SunBangjie"},"content":"                Optional.of(operatingHoursWithWhitespace)));"},{"lineNumber":451,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":452,"author":{"gitID":"SunBangjie"},"content":"    //@@author"},{"lineNumber":453,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"shanwpf":71,"-":268,"SunBangjie":114}},{"path":"src/test/java/seedu/ptman/logic/parser/AddShiftCommandParserTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.CAPACITY_DESC_1;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.CAPACITY_DESC_2;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.DATE_DESC_12MAR;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.DATE_DESC_13MAR;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.INVALID_CAPACITY_DESC;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.INVALID_DATE_DESC;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.INVALID_TIME_END_DESC;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.INVALID_TIME_START_DESC;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.TIME_END_DESC_10PM;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.TIME_END_DESC_8PM;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.TIME_START_DESC_10AM;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.TIME_START_DESC_12PM;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.VALID_CAPACITY_1;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.VALID_DATE_12MAR;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.VALID_TIME_END_8PM;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.VALID_TIME_START_10AM;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CommandParserTestUtil.assertParseFailure;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CommandParserTestUtil.assertParseSuccess;"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.AddShiftCommand;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Capacity;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Date;"},{"lineNumber":30,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Shift;"},{"lineNumber":31,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Time;"},{"lineNumber":32,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.ShiftBuilder;"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"shanwpf"},"content":"//@@author shanwpf"},{"lineNumber":35,"author":{"gitID":"shanwpf"},"content":"public class AddShiftCommandParserTest {"},{"lineNumber":36,"author":{"gitID":"shanwpf"},"content":"    private AddShiftCommandParser parser \u003d new AddShiftCommandParser();"},{"lineNumber":37,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":38,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":39,"author":{"gitID":"shanwpf"},"content":"    public void parse_allFieldsPresent_success() {"},{"lineNumber":40,"author":{"gitID":"shanwpf"},"content":"        Shift expectedShift \u003d new ShiftBuilder().withDate(VALID_DATE_12MAR).withStartTime(VALID_TIME_START_10AM)"},{"lineNumber":41,"author":{"gitID":"shanwpf"},"content":"                .withEndTime(VALID_TIME_END_8PM).withCapacity(VALID_CAPACITY_1).build();"},{"lineNumber":42,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":43,"author":{"gitID":"shanwpf"},"content":"        // whitespace only preamble"},{"lineNumber":44,"author":{"gitID":"shanwpf"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + DATE_DESC_12MAR + TIME_START_DESC_10AM + TIME_END_DESC_8PM"},{"lineNumber":45,"author":{"gitID":"shanwpf"},"content":"                + CAPACITY_DESC_1, new AddShiftCommand(expectedShift));"},{"lineNumber":46,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":47,"author":{"gitID":"shanwpf"},"content":"        // multiple dates - last day accepted"},{"lineNumber":48,"author":{"gitID":"shanwpf"},"content":"        assertParseSuccess(parser, DATE_DESC_13MAR + DATE_DESC_12MAR + TIME_START_DESC_10AM + TIME_END_DESC_8PM"},{"lineNumber":49,"author":{"gitID":"shanwpf"},"content":"                + CAPACITY_DESC_1, new AddShiftCommand(expectedShift));"},{"lineNumber":50,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":51,"author":{"gitID":"shanwpf"},"content":"        // multiple start times - last start time accepted"},{"lineNumber":52,"author":{"gitID":"shanwpf"},"content":"        assertParseSuccess(parser, DATE_DESC_12MAR + TIME_START_DESC_12PM + TIME_START_DESC_10AM + TIME_END_DESC_8PM"},{"lineNumber":53,"author":{"gitID":"shanwpf"},"content":"                + CAPACITY_DESC_1, new AddShiftCommand(expectedShift));"},{"lineNumber":54,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":55,"author":{"gitID":"shanwpf"},"content":"        // multiple end times - last end time accepted"},{"lineNumber":56,"author":{"gitID":"shanwpf"},"content":"        assertParseSuccess(parser, DATE_DESC_12MAR + TIME_START_DESC_10AM +  TIME_END_DESC_10PM + TIME_END_DESC_8PM"},{"lineNumber":57,"author":{"gitID":"shanwpf"},"content":"                + CAPACITY_DESC_1, new AddShiftCommand(expectedShift));"},{"lineNumber":58,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":59,"author":{"gitID":"shanwpf"},"content":"        // multiple capacities - last capacity accepted"},{"lineNumber":60,"author":{"gitID":"shanwpf"},"content":"        assertParseSuccess(parser, DATE_DESC_12MAR + TIME_START_DESC_10AM +  TIME_END_DESC_8PM"},{"lineNumber":61,"author":{"gitID":"shanwpf"},"content":"                + CAPACITY_DESC_2 + CAPACITY_DESC_1, new AddShiftCommand(expectedShift));"},{"lineNumber":62,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":63,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":65,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":66,"author":{"gitID":"shanwpf"},"content":"    public void parse_compulsoryFieldMissing_failure() {"},{"lineNumber":67,"author":{"gitID":"shanwpf"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddShiftCommand.MESSAGE_USAGE);"},{"lineNumber":68,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":69,"author":{"gitID":"shanwpf"},"content":"        // missing date prefix"},{"lineNumber":70,"author":{"gitID":"shanwpf"},"content":"        assertParseFailure(parser,  VALID_DATE_12MAR + TIME_START_DESC_10AM + TIME_END_DESC_8PM"},{"lineNumber":71,"author":{"gitID":"shanwpf"},"content":"                + CAPACITY_DESC_1, expectedMessage);"},{"lineNumber":72,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":73,"author":{"gitID":"shanwpf"},"content":"        // missing start time prefix"},{"lineNumber":74,"author":{"gitID":"shanwpf"},"content":"        assertParseFailure(parser,  DATE_DESC_12MAR + VALID_TIME_START_10AM + TIME_END_DESC_8PM"},{"lineNumber":75,"author":{"gitID":"shanwpf"},"content":"                + CAPACITY_DESC_1, expectedMessage);"},{"lineNumber":76,"author":{"gitID":"shanwpf"},"content":"        // missing end time prefix"},{"lineNumber":77,"author":{"gitID":"shanwpf"},"content":"        assertParseFailure(parser,  DATE_DESC_12MAR + TIME_START_DESC_10AM + VALID_TIME_END_8PM"},{"lineNumber":78,"author":{"gitID":"shanwpf"},"content":"                + CAPACITY_DESC_1, expectedMessage);"},{"lineNumber":79,"author":{"gitID":"shanwpf"},"content":"        // missing capacity prefix"},{"lineNumber":80,"author":{"gitID":"shanwpf"},"content":"        assertParseFailure(parser,  DATE_DESC_12MAR + TIME_START_DESC_10AM + TIME_END_DESC_8PM"},{"lineNumber":81,"author":{"gitID":"shanwpf"},"content":"                + VALID_CAPACITY_1, expectedMessage);"},{"lineNumber":82,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":83,"author":{"gitID":"shanwpf"},"content":"        // all prefixes missing"},{"lineNumber":84,"author":{"gitID":"shanwpf"},"content":"        assertParseFailure(parser, VALID_DATE_12MAR + VALID_TIME_START_10AM + VALID_TIME_END_8PM + VALID_CAPACITY_1,"},{"lineNumber":85,"author":{"gitID":"shanwpf"},"content":"                expectedMessage);"},{"lineNumber":86,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":87,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":88,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":89,"author":{"gitID":"shanwpf"},"content":"    public void parse_invalidValue_failure() {"},{"lineNumber":90,"author":{"gitID":"shanwpf"},"content":"        // invalid date"},{"lineNumber":91,"author":{"gitID":"shanwpf"},"content":"        assertParseFailure(parser, INVALID_DATE_DESC + TIME_START_DESC_10AM + TIME_END_DESC_8PM"},{"lineNumber":92,"author":{"gitID":"shanwpf"},"content":"                + CAPACITY_DESC_1, Date.MESSAGE_DATE_CONSTRAINTS);"},{"lineNumber":93,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":94,"author":{"gitID":"shanwpf"},"content":"        // invalid start time"},{"lineNumber":95,"author":{"gitID":"shanwpf"},"content":"        assertParseFailure(parser, DATE_DESC_12MAR + INVALID_TIME_START_DESC + TIME_END_DESC_8PM"},{"lineNumber":96,"author":{"gitID":"shanwpf"},"content":"                        + CAPACITY_DESC_1, Time.MESSAGE_TIME_CONSTRAINTS);"},{"lineNumber":97,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":98,"author":{"gitID":"shanwpf"},"content":"        // invalid end time"},{"lineNumber":99,"author":{"gitID":"shanwpf"},"content":"        assertParseFailure(parser, DATE_DESC_12MAR + TIME_START_DESC_10AM + INVALID_TIME_END_DESC"},{"lineNumber":100,"author":{"gitID":"shanwpf"},"content":"                        + CAPACITY_DESC_1, Time.MESSAGE_TIME_CONSTRAINTS);"},{"lineNumber":101,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":102,"author":{"gitID":"shanwpf"},"content":"        // invalid capacity"},{"lineNumber":103,"author":{"gitID":"shanwpf"},"content":"        assertParseFailure(parser, DATE_DESC_12MAR + TIME_START_DESC_10AM + TIME_END_DESC_8PM"},{"lineNumber":104,"author":{"gitID":"shanwpf"},"content":"                        + INVALID_CAPACITY_DESC, Capacity.MESSAGE_CAPACITY_CONSTRAINTS);"},{"lineNumber":105,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":106,"author":{"gitID":"shanwpf"},"content":"        // two invalid values, only first invalid value reported"},{"lineNumber":107,"author":{"gitID":"shanwpf"},"content":"        assertParseFailure(parser, DATE_DESC_12MAR + TIME_START_DESC_10AM + INVALID_TIME_END_DESC"},{"lineNumber":108,"author":{"gitID":"shanwpf"},"content":"                        + INVALID_CAPACITY_DESC, Time.MESSAGE_TIME_CONSTRAINTS);"},{"lineNumber":109,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":110,"author":{"gitID":"shanwpf"},"content":"        // non-empty preamble"},{"lineNumber":111,"author":{"gitID":"shanwpf"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + DATE_DESC_12MAR + TIME_START_DESC_10AM + TIME_END_DESC_8PM"},{"lineNumber":112,"author":{"gitID":"shanwpf"},"content":"                        + INVALID_CAPACITY_DESC,"},{"lineNumber":113,"author":{"gitID":"shanwpf"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddShiftCommand.MESSAGE_USAGE));"},{"lineNumber":114,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":115,"author":{"gitID":"shanwpf"},"content":"}"}],"authorContributionMap":{"shanwpf":82,"-":33}},{"path":"src/test/java/seedu/ptman/logic/parser/ExportCommandParserTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CommandParserTestUtil.assertParseFailure;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CommandParserTestUtil.assertParseSuccess;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.ExportCommand;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Email;"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"hzxcaryn"},"content":"//@@author hzxcaryn"},{"lineNumber":19,"author":{"gitID":"hzxcaryn"},"content":"public class ExportCommandParserTest {"},{"lineNumber":20,"author":{"gitID":"hzxcaryn"},"content":"    private ExportCommandParser parser \u003d new ExportCommandParser();"},{"lineNumber":21,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":22,"author":{"gitID":"hzxcaryn"},"content":"    @Test"},{"lineNumber":23,"author":{"gitID":"hzxcaryn"},"content":"    public void parse_allFieldsPresent_success() {"},{"lineNumber":24,"author":{"gitID":"hzxcaryn"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL_BOB);"},{"lineNumber":25,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":26,"author":{"gitID":"hzxcaryn"},"content":"        // whitespace only preamble"},{"lineNumber":27,"author":{"gitID":"hzxcaryn"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + EMAIL_DESC_BOB, new ExportCommand(expectedEmail));"},{"lineNumber":28,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":29,"author":{"gitID":"hzxcaryn"},"content":"        // multiple emails - last email accepted"},{"lineNumber":30,"author":{"gitID":"hzxcaryn"},"content":"        assertParseSuccess(parser, EMAIL_DESC_AMY + EMAIL_DESC_BOB, new ExportCommand(expectedEmail));"},{"lineNumber":31,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":32,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":33,"author":{"gitID":"hzxcaryn"},"content":"    @Test"},{"lineNumber":34,"author":{"gitID":"hzxcaryn"},"content":"    public void parse_invalidValue_failure() {"},{"lineNumber":35,"author":{"gitID":"hzxcaryn"},"content":"        // invalid email"},{"lineNumber":36,"author":{"gitID":"hzxcaryn"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC, Email.MESSAGE_EMAIL_CONSTRAINTS);"},{"lineNumber":37,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":38,"author":{"gitID":"hzxcaryn"},"content":"        // non-empty preamble"},{"lineNumber":39,"author":{"gitID":"hzxcaryn"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + EMAIL_DESC_BOB,"},{"lineNumber":40,"author":{"gitID":"hzxcaryn"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ExportCommand.MESSAGE_USAGE));"},{"lineNumber":41,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":42,"author":{"gitID":"hzxcaryn"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY,"},{"lineNumber":43,"author":{"gitID":"hzxcaryn"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ExportCommand.MESSAGE_USAGE));"},{"lineNumber":44,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":46,"author":{"gitID":"hzxcaryn"},"content":"}"}],"authorContributionMap":{"hzxcaryn":29,"-":17}},{"path":"src/test/java/seedu/ptman/logic/parser/PartTimeManagerParserTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.fail;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_EMAIL;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_OPERATING_HOURS;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_OUTLET_CONTACT;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_OUTLET_EMAIL;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_OUTLET_NAME;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_PASSWORD;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_FIRST_EMPLOYEE;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_FIRST_SHIFT;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.AddCommand;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.AddShiftCommand;"},{"lineNumber":30,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.AnnouncementCommand;"},{"lineNumber":31,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.ApplyCommand;"},{"lineNumber":32,"author":{"gitID":"koo1993"},"content":"import seedu.ptman.logic.commands.ChangeAdminPasswordCommand;"},{"lineNumber":33,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.ChangePasswordCommand;"},{"lineNumber":34,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.ClearCommand;"},{"lineNumber":35,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.DecryptDataCommand;"},{"lineNumber":36,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.DeleteCommand;"},{"lineNumber":37,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.DeleteShiftCommand;"},{"lineNumber":38,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.DeselectCommand;"},{"lineNumber":39,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.EditCommand;"},{"lineNumber":40,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.EditCommand.EditEmployeeDescriptor;"},{"lineNumber":41,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.EditOutletCommand;"},{"lineNumber":42,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.EncryptDataCommand;"},{"lineNumber":43,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.ExitCommand;"},{"lineNumber":44,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.ExportCommand;"},{"lineNumber":45,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.FindCommand;"},{"lineNumber":46,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.HelpCommand;"},{"lineNumber":47,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.HistoryCommand;"},{"lineNumber":48,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.ListCommand;"},{"lineNumber":49,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.LogOutAdminCommand;"},{"lineNumber":50,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.RedoCommand;"},{"lineNumber":51,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.SelectCommand;"},{"lineNumber":52,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.UnapplyCommand;"},{"lineNumber":53,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.UndoCommand;"},{"lineNumber":54,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.ViewEncryptionCommand;"},{"lineNumber":55,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.ViewShiftCommand;"},{"lineNumber":56,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.parser.exceptions.ParseException;"},{"lineNumber":57,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":58,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Email;"},{"lineNumber":59,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Employee;"},{"lineNumber":60,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.NameContainsKeywordsPredicate;"},{"lineNumber":61,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.Announcement;"},{"lineNumber":62,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OperatingHours;"},{"lineNumber":63,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletContact;"},{"lineNumber":64,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletEmail;"},{"lineNumber":65,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletName;"},{"lineNumber":66,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Shift;"},{"lineNumber":67,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.EditEmployeeDescriptorBuilder;"},{"lineNumber":68,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.EmployeeBuilder;"},{"lineNumber":69,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.EmployeeUtil;"},{"lineNumber":70,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.ShiftBuilder;"},{"lineNumber":71,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.ShiftUtil;"},{"lineNumber":72,"author":{"gitID":"-"},"content":""},{"lineNumber":73,"author":{"gitID":"-"},"content":"public class PartTimeManagerParserTest {"},{"lineNumber":74,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":75,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":76,"author":{"gitID":"-"},"content":"    private ArrayList\u003cString\u003e default1PasswordsTodefault2 \u003d new ArrayList\u003c\u003e();"},{"lineNumber":77,"author":{"gitID":"-"},"content":"    private final PartTimeManagerParser parser \u003d new PartTimeManagerParser();"},{"lineNumber":78,"author":{"gitID":"-"},"content":""},{"lineNumber":79,"author":{"gitID":"-"},"content":"    @Before"},{"lineNumber":80,"author":{"gitID":"-"},"content":"    public void setUpPasswords() {"},{"lineNumber":81,"author":{"gitID":"-"},"content":"        default1PasswordsTodefault2.add(\"DEFAULT1\");"},{"lineNumber":82,"author":{"gitID":"-"},"content":"        default1PasswordsTodefault2.add(\"DEFAULT2\");"},{"lineNumber":83,"author":{"gitID":"-"},"content":"        default1PasswordsTodefault2.add(\"DEFAULT2\");"},{"lineNumber":84,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":85,"author":{"gitID":"-"},"content":""},{"lineNumber":86,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":87,"author":{"gitID":"-"},"content":"    public void parseCommand_logOut() throws Exception {"},{"lineNumber":88,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(LogOutAdminCommand.COMMAND_WORD) instanceof LogOutAdminCommand);"},{"lineNumber":89,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(LogOutAdminCommand.COMMAND_WORD + \" 3\") instanceof LogOutAdminCommand);"},{"lineNumber":90,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":91,"author":{"gitID":"-"},"content":""},{"lineNumber":92,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":93,"author":{"gitID":"-"},"content":"    public void parseCommand_add() throws Exception {"},{"lineNumber":94,"author":{"gitID":"-"},"content":"        Employee employee \u003d new EmployeeBuilder().build();"},{"lineNumber":95,"author":{"gitID":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(EmployeeUtil.getAddCommand(employee));"},{"lineNumber":96,"author":{"gitID":"-"},"content":"        assertEquals(new AddCommand(employee), command);"},{"lineNumber":97,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":98,"author":{"gitID":"-"},"content":""},{"lineNumber":99,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":100,"author":{"gitID":"-"},"content":"    public void parseCommand_addAlias() throws Exception {"},{"lineNumber":101,"author":{"gitID":"-"},"content":"        Employee employee \u003d new EmployeeBuilder().build();"},{"lineNumber":102,"author":{"gitID":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(EmployeeUtil.getAliasedAddCommand(employee));"},{"lineNumber":103,"author":{"gitID":"-"},"content":"        assertEquals(new AddCommand(employee), command);"},{"lineNumber":104,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":105,"author":{"gitID":"-"},"content":""},{"lineNumber":106,"author":{"gitID":"shanwpf"},"content":"    //@@author shanwpf"},{"lineNumber":107,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":108,"author":{"gitID":"shanwpf"},"content":"    public void parseCommand_addShift() throws Exception {"},{"lineNumber":109,"author":{"gitID":"shanwpf"},"content":"        Shift shift \u003d new ShiftBuilder().build();"},{"lineNumber":110,"author":{"gitID":"shanwpf"},"content":"        AddShiftCommand command \u003d (AddShiftCommand) parser.parseCommand(ShiftUtil.getAddShiftCommand(shift));"},{"lineNumber":111,"author":{"gitID":"shanwpf"},"content":"        assertEquals(new AddShiftCommand(shift), command);"},{"lineNumber":112,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":113,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":114,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":115,"author":{"gitID":"shanwpf"},"content":"    public void parseCommand_addShiftAlias() throws Exception {"},{"lineNumber":116,"author":{"gitID":"shanwpf"},"content":"        Shift shift \u003d new ShiftBuilder().build();"},{"lineNumber":117,"author":{"gitID":"shanwpf"},"content":"        AddShiftCommand command \u003d (AddShiftCommand) parser.parseCommand(ShiftUtil.getAliasedAddShiftCommand(shift));"},{"lineNumber":118,"author":{"gitID":"shanwpf"},"content":"        assertEquals(new AddShiftCommand(shift), command);"},{"lineNumber":119,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":120,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":121,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":122,"author":{"gitID":"shanwpf"},"content":"    public void parseCommand_apply() throws Exception {"},{"lineNumber":123,"author":{"gitID":"shanwpf"},"content":"        ApplyCommand command \u003d (ApplyCommand) parser.parseCommand("},{"lineNumber":124,"author":{"gitID":"shanwpf"},"content":"                ApplyCommand.COMMAND_WORD + \" \" + INDEX_FIRST_EMPLOYEE.getOneBased()"},{"lineNumber":125,"author":{"gitID":"shanwpf"},"content":"                        + \" \" + INDEX_FIRST_SHIFT.getOneBased() + \" \" + PREFIX_PASSWORD + \"DEFAULT1\");"},{"lineNumber":126,"author":{"gitID":"shanwpf"},"content":"        assertEquals(new ApplyCommand(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, Optional.of(new Password())), command);"},{"lineNumber":127,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":128,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":129,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":130,"author":{"gitID":"shanwpf"},"content":"    public void parseCommand_applyAlias() throws Exception {"},{"lineNumber":131,"author":{"gitID":"shanwpf"},"content":"        ApplyCommand command \u003d (ApplyCommand) parser.parseCommand("},{"lineNumber":132,"author":{"gitID":"shanwpf"},"content":"                ApplyCommand.COMMAND_ALIAS + \" \" + INDEX_FIRST_EMPLOYEE.getOneBased()"},{"lineNumber":133,"author":{"gitID":"shanwpf"},"content":"                        + \" \" + INDEX_FIRST_SHIFT.getOneBased() + \" \" + PREFIX_PASSWORD + \"DEFAULT1\");"},{"lineNumber":134,"author":{"gitID":"shanwpf"},"content":"        assertEquals(new ApplyCommand(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, Optional.of(new Password())), command);"},{"lineNumber":135,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":136,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":137,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":138,"author":{"gitID":"shanwpf"},"content":"    public void parseCommand_deleteShift() throws Exception {"},{"lineNumber":139,"author":{"gitID":"shanwpf"},"content":"        DeleteShiftCommand command \u003d (DeleteShiftCommand) parser.parseCommand("},{"lineNumber":140,"author":{"gitID":"shanwpf"},"content":"                DeleteShiftCommand.COMMAND_WORD + \" \" + INDEX_FIRST_SHIFT.getOneBased());"},{"lineNumber":141,"author":{"gitID":"shanwpf"},"content":"        assertEquals(new DeleteShiftCommand(INDEX_FIRST_EMPLOYEE), command);"},{"lineNumber":142,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":143,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":144,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":145,"author":{"gitID":"shanwpf"},"content":"    public void parseCommand_deleteShiftAlias() throws Exception {"},{"lineNumber":146,"author":{"gitID":"shanwpf"},"content":"        DeleteShiftCommand command \u003d (DeleteShiftCommand) parser.parseCommand("},{"lineNumber":147,"author":{"gitID":"shanwpf"},"content":"                DeleteShiftCommand.COMMAND_ALIAS + \" \" + INDEX_FIRST_SHIFT.getOneBased());"},{"lineNumber":148,"author":{"gitID":"shanwpf"},"content":"        assertEquals(new DeleteShiftCommand(INDEX_FIRST_EMPLOYEE), command);"},{"lineNumber":149,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":150,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":151,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":152,"author":{"gitID":"shanwpf"},"content":"    public void parseCommand_unapply() throws Exception {"},{"lineNumber":153,"author":{"gitID":"shanwpf"},"content":"        UnapplyCommand command \u003d (UnapplyCommand) parser.parseCommand("},{"lineNumber":154,"author":{"gitID":"shanwpf"},"content":"                UnapplyCommand.COMMAND_WORD + \" \" + INDEX_FIRST_EMPLOYEE.getOneBased()"},{"lineNumber":155,"author":{"gitID":"shanwpf"},"content":"                        + \" \" + INDEX_FIRST_SHIFT.getOneBased() + \" \" + PREFIX_PASSWORD + \"DEFAULT1\");"},{"lineNumber":156,"author":{"gitID":"shanwpf"},"content":"        assertEquals(new UnapplyCommand(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, Optional.of(new Password())), command);"},{"lineNumber":157,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":158,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":159,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":160,"author":{"gitID":"shanwpf"},"content":"    public void parseCommand_unapplyAlias() throws Exception {"},{"lineNumber":161,"author":{"gitID":"shanwpf"},"content":"        UnapplyCommand command \u003d (UnapplyCommand) parser.parseCommand("},{"lineNumber":162,"author":{"gitID":"shanwpf"},"content":"                UnapplyCommand.COMMAND_ALIAS + \" \" + INDEX_FIRST_EMPLOYEE.getOneBased()"},{"lineNumber":163,"author":{"gitID":"shanwpf"},"content":"                        + \" \" + INDEX_FIRST_SHIFT.getOneBased() + \" \" + PREFIX_PASSWORD + \"DEFAULT1\");"},{"lineNumber":164,"author":{"gitID":"shanwpf"},"content":"        assertEquals(new UnapplyCommand(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, Optional.of(new Password())), command);"},{"lineNumber":165,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":166,"author":{"gitID":"shanwpf"},"content":"    //@@author"},{"lineNumber":167,"author":{"gitID":"-"},"content":""},{"lineNumber":168,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":169,"author":{"gitID":"-"},"content":"    public void parseCommand_clear() throws Exception {"},{"lineNumber":170,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);"},{"lineNumber":171,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);"},{"lineNumber":172,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":173,"author":{"gitID":"-"},"content":""},{"lineNumber":174,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":175,"author":{"gitID":"-"},"content":"    public void parseCommand_clearAlias() throws Exception {"},{"lineNumber":176,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_ALIAS) instanceof ClearCommand);"},{"lineNumber":177,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_ALIAS + \" 3\") instanceof ClearCommand);"},{"lineNumber":178,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":179,"author":{"gitID":"-"},"content":""},{"lineNumber":180,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":181,"author":{"gitID":"-"},"content":"    public void parseCommand_delete() throws Exception {"},{"lineNumber":182,"author":{"gitID":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand("},{"lineNumber":183,"author":{"gitID":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_EMPLOYEE.getOneBased());"},{"lineNumber":184,"author":{"gitID":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_EMPLOYEE), command);"},{"lineNumber":185,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":186,"author":{"gitID":"-"},"content":""},{"lineNumber":187,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":188,"author":{"gitID":"-"},"content":"    public void parseCommand_deleteAlias() throws Exception {"},{"lineNumber":189,"author":{"gitID":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand("},{"lineNumber":190,"author":{"gitID":"-"},"content":"                DeleteCommand.COMMAND_ALIAS + \" \" + INDEX_FIRST_EMPLOYEE.getOneBased());"},{"lineNumber":191,"author":{"gitID":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_EMPLOYEE), command);"},{"lineNumber":192,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":193,"author":{"gitID":"-"},"content":""},{"lineNumber":194,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":195,"author":{"gitID":"-"},"content":"    public void parseCommand_edit() throws Exception {"},{"lineNumber":196,"author":{"gitID":"-"},"content":"        Employee employee \u003d new EmployeeBuilder().build();"},{"lineNumber":197,"author":{"gitID":"-"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder(employee).build();"},{"lineNumber":198,"author":{"gitID":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \""},{"lineNumber":199,"author":{"gitID":"-"},"content":"                + INDEX_FIRST_EMPLOYEE.getOneBased() + \" \" + EmployeeUtil.getEmployeeDetails(employee));"},{"lineNumber":200,"author":{"gitID":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_EMPLOYEE, descriptor), command);"},{"lineNumber":201,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":202,"author":{"gitID":"-"},"content":""},{"lineNumber":203,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":204,"author":{"gitID":"-"},"content":"    public void parseCommand_editAlias() throws Exception {"},{"lineNumber":205,"author":{"gitID":"-"},"content":"        Employee employee \u003d new EmployeeBuilder().build();"},{"lineNumber":206,"author":{"gitID":"-"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder(employee).build();"},{"lineNumber":207,"author":{"gitID":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_ALIAS + \" \""},{"lineNumber":208,"author":{"gitID":"-"},"content":"                + INDEX_FIRST_EMPLOYEE.getOneBased() + \" \" + EmployeeUtil.getEmployeeDetails(employee));"},{"lineNumber":209,"author":{"gitID":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_EMPLOYEE, descriptor), command);"},{"lineNumber":210,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":211,"author":{"gitID":"-"},"content":""},{"lineNumber":212,"author":{"gitID":"koo1993"},"content":"    //@@author koo1993"},{"lineNumber":213,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":214,"author":{"gitID":"koo1993"},"content":"    public void parseCommand_changePassword() throws Exception {"},{"lineNumber":215,"author":{"gitID":"koo1993"},"content":"        ChangePasswordCommand command \u003d"},{"lineNumber":216,"author":{"gitID":"koo1993"},"content":"                (ChangePasswordCommand) parser.parseCommand(ChangePasswordCommand.COMMAND_WORD"},{"lineNumber":217,"author":{"gitID":"koo1993"},"content":"                        + \" \" + INDEX_FIRST_EMPLOYEE.getOneBased() + \" \" + \" pw/DEFAULT1 \" + \" pw/DEFAULT2 \""},{"lineNumber":218,"author":{"gitID":"koo1993"},"content":"                        + \" pw/DEFAULT2 \");"},{"lineNumber":219,"author":{"gitID":"koo1993"},"content":"        assertEquals(new ChangePasswordCommand(INDEX_FIRST_EMPLOYEE, default1PasswordsTodefault2), command);"},{"lineNumber":220,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":221,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":222,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":223,"author":{"gitID":"koo1993"},"content":"    public void parseCommand_changePasswordAlias() throws Exception {"},{"lineNumber":224,"author":{"gitID":"koo1993"},"content":"        ChangePasswordCommand command \u003d"},{"lineNumber":225,"author":{"gitID":"koo1993"},"content":"                (ChangePasswordCommand) parser.parseCommand(ChangePasswordCommand.COMMAND_ALIAS"},{"lineNumber":226,"author":{"gitID":"koo1993"},"content":"                        + \" \" + INDEX_FIRST_EMPLOYEE.getOneBased() + \" \" + \" pw/DEFAULT1 \" + \" pw/DEFAULT2 \""},{"lineNumber":227,"author":{"gitID":"koo1993"},"content":"                        + \" pw/DEFAULT2 \");"},{"lineNumber":228,"author":{"gitID":"koo1993"},"content":"        assertEquals(new ChangePasswordCommand(INDEX_FIRST_EMPLOYEE, default1PasswordsTodefault2), command);"},{"lineNumber":229,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":230,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":231,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":232,"author":{"gitID":"koo1993"},"content":"    public void parseCommand_changeMasterPassword() throws Exception {"},{"lineNumber":233,"author":{"gitID":"koo1993"},"content":"        ChangeAdminPasswordCommand command \u003d"},{"lineNumber":234,"author":{"gitID":"koo1993"},"content":"                (ChangeAdminPasswordCommand) parser.parseCommand(ChangeAdminPasswordCommand.COMMAND_WORD"},{"lineNumber":235,"author":{"gitID":"koo1993"},"content":"                        + \" pw/DEFAULT1 \" + \" pw/DEFAULT2 \" + \" pw/DEFAULT2 \");"},{"lineNumber":236,"author":{"gitID":"koo1993"},"content":"        assertEquals(new ChangeAdminPasswordCommand(default1PasswordsTodefault2), command);"},{"lineNumber":237,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":238,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":239,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":240,"author":{"gitID":"koo1993"},"content":"    public void parseCommand_changeMasterPasswordAlias() throws Exception {"},{"lineNumber":241,"author":{"gitID":"koo1993"},"content":"        ChangeAdminPasswordCommand command \u003d"},{"lineNumber":242,"author":{"gitID":"koo1993"},"content":"                (ChangeAdminPasswordCommand) parser.parseCommand(ChangeAdminPasswordCommand.COMMAND_ALIAS"},{"lineNumber":243,"author":{"gitID":"koo1993"},"content":"                        + \" pw/DEFAULT1 \" + \" pw/DEFAULT2 \" + \" pw/DEFAULT2 \");"},{"lineNumber":244,"author":{"gitID":"koo1993"},"content":"        assertEquals(new ChangeAdminPasswordCommand(default1PasswordsTodefault2), command);"},{"lineNumber":245,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":246,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":247,"author":{"gitID":"SunBangjie"},"content":"    //@@author SunBangjie"},{"lineNumber":248,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":249,"author":{"gitID":"SunBangjie"},"content":"    public void parseCommand_editoutlet() throws Exception {"},{"lineNumber":250,"author":{"gitID":"SunBangjie"},"content":"        String name \u003d \"EditedOutlet\";"},{"lineNumber":251,"author":{"gitID":"SunBangjie"},"content":"        String operatingHours \u003d \"1000-1700\";"},{"lineNumber":252,"author":{"gitID":"SunBangjie"},"content":"        String outletContact \u003d \"91234567\";"},{"lineNumber":253,"author":{"gitID":"SunBangjie"},"content":"        String outletEmail \u003d \"EditedOutlet@gmail.com\";"},{"lineNumber":254,"author":{"gitID":"SunBangjie"},"content":"        EditOutletCommand command \u003d (EditOutletCommand) parser.parseCommand(EditOutletCommand.COMMAND_WORD"},{"lineNumber":255,"author":{"gitID":"SunBangjie"},"content":"                + \" \" + PREFIX_OUTLET_NAME + name"},{"lineNumber":256,"author":{"gitID":"SunBangjie"},"content":"                + \" \" + PREFIX_OPERATING_HOURS + operatingHours"},{"lineNumber":257,"author":{"gitID":"SunBangjie"},"content":"                + \" \" + PREFIX_OUTLET_CONTACT + outletContact"},{"lineNumber":258,"author":{"gitID":"SunBangjie"},"content":"                + \" \" + PREFIX_OUTLET_EMAIL + outletEmail);"},{"lineNumber":259,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(new EditOutletCommand(new OutletName(name), new OperatingHours(operatingHours),"},{"lineNumber":260,"author":{"gitID":"SunBangjie"},"content":"                new OutletContact(outletContact), new OutletEmail(outletEmail)), command);"},{"lineNumber":261,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":262,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":263,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":264,"author":{"gitID":"SunBangjie"},"content":"    public void parseCommand_editoutletAlias() throws Exception {"},{"lineNumber":265,"author":{"gitID":"SunBangjie"},"content":"        String name \u003d \"EditedOutlet\";"},{"lineNumber":266,"author":{"gitID":"SunBangjie"},"content":"        String operatingHours \u003d \"1000-1700\";"},{"lineNumber":267,"author":{"gitID":"SunBangjie"},"content":"        String outletContact \u003d \"91234567\";"},{"lineNumber":268,"author":{"gitID":"SunBangjie"},"content":"        String outletEmail \u003d \"EditedOutlet@gmail.com\";"},{"lineNumber":269,"author":{"gitID":"SunBangjie"},"content":"        EditOutletCommand command \u003d (EditOutletCommand) parser.parseCommand(EditOutletCommand.COMMAND_ALIAS"},{"lineNumber":270,"author":{"gitID":"SunBangjie"},"content":"                + \" \" + PREFIX_OUTLET_NAME + name"},{"lineNumber":271,"author":{"gitID":"SunBangjie"},"content":"                + \" \" + PREFIX_OPERATING_HOURS + operatingHours"},{"lineNumber":272,"author":{"gitID":"SunBangjie"},"content":"                + \" \" + PREFIX_OUTLET_CONTACT + outletContact"},{"lineNumber":273,"author":{"gitID":"SunBangjie"},"content":"                + \" \" + PREFIX_OUTLET_EMAIL + outletEmail);"},{"lineNumber":274,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(new EditOutletCommand(new OutletName(name), new OperatingHours(operatingHours),"},{"lineNumber":275,"author":{"gitID":"SunBangjie"},"content":"                new OutletContact(outletContact), new OutletEmail(outletEmail)), command);"},{"lineNumber":276,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":277,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":278,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":279,"author":{"gitID":"SunBangjie"},"content":"    public void parseCommand_announcement() throws Exception {"},{"lineNumber":280,"author":{"gitID":"SunBangjie"},"content":"        String announcement \u003d \"new announcement.\";"},{"lineNumber":281,"author":{"gitID":"SunBangjie"},"content":"        AnnouncementCommand command \u003d (AnnouncementCommand) parser.parseCommand(AnnouncementCommand.COMMAND_WORD"},{"lineNumber":282,"author":{"gitID":"SunBangjie"},"content":"                + \" \" + announcement);"},{"lineNumber":283,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(new AnnouncementCommand(new Announcement(announcement)), command);"},{"lineNumber":284,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":285,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":286,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":287,"author":{"gitID":"SunBangjie"},"content":"    public void parseCommand_announcementAlias() throws Exception {"},{"lineNumber":288,"author":{"gitID":"SunBangjie"},"content":"        String announcement \u003d \"new announcement.\";"},{"lineNumber":289,"author":{"gitID":"SunBangjie"},"content":"        AnnouncementCommand command \u003d (AnnouncementCommand) parser.parseCommand(AnnouncementCommand.COMMAND_ALIAS"},{"lineNumber":290,"author":{"gitID":"SunBangjie"},"content":"                + \" \" + announcement);"},{"lineNumber":291,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(new AnnouncementCommand(new Announcement(announcement)), command);"},{"lineNumber":292,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":293,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":294,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":295,"author":{"gitID":"SunBangjie"},"content":"    public void parseCommand_encrypt() throws Exception {"},{"lineNumber":296,"author":{"gitID":"SunBangjie"},"content":"        assertTrue(parser.parseCommand(EncryptDataCommand.COMMAND_WORD) instanceof EncryptDataCommand);"},{"lineNumber":297,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":298,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":299,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":300,"author":{"gitID":"SunBangjie"},"content":"    public void parseCommand_decrypt() throws Exception {"},{"lineNumber":301,"author":{"gitID":"SunBangjie"},"content":"        assertTrue(parser.parseCommand(DecryptDataCommand.COMMAND_WORD) instanceof DecryptDataCommand);"},{"lineNumber":302,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":303,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":304,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":305,"author":{"gitID":"SunBangjie"},"content":"    public void parseCommand_viewoutlet() throws Exception {"},{"lineNumber":306,"author":{"gitID":"SunBangjie"},"content":"        assertTrue(parser.parseCommand(ViewEncryptionCommand.COMMAND_WORD) instanceof ViewEncryptionCommand);"},{"lineNumber":307,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":308,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":309,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":310,"author":{"gitID":"SunBangjie"},"content":"    public void parseCommand_viewoutletAlias() throws Exception {"},{"lineNumber":311,"author":{"gitID":"SunBangjie"},"content":"        assertTrue(parser.parseCommand(ViewEncryptionCommand.COMMAND_ALIAS) instanceof ViewEncryptionCommand);"},{"lineNumber":312,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":313,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":314,"author":{"gitID":"hzxcaryn"},"content":"    //@@author hzxcaryn"},{"lineNumber":315,"author":{"gitID":"hzxcaryn"},"content":"    @Test"},{"lineNumber":316,"author":{"gitID":"hzxcaryn"},"content":"    public void parseCommand_export() throws Exception {"},{"lineNumber":317,"author":{"gitID":"hzxcaryn"},"content":"        String email \u003d \"example@gmail.com\";"},{"lineNumber":318,"author":{"gitID":"hzxcaryn"},"content":"        ExportCommand command \u003d (ExportCommand) parser.parseCommand(ExportCommand.COMMAND_WORD + \" \""},{"lineNumber":319,"author":{"gitID":"hzxcaryn"},"content":"                + PREFIX_EMAIL + email);"},{"lineNumber":320,"author":{"gitID":"hzxcaryn"},"content":"        assertTrue(parser.parseCommand(ExportCommand.COMMAND_WORD) instanceof ExportCommand);"},{"lineNumber":321,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(new ExportCommand(new Email(email)), command);"},{"lineNumber":322,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":323,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":324,"author":{"gitID":"hzxcaryn"},"content":"    @Test"},{"lineNumber":325,"author":{"gitID":"hzxcaryn"},"content":"    public void parseCommand_exportAlias() throws Exception {"},{"lineNumber":326,"author":{"gitID":"hzxcaryn"},"content":"        String email \u003d \"example@gmail.com\";"},{"lineNumber":327,"author":{"gitID":"hzxcaryn"},"content":"        ExportCommand command \u003d (ExportCommand) parser.parseCommand(ExportCommand.COMMAND_ALIAS + \" \""},{"lineNumber":328,"author":{"gitID":"hzxcaryn"},"content":"                + PREFIX_EMAIL + email);"},{"lineNumber":329,"author":{"gitID":"hzxcaryn"},"content":"        assertTrue(parser.parseCommand(ExportCommand.COMMAND_WORD) instanceof ExportCommand);"},{"lineNumber":330,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(new ExportCommand(new Email(email)), command);"},{"lineNumber":331,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":332,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":333,"author":{"gitID":"hzxcaryn"},"content":"    //@@author"},{"lineNumber":334,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":335,"author":{"gitID":"-"},"content":"    public void parseCommand_exit() throws Exception {"},{"lineNumber":336,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);"},{"lineNumber":337,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);"},{"lineNumber":338,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":339,"author":{"gitID":"-"},"content":""},{"lineNumber":340,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":341,"author":{"gitID":"-"},"content":"    public void parseCommand_find() throws Exception {"},{"lineNumber":342,"author":{"gitID":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");"},{"lineNumber":343,"author":{"gitID":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand("},{"lineNumber":344,"author":{"gitID":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));"},{"lineNumber":345,"author":{"gitID":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);"},{"lineNumber":346,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":347,"author":{"gitID":"-"},"content":""},{"lineNumber":348,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":349,"author":{"gitID":"-"},"content":"    public void parseCommand_findAlias() throws Exception {"},{"lineNumber":350,"author":{"gitID":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");"},{"lineNumber":351,"author":{"gitID":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand("},{"lineNumber":352,"author":{"gitID":"-"},"content":"                FindCommand.COMMAND_ALIAS + \" \" + keywords.stream().collect(Collectors.joining(\" \")));"},{"lineNumber":353,"author":{"gitID":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);"},{"lineNumber":354,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":355,"author":{"gitID":"-"},"content":""},{"lineNumber":356,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":357,"author":{"gitID":"-"},"content":"    public void parseCommand_help() throws Exception {"},{"lineNumber":358,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);"},{"lineNumber":359,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);"},{"lineNumber":360,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":361,"author":{"gitID":"-"},"content":""},{"lineNumber":362,"author":{"gitID":"hzxcaryn"},"content":"    //@@author hzxcaryn"},{"lineNumber":363,"author":{"gitID":"hzxcaryn"},"content":"    @Test"},{"lineNumber":364,"author":{"gitID":"hzxcaryn"},"content":"    public void parseCommand_defaultview() throws Exception {"},{"lineNumber":365,"author":{"gitID":"hzxcaryn"},"content":"        assertTrue(parser.parseCommand(DeselectCommand.COMMAND_WORD) instanceof DeselectCommand);"},{"lineNumber":366,"author":{"gitID":"hzxcaryn"},"content":"        assertTrue(parser.parseCommand(DeselectCommand.COMMAND_WORD + \" 3\") instanceof DeselectCommand);"},{"lineNumber":367,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":368,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":369,"author":{"gitID":"hzxcaryn"},"content":"    @Test"},{"lineNumber":370,"author":{"gitID":"hzxcaryn"},"content":"    public void parseCommand_viewshift() throws Exception {"},{"lineNumber":371,"author":{"gitID":"hzxcaryn"},"content":"        ViewShiftCommand command \u003d (ViewShiftCommand) parser.parseCommand("},{"lineNumber":372,"author":{"gitID":"hzxcaryn"},"content":"                ViewShiftCommand.COMMAND_WORD + \" \" + INDEX_FIRST_SHIFT.getOneBased());"},{"lineNumber":373,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(new ViewShiftCommand(INDEX_FIRST_SHIFT), command);"},{"lineNumber":374,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":375,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":376,"author":{"gitID":"hzxcaryn"},"content":"    //@@author"},{"lineNumber":377,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":378,"author":{"gitID":"-"},"content":"    public void parseCommand_history() throws Exception {"},{"lineNumber":379,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(HistoryCommand.COMMAND_WORD) instanceof HistoryCommand);"},{"lineNumber":380,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(HistoryCommand.COMMAND_WORD + \" 3\") instanceof HistoryCommand);"},{"lineNumber":381,"author":{"gitID":"-"},"content":""},{"lineNumber":382,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":383,"author":{"gitID":"-"},"content":"            parser.parseCommand(\"histories\");"},{"lineNumber":384,"author":{"gitID":"-"},"content":"            fail(\"The expected ParseException was not thrown.\");"},{"lineNumber":385,"author":{"gitID":"-"},"content":"        } catch (ParseException pe) {"},{"lineNumber":386,"author":{"gitID":"-"},"content":"            assertEquals(MESSAGE_UNKNOWN_COMMAND, pe.getMessage());"},{"lineNumber":387,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":388,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":389,"author":{"gitID":"-"},"content":""},{"lineNumber":390,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":391,"author":{"gitID":"-"},"content":"    public void parseCommand_historyAlias() throws Exception {"},{"lineNumber":392,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(HistoryCommand.COMMAND_ALIAS) instanceof HistoryCommand);"},{"lineNumber":393,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(HistoryCommand.COMMAND_ALIAS + \" 3\") instanceof HistoryCommand);"},{"lineNumber":394,"author":{"gitID":"-"},"content":""},{"lineNumber":395,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":396,"author":{"gitID":"-"},"content":"            parser.parseCommand(\"histories\");"},{"lineNumber":397,"author":{"gitID":"-"},"content":"            fail(\"The expected ParseException was not thrown.\");"},{"lineNumber":398,"author":{"gitID":"-"},"content":"        } catch (ParseException pe) {"},{"lineNumber":399,"author":{"gitID":"-"},"content":"            assertEquals(MESSAGE_UNKNOWN_COMMAND, pe.getMessage());"},{"lineNumber":400,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":401,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":402,"author":{"gitID":"-"},"content":""},{"lineNumber":403,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":404,"author":{"gitID":"-"},"content":"    public void parseCommand_list() throws Exception {"},{"lineNumber":405,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);"},{"lineNumber":406,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);"},{"lineNumber":407,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":408,"author":{"gitID":"-"},"content":""},{"lineNumber":409,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":410,"author":{"gitID":"-"},"content":"    public void parseCommand_listAlias() throws Exception {"},{"lineNumber":411,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_ALIAS) instanceof ListCommand);"},{"lineNumber":412,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_ALIAS + \" 3\") instanceof ListCommand);"},{"lineNumber":413,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":414,"author":{"gitID":"-"},"content":""},{"lineNumber":415,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":416,"author":{"gitID":"-"},"content":"    public void parseCommand_select() throws Exception {"},{"lineNumber":417,"author":{"gitID":"-"},"content":"        SelectCommand command \u003d (SelectCommand) parser.parseCommand("},{"lineNumber":418,"author":{"gitID":"-"},"content":"                SelectCommand.COMMAND_WORD + \" \" + INDEX_FIRST_EMPLOYEE.getOneBased());"},{"lineNumber":419,"author":{"gitID":"-"},"content":"        assertEquals(new SelectCommand(INDEX_FIRST_EMPLOYEE), command);"},{"lineNumber":420,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":421,"author":{"gitID":"-"},"content":""},{"lineNumber":422,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":423,"author":{"gitID":"-"},"content":"    public void parseCommand_selectAlias() throws Exception {"},{"lineNumber":424,"author":{"gitID":"-"},"content":"        SelectCommand command \u003d (SelectCommand) parser.parseCommand("},{"lineNumber":425,"author":{"gitID":"-"},"content":"                SelectCommand.COMMAND_ALIAS + \" \" + INDEX_FIRST_EMPLOYEE.getOneBased());"},{"lineNumber":426,"author":{"gitID":"-"},"content":"        assertEquals(new SelectCommand(INDEX_FIRST_EMPLOYEE), command);"},{"lineNumber":427,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":428,"author":{"gitID":"-"},"content":""},{"lineNumber":429,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":430,"author":{"gitID":"-"},"content":"    public void parseCommand_redoCommandWord_returnsRedoCommand() throws Exception {"},{"lineNumber":431,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(RedoCommand.COMMAND_WORD) instanceof RedoCommand);"},{"lineNumber":432,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(\"redo 1\") instanceof RedoCommand);"},{"lineNumber":433,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":434,"author":{"gitID":"-"},"content":""},{"lineNumber":435,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":436,"author":{"gitID":"-"},"content":"    public void parseCommand_redoCommandAlias_returnsRedoCommand() throws Exception {"},{"lineNumber":437,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(RedoCommand.COMMAND_ALIAS) instanceof RedoCommand);"},{"lineNumber":438,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(\"r 1\") instanceof RedoCommand);"},{"lineNumber":439,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":440,"author":{"gitID":"-"},"content":""},{"lineNumber":441,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":442,"author":{"gitID":"-"},"content":"    public void parseCommand_undoCommandWord_returnsUndoCommand() throws Exception {"},{"lineNumber":443,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(UndoCommand.COMMAND_WORD) instanceof UndoCommand);"},{"lineNumber":444,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(\"undo 3\") instanceof UndoCommand);"},{"lineNumber":445,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":446,"author":{"gitID":"-"},"content":""},{"lineNumber":447,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":448,"author":{"gitID":"-"},"content":"    public void parseCommand_undoCommandAlias_returnsUndoCommand() throws Exception {"},{"lineNumber":449,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(UndoCommand.COMMAND_ALIAS) instanceof UndoCommand);"},{"lineNumber":450,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(\"u 3\") instanceof UndoCommand);"},{"lineNumber":451,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":452,"author":{"gitID":"-"},"content":""},{"lineNumber":453,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":454,"author":{"gitID":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() throws Exception {"},{"lineNumber":455,"author":{"gitID":"-"},"content":"        thrown.expect(ParseException.class);"},{"lineNumber":456,"author":{"gitID":"-"},"content":"        thrown.expectMessage(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));"},{"lineNumber":457,"author":{"gitID":"-"},"content":"        parser.parseCommand(\"\");"},{"lineNumber":458,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":459,"author":{"gitID":"-"},"content":""},{"lineNumber":460,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":461,"author":{"gitID":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() throws Exception {"},{"lineNumber":462,"author":{"gitID":"-"},"content":"        thrown.expect(ParseException.class);"},{"lineNumber":463,"author":{"gitID":"-"},"content":"        thrown.expectMessage(MESSAGE_UNKNOWN_COMMAND);"},{"lineNumber":464,"author":{"gitID":"-"},"content":"        parser.parseCommand(\"unknownCommand\");"},{"lineNumber":465,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":466,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"shanwpf":61,"koo1993":36,"hzxcaryn":35,"-":267,"SunBangjie":67}},{"path":"src/test/java/seedu/ptman/logic/commands/DeleteShiftCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertNotEquals;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.assertCommandFailure;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.assertCommandSuccess;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.prepareRedoCommand;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.prepareUndoCommand;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_FIRST_SHIFT;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_OUT_OF_BOUNDS_SHIFT;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_SECOND_SHIFT;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalShifts.getTypicalPartTimeManagerWithShifts;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.Messages;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.index.Index;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.CommandHistory;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.UndoRedoStack;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Model;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.ptman.model.ModelManager;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.ptman.model.UserPrefs;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Shift;"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"shanwpf"},"content":"//@@author shanwpf"},{"lineNumber":30,"author":{"gitID":"shanwpf"},"content":"/**"},{"lineNumber":31,"author":{"gitID":"shanwpf"},"content":" * Contains integration tests (interaction with the Model, UndoCommand and RedoCommand) and unit tests for"},{"lineNumber":32,"author":{"gitID":"shanwpf"},"content":" * {@code DeleteShiftCommand}."},{"lineNumber":33,"author":{"gitID":"shanwpf"},"content":" */"},{"lineNumber":34,"author":{"gitID":"shanwpf"},"content":"public class DeleteShiftCommandTest {"},{"lineNumber":35,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":36,"author":{"gitID":"shanwpf"},"content":"    private Model model \u003d new ModelManager(getTypicalPartTimeManagerWithShifts(), new UserPrefs(),"},{"lineNumber":37,"author":{"gitID":"shanwpf"},"content":"            new OutletInformation());"},{"lineNumber":38,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":39,"author":{"gitID":"shanwpf"},"content":"    @Before"},{"lineNumber":40,"author":{"gitID":"shanwpf"},"content":"    public void setupAdminMode() {"},{"lineNumber":41,"author":{"gitID":"shanwpf"},"content":"        model.setTrueAdminMode(new Password());"},{"lineNumber":42,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":43,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":44,"author":{"gitID":"shanwpf"},"content":"    @Before"},{"lineNumber":45,"author":{"gitID":"shanwpf"},"content":"    public void showAllShifts() {"},{"lineNumber":46,"author":{"gitID":"shanwpf"},"content":"        model.updateFilteredShiftList(Model.PREDICATE_SHOW_ALL_SHIFTS);"},{"lineNumber":47,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":48,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":49,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":50,"author":{"gitID":"shanwpf"},"content":"    public void execute_validIndexUnfilteredList_success() throws Exception {"},{"lineNumber":51,"author":{"gitID":"shanwpf"},"content":"        Shift shiftToDelete \u003d model.getFilteredShiftList().get(INDEX_FIRST_SHIFT.getZeroBased());"},{"lineNumber":52,"author":{"gitID":"shanwpf"},"content":"        DeleteShiftCommand deleteShiftCommand \u003d prepareCommand(INDEX_FIRST_SHIFT);"},{"lineNumber":53,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":54,"author":{"gitID":"shanwpf"},"content":"        String expectedMessage \u003d String.format(DeleteShiftCommand.MESSAGE_DELETE_SHIFT_SUCCESS, shiftToDelete);"},{"lineNumber":55,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":56,"author":{"gitID":"shanwpf"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getPartTimeManager(), new UserPrefs(),"},{"lineNumber":57,"author":{"gitID":"shanwpf"},"content":"                new OutletInformation());"},{"lineNumber":58,"author":{"gitID":"shanwpf"},"content":"        expectedModel.updateFilteredShiftList(Model.PREDICATE_SHOW_ALL_SHIFTS);"},{"lineNumber":59,"author":{"gitID":"shanwpf"},"content":"        expectedModel.deleteShift(shiftToDelete);"},{"lineNumber":60,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":61,"author":{"gitID":"shanwpf"},"content":"        assertCommandSuccess(deleteShiftCommand, model, expectedMessage, expectedModel);"},{"lineNumber":62,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":64,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":65,"author":{"gitID":"shanwpf"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() throws Exception {"},{"lineNumber":66,"author":{"gitID":"shanwpf"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredShiftList().size() + 1);"},{"lineNumber":67,"author":{"gitID":"shanwpf"},"content":"        DeleteShiftCommand deleteShiftCommand \u003d prepareCommand(outOfBoundIndex);"},{"lineNumber":68,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":69,"author":{"gitID":"shanwpf"},"content":"        assertCommandFailure(deleteShiftCommand, model, Messages.MESSAGE_INVALID_SHIFT_DISPLAYED_INDEX);"},{"lineNumber":70,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":71,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":72,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":73,"author":{"gitID":"shanwpf"},"content":"    public void execute_validIndexFilteredList_success() throws Exception {"},{"lineNumber":74,"author":{"gitID":"shanwpf"},"content":"        Shift shiftToDelete \u003d model.getFilteredShiftList().get(INDEX_FIRST_SHIFT.getZeroBased());"},{"lineNumber":75,"author":{"gitID":"shanwpf"},"content":"        DeleteShiftCommand deleteShiftCommand \u003d prepareCommand(INDEX_FIRST_SHIFT);"},{"lineNumber":76,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":77,"author":{"gitID":"shanwpf"},"content":"        String expectedMessage \u003d String.format(DeleteShiftCommand.MESSAGE_DELETE_SHIFT_SUCCESS, shiftToDelete);"},{"lineNumber":78,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":79,"author":{"gitID":"shanwpf"},"content":"        Model expectedModel \u003d new ModelManager(model.getPartTimeManager(), new UserPrefs(), new OutletInformation());"},{"lineNumber":80,"author":{"gitID":"shanwpf"},"content":"        expectedModel.updateFilteredShiftList(Model.PREDICATE_SHOW_ALL_SHIFTS);"},{"lineNumber":81,"author":{"gitID":"shanwpf"},"content":"        expectedModel.deleteShift(shiftToDelete);"},{"lineNumber":82,"author":{"gitID":"shanwpf"},"content":"        assertNotEquals(shiftToDelete, expectedModel.getFilteredShiftList().get(INDEX_FIRST_SHIFT.getZeroBased()));"},{"lineNumber":83,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":84,"author":{"gitID":"shanwpf"},"content":"        assertCommandSuccess(deleteShiftCommand, model, expectedMessage, expectedModel);"},{"lineNumber":85,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":86,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":87,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":88,"author":{"gitID":"shanwpf"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {"},{"lineNumber":89,"author":{"gitID":"shanwpf"},"content":"        Index outOfBoundIndex \u003d INDEX_OUT_OF_BOUNDS_SHIFT;"},{"lineNumber":90,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":91,"author":{"gitID":"shanwpf"},"content":"        DeleteShiftCommand deleteShiftCommand \u003d prepareCommand(outOfBoundIndex);"},{"lineNumber":92,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":93,"author":{"gitID":"shanwpf"},"content":"        assertCommandFailure(deleteShiftCommand, model, Messages.MESSAGE_INVALID_SHIFT_DISPLAYED_INDEX);"},{"lineNumber":94,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":95,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":96,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":97,"author":{"gitID":"shanwpf"},"content":"    public void executeUndoRedo_validIndexUnfilteredList_success() throws Exception {"},{"lineNumber":98,"author":{"gitID":"shanwpf"},"content":"        UndoRedoStack undoRedoStack \u003d new UndoRedoStack();"},{"lineNumber":99,"author":{"gitID":"shanwpf"},"content":"        UndoCommand undoCommand \u003d prepareUndoCommand(model, undoRedoStack);"},{"lineNumber":100,"author":{"gitID":"shanwpf"},"content":"        RedoCommand redoCommand \u003d prepareRedoCommand(model, undoRedoStack);"},{"lineNumber":101,"author":{"gitID":"shanwpf"},"content":"        Shift shiftToDelete \u003d model.getFilteredShiftList().get(INDEX_FIRST_SHIFT.getZeroBased());"},{"lineNumber":102,"author":{"gitID":"shanwpf"},"content":"        DeleteShiftCommand deleteShiftCommand \u003d prepareCommand(INDEX_FIRST_SHIFT);"},{"lineNumber":103,"author":{"gitID":"shanwpf"},"content":"        Model expectedModel \u003d new ModelManager(model.getPartTimeManager(), new UserPrefs(), new OutletInformation());"},{"lineNumber":104,"author":{"gitID":"shanwpf"},"content":"        expectedModel.updateFilteredShiftList(Model.PREDICATE_SHOW_ALL_SHIFTS);"},{"lineNumber":105,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":106,"author":{"gitID":"shanwpf"},"content":"        // delete -\u003e first employee deleted"},{"lineNumber":107,"author":{"gitID":"shanwpf"},"content":"        deleteShiftCommand.execute();"},{"lineNumber":108,"author":{"gitID":"shanwpf"},"content":"        undoRedoStack.push(deleteShiftCommand);"},{"lineNumber":109,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":110,"author":{"gitID":"shanwpf"},"content":"        // undo -\u003e reverts parttimemanager back to previous state and filtered employee list to show all employees"},{"lineNumber":111,"author":{"gitID":"shanwpf"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":112,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":113,"author":{"gitID":"shanwpf"},"content":"        // redo -\u003e same first employee deleted again"},{"lineNumber":114,"author":{"gitID":"shanwpf"},"content":"        expectedModel.deleteShift(shiftToDelete);"},{"lineNumber":115,"author":{"gitID":"shanwpf"},"content":"        assertCommandSuccess(redoCommand, model, RedoCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":116,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":117,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":118,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":119,"author":{"gitID":"shanwpf"},"content":"    public void executeUndoRedo_invalidIndexUnfilteredList_failure() {"},{"lineNumber":120,"author":{"gitID":"shanwpf"},"content":"        UndoRedoStack undoRedoStack \u003d new UndoRedoStack();"},{"lineNumber":121,"author":{"gitID":"shanwpf"},"content":"        UndoCommand undoCommand \u003d prepareUndoCommand(model, undoRedoStack);"},{"lineNumber":122,"author":{"gitID":"shanwpf"},"content":"        RedoCommand redoCommand \u003d prepareRedoCommand(model, undoRedoStack);"},{"lineNumber":123,"author":{"gitID":"shanwpf"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredShiftList().size() + 1);"},{"lineNumber":124,"author":{"gitID":"shanwpf"},"content":"        DeleteShiftCommand deleteShiftCommand \u003d prepareCommand(outOfBoundIndex);"},{"lineNumber":125,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":126,"author":{"gitID":"shanwpf"},"content":"        // execution failed -\u003e deleteCommand not pushed into undoRedoStack"},{"lineNumber":127,"author":{"gitID":"shanwpf"},"content":"        assertCommandFailure(deleteShiftCommand, model, Messages.MESSAGE_INVALID_SHIFT_DISPLAYED_INDEX);"},{"lineNumber":128,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":129,"author":{"gitID":"shanwpf"},"content":"        // no commands in undoRedoStack -\u003e undoCommand and redoCommand fail"},{"lineNumber":130,"author":{"gitID":"shanwpf"},"content":"        assertCommandFailure(undoCommand, model, UndoCommand.MESSAGE_FAILURE);"},{"lineNumber":131,"author":{"gitID":"shanwpf"},"content":"        assertCommandFailure(redoCommand, model, RedoCommand.MESSAGE_FAILURE);"},{"lineNumber":132,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":133,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":134,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":135,"author":{"gitID":"shanwpf"},"content":"    public void equals() throws Exception {"},{"lineNumber":136,"author":{"gitID":"shanwpf"},"content":"        DeleteShiftCommand deleteFirstCommand \u003d prepareCommand(INDEX_FIRST_SHIFT);"},{"lineNumber":137,"author":{"gitID":"shanwpf"},"content":"        DeleteShiftCommand deleteSecondCommand \u003d prepareCommand(INDEX_SECOND_SHIFT);"},{"lineNumber":138,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":139,"author":{"gitID":"shanwpf"},"content":"        // same object -\u003e returns true"},{"lineNumber":140,"author":{"gitID":"shanwpf"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));"},{"lineNumber":141,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":142,"author":{"gitID":"shanwpf"},"content":"        // same values -\u003e returns true"},{"lineNumber":143,"author":{"gitID":"shanwpf"},"content":"        DeleteShiftCommand deleteFirstCommandCopy \u003d prepareCommand(INDEX_FIRST_SHIFT);"},{"lineNumber":144,"author":{"gitID":"shanwpf"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));"},{"lineNumber":145,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":146,"author":{"gitID":"shanwpf"},"content":"        // one command preprocessed when previously equal -\u003e returns false"},{"lineNumber":147,"author":{"gitID":"shanwpf"},"content":"        deleteFirstCommandCopy.preprocessUndoableCommand();"},{"lineNumber":148,"author":{"gitID":"shanwpf"},"content":"        assertFalse(deleteFirstCommand.equals(deleteFirstCommandCopy));"},{"lineNumber":149,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":150,"author":{"gitID":"shanwpf"},"content":"        // different types -\u003e returns false"},{"lineNumber":151,"author":{"gitID":"shanwpf"},"content":"        assertFalse(deleteFirstCommand.equals(1));"},{"lineNumber":152,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":153,"author":{"gitID":"shanwpf"},"content":"        // null -\u003e returns false"},{"lineNumber":154,"author":{"gitID":"shanwpf"},"content":"        assertFalse(deleteFirstCommand.equals(null));"},{"lineNumber":155,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":156,"author":{"gitID":"shanwpf"},"content":"        // different employee -\u003e returns false"},{"lineNumber":157,"author":{"gitID":"shanwpf"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));"},{"lineNumber":158,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":159,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":160,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":161,"author":{"gitID":"shanwpf"},"content":"     * Returns a {@code DeleteCommand} with the parameter {@code index}."},{"lineNumber":162,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":163,"author":{"gitID":"shanwpf"},"content":"    private DeleteShiftCommand prepareCommand(Index index) {"},{"lineNumber":164,"author":{"gitID":"shanwpf"},"content":"        DeleteShiftCommand deleteShiftCommand \u003d new DeleteShiftCommand(index);"},{"lineNumber":165,"author":{"gitID":"shanwpf"},"content":"        deleteShiftCommand.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":166,"author":{"gitID":"shanwpf"},"content":"        return deleteShiftCommand;"},{"lineNumber":167,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":168,"author":{"gitID":"shanwpf"},"content":"}"}],"authorContributionMap":{"shanwpf":140,"-":28}},{"path":"src/test/java/seedu/ptman/logic/commands/ChangeAdminPasswordCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_ACCESS_DENIED;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.assertCommandFailure;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.assertCommandSuccess;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.getTypicalPartTimeManager;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_FIRST_EMPLOYEE;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.CommandHistory;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.UndoRedoStack;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.exceptions.InvalidPasswordException;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Model;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.ptman.model.ModelManager;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.ptman.model.UserPrefs;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Employee;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"koo1993"},"content":"//@@author koo1993"},{"lineNumber":29,"author":{"gitID":"koo1993"},"content":"/**"},{"lineNumber":30,"author":{"gitID":"koo1993"},"content":" * Contains integration tests (interaction with the Model) and unit tests for"},{"lineNumber":31,"author":{"gitID":"koo1993"},"content":" * {@code ChangeAdminPasswordCommand}."},{"lineNumber":32,"author":{"gitID":"koo1993"},"content":" */"},{"lineNumber":33,"author":{"gitID":"koo1993"},"content":"public class ChangeAdminPasswordCommandTest {"},{"lineNumber":34,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":35,"author":{"gitID":"koo1993"},"content":"    @Rule"},{"lineNumber":36,"author":{"gitID":"koo1993"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":37,"author":{"gitID":"koo1993"},"content":"    private Model model \u003d new ModelManager(getTypicalPartTimeManager(), new UserPrefs(), new OutletInformation());"},{"lineNumber":38,"author":{"gitID":"koo1993"},"content":"    private ArrayList\u003cString\u003e default1PasswordsTodefault2 \u003d new ArrayList\u003c\u003e();"},{"lineNumber":39,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":40,"author":{"gitID":"koo1993"},"content":"    @Before"},{"lineNumber":41,"author":{"gitID":"koo1993"},"content":"    public void setup() {"},{"lineNumber":42,"author":{"gitID":"koo1993"},"content":"        model.setTrueAdminMode(new Password());"},{"lineNumber":43,"author":{"gitID":"koo1993"},"content":"        default1PasswordsTodefault2.add(\"DEFAULT1\");"},{"lineNumber":44,"author":{"gitID":"koo1993"},"content":"        default1PasswordsTodefault2.add(\"DEFAULT2\");"},{"lineNumber":45,"author":{"gitID":"koo1993"},"content":"        default1PasswordsTodefault2.add(\"DEFAULT2\");"},{"lineNumber":46,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":47,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":48,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":49,"author":{"gitID":"koo1993"},"content":"    public void constructor_nullPassword_throwsNullPointerException() {"},{"lineNumber":50,"author":{"gitID":"koo1993"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":51,"author":{"gitID":"koo1993"},"content":"        new ChangeAdminPasswordCommand(null);"},{"lineNumber":52,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":53,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":54,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":55,"author":{"gitID":"koo1993"},"content":"    public void constructor_passwordsNotFullyTabulated_throwsNullPointerException() {"},{"lineNumber":56,"author":{"gitID":"koo1993"},"content":"        ArrayList\u003cString\u003e incompletePasswords  \u003d new ArrayList\u003c\u003e();"},{"lineNumber":57,"author":{"gitID":"koo1993"},"content":"        incompletePasswords.add(\"DEFAULT1\");"},{"lineNumber":58,"author":{"gitID":"koo1993"},"content":"        incompletePasswords.add(\"DEFAULT2\");"},{"lineNumber":59,"author":{"gitID":"koo1993"},"content":"        thrown.expect(IndexOutOfBoundsException.class);"},{"lineNumber":60,"author":{"gitID":"koo1993"},"content":"        new ChangeAdminPasswordCommand(incompletePasswords);"},{"lineNumber":61,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":62,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":63,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":64,"author":{"gitID":"koo1993"},"content":"    public void execute_notInAdminModeValidInputs_accessDenied() {"},{"lineNumber":65,"author":{"gitID":"koo1993"},"content":"        model.setFalseAdminMode();"},{"lineNumber":66,"author":{"gitID":"koo1993"},"content":"        assertCommandFailure(prepareCommand(default1PasswordsTodefault2), model, MESSAGE_ACCESS_DENIED);"},{"lineNumber":67,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":69,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":70,"author":{"gitID":"koo1993"},"content":"    public void execute_validInputs_success() throws Exception {"},{"lineNumber":71,"author":{"gitID":"koo1993"},"content":"        Employee employeeToEdit \u003d model.getFilteredEmployeeList().get(INDEX_FIRST_EMPLOYEE.getZeroBased());"},{"lineNumber":72,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":73,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":74,"author":{"gitID":"koo1993"},"content":"        ChangeAdminPasswordCommand changePwCommand \u003d prepareCommand(default1PasswordsTodefault2);"},{"lineNumber":75,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":76,"author":{"gitID":"koo1993"},"content":"        String expectedMessage \u003d String.format(ChangeAdminPasswordCommand.MESSAGE_SUCCESS, employeeToEdit.getName());"},{"lineNumber":77,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":78,"author":{"gitID":"koo1993"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getPartTimeManager(),"},{"lineNumber":79,"author":{"gitID":"koo1993"},"content":"                new UserPrefs(), new OutletInformation());"},{"lineNumber":80,"author":{"gitID":"koo1993"},"content":"        expectedModel.setTrueAdminMode(new Password());"},{"lineNumber":81,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":82,"author":{"gitID":"koo1993"},"content":"        Password newPassword \u003d new Password();"},{"lineNumber":83,"author":{"gitID":"koo1993"},"content":"        newPassword.createPassword(default1PasswordsTodefault2.get(1));"},{"lineNumber":84,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":85,"author":{"gitID":"koo1993"},"content":"        expectedModel.setAdminPassword(newPassword);"},{"lineNumber":86,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":87,"author":{"gitID":"koo1993"},"content":"        assertCommandSuccess(changePwCommand, model, expectedMessage, expectedModel);"},{"lineNumber":88,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":89,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":90,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":91,"author":{"gitID":"koo1993"},"content":"    public void execute_invalidPassword_throwsInvalidPasswordException() throws Exception {"},{"lineNumber":92,"author":{"gitID":"koo1993"},"content":"        ArrayList\u003cString\u003e wrongPasswords \u003d new ArrayList\u003c\u003e();"},{"lineNumber":93,"author":{"gitID":"koo1993"},"content":"        wrongPasswords.add(\"wrongpassword\");"},{"lineNumber":94,"author":{"gitID":"koo1993"},"content":"        wrongPasswords.add(\"DEFAULT2\");"},{"lineNumber":95,"author":{"gitID":"koo1993"},"content":"        wrongPasswords.add(\"DEFAULT2\");"},{"lineNumber":96,"author":{"gitID":"koo1993"},"content":"        thrown.expect(InvalidPasswordException.class);"},{"lineNumber":97,"author":{"gitID":"koo1993"},"content":"        prepareCommand(wrongPasswords).execute();"},{"lineNumber":98,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":99,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":100,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":101,"author":{"gitID":"koo1993"},"content":"    public void execute_unmatchedNewPassword_throwsCommandException() throws Exception {"},{"lineNumber":102,"author":{"gitID":"koo1993"},"content":"        ArrayList\u003cString\u003e unmatchNewpasswords \u003d new ArrayList\u003c\u003e();"},{"lineNumber":103,"author":{"gitID":"koo1993"},"content":"        unmatchNewpasswords.add(\"DEFAULT1\");"},{"lineNumber":104,"author":{"gitID":"koo1993"},"content":"        unmatchNewpasswords.add(\"DEFAULT3\");"},{"lineNumber":105,"author":{"gitID":"koo1993"},"content":"        unmatchNewpasswords.add(\"DEFAULT4\");"},{"lineNumber":106,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":107,"author":{"gitID":"koo1993"},"content":"        ChangeAdminPasswordCommand changePwCommand \u003d prepareCommand(unmatchNewpasswords);"},{"lineNumber":108,"author":{"gitID":"koo1993"},"content":"        assertCommandFailure(changePwCommand, model, ChangeAdminPasswordCommand.MESSAGE_INVALID_CONFIMREDPASSWORD);"},{"lineNumber":109,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":110,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":111,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":112,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":113,"author":{"gitID":"koo1993"},"content":"    public void equals() throws Exception {"},{"lineNumber":114,"author":{"gitID":"koo1993"},"content":"        ArrayList\u003cString\u003e default1PasswordsTodefault3 \u003d new ArrayList\u003c\u003e();"},{"lineNumber":115,"author":{"gitID":"koo1993"},"content":"        default1PasswordsTodefault3.add(\"DEFAULT1\");"},{"lineNumber":116,"author":{"gitID":"koo1993"},"content":"        default1PasswordsTodefault3.add(\"DEFAULT3\");"},{"lineNumber":117,"author":{"gitID":"koo1993"},"content":"        default1PasswordsTodefault3.add(\"DEFAULT3\");"},{"lineNumber":118,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":119,"author":{"gitID":"koo1993"},"content":"        ChangeAdminPasswordCommand changePwFirstCommand \u003d prepareCommand(default1PasswordsTodefault2);"},{"lineNumber":120,"author":{"gitID":"koo1993"},"content":"        ChangeAdminPasswordCommand changePwSecondCommand \u003d prepareCommand(default1PasswordsTodefault3);"},{"lineNumber":121,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":122,"author":{"gitID":"koo1993"},"content":"        // same object -\u003e returns true"},{"lineNumber":123,"author":{"gitID":"koo1993"},"content":"        assertTrue(changePwFirstCommand.equals(changePwFirstCommand));"},{"lineNumber":124,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":125,"author":{"gitID":"koo1993"},"content":"        // same values -\u003e returns true"},{"lineNumber":126,"author":{"gitID":"koo1993"},"content":"        ChangeAdminPasswordCommand changePwFirstCommandCopy \u003d prepareCommand(default1PasswordsTodefault2);"},{"lineNumber":127,"author":{"gitID":"koo1993"},"content":"        assertTrue(changePwFirstCommand.equals(changePwFirstCommandCopy));"},{"lineNumber":128,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":129,"author":{"gitID":"koo1993"},"content":"        // different types -\u003e returns false"},{"lineNumber":130,"author":{"gitID":"koo1993"},"content":"        assertFalse(changePwFirstCommandCopy.equals(1));"},{"lineNumber":131,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":132,"author":{"gitID":"koo1993"},"content":"        // null -\u003e returns false"},{"lineNumber":133,"author":{"gitID":"koo1993"},"content":"        assertFalse(changePwFirstCommandCopy.equals(null));"},{"lineNumber":134,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":135,"author":{"gitID":"koo1993"},"content":"        // different employee -\u003e returns false"},{"lineNumber":136,"author":{"gitID":"koo1993"},"content":"        assertFalse(changePwFirstCommand.equals(changePwSecondCommand));"},{"lineNumber":137,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":138,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":139,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":140,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":141,"author":{"gitID":"koo1993"},"content":"     * Returns a {@code ChangeAdminPasswordCommand} with the parameter {@code index} and {@code passwords}."},{"lineNumber":142,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":143,"author":{"gitID":"koo1993"},"content":"    private ChangeAdminPasswordCommand prepareCommand(ArrayList\u003cString\u003e passwords) {"},{"lineNumber":144,"author":{"gitID":"koo1993"},"content":"        ChangeAdminPasswordCommand changePwCommand \u003d new ChangeAdminPasswordCommand(passwords);"},{"lineNumber":145,"author":{"gitID":"koo1993"},"content":"        changePwCommand.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":146,"author":{"gitID":"koo1993"},"content":"        return changePwCommand;"},{"lineNumber":147,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":148,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":149,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":150,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":151,"author":{"gitID":"koo1993"},"content":"}"}],"authorContributionMap":{"koo1993":124,"-":27}},{"path":"src/test/java/seedu/ptman/logic/commands/ViewShiftCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static org.junit.Assert.fail;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_FIRST_SHIFT;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_OUT_OF_BOUNDS_SHIFT;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_SECOND_SHIFT;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_SEVENTH_SHIFT;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalShifts.SHIFT_MONDAY_AM;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalShifts.SHIFT_MONDAY_PM;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalShifts.SHIFT_THURSDAY_PM;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalShifts.getTypicalPartTimeManagerWithShifts;"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.Messages;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.index.Index;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.CommandHistory;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.UndoRedoStack;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.exceptions.CommandException;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Model;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import seedu.ptman.model.ModelManager;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"import seedu.ptman.model.UserPrefs;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Employee;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"hzxcaryn"},"content":"//@@author hzxcaryn"},{"lineNumber":32,"author":{"gitID":"hzxcaryn"},"content":"/**"},{"lineNumber":33,"author":{"gitID":"hzxcaryn"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand."},{"lineNumber":34,"author":{"gitID":"hzxcaryn"},"content":" */"},{"lineNumber":35,"author":{"gitID":"hzxcaryn"},"content":"public class ViewShiftCommandTest {"},{"lineNumber":36,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":37,"author":{"gitID":"hzxcaryn"},"content":"    private Model model;"},{"lineNumber":38,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":39,"author":{"gitID":"hzxcaryn"},"content":"    @Before"},{"lineNumber":40,"author":{"gitID":"hzxcaryn"},"content":"    public void setUp() {"},{"lineNumber":41,"author":{"gitID":"hzxcaryn"},"content":"        model \u003d new ModelManager(getTypicalPartTimeManagerWithShifts(),"},{"lineNumber":42,"author":{"gitID":"hzxcaryn"},"content":"                new UserPrefs(), new OutletInformation());"},{"lineNumber":43,"author":{"gitID":"hzxcaryn"},"content":"        model.setFilteredShiftListToWeek(SHIFT_MONDAY_AM.getDate().getLocalDate());"},{"lineNumber":44,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":46,"author":{"gitID":"hzxcaryn"},"content":"    @Test"},{"lineNumber":47,"author":{"gitID":"hzxcaryn"},"content":"    public void execute_invalidIndexUnfilteredList_failure() {"},{"lineNumber":48,"author":{"gitID":"hzxcaryn"},"content":"        Index outOfBoundsIndex \u003d Index.fromOneBased(model.getFilteredShiftList().size() + 1);"},{"lineNumber":49,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":50,"author":{"gitID":"hzxcaryn"},"content":"        assertExecutionFailure(outOfBoundsIndex, Messages.MESSAGE_INVALID_SHIFT_DISPLAYED_INDEX);"},{"lineNumber":51,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":53,"author":{"gitID":"hzxcaryn"},"content":"    @Test"},{"lineNumber":54,"author":{"gitID":"hzxcaryn"},"content":"    public void execute_validIndexShiftWithEmployees_success() {"},{"lineNumber":55,"author":{"gitID":"hzxcaryn"},"content":"        assertExecutionSuccess(INDEX_SEVENTH_SHIFT,"},{"lineNumber":56,"author":{"gitID":"hzxcaryn"},"content":"                SHIFT_THURSDAY_PM.getEmployeeList().sorted()); //8th Shift has employees"},{"lineNumber":57,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":58,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":59,"author":{"gitID":"hzxcaryn"},"content":"    @Test"},{"lineNumber":60,"author":{"gitID":"hzxcaryn"},"content":"    public void execute_validIndexShiftWithoutEmployees_success() {"},{"lineNumber":61,"author":{"gitID":"hzxcaryn"},"content":"        assertExecutionSuccess(INDEX_SECOND_SHIFT, SHIFT_MONDAY_PM.getEmployeeList());"},{"lineNumber":62,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":64,"author":{"gitID":"hzxcaryn"},"content":"    @Test"},{"lineNumber":65,"author":{"gitID":"hzxcaryn"},"content":"    public void execute_invalidIndexFilteredList_failure() {"},{"lineNumber":66,"author":{"gitID":"hzxcaryn"},"content":"        Index outOfBoundsIndex \u003d INDEX_OUT_OF_BOUNDS_SHIFT;"},{"lineNumber":67,"author":{"gitID":"hzxcaryn"},"content":"        // ensures that outOfBoundIndex is still in bounds of ptman shift list"},{"lineNumber":68,"author":{"gitID":"hzxcaryn"},"content":"        assertTrue(outOfBoundsIndex.getZeroBased() \u003e model.getPartTimeManager().getShiftList().size());"},{"lineNumber":69,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":70,"author":{"gitID":"hzxcaryn"},"content":"        assertExecutionFailure(outOfBoundsIndex, Messages.MESSAGE_INVALID_SHIFT_DISPLAYED_INDEX);"},{"lineNumber":71,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":72,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":73,"author":{"gitID":"hzxcaryn"},"content":"    @Test"},{"lineNumber":74,"author":{"gitID":"hzxcaryn"},"content":"    public void equals() {"},{"lineNumber":75,"author":{"gitID":"hzxcaryn"},"content":"        ViewShiftCommand viewShiftFirstCommand \u003d new ViewShiftCommand(INDEX_FIRST_SHIFT);"},{"lineNumber":76,"author":{"gitID":"hzxcaryn"},"content":"        ViewShiftCommand viewShiftSecondCommand \u003d new ViewShiftCommand(INDEX_SECOND_SHIFT);"},{"lineNumber":77,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":78,"author":{"gitID":"hzxcaryn"},"content":"        // same object -\u003e returns true"},{"lineNumber":79,"author":{"gitID":"hzxcaryn"},"content":"        assertTrue(viewShiftFirstCommand.equals(viewShiftFirstCommand));"},{"lineNumber":80,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":81,"author":{"gitID":"hzxcaryn"},"content":"        // same values -\u003e returns true"},{"lineNumber":82,"author":{"gitID":"hzxcaryn"},"content":"        ViewShiftCommand viewShiftFirstCommandCopy \u003d new ViewShiftCommand(INDEX_FIRST_SHIFT);"},{"lineNumber":83,"author":{"gitID":"hzxcaryn"},"content":"        assertTrue(viewShiftFirstCommand.equals(viewShiftFirstCommandCopy));"},{"lineNumber":84,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":85,"author":{"gitID":"hzxcaryn"},"content":"        // different types -\u003e returns false"},{"lineNumber":86,"author":{"gitID":"hzxcaryn"},"content":"        assertFalse(viewShiftFirstCommand.equals(1));"},{"lineNumber":87,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":88,"author":{"gitID":"hzxcaryn"},"content":"        // null -\u003e returns false"},{"lineNumber":89,"author":{"gitID":"hzxcaryn"},"content":"        assertFalse(viewShiftFirstCommand.equals(null));"},{"lineNumber":90,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":91,"author":{"gitID":"hzxcaryn"},"content":"        // different employee -\u003e returns false"},{"lineNumber":92,"author":{"gitID":"hzxcaryn"},"content":"        assertFalse(viewShiftFirstCommand.equals(viewShiftSecondCommand));"},{"lineNumber":93,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":94,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":95,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":96,"author":{"gitID":"hzxcaryn"},"content":"     * Executes a {@code ViewShiftCommand} with the given {@code index}, and checks that {@code filteredEmployeeList}"},{"lineNumber":97,"author":{"gitID":"hzxcaryn"},"content":"     * is updated with the correct employees."},{"lineNumber":98,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":99,"author":{"gitID":"hzxcaryn"},"content":"    private void assertExecutionSuccess(Index index, ObservableList\u003cEmployee\u003e expectedEmployeeList) {"},{"lineNumber":100,"author":{"gitID":"hzxcaryn"},"content":"        ViewShiftCommand viewShiftCommand \u003d prepareCommand(index);"},{"lineNumber":101,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":102,"author":{"gitID":"hzxcaryn"},"content":"        try {"},{"lineNumber":103,"author":{"gitID":"hzxcaryn"},"content":"            CommandResult commandResult \u003d viewShiftCommand.execute();"},{"lineNumber":104,"author":{"gitID":"hzxcaryn"},"content":"            assertEquals(String.format(ViewShiftCommand.MESSAGE_SUCCESS, index.getOneBased()),"},{"lineNumber":105,"author":{"gitID":"hzxcaryn"},"content":"                    commandResult.feedbackToUser);"},{"lineNumber":106,"author":{"gitID":"hzxcaryn"},"content":"        } catch (CommandException ce) {"},{"lineNumber":107,"author":{"gitID":"hzxcaryn"},"content":"            throw new IllegalArgumentException(\"Execution of command should not fail.\", ce);"},{"lineNumber":108,"author":{"gitID":"hzxcaryn"},"content":"        }"},{"lineNumber":109,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":110,"author":{"gitID":"hzxcaryn"},"content":"        // checks that filteredEmployeeList is updated with the correct employees."},{"lineNumber":111,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(expectedEmployeeList, model.getFilteredEmployeeList());"},{"lineNumber":112,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":113,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":114,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":115,"author":{"gitID":"hzxcaryn"},"content":"     * Executes a {@code ViewShiftCommand} with the given {@code index}, and checks that a {@code CommandException}"},{"lineNumber":116,"author":{"gitID":"hzxcaryn"},"content":"     * is thrown with the {@code expectedMessage}."},{"lineNumber":117,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":118,"author":{"gitID":"hzxcaryn"},"content":"    private void assertExecutionFailure(Index index, String expectedMessage) {"},{"lineNumber":119,"author":{"gitID":"hzxcaryn"},"content":"        ViewShiftCommand viewShiftCommand \u003d prepareCommand(index);"},{"lineNumber":120,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":121,"author":{"gitID":"hzxcaryn"},"content":"        try {"},{"lineNumber":122,"author":{"gitID":"hzxcaryn"},"content":"            viewShiftCommand.execute();"},{"lineNumber":123,"author":{"gitID":"hzxcaryn"},"content":"            fail(\"The expected CommandException was not thrown.\");"},{"lineNumber":124,"author":{"gitID":"hzxcaryn"},"content":"        } catch (CommandException ce) {"},{"lineNumber":125,"author":{"gitID":"hzxcaryn"},"content":"            assertEquals(expectedMessage, ce.getMessage());"},{"lineNumber":126,"author":{"gitID":"hzxcaryn"},"content":"        }"},{"lineNumber":127,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":128,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":129,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":130,"author":{"gitID":"hzxcaryn"},"content":"     * Returns a {@code ViewShiftCommand} with parameters {@code index}."},{"lineNumber":131,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":132,"author":{"gitID":"hzxcaryn"},"content":"    private ViewShiftCommand prepareCommand(Index index) {"},{"lineNumber":133,"author":{"gitID":"hzxcaryn"},"content":"        ViewShiftCommand viewShiftCommand \u003d new ViewShiftCommand(index);"},{"lineNumber":134,"author":{"gitID":"hzxcaryn"},"content":"        viewShiftCommand.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":135,"author":{"gitID":"hzxcaryn"},"content":"        return viewShiftCommand;"},{"lineNumber":136,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":137,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":138,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":139,"author":{"gitID":"hzxcaryn"},"content":"}"}],"authorContributionMap":{"hzxcaryn":109,"-":30}},{"path":"src/test/java/seedu/ptman/logic/commands/ApplyCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.ApplyCommand.MESSAGE_DUPLICATE_EMPLOYEE;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.ApplyCommand.MESSAGE_SHIFT_FULL;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.ApplyCommand.MESSAGE_SHIFT_OVER;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.assertCommandFailure;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.assertCommandSuccess;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_FIRST_EMPLOYEE;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_FIRST_SHIFT;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_SECOND_EMPLOYEE;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_SECOND_SHIFT;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalShifts.getTypicalPartTimeManagerWithShifts;"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"import org.junit.After;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.index.Index;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.CommandHistory;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.UndoRedoStack;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.exceptions.CommandException;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.exceptions.InvalidPasswordException;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.exceptions.MissingPasswordException;"},{"lineNumber":30,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Model;"},{"lineNumber":31,"author":{"gitID":"-"},"content":"import seedu.ptman.model.ModelManager;"},{"lineNumber":32,"author":{"gitID":"-"},"content":"import seedu.ptman.model.PartTimeManager;"},{"lineNumber":33,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":34,"author":{"gitID":"-"},"content":"import seedu.ptman.model.UserPrefs;"},{"lineNumber":35,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Employee;"},{"lineNumber":36,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.exceptions.DuplicateEmployeeException;"},{"lineNumber":37,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":38,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Shift;"},{"lineNumber":39,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.exceptions.DuplicateShiftException;"},{"lineNumber":40,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.exceptions.ShiftFullException;"},{"lineNumber":41,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.Assert;"},{"lineNumber":42,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.EmployeeBuilder;"},{"lineNumber":43,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.ShiftBuilder;"},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"shanwpf"},"content":"//@@author shanwpf"},{"lineNumber":46,"author":{"gitID":"shanwpf"},"content":"/**"},{"lineNumber":47,"author":{"gitID":"shanwpf"},"content":" * Contains integration tests (interaction with the Model, UndoCommand and RedoCommand) and unit tests for ApplyCommand."},{"lineNumber":48,"author":{"gitID":"shanwpf"},"content":" */"},{"lineNumber":49,"author":{"gitID":"shanwpf"},"content":"public class ApplyCommandTest {"},{"lineNumber":50,"author":{"gitID":"shanwpf"},"content":"    @Rule"},{"lineNumber":51,"author":{"gitID":"shanwpf"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":52,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":53,"author":{"gitID":"shanwpf"},"content":"    private Model model \u003d new ModelManager(new PartTimeManager(getTypicalPartTimeManagerWithShifts()), new UserPrefs(),"},{"lineNumber":54,"author":{"gitID":"shanwpf"},"content":"            new OutletInformation());"},{"lineNumber":55,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":56,"author":{"gitID":"shanwpf"},"content":"    @Before"},{"lineNumber":57,"author":{"gitID":"shanwpf"},"content":"    public void setMode_adminMode() {"},{"lineNumber":58,"author":{"gitID":"shanwpf"},"content":"        model.setTrueAdminMode(new Password());"},{"lineNumber":59,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":60,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":61,"author":{"gitID":"shanwpf"},"content":"    @Before"},{"lineNumber":62,"author":{"gitID":"shanwpf"},"content":"    public void showAllShifts() {"},{"lineNumber":63,"author":{"gitID":"shanwpf"},"content":"        model.updateFilteredShiftList(Model.PREDICATE_SHOW_ALL_SHIFTS);"},{"lineNumber":64,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":65,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":66,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":67,"author":{"gitID":"shanwpf"},"content":"    public void execute_userModeNoPassword_throwsMissingPasswordException() throws Exception {"},{"lineNumber":68,"author":{"gitID":"shanwpf"},"content":"        Employee employee \u003d new EmployeeBuilder().withName(\"Present\").build();"},{"lineNumber":69,"author":{"gitID":"shanwpf"},"content":"        Shift shift \u003d new ShiftBuilder().build();"},{"lineNumber":70,"author":{"gitID":"shanwpf"},"content":"        Model model \u003d prepareModel(false, shift, employee);"},{"lineNumber":71,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":72,"author":{"gitID":"shanwpf"},"content":"        ApplyCommand applyCommand \u003d prepareCommandWithoutPassword(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, model);"},{"lineNumber":73,"author":{"gitID":"shanwpf"},"content":"        thrown.expect(MissingPasswordException.class);"},{"lineNumber":74,"author":{"gitID":"shanwpf"},"content":"        applyCommand.execute();"},{"lineNumber":75,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":76,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":77,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":78,"author":{"gitID":"shanwpf"},"content":"    public void execute_userModeIncorrectPassword_throwsInvalidPasswordException() throws Exception {"},{"lineNumber":79,"author":{"gitID":"shanwpf"},"content":"        Employee employee \u003d new EmployeeBuilder().withName(\"Present\").withPassword(\"incorrect\").build();"},{"lineNumber":80,"author":{"gitID":"shanwpf"},"content":"        Shift shift \u003d new ShiftBuilder().build();"},{"lineNumber":81,"author":{"gitID":"shanwpf"},"content":"        Model model \u003d prepareModel(false, shift, employee);"},{"lineNumber":82,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":83,"author":{"gitID":"shanwpf"},"content":"        ApplyCommand applyCommand \u003d prepareCommandWithPassword(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, model);"},{"lineNumber":84,"author":{"gitID":"shanwpf"},"content":"        thrown.expect(InvalidPasswordException.class);"},{"lineNumber":85,"author":{"gitID":"shanwpf"},"content":"        applyCommand.execute();"},{"lineNumber":86,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":87,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":88,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":89,"author":{"gitID":"shanwpf"},"content":"    public void execute_adminModeEmployeeNotInShift_success() throws Exception {"},{"lineNumber":90,"author":{"gitID":"shanwpf"},"content":"        Employee employee \u003d new EmployeeBuilder().withName(\"Present\").build();"},{"lineNumber":91,"author":{"gitID":"shanwpf"},"content":"        Employee expectedEmployee \u003d new EmployeeBuilder().withName(\"Present\").build();"},{"lineNumber":92,"author":{"gitID":"shanwpf"},"content":"        Shift shift \u003d new ShiftBuilder().build();"},{"lineNumber":93,"author":{"gitID":"shanwpf"},"content":"        Shift expectedShift \u003d new ShiftBuilder().build();"},{"lineNumber":94,"author":{"gitID":"shanwpf"},"content":"        expectedShift.addEmployee(expectedEmployee);"},{"lineNumber":95,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":96,"author":{"gitID":"shanwpf"},"content":"        Model model \u003d prepareModel(true, shift, employee);"},{"lineNumber":97,"author":{"gitID":"shanwpf"},"content":"        Model expectedModel \u003d prepareModel(true, expectedShift, expectedEmployee);"},{"lineNumber":98,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":99,"author":{"gitID":"shanwpf"},"content":"        ApplyCommand applyCommand \u003d prepareCommandWithoutPassword(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, model);"},{"lineNumber":100,"author":{"gitID":"shanwpf"},"content":"        String expectedMessage \u003d"},{"lineNumber":101,"author":{"gitID":"shanwpf"},"content":"                String.format(ApplyCommand.MESSAGE_APPLY_SHIFT_SUCCESS, expectedEmployee.getName(), 1);"},{"lineNumber":102,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":103,"author":{"gitID":"shanwpf"},"content":"        assertCommandSuccess(applyCommand, model, expectedMessage, expectedModel);"},{"lineNumber":104,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":105,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":106,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":107,"author":{"gitID":"shanwpf"},"content":"    public void execute_shiftFull_throwsCommandException()"},{"lineNumber":108,"author":{"gitID":"shanwpf"},"content":"            throws ShiftFullException, DuplicateEmployeeException {"},{"lineNumber":109,"author":{"gitID":"shanwpf"},"content":"        Employee employee1 \u003d new EmployeeBuilder().withName(\"first\").build();"},{"lineNumber":110,"author":{"gitID":"shanwpf"},"content":"        Employee employee2 \u003d new EmployeeBuilder().withName(\"second\").build();"},{"lineNumber":111,"author":{"gitID":"shanwpf"},"content":"        Shift shift \u003d new ShiftBuilder().withCapacity(\"1\").build();"},{"lineNumber":112,"author":{"gitID":"shanwpf"},"content":"        shift.addEmployee(employee1);"},{"lineNumber":113,"author":{"gitID":"shanwpf"},"content":"        Model model \u003d prepareModel(false, shift, employee1, employee2);"},{"lineNumber":114,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":115,"author":{"gitID":"shanwpf"},"content":"        String expectedMessage \u003d String.format(MESSAGE_SHIFT_FULL, INDEX_FIRST_SHIFT.getOneBased());"},{"lineNumber":116,"author":{"gitID":"shanwpf"},"content":"        ApplyCommand applyCommand \u003d prepareCommandWithPassword(INDEX_SECOND_EMPLOYEE, INDEX_FIRST_SHIFT, model);"},{"lineNumber":117,"author":{"gitID":"shanwpf"},"content":"        assertCommandFailure(applyCommand, model, expectedMessage);"},{"lineNumber":118,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":119,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":120,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":121,"author":{"gitID":"shanwpf"},"content":"    public void execute_duplicateEmployee_throwsCommandException()"},{"lineNumber":122,"author":{"gitID":"shanwpf"},"content":"            throws ShiftFullException, DuplicateEmployeeException {"},{"lineNumber":123,"author":{"gitID":"shanwpf"},"content":"        Employee employee1 \u003d new EmployeeBuilder().withName(\"first\").build();"},{"lineNumber":124,"author":{"gitID":"shanwpf"},"content":"        Shift shift \u003d new ShiftBuilder().withCapacity(\"2\").build();"},{"lineNumber":125,"author":{"gitID":"shanwpf"},"content":"        shift.addEmployee(employee1);"},{"lineNumber":126,"author":{"gitID":"shanwpf"},"content":"        Model model \u003d prepareModel(false, shift, employee1);"},{"lineNumber":127,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":128,"author":{"gitID":"shanwpf"},"content":"        ApplyCommand applyCommand \u003d prepareCommandWithPassword(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, model);"},{"lineNumber":129,"author":{"gitID":"shanwpf"},"content":"        assertCommandFailure(applyCommand, model, MESSAGE_DUPLICATE_EMPLOYEE);"},{"lineNumber":130,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":131,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":132,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":133,"author":{"gitID":"shanwpf"},"content":"    public void execute_shiftOver_throwsCommandException() {"},{"lineNumber":134,"author":{"gitID":"shanwpf"},"content":"        Shift shift \u003d new ShiftBuilder().withDate(\"01-01-10\").withCapacity(\"3\").build();"},{"lineNumber":135,"author":{"gitID":"shanwpf"},"content":"        Employee employee \u003d new EmployeeBuilder().build();"},{"lineNumber":136,"author":{"gitID":"shanwpf"},"content":"        Model model \u003d prepareModel(false, shift, employee);"},{"lineNumber":137,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":138,"author":{"gitID":"shanwpf"},"content":"        String expectedMessage \u003d String.format(MESSAGE_SHIFT_OVER, INDEX_FIRST_SHIFT.getOneBased());"},{"lineNumber":139,"author":{"gitID":"shanwpf"},"content":"        ApplyCommand applyCommand \u003d prepareCommandWithPassword(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, model);"},{"lineNumber":140,"author":{"gitID":"shanwpf"},"content":"        assertCommandFailure(applyCommand, model, expectedMessage);"},{"lineNumber":141,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":142,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":143,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":144,"author":{"gitID":"shanwpf"},"content":"    public void equals_sameObject_returnsTrue() {"},{"lineNumber":145,"author":{"gitID":"shanwpf"},"content":"        ApplyCommand applyCommand \u003d prepareCommandWithPassword(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, model);"},{"lineNumber":146,"author":{"gitID":"shanwpf"},"content":"        assertTrue(applyCommand.equals(applyCommand));"},{"lineNumber":147,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":148,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":149,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":150,"author":{"gitID":"shanwpf"},"content":"    public void equals_sameValues_returnsTrue() {"},{"lineNumber":151,"author":{"gitID":"shanwpf"},"content":"        ApplyCommand applyCommand1 \u003d prepareCommandWithPassword(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, model);"},{"lineNumber":152,"author":{"gitID":"shanwpf"},"content":"        ApplyCommand applyCommand2 \u003d prepareCommandWithPassword(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, model);"},{"lineNumber":153,"author":{"gitID":"shanwpf"},"content":"        assertTrue(applyCommand1.equals(applyCommand2));"},{"lineNumber":154,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":155,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":156,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":157,"author":{"gitID":"shanwpf"},"content":"    public void equals_differentTypes_returnsFalse() {"},{"lineNumber":158,"author":{"gitID":"shanwpf"},"content":"        ApplyCommand applyCommand \u003d prepareCommandWithPassword(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, model);"},{"lineNumber":159,"author":{"gitID":"shanwpf"},"content":"        assertFalse(applyCommand.equals(1));"},{"lineNumber":160,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":161,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":162,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":163,"author":{"gitID":"shanwpf"},"content":"    public void equals_null_returnsFalse() {"},{"lineNumber":164,"author":{"gitID":"shanwpf"},"content":"        ApplyCommand applyCommand \u003d prepareCommandWithPassword(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, model);"},{"lineNumber":165,"author":{"gitID":"shanwpf"},"content":"        assertFalse(applyCommand.equals(null));"},{"lineNumber":166,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":167,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":168,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":169,"author":{"gitID":"shanwpf"},"content":"    public void equals_differentShifts_returnsFalse() {"},{"lineNumber":170,"author":{"gitID":"shanwpf"},"content":"        ApplyCommand applyCommandFirst \u003d prepareCommandWithPassword(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, model);"},{"lineNumber":171,"author":{"gitID":"shanwpf"},"content":"        ApplyCommand applyCommandSecond \u003d prepareCommandWithPassword(INDEX_FIRST_EMPLOYEE, INDEX_SECOND_SHIFT, model);"},{"lineNumber":172,"author":{"gitID":"shanwpf"},"content":"        assertFalse(applyCommandFirst.equals(applyCommandSecond));"},{"lineNumber":173,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":174,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":175,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":176,"author":{"gitID":"shanwpf"},"content":"    public void equals_differentEmployees_returnsFalse() {"},{"lineNumber":177,"author":{"gitID":"shanwpf"},"content":"        ApplyCommand applyCommandFirst \u003d prepareCommandWithPassword(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, model);"},{"lineNumber":178,"author":{"gitID":"shanwpf"},"content":"        ApplyCommand applyCommandSecond \u003d prepareCommandWithPassword(INDEX_SECOND_EMPLOYEE, INDEX_FIRST_SHIFT, model);"},{"lineNumber":179,"author":{"gitID":"shanwpf"},"content":"        assertFalse(applyCommandFirst.equals(applyCommandSecond));"},{"lineNumber":180,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":181,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":182,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":183,"author":{"gitID":"shanwpf"},"content":"    public void execute_shiftIndexOutOfRange_throwsCommandException() {"},{"lineNumber":184,"author":{"gitID":"shanwpf"},"content":"        ApplyCommand applyCommand \u003d prepareCommandWithPassword(INDEX_FIRST_EMPLOYEE, Index.fromOneBased(99), model);"},{"lineNumber":185,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(CommandException.class, applyCommand::execute);"},{"lineNumber":186,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":187,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":188,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":189,"author":{"gitID":"shanwpf"},"content":"    public void execute_employeeIndexOutOfRange_throwsCommandException() {"},{"lineNumber":190,"author":{"gitID":"shanwpf"},"content":"        ApplyCommand applyCommand \u003d prepareCommandWithPassword(Index.fromOneBased(99), INDEX_FIRST_SHIFT, model);"},{"lineNumber":191,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(CommandException.class, applyCommand::execute);"},{"lineNumber":192,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":193,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":194,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":195,"author":{"gitID":"shanwpf"},"content":"    public void execute_incorrectPassword_throwsInvalidPasswordException() {"},{"lineNumber":196,"author":{"gitID":"shanwpf"},"content":"        model.setFalseAdminMode();"},{"lineNumber":197,"author":{"gitID":"shanwpf"},"content":"        ApplyCommand applyCommand \u003d new ApplyCommand(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT,"},{"lineNumber":198,"author":{"gitID":"shanwpf"},"content":"                Optional.of(new Password(\"wrongPassword\")));"},{"lineNumber":199,"author":{"gitID":"shanwpf"},"content":"        applyCommand.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":200,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(InvalidPasswordException.class, applyCommand::execute);"},{"lineNumber":201,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":202,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":203,"author":{"gitID":"shanwpf"},"content":"    @After"},{"lineNumber":204,"author":{"gitID":"shanwpf"},"content":"    public void reset() {"},{"lineNumber":205,"author":{"gitID":"shanwpf"},"content":"        model.updateFilteredShiftList(Model.PREDICATE_SHOW_ALL_SHIFTS);"},{"lineNumber":206,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":207,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":208,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":209,"author":{"gitID":"shanwpf"},"content":"     * Returns an {@code ApplyCommand} with parameters {@code employeeIndex} and {@code shiftIndex}"},{"lineNumber":210,"author":{"gitID":"shanwpf"},"content":"     * and a valid employee password"},{"lineNumber":211,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":212,"author":{"gitID":"shanwpf"},"content":"    private ApplyCommand prepareCommandWithPassword(Index employeeIndex, Index shiftIndex, Model model) {"},{"lineNumber":213,"author":{"gitID":"shanwpf"},"content":"        ApplyCommand applyCommand \u003d new ApplyCommand(employeeIndex, shiftIndex, Optional.of(new Password()));"},{"lineNumber":214,"author":{"gitID":"shanwpf"},"content":"        applyCommand.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":215,"author":{"gitID":"shanwpf"},"content":"        return applyCommand;"},{"lineNumber":216,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":217,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":218,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":219,"author":{"gitID":"shanwpf"},"content":"     * Returns an {@code ApplyCommand} with parameters {@code employeeIndex} and {@code shiftIndex}"},{"lineNumber":220,"author":{"gitID":"shanwpf"},"content":"     * without a password"},{"lineNumber":221,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":222,"author":{"gitID":"shanwpf"},"content":"    private ApplyCommand prepareCommandWithoutPassword(Index employeeIndex, Index shiftIndex, Model model) {"},{"lineNumber":223,"author":{"gitID":"shanwpf"},"content":"        ApplyCommand applyCommand \u003d new ApplyCommand(employeeIndex, shiftIndex, Optional.empty());"},{"lineNumber":224,"author":{"gitID":"shanwpf"},"content":"        applyCommand.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":225,"author":{"gitID":"shanwpf"},"content":"        return applyCommand;"},{"lineNumber":226,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":227,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":228,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":229,"author":{"gitID":"shanwpf"},"content":"     * Returns a {@Code Model} with parameters {@code shift} and {@code employees}."},{"lineNumber":230,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":231,"author":{"gitID":"shanwpf"},"content":"    private Model prepareModel(boolean isAdmin, Shift shift, Employee... employees) {"},{"lineNumber":232,"author":{"gitID":"shanwpf"},"content":"        Model model \u003d new ModelManager(new PartTimeManager(), new UserPrefs(), new OutletInformation());"},{"lineNumber":233,"author":{"gitID":"shanwpf"},"content":"        if (isAdmin) {"},{"lineNumber":234,"author":{"gitID":"shanwpf"},"content":"            model.setTrueAdminMode(new Password());"},{"lineNumber":235,"author":{"gitID":"shanwpf"},"content":"        } else {"},{"lineNumber":236,"author":{"gitID":"shanwpf"},"content":"            model.setFalseAdminMode();"},{"lineNumber":237,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":238,"author":{"gitID":"shanwpf"},"content":"        model.updateFilteredShiftList(Model.PREDICATE_SHOW_ALL_SHIFTS);"},{"lineNumber":239,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":240,"author":{"gitID":"shanwpf"},"content":"        try {"},{"lineNumber":241,"author":{"gitID":"shanwpf"},"content":"            model.addShift(shift);"},{"lineNumber":242,"author":{"gitID":"shanwpf"},"content":"            for (final Employee employee: employees) {"},{"lineNumber":243,"author":{"gitID":"shanwpf"},"content":"                model.addEmployee(employee);"},{"lineNumber":244,"author":{"gitID":"shanwpf"},"content":"            }"},{"lineNumber":245,"author":{"gitID":"shanwpf"},"content":"        } catch (DuplicateShiftException e) {"},{"lineNumber":246,"author":{"gitID":"shanwpf"},"content":"            throw new AssertionError(\"Shift should not be a duplicate\");"},{"lineNumber":247,"author":{"gitID":"shanwpf"},"content":"        } catch (DuplicateEmployeeException e) {"},{"lineNumber":248,"author":{"gitID":"shanwpf"},"content":"            throw new AssertionError(\"Employees should not be duplicates\");"},{"lineNumber":249,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":250,"author":{"gitID":"shanwpf"},"content":"        return model;"},{"lineNumber":251,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":252,"author":{"gitID":"shanwpf"},"content":"}"}],"authorContributionMap":{"shanwpf":208,"-":44}},{"path":"src/test/java/seedu/ptman/logic/commands/EditCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertNotEquals;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.DESC_AMY;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.DESC_BOB;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.VALID_NAME_BOB;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.VALID_PHONE_BOB;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.assertCommandFailure;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.assertCommandSuccess;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.prepareRedoCommand;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.prepareUndoCommand;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.showEmployeeAtIndex;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.getTypicalPartTimeManager;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_FIRST_EMPLOYEE;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_SECOND_EMPLOYEE;"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.Messages;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.index.Index;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.CommandHistory;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.UndoRedoStack;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.EditCommand.EditEmployeeDescriptor;"},{"lineNumber":30,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Model;"},{"lineNumber":31,"author":{"gitID":"-"},"content":"import seedu.ptman.model.ModelManager;"},{"lineNumber":32,"author":{"gitID":"-"},"content":"import seedu.ptman.model.PartTimeManager;"},{"lineNumber":33,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":34,"author":{"gitID":"-"},"content":"import seedu.ptman.model.UserPrefs;"},{"lineNumber":35,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Employee;"},{"lineNumber":36,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":37,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.EditEmployeeDescriptorBuilder;"},{"lineNumber":38,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.EmployeeBuilder;"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":41,"author":{"gitID":"-"},"content":" * Contains integration tests (interaction with the Model, UndoCommand and RedoCommand) and unit tests for EditCommand."},{"lineNumber":42,"author":{"gitID":"-"},"content":" */"},{"lineNumber":43,"author":{"gitID":"-"},"content":"public class EditCommandTest {"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":45,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":46,"author":{"gitID":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalPartTimeManager(), new UserPrefs(), new OutletInformation());"},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":"    @Before"},{"lineNumber":49,"author":{"gitID":"-"},"content":"    public void setMode_adminMode() {"},{"lineNumber":50,"author":{"gitID":"-"},"content":"        model.setTrueAdminMode(new Password());"},{"lineNumber":51,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"-"},"content":""},{"lineNumber":53,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":54,"author":{"gitID":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() throws Exception {"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        Employee editedEmployee \u003d new EmployeeBuilder().build();"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder(editedEmployee).build();"},{"lineNumber":57,"author":{"gitID":"-"},"content":"        EditCommand editCommand \u003d prepareCommand(INDEX_FIRST_EMPLOYEE, descriptor);"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_EMPLOYEE_SUCCESS, editedEmployee);"},{"lineNumber":60,"author":{"gitID":"-"},"content":""},{"lineNumber":61,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d new ModelManager(new PartTimeManager(model.getPartTimeManager()), new UserPrefs(),"},{"lineNumber":62,"author":{"gitID":"-"},"content":"                new OutletInformation());"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        expectedModel.updateEmployee(model.getFilteredEmployeeList().get(0), editedEmployee);"},{"lineNumber":64,"author":{"gitID":"-"},"content":""},{"lineNumber":65,"author":{"gitID":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);"},{"lineNumber":66,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":67,"author":{"gitID":"-"},"content":""},{"lineNumber":68,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":69,"author":{"gitID":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() throws Exception {"},{"lineNumber":70,"author":{"gitID":"-"},"content":"        Index indexLastEmployee \u003d Index.fromOneBased(model.getFilteredEmployeeList().size());"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        Employee lastEmployee \u003d model.getFilteredEmployeeList().get(indexLastEmployee.getZeroBased());"},{"lineNumber":72,"author":{"gitID":"-"},"content":""},{"lineNumber":73,"author":{"gitID":"-"},"content":"        EmployeeBuilder employeeInList \u003d new EmployeeBuilder(lastEmployee);"},{"lineNumber":74,"author":{"gitID":"-"},"content":"        Employee editedEmployee \u003d employeeInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)"},{"lineNumber":75,"author":{"gitID":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();"},{"lineNumber":76,"author":{"gitID":"-"},"content":""},{"lineNumber":77,"author":{"gitID":"-"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder().withName(VALID_NAME_BOB)"},{"lineNumber":78,"author":{"gitID":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();"},{"lineNumber":79,"author":{"gitID":"-"},"content":"        EditCommand editCommand \u003d prepareCommand(indexLastEmployee, descriptor);"},{"lineNumber":80,"author":{"gitID":"-"},"content":""},{"lineNumber":81,"author":{"gitID":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_EMPLOYEE_SUCCESS, editedEmployee);"},{"lineNumber":82,"author":{"gitID":"-"},"content":""},{"lineNumber":83,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d new ModelManager(new PartTimeManager(model.getPartTimeManager()), new UserPrefs(),"},{"lineNumber":84,"author":{"gitID":"-"},"content":"                new OutletInformation());"},{"lineNumber":85,"author":{"gitID":"-"},"content":"        expectedModel.updateEmployee(lastEmployee, editedEmployee);"},{"lineNumber":86,"author":{"gitID":"-"},"content":""},{"lineNumber":87,"author":{"gitID":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);"},{"lineNumber":88,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":89,"author":{"gitID":"-"},"content":""},{"lineNumber":90,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":91,"author":{"gitID":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {"},{"lineNumber":92,"author":{"gitID":"-"},"content":"        EditCommand editCommand \u003d prepareCommand(INDEX_FIRST_EMPLOYEE, new EditEmployeeDescriptor());"},{"lineNumber":93,"author":{"gitID":"-"},"content":"        Employee editedEmployee \u003d model.getFilteredEmployeeList().get(INDEX_FIRST_EMPLOYEE.getZeroBased());"},{"lineNumber":94,"author":{"gitID":"-"},"content":""},{"lineNumber":95,"author":{"gitID":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_EMPLOYEE_SUCCESS, editedEmployee);"},{"lineNumber":96,"author":{"gitID":"-"},"content":""},{"lineNumber":97,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d new ModelManager(new PartTimeManager(model.getPartTimeManager()), new UserPrefs(),"},{"lineNumber":98,"author":{"gitID":"-"},"content":"                new OutletInformation());"},{"lineNumber":99,"author":{"gitID":"-"},"content":""},{"lineNumber":100,"author":{"gitID":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);"},{"lineNumber":101,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":102,"author":{"gitID":"-"},"content":""},{"lineNumber":103,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":104,"author":{"gitID":"-"},"content":"    public void execute_filteredList_success() throws Exception {"},{"lineNumber":105,"author":{"gitID":"-"},"content":"        showEmployeeAtIndex(model, INDEX_FIRST_EMPLOYEE);"},{"lineNumber":106,"author":{"gitID":"-"},"content":""},{"lineNumber":107,"author":{"gitID":"-"},"content":"        Employee employeeInFilteredList \u003d model.getFilteredEmployeeList().get(INDEX_FIRST_EMPLOYEE.getZeroBased());"},{"lineNumber":108,"author":{"gitID":"-"},"content":"        Employee editedEmployee \u003d new EmployeeBuilder(employeeInFilteredList).withName(VALID_NAME_BOB).build();"},{"lineNumber":109,"author":{"gitID":"-"},"content":"        EditCommand editCommand \u003d prepareCommand(INDEX_FIRST_EMPLOYEE,"},{"lineNumber":110,"author":{"gitID":"-"},"content":"                new EditEmployeeDescriptorBuilder().withName(VALID_NAME_BOB).build());"},{"lineNumber":111,"author":{"gitID":"-"},"content":""},{"lineNumber":112,"author":{"gitID":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_EMPLOYEE_SUCCESS, editedEmployee);"},{"lineNumber":113,"author":{"gitID":"-"},"content":""},{"lineNumber":114,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d new ModelManager(new PartTimeManager(model.getPartTimeManager()), new UserPrefs(),"},{"lineNumber":115,"author":{"gitID":"-"},"content":"                new OutletInformation());"},{"lineNumber":116,"author":{"gitID":"-"},"content":"        expectedModel.updateEmployee(model.getFilteredEmployeeList().get(0), editedEmployee);"},{"lineNumber":117,"author":{"gitID":"-"},"content":""},{"lineNumber":118,"author":{"gitID":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);"},{"lineNumber":119,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":120,"author":{"gitID":"-"},"content":""},{"lineNumber":121,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":122,"author":{"gitID":"-"},"content":"    public void execute_duplicateEmployeeUnfilteredList_failure() {"},{"lineNumber":123,"author":{"gitID":"-"},"content":"        Employee firstEmployee \u003d model.getFilteredEmployeeList().get(INDEX_FIRST_EMPLOYEE.getZeroBased());"},{"lineNumber":124,"author":{"gitID":"-"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder(firstEmployee).build();"},{"lineNumber":125,"author":{"gitID":"-"},"content":"        EditCommand editCommand \u003d prepareCommand(INDEX_SECOND_EMPLOYEE, descriptor);"},{"lineNumber":126,"author":{"gitID":"-"},"content":""},{"lineNumber":127,"author":{"gitID":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_EMPLOYEE);"},{"lineNumber":128,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":129,"author":{"gitID":"-"},"content":""},{"lineNumber":130,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":131,"author":{"gitID":"-"},"content":"    public void execute_duplicateEmployeeFilteredList_failure() {"},{"lineNumber":132,"author":{"gitID":"-"},"content":"        showEmployeeAtIndex(model, INDEX_FIRST_EMPLOYEE);"},{"lineNumber":133,"author":{"gitID":"-"},"content":""},{"lineNumber":134,"author":{"gitID":"-"},"content":"        // edit employee in filtered list into a duplicate in ptman book"},{"lineNumber":135,"author":{"gitID":"-"},"content":"        Employee employeeInList \u003d"},{"lineNumber":136,"author":{"gitID":"-"},"content":"                model.getPartTimeManager().getEmployeeList().get(INDEX_SECOND_EMPLOYEE.getZeroBased());"},{"lineNumber":137,"author":{"gitID":"-"},"content":"        EditCommand editCommand \u003d prepareCommand(INDEX_FIRST_EMPLOYEE,"},{"lineNumber":138,"author":{"gitID":"-"},"content":"                new EditEmployeeDescriptorBuilder(employeeInList).build());"},{"lineNumber":139,"author":{"gitID":"-"},"content":""},{"lineNumber":140,"author":{"gitID":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_EMPLOYEE);"},{"lineNumber":141,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":142,"author":{"gitID":"-"},"content":""},{"lineNumber":143,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":144,"author":{"gitID":"-"},"content":"    public void execute_invalidEmployeeIndexUnfilteredList_failure() {"},{"lineNumber":145,"author":{"gitID":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredEmployeeList().size() + 1);"},{"lineNumber":146,"author":{"gitID":"-"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder().withName(VALID_NAME_BOB).build();"},{"lineNumber":147,"author":{"gitID":"-"},"content":"        EditCommand editCommand \u003d prepareCommand(outOfBoundIndex, descriptor);"},{"lineNumber":148,"author":{"gitID":"-"},"content":""},{"lineNumber":149,"author":{"gitID":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX);"},{"lineNumber":150,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":151,"author":{"gitID":"-"},"content":""},{"lineNumber":152,"author":{"gitID":"koo1993"},"content":"    //@@author koo1993"},{"lineNumber":153,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":154,"author":{"gitID":"koo1993"},"content":"    public void execute_notInAdminMode_accessDenied() throws Exception {"},{"lineNumber":155,"author":{"gitID":"koo1993"},"content":"        model.setFalseAdminMode();"},{"lineNumber":156,"author":{"gitID":"koo1993"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredEmployeeList().size());"},{"lineNumber":157,"author":{"gitID":"koo1993"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder().withName(VALID_NAME_BOB).build();"},{"lineNumber":158,"author":{"gitID":"koo1993"},"content":"        EditCommand editCommand \u003d prepareCommand(outOfBoundIndex, descriptor);"},{"lineNumber":159,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":160,"author":{"gitID":"koo1993"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_ACCESS_DENIED);"},{"lineNumber":161,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":162,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":163,"author":{"gitID":"koo1993"},"content":"    //@@author"},{"lineNumber":164,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":165,"author":{"gitID":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,"},{"lineNumber":166,"author":{"gitID":"-"},"content":"     * but smaller than size of ptman book"},{"lineNumber":167,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":168,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":169,"author":{"gitID":"-"},"content":"    public void execute_invalidEmployeeIndexFilteredList_failure() {"},{"lineNumber":170,"author":{"gitID":"-"},"content":"        showEmployeeAtIndex(model, INDEX_FIRST_EMPLOYEE);"},{"lineNumber":171,"author":{"gitID":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_EMPLOYEE;"},{"lineNumber":172,"author":{"gitID":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of ptman book list"},{"lineNumber":173,"author":{"gitID":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getPartTimeManager().getEmployeeList().size());"},{"lineNumber":174,"author":{"gitID":"-"},"content":""},{"lineNumber":175,"author":{"gitID":"-"},"content":"        EditCommand editCommand \u003d prepareCommand(outOfBoundIndex,"},{"lineNumber":176,"author":{"gitID":"-"},"content":"                new EditEmployeeDescriptorBuilder().withName(VALID_NAME_BOB).build());"},{"lineNumber":177,"author":{"gitID":"-"},"content":""},{"lineNumber":178,"author":{"gitID":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX);"},{"lineNumber":179,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":180,"author":{"gitID":"-"},"content":""},{"lineNumber":181,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":182,"author":{"gitID":"-"},"content":"    public void executeUndoRedo_validIndexUnfilteredList_success() throws Exception {"},{"lineNumber":183,"author":{"gitID":"-"},"content":"        UndoRedoStack undoRedoStack \u003d new UndoRedoStack();"},{"lineNumber":184,"author":{"gitID":"-"},"content":"        UndoCommand undoCommand \u003d prepareUndoCommand(model, undoRedoStack);"},{"lineNumber":185,"author":{"gitID":"-"},"content":"        RedoCommand redoCommand \u003d prepareRedoCommand(model, undoRedoStack);"},{"lineNumber":186,"author":{"gitID":"-"},"content":"        Employee editedEmployee \u003d new EmployeeBuilder().build();"},{"lineNumber":187,"author":{"gitID":"-"},"content":"        Employee employeeToEdit \u003d model.getFilteredEmployeeList().get(INDEX_FIRST_EMPLOYEE.getZeroBased());"},{"lineNumber":188,"author":{"gitID":"-"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder(editedEmployee).build();"},{"lineNumber":189,"author":{"gitID":"-"},"content":"        EditCommand editCommand \u003d prepareCommand(INDEX_FIRST_EMPLOYEE, descriptor);"},{"lineNumber":190,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d new ModelManager(new PartTimeManager(model.getPartTimeManager()), new UserPrefs(),"},{"lineNumber":191,"author":{"gitID":"-"},"content":"                new OutletInformation());"},{"lineNumber":192,"author":{"gitID":"-"},"content":""},{"lineNumber":193,"author":{"gitID":"-"},"content":"        // edit -\u003e first employee edited"},{"lineNumber":194,"author":{"gitID":"-"},"content":"        editCommand.execute();"},{"lineNumber":195,"author":{"gitID":"-"},"content":"        undoRedoStack.push(editCommand);"},{"lineNumber":196,"author":{"gitID":"-"},"content":""},{"lineNumber":197,"author":{"gitID":"-"},"content":"        // undo -\u003e reverts parttimemanager back to previous state and filtered employee list to show all employees"},{"lineNumber":198,"author":{"gitID":"-"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":199,"author":{"gitID":"-"},"content":""},{"lineNumber":200,"author":{"gitID":"-"},"content":"        // redo -\u003e same first employee edited again"},{"lineNumber":201,"author":{"gitID":"-"},"content":"        expectedModel.updateEmployee(employeeToEdit, editedEmployee);"},{"lineNumber":202,"author":{"gitID":"-"},"content":"        assertCommandSuccess(redoCommand, model, RedoCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":203,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":204,"author":{"gitID":"-"},"content":""},{"lineNumber":205,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":206,"author":{"gitID":"-"},"content":"    public void executeUndoRedo_invalidIndexUnfilteredList_failure() {"},{"lineNumber":207,"author":{"gitID":"-"},"content":"        UndoRedoStack undoRedoStack \u003d new UndoRedoStack();"},{"lineNumber":208,"author":{"gitID":"-"},"content":"        UndoCommand undoCommand \u003d prepareUndoCommand(model, undoRedoStack);"},{"lineNumber":209,"author":{"gitID":"-"},"content":"        RedoCommand redoCommand \u003d prepareRedoCommand(model, undoRedoStack);"},{"lineNumber":210,"author":{"gitID":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredEmployeeList().size() + 1);"},{"lineNumber":211,"author":{"gitID":"-"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder().withName(VALID_NAME_BOB).build();"},{"lineNumber":212,"author":{"gitID":"-"},"content":"        EditCommand editCommand \u003d prepareCommand(outOfBoundIndex, descriptor);"},{"lineNumber":213,"author":{"gitID":"-"},"content":""},{"lineNumber":214,"author":{"gitID":"-"},"content":"        // execution failed -\u003e editCommand not pushed into undoRedoStack"},{"lineNumber":215,"author":{"gitID":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX);"},{"lineNumber":216,"author":{"gitID":"-"},"content":""},{"lineNumber":217,"author":{"gitID":"-"},"content":"        // no commands in undoRedoStack -\u003e undoCommand and redoCommand fail"},{"lineNumber":218,"author":{"gitID":"-"},"content":"        assertCommandFailure(undoCommand, model, UndoCommand.MESSAGE_FAILURE);"},{"lineNumber":219,"author":{"gitID":"-"},"content":"        assertCommandFailure(redoCommand, model, RedoCommand.MESSAGE_FAILURE);"},{"lineNumber":220,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":221,"author":{"gitID":"-"},"content":""},{"lineNumber":222,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":223,"author":{"gitID":"-"},"content":"     * 1. Edits a {@code Employee} from a filtered list."},{"lineNumber":224,"author":{"gitID":"-"},"content":"     * 2. Undo the edit."},{"lineNumber":225,"author":{"gitID":"-"},"content":"     * 3. The unfiltered list should be shown now. Verify that the index of the previously edited employee in the"},{"lineNumber":226,"author":{"gitID":"-"},"content":"     * unfiltered list is different from the index at the filtered list."},{"lineNumber":227,"author":{"gitID":"-"},"content":"     * 4. Redo the edit. This ensures {@code RedoCommand} edits the employee object regardless of indexing."},{"lineNumber":228,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":229,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":230,"author":{"gitID":"-"},"content":"    public void executeUndoRedo_validIndexFilteredList_sameEmployeeEdited() throws Exception {"},{"lineNumber":231,"author":{"gitID":"-"},"content":"        UndoRedoStack undoRedoStack \u003d new UndoRedoStack();"},{"lineNumber":232,"author":{"gitID":"-"},"content":"        UndoCommand undoCommand \u003d prepareUndoCommand(model, undoRedoStack);"},{"lineNumber":233,"author":{"gitID":"-"},"content":"        RedoCommand redoCommand \u003d prepareRedoCommand(model, undoRedoStack);"},{"lineNumber":234,"author":{"gitID":"-"},"content":"        Employee editedEmployee \u003d new EmployeeBuilder().build();"},{"lineNumber":235,"author":{"gitID":"-"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder(editedEmployee).build();"},{"lineNumber":236,"author":{"gitID":"-"},"content":"        EditCommand editCommand \u003d prepareCommand(INDEX_FIRST_EMPLOYEE, descriptor);"},{"lineNumber":237,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d new ModelManager(new PartTimeManager(model.getPartTimeManager()), new UserPrefs(),"},{"lineNumber":238,"author":{"gitID":"-"},"content":"                new OutletInformation());"},{"lineNumber":239,"author":{"gitID":"-"},"content":""},{"lineNumber":240,"author":{"gitID":"-"},"content":"        showEmployeeAtIndex(model, INDEX_SECOND_EMPLOYEE);"},{"lineNumber":241,"author":{"gitID":"-"},"content":"        Employee employeeToEdit \u003d model.getFilteredEmployeeList().get(INDEX_FIRST_EMPLOYEE.getZeroBased());"},{"lineNumber":242,"author":{"gitID":"-"},"content":"        // edit -\u003e edits second employee in unfiltered employee list / first employee in filtered employee list"},{"lineNumber":243,"author":{"gitID":"-"},"content":"        editCommand.execute();"},{"lineNumber":244,"author":{"gitID":"-"},"content":"        undoRedoStack.push(editCommand);"},{"lineNumber":245,"author":{"gitID":"-"},"content":""},{"lineNumber":246,"author":{"gitID":"-"},"content":"        // undo -\u003e reverts parttimemanager back to previous state and filtered employee list to show all employees"},{"lineNumber":247,"author":{"gitID":"-"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":248,"author":{"gitID":"-"},"content":""},{"lineNumber":249,"author":{"gitID":"-"},"content":"        expectedModel.updateEmployee(employeeToEdit, editedEmployee);"},{"lineNumber":250,"author":{"gitID":"-"},"content":"        assertNotEquals(model.getFilteredEmployeeList().get(INDEX_FIRST_EMPLOYEE.getZeroBased()), employeeToEdit);"},{"lineNumber":251,"author":{"gitID":"-"},"content":"        // redo -\u003e edits same second employee in unfiltered employee list"},{"lineNumber":252,"author":{"gitID":"-"},"content":"        assertCommandSuccess(redoCommand, model, RedoCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":253,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":254,"author":{"gitID":"-"},"content":""},{"lineNumber":255,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":256,"author":{"gitID":"-"},"content":"    public void equals() throws Exception {"},{"lineNumber":257,"author":{"gitID":"-"},"content":"        final EditCommand standardCommand \u003d prepareCommand(INDEX_FIRST_EMPLOYEE, DESC_AMY);"},{"lineNumber":258,"author":{"gitID":"-"},"content":""},{"lineNumber":259,"author":{"gitID":"-"},"content":"        // same values -\u003e returns true"},{"lineNumber":260,"author":{"gitID":"-"},"content":"        EditEmployeeDescriptor copyDescriptor \u003d new EditEmployeeDescriptor(DESC_AMY);"},{"lineNumber":261,"author":{"gitID":"-"},"content":"        EditCommand commandWithSameValues \u003d prepareCommand(INDEX_FIRST_EMPLOYEE, copyDescriptor);"},{"lineNumber":262,"author":{"gitID":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));"},{"lineNumber":263,"author":{"gitID":"-"},"content":""},{"lineNumber":264,"author":{"gitID":"-"},"content":"        // same object -\u003e returns true"},{"lineNumber":265,"author":{"gitID":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));"},{"lineNumber":266,"author":{"gitID":"-"},"content":""},{"lineNumber":267,"author":{"gitID":"-"},"content":"        // one command preprocessed when previously equal -\u003e returns false"},{"lineNumber":268,"author":{"gitID":"-"},"content":"        commandWithSameValues.preprocessUndoableCommand();"},{"lineNumber":269,"author":{"gitID":"-"},"content":"        assertFalse(standardCommand.equals(commandWithSameValues));"},{"lineNumber":270,"author":{"gitID":"-"},"content":""},{"lineNumber":271,"author":{"gitID":"-"},"content":"        // null -\u003e returns false"},{"lineNumber":272,"author":{"gitID":"-"},"content":"        assertFalse(standardCommand.equals(null));"},{"lineNumber":273,"author":{"gitID":"-"},"content":""},{"lineNumber":274,"author":{"gitID":"-"},"content":"        // different types -\u003e returns false"},{"lineNumber":275,"author":{"gitID":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));"},{"lineNumber":276,"author":{"gitID":"-"},"content":""},{"lineNumber":277,"author":{"gitID":"-"},"content":"        // different index -\u003e returns false"},{"lineNumber":278,"author":{"gitID":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_EMPLOYEE, DESC_AMY)));"},{"lineNumber":279,"author":{"gitID":"-"},"content":""},{"lineNumber":280,"author":{"gitID":"-"},"content":"        // different descriptor -\u003e returns false"},{"lineNumber":281,"author":{"gitID":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_EMPLOYEE, DESC_BOB)));"},{"lineNumber":282,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":283,"author":{"gitID":"-"},"content":""},{"lineNumber":284,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":285,"author":{"gitID":"-"},"content":"     * Returns an {@code EditCommand} with parameters {@code index} and {@code descriptor}"},{"lineNumber":286,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":287,"author":{"gitID":"-"},"content":"    private EditCommand prepareCommand(Index index, EditEmployeeDescriptor descriptor) {"},{"lineNumber":288,"author":{"gitID":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, descriptor);"},{"lineNumber":289,"author":{"gitID":"-"},"content":"        editCommand.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":290,"author":{"gitID":"-"},"content":"        return editCommand;"},{"lineNumber":291,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":292,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"koo1993":12,"-":280}},{"path":"src/test/java/seedu/ptman/logic/commands/AnnouncementCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static junit.framework.TestCase.assertTrue;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_ACCESS_DENIED;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.assertCommandFailure;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.assertCommandSuccess;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.getTypicalPartTimeManager;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.CommandHistory;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.UndoRedoStack;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Model;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.model.ModelManager;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.ptman.model.UserPrefs;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.Announcement;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":22,"author":{"gitID":"SunBangjie"},"content":"/**"},{"lineNumber":23,"author":{"gitID":"SunBangjie"},"content":" * Contains integration tests (interaction with the Model) for {@code AnnouncementCommand}."},{"lineNumber":24,"author":{"gitID":"SunBangjie"},"content":" */"},{"lineNumber":25,"author":{"gitID":"SunBangjie"},"content":"public class AnnouncementCommandTest {"},{"lineNumber":26,"author":{"gitID":"SunBangjie"},"content":"    private Model model \u003d new ModelManager(getTypicalPartTimeManager(), new UserPrefs(), new OutletInformation());"},{"lineNumber":27,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":28,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":29,"author":{"gitID":"SunBangjie"},"content":"    public void equals() {"},{"lineNumber":30,"author":{"gitID":"SunBangjie"},"content":"        Announcement firstAnnouncement \u003d new Announcement(\"First Announcement.\");"},{"lineNumber":31,"author":{"gitID":"SunBangjie"},"content":"        Announcement secondAnnouncement \u003d new Announcement(\"Second Announcement.\");"},{"lineNumber":32,"author":{"gitID":"SunBangjie"},"content":"        AnnouncementCommand firstAnnouncementCommand \u003d new AnnouncementCommand(firstAnnouncement);"},{"lineNumber":33,"author":{"gitID":"SunBangjie"},"content":"        AnnouncementCommand secondAnnouncementCommand \u003d new AnnouncementCommand(secondAnnouncement);"},{"lineNumber":34,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":35,"author":{"gitID":"SunBangjie"},"content":"        // same object -\u003e return true"},{"lineNumber":36,"author":{"gitID":"SunBangjie"},"content":"        assertTrue(firstAnnouncementCommand.equals(firstAnnouncementCommand));"},{"lineNumber":37,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":38,"author":{"gitID":"SunBangjie"},"content":"        // same values -\u003e return true"},{"lineNumber":39,"author":{"gitID":"SunBangjie"},"content":"        AnnouncementCommand firstAnnouncementCommandCopy \u003d new AnnouncementCommand(firstAnnouncement);"},{"lineNumber":40,"author":{"gitID":"SunBangjie"},"content":"        assertTrue(firstAnnouncementCommand.equals(firstAnnouncementCommandCopy));"},{"lineNumber":41,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":42,"author":{"gitID":"SunBangjie"},"content":"        // different types -\u003e return false"},{"lineNumber":43,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(firstAnnouncementCommand.equals(1));"},{"lineNumber":44,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":45,"author":{"gitID":"SunBangjie"},"content":"        // null -\u003e return false"},{"lineNumber":46,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(firstAnnouncementCommand.equals(null));"},{"lineNumber":47,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":48,"author":{"gitID":"SunBangjie"},"content":"        // different announcement -\u003e return false"},{"lineNumber":49,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(firstAnnouncementCommand.equals(secondAnnouncementCommand));"},{"lineNumber":50,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":51,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":52,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":53,"author":{"gitID":"SunBangjie"},"content":"    public void execute_nonAdminMode_failure() {"},{"lineNumber":54,"author":{"gitID":"SunBangjie"},"content":"        AnnouncementCommand command \u003d prepareCommand(\"New Announcement!\");"},{"lineNumber":55,"author":{"gitID":"SunBangjie"},"content":"        assertCommandFailure(command, model, MESSAGE_ACCESS_DENIED);"},{"lineNumber":56,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":58,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":59,"author":{"gitID":"SunBangjie"},"content":"    public void execute_adminModeValidAnnouncement_commandFailed() {"},{"lineNumber":60,"author":{"gitID":"SunBangjie"},"content":"        model.setTrueAdminMode(new Password());"},{"lineNumber":61,"author":{"gitID":"SunBangjie"},"content":"        String expectedMessage \u003d AnnouncementCommand.MESSAGE_EDIT_OUTLET_SUCCESS;"},{"lineNumber":62,"author":{"gitID":"SunBangjie"},"content":"        AnnouncementCommand command \u003d prepareCommand(\"Valid Announcement\");"},{"lineNumber":63,"author":{"gitID":"SunBangjie"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);"},{"lineNumber":64,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":65,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":66,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":67,"author":{"gitID":"SunBangjie"},"content":"     * Parses {@code userInput} into a {@code AnnouncementCommand}"},{"lineNumber":68,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":69,"author":{"gitID":"SunBangjie"},"content":"    private AnnouncementCommand prepareCommand(String userInput) {"},{"lineNumber":70,"author":{"gitID":"SunBangjie"},"content":"        AnnouncementCommand command \u003d new AnnouncementCommand(new Announcement(userInput));"},{"lineNumber":71,"author":{"gitID":"SunBangjie"},"content":"        command.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":72,"author":{"gitID":"SunBangjie"},"content":"        return command;"},{"lineNumber":73,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":74,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":20,"SunBangjie":54}},{"path":"src/test/java/seedu/ptman/logic/commands/DecryptDataCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_ACCESS_DENIED;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.assertCommandFailure;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.assertCommandSuccess;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.getTypicalPartTimeManager;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.CommandHistory;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.UndoRedoStack;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Model;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.model.ModelManager;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.model.UserPrefs;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":19,"author":{"gitID":"SunBangjie"},"content":"/**"},{"lineNumber":20,"author":{"gitID":"SunBangjie"},"content":" * Contains integration tests (interaction with the Model) for {@code DecryptDataCommand}."},{"lineNumber":21,"author":{"gitID":"SunBangjie"},"content":" */"},{"lineNumber":22,"author":{"gitID":"SunBangjie"},"content":"public class DecryptDataCommandTest {"},{"lineNumber":23,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":24,"author":{"gitID":"SunBangjie"},"content":"    private Model model \u003d new ModelManager(getTypicalPartTimeManager(), new UserPrefs(), new OutletInformation());"},{"lineNumber":25,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":26,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":27,"author":{"gitID":"SunBangjie"},"content":"    public void execute_nonAdminMode_failure() {"},{"lineNumber":28,"author":{"gitID":"SunBangjie"},"content":"        DecryptDataCommand command \u003d prepareCommand();"},{"lineNumber":29,"author":{"gitID":"SunBangjie"},"content":"        assertCommandFailure(command, model, MESSAGE_ACCESS_DENIED);"},{"lineNumber":30,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":32,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":33,"author":{"gitID":"SunBangjie"},"content":"    public void execute_adminModeDataEncrypted_success() {"},{"lineNumber":34,"author":{"gitID":"SunBangjie"},"content":"        model.setTrueAdminMode(new Password());"},{"lineNumber":35,"author":{"gitID":"SunBangjie"},"content":"        model.encryptLocalStorage();"},{"lineNumber":36,"author":{"gitID":"SunBangjie"},"content":"        DecryptDataCommand command \u003d prepareCommand();"},{"lineNumber":37,"author":{"gitID":"SunBangjie"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalPartTimeManager(), new UserPrefs(), new OutletInformation());"},{"lineNumber":38,"author":{"gitID":"SunBangjie"},"content":"        expectedModel.decryptLocalStorage();"},{"lineNumber":39,"author":{"gitID":"SunBangjie"},"content":"        String expectedMessage \u003d DecryptDataCommand.MESSAGE_DECRYPT_SUCCESS;"},{"lineNumber":40,"author":{"gitID":"SunBangjie"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);"},{"lineNumber":41,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":42,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":43,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":44,"author":{"gitID":"SunBangjie"},"content":"    public void execute_adminModeDataAlreadyEncrypted_failure() {"},{"lineNumber":45,"author":{"gitID":"SunBangjie"},"content":"        model.setTrueAdminMode(new Password());"},{"lineNumber":46,"author":{"gitID":"SunBangjie"},"content":"        DecryptDataCommand command \u003d prepareCommand();"},{"lineNumber":47,"author":{"gitID":"SunBangjie"},"content":"        String expectedMessage \u003d DecryptDataCommand.MESSAGE_DECRYPT_FAILURE;"},{"lineNumber":48,"author":{"gitID":"SunBangjie"},"content":"        assertCommandFailure(command, model, expectedMessage);"},{"lineNumber":49,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":51,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":52,"author":{"gitID":"SunBangjie"},"content":"     * Returns an {@code EncryptDataCommand}"},{"lineNumber":53,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":54,"author":{"gitID":"SunBangjie"},"content":"    private DecryptDataCommand prepareCommand() {"},{"lineNumber":55,"author":{"gitID":"SunBangjie"},"content":"        DecryptDataCommand command \u003d new DecryptDataCommand();"},{"lineNumber":56,"author":{"gitID":"SunBangjie"},"content":"        command.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":57,"author":{"gitID":"SunBangjie"},"content":"        return command;"},{"lineNumber":58,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":59,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":17,"SunBangjie":42}},{"path":"src/test/java/seedu/ptman/logic/commands/AddCommandIntegrationTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_ACCESS_DENIED;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.assertCommandFailure;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.assertCommandSuccess;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.getTypicalPartTimeManager;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.CommandHistory;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.UndoRedoStack;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Model;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.model.ModelManager;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.ptman.model.UserPrefs;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Employee;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.EmployeeBuilder;"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":22,"author":{"gitID":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}."},{"lineNumber":23,"author":{"gitID":"-"},"content":" */"},{"lineNumber":24,"author":{"gitID":"-"},"content":"public class AddCommandIntegrationTest {"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"    private Model model;"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"koo1993"},"content":"    //@@author koo1993"},{"lineNumber":29,"author":{"gitID":"koo1993"},"content":"    @Before"},{"lineNumber":30,"author":{"gitID":"koo1993"},"content":"    public void setUp() {"},{"lineNumber":31,"author":{"gitID":"koo1993"},"content":"        model \u003d new ModelManager(getTypicalPartTimeManager(), new UserPrefs(), new OutletInformation());"},{"lineNumber":32,"author":{"gitID":"koo1993"},"content":"        model.setTrueAdminMode(new Password());"},{"lineNumber":33,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":35,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":36,"author":{"gitID":"koo1993"},"content":"    public void execute_notInAdminModeNewEmployee_accessDenied() throws Exception {"},{"lineNumber":37,"author":{"gitID":"koo1993"},"content":"        model.setFalseAdminMode();"},{"lineNumber":38,"author":{"gitID":"koo1993"},"content":"        Employee validEmployee \u003d new EmployeeBuilder().build();"},{"lineNumber":39,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":40,"author":{"gitID":"koo1993"},"content":"        Model expectedModel \u003d new ModelManager(model.getPartTimeManager(), new UserPrefs(), new OutletInformation());"},{"lineNumber":41,"author":{"gitID":"koo1993"},"content":"        expectedModel.addEmployee(validEmployee);"},{"lineNumber":42,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":43,"author":{"gitID":"koo1993"},"content":"        assertCommandFailure(prepareCommand(validEmployee, model), model, MESSAGE_ACCESS_DENIED);"},{"lineNumber":44,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":45,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"koo1993"},"content":"    //@@author"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":48,"author":{"gitID":"-"},"content":"    public void execute_newEmployee_success() throws Exception {"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        Employee validEmployee \u003d new EmployeeBuilder().build();"},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getPartTimeManager(), new UserPrefs(), new OutletInformation());"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        expectedModel.addEmployee(validEmployee);"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"        assertCommandSuccess(prepareCommand(validEmployee, model), model,"},{"lineNumber":55,"author":{"gitID":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validEmployee), expectedModel);"},{"lineNumber":56,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"-"},"content":""},{"lineNumber":58,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":59,"author":{"gitID":"-"},"content":"    public void execute_duplicateEmployee_throwsCommandException() {"},{"lineNumber":60,"author":{"gitID":"-"},"content":"        Employee employeeInList \u003d model.getPartTimeManager().getEmployeeList().get(0);"},{"lineNumber":61,"author":{"gitID":"-"},"content":"        assertCommandFailure(prepareCommand(employeeInList, model), model, AddCommand.MESSAGE_DUPLICATE_EMPLOYEE);"},{"lineNumber":62,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"-"},"content":""},{"lineNumber":64,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":65,"author":{"gitID":"-"},"content":"     * Generates a new {@code AddCommand} which upon execution, adds {@code employee} into the {@code model}."},{"lineNumber":66,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":67,"author":{"gitID":"-"},"content":"    private AddCommand prepareCommand(Employee employee, Model model) {"},{"lineNumber":68,"author":{"gitID":"-"},"content":"        AddCommand command \u003d new AddCommand(employee);"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        command.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":70,"author":{"gitID":"-"},"content":"        return command;"},{"lineNumber":71,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":72,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"koo1993":19,"-":53}},{"path":"src/test/java/seedu/ptman/logic/commands/DeselectCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static junit.framework.TestCase.assertTrue;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.DeselectCommand.MESSAGE_SUCCESS;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.ui.JumpToListRequestEvent;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.ptman.ui.testutil.EventsCollectorRule;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"hzxcaryn"},"content":"//@@author hzxcaryn"},{"lineNumber":14,"author":{"gitID":"hzxcaryn"},"content":"public class DeselectCommandTest {"},{"lineNumber":15,"author":{"gitID":"hzxcaryn"},"content":"    @Rule"},{"lineNumber":16,"author":{"gitID":"hzxcaryn"},"content":"    public final EventsCollectorRule eventsCollectorRule \u003d new EventsCollectorRule();"},{"lineNumber":17,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":18,"author":{"gitID":"hzxcaryn"},"content":"    @Test"},{"lineNumber":19,"author":{"gitID":"hzxcaryn"},"content":"    public void execute_main_success() {"},{"lineNumber":20,"author":{"gitID":"hzxcaryn"},"content":"        CommandResult result \u003d new DeselectCommand().execute();"},{"lineNumber":21,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(MESSAGE_SUCCESS, result.feedbackToUser);"},{"lineNumber":22,"author":{"gitID":"hzxcaryn"},"content":"        assertTrue(eventsCollectorRule.eventsCollector.getMostRecent() instanceof JumpToListRequestEvent);"},{"lineNumber":23,"author":{"gitID":"hzxcaryn"},"content":"        assertTrue(eventsCollectorRule.eventsCollector.getSize() \u003d\u003d 1);"},{"lineNumber":24,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":25,"author":{"gitID":"hzxcaryn"},"content":"}"}],"authorContributionMap":{"hzxcaryn":13,"-":12}},{"path":"src/test/java/seedu/ptman/logic/commands/UndoableCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"hzxcaryn"},"content":"import static org.junit.Assert.fail;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.deleteFirstEmployee;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.showEmployeeAtIndex;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.getTypicalPartTimeManager;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_FIRST_EMPLOYEE;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.exceptions.CommandException;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Model;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.model.ModelManager;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.model.UserPrefs;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Employee;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.exceptions.EmployeeNotFoundException;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":"public class UndoableCommandTest {"},{"lineNumber":21,"author":{"gitID":"-"},"content":"    private final Model model \u003d new ModelManager(getTypicalPartTimeManager(), new UserPrefs(),"},{"lineNumber":22,"author":{"gitID":"-"},"content":"            new OutletInformation());"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    private final DummyCommand dummyCommand \u003d new DummyCommand(model);"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalPartTimeManager(), new UserPrefs(),"},{"lineNumber":26,"author":{"gitID":"-"},"content":"            new OutletInformation());"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    public void executeUndo() throws Exception {"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        dummyCommand.execute();"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        deleteFirstEmployee(expectedModel);"},{"lineNumber":32,"author":{"gitID":"-"},"content":"        assertEquals(expectedModel, model);"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"        showEmployeeAtIndex(model, INDEX_FIRST_EMPLOYEE);"},{"lineNumber":35,"author":{"gitID":"-"},"content":""},{"lineNumber":36,"author":{"gitID":"-"},"content":"        // undo() should cause the model\u0027s filtered list to show all employees"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        dummyCommand.undo();"},{"lineNumber":38,"author":{"gitID":"-"},"content":"        expectedModel \u003d new ModelManager(getTypicalPartTimeManager(), new UserPrefs(), new OutletInformation());"},{"lineNumber":39,"author":{"gitID":"-"},"content":"        assertEquals(expectedModel, model);"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":41,"author":{"gitID":"-"},"content":""},{"lineNumber":42,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":43,"author":{"gitID":"-"},"content":"    public void redo() {"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        showEmployeeAtIndex(model, INDEX_FIRST_EMPLOYEE);"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"        // redo() should cause the model\u0027s filtered list to show all employees"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        dummyCommand.redo();"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        deleteFirstEmployee(expectedModel);"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        assertEquals(expectedModel, model);"},{"lineNumber":50,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":53,"author":{"gitID":"-"},"content":"     * Deletes the first employee in the model\u0027s filtered list."},{"lineNumber":54,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    class DummyCommand extends UndoableCommand {"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        DummyCommand(Model model) {"},{"lineNumber":57,"author":{"gitID":"-"},"content":"            this.model \u003d model;"},{"lineNumber":58,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":59,"author":{"gitID":"-"},"content":""},{"lineNumber":60,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":61,"author":{"gitID":"-"},"content":"        public CommandResult executeUndoableCommand() throws CommandException {"},{"lineNumber":62,"author":{"gitID":"-"},"content":"            Employee employeeToDelete \u003d model.getFilteredEmployeeList().get(0);"},{"lineNumber":63,"author":{"gitID":"-"},"content":"            try {"},{"lineNumber":64,"author":{"gitID":"-"},"content":"                model.deleteEmployee(employeeToDelete);"},{"lineNumber":65,"author":{"gitID":"-"},"content":"            } catch (EmployeeNotFoundException pnfe) {"},{"lineNumber":66,"author":{"gitID":"-"},"content":"                fail(\"Impossible: employeeToDelete was retrieved from model.\");"},{"lineNumber":67,"author":{"gitID":"-"},"content":"            }"},{"lineNumber":68,"author":{"gitID":"-"},"content":"            return new CommandResult(\"\");"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":70,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"hzxcaryn":1,"-":70}},{"path":"src/test/java/seedu/ptman/logic/commands/AddShiftCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static org.junit.Assert.fail;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalShifts.SHIFT_MONDAY_AM;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalShifts.SHIFT_MONDAY_PM;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import java.time.LocalDate;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.CommandHistory;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.UndoRedoStack;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.exceptions.CommandException;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Model;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.ptman.model.PartTimeManager;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"import seedu.ptman.model.ReadOnlyPartTimeManager;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Employee;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.exceptions.DuplicateEmployeeException;"},{"lineNumber":30,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.exceptions.EmployeeNotFoundException;"},{"lineNumber":31,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":32,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.exceptions.NoOutletInformationFieldChangeException;"},{"lineNumber":33,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Shift;"},{"lineNumber":34,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.exceptions.DuplicateShiftException;"},{"lineNumber":35,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.exceptions.ShiftNotFoundException;"},{"lineNumber":36,"author":{"gitID":"-"},"content":"import seedu.ptman.model.tag.Tag;"},{"lineNumber":37,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.ShiftBuilder;"},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"shanwpf"},"content":"//@@author shanwpf"},{"lineNumber":40,"author":{"gitID":"shanwpf"},"content":"public class AddShiftCommandTest {"},{"lineNumber":41,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":42,"author":{"gitID":"shanwpf"},"content":"    @Rule"},{"lineNumber":43,"author":{"gitID":"shanwpf"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":44,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":45,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"shanwpf"},"content":"    public void constructor_nullShift_throwsNullPointerException() {"},{"lineNumber":47,"author":{"gitID":"shanwpf"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":48,"author":{"gitID":"shanwpf"},"content":"        new AddShiftCommand(null);"},{"lineNumber":49,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":51,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":52,"author":{"gitID":"shanwpf"},"content":"    public void execute_shiftAcceptedByModel_addSuccessful() throws Exception {"},{"lineNumber":53,"author":{"gitID":"shanwpf"},"content":"        ModelStubAcceptingShiftAdded modelStub \u003d new ModelStubAcceptingShiftAdded();"},{"lineNumber":54,"author":{"gitID":"shanwpf"},"content":"        modelStub.setTrueAdminMode(new Password());"},{"lineNumber":55,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":56,"author":{"gitID":"shanwpf"},"content":"        Shift validShift \u003d new ShiftBuilder().withDate(LocalDate.now()).build();"},{"lineNumber":57,"author":{"gitID":"shanwpf"},"content":"        CommandResult commandResult \u003d getAddShiftCommandForShift(validShift, modelStub).execute();"},{"lineNumber":58,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":59,"author":{"gitID":"shanwpf"},"content":"        assertEquals(String.format(AddShiftCommand.MESSAGE_SUCCESS, validShift), commandResult.feedbackToUser);"},{"lineNumber":60,"author":{"gitID":"shanwpf"},"content":"        assertEquals(Arrays.asList(validShift), modelStub.shiftsAdded);"},{"lineNumber":61,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":62,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":63,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":64,"author":{"gitID":"shanwpf"},"content":"    public void execute_duplicateShift_throwsCommandException() throws Exception {"},{"lineNumber":65,"author":{"gitID":"shanwpf"},"content":"        ModelStub modelStub \u003d new ModelStubThrowingDuplicateShiftException();"},{"lineNumber":66,"author":{"gitID":"shanwpf"},"content":"        modelStub.setTrueAdminMode(new Password());"},{"lineNumber":67,"author":{"gitID":"shanwpf"},"content":"        Shift validShift \u003d new ShiftBuilder().withDate(LocalDate.now()).build();"},{"lineNumber":68,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":69,"author":{"gitID":"shanwpf"},"content":"        thrown.expect(CommandException.class);"},{"lineNumber":70,"author":{"gitID":"shanwpf"},"content":"        thrown.expectMessage(AddShiftCommand.MESSAGE_DUPLICATE_SHIFT);"},{"lineNumber":71,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":72,"author":{"gitID":"shanwpf"},"content":"        getAddShiftCommandForShift(validShift, modelStub).execute();"},{"lineNumber":73,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":74,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":75,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":76,"author":{"gitID":"shanwpf"},"content":"    public void equals() {"},{"lineNumber":77,"author":{"gitID":"shanwpf"},"content":"        AddShiftCommand addMondayAmCommand \u003d new AddShiftCommand(SHIFT_MONDAY_AM);"},{"lineNumber":78,"author":{"gitID":"shanwpf"},"content":"        AddShiftCommand addMondayPmCommand \u003d new AddShiftCommand(SHIFT_MONDAY_PM);"},{"lineNumber":79,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":80,"author":{"gitID":"shanwpf"},"content":"        // same object -\u003e returns true"},{"lineNumber":81,"author":{"gitID":"shanwpf"},"content":"        assertTrue(addMondayAmCommand.equals(addMondayAmCommand));"},{"lineNumber":82,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":83,"author":{"gitID":"shanwpf"},"content":"        // same values -\u003e returns true"},{"lineNumber":84,"author":{"gitID":"shanwpf"},"content":"        AddShiftCommand addMondayAmCommandCopy \u003d new AddShiftCommand(SHIFT_MONDAY_AM);"},{"lineNumber":85,"author":{"gitID":"shanwpf"},"content":"        assertTrue(addMondayAmCommand.equals(addMondayAmCommandCopy));"},{"lineNumber":86,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":87,"author":{"gitID":"shanwpf"},"content":"        // different types -\u003e returns false"},{"lineNumber":88,"author":{"gitID":"shanwpf"},"content":"        assertFalse(addMondayAmCommand.equals(1));"},{"lineNumber":89,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":90,"author":{"gitID":"shanwpf"},"content":"        // null -\u003e returns false"},{"lineNumber":91,"author":{"gitID":"shanwpf"},"content":"        assertFalse(addMondayAmCommand.equals(null));"},{"lineNumber":92,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":93,"author":{"gitID":"shanwpf"},"content":"        // different employee -\u003e returns false"},{"lineNumber":94,"author":{"gitID":"shanwpf"},"content":"        assertFalse(addMondayAmCommand.equals(addMondayPmCommand));"},{"lineNumber":95,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":96,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":97,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":98,"author":{"gitID":"shanwpf"},"content":"     * Generates a new AddCommand with the details of the given employee."},{"lineNumber":99,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":100,"author":{"gitID":"shanwpf"},"content":"    private AddShiftCommand getAddShiftCommandForShift(Shift shift, Model model) {"},{"lineNumber":101,"author":{"gitID":"shanwpf"},"content":"        AddShiftCommand command \u003d new AddShiftCommand(shift);"},{"lineNumber":102,"author":{"gitID":"shanwpf"},"content":"        command.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":103,"author":{"gitID":"shanwpf"},"content":"        return command;"},{"lineNumber":104,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":105,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":106,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":107,"author":{"gitID":"shanwpf"},"content":"     * A default model stub that have all of the methods failing."},{"lineNumber":108,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":109,"author":{"gitID":"shanwpf"},"content":"    private class ModelStub implements Model {"},{"lineNumber":110,"author":{"gitID":"shanwpf"},"content":"        @Override"},{"lineNumber":111,"author":{"gitID":"shanwpf"},"content":"        public void addEmployee(Employee employee) throws DuplicateEmployeeException {"},{"lineNumber":112,"author":{"gitID":"shanwpf"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":113,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":114,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":115,"author":{"gitID":"shanwpf"},"content":"        @Override"},{"lineNumber":116,"author":{"gitID":"shanwpf"},"content":"        public boolean isAdminPassword(Password password) {"},{"lineNumber":117,"author":{"gitID":"shanwpf"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":118,"author":{"gitID":"shanwpf"},"content":"            return false;"},{"lineNumber":119,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":120,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":121,"author":{"gitID":"shanwpf"},"content":"        @Override"},{"lineNumber":122,"author":{"gitID":"shanwpf"},"content":"        public void setAdminPassword(Password password) {"},{"lineNumber":123,"author":{"gitID":"shanwpf"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":124,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":125,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":126,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":127,"author":{"gitID":"shanwpf"},"content":"        @Override"},{"lineNumber":128,"author":{"gitID":"shanwpf"},"content":"        public void addShift(Shift shift) throws DuplicateShiftException {"},{"lineNumber":129,"author":{"gitID":"shanwpf"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":130,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":131,"author":{"gitID":"shanwpf"},"content":"        @Override"},{"lineNumber":132,"author":{"gitID":"shanwpf"},"content":"        public boolean isAdminMode() {"},{"lineNumber":133,"author":{"gitID":"shanwpf"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":134,"author":{"gitID":"shanwpf"},"content":"            return false;"},{"lineNumber":135,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":136,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":137,"author":{"gitID":"shanwpf"},"content":"        @Override"},{"lineNumber":138,"author":{"gitID":"shanwpf"},"content":"        public boolean setTrueAdminMode(Password password) {"},{"lineNumber":139,"author":{"gitID":"shanwpf"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":140,"author":{"gitID":"shanwpf"},"content":"            return false;"},{"lineNumber":141,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":142,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":143,"author":{"gitID":"shanwpf"},"content":"        @Override"},{"lineNumber":144,"author":{"gitID":"shanwpf"},"content":"        public void setFalseAdminMode() {"},{"lineNumber":145,"author":{"gitID":"shanwpf"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":146,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":147,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":148,"author":{"gitID":"shanwpf"},"content":"        @Override"},{"lineNumber":149,"author":{"gitID":"shanwpf"},"content":"        public void storeResetPassword(Employee employee, Password tempPassword) {"},{"lineNumber":150,"author":{"gitID":"shanwpf"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":151,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":152,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":153,"author":{"gitID":"shanwpf"},"content":"        @Override"},{"lineNumber":154,"author":{"gitID":"shanwpf"},"content":"        public void storeResetPassword(OutletInformation outlet, Password tempPassword) {"},{"lineNumber":155,"author":{"gitID":"shanwpf"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":156,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":157,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":158,"author":{"gitID":"shanwpf"},"content":"        @Override"},{"lineNumber":159,"author":{"gitID":"shanwpf"},"content":"        public boolean isCorrectTempPwd(OutletInformation outlet, Password tempPassword) {"},{"lineNumber":160,"author":{"gitID":"shanwpf"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":161,"author":{"gitID":"shanwpf"},"content":"            return false;"},{"lineNumber":162,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":163,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":164,"author":{"gitID":"shanwpf"},"content":"        @Override"},{"lineNumber":165,"author":{"gitID":"shanwpf"},"content":"        public boolean isCorrectTempPwd(Employee employee, Password tempPassword) {"},{"lineNumber":166,"author":{"gitID":"shanwpf"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":167,"author":{"gitID":"shanwpf"},"content":"            return false;"},{"lineNumber":168,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":169,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":170,"author":{"gitID":"shanwpf"},"content":"        @Override"},{"lineNumber":171,"author":{"gitID":"shanwpf"},"content":"        public void deleteTagFromAllEmployee(Tag tag) {"},{"lineNumber":172,"author":{"gitID":"shanwpf"},"content":"            fail(\"This method should not be called\");"},{"lineNumber":173,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":174,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":175,"author":{"gitID":"shanwpf"},"content":"        @Override"},{"lineNumber":176,"author":{"gitID":"shanwpf"},"content":"        public void resetData(ReadOnlyPartTimeManager newData) {"},{"lineNumber":177,"author":{"gitID":"shanwpf"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":178,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":179,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":180,"author":{"gitID":"shanwpf"},"content":"        @Override"},{"lineNumber":181,"author":{"gitID":"shanwpf"},"content":"        public ReadOnlyPartTimeManager getPartTimeManager() {"},{"lineNumber":182,"author":{"gitID":"shanwpf"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":183,"author":{"gitID":"shanwpf"},"content":"            return null;"},{"lineNumber":184,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":185,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":186,"author":{"gitID":"shanwpf"},"content":"        @Override"},{"lineNumber":187,"author":{"gitID":"shanwpf"},"content":"        public void deleteEmployee(Employee target) throws EmployeeNotFoundException {"},{"lineNumber":188,"author":{"gitID":"shanwpf"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":189,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":190,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":191,"author":{"gitID":"shanwpf"},"content":"        @Override"},{"lineNumber":192,"author":{"gitID":"shanwpf"},"content":"        public void updateEmployee(Employee target, Employee editedEmployee)"},{"lineNumber":193,"author":{"gitID":"shanwpf"},"content":"                throws DuplicateEmployeeException {"},{"lineNumber":194,"author":{"gitID":"shanwpf"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":195,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":196,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":197,"author":{"gitID":"shanwpf"},"content":"        @Override"},{"lineNumber":198,"author":{"gitID":"shanwpf"},"content":"        public void updateOutlet(OutletInformation outlet) throws NoOutletInformationFieldChangeException {"},{"lineNumber":199,"author":{"gitID":"shanwpf"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":200,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":201,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":202,"author":{"gitID":"shanwpf"},"content":"        @Override"},{"lineNumber":203,"author":{"gitID":"shanwpf"},"content":"        public String getEncryptionModeMessage() {"},{"lineNumber":204,"author":{"gitID":"shanwpf"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":205,"author":{"gitID":"shanwpf"},"content":"            return null;"},{"lineNumber":206,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":207,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":208,"author":{"gitID":"shanwpf"},"content":"        @Override"},{"lineNumber":209,"author":{"gitID":"shanwpf"},"content":"        public boolean getEncryptionMode() {"},{"lineNumber":210,"author":{"gitID":"shanwpf"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":211,"author":{"gitID":"shanwpf"},"content":"            return false;"},{"lineNumber":212,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":213,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":214,"author":{"gitID":"shanwpf"},"content":"        @Override"},{"lineNumber":215,"author":{"gitID":"shanwpf"},"content":"        public ObservableList\u003cEmployee\u003e getFilteredEmployeeList() {"},{"lineNumber":216,"author":{"gitID":"shanwpf"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":217,"author":{"gitID":"shanwpf"},"content":"            return null;"},{"lineNumber":218,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":219,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":220,"author":{"gitID":"shanwpf"},"content":"        @Override"},{"lineNumber":221,"author":{"gitID":"shanwpf"},"content":"        public ObservableList\u003cShift\u003e getFilteredShiftList() {"},{"lineNumber":222,"author":{"gitID":"shanwpf"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":223,"author":{"gitID":"shanwpf"},"content":"            return null;"},{"lineNumber":224,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":225,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":226,"author":{"gitID":"shanwpf"},"content":"        @Override"},{"lineNumber":227,"author":{"gitID":"shanwpf"},"content":"        public OutletInformation getOutletInformation() {"},{"lineNumber":228,"author":{"gitID":"shanwpf"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":229,"author":{"gitID":"shanwpf"},"content":"            return null;"},{"lineNumber":230,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":231,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":232,"author":{"gitID":"shanwpf"},"content":"        @Override"},{"lineNumber":233,"author":{"gitID":"shanwpf"},"content":"        public void updateFilteredEmployeeList(Predicate\u003cEmployee\u003e predicate) {"},{"lineNumber":234,"author":{"gitID":"shanwpf"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":235,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":236,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":237,"author":{"gitID":"shanwpf"},"content":"        @Override"},{"lineNumber":238,"author":{"gitID":"shanwpf"},"content":"        public void setFilteredShiftListToWeek(LocalDate date) {"},{"lineNumber":239,"author":{"gitID":"shanwpf"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":240,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":241,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":242,"author":{"gitID":"shanwpf"},"content":"        @Override"},{"lineNumber":243,"author":{"gitID":"shanwpf"},"content":"        public void deleteShift(Shift shiftToDelete) throws ShiftNotFoundException {"},{"lineNumber":244,"author":{"gitID":"shanwpf"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":245,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":246,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":247,"author":{"gitID":"shanwpf"},"content":"        @Override"},{"lineNumber":248,"author":{"gitID":"shanwpf"},"content":"        public void updateShift(Shift shiftToApply, Shift editedShift)"},{"lineNumber":249,"author":{"gitID":"shanwpf"},"content":"                throws ShiftNotFoundException, DuplicateShiftException {"},{"lineNumber":250,"author":{"gitID":"shanwpf"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":251,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":252,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":253,"author":{"gitID":"shanwpf"},"content":"        @Override"},{"lineNumber":254,"author":{"gitID":"shanwpf"},"content":"        public void updateFilteredShiftList(Predicate\u003cShift\u003e predicate) {"},{"lineNumber":255,"author":{"gitID":"shanwpf"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":256,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":257,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":258,"author":{"gitID":"shanwpf"},"content":"        @Override"},{"lineNumber":259,"author":{"gitID":"shanwpf"},"content":"        public void encryptLocalStorage() {"},{"lineNumber":260,"author":{"gitID":"shanwpf"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":261,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":262,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":263,"author":{"gitID":"shanwpf"},"content":"        @Override"},{"lineNumber":264,"author":{"gitID":"shanwpf"},"content":"        public void decryptLocalStorage() {"},{"lineNumber":265,"author":{"gitID":"shanwpf"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":266,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":267,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":268,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":269,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":270,"author":{"gitID":"shanwpf"},"content":"     * A Model stub that always throw a DuplicateEmployeeException when trying to add an employee."},{"lineNumber":271,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":272,"author":{"gitID":"shanwpf"},"content":"    private class ModelStubThrowingDuplicateShiftException extends ModelStub {"},{"lineNumber":273,"author":{"gitID":"shanwpf"},"content":"        @Override"},{"lineNumber":274,"author":{"gitID":"shanwpf"},"content":"        public void addShift(Shift shift) throws DuplicateShiftException {"},{"lineNumber":275,"author":{"gitID":"shanwpf"},"content":"            throw new DuplicateShiftException();"},{"lineNumber":276,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":277,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":278,"author":{"gitID":"shanwpf"},"content":"        @Override"},{"lineNumber":279,"author":{"gitID":"shanwpf"},"content":"        public boolean isAdminMode() {"},{"lineNumber":280,"author":{"gitID":"shanwpf"},"content":"            return true;"},{"lineNumber":281,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":282,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":283,"author":{"gitID":"shanwpf"},"content":"        @Override"},{"lineNumber":284,"author":{"gitID":"shanwpf"},"content":"        public boolean setTrueAdminMode(Password password) {"},{"lineNumber":285,"author":{"gitID":"shanwpf"},"content":"            requireNonNull(password);"},{"lineNumber":286,"author":{"gitID":"shanwpf"},"content":"            return true;"},{"lineNumber":287,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":288,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":289,"author":{"gitID":"shanwpf"},"content":"        @Override"},{"lineNumber":290,"author":{"gitID":"shanwpf"},"content":"        public ReadOnlyPartTimeManager getPartTimeManager() {"},{"lineNumber":291,"author":{"gitID":"shanwpf"},"content":"            return new PartTimeManager();"},{"lineNumber":292,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":293,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":294,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":295,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":296,"author":{"gitID":"shanwpf"},"content":"     * A Model stub that always accept the employee being added."},{"lineNumber":297,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":298,"author":{"gitID":"shanwpf"},"content":"    private class ModelStubAcceptingShiftAdded extends ModelStub {"},{"lineNumber":299,"author":{"gitID":"shanwpf"},"content":"        final ArrayList\u003cShift\u003e shiftsAdded \u003d new ArrayList\u003c\u003e();"},{"lineNumber":300,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":301,"author":{"gitID":"shanwpf"},"content":"        @Override"},{"lineNumber":302,"author":{"gitID":"shanwpf"},"content":"        public void addShift(Shift shift) throws DuplicateShiftException {"},{"lineNumber":303,"author":{"gitID":"shanwpf"},"content":"            requireNonNull(shift);"},{"lineNumber":304,"author":{"gitID":"shanwpf"},"content":"            shiftsAdded.add(shift);"},{"lineNumber":305,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":306,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":307,"author":{"gitID":"shanwpf"},"content":"        @Override"},{"lineNumber":308,"author":{"gitID":"shanwpf"},"content":"        public boolean setTrueAdminMode(Password password) {"},{"lineNumber":309,"author":{"gitID":"shanwpf"},"content":"            requireNonNull(password);"},{"lineNumber":310,"author":{"gitID":"shanwpf"},"content":"            return true;"},{"lineNumber":311,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":312,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":313,"author":{"gitID":"shanwpf"},"content":"        @Override"},{"lineNumber":314,"author":{"gitID":"shanwpf"},"content":"        public boolean isAdminMode() {"},{"lineNumber":315,"author":{"gitID":"shanwpf"},"content":"            return true;"},{"lineNumber":316,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":317,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":318,"author":{"gitID":"shanwpf"},"content":"        @Override"},{"lineNumber":319,"author":{"gitID":"shanwpf"},"content":"        public ReadOnlyPartTimeManager getPartTimeManager() {"},{"lineNumber":320,"author":{"gitID":"shanwpf"},"content":"            return new PartTimeManager();"},{"lineNumber":321,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":322,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":323,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":324,"author":{"gitID":"shanwpf"},"content":"}"}],"authorContributionMap":{"shanwpf":286,"-":38}},{"path":"src/test/java/seedu/ptman/logic/commands/LogOutAdminCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.assertCommandSuccess;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.CommandHistory;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.UndoRedoStack;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Model;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.ptman.model.ModelManager;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"koo1993"},"content":"//@@author koo1993"},{"lineNumber":14,"author":{"gitID":"koo1993"},"content":"/**"},{"lineNumber":15,"author":{"gitID":"koo1993"},"content":" * Contains integration tests (interaction with the Model) for {@code LogOutAdminCommand}."},{"lineNumber":16,"author":{"gitID":"koo1993"},"content":" */"},{"lineNumber":17,"author":{"gitID":"koo1993"},"content":"public class LogOutAdminCommandTest {"},{"lineNumber":18,"author":{"gitID":"koo1993"},"content":"    private final Password defaultPassword \u003d new Password();"},{"lineNumber":19,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":20,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":21,"author":{"gitID":"koo1993"},"content":"    public void execute_notAdminModePartTimeManager_alreadyLoggedOut() {"},{"lineNumber":22,"author":{"gitID":"koo1993"},"content":"        Model model \u003d new ModelManager();"},{"lineNumber":23,"author":{"gitID":"koo1993"},"content":"        assertCommandSuccess(prepareCommand(model), model,  LogOutAdminCommand.MESSAGE_LOGGEDOUT, model);"},{"lineNumber":24,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":25,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":26,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":27,"author":{"gitID":"koo1993"},"content":"    public void execute_adminModePartTimeManager_success() {"},{"lineNumber":28,"author":{"gitID":"koo1993"},"content":"        Model model \u003d new ModelManager();"},{"lineNumber":29,"author":{"gitID":"koo1993"},"content":"        model.setTrueAdminMode(defaultPassword);"},{"lineNumber":30,"author":{"gitID":"koo1993"},"content":"        assertCommandSuccess(prepareCommand(model), model,  LogOutAdminCommand.MESSAGE_SUCCESS, model);"},{"lineNumber":31,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":32,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":33,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":34,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":35,"author":{"gitID":"koo1993"},"content":"     * Generates a new {@code LogOutAdminCommand} which upon execution, log out from AdminMode."},{"lineNumber":36,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":37,"author":{"gitID":"koo1993"},"content":"    private LogOutAdminCommand prepareCommand(Model model) {"},{"lineNumber":38,"author":{"gitID":"koo1993"},"content":"        LogOutAdminCommand command \u003d new LogOutAdminCommand();"},{"lineNumber":39,"author":{"gitID":"koo1993"},"content":"        command.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":40,"author":{"gitID":"koo1993"},"content":"        return command;"},{"lineNumber":41,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":42,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":43,"author":{"gitID":"koo1993"},"content":"}"}],"authorContributionMap":{"koo1993":31,"-":12}},{"path":"src/test/java/seedu/ptman/logic/commands/ViewEncryptionCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.assertCommandSuccess;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.getTypicalPartTimeManager;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.CommandHistory;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.UndoRedoStack;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Model;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.model.ModelManager;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.model.UserPrefs;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":17,"author":{"gitID":"SunBangjie"},"content":"/**"},{"lineNumber":18,"author":{"gitID":"SunBangjie"},"content":" * Contains integration tests (interaction with the Model) for {@code ViewOutletCommand}."},{"lineNumber":19,"author":{"gitID":"SunBangjie"},"content":" */"},{"lineNumber":20,"author":{"gitID":"SunBangjie"},"content":"public class ViewEncryptionCommandTest {"},{"lineNumber":21,"author":{"gitID":"SunBangjie"},"content":"    private ViewEncryptionCommand command;"},{"lineNumber":22,"author":{"gitID":"SunBangjie"},"content":"    private Model model;"},{"lineNumber":23,"author":{"gitID":"SunBangjie"},"content":"    private Model expectedModel;"},{"lineNumber":24,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":25,"author":{"gitID":"SunBangjie"},"content":"    @Before"},{"lineNumber":26,"author":{"gitID":"SunBangjie"},"content":"    public void setUp() {"},{"lineNumber":27,"author":{"gitID":"SunBangjie"},"content":"        model \u003d new ModelManager(getTypicalPartTimeManager(), new UserPrefs(),"},{"lineNumber":28,"author":{"gitID":"SunBangjie"},"content":"                new OutletInformation());"},{"lineNumber":29,"author":{"gitID":"SunBangjie"},"content":"        expectedModel \u003d new ModelManager(getTypicalPartTimeManager(), new UserPrefs(),"},{"lineNumber":30,"author":{"gitID":"SunBangjie"},"content":"                new OutletInformation());"},{"lineNumber":31,"author":{"gitID":"SunBangjie"},"content":"        command \u003d new ViewEncryptionCommand();"},{"lineNumber":32,"author":{"gitID":"SunBangjie"},"content":"        command.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":33,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":35,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":36,"author":{"gitID":"SunBangjie"},"content":"    public void execute_validOutletInformation_showsCorrectInformation() {"},{"lineNumber":37,"author":{"gitID":"SunBangjie"},"content":"        String expectedMessage \u003d \"Local storage files are not encrypted.\";"},{"lineNumber":38,"author":{"gitID":"SunBangjie"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);"},{"lineNumber":39,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":15,"SunBangjie":25}},{"path":"src/test/java/seedu/ptman/logic/commands/AddShiftCommandIntegrationTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.assertCommandFailure;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.assertCommandSuccess;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalShifts.getTypicalPartTimeManagerWithShifts;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.CommandHistory;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.UndoRedoStack;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Model;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.model.ModelManager;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.ptman.model.UserPrefs;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Shift;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.exceptions.DuplicateShiftException;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.ShiftBuilder;"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"shanwpf"},"content":"//@@author shanwpf"},{"lineNumber":24,"author":{"gitID":"shanwpf"},"content":"/**"},{"lineNumber":25,"author":{"gitID":"shanwpf"},"content":" * Contains integration tests (interaction with the Model) for {@code AddShiftCommand}."},{"lineNumber":26,"author":{"gitID":"shanwpf"},"content":" */"},{"lineNumber":27,"author":{"gitID":"shanwpf"},"content":"public class AddShiftCommandIntegrationTest {"},{"lineNumber":28,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":29,"author":{"gitID":"shanwpf"},"content":"    private Model model;"},{"lineNumber":30,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":31,"author":{"gitID":"shanwpf"},"content":"    @Before"},{"lineNumber":32,"author":{"gitID":"shanwpf"},"content":"    public void setUp() {"},{"lineNumber":33,"author":{"gitID":"shanwpf"},"content":"        model \u003d new ModelManager(getTypicalPartTimeManagerWithShifts(), new UserPrefs(), new OutletInformation());"},{"lineNumber":34,"author":{"gitID":"shanwpf"},"content":"        model.updateFilteredShiftList(Model.PREDICATE_SHOW_ALL_SHIFTS);"},{"lineNumber":35,"author":{"gitID":"shanwpf"},"content":"        model.setTrueAdminMode(new Password());"},{"lineNumber":36,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":37,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":38,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":39,"author":{"gitID":"shanwpf"},"content":"    public void execute_newShift_success() throws Exception {"},{"lineNumber":40,"author":{"gitID":"shanwpf"},"content":"        Shift validShift \u003d new ShiftBuilder().withDate(LocalDate.now()).build();"},{"lineNumber":41,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":42,"author":{"gitID":"shanwpf"},"content":"        Model expectedModel \u003d"},{"lineNumber":43,"author":{"gitID":"shanwpf"},"content":"                new ModelManager(getTypicalPartTimeManagerWithShifts(), new UserPrefs(), new OutletInformation());"},{"lineNumber":44,"author":{"gitID":"shanwpf"},"content":"        expectedModel.setTrueAdminMode(new Password());"},{"lineNumber":45,"author":{"gitID":"shanwpf"},"content":"        expectedModel.updateFilteredShiftList(Model.PREDICATE_SHOW_ALL_SHIFTS);"},{"lineNumber":46,"author":{"gitID":"shanwpf"},"content":"        expectedModel.addShift(validShift);"},{"lineNumber":47,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":48,"author":{"gitID":"shanwpf"},"content":"        assertCommandSuccess(prepareCommand(validShift, model), model,"},{"lineNumber":49,"author":{"gitID":"shanwpf"},"content":"                String.format(AddShiftCommand.MESSAGE_SUCCESS, validShift), expectedModel);"},{"lineNumber":50,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":51,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":52,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":53,"author":{"gitID":"shanwpf"},"content":"    public void execute_duplicateShift_throwsCommandException() throws DuplicateShiftException {"},{"lineNumber":54,"author":{"gitID":"shanwpf"},"content":"        Shift shift \u003d new ShiftBuilder().withDate(LocalDate.now()).build();"},{"lineNumber":55,"author":{"gitID":"shanwpf"},"content":"        model.addShift(shift);"},{"lineNumber":56,"author":{"gitID":"shanwpf"},"content":"        assertCommandFailure(prepareCommand(shift, model), model, AddShiftCommand.MESSAGE_DUPLICATE_SHIFT);"},{"lineNumber":57,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":58,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":59,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":60,"author":{"gitID":"shanwpf"},"content":"    public void execute_invalidShiftDate_throwsCommandException() {"},{"lineNumber":61,"author":{"gitID":"shanwpf"},"content":"        Shift shift \u003d new ShiftBuilder().withDate(\"01-01-10\").build();"},{"lineNumber":62,"author":{"gitID":"shanwpf"},"content":"        assertCommandFailure(prepareCommand(shift, model), model, AddShiftCommand.MESSAGE_DATE_OVER);"},{"lineNumber":63,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":65,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":66,"author":{"gitID":"shanwpf"},"content":"    public void execute_startTimeAfterEndTime_throwsCommandException() {"},{"lineNumber":67,"author":{"gitID":"shanwpf"},"content":"        Shift shift \u003d new ShiftBuilder().withStartTime(\"1000\").withEndTime(\"0800\").build();"},{"lineNumber":68,"author":{"gitID":"shanwpf"},"content":"        assertCommandFailure(prepareCommand(shift, model), model, AddShiftCommand.MESSAGE_INVALID_TIME);"},{"lineNumber":69,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":70,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":71,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":72,"author":{"gitID":"shanwpf"},"content":"     * Generates a new {@code AddShiftCommand} which upon execution, adds {@code shift} into the {@code model}."},{"lineNumber":73,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":74,"author":{"gitID":"shanwpf"},"content":"    private AddShiftCommand prepareCommand(Shift shift, Model model) {"},{"lineNumber":75,"author":{"gitID":"shanwpf"},"content":"        AddShiftCommand command \u003d new AddShiftCommand(shift);"},{"lineNumber":76,"author":{"gitID":"shanwpf"},"content":"        command.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":77,"author":{"gitID":"shanwpf"},"content":"        return command;"},{"lineNumber":78,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":79,"author":{"gitID":"shanwpf"},"content":"}"}],"authorContributionMap":{"shanwpf":57,"-":22}},{"path":"src/test/java/seedu/ptman/logic/commands/ExportCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.ExportCommand.MESSAGE_EMAIL_SUCCESS;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.ExportCommand.MESSAGE_SAVE_SUCCESS;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.ui.ExportTimetableAsImageAndEmailRequestEvent;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.ui.ExportTimetableAsImageRequestEvent;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Email;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.ui.testutil.EventsCollectorRule;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"hzxcaryn"},"content":"//@@author hzxcaryn"},{"lineNumber":18,"author":{"gitID":"hzxcaryn"},"content":"public class ExportCommandTest {"},{"lineNumber":19,"author":{"gitID":"hzxcaryn"},"content":"    @Rule"},{"lineNumber":20,"author":{"gitID":"hzxcaryn"},"content":"    public final EventsCollectorRule eventsCollectorRule \u003d new EventsCollectorRule();"},{"lineNumber":21,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":22,"author":{"gitID":"hzxcaryn"},"content":"    @Test"},{"lineNumber":23,"author":{"gitID":"hzxcaryn"},"content":"    public void execute_exportAndSave_success() {"},{"lineNumber":24,"author":{"gitID":"hzxcaryn"},"content":"        CommandResult result \u003d new ExportCommand().execute();"},{"lineNumber":25,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(MESSAGE_SAVE_SUCCESS, result.feedbackToUser);"},{"lineNumber":26,"author":{"gitID":"hzxcaryn"},"content":"        assertTrue(eventsCollectorRule.eventsCollector.getMostRecent() instanceof ExportTimetableAsImageRequestEvent);"},{"lineNumber":27,"author":{"gitID":"hzxcaryn"},"content":"        assertTrue(eventsCollectorRule.eventsCollector.getSize() \u003d\u003d 1);"},{"lineNumber":28,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":29,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":30,"author":{"gitID":"hzxcaryn"},"content":"    @Test"},{"lineNumber":31,"author":{"gitID":"hzxcaryn"},"content":"    public void execute_exportAndEmail_success() {"},{"lineNumber":32,"author":{"gitID":"hzxcaryn"},"content":"        CommandResult result \u003d new ExportCommand(new Email(\"email@example.com\")).execute();"},{"lineNumber":33,"author":{"gitID":"hzxcaryn"},"content":"        assertEquals(MESSAGE_EMAIL_SUCCESS, result.feedbackToUser);"},{"lineNumber":34,"author":{"gitID":"hzxcaryn"},"content":"        assertTrue(eventsCollectorRule.eventsCollector.getMostRecent()"},{"lineNumber":35,"author":{"gitID":"hzxcaryn"},"content":"                instanceof ExportTimetableAsImageAndEmailRequestEvent);"},{"lineNumber":36,"author":{"gitID":"hzxcaryn"},"content":"        assertTrue(eventsCollectorRule.eventsCollector.getSize() \u003d\u003d 1);"},{"lineNumber":37,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":39,"author":{"gitID":"hzxcaryn"},"content":"    @Test"},{"lineNumber":40,"author":{"gitID":"hzxcaryn"},"content":"    public void equals() {"},{"lineNumber":41,"author":{"gitID":"hzxcaryn"},"content":"        Email aliceEmail \u003d new Email(\"alice@example.com\");"},{"lineNumber":42,"author":{"gitID":"hzxcaryn"},"content":"        Email bobEmail \u003d new Email(\"bob@example.com\");"},{"lineNumber":43,"author":{"gitID":"hzxcaryn"},"content":"        ExportCommand exportAliceCommand \u003d new ExportCommand(aliceEmail);"},{"lineNumber":44,"author":{"gitID":"hzxcaryn"},"content":"        ExportCommand exportBobCommand \u003d new ExportCommand(bobEmail);"},{"lineNumber":45,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":46,"author":{"gitID":"hzxcaryn"},"content":"        // same object -\u003e returns true"},{"lineNumber":47,"author":{"gitID":"hzxcaryn"},"content":"        assertTrue(exportAliceCommand.equals(exportAliceCommand));"},{"lineNumber":48,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":49,"author":{"gitID":"hzxcaryn"},"content":"        // same values -\u003e returns true"},{"lineNumber":50,"author":{"gitID":"hzxcaryn"},"content":"        ExportCommand exportAliceCommandCopy \u003d new ExportCommand(aliceEmail);"},{"lineNumber":51,"author":{"gitID":"hzxcaryn"},"content":"        assertTrue(exportAliceCommand.equals(exportAliceCommandCopy));"},{"lineNumber":52,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":53,"author":{"gitID":"hzxcaryn"},"content":"        // different types -\u003e returns false"},{"lineNumber":54,"author":{"gitID":"hzxcaryn"},"content":"        assertFalse(exportAliceCommand.equals(1));"},{"lineNumber":55,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":56,"author":{"gitID":"hzxcaryn"},"content":"        // null -\u003e returns false"},{"lineNumber":57,"author":{"gitID":"hzxcaryn"},"content":"        assertFalse(exportAliceCommand.equals(null));"},{"lineNumber":58,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":59,"author":{"gitID":"hzxcaryn"},"content":"        // different email -\u003e returns false"},{"lineNumber":60,"author":{"gitID":"hzxcaryn"},"content":"        assertFalse(exportAliceCommand.equals(exportBobCommand));"},{"lineNumber":61,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":62,"author":{"gitID":"hzxcaryn"},"content":"}"}],"authorContributionMap":{"hzxcaryn":46,"-":16}},{"path":"src/test/java/seedu/ptman/logic/commands/UnapplyCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.assertCommandFailure;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.assertCommandSuccess;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_FIRST_EMPLOYEE;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_FIRST_SHIFT;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_SECOND_EMPLOYEE;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_SECOND_SHIFT;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalShifts.getTypicalPartTimeManagerWithShifts;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"import org.junit.After;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.index.Index;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.CommandHistory;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.UndoRedoStack;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.exceptions.CommandException;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.exceptions.InvalidPasswordException;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.exceptions.MissingPasswordException;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Model;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"import seedu.ptman.model.ModelManager;"},{"lineNumber":30,"author":{"gitID":"-"},"content":"import seedu.ptman.model.PartTimeManager;"},{"lineNumber":31,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":32,"author":{"gitID":"-"},"content":"import seedu.ptman.model.UserPrefs;"},{"lineNumber":33,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Employee;"},{"lineNumber":34,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":35,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Shift;"},{"lineNumber":36,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.Assert;"},{"lineNumber":37,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.EmployeeBuilder;"},{"lineNumber":38,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.ShiftBuilder;"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"shanwpf"},"content":"//@@author shanwpf"},{"lineNumber":41,"author":{"gitID":"shanwpf"},"content":"/**"},{"lineNumber":42,"author":{"gitID":"shanwpf"},"content":" * Contains integration tests (interaction with the Model, UndoCommand and RedoCommand)"},{"lineNumber":43,"author":{"gitID":"shanwpf"},"content":" * and unit tests for UnapplyCommand."},{"lineNumber":44,"author":{"gitID":"shanwpf"},"content":" */"},{"lineNumber":45,"author":{"gitID":"shanwpf"},"content":"public class UnapplyCommandTest {"},{"lineNumber":46,"author":{"gitID":"shanwpf"},"content":"    @Rule"},{"lineNumber":47,"author":{"gitID":"shanwpf"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":48,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":49,"author":{"gitID":"shanwpf"},"content":"    private Model model \u003d new ModelManager(new PartTimeManager(getTypicalPartTimeManagerWithShifts()), new UserPrefs(),"},{"lineNumber":50,"author":{"gitID":"shanwpf"},"content":"            new OutletInformation());"},{"lineNumber":51,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":52,"author":{"gitID":"shanwpf"},"content":"    @Before"},{"lineNumber":53,"author":{"gitID":"shanwpf"},"content":"    public void setMode_adminMode() {"},{"lineNumber":54,"author":{"gitID":"shanwpf"},"content":"        model.setTrueAdminMode(new Password());"},{"lineNumber":55,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":57,"author":{"gitID":"shanwpf"},"content":"    @Before"},{"lineNumber":58,"author":{"gitID":"shanwpf"},"content":"    public void showAllShifts() {"},{"lineNumber":59,"author":{"gitID":"shanwpf"},"content":"        model.updateFilteredShiftList(Model.PREDICATE_SHOW_ALL_SHIFTS);"},{"lineNumber":60,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":61,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":62,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":63,"author":{"gitID":"shanwpf"},"content":"    public void execute_employeeNotInShift_throwsCommandException() throws Exception {"},{"lineNumber":64,"author":{"gitID":"shanwpf"},"content":"        Model model \u003d new ModelManager(new PartTimeManager(), new UserPrefs(), new OutletInformation());"},{"lineNumber":65,"author":{"gitID":"shanwpf"},"content":"        model.updateFilteredShiftList(Model.PREDICATE_SHOW_ALL_SHIFTS);"},{"lineNumber":66,"author":{"gitID":"shanwpf"},"content":"        model.setTrueAdminMode(new Password());"},{"lineNumber":67,"author":{"gitID":"shanwpf"},"content":"        Employee employee \u003d new EmployeeBuilder().withName(\"Absent\").build();"},{"lineNumber":68,"author":{"gitID":"shanwpf"},"content":"        Shift shift \u003d new ShiftBuilder().build();"},{"lineNumber":69,"author":{"gitID":"shanwpf"},"content":"        model.addEmployee(employee);"},{"lineNumber":70,"author":{"gitID":"shanwpf"},"content":"        model.addShift(shift);"},{"lineNumber":71,"author":{"gitID":"shanwpf"},"content":"        UnapplyCommand unapplyCommand \u003d prepareCommandWithoutPassword(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, model);"},{"lineNumber":72,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":73,"author":{"gitID":"shanwpf"},"content":"        assertCommandFailure(unapplyCommand, model, UnapplyCommand.MESSAGE_EMPLOYEE_NOT_FOUND);"},{"lineNumber":74,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":75,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":76,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":77,"author":{"gitID":"shanwpf"},"content":"    public void execute_adminModeEmployeeInShift_success() throws Exception {"},{"lineNumber":78,"author":{"gitID":"shanwpf"},"content":"        Model model \u003d new ModelManager(new PartTimeManager(), new UserPrefs(), new OutletInformation());"},{"lineNumber":79,"author":{"gitID":"shanwpf"},"content":"        Model expectedModel \u003d new ModelManager(new PartTimeManager(), new UserPrefs(), new OutletInformation());"},{"lineNumber":80,"author":{"gitID":"shanwpf"},"content":"        model.updateFilteredShiftList(Model.PREDICATE_SHOW_ALL_SHIFTS);"},{"lineNumber":81,"author":{"gitID":"shanwpf"},"content":"        expectedModel.updateFilteredShiftList(Model.PREDICATE_SHOW_ALL_SHIFTS);"},{"lineNumber":82,"author":{"gitID":"shanwpf"},"content":"        model.setTrueAdminMode(new Password());"},{"lineNumber":83,"author":{"gitID":"shanwpf"},"content":"        expectedModel.setTrueAdminMode(new Password());"},{"lineNumber":84,"author":{"gitID":"shanwpf"},"content":"        Employee employee \u003d new EmployeeBuilder().withName(\"Present\").build();"},{"lineNumber":85,"author":{"gitID":"shanwpf"},"content":"        Employee expectedEmployee \u003d new EmployeeBuilder().withName(\"Present\").build();"},{"lineNumber":86,"author":{"gitID":"shanwpf"},"content":"        Shift shift \u003d new ShiftBuilder().build();"},{"lineNumber":87,"author":{"gitID":"shanwpf"},"content":"        Shift expectedShift \u003d new ShiftBuilder().build();"},{"lineNumber":88,"author":{"gitID":"shanwpf"},"content":"        shift.addEmployee(employee);"},{"lineNumber":89,"author":{"gitID":"shanwpf"},"content":"        model.addEmployee(employee);"},{"lineNumber":90,"author":{"gitID":"shanwpf"},"content":"        model.addShift(shift);"},{"lineNumber":91,"author":{"gitID":"shanwpf"},"content":"        expectedModel.addShift(expectedShift);"},{"lineNumber":92,"author":{"gitID":"shanwpf"},"content":"        expectedModel.addEmployee(expectedEmployee);"},{"lineNumber":93,"author":{"gitID":"shanwpf"},"content":"        UnapplyCommand unapplyCommand \u003d prepareCommandWithoutPassword(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, model);"},{"lineNumber":94,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":95,"author":{"gitID":"shanwpf"},"content":"        String expectedMessage \u003d"},{"lineNumber":96,"author":{"gitID":"shanwpf"},"content":"                String.format(UnapplyCommand.MESSAGE_UNAPPLY_SHIFT_SUCCESS, expectedEmployee.getName(), 1);"},{"lineNumber":97,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":98,"author":{"gitID":"shanwpf"},"content":"        assertCommandSuccess(unapplyCommand, model, expectedMessage, expectedModel);"},{"lineNumber":99,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":100,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":101,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":102,"author":{"gitID":"shanwpf"},"content":"    public void execute_userModeEmployeeInShift_success() throws Exception {"},{"lineNumber":103,"author":{"gitID":"shanwpf"},"content":"        Model model \u003d new ModelManager(new PartTimeManager(), new UserPrefs(), new OutletInformation());"},{"lineNumber":104,"author":{"gitID":"shanwpf"},"content":"        Model expectedModel \u003d new ModelManager(new PartTimeManager(), new UserPrefs(), new OutletInformation());"},{"lineNumber":105,"author":{"gitID":"shanwpf"},"content":"        model.setFalseAdminMode();"},{"lineNumber":106,"author":{"gitID":"shanwpf"},"content":"        model.updateFilteredShiftList(Model.PREDICATE_SHOW_ALL_SHIFTS);"},{"lineNumber":107,"author":{"gitID":"shanwpf"},"content":"        expectedModel.setFalseAdminMode();"},{"lineNumber":108,"author":{"gitID":"shanwpf"},"content":"        expectedModel.updateFilteredShiftList(Model.PREDICATE_SHOW_ALL_SHIFTS);"},{"lineNumber":109,"author":{"gitID":"shanwpf"},"content":"        Employee employee \u003d new EmployeeBuilder().withName(\"Present\").build();"},{"lineNumber":110,"author":{"gitID":"shanwpf"},"content":"        Employee expectedEmployee \u003d new EmployeeBuilder().withName(\"Present\").build();"},{"lineNumber":111,"author":{"gitID":"shanwpf"},"content":"        Shift shift \u003d new ShiftBuilder().build();"},{"lineNumber":112,"author":{"gitID":"shanwpf"},"content":"        Shift expectedShift \u003d new ShiftBuilder().build();"},{"lineNumber":113,"author":{"gitID":"shanwpf"},"content":"        shift.addEmployee(employee);"},{"lineNumber":114,"author":{"gitID":"shanwpf"},"content":"        model.addEmployee(employee);"},{"lineNumber":115,"author":{"gitID":"shanwpf"},"content":"        model.addShift(shift);"},{"lineNumber":116,"author":{"gitID":"shanwpf"},"content":"        expectedModel.addShift(expectedShift);"},{"lineNumber":117,"author":{"gitID":"shanwpf"},"content":"        expectedModel.addEmployee(expectedEmployee);"},{"lineNumber":118,"author":{"gitID":"shanwpf"},"content":"        UnapplyCommand unapplyCommand \u003d prepareCommandWithPassword(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, model);"},{"lineNumber":119,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":120,"author":{"gitID":"shanwpf"},"content":"        String expectedMessage \u003d"},{"lineNumber":121,"author":{"gitID":"shanwpf"},"content":"                String.format(UnapplyCommand.MESSAGE_UNAPPLY_SHIFT_SUCCESS, expectedEmployee.getName(), 1);"},{"lineNumber":122,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":123,"author":{"gitID":"shanwpf"},"content":"        assertCommandSuccess(unapplyCommand, model, expectedMessage, expectedModel);"},{"lineNumber":124,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":125,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":126,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":127,"author":{"gitID":"shanwpf"},"content":"    public void execute_userModeNoPassword_throwsMissingPasswordException() throws Exception {"},{"lineNumber":128,"author":{"gitID":"shanwpf"},"content":"        Model model \u003d new ModelManager(new PartTimeManager(), new UserPrefs(), new OutletInformation());"},{"lineNumber":129,"author":{"gitID":"shanwpf"},"content":"        model.setFalseAdminMode();"},{"lineNumber":130,"author":{"gitID":"shanwpf"},"content":"        model.updateFilteredShiftList(Model.PREDICATE_SHOW_ALL_SHIFTS);"},{"lineNumber":131,"author":{"gitID":"shanwpf"},"content":"        Employee employee \u003d new EmployeeBuilder().withName(\"Present\").build();"},{"lineNumber":132,"author":{"gitID":"shanwpf"},"content":"        Shift shift \u003d new ShiftBuilder().build();"},{"lineNumber":133,"author":{"gitID":"shanwpf"},"content":"        shift.addEmployee(employee);"},{"lineNumber":134,"author":{"gitID":"shanwpf"},"content":"        model.addEmployee(employee);"},{"lineNumber":135,"author":{"gitID":"shanwpf"},"content":"        model.addShift(shift);"},{"lineNumber":136,"author":{"gitID":"shanwpf"},"content":"        UnapplyCommand unapplyCommand \u003d prepareCommandWithoutPassword(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, model);"},{"lineNumber":137,"author":{"gitID":"shanwpf"},"content":"        thrown.expect(MissingPasswordException.class);"},{"lineNumber":138,"author":{"gitID":"shanwpf"},"content":"        unapplyCommand.execute();"},{"lineNumber":139,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":140,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":141,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":142,"author":{"gitID":"shanwpf"},"content":"    public void execute_userModeIncorrectPassword_throwsInvalidPasswordException() throws Exception {"},{"lineNumber":143,"author":{"gitID":"shanwpf"},"content":"        Model model \u003d new ModelManager(new PartTimeManager(), new UserPrefs(), new OutletInformation());"},{"lineNumber":144,"author":{"gitID":"shanwpf"},"content":"        model.setFalseAdminMode();"},{"lineNumber":145,"author":{"gitID":"shanwpf"},"content":"        model.updateFilteredShiftList(Model.PREDICATE_SHOW_ALL_SHIFTS);"},{"lineNumber":146,"author":{"gitID":"shanwpf"},"content":"        Employee employee \u003d new EmployeeBuilder().withName(\"Present\").withPassword(\"incorrect\").build();"},{"lineNumber":147,"author":{"gitID":"shanwpf"},"content":"        Shift shift \u003d new ShiftBuilder().build();"},{"lineNumber":148,"author":{"gitID":"shanwpf"},"content":"        shift.addEmployee(employee);"},{"lineNumber":149,"author":{"gitID":"shanwpf"},"content":"        model.addEmployee(employee);"},{"lineNumber":150,"author":{"gitID":"shanwpf"},"content":"        model.addShift(shift);"},{"lineNumber":151,"author":{"gitID":"shanwpf"},"content":"        UnapplyCommand unapplyCommand \u003d prepareCommandWithPassword(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, model);"},{"lineNumber":152,"author":{"gitID":"shanwpf"},"content":"        thrown.expect(InvalidPasswordException.class);"},{"lineNumber":153,"author":{"gitID":"shanwpf"},"content":"        unapplyCommand.execute();"},{"lineNumber":154,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":155,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":156,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":157,"author":{"gitID":"shanwpf"},"content":"    public void equals_sameObject_returnsTrue() {"},{"lineNumber":158,"author":{"gitID":"shanwpf"},"content":"        UnapplyCommand unapplyCommand \u003d prepareCommandWithoutPassword(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, model);"},{"lineNumber":159,"author":{"gitID":"shanwpf"},"content":"        UnapplyCommand unapplyCommandPw \u003d prepareCommandWithPassword(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, model);"},{"lineNumber":160,"author":{"gitID":"shanwpf"},"content":"        assertTrue(unapplyCommand.equals(unapplyCommand));"},{"lineNumber":161,"author":{"gitID":"shanwpf"},"content":"        assertTrue(unapplyCommandPw.equals(unapplyCommandPw));"},{"lineNumber":162,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":163,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":164,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":165,"author":{"gitID":"shanwpf"},"content":"    public void equals_sameValues_returnsTrue() {"},{"lineNumber":166,"author":{"gitID":"shanwpf"},"content":"        UnapplyCommand unapplyCommand1 \u003d prepareCommandWithoutPassword(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, model);"},{"lineNumber":167,"author":{"gitID":"shanwpf"},"content":"        UnapplyCommand unapplyCommand2 \u003d prepareCommandWithoutPassword(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, model);"},{"lineNumber":168,"author":{"gitID":"shanwpf"},"content":"        UnapplyCommand unapplyCommandPw1 \u003d prepareCommandWithPassword(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, model);"},{"lineNumber":169,"author":{"gitID":"shanwpf"},"content":"        UnapplyCommand unapplyCommandPw2 \u003d prepareCommandWithPassword(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, model);"},{"lineNumber":170,"author":{"gitID":"shanwpf"},"content":"        assertTrue(unapplyCommand1.equals(unapplyCommand2));"},{"lineNumber":171,"author":{"gitID":"shanwpf"},"content":"        assertTrue(unapplyCommandPw1.equals(unapplyCommandPw2));"},{"lineNumber":172,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":173,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":174,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":175,"author":{"gitID":"shanwpf"},"content":"    public void equals_differentTypes_returnsFalse() {"},{"lineNumber":176,"author":{"gitID":"shanwpf"},"content":"        UnapplyCommand unapplyCommand \u003d prepareCommandWithoutPassword(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, model);"},{"lineNumber":177,"author":{"gitID":"shanwpf"},"content":"        UnapplyCommand unapplyCommandPw \u003d prepareCommandWithPassword(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, model);"},{"lineNumber":178,"author":{"gitID":"shanwpf"},"content":"        assertFalse(unapplyCommand.equals(1));"},{"lineNumber":179,"author":{"gitID":"shanwpf"},"content":"        assertFalse(unapplyCommandPw.equals(1));"},{"lineNumber":180,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":181,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":182,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":183,"author":{"gitID":"shanwpf"},"content":"    public void equals_null_returnsFalse() {"},{"lineNumber":184,"author":{"gitID":"shanwpf"},"content":"        UnapplyCommand unapplyCommand \u003d prepareCommandWithoutPassword(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, model);"},{"lineNumber":185,"author":{"gitID":"shanwpf"},"content":"        UnapplyCommand unapplyCommandPw \u003d prepareCommandWithPassword(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, model);"},{"lineNumber":186,"author":{"gitID":"shanwpf"},"content":"        assertFalse(unapplyCommand.equals(null));"},{"lineNumber":187,"author":{"gitID":"shanwpf"},"content":"        assertFalse(unapplyCommandPw.equals(null));"},{"lineNumber":188,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":189,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":190,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":191,"author":{"gitID":"shanwpf"},"content":"    public void equals_differentShifts_returnsFalse() {"},{"lineNumber":192,"author":{"gitID":"shanwpf"},"content":"        UnapplyCommand unapplyCommandFirst \u003d"},{"lineNumber":193,"author":{"gitID":"shanwpf"},"content":"                prepareCommandWithoutPassword(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, model);"},{"lineNumber":194,"author":{"gitID":"shanwpf"},"content":"        UnapplyCommand unapplyCommandSecond \u003d"},{"lineNumber":195,"author":{"gitID":"shanwpf"},"content":"                prepareCommandWithoutPassword(INDEX_FIRST_EMPLOYEE, INDEX_SECOND_SHIFT, model);"},{"lineNumber":196,"author":{"gitID":"shanwpf"},"content":"        UnapplyCommand unapplyCommandPwFirst \u003d"},{"lineNumber":197,"author":{"gitID":"shanwpf"},"content":"                prepareCommandWithPassword(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, model);"},{"lineNumber":198,"author":{"gitID":"shanwpf"},"content":"        UnapplyCommand unapplyCommandPwSecond \u003d"},{"lineNumber":199,"author":{"gitID":"shanwpf"},"content":"                prepareCommandWithPassword(INDEX_FIRST_EMPLOYEE, INDEX_SECOND_SHIFT, model);"},{"lineNumber":200,"author":{"gitID":"shanwpf"},"content":"        assertFalse(unapplyCommandFirst.equals(unapplyCommandSecond));"},{"lineNumber":201,"author":{"gitID":"shanwpf"},"content":"        assertFalse(unapplyCommandPwFirst.equals(unapplyCommandPwSecond));"},{"lineNumber":202,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":203,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":204,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":205,"author":{"gitID":"shanwpf"},"content":"    public void equals_differentEmployees_returnsFalse() {"},{"lineNumber":206,"author":{"gitID":"shanwpf"},"content":"        UnapplyCommand unapplyCommandFirst \u003d"},{"lineNumber":207,"author":{"gitID":"shanwpf"},"content":"                prepareCommandWithoutPassword(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, model);"},{"lineNumber":208,"author":{"gitID":"shanwpf"},"content":"        UnapplyCommand unapplyCommandSecond \u003d"},{"lineNumber":209,"author":{"gitID":"shanwpf"},"content":"                prepareCommandWithoutPassword(INDEX_SECOND_EMPLOYEE, INDEX_FIRST_SHIFT, model);"},{"lineNumber":210,"author":{"gitID":"shanwpf"},"content":"        UnapplyCommand unapplyCommandPwFirst \u003d"},{"lineNumber":211,"author":{"gitID":"shanwpf"},"content":"                prepareCommandWithPassword(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, model);"},{"lineNumber":212,"author":{"gitID":"shanwpf"},"content":"        UnapplyCommand unapplyCommandPwSecond \u003d"},{"lineNumber":213,"author":{"gitID":"shanwpf"},"content":"                prepareCommandWithPassword(INDEX_SECOND_EMPLOYEE, INDEX_FIRST_SHIFT, model);"},{"lineNumber":214,"author":{"gitID":"shanwpf"},"content":"        assertFalse(unapplyCommandFirst.equals(unapplyCommandSecond));"},{"lineNumber":215,"author":{"gitID":"shanwpf"},"content":"        assertFalse(unapplyCommandPwFirst.equals(unapplyCommandPwSecond));"},{"lineNumber":216,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":217,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":218,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":219,"author":{"gitID":"shanwpf"},"content":"    public void execute_shiftIndexOutOfRange_throwsCommandException() {"},{"lineNumber":220,"author":{"gitID":"shanwpf"},"content":"        UnapplyCommand unapplyCommand \u003d"},{"lineNumber":221,"author":{"gitID":"shanwpf"},"content":"                prepareCommandWithoutPassword(INDEX_FIRST_EMPLOYEE, Index.fromOneBased(99), model);"},{"lineNumber":222,"author":{"gitID":"shanwpf"},"content":"        UnapplyCommand unapplyCommandPw \u003d"},{"lineNumber":223,"author":{"gitID":"shanwpf"},"content":"                prepareCommandWithPassword(INDEX_FIRST_EMPLOYEE, Index.fromOneBased(99), model);"},{"lineNumber":224,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(CommandException.class, unapplyCommand::execute);"},{"lineNumber":225,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(CommandException.class, unapplyCommandPw::execute);"},{"lineNumber":226,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":227,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":228,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":229,"author":{"gitID":"shanwpf"},"content":"    public void execute_employeeIndexOutOfRange_throwsCommandException() {"},{"lineNumber":230,"author":{"gitID":"shanwpf"},"content":"        UnapplyCommand unapplyCommand \u003d prepareCommandWithoutPassword(Index.fromOneBased(99), INDEX_FIRST_SHIFT, model);"},{"lineNumber":231,"author":{"gitID":"shanwpf"},"content":"        UnapplyCommand unapplyCommandPw \u003d prepareCommandWithPassword(Index.fromOneBased(99), INDEX_FIRST_SHIFT, model);"},{"lineNumber":232,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(CommandException.class, unapplyCommand::execute);"},{"lineNumber":233,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(CommandException.class, unapplyCommandPw::execute);"},{"lineNumber":234,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":235,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":236,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":237,"author":{"gitID":"shanwpf"},"content":"    public void execute_incorrectPassword_throwsInvalidPasswordException() {"},{"lineNumber":238,"author":{"gitID":"shanwpf"},"content":"        model.setFalseAdminMode();"},{"lineNumber":239,"author":{"gitID":"shanwpf"},"content":"        UnapplyCommand unapplyCommand \u003d new UnapplyCommand(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT,"},{"lineNumber":240,"author":{"gitID":"shanwpf"},"content":"                Optional.of(new Password(\"wrongPassword\")));"},{"lineNumber":241,"author":{"gitID":"shanwpf"},"content":"        unapplyCommand.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":242,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(InvalidPasswordException.class, unapplyCommand::execute);"},{"lineNumber":243,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":244,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":245,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":246,"author":{"gitID":"shanwpf"},"content":"    public void hashCode_sameValues_returnsSameHashCode() {"},{"lineNumber":247,"author":{"gitID":"shanwpf"},"content":"        UnapplyCommand unapplyCommand1 \u003d"},{"lineNumber":248,"author":{"gitID":"shanwpf"},"content":"                prepareCommandWithPassword(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, model);"},{"lineNumber":249,"author":{"gitID":"shanwpf"},"content":"        UnapplyCommand unapplyCommand2 \u003d"},{"lineNumber":250,"author":{"gitID":"shanwpf"},"content":"                prepareCommandWithPassword(INDEX_FIRST_EMPLOYEE, INDEX_FIRST_SHIFT, model);"},{"lineNumber":251,"author":{"gitID":"shanwpf"},"content":"        assertEquals(unapplyCommand1.hashCode(), unapplyCommand2.hashCode());"},{"lineNumber":252,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":253,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":254,"author":{"gitID":"shanwpf"},"content":"    @After"},{"lineNumber":255,"author":{"gitID":"shanwpf"},"content":"    public void reset() {"},{"lineNumber":256,"author":{"gitID":"shanwpf"},"content":"        model.updateFilteredShiftList(Model.PREDICATE_SHOW_ALL_SHIFTS);"},{"lineNumber":257,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":258,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":259,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":260,"author":{"gitID":"shanwpf"},"content":"     * Returns an {@code UnapplyCommand} with parameters {@code employeeIndex} and {@code shiftIndex}"},{"lineNumber":261,"author":{"gitID":"shanwpf"},"content":"     * and a valid employee password"},{"lineNumber":262,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":263,"author":{"gitID":"shanwpf"},"content":"    private UnapplyCommand prepareCommandWithPassword(Index employeeIndex, Index shiftIndex, Model model) {"},{"lineNumber":264,"author":{"gitID":"shanwpf"},"content":"        UnapplyCommand unapplyCommand \u003d new UnapplyCommand(employeeIndex, shiftIndex, Optional.of(new Password()));"},{"lineNumber":265,"author":{"gitID":"shanwpf"},"content":"        unapplyCommand.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":266,"author":{"gitID":"shanwpf"},"content":"        return unapplyCommand;"},{"lineNumber":267,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":268,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":269,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":270,"author":{"gitID":"shanwpf"},"content":"     * Returns an {@code UnapplyCommand} with parameters {@code employeeIndex} and {@code shiftIndex}"},{"lineNumber":271,"author":{"gitID":"shanwpf"},"content":"     * without a password"},{"lineNumber":272,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":273,"author":{"gitID":"shanwpf"},"content":"    private UnapplyCommand prepareCommandWithoutPassword(Index employeeIndex, Index shiftIndex, Model model) {"},{"lineNumber":274,"author":{"gitID":"shanwpf"},"content":"        UnapplyCommand unapplyCommand \u003d new UnapplyCommand(employeeIndex, shiftIndex, Optional.empty());"},{"lineNumber":275,"author":{"gitID":"shanwpf"},"content":"        unapplyCommand.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":276,"author":{"gitID":"shanwpf"},"content":"        return unapplyCommand;"},{"lineNumber":277,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":278,"author":{"gitID":"shanwpf"},"content":"}"}],"authorContributionMap":{"shanwpf":239,"-":39}},{"path":"src/test/java/seedu/ptman/logic/commands/EncryptDataCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_ACCESS_DENIED;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.assertCommandFailure;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.assertCommandSuccess;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.getTypicalPartTimeManager;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.CommandHistory;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.UndoRedoStack;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Model;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.model.ModelManager;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.model.UserPrefs;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":19,"author":{"gitID":"SunBangjie"},"content":"/**"},{"lineNumber":20,"author":{"gitID":"SunBangjie"},"content":" * Contains integration tests (interaction with the Model) for {@code EncryptDataCommand}."},{"lineNumber":21,"author":{"gitID":"SunBangjie"},"content":" */"},{"lineNumber":22,"author":{"gitID":"SunBangjie"},"content":"public class EncryptDataCommandTest {"},{"lineNumber":23,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":24,"author":{"gitID":"SunBangjie"},"content":"    private Model model \u003d new ModelManager(getTypicalPartTimeManager(), new UserPrefs(), new OutletInformation());"},{"lineNumber":25,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":26,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":27,"author":{"gitID":"SunBangjie"},"content":"    public void execute_nonAdminMode_failure() {"},{"lineNumber":28,"author":{"gitID":"SunBangjie"},"content":"        EncryptDataCommand command \u003d prepareCommand();"},{"lineNumber":29,"author":{"gitID":"SunBangjie"},"content":"        assertCommandFailure(command, model, MESSAGE_ACCESS_DENIED);"},{"lineNumber":30,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":32,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":33,"author":{"gitID":"SunBangjie"},"content":"    public void execute_adminModeDataNotEncrypted_success() {"},{"lineNumber":34,"author":{"gitID":"SunBangjie"},"content":"        model.setTrueAdminMode(new Password());"},{"lineNumber":35,"author":{"gitID":"SunBangjie"},"content":"        EncryptDataCommand command \u003d prepareCommand();"},{"lineNumber":36,"author":{"gitID":"SunBangjie"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalPartTimeManager(), new UserPrefs(), new OutletInformation());"},{"lineNumber":37,"author":{"gitID":"SunBangjie"},"content":"        expectedModel.encryptLocalStorage();"},{"lineNumber":38,"author":{"gitID":"SunBangjie"},"content":"        String expectedMessage \u003d EncryptDataCommand.MESSAGE_ENCRYPT_SUCCESS;"},{"lineNumber":39,"author":{"gitID":"SunBangjie"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);"},{"lineNumber":40,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":41,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":42,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":43,"author":{"gitID":"SunBangjie"},"content":"    public void execute_adminModeDataAlreadyEncrypted_failure() {"},{"lineNumber":44,"author":{"gitID":"SunBangjie"},"content":"        model.setTrueAdminMode(new Password());"},{"lineNumber":45,"author":{"gitID":"SunBangjie"},"content":"        model.encryptLocalStorage();"},{"lineNumber":46,"author":{"gitID":"SunBangjie"},"content":"        EncryptDataCommand command \u003d prepareCommand();"},{"lineNumber":47,"author":{"gitID":"SunBangjie"},"content":"        String expectedMessage \u003d EncryptDataCommand.MESSAGE_ENCRYPT_FAILURE;"},{"lineNumber":48,"author":{"gitID":"SunBangjie"},"content":"        assertCommandFailure(command, model, expectedMessage);"},{"lineNumber":49,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":51,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":52,"author":{"gitID":"SunBangjie"},"content":"     * Returns an {@code EncryptDataCommand}"},{"lineNumber":53,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":54,"author":{"gitID":"SunBangjie"},"content":"    private EncryptDataCommand prepareCommand() {"},{"lineNumber":55,"author":{"gitID":"SunBangjie"},"content":"        EncryptDataCommand command \u003d new EncryptDataCommand();"},{"lineNumber":56,"author":{"gitID":"SunBangjie"},"content":"        command.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":57,"author":{"gitID":"SunBangjie"},"content":"        return command;"},{"lineNumber":58,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":59,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":17,"SunBangjie":42}},{"path":"src/test/java/seedu/ptman/logic/commands/EditOutletCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.fail;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_ACCESS_DENIED;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.assertCommandFailure;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.assertCommandSuccess;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.prepareRedoCommand;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.prepareUndoCommand;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.getTypicalPartTimeManager;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.CommandHistory;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.UndoRedoStack;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Model;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.ptman.model.ModelManager;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.ptman.model.PartTimeManager;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.ptman.model.UserPrefs;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OperatingHours;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletContact;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletEmail;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletName;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.exceptions.NoOutletInformationFieldChangeException;"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":30,"author":{"gitID":"SunBangjie"},"content":"/**"},{"lineNumber":31,"author":{"gitID":"SunBangjie"},"content":" * Contains integration tests (interaction with the Model) for {@code EditOutletCommand}."},{"lineNumber":32,"author":{"gitID":"SunBangjie"},"content":" */"},{"lineNumber":33,"author":{"gitID":"SunBangjie"},"content":"public class EditOutletCommandTest {"},{"lineNumber":34,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":35,"author":{"gitID":"SunBangjie"},"content":"    private Model model \u003d new ModelManager(getTypicalPartTimeManager(), new UserPrefs(), new OutletInformation());"},{"lineNumber":36,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":37,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":38,"author":{"gitID":"SunBangjie"},"content":"    public void execute_nonAdminMode_failure() {"},{"lineNumber":39,"author":{"gitID":"SunBangjie"},"content":"        OutletName outletName \u003d new OutletName(\"EditedOutlet\");"},{"lineNumber":40,"author":{"gitID":"SunBangjie"},"content":"        OperatingHours operatingHours \u003d new OperatingHours(\"1000-1800\");"},{"lineNumber":41,"author":{"gitID":"SunBangjie"},"content":"        OutletContact outletContact \u003d new OutletContact(\"912345678\");"},{"lineNumber":42,"author":{"gitID":"SunBangjie"},"content":"        OutletEmail outletEmail \u003d new OutletEmail(\"EditedOutlet@gmail.com\");"},{"lineNumber":43,"author":{"gitID":"SunBangjie"},"content":"        EditOutletCommand command \u003d prepareCommand(outletName, operatingHours, outletContact, outletEmail);"},{"lineNumber":44,"author":{"gitID":"SunBangjie"},"content":"        assertCommandFailure(command, model, MESSAGE_ACCESS_DENIED);"},{"lineNumber":45,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":47,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":48,"author":{"gitID":"SunBangjie"},"content":"    public void execute_adminModeAllFieldsValid_success() {"},{"lineNumber":49,"author":{"gitID":"SunBangjie"},"content":"        model.setTrueAdminMode(new Password());"},{"lineNumber":50,"author":{"gitID":"SunBangjie"},"content":"        OutletName outletName \u003d new OutletName(\"EditedOutlet\");"},{"lineNumber":51,"author":{"gitID":"SunBangjie"},"content":"        OperatingHours operatingHours \u003d new OperatingHours(\"1000-1800\");"},{"lineNumber":52,"author":{"gitID":"SunBangjie"},"content":"        OutletContact outletContact \u003d new OutletContact(\"912345678\");"},{"lineNumber":53,"author":{"gitID":"SunBangjie"},"content":"        OutletEmail outletEmail \u003d new OutletEmail(\"EditedOutlet@gmail.com\");"},{"lineNumber":54,"author":{"gitID":"SunBangjie"},"content":"        EditOutletCommand command \u003d prepareCommand(outletName, operatingHours, outletContact, outletEmail);"},{"lineNumber":55,"author":{"gitID":"SunBangjie"},"content":"        String expectedMessage \u003d EditOutletCommand.MESSAGE_EDIT_OUTLET_SUCCESS;"},{"lineNumber":56,"author":{"gitID":"SunBangjie"},"content":"        OutletInformation expectedOutlet \u003d new OutletInformation();"},{"lineNumber":57,"author":{"gitID":"SunBangjie"},"content":"        try {"},{"lineNumber":58,"author":{"gitID":"SunBangjie"},"content":"            expectedOutlet.setOutletInformation(outletName, operatingHours, outletContact, outletEmail);"},{"lineNumber":59,"author":{"gitID":"SunBangjie"},"content":"        } catch (NoOutletInformationFieldChangeException e) {"},{"lineNumber":60,"author":{"gitID":"SunBangjie"},"content":"            fail(\"This should not fail because all outlet information fields are specified.\");"},{"lineNumber":61,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":62,"author":{"gitID":"SunBangjie"},"content":"        Model expectedModel \u003d new ModelManager(new PartTimeManager(model.getPartTimeManager()), new UserPrefs(),"},{"lineNumber":63,"author":{"gitID":"SunBangjie"},"content":"                expectedOutlet);"},{"lineNumber":64,"author":{"gitID":"SunBangjie"},"content":"        try {"},{"lineNumber":65,"author":{"gitID":"SunBangjie"},"content":"            expectedModel.updateOutlet(expectedOutlet);"},{"lineNumber":66,"author":{"gitID":"SunBangjie"},"content":"        } catch (NoOutletInformationFieldChangeException e) {"},{"lineNumber":67,"author":{"gitID":"SunBangjie"},"content":"            fail(\"This should not fail because all outlet information fields are specified.\");"},{"lineNumber":68,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":69,"author":{"gitID":"SunBangjie"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);"},{"lineNumber":70,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":71,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":72,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":73,"author":{"gitID":"SunBangjie"},"content":"    public void execute_adminModeNonFieldsSpecified_failure() {"},{"lineNumber":74,"author":{"gitID":"SunBangjie"},"content":"        model.setTrueAdminMode(new Password());"},{"lineNumber":75,"author":{"gitID":"SunBangjie"},"content":"        EditOutletCommand command \u003d prepareCommand(null, null, null, null);"},{"lineNumber":76,"author":{"gitID":"SunBangjie"},"content":"        String expectedMessage \u003d EditOutletCommand.MESSAGE_EDIT_OUTLET_FAILURE;"},{"lineNumber":77,"author":{"gitID":"SunBangjie"},"content":"        assertCommandFailure(command, model, expectedMessage);"},{"lineNumber":78,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":79,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":80,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":81,"author":{"gitID":"SunBangjie"},"content":"    public void execute_nonAdminModeNonFieldSpecified_failure() {"},{"lineNumber":82,"author":{"gitID":"SunBangjie"},"content":"        EditOutletCommand command \u003d prepareCommand(null, null, null, null);"},{"lineNumber":83,"author":{"gitID":"SunBangjie"},"content":"        assertCommandFailure(command, model, MESSAGE_ACCESS_DENIED);"},{"lineNumber":84,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":85,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":86,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":87,"author":{"gitID":"SunBangjie"},"content":"    public void executeUndoRedo_adminModeAllFieldsValid_success() throws Exception {"},{"lineNumber":88,"author":{"gitID":"SunBangjie"},"content":"        model.setTrueAdminMode(new Password());"},{"lineNumber":89,"author":{"gitID":"SunBangjie"},"content":"        UndoRedoStack undoRedoStack \u003d new UndoRedoStack();"},{"lineNumber":90,"author":{"gitID":"SunBangjie"},"content":"        UndoCommand undoCommand \u003d prepareUndoCommand(model, undoRedoStack);"},{"lineNumber":91,"author":{"gitID":"SunBangjie"},"content":"        RedoCommand redoCommand \u003d prepareRedoCommand(model, undoRedoStack);"},{"lineNumber":92,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":93,"author":{"gitID":"SunBangjie"},"content":"        OutletName outletName \u003d new OutletName(\"EditedOutlet\");"},{"lineNumber":94,"author":{"gitID":"SunBangjie"},"content":"        OperatingHours operatingHours \u003d new OperatingHours(\"1000-1800\");"},{"lineNumber":95,"author":{"gitID":"SunBangjie"},"content":"        OutletContact outletContact \u003d new OutletContact(\"912345678\");"},{"lineNumber":96,"author":{"gitID":"SunBangjie"},"content":"        OutletEmail outletEmail \u003d new OutletEmail(\"EditedOutlet@gmail.com\");"},{"lineNumber":97,"author":{"gitID":"SunBangjie"},"content":"        EditOutletCommand command \u003d prepareCommand(outletName, operatingHours, outletContact, outletEmail);"},{"lineNumber":98,"author":{"gitID":"SunBangjie"},"content":"        OutletInformation expectedOutlet \u003d new OutletInformation();"},{"lineNumber":99,"author":{"gitID":"SunBangjie"},"content":"        try {"},{"lineNumber":100,"author":{"gitID":"SunBangjie"},"content":"            expectedOutlet.setOutletInformation(outletName, operatingHours, outletContact, outletEmail);"},{"lineNumber":101,"author":{"gitID":"SunBangjie"},"content":"        } catch (NoOutletInformationFieldChangeException e) {"},{"lineNumber":102,"author":{"gitID":"SunBangjie"},"content":"            fail(\"This should not fail because all outlet information fields are specified.\");"},{"lineNumber":103,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":104,"author":{"gitID":"SunBangjie"},"content":"        Model expectedModel \u003d new ModelManager(new PartTimeManager(model.getPartTimeManager()), new UserPrefs(),"},{"lineNumber":105,"author":{"gitID":"SunBangjie"},"content":"                new OutletInformation());"},{"lineNumber":106,"author":{"gitID":"SunBangjie"},"content":"        // edit -\u003e outlet edited"},{"lineNumber":107,"author":{"gitID":"SunBangjie"},"content":"        command.execute();"},{"lineNumber":108,"author":{"gitID":"SunBangjie"},"content":"        undoRedoStack.push(command);"},{"lineNumber":109,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":110,"author":{"gitID":"SunBangjie"},"content":"        // undo -\u003e reverts parttimemanager back to previous state"},{"lineNumber":111,"author":{"gitID":"SunBangjie"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":112,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":113,"author":{"gitID":"SunBangjie"},"content":"        // redo -\u003e same first employee edited again"},{"lineNumber":114,"author":{"gitID":"SunBangjie"},"content":"        try {"},{"lineNumber":115,"author":{"gitID":"SunBangjie"},"content":"            expectedModel.updateOutlet(expectedOutlet);"},{"lineNumber":116,"author":{"gitID":"SunBangjie"},"content":"        } catch (NoOutletInformationFieldChangeException e) {"},{"lineNumber":117,"author":{"gitID":"SunBangjie"},"content":"            fail(\"This should not fail because all outlet information fields are specified.\");"},{"lineNumber":118,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":119,"author":{"gitID":"SunBangjie"},"content":"        assertCommandSuccess(redoCommand, model, RedoCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":120,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":121,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":122,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":123,"author":{"gitID":"SunBangjie"},"content":"    public void equals() throws Exception {"},{"lineNumber":124,"author":{"gitID":"SunBangjie"},"content":"        OutletName outletName \u003d new OutletName(\"EditedOutlet\");"},{"lineNumber":125,"author":{"gitID":"SunBangjie"},"content":"        OperatingHours operatingHours \u003d new OperatingHours(\"1000-1800\");"},{"lineNumber":126,"author":{"gitID":"SunBangjie"},"content":"        OutletContact outletContact \u003d new OutletContact(\"912345678\");"},{"lineNumber":127,"author":{"gitID":"SunBangjie"},"content":"        OutletEmail outletEmail \u003d new OutletEmail(\"EditedOutlet@gmail.com\");"},{"lineNumber":128,"author":{"gitID":"SunBangjie"},"content":"        final EditOutletCommand standardCommand \u003d prepareCommand(outletName, operatingHours,"},{"lineNumber":129,"author":{"gitID":"SunBangjie"},"content":"                outletContact, outletEmail);"},{"lineNumber":130,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":131,"author":{"gitID":"SunBangjie"},"content":"        // same values -\u003e returns true"},{"lineNumber":132,"author":{"gitID":"SunBangjie"},"content":"        OutletName sameName \u003d new OutletName(\"EditedOutlet\");"},{"lineNumber":133,"author":{"gitID":"SunBangjie"},"content":"        OperatingHours sameOperatingHours \u003d new OperatingHours(\"1000-1800\");"},{"lineNumber":134,"author":{"gitID":"SunBangjie"},"content":"        OutletContact sameOutletContact \u003d new OutletContact(\"912345678\");"},{"lineNumber":135,"author":{"gitID":"SunBangjie"},"content":"        OutletEmail sameOutletEmail \u003d new OutletEmail(\"EditedOutlet@gmail.com\");"},{"lineNumber":136,"author":{"gitID":"SunBangjie"},"content":"        EditOutletCommand commandWithSameValues \u003d prepareCommand(sameName, sameOperatingHours,"},{"lineNumber":137,"author":{"gitID":"SunBangjie"},"content":"                sameOutletContact, sameOutletEmail);"},{"lineNumber":138,"author":{"gitID":"SunBangjie"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));"},{"lineNumber":139,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":140,"author":{"gitID":"SunBangjie"},"content":"        // same object -\u003e returns true"},{"lineNumber":141,"author":{"gitID":"SunBangjie"},"content":"        assertTrue(standardCommand.equals(standardCommand));"},{"lineNumber":142,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":143,"author":{"gitID":"SunBangjie"},"content":"        // null -\u003e returns false"},{"lineNumber":144,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(standardCommand.equals(null));"},{"lineNumber":145,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":146,"author":{"gitID":"SunBangjie"},"content":"        // different types -\u003e returns false"},{"lineNumber":147,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));"},{"lineNumber":148,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":149,"author":{"gitID":"SunBangjie"},"content":"        OutletName differentName \u003d new OutletName(\"different\");"},{"lineNumber":150,"author":{"gitID":"SunBangjie"},"content":"        OperatingHours differentOperatingHours \u003d new OperatingHours(\"0900-1000\");"},{"lineNumber":151,"author":{"gitID":"SunBangjie"},"content":"        OutletContact differentOutletContact \u003d new OutletContact(\"123456789\");"},{"lineNumber":152,"author":{"gitID":"SunBangjie"},"content":"        OutletEmail differentOutletEmail \u003d new OutletEmail(\"different@gmail.com\");"},{"lineNumber":153,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":154,"author":{"gitID":"SunBangjie"},"content":"        // different outlet name -\u003e returns false"},{"lineNumber":155,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(standardCommand.equals(new EditOutletCommand(differentName, operatingHours,"},{"lineNumber":156,"author":{"gitID":"SunBangjie"},"content":"                outletContact, outletEmail)));"},{"lineNumber":157,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":158,"author":{"gitID":"SunBangjie"},"content":"        // different operating hours -\u003e returns false"},{"lineNumber":159,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(standardCommand.equals(new EditOutletCommand(outletName, differentOperatingHours,"},{"lineNumber":160,"author":{"gitID":"SunBangjie"},"content":"                outletContact, outletEmail)));"},{"lineNumber":161,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":162,"author":{"gitID":"SunBangjie"},"content":"        // different outlet contact -\u003e returns false"},{"lineNumber":163,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(standardCommand.equals(new EditOutletCommand(outletName, operatingHours,"},{"lineNumber":164,"author":{"gitID":"SunBangjie"},"content":"                differentOutletContact, outletEmail)));"},{"lineNumber":165,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":166,"author":{"gitID":"SunBangjie"},"content":"        // different outlet contact -\u003e returns false"},{"lineNumber":167,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(standardCommand.equals(new EditOutletCommand(outletName, operatingHours,"},{"lineNumber":168,"author":{"gitID":"SunBangjie"},"content":"                outletContact, differentOutletEmail)));"},{"lineNumber":169,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":170,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":171,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":172,"author":{"gitID":"SunBangjie"},"content":"     * Returns an {@code EditOutletCommand}"},{"lineNumber":173,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":174,"author":{"gitID":"SunBangjie"},"content":"    private EditOutletCommand prepareCommand(OutletName outletName, OperatingHours operatingHours,"},{"lineNumber":175,"author":{"gitID":"SunBangjie"},"content":"                                             OutletContact outletContact, OutletEmail outletEmail) {"},{"lineNumber":176,"author":{"gitID":"SunBangjie"},"content":"        EditOutletCommand editOutletCommand \u003d new EditOutletCommand(outletName, operatingHours,"},{"lineNumber":177,"author":{"gitID":"SunBangjie"},"content":"                outletContact, outletEmail);"},{"lineNumber":178,"author":{"gitID":"SunBangjie"},"content":"        editOutletCommand.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":179,"author":{"gitID":"SunBangjie"},"content":"        return editOutletCommand;"},{"lineNumber":180,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":181,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":28,"SunBangjie":153}},{"path":"src/test/java/seedu/ptman/logic/commands/ChangePasswordCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.assertCommandFailure;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.assertCommandSuccess;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.getTypicalPartTimeManager;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_FIRST_EMPLOYEE;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_SECOND_EMPLOYEE;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import java.util.Set;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.index.Index;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.CommandHistory;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.UndoRedoStack;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.exceptions.InvalidPasswordException;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.parser.ParserUtil;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Model;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.ptman.model.ModelManager;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"import seedu.ptman.model.UserPrefs;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Address;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Email;"},{"lineNumber":30,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Employee;"},{"lineNumber":31,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Name;"},{"lineNumber":32,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Phone;"},{"lineNumber":33,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Salary;"},{"lineNumber":34,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":35,"author":{"gitID":"-"},"content":"import seedu.ptman.model.tag.Tag;"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"koo1993"},"content":"//@@author koo1993"},{"lineNumber":38,"author":{"gitID":"koo1993"},"content":"/**"},{"lineNumber":39,"author":{"gitID":"koo1993"},"content":" * Contains integration tests (interaction with the Model) and unit tests for"},{"lineNumber":40,"author":{"gitID":"koo1993"},"content":" * {@code ChangePasswordCommand}."},{"lineNumber":41,"author":{"gitID":"koo1993"},"content":" */"},{"lineNumber":42,"author":{"gitID":"koo1993"},"content":"public class ChangePasswordCommandTest {"},{"lineNumber":43,"author":{"gitID":"koo1993"},"content":"    @Rule"},{"lineNumber":44,"author":{"gitID":"koo1993"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":45,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":46,"author":{"gitID":"koo1993"},"content":"    private Model model \u003d new ModelManager(getTypicalPartTimeManager(), new UserPrefs(), new OutletInformation());"},{"lineNumber":47,"author":{"gitID":"koo1993"},"content":"    private ArrayList\u003cString\u003e default1PasswordsTodefault2 \u003d new ArrayList\u003c\u003e();"},{"lineNumber":48,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":49,"author":{"gitID":"koo1993"},"content":"    @Before"},{"lineNumber":50,"author":{"gitID":"koo1993"},"content":"    public void setUpPassword() {"},{"lineNumber":51,"author":{"gitID":"koo1993"},"content":"        default1PasswordsTodefault2.add(\"DEFAULT1\");"},{"lineNumber":52,"author":{"gitID":"koo1993"},"content":"        default1PasswordsTodefault2.add(\"DEFAULT2\");"},{"lineNumber":53,"author":{"gitID":"koo1993"},"content":"        default1PasswordsTodefault2.add(\"DEFAULT2\");"},{"lineNumber":54,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":55,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":56,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":57,"author":{"gitID":"koo1993"},"content":"    public void constructor_nullPassword_throwsNullPointerException() {"},{"lineNumber":58,"author":{"gitID":"koo1993"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":59,"author":{"gitID":"koo1993"},"content":"        new ChangePasswordCommand(INDEX_FIRST_EMPLOYEE, null);"},{"lineNumber":60,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":61,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":62,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":63,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":64,"author":{"gitID":"koo1993"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {"},{"lineNumber":65,"author":{"gitID":"koo1993"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":66,"author":{"gitID":"koo1993"},"content":"        new ChangePasswordCommand(null, default1PasswordsTodefault2);"},{"lineNumber":67,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":69,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":70,"author":{"gitID":"koo1993"},"content":"    public void constructor_passwordsNotFullyTabulated_throwsNullPointerException() {"},{"lineNumber":71,"author":{"gitID":"koo1993"},"content":"        ArrayList\u003cString\u003e incompletePasswords  \u003d new ArrayList\u003c\u003e();"},{"lineNumber":72,"author":{"gitID":"koo1993"},"content":"        incompletePasswords.add(\"DEFAULT1\");"},{"lineNumber":73,"author":{"gitID":"koo1993"},"content":"        incompletePasswords.add(\"DEFAULT2\");"},{"lineNumber":74,"author":{"gitID":"koo1993"},"content":"        thrown.expect(IndexOutOfBoundsException.class);"},{"lineNumber":75,"author":{"gitID":"koo1993"},"content":"        new ChangePasswordCommand(INDEX_FIRST_EMPLOYEE, incompletePasswords);"},{"lineNumber":76,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":77,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":78,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":79,"author":{"gitID":"koo1993"},"content":"    public void execute_validInputs_success() throws Exception {"},{"lineNumber":80,"author":{"gitID":"koo1993"},"content":"        Employee employeeToEdit \u003d model.getFilteredEmployeeList().get(INDEX_FIRST_EMPLOYEE.getZeroBased());"},{"lineNumber":81,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":82,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":83,"author":{"gitID":"koo1993"},"content":"        ChangePasswordCommand changePwCommand \u003d prepareCommand(INDEX_FIRST_EMPLOYEE, default1PasswordsTodefault2);"},{"lineNumber":84,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":85,"author":{"gitID":"koo1993"},"content":"        String expectedMessage \u003d String.format(ChangePasswordCommand.MESSAGE_SUCCESS, employeeToEdit.getName());"},{"lineNumber":86,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":87,"author":{"gitID":"koo1993"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getPartTimeManager(),"},{"lineNumber":88,"author":{"gitID":"koo1993"},"content":"                new UserPrefs(), new OutletInformation());"},{"lineNumber":89,"author":{"gitID":"koo1993"},"content":"        expectedModel.updateEmployee(employeeToEdit, createNewPasswordEmployee(employeeToEdit,"},{"lineNumber":90,"author":{"gitID":"koo1993"},"content":"                ParserUtil.parsePassword(default1PasswordsTodefault2.get(1))));"},{"lineNumber":91,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":92,"author":{"gitID":"koo1993"},"content":"        assertCommandSuccess(changePwCommand, model, expectedMessage, expectedModel);"},{"lineNumber":93,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":94,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":95,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":96,"author":{"gitID":"koo1993"},"content":"    public void execute_invalidPassword_throwsInvalidPasswordException() throws Exception {"},{"lineNumber":97,"author":{"gitID":"koo1993"},"content":"        ArrayList\u003cString\u003e wrongPasswords \u003d new ArrayList\u003c\u003e();"},{"lineNumber":98,"author":{"gitID":"koo1993"},"content":"        wrongPasswords.add(\"wrongpassword\");"},{"lineNumber":99,"author":{"gitID":"koo1993"},"content":"        wrongPasswords.add(\"DEFAULT2\");"},{"lineNumber":100,"author":{"gitID":"koo1993"},"content":"        wrongPasswords.add(\"DEFAULT2\");"},{"lineNumber":101,"author":{"gitID":"koo1993"},"content":"        thrown.expect(InvalidPasswordException.class);"},{"lineNumber":102,"author":{"gitID":"koo1993"},"content":"        prepareCommand(INDEX_FIRST_EMPLOYEE, wrongPasswords).execute();"},{"lineNumber":103,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":104,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":105,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":106,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":107,"author":{"gitID":"koo1993"},"content":"    public void execute_unmatchedNewPassword_throwsCommandException() throws Exception {"},{"lineNumber":108,"author":{"gitID":"koo1993"},"content":"        ArrayList\u003cString\u003e unmatchConfirmPasswords \u003d new ArrayList\u003c\u003e();"},{"lineNumber":109,"author":{"gitID":"koo1993"},"content":"        unmatchConfirmPasswords.add(\"DEFAULT1\");"},{"lineNumber":110,"author":{"gitID":"koo1993"},"content":"        unmatchConfirmPasswords.add(\"DEFAULT3\");"},{"lineNumber":111,"author":{"gitID":"koo1993"},"content":"        unmatchConfirmPasswords.add(\"DEFAULT4\");"},{"lineNumber":112,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":113,"author":{"gitID":"koo1993"},"content":"        ChangePasswordCommand changePwCommand \u003d prepareCommand(INDEX_FIRST_EMPLOYEE, unmatchConfirmPasswords);"},{"lineNumber":114,"author":{"gitID":"koo1993"},"content":"        assertCommandFailure(changePwCommand, model, ChangePasswordCommand.MESSAGE_INVALID_CONFIMREDPASSWORD);"},{"lineNumber":115,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":116,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":117,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":118,"author":{"gitID":"koo1993"},"content":"    public void equals() throws Exception {"},{"lineNumber":119,"author":{"gitID":"koo1993"},"content":"        ArrayList\u003cString\u003e default1PasswordsTodefault3 \u003d new ArrayList\u003c\u003e();"},{"lineNumber":120,"author":{"gitID":"koo1993"},"content":"        default1PasswordsTodefault3.add(\"DEFAULT1\");"},{"lineNumber":121,"author":{"gitID":"koo1993"},"content":"        default1PasswordsTodefault3.add(\"DEFAULT3\");"},{"lineNumber":122,"author":{"gitID":"koo1993"},"content":"        default1PasswordsTodefault3.add(\"DEFAULT3\");"},{"lineNumber":123,"author":{"gitID":"koo1993"},"content":"        ChangePasswordCommand changePwFirstCommand \u003d"},{"lineNumber":124,"author":{"gitID":"koo1993"},"content":"                prepareCommand(INDEX_FIRST_EMPLOYEE, default1PasswordsTodefault2);"},{"lineNumber":125,"author":{"gitID":"koo1993"},"content":"        ChangePasswordCommand changePwSecondCommand \u003d"},{"lineNumber":126,"author":{"gitID":"koo1993"},"content":"                prepareCommand(INDEX_SECOND_EMPLOYEE, default1PasswordsTodefault3);"},{"lineNumber":127,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":128,"author":{"gitID":"koo1993"},"content":"        // same object -\u003e returns true"},{"lineNumber":129,"author":{"gitID":"koo1993"},"content":"        assertTrue(changePwFirstCommand.equals(changePwFirstCommand));"},{"lineNumber":130,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":131,"author":{"gitID":"koo1993"},"content":"        // same values -\u003e returns true"},{"lineNumber":132,"author":{"gitID":"koo1993"},"content":"        ChangePasswordCommand changePwFirstCommandCopy \u003d"},{"lineNumber":133,"author":{"gitID":"koo1993"},"content":"                prepareCommand(INDEX_FIRST_EMPLOYEE, default1PasswordsTodefault2);"},{"lineNumber":134,"author":{"gitID":"koo1993"},"content":"        assertTrue(changePwFirstCommand.equals(changePwFirstCommandCopy));"},{"lineNumber":135,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":136,"author":{"gitID":"koo1993"},"content":"        // different types -\u003e returns false"},{"lineNumber":137,"author":{"gitID":"koo1993"},"content":"        assertFalse(changePwFirstCommandCopy.equals(1));"},{"lineNumber":138,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":139,"author":{"gitID":"koo1993"},"content":"        // null -\u003e returns false"},{"lineNumber":140,"author":{"gitID":"koo1993"},"content":"        assertFalse(changePwFirstCommandCopy.equals(null));"},{"lineNumber":141,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":142,"author":{"gitID":"koo1993"},"content":"        // different employee -\u003e returns false"},{"lineNumber":143,"author":{"gitID":"koo1993"},"content":"        assertFalse(changePwFirstCommand.equals(changePwSecondCommand));"},{"lineNumber":144,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":145,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":146,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":147,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":148,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":149,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":150,"author":{"gitID":"koo1993"},"content":"     * Returns a {@code ChangePasswordCommand} with the parameter {@code index} and {@code passwords}."},{"lineNumber":151,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":152,"author":{"gitID":"koo1993"},"content":"    private ChangePasswordCommand prepareCommand(Index index, ArrayList\u003cString\u003e passwords) {"},{"lineNumber":153,"author":{"gitID":"koo1993"},"content":"        ChangePasswordCommand changePwCommand \u003d new ChangePasswordCommand(index, passwords);"},{"lineNumber":154,"author":{"gitID":"koo1993"},"content":"        changePwCommand.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":155,"author":{"gitID":"koo1993"},"content":"        return changePwCommand;"},{"lineNumber":156,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":157,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":158,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":159,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":160,"author":{"gitID":"koo1993"},"content":"     * Create new employee with new password."},{"lineNumber":161,"author":{"gitID":"koo1993"},"content":"     * @param employeeToEdit"},{"lineNumber":162,"author":{"gitID":"koo1993"},"content":"     * @param password"},{"lineNumber":163,"author":{"gitID":"koo1993"},"content":"     * @return"},{"lineNumber":164,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":165,"author":{"gitID":"koo1993"},"content":"    public Employee createNewPasswordEmployee(Employee employeeToEdit,"},{"lineNumber":166,"author":{"gitID":"koo1993"},"content":"                                     Password password) {"},{"lineNumber":167,"author":{"gitID":"koo1993"},"content":"        assert employeeToEdit !\u003d null;"},{"lineNumber":168,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":169,"author":{"gitID":"koo1993"},"content":"        Name name \u003d employeeToEdit.getName();"},{"lineNumber":170,"author":{"gitID":"koo1993"},"content":"        Phone phone \u003d employeeToEdit.getPhone();"},{"lineNumber":171,"author":{"gitID":"koo1993"},"content":"        Email email \u003d employeeToEdit.getEmail();"},{"lineNumber":172,"author":{"gitID":"koo1993"},"content":"        Address address \u003d employeeToEdit.getAddress();"},{"lineNumber":173,"author":{"gitID":"koo1993"},"content":"        Salary salary \u003d employeeToEdit.getSalary();"},{"lineNumber":174,"author":{"gitID":"koo1993"},"content":"        Set\u003cTag\u003e tags \u003d employeeToEdit.getTags();"},{"lineNumber":175,"author":{"gitID":"koo1993"},"content":"        Password updatedPassword \u003d password;"},{"lineNumber":176,"author":{"gitID":"koo1993"},"content":"        return new Employee(name, phone, email, address, salary, updatedPassword, tags);"},{"lineNumber":177,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":178,"author":{"gitID":"koo1993"},"content":"}"}],"authorContributionMap":{"koo1993":142,"-":36}},{"path":"src/test/java/seedu/ptman/logic/commands/LogInAdminCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.fail;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.CommandHistory;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.UndoRedoStack;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.exceptions.InvalidPasswordException;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Model;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.ptman.model.PartTimeManager;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.ptman.model.ReadOnlyPartTimeManager;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Employee;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.exceptions.DuplicateEmployeeException;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.exceptions.EmployeeNotFoundException;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.exceptions.NoOutletInformationFieldChangeException;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Shift;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.exceptions.DuplicateShiftException;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.exceptions.ShiftNotFoundException;"},{"lineNumber":30,"author":{"gitID":"-"},"content":"import seedu.ptman.model.tag.Tag;"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"koo1993"},"content":"//@@author koo1993"},{"lineNumber":34,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":35,"author":{"gitID":"koo1993"},"content":"/**"},{"lineNumber":36,"author":{"gitID":"koo1993"},"content":" * Test behaviour of LogInAdminCommand with a studmodel."},{"lineNumber":37,"author":{"gitID":"koo1993"},"content":" */"},{"lineNumber":38,"author":{"gitID":"koo1993"},"content":"public class LogInAdminCommandTest {"},{"lineNumber":39,"author":{"gitID":"koo1993"},"content":"    @Rule"},{"lineNumber":40,"author":{"gitID":"koo1993"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":41,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":42,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":43,"author":{"gitID":"koo1993"},"content":"    public void constructor_nullPassword_throwsNullPointerException() {"},{"lineNumber":44,"author":{"gitID":"koo1993"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":45,"author":{"gitID":"koo1993"},"content":"        new LogInAdminCommand(null);"},{"lineNumber":46,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":47,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":48,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":49,"author":{"gitID":"koo1993"},"content":"    public void execute_passwordAcceptedByModel_logInSuccessful() throws Exception {"},{"lineNumber":50,"author":{"gitID":"koo1993"},"content":"        ModelStubAcceptingAllPassword modelStub \u003d new ModelStubAcceptingAllPassword();"},{"lineNumber":51,"author":{"gitID":"koo1993"},"content":"        modelStub.setIsAdminMode(false); // not already adminMode"},{"lineNumber":52,"author":{"gitID":"koo1993"},"content":"        modelStub.setIsSetTrueAdminMode(true); // password accepted."},{"lineNumber":53,"author":{"gitID":"koo1993"},"content":"        CommandResult commandResult \u003d getLogInAdminCommandTest(new Password(), modelStub).execute();"},{"lineNumber":54,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":55,"author":{"gitID":"koo1993"},"content":"        assertEquals(LogInAdminCommand.MESSAGE_SUCCESS, commandResult.feedbackToUser);"},{"lineNumber":56,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":58,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":59,"author":{"gitID":"koo1993"},"content":"    public void execute_correctPassword_alreadyLoggedIn() throws Exception {"},{"lineNumber":60,"author":{"gitID":"koo1993"},"content":"        ModelStubAcceptingAllPassword modelStub \u003d new ModelStubAcceptingAllPassword();"},{"lineNumber":61,"author":{"gitID":"koo1993"},"content":"        modelStub.setIsAdminMode(true); // already in adminMode"},{"lineNumber":62,"author":{"gitID":"koo1993"},"content":"        modelStub.setIsSetTrueAdminMode(true); // password accepted."},{"lineNumber":63,"author":{"gitID":"koo1993"},"content":"        CommandResult commandResult \u003d getLogInAdminCommandTest(new Password(), modelStub).execute();"},{"lineNumber":64,"author":{"gitID":"koo1993"},"content":"        assertEquals(LogInAdminCommand.MESSAGE_LOGGEDIN, commandResult.feedbackToUser);"},{"lineNumber":65,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":66,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":67,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":68,"author":{"gitID":"koo1993"},"content":"    public void execute_wrongPassword_invalidPasswordException() throws Exception {"},{"lineNumber":69,"author":{"gitID":"koo1993"},"content":"        ModelStubAcceptingAllPassword modelStub \u003d new ModelStubAcceptingAllPassword();"},{"lineNumber":70,"author":{"gitID":"koo1993"},"content":"        modelStub.setIsAdminMode(false); // not in adminMode"},{"lineNumber":71,"author":{"gitID":"koo1993"},"content":"        modelStub.setIsSetTrueAdminMode(false); // password rejected."},{"lineNumber":72,"author":{"gitID":"koo1993"},"content":"        thrown.expect(InvalidPasswordException.class);"},{"lineNumber":73,"author":{"gitID":"koo1993"},"content":"        getLogInAdminCommandTest(new Password(), modelStub).execute();"},{"lineNumber":74,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":75,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":76,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":77,"author":{"gitID":"koo1993"},"content":"     * Generates a new LogInAdminCommand with the details of the given employee."},{"lineNumber":78,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":79,"author":{"gitID":"koo1993"},"content":"    private LogInAdminCommand getLogInAdminCommandTest(Password password, Model model) {"},{"lineNumber":80,"author":{"gitID":"koo1993"},"content":"        LogInAdminCommand command \u003d new LogInAdminCommand(password);"},{"lineNumber":81,"author":{"gitID":"koo1993"},"content":"        command.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":82,"author":{"gitID":"koo1993"},"content":"        return command;"},{"lineNumber":83,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":84,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":85,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":86,"author":{"gitID":"koo1993"},"content":"     * A default model stub that have all of the methods failing."},{"lineNumber":87,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":88,"author":{"gitID":"koo1993"},"content":"    private class ModelStub implements Model {"},{"lineNumber":89,"author":{"gitID":"koo1993"},"content":"        @Override"},{"lineNumber":90,"author":{"gitID":"koo1993"},"content":"        public void addEmployee(Employee employee) throws DuplicateEmployeeException {"},{"lineNumber":91,"author":{"gitID":"koo1993"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":92,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":93,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":94,"author":{"gitID":"koo1993"},"content":"        @Override"},{"lineNumber":95,"author":{"gitID":"koo1993"},"content":"        public boolean isAdminPassword(Password password) {"},{"lineNumber":96,"author":{"gitID":"koo1993"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":97,"author":{"gitID":"koo1993"},"content":"            return false;"},{"lineNumber":98,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":99,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":100,"author":{"gitID":"koo1993"},"content":"        @Override"},{"lineNumber":101,"author":{"gitID":"koo1993"},"content":"        public void setAdminPassword(Password password) {"},{"lineNumber":102,"author":{"gitID":"koo1993"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":103,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":104,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":105,"author":{"gitID":"koo1993"},"content":"        @Override"},{"lineNumber":106,"author":{"gitID":"koo1993"},"content":"        public boolean isAdminMode() {"},{"lineNumber":107,"author":{"gitID":"koo1993"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":108,"author":{"gitID":"koo1993"},"content":"            return false;"},{"lineNumber":109,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":110,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":111,"author":{"gitID":"koo1993"},"content":"        @Override"},{"lineNumber":112,"author":{"gitID":"koo1993"},"content":"        public boolean setTrueAdminMode(Password password) {"},{"lineNumber":113,"author":{"gitID":"koo1993"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":114,"author":{"gitID":"koo1993"},"content":"            return false;"},{"lineNumber":115,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":116,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":117,"author":{"gitID":"koo1993"},"content":"        @Override"},{"lineNumber":118,"author":{"gitID":"koo1993"},"content":"        public void setFalseAdminMode() {"},{"lineNumber":119,"author":{"gitID":"koo1993"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":120,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":121,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":122,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":123,"author":{"gitID":"koo1993"},"content":"        @Override"},{"lineNumber":124,"author":{"gitID":"koo1993"},"content":"        public void storeResetPassword(OutletInformation outlet, Password tempPassword) {"},{"lineNumber":125,"author":{"gitID":"koo1993"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":126,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":127,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":128,"author":{"gitID":"koo1993"},"content":"        @Override"},{"lineNumber":129,"author":{"gitID":"koo1993"},"content":"        public void storeResetPassword(Employee employee, Password tempPassword) {"},{"lineNumber":130,"author":{"gitID":"koo1993"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":131,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":132,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":133,"author":{"gitID":"koo1993"},"content":"        @Override"},{"lineNumber":134,"author":{"gitID":"koo1993"},"content":"        public boolean isCorrectTempPwd(Employee employee, Password tempPassword) {"},{"lineNumber":135,"author":{"gitID":"koo1993"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":136,"author":{"gitID":"koo1993"},"content":"            return false;"},{"lineNumber":137,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":138,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":139,"author":{"gitID":"koo1993"},"content":"        @Override"},{"lineNumber":140,"author":{"gitID":"koo1993"},"content":"        public boolean isCorrectTempPwd(OutletInformation outlet, Password tempPassword) {"},{"lineNumber":141,"author":{"gitID":"koo1993"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":142,"author":{"gitID":"koo1993"},"content":"            return false;"},{"lineNumber":143,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":144,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":145,"author":{"gitID":"koo1993"},"content":"        @Override"},{"lineNumber":146,"author":{"gitID":"koo1993"},"content":"        public void addShift(Shift shift) throws DuplicateShiftException {"},{"lineNumber":147,"author":{"gitID":"koo1993"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":148,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":149,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":150,"author":{"gitID":"koo1993"},"content":"        @Override"},{"lineNumber":151,"author":{"gitID":"koo1993"},"content":"        public void setFilteredShiftListToWeek(LocalDate date) {"},{"lineNumber":152,"author":{"gitID":"koo1993"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":153,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":154,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":155,"author":{"gitID":"koo1993"},"content":"        @Override"},{"lineNumber":156,"author":{"gitID":"koo1993"},"content":"        public void deleteTagFromAllEmployee(Tag tag) {"},{"lineNumber":157,"author":{"gitID":"koo1993"},"content":"            fail(\"This method should not be called\");"},{"lineNumber":158,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":159,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":160,"author":{"gitID":"koo1993"},"content":"        @Override"},{"lineNumber":161,"author":{"gitID":"koo1993"},"content":"        public void resetData(ReadOnlyPartTimeManager newData) {"},{"lineNumber":162,"author":{"gitID":"koo1993"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":163,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":164,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":165,"author":{"gitID":"koo1993"},"content":"        @Override"},{"lineNumber":166,"author":{"gitID":"koo1993"},"content":"        public ReadOnlyPartTimeManager getPartTimeManager() {"},{"lineNumber":167,"author":{"gitID":"koo1993"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":168,"author":{"gitID":"koo1993"},"content":"            return null;"},{"lineNumber":169,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":170,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":171,"author":{"gitID":"koo1993"},"content":"        @Override"},{"lineNumber":172,"author":{"gitID":"koo1993"},"content":"        public void deleteEmployee(Employee target) throws EmployeeNotFoundException {"},{"lineNumber":173,"author":{"gitID":"koo1993"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":174,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":175,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":176,"author":{"gitID":"koo1993"},"content":"        @Override"},{"lineNumber":177,"author":{"gitID":"koo1993"},"content":"        public void updateEmployee(Employee target, Employee editedEmployee)"},{"lineNumber":178,"author":{"gitID":"koo1993"},"content":"                throws DuplicateEmployeeException {"},{"lineNumber":179,"author":{"gitID":"koo1993"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":180,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":181,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":182,"author":{"gitID":"koo1993"},"content":"        @Override"},{"lineNumber":183,"author":{"gitID":"koo1993"},"content":"        public void updateOutlet(OutletInformation outlet) throws NoOutletInformationFieldChangeException {"},{"lineNumber":184,"author":{"gitID":"koo1993"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":185,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":186,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":187,"author":{"gitID":"koo1993"},"content":"        @Override"},{"lineNumber":188,"author":{"gitID":"koo1993"},"content":"        public String getEncryptionModeMessage() {"},{"lineNumber":189,"author":{"gitID":"koo1993"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":190,"author":{"gitID":"koo1993"},"content":"            return null;"},{"lineNumber":191,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":192,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":193,"author":{"gitID":"koo1993"},"content":"        @Override"},{"lineNumber":194,"author":{"gitID":"koo1993"},"content":"        public boolean getEncryptionMode() {"},{"lineNumber":195,"author":{"gitID":"koo1993"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":196,"author":{"gitID":"koo1993"},"content":"            return false;"},{"lineNumber":197,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":198,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":199,"author":{"gitID":"koo1993"},"content":"        @Override"},{"lineNumber":200,"author":{"gitID":"koo1993"},"content":"        public ObservableList\u003cEmployee\u003e getFilteredEmployeeList() {"},{"lineNumber":201,"author":{"gitID":"koo1993"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":202,"author":{"gitID":"koo1993"},"content":"            return null;"},{"lineNumber":203,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":204,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":205,"author":{"gitID":"koo1993"},"content":"        @Override"},{"lineNumber":206,"author":{"gitID":"koo1993"},"content":"        public ObservableList\u003cShift\u003e getFilteredShiftList() {"},{"lineNumber":207,"author":{"gitID":"koo1993"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":208,"author":{"gitID":"koo1993"},"content":"            return null;"},{"lineNumber":209,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":210,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":211,"author":{"gitID":"koo1993"},"content":"        @Override"},{"lineNumber":212,"author":{"gitID":"koo1993"},"content":"        public OutletInformation getOutletInformation() {"},{"lineNumber":213,"author":{"gitID":"koo1993"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":214,"author":{"gitID":"koo1993"},"content":"            return null;"},{"lineNumber":215,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":216,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":217,"author":{"gitID":"koo1993"},"content":"        @Override"},{"lineNumber":218,"author":{"gitID":"koo1993"},"content":"        public void updateFilteredEmployeeList(Predicate\u003cEmployee\u003e predicate) {"},{"lineNumber":219,"author":{"gitID":"koo1993"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":220,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":221,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":222,"author":{"gitID":"koo1993"},"content":"        @Override"},{"lineNumber":223,"author":{"gitID":"koo1993"},"content":"        public void deleteShift(Shift shiftToDelete) throws ShiftNotFoundException {"},{"lineNumber":224,"author":{"gitID":"koo1993"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":225,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":226,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":227,"author":{"gitID":"koo1993"},"content":"        @Override"},{"lineNumber":228,"author":{"gitID":"koo1993"},"content":"        public void updateShift(Shift shiftToApply, Shift editedShift)"},{"lineNumber":229,"author":{"gitID":"koo1993"},"content":"                throws ShiftNotFoundException, DuplicateShiftException {"},{"lineNumber":230,"author":{"gitID":"koo1993"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":231,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":232,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":233,"author":{"gitID":"koo1993"},"content":"        @Override"},{"lineNumber":234,"author":{"gitID":"koo1993"},"content":"        public void updateFilteredShiftList(Predicate\u003cShift\u003e predicate) {"},{"lineNumber":235,"author":{"gitID":"koo1993"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":236,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":237,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":238,"author":{"gitID":"koo1993"},"content":"        @Override"},{"lineNumber":239,"author":{"gitID":"koo1993"},"content":"        public void encryptLocalStorage() {"},{"lineNumber":240,"author":{"gitID":"koo1993"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":241,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":242,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":243,"author":{"gitID":"koo1993"},"content":"        @Override"},{"lineNumber":244,"author":{"gitID":"koo1993"},"content":"        public void decryptLocalStorage() {"},{"lineNumber":245,"author":{"gitID":"koo1993"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":246,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":247,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":248,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":249,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":250,"author":{"gitID":"koo1993"},"content":"     * A Model stub that always accept the password being given."},{"lineNumber":251,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":252,"author":{"gitID":"koo1993"},"content":"    private class ModelStubAcceptingAllPassword extends ModelStub {"},{"lineNumber":253,"author":{"gitID":"koo1993"},"content":"        private boolean isSetTrueAdminMode \u003d false;"},{"lineNumber":254,"author":{"gitID":"koo1993"},"content":"        private boolean isAdminMode \u003d false;"},{"lineNumber":255,"author":{"gitID":"koo1993"},"content":"        @Override"},{"lineNumber":256,"author":{"gitID":"koo1993"},"content":"        public boolean setTrueAdminMode(Password password) {"},{"lineNumber":257,"author":{"gitID":"koo1993"},"content":"            requireNonNull(password);"},{"lineNumber":258,"author":{"gitID":"koo1993"},"content":"            return isSetTrueAdminMode;"},{"lineNumber":259,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":260,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":261,"author":{"gitID":"koo1993"},"content":"        @Override"},{"lineNumber":262,"author":{"gitID":"koo1993"},"content":"        public boolean isAdminMode()  {"},{"lineNumber":263,"author":{"gitID":"koo1993"},"content":"            return isAdminMode;"},{"lineNumber":264,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":265,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":266,"author":{"gitID":"koo1993"},"content":"        @Override"},{"lineNumber":267,"author":{"gitID":"koo1993"},"content":"        public ReadOnlyPartTimeManager getPartTimeManager() {"},{"lineNumber":268,"author":{"gitID":"koo1993"},"content":"            return new PartTimeManager();"},{"lineNumber":269,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":270,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":271,"author":{"gitID":"koo1993"},"content":"        /**"},{"lineNumber":272,"author":{"gitID":"koo1993"},"content":"         * set for test case purpose only."},{"lineNumber":273,"author":{"gitID":"koo1993"},"content":"         */"},{"lineNumber":274,"author":{"gitID":"koo1993"},"content":"        public void setIsAdminMode(boolean isAdminMode) {"},{"lineNumber":275,"author":{"gitID":"koo1993"},"content":"            this.isAdminMode \u003d isAdminMode;"},{"lineNumber":276,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":277,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":278,"author":{"gitID":"koo1993"},"content":"        /**"},{"lineNumber":279,"author":{"gitID":"koo1993"},"content":"         * set for test case purpose only."},{"lineNumber":280,"author":{"gitID":"koo1993"},"content":"         */"},{"lineNumber":281,"author":{"gitID":"koo1993"},"content":"        public void setIsSetTrueAdminMode(boolean isSetTrueAdminMode) {"},{"lineNumber":282,"author":{"gitID":"koo1993"},"content":"            this.isSetTrueAdminMode \u003d isSetTrueAdminMode;"},{"lineNumber":283,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":284,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":285,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":286,"author":{"gitID":"koo1993"},"content":"}"}],"authorContributionMap":{"koo1993":254,"-":32}},{"path":"src/test/java/seedu/ptman/logic/commands/AddSalaryCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.assertCommandFailure;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.commands.CommandTestUtil.assertCommandSuccess;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.getTypicalPartTimeManager;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_FIRST_EMPLOYEE;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalIndexes.INDEX_SECOND_EMPLOYEE;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import java.util.Set;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.Messages;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.index.Index;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.CommandHistory;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.UndoRedoStack;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Model;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.ptman.model.ModelManager;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.ptman.model.UserPrefs;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Address;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Email;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Employee;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Name;"},{"lineNumber":30,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Phone;"},{"lineNumber":31,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Salary;"},{"lineNumber":32,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":33,"author":{"gitID":"-"},"content":"import seedu.ptman.model.tag.Tag;"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"koo1993"},"content":"//@@author koo1993"},{"lineNumber":36,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":37,"author":{"gitID":"koo1993"},"content":"/**"},{"lineNumber":38,"author":{"gitID":"koo1993"},"content":" * Contains integration tests (interaction with the Model) and unit tests for"},{"lineNumber":39,"author":{"gitID":"koo1993"},"content":" * {@code AddSalaryCommand}."},{"lineNumber":40,"author":{"gitID":"koo1993"},"content":" */"},{"lineNumber":41,"author":{"gitID":"koo1993"},"content":"public class AddSalaryCommandTest {"},{"lineNumber":42,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":43,"author":{"gitID":"koo1993"},"content":"    @Rule"},{"lineNumber":44,"author":{"gitID":"koo1993"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":45,"author":{"gitID":"koo1993"},"content":"    private Model model \u003d new ModelManager(getTypicalPartTimeManager(), new UserPrefs(), new OutletInformation());"},{"lineNumber":46,"author":{"gitID":"koo1993"},"content":"    private Salary salaryToAdd \u003d new Salary(\"100\");"},{"lineNumber":47,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":48,"author":{"gitID":"koo1993"},"content":"    @Before"},{"lineNumber":49,"author":{"gitID":"koo1993"},"content":"    public void setup() {"},{"lineNumber":50,"author":{"gitID":"koo1993"},"content":"        model.setTrueAdminMode(new Password());"},{"lineNumber":51,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":53,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":54,"author":{"gitID":"koo1993"},"content":"    public void execute_validInputs_success() throws Exception {"},{"lineNumber":55,"author":{"gitID":"koo1993"},"content":"        Employee employeeToEdit \u003d model.getFilteredEmployeeList().get(INDEX_FIRST_EMPLOYEE.getZeroBased());"},{"lineNumber":56,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":57,"author":{"gitID":"koo1993"},"content":"        AddSalaryCommand addSalaryCommand \u003d prepareCommand(INDEX_FIRST_EMPLOYEE, salaryToAdd);"},{"lineNumber":58,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":59,"author":{"gitID":"koo1993"},"content":"        String expectedMessage \u003d String.format(AddSalaryCommand.MESSAGE_EDIT_EMPLOYEE_SUCCESS,"},{"lineNumber":60,"author":{"gitID":"koo1993"},"content":"                salaryToAdd.toString(), employeeToEdit.getName());"},{"lineNumber":61,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":62,"author":{"gitID":"koo1993"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getPartTimeManager(),"},{"lineNumber":63,"author":{"gitID":"koo1993"},"content":"                new UserPrefs(), new OutletInformation());"},{"lineNumber":64,"author":{"gitID":"koo1993"},"content":"        expectedModel.updateEmployee(employeeToEdit, createNewSalaryEmployee(employeeToEdit,"},{"lineNumber":65,"author":{"gitID":"koo1993"},"content":"                salaryToAdd));"},{"lineNumber":66,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":67,"author":{"gitID":"koo1993"},"content":"        assertCommandSuccess(addSalaryCommand, model, expectedMessage, expectedModel);"},{"lineNumber":68,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":69,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":70,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":71,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":72,"author":{"gitID":"koo1993"},"content":"    public void execute_invalidEmployeeIndexUnfilteredList_failure() {"},{"lineNumber":73,"author":{"gitID":"koo1993"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredEmployeeList().size() + 1);"},{"lineNumber":74,"author":{"gitID":"koo1993"},"content":"        AddSalaryCommand editCommand \u003d prepareCommand(outOfBoundIndex, salaryToAdd);"},{"lineNumber":75,"author":{"gitID":"koo1993"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX);"},{"lineNumber":76,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":77,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":78,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":79,"author":{"gitID":"koo1993"},"content":"    public void execute_notInAdminMode_accessDenied() throws Exception {"},{"lineNumber":80,"author":{"gitID":"koo1993"},"content":"        model.setFalseAdminMode();"},{"lineNumber":81,"author":{"gitID":"koo1993"},"content":"        AddSalaryCommand addSalaryCommand \u003d prepareCommand(INDEX_FIRST_EMPLOYEE, salaryToAdd);"},{"lineNumber":82,"author":{"gitID":"koo1993"},"content":"        assertCommandFailure(addSalaryCommand, model, Messages.MESSAGE_ACCESS_DENIED);"},{"lineNumber":83,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":84,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":85,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":86,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":87,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":88,"author":{"gitID":"koo1993"},"content":"    public void equals() throws Exception {"},{"lineNumber":89,"author":{"gitID":"koo1993"},"content":"        Salary salaryToAdd \u003d new Salary(\"100\");"},{"lineNumber":90,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":91,"author":{"gitID":"koo1993"},"content":"        AddSalaryCommand addSalaryFirstCommand \u003d prepareCommand(INDEX_FIRST_EMPLOYEE, salaryToAdd);"},{"lineNumber":92,"author":{"gitID":"koo1993"},"content":"        AddSalaryCommand addSalarySecondCommand \u003d prepareCommand(INDEX_SECOND_EMPLOYEE, salaryToAdd);"},{"lineNumber":93,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":94,"author":{"gitID":"koo1993"},"content":"        // same object -\u003e returns true"},{"lineNumber":95,"author":{"gitID":"koo1993"},"content":"        assertTrue(addSalaryFirstCommand.equals(addSalaryFirstCommand));"},{"lineNumber":96,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":97,"author":{"gitID":"koo1993"},"content":"        // same values -\u003e returns true"},{"lineNumber":98,"author":{"gitID":"koo1993"},"content":"        AddSalaryCommand changePwFirstCommandCopy \u003d prepareCommand(INDEX_FIRST_EMPLOYEE, salaryToAdd);"},{"lineNumber":99,"author":{"gitID":"koo1993"},"content":"        assertTrue(addSalaryFirstCommand.equals(changePwFirstCommandCopy));"},{"lineNumber":100,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":101,"author":{"gitID":"koo1993"},"content":"        // different types -\u003e returns false"},{"lineNumber":102,"author":{"gitID":"koo1993"},"content":"        assertFalse(changePwFirstCommandCopy.equals(1));"},{"lineNumber":103,"author":{"gitID":"koo1993"},"content":"        // null -\u003e returns false"},{"lineNumber":104,"author":{"gitID":"koo1993"},"content":"        assertFalse(changePwFirstCommandCopy.equals(null));"},{"lineNumber":105,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":106,"author":{"gitID":"koo1993"},"content":"        // different employee -\u003e returns false"},{"lineNumber":107,"author":{"gitID":"koo1993"},"content":"        assertFalse(addSalaryFirstCommand.equals(addSalarySecondCommand));"},{"lineNumber":108,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":109,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":110,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":111,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":112,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":113,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":114,"author":{"gitID":"koo1993"},"content":"     * Returns a {@code AddSalaryCommand} with the parameter {@code index} and {@code salaryToAdd}."},{"lineNumber":115,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":116,"author":{"gitID":"koo1993"},"content":"    private AddSalaryCommand prepareCommand(Index index, Salary salaryToAdd) {"},{"lineNumber":117,"author":{"gitID":"koo1993"},"content":"        AddSalaryCommand addSalaryCommand \u003d new AddSalaryCommand(index, salaryToAdd);"},{"lineNumber":118,"author":{"gitID":"koo1993"},"content":"        addSalaryCommand.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":119,"author":{"gitID":"koo1993"},"content":"        return addSalaryCommand;"},{"lineNumber":120,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":121,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":122,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":123,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":124,"author":{"gitID":"koo1993"},"content":"     * Create new employee with added Salary."},{"lineNumber":125,"author":{"gitID":"koo1993"},"content":"     * @param employeeToEdit"},{"lineNumber":126,"author":{"gitID":"koo1993"},"content":"     * @param salaryToAdd"},{"lineNumber":127,"author":{"gitID":"koo1993"},"content":"     * @return"},{"lineNumber":128,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":129,"author":{"gitID":"koo1993"},"content":"    public Employee createNewSalaryEmployee(Employee employeeToEdit,"},{"lineNumber":130,"author":{"gitID":"koo1993"},"content":"                                     Salary salaryToAdd) {"},{"lineNumber":131,"author":{"gitID":"koo1993"},"content":"        assert employeeToEdit !\u003d null;"},{"lineNumber":132,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":133,"author":{"gitID":"koo1993"},"content":"        Name name \u003d employeeToEdit.getName();"},{"lineNumber":134,"author":{"gitID":"koo1993"},"content":"        Phone phone \u003d employeeToEdit.getPhone();"},{"lineNumber":135,"author":{"gitID":"koo1993"},"content":"        Email email \u003d employeeToEdit.getEmail();"},{"lineNumber":136,"author":{"gitID":"koo1993"},"content":"        Address address \u003d employeeToEdit.getAddress();"},{"lineNumber":137,"author":{"gitID":"koo1993"},"content":"        Set\u003cTag\u003e tags \u003d employeeToEdit.getTags();"},{"lineNumber":138,"author":{"gitID":"koo1993"},"content":"        Password password \u003d employeeToEdit.getPassword();"},{"lineNumber":139,"author":{"gitID":"koo1993"},"content":"        Salary newSalary \u003d addSalary(employeeToEdit.getSalary(), salaryToAdd);"},{"lineNumber":140,"author":{"gitID":"koo1993"},"content":"        return new Employee(name, phone, email, address, newSalary, password, tags);"},{"lineNumber":141,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":142,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":143,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":144,"author":{"gitID":"koo1993"},"content":"     * Adds up two salary."},{"lineNumber":145,"author":{"gitID":"koo1993"},"content":"     * @param salary"},{"lineNumber":146,"author":{"gitID":"koo1993"},"content":"     * @param salaryToadd"},{"lineNumber":147,"author":{"gitID":"koo1993"},"content":"     * @return"},{"lineNumber":148,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":149,"author":{"gitID":"koo1993"},"content":"    private static Salary addSalary(Salary salary, Salary salaryToadd) {"},{"lineNumber":150,"author":{"gitID":"koo1993"},"content":"        int salaryAmount \u003d Integer.parseInt(salary.value);"},{"lineNumber":151,"author":{"gitID":"koo1993"},"content":"        salaryAmount +\u003d Integer.parseInt(salaryToadd.value);"},{"lineNumber":152,"author":{"gitID":"koo1993"},"content":"        return new Salary(Integer.toString(salaryAmount));"},{"lineNumber":153,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":154,"author":{"gitID":"koo1993"},"content":"}"}],"authorContributionMap":{"koo1993":120,"-":34}},{"path":"src/test/java/seedu/ptman/storage/StorageManagerTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static junit.framework.TestCase.assertNotNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.getTypicalPartTimeManager;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import org.junit.rules.TemporaryFolder;"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.model.OutletDataChangedEvent;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.model.PartTimeManagerChangedEvent;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.storage.DataSavingExceptionEvent;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.ptman.model.PartTimeManager;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.ptman.model.ReadOnlyPartTimeManager;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.ptman.model.UserPrefs;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.ptman.ui.testutil.EventsCollectorRule;"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"public class StorageManagerTest {"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":28,"author":{"gitID":"-"},"content":"    public TemporaryFolder testFolder \u003d new TemporaryFolder();"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":31,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":34,"author":{"gitID":"-"},"content":"    public final EventsCollectorRule eventsCollectorRule \u003d new EventsCollectorRule();"},{"lineNumber":35,"author":{"gitID":"-"},"content":""},{"lineNumber":36,"author":{"gitID":"-"},"content":"    private StorageManager storageManager;"},{"lineNumber":37,"author":{"gitID":"-"},"content":""},{"lineNumber":38,"author":{"gitID":"-"},"content":"    @Before"},{"lineNumber":39,"author":{"gitID":"-"},"content":"    public void setUp() {"},{"lineNumber":40,"author":{"gitID":"-"},"content":"        XmlPartTimeManagerStorage partTimeManagerStorage \u003d new XmlPartTimeManagerStorage(getTempFilePath(\"ab\"));"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        XmlOutletInformationStorage outletInformationStorage \u003d"},{"lineNumber":43,"author":{"gitID":"-"},"content":"                new XmlOutletInformationStorage(getTempFilePath(\"outlet\"));"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        storageManager \u003d new StorageManager(partTimeManagerStorage, userPrefsStorage, outletInformationStorage);"},{"lineNumber":45,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"-"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":"    private String getTempFilePath(String fileName) {"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        return testFolder.getRoot().getPath() + fileName;"},{"lineNumber":49,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    public void prefsReadSave() throws Exception {"},{"lineNumber":53,"author":{"gitID":"-"},"content":"        /*"},{"lineNumber":54,"author":{"gitID":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the"},{"lineNumber":55,"author":{"gitID":"-"},"content":"         * {@link JsonUserPrefsStorage} class."},{"lineNumber":56,"author":{"gitID":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class."},{"lineNumber":57,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":58,"author":{"gitID":"-"},"content":"        UserPrefs original \u003d new UserPrefs();"},{"lineNumber":59,"author":{"gitID":"-"},"content":"        original.setGuiSettings(300, 600, 4, 6);"},{"lineNumber":60,"author":{"gitID":"-"},"content":"        storageManager.saveUserPrefs(original);"},{"lineNumber":61,"author":{"gitID":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();"},{"lineNumber":62,"author":{"gitID":"-"},"content":"        assertEquals(original, retrieved);"},{"lineNumber":63,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"-"},"content":""},{"lineNumber":65,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":66,"author":{"gitID":"-"},"content":"    public void partTimeManagerReadSave() throws Exception {"},{"lineNumber":67,"author":{"gitID":"-"},"content":"        /*"},{"lineNumber":68,"author":{"gitID":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the"},{"lineNumber":69,"author":{"gitID":"-"},"content":"         * {@link XmlPartTimeManagerStorage} class."},{"lineNumber":70,"author":{"gitID":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link XmlPartTimeManagerStorageTest} class."},{"lineNumber":71,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":72,"author":{"gitID":"-"},"content":"        PartTimeManager original \u003d getTypicalPartTimeManager();"},{"lineNumber":73,"author":{"gitID":"-"},"content":"        storageManager.savePartTimeManager(original);"},{"lineNumber":74,"author":{"gitID":"-"},"content":"        ReadOnlyPartTimeManager retrieved \u003d storageManager.readPartTimeManager(false).get();"},{"lineNumber":75,"author":{"gitID":"-"},"content":"        assertEquals(original, new PartTimeManager(retrieved));"},{"lineNumber":76,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":77,"author":{"gitID":"-"},"content":""},{"lineNumber":78,"author":{"gitID":"-"},"content":""},{"lineNumber":79,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":80,"author":{"gitID":"-"},"content":"    public void getPartTimeManagerFilePath() {"},{"lineNumber":81,"author":{"gitID":"-"},"content":"        assertNotNull(storageManager.getPartTimeManagerFilePath());"},{"lineNumber":82,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":83,"author":{"gitID":"-"},"content":""},{"lineNumber":84,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":85,"author":{"gitID":"-"},"content":"    public void getUserOrefsFilePath() {"},{"lineNumber":86,"author":{"gitID":"-"},"content":"        assertNotNull(storageManager.getUserPrefsFilePath());"},{"lineNumber":87,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":88,"author":{"gitID":"-"},"content":""},{"lineNumber":89,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":90,"author":{"gitID":"-"},"content":"    public void handlePartTimeManagerChangedEvent_exceptionThrown_eventRaised() {"},{"lineNumber":91,"author":{"gitID":"-"},"content":"        // Create a StorageManager while injecting a stub that  throws an exception when the save method is called"},{"lineNumber":92,"author":{"gitID":"-"},"content":"        Storage storage \u003d new StorageManager(new XmlPartTimeManagerStorageExceptionThrowingStub(\"dummy\"),"},{"lineNumber":93,"author":{"gitID":"-"},"content":"                                             new JsonUserPrefsStorage(\"dummy\"),"},{"lineNumber":94,"author":{"gitID":"-"},"content":"                new XmlOutletInformationStorage(\"dummy\"));"},{"lineNumber":95,"author":{"gitID":"-"},"content":"        storage.handlePartTimeManagerChangedEvent(new PartTimeManagerChangedEvent(new PartTimeManager()));"},{"lineNumber":96,"author":{"gitID":"-"},"content":"        assertTrue(eventsCollectorRule.eventsCollector.getMostRecent() instanceof DataSavingExceptionEvent);"},{"lineNumber":97,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":98,"author":{"gitID":"-"},"content":""},{"lineNumber":99,"author":{"gitID":"SunBangjie"},"content":"    //@@author SunBangjie"},{"lineNumber":100,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":101,"author":{"gitID":"SunBangjie"},"content":"    public void outletInformationReadSave() throws Exception {"},{"lineNumber":102,"author":{"gitID":"SunBangjie"},"content":"        /*"},{"lineNumber":103,"author":{"gitID":"SunBangjie"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the"},{"lineNumber":104,"author":{"gitID":"SunBangjie"},"content":"         * {@link XmlOutletInformationStorage} class."},{"lineNumber":105,"author":{"gitID":"SunBangjie"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link XmlOutletInformationStorageTest} class."},{"lineNumber":106,"author":{"gitID":"SunBangjie"},"content":"         */"},{"lineNumber":107,"author":{"gitID":"SunBangjie"},"content":"        OutletInformation original \u003d new OutletInformation();"},{"lineNumber":108,"author":{"gitID":"SunBangjie"},"content":"        storageManager.saveOutletInformation(original);"},{"lineNumber":109,"author":{"gitID":"SunBangjie"},"content":"        OutletInformation retrieved \u003d storageManager.readOutletInformation().get();"},{"lineNumber":110,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(original, retrieved);"},{"lineNumber":111,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":112,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":113,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":114,"author":{"gitID":"SunBangjie"},"content":"    public void getOutletInformationFilePath() {"},{"lineNumber":115,"author":{"gitID":"SunBangjie"},"content":"        assertNotNull(storageManager.getOutletInformationFilePath());"},{"lineNumber":116,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":117,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":118,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":119,"author":{"gitID":"SunBangjie"},"content":"    public void handleOutletDataChangedEvent_exceptionThrown_eventRaised() {"},{"lineNumber":120,"author":{"gitID":"SunBangjie"},"content":"        // Create a StorageManager while injecting a stub that throws an exception when the save method is called"},{"lineNumber":121,"author":{"gitID":"SunBangjie"},"content":"        Storage storage \u003d new StorageManager(new XmlPartTimeManagerStorage(\"dummy\"),"},{"lineNumber":122,"author":{"gitID":"SunBangjie"},"content":"                new JsonUserPrefsStorage(\"dummy\"),"},{"lineNumber":123,"author":{"gitID":"SunBangjie"},"content":"                new XmlOutletInformationStorageExceptionThrowingStub(\"dummy\"));"},{"lineNumber":124,"author":{"gitID":"SunBangjie"},"content":"        storage.handleOutletDataChangedEvent(new OutletDataChangedEvent(new OutletInformation()));"},{"lineNumber":125,"author":{"gitID":"SunBangjie"},"content":"        assertTrue(eventsCollectorRule.eventsCollector.getMostRecent() instanceof DataSavingExceptionEvent);"},{"lineNumber":126,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":127,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":128,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":129,"author":{"gitID":"SunBangjie"},"content":"    public void handleOutletDataChangedEvent_validInput_eventRaised() throws Exception {"},{"lineNumber":130,"author":{"gitID":"SunBangjie"},"content":"        OutletInformation original \u003d new OutletInformation();"},{"lineNumber":131,"author":{"gitID":"SunBangjie"},"content":"        XmlOutletInformationStorage outletInformationStorage \u003d new XmlOutletInformationStorage(\"dummy\");"},{"lineNumber":132,"author":{"gitID":"SunBangjie"},"content":"        Storage storage \u003d new StorageManager(new XmlPartTimeManagerStorage(\"dummy\"),"},{"lineNumber":133,"author":{"gitID":"SunBangjie"},"content":"                new JsonUserPrefsStorage(\"dummy\"),"},{"lineNumber":134,"author":{"gitID":"SunBangjie"},"content":"                outletInformationStorage);"},{"lineNumber":135,"author":{"gitID":"SunBangjie"},"content":"        storage.handleOutletDataChangedEvent(new OutletDataChangedEvent(original));"},{"lineNumber":136,"author":{"gitID":"SunBangjie"},"content":"        OutletInformation readBack \u003d outletInformationStorage"},{"lineNumber":137,"author":{"gitID":"SunBangjie"},"content":"                .readOutletInformation(\"dummy\").get();"},{"lineNumber":138,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(original, readBack);"},{"lineNumber":139,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":140,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":141,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":142,"author":{"gitID":"SunBangjie"},"content":"    public void backupPartTimeManager_nullValue_exceptionThrown() throws Exception {"},{"lineNumber":143,"author":{"gitID":"SunBangjie"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":144,"author":{"gitID":"SunBangjie"},"content":"        storageManager.backupPartTimeManager(null);"},{"lineNumber":145,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":146,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":147,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":148,"author":{"gitID":"SunBangjie"},"content":"    public void backupPartTimeManager_validValue_success() throws Exception {"},{"lineNumber":149,"author":{"gitID":"SunBangjie"},"content":"        PartTimeManager original \u003d getTypicalPartTimeManager();"},{"lineNumber":150,"author":{"gitID":"SunBangjie"},"content":"        storageManager.backupPartTimeManager(original);"},{"lineNumber":151,"author":{"gitID":"SunBangjie"},"content":"        XmlPartTimeManagerStorage partTimeManagerStorage \u003d new XmlPartTimeManagerStorage(getTempFilePath(\"ab\"));"},{"lineNumber":152,"author":{"gitID":"SunBangjie"},"content":"        ReadOnlyPartTimeManager readBack \u003d"},{"lineNumber":153,"author":{"gitID":"SunBangjie"},"content":"                partTimeManagerStorage.readPartTimeManager(false, getTempFilePath(\"ab.backup\")).get();"},{"lineNumber":154,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(original, new PartTimeManager(readBack));"},{"lineNumber":155,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":156,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":157,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":158,"author":{"gitID":"SunBangjie"},"content":"    public void backupOutletInformation_nullValue_exceptionThrown() throws Exception {"},{"lineNumber":159,"author":{"gitID":"SunBangjie"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":160,"author":{"gitID":"SunBangjie"},"content":"        storageManager.backupOutletInformation(null);"},{"lineNumber":161,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":162,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":163,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":164,"author":{"gitID":"SunBangjie"},"content":"    public void backupOutletInformation_validValue_success() throws Exception {"},{"lineNumber":165,"author":{"gitID":"SunBangjie"},"content":"        OutletInformation original \u003d new OutletInformation();"},{"lineNumber":166,"author":{"gitID":"SunBangjie"},"content":"        storageManager.backupOutletInformation(original);"},{"lineNumber":167,"author":{"gitID":"SunBangjie"},"content":"        XmlOutletInformationStorage outletInformationStorage \u003d"},{"lineNumber":168,"author":{"gitID":"SunBangjie"},"content":"                new XmlOutletInformationStorage(getTempFilePath(\"outlet\"));"},{"lineNumber":169,"author":{"gitID":"SunBangjie"},"content":"        OutletInformation readBack \u003d outletInformationStorage"},{"lineNumber":170,"author":{"gitID":"SunBangjie"},"content":"                .readOutletInformation(getTempFilePath(\"outlet.backup\")).get();"},{"lineNumber":171,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(original, readBack);"},{"lineNumber":172,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":173,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":174,"author":{"gitID":"SunBangjie"},"content":"    //@@author"},{"lineNumber":175,"author":{"gitID":"-"},"content":""},{"lineNumber":176,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":177,"author":{"gitID":"-"},"content":"     * A Stub class to throw an exception when the save method is called"},{"lineNumber":178,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":179,"author":{"gitID":"-"},"content":"    class XmlPartTimeManagerStorageExceptionThrowingStub extends XmlPartTimeManagerStorage {"},{"lineNumber":180,"author":{"gitID":"-"},"content":""},{"lineNumber":181,"author":{"gitID":"-"},"content":"        public XmlPartTimeManagerStorageExceptionThrowingStub(String filePath) {"},{"lineNumber":182,"author":{"gitID":"-"},"content":"            super(filePath);"},{"lineNumber":183,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":184,"author":{"gitID":"-"},"content":""},{"lineNumber":185,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":186,"author":{"gitID":"-"},"content":"        public void savePartTimeManager(ReadOnlyPartTimeManager partTimeManager, String filePath) throws IOException {"},{"lineNumber":187,"author":{"gitID":"-"},"content":"            throw new IOException(\"dummy exception\");"},{"lineNumber":188,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":189,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":190,"author":{"gitID":"-"},"content":""},{"lineNumber":191,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":192,"author":{"gitID":"-"},"content":"     * A Stub class to throw an exception when the save method is called"},{"lineNumber":193,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":194,"author":{"gitID":"-"},"content":"    class XmlOutletInformationStorageExceptionThrowingStub extends XmlOutletInformationStorage {"},{"lineNumber":195,"author":{"gitID":"-"},"content":""},{"lineNumber":196,"author":{"gitID":"-"},"content":"        public XmlOutletInformationStorageExceptionThrowingStub(String filePath) {"},{"lineNumber":197,"author":{"gitID":"-"},"content":"            super(filePath);"},{"lineNumber":198,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":199,"author":{"gitID":"-"},"content":""},{"lineNumber":200,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":201,"author":{"gitID":"-"},"content":"        public void saveOutletInformation(OutletInformation outletInformation, String filePath) throws IOException {"},{"lineNumber":202,"author":{"gitID":"-"},"content":"            throw new IOException(\"dummy exception\");"},{"lineNumber":203,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":204,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":205,"author":{"gitID":"-"},"content":""},{"lineNumber":206,"author":{"gitID":"-"},"content":""},{"lineNumber":207,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"-":131,"SunBangjie":76}},{"path":"src/test/java/seedu/ptman/storage/XmlAdaptedShiftTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.storage.XmlAdaptedShift.MISSING_FIELD_MESSAGE_FORMAT_SHIFT;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalShifts.SHIFT_THURSDAY_AM;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.exceptions.IllegalValueException;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Capacity;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Date;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Time;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.Assert;"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"shanwpf"},"content":"//@@author shanwpf"},{"lineNumber":22,"author":{"gitID":"shanwpf"},"content":"public class XmlAdaptedShiftTest {"},{"lineNumber":23,"author":{"gitID":"shanwpf"},"content":"    private static final String INVALID_DATE \u003d \"1-1-18\";"},{"lineNumber":24,"author":{"gitID":"shanwpf"},"content":"    private static final String INVALID_START_TIME \u003d \"asd\";"},{"lineNumber":25,"author":{"gitID":"shanwpf"},"content":"    private static final String INVALID_END_TIME \u003d \"2500\";"},{"lineNumber":26,"author":{"gitID":"shanwpf"},"content":"    private static final String INVALID_CAPACITY \u003d \"two\";"},{"lineNumber":27,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":28,"author":{"gitID":"shanwpf"},"content":"    private static final String VALID_DATE \u003d \"01-01-18\";"},{"lineNumber":29,"author":{"gitID":"shanwpf"},"content":"    private static final String VALID_CAPACITY \u003d SHIFT_THURSDAY_AM.getCapacity().toString();"},{"lineNumber":30,"author":{"gitID":"shanwpf"},"content":"    private static final String VALID_START_TIME \u003d SHIFT_THURSDAY_AM.getStartTime().toString();"},{"lineNumber":31,"author":{"gitID":"shanwpf"},"content":"    private static final String VALID_END_TIME \u003d SHIFT_THURSDAY_AM.getEndTime().toString();"},{"lineNumber":32,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":33,"author":{"gitID":"shanwpf"},"content":"    private static final List\u003cXmlAdaptedEmployee\u003e VALID_EMPLOYEES \u003d"},{"lineNumber":34,"author":{"gitID":"shanwpf"},"content":"            SHIFT_THURSDAY_AM.getEmployeeList().stream()"},{"lineNumber":35,"author":{"gitID":"shanwpf"},"content":"            .map(XmlAdaptedEmployee::new)"},{"lineNumber":36,"author":{"gitID":"shanwpf"},"content":"            .collect(Collectors.toList());"},{"lineNumber":37,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":38,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":39,"author":{"gitID":"shanwpf"},"content":"    public void toModelType_validShiftDetails_returnsShift() throws Exception {"},{"lineNumber":40,"author":{"gitID":"shanwpf"},"content":"        XmlAdaptedShift shift \u003d new XmlAdaptedShift(SHIFT_THURSDAY_AM);"},{"lineNumber":41,"author":{"gitID":"shanwpf"},"content":"        assertEquals(SHIFT_THURSDAY_AM, shift.toModelType());"},{"lineNumber":42,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":43,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":44,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":45,"author":{"gitID":"shanwpf"},"content":"    public void toModelType_invalidDate_throwsIllegalValueException() {"},{"lineNumber":46,"author":{"gitID":"shanwpf"},"content":"        XmlAdaptedShift shift \u003d"},{"lineNumber":47,"author":{"gitID":"shanwpf"},"content":"                new XmlAdaptedShift(INVALID_DATE, VALID_START_TIME, VALID_END_TIME, VALID_CAPACITY,"},{"lineNumber":48,"author":{"gitID":"shanwpf"},"content":"                        VALID_EMPLOYEES);"},{"lineNumber":49,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":50,"author":{"gitID":"shanwpf"},"content":"        String expectedMessage \u003d Date.MESSAGE_DATE_CONSTRAINTS;"},{"lineNumber":51,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, shift::toModelType);"},{"lineNumber":52,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":53,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":54,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":55,"author":{"gitID":"shanwpf"},"content":"    public void toModelType_nullDate_throwsIllegalValueException() {"},{"lineNumber":56,"author":{"gitID":"shanwpf"},"content":"        XmlAdaptedShift shift \u003d"},{"lineNumber":57,"author":{"gitID":"shanwpf"},"content":"                new XmlAdaptedShift(null, VALID_START_TIME, VALID_END_TIME, VALID_CAPACITY,"},{"lineNumber":58,"author":{"gitID":"shanwpf"},"content":"                        VALID_EMPLOYEES);"},{"lineNumber":59,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":60,"author":{"gitID":"shanwpf"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT_SHIFT, Date.class.getSimpleName());"},{"lineNumber":61,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, shift::toModelType);"},{"lineNumber":62,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":64,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":65,"author":{"gitID":"shanwpf"},"content":"    public void toModelType_invalidStartTime_throwsIllegalValueException() {"},{"lineNumber":66,"author":{"gitID":"shanwpf"},"content":"        XmlAdaptedShift shift \u003d"},{"lineNumber":67,"author":{"gitID":"shanwpf"},"content":"                new XmlAdaptedShift(VALID_DATE, INVALID_START_TIME, VALID_END_TIME, VALID_CAPACITY,"},{"lineNumber":68,"author":{"gitID":"shanwpf"},"content":"                        VALID_EMPLOYEES);"},{"lineNumber":69,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":70,"author":{"gitID":"shanwpf"},"content":"        String expectedMessage \u003d Time.MESSAGE_TIME_CONSTRAINTS;"},{"lineNumber":71,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, shift::toModelType);"},{"lineNumber":72,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":74,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":75,"author":{"gitID":"shanwpf"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {"},{"lineNumber":76,"author":{"gitID":"shanwpf"},"content":"        XmlAdaptedShift shift \u003d"},{"lineNumber":77,"author":{"gitID":"shanwpf"},"content":"                new XmlAdaptedShift(VALID_DATE, null, VALID_END_TIME, VALID_CAPACITY,"},{"lineNumber":78,"author":{"gitID":"shanwpf"},"content":"                        VALID_EMPLOYEES);"},{"lineNumber":79,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":80,"author":{"gitID":"shanwpf"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT_SHIFT, Time.class.getSimpleName());"},{"lineNumber":81,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, shift::toModelType);"},{"lineNumber":82,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":83,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":84,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":85,"author":{"gitID":"shanwpf"},"content":"    public void toModelType_invalidEndTime_throwsIllegalValueException() {"},{"lineNumber":86,"author":{"gitID":"shanwpf"},"content":"        XmlAdaptedShift shift \u003d"},{"lineNumber":87,"author":{"gitID":"shanwpf"},"content":"                new XmlAdaptedShift(VALID_DATE, VALID_START_TIME, INVALID_END_TIME, VALID_CAPACITY,"},{"lineNumber":88,"author":{"gitID":"shanwpf"},"content":"                        VALID_EMPLOYEES);"},{"lineNumber":89,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":90,"author":{"gitID":"shanwpf"},"content":"        String expectedMessage \u003d Time.MESSAGE_TIME_CONSTRAINTS;"},{"lineNumber":91,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, shift::toModelType);"},{"lineNumber":92,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":93,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":94,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":95,"author":{"gitID":"shanwpf"},"content":"    public void toModelType_nullEndTime_throwsIllegalValueException() {"},{"lineNumber":96,"author":{"gitID":"shanwpf"},"content":"        XmlAdaptedShift shift \u003d"},{"lineNumber":97,"author":{"gitID":"shanwpf"},"content":"                new XmlAdaptedShift(VALID_DATE, VALID_START_TIME, null, VALID_CAPACITY,"},{"lineNumber":98,"author":{"gitID":"shanwpf"},"content":"                        VALID_EMPLOYEES);"},{"lineNumber":99,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":100,"author":{"gitID":"shanwpf"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT_SHIFT, Time.class.getSimpleName());"},{"lineNumber":101,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, shift::toModelType);"},{"lineNumber":102,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":103,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":104,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":105,"author":{"gitID":"shanwpf"},"content":"    public void toModelType_invalidCapacity_throwsIllegalValueException() {"},{"lineNumber":106,"author":{"gitID":"shanwpf"},"content":"        XmlAdaptedShift shift \u003d"},{"lineNumber":107,"author":{"gitID":"shanwpf"},"content":"                new XmlAdaptedShift(VALID_DATE, VALID_START_TIME, VALID_END_TIME, INVALID_CAPACITY,"},{"lineNumber":108,"author":{"gitID":"shanwpf"},"content":"                        VALID_EMPLOYEES);"},{"lineNumber":109,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":110,"author":{"gitID":"shanwpf"},"content":"        String expectedMessage \u003d Capacity.MESSAGE_CAPACITY_CONSTRAINTS;"},{"lineNumber":111,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, shift::toModelType);"},{"lineNumber":112,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":113,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":114,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":115,"author":{"gitID":"shanwpf"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {"},{"lineNumber":116,"author":{"gitID":"shanwpf"},"content":"        XmlAdaptedShift shift \u003d"},{"lineNumber":117,"author":{"gitID":"shanwpf"},"content":"                new XmlAdaptedShift(VALID_DATE, VALID_START_TIME, VALID_END_TIME, null,"},{"lineNumber":118,"author":{"gitID":"shanwpf"},"content":"                        VALID_EMPLOYEES);"},{"lineNumber":119,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":120,"author":{"gitID":"shanwpf"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT_SHIFT, Capacity.class.getSimpleName());"},{"lineNumber":121,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, shift::toModelType);"},{"lineNumber":122,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":123,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":124,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":125,"author":{"gitID":"shanwpf"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {"},{"lineNumber":126,"author":{"gitID":"shanwpf"},"content":"        List\u003cXmlAdaptedEmployee\u003e invalidEmployees \u003d new ArrayList\u003c\u003e();"},{"lineNumber":127,"author":{"gitID":"shanwpf"},"content":"        invalidEmployees.add(new XmlAdaptedEmployee(null, null, null, null, null, null, null));"},{"lineNumber":128,"author":{"gitID":"shanwpf"},"content":"        XmlAdaptedShift shift \u003d"},{"lineNumber":129,"author":{"gitID":"shanwpf"},"content":"                new XmlAdaptedShift(VALID_DATE, VALID_START_TIME, VALID_END_TIME, null,"},{"lineNumber":130,"author":{"gitID":"shanwpf"},"content":"                        invalidEmployees);"},{"lineNumber":131,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":132,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(IllegalValueException.class, shift::toModelType);"},{"lineNumber":133,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":134,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":135,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":136,"author":{"gitID":"shanwpf"},"content":"    public void equals_sameObject_returnsTrue() {"},{"lineNumber":137,"author":{"gitID":"shanwpf"},"content":"        XmlAdaptedShift shift \u003d"},{"lineNumber":138,"author":{"gitID":"shanwpf"},"content":"                new XmlAdaptedShift(VALID_DATE, VALID_START_TIME, VALID_END_TIME, VALID_CAPACITY,"},{"lineNumber":139,"author":{"gitID":"shanwpf"},"content":"                        VALID_EMPLOYEES);"},{"lineNumber":140,"author":{"gitID":"shanwpf"},"content":"        assertTrue(shift.equals(shift));"},{"lineNumber":141,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":142,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":143,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":144,"author":{"gitID":"shanwpf"},"content":"    public void equals_sameShift_returnsTrue() {"},{"lineNumber":145,"author":{"gitID":"shanwpf"},"content":"        XmlAdaptedShift shift \u003d"},{"lineNumber":146,"author":{"gitID":"shanwpf"},"content":"                new XmlAdaptedShift(VALID_DATE, VALID_START_TIME, VALID_END_TIME, VALID_CAPACITY,"},{"lineNumber":147,"author":{"gitID":"shanwpf"},"content":"                        VALID_EMPLOYEES);"},{"lineNumber":148,"author":{"gitID":"shanwpf"},"content":"        XmlAdaptedShift shift1 \u003d"},{"lineNumber":149,"author":{"gitID":"shanwpf"},"content":"                new XmlAdaptedShift(VALID_DATE, VALID_START_TIME, VALID_END_TIME, VALID_CAPACITY,"},{"lineNumber":150,"author":{"gitID":"shanwpf"},"content":"                        VALID_EMPLOYEES);"},{"lineNumber":151,"author":{"gitID":"shanwpf"},"content":"        assertTrue(shift.equals(shift1));"},{"lineNumber":152,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":153,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":154,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":155,"author":{"gitID":"shanwpf"},"content":"    public void equals_differentShift_returnsTrue() {"},{"lineNumber":156,"author":{"gitID":"shanwpf"},"content":"        XmlAdaptedShift shift \u003d"},{"lineNumber":157,"author":{"gitID":"shanwpf"},"content":"                new XmlAdaptedShift(VALID_DATE, VALID_START_TIME, VALID_END_TIME, VALID_CAPACITY,"},{"lineNumber":158,"author":{"gitID":"shanwpf"},"content":"                        VALID_EMPLOYEES);"},{"lineNumber":159,"author":{"gitID":"shanwpf"},"content":"        XmlAdaptedShift shift1 \u003d"},{"lineNumber":160,"author":{"gitID":"shanwpf"},"content":"                new XmlAdaptedShift(\"02-14-18\", VALID_START_TIME, VALID_END_TIME, VALID_CAPACITY,"},{"lineNumber":161,"author":{"gitID":"shanwpf"},"content":"                        VALID_EMPLOYEES);"},{"lineNumber":162,"author":{"gitID":"shanwpf"},"content":"        assertFalse(shift.equals(shift1));"},{"lineNumber":163,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":164,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":165,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":166,"author":{"gitID":"shanwpf"},"content":"    public void equals_null_returnsFalse() {"},{"lineNumber":167,"author":{"gitID":"shanwpf"},"content":"        XmlAdaptedShift shift \u003d"},{"lineNumber":168,"author":{"gitID":"shanwpf"},"content":"                new XmlAdaptedShift(VALID_DATE, VALID_START_TIME, VALID_END_TIME, VALID_CAPACITY,"},{"lineNumber":169,"author":{"gitID":"shanwpf"},"content":"                        VALID_EMPLOYEES);"},{"lineNumber":170,"author":{"gitID":"shanwpf"},"content":"        assertFalse(shift.equals(null));"},{"lineNumber":171,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":172,"author":{"gitID":"shanwpf"},"content":"}"}],"authorContributionMap":{"shanwpf":152,"-":20}},{"path":"src/test/java/seedu/ptman/storage/XmlOutletInformationStorageTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import org.junit.rules.TemporaryFolder;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.exceptions.DataConversionException;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.util.FileUtil;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.Announcement;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OperatingHours;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletContact;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletEmail;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletName;"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":23,"author":{"gitID":"SunBangjie"},"content":"public class XmlOutletInformationStorageTest {"},{"lineNumber":24,"author":{"gitID":"SunBangjie"},"content":"    private static final String TEST_DATA_FOLDER \u003d"},{"lineNumber":25,"author":{"gitID":"SunBangjie"},"content":"            FileUtil.getPath(\"./src/test/data/XmlOutletInformationStorageTest/\");"},{"lineNumber":26,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":27,"author":{"gitID":"SunBangjie"},"content":"    @Rule"},{"lineNumber":28,"author":{"gitID":"SunBangjie"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":29,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":30,"author":{"gitID":"SunBangjie"},"content":"    @Rule"},{"lineNumber":31,"author":{"gitID":"SunBangjie"},"content":"    public TemporaryFolder testFolder \u003d new TemporaryFolder();"},{"lineNumber":32,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":33,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":34,"author":{"gitID":"SunBangjie"},"content":"    public void readOutletInformation_nullFilePath_throwsNullPointerException() throws Exception {"},{"lineNumber":35,"author":{"gitID":"SunBangjie"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":36,"author":{"gitID":"SunBangjie"},"content":"        readOutletInformation(null);"},{"lineNumber":37,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":39,"author":{"gitID":"SunBangjie"},"content":"    private java.util.Optional\u003cOutletInformation\u003e readOutletInformation(String filePath) throws Exception {"},{"lineNumber":40,"author":{"gitID":"SunBangjie"},"content":"        return new XmlOutletInformationStorage(filePath).readOutletInformation(addToTestDataPathIfNotNull(filePath));"},{"lineNumber":41,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":42,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":43,"author":{"gitID":"SunBangjie"},"content":"    private String addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {"},{"lineNumber":44,"author":{"gitID":"SunBangjie"},"content":"        return prefsFileInTestDataFolder !\u003d null"},{"lineNumber":45,"author":{"gitID":"SunBangjie"},"content":"                ? TEST_DATA_FOLDER + prefsFileInTestDataFolder"},{"lineNumber":46,"author":{"gitID":"SunBangjie"},"content":"                : null;"},{"lineNumber":47,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":48,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":49,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":50,"author":{"gitID":"SunBangjie"},"content":"    public void read_missingFile_emptyResult() throws Exception {"},{"lineNumber":51,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(readOutletInformation(\"NonExistentFile.xml\").isPresent());"},{"lineNumber":52,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":53,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":54,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":55,"author":{"gitID":"SunBangjie"},"content":"    public void read_notXmlFormat_exceptionThrown() throws Exception {"},{"lineNumber":56,"author":{"gitID":"SunBangjie"},"content":"        thrown.expect(DataConversionException.class);"},{"lineNumber":57,"author":{"gitID":"SunBangjie"},"content":"        readOutletInformation(\"NotXmlFormatOutletInformation.xml\");"},{"lineNumber":58,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":59,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":60,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":61,"author":{"gitID":"SunBangjie"},"content":"    public void readOutletInformation_invalidOutletInformation_throwDataConversionException() throws Exception {"},{"lineNumber":62,"author":{"gitID":"SunBangjie"},"content":"        thrown.expect(DataConversionException.class);"},{"lineNumber":63,"author":{"gitID":"SunBangjie"},"content":"        readOutletInformation(\"invalidOutletInformation.xml\");"},{"lineNumber":64,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":65,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":66,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":67,"author":{"gitID":"SunBangjie"},"content":"    public void readAndSaveOutletInformation_allInOrder_success() throws Exception {"},{"lineNumber":68,"author":{"gitID":"SunBangjie"},"content":"        String filePath \u003d testFolder.getRoot().getPath() + \"TempOutletInformation.xml\";"},{"lineNumber":69,"author":{"gitID":"SunBangjie"},"content":"        OutletInformation original \u003d new OutletInformation();"},{"lineNumber":70,"author":{"gitID":"SunBangjie"},"content":"        XmlOutletInformationStorage xmlOutletInformationStorage \u003d new XmlOutletInformationStorage(filePath);"},{"lineNumber":71,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":72,"author":{"gitID":"SunBangjie"},"content":"        //Save in new file and read back"},{"lineNumber":73,"author":{"gitID":"SunBangjie"},"content":"        xmlOutletInformationStorage.saveOutletInformation(original, filePath);"},{"lineNumber":74,"author":{"gitID":"SunBangjie"},"content":"        OutletInformation readBack \u003d xmlOutletInformationStorage.readOutletInformation(filePath).get();"},{"lineNumber":75,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(original, readBack);"},{"lineNumber":76,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":77,"author":{"gitID":"SunBangjie"},"content":"        //Modify data, overwrite existing file, and read back"},{"lineNumber":78,"author":{"gitID":"SunBangjie"},"content":"        original.setAnnouncement(new Announcement(\"new announcement\"));"},{"lineNumber":79,"author":{"gitID":"SunBangjie"},"content":"        original.setOutletInformation(new OutletName(\"newName\"), new OperatingHours(\"1000-2000\"),"},{"lineNumber":80,"author":{"gitID":"SunBangjie"},"content":"                new OutletContact(\"92223333\"), new OutletEmail(\"newOutlet@gmail.com\"));"},{"lineNumber":81,"author":{"gitID":"SunBangjie"},"content":"        xmlOutletInformationStorage.saveOutletInformation(original, filePath);"},{"lineNumber":82,"author":{"gitID":"SunBangjie"},"content":"        readBack \u003d xmlOutletInformationStorage.readOutletInformation(filePath).get();"},{"lineNumber":83,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(original, readBack);"},{"lineNumber":84,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":85,"author":{"gitID":"SunBangjie"},"content":"        //Save and read without specifying file path"},{"lineNumber":86,"author":{"gitID":"SunBangjie"},"content":"        original.setAnnouncement(new Announcement(\"new announcement\"));"},{"lineNumber":87,"author":{"gitID":"SunBangjie"},"content":"        original.setOutletInformation(new OutletName(\"newName\"), new OperatingHours(\"1000-2000\"),"},{"lineNumber":88,"author":{"gitID":"SunBangjie"},"content":"                new OutletContact(\"92223333\"), new OutletEmail(\"newOutlet@gmail.com\"));"},{"lineNumber":89,"author":{"gitID":"SunBangjie"},"content":"        xmlOutletInformationStorage.saveOutletInformation(original);"},{"lineNumber":90,"author":{"gitID":"SunBangjie"},"content":"        readBack \u003d xmlOutletInformationStorage.readOutletInformation().get();"},{"lineNumber":91,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(original, readBack);"},{"lineNumber":92,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":93,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":94,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":95,"author":{"gitID":"SunBangjie"},"content":"    public void saveOutletInformation_nullOutletInformation_throwsNullPointerException() {"},{"lineNumber":96,"author":{"gitID":"SunBangjie"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":97,"author":{"gitID":"SunBangjie"},"content":"        saveOutletInformation(null, \"SomeFile.xml\");"},{"lineNumber":98,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":99,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":100,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":101,"author":{"gitID":"SunBangjie"},"content":"    public void saveOutletInformation_nullFilePath_throwsNullPointerException() {"},{"lineNumber":102,"author":{"gitID":"SunBangjie"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":103,"author":{"gitID":"SunBangjie"},"content":"        saveOutletInformation(new OutletInformation(), null);"},{"lineNumber":104,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":105,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":106,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":107,"author":{"gitID":"SunBangjie"},"content":"     * Saves {@code outletInformation} at the specified {@code filePath}."},{"lineNumber":108,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":109,"author":{"gitID":"SunBangjie"},"content":"    private void saveOutletInformation(OutletInformation outletInformation, String filePath) {"},{"lineNumber":110,"author":{"gitID":"SunBangjie"},"content":"        try {"},{"lineNumber":111,"author":{"gitID":"SunBangjie"},"content":"            new XmlOutletInformationStorage(filePath)"},{"lineNumber":112,"author":{"gitID":"SunBangjie"},"content":"                    .saveOutletInformation(outletInformation, addToTestDataPathIfNotNull(filePath));"},{"lineNumber":113,"author":{"gitID":"SunBangjie"},"content":"        } catch (IOException ioe) {"},{"lineNumber":114,"author":{"gitID":"SunBangjie"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);"},{"lineNumber":115,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":116,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":117,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":118,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":119,"author":{"gitID":"SunBangjie"},"content":"    public void backupOutletInformation_nullOutletInformation_throwsNullPointerException() {"},{"lineNumber":120,"author":{"gitID":"SunBangjie"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":121,"author":{"gitID":"SunBangjie"},"content":"        backupOutletInformation(null, TEST_DATA_FOLDER + \"SomeBackupFile.xml\");"},{"lineNumber":122,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":123,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":124,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":125,"author":{"gitID":"SunBangjie"},"content":"    public void backupOutletInformation_nullFilePath_throwsNullPointerException() {"},{"lineNumber":126,"author":{"gitID":"SunBangjie"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":127,"author":{"gitID":"SunBangjie"},"content":"        backupOutletInformation(new OutletInformation(), null);"},{"lineNumber":128,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":129,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":130,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":131,"author":{"gitID":"SunBangjie"},"content":"    public void backupOutletInformation_validInputs_backupSuccess() throws Exception {"},{"lineNumber":132,"author":{"gitID":"SunBangjie"},"content":"        String filePath \u003d TEST_DATA_FOLDER + \"backupFile\";"},{"lineNumber":133,"author":{"gitID":"SunBangjie"},"content":"        OutletInformation original \u003d new OutletInformation();"},{"lineNumber":134,"author":{"gitID":"SunBangjie"},"content":"        backupOutletInformation(original, filePath);"},{"lineNumber":135,"author":{"gitID":"SunBangjie"},"content":"        XmlOutletInformationStorage xmlOutletInformationStorage \u003d"},{"lineNumber":136,"author":{"gitID":"SunBangjie"},"content":"                new XmlOutletInformationStorage(filePath + \".backup\");"},{"lineNumber":137,"author":{"gitID":"SunBangjie"},"content":"        OutletInformation readBack \u003d"},{"lineNumber":138,"author":{"gitID":"SunBangjie"},"content":"                xmlOutletInformationStorage.readOutletInformation(filePath + \".backup\").get();"},{"lineNumber":139,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(original, new OutletInformation(readBack));"},{"lineNumber":140,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":141,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":142,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":143,"author":{"gitID":"SunBangjie"},"content":"     * Backups {@code partTimeManager} at the specified {@code filePath}."},{"lineNumber":144,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":145,"author":{"gitID":"SunBangjie"},"content":"    private void backupOutletInformation(OutletInformation outletInformation, String filePath) {"},{"lineNumber":146,"author":{"gitID":"SunBangjie"},"content":"        try {"},{"lineNumber":147,"author":{"gitID":"SunBangjie"},"content":"            new XmlOutletInformationStorage(filePath).backupOutletInformation(outletInformation);"},{"lineNumber":148,"author":{"gitID":"SunBangjie"},"content":"        } catch (IOException ioe) {"},{"lineNumber":149,"author":{"gitID":"SunBangjie"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);"},{"lineNumber":150,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":151,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":152,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":21,"SunBangjie":131}},{"path":"src/test/java/seedu/ptman/storage/XmlPartTimeManagerStorageTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.ALICE;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.HOON;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.IDA;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.getTypicalPartTimeManager;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import org.junit.rules.TemporaryFolder;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.exceptions.DataConversionException;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.util.FileUtil;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.ptman.model.PartTimeManager;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.ptman.model.ReadOnlyPartTimeManager;"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"public class XmlPartTimeManagerStorageTest {"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    private static final String TEST_DATA_FOLDER \u003d FileUtil.getPath(\"./src/test/data/XmlPartTimeManagerStorageTest/\");"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    public TemporaryFolder testFolder \u003d new TemporaryFolder();"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    public void readPartTimeManager_nullFilePath_throwsNullPointerException() throws Exception {"},{"lineNumber":33,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":34,"author":{"gitID":"-"},"content":"        readPartTimeManager(null);"},{"lineNumber":35,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"    private java.util.Optional\u003cReadOnlyPartTimeManager\u003e readPartTimeManager(String filePath) throws Exception {"},{"lineNumber":38,"author":{"gitID":"-"},"content":"        return new XmlPartTimeManagerStorage(filePath).readPartTimeManager(false,"},{"lineNumber":39,"author":{"gitID":"-"},"content":"                addToTestDataPathIfNotNull(filePath));"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":41,"author":{"gitID":"-"},"content":""},{"lineNumber":42,"author":{"gitID":"-"},"content":"    private String addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null"},{"lineNumber":44,"author":{"gitID":"-"},"content":"                ? TEST_DATA_FOLDER + prefsFileInTestDataFolder"},{"lineNumber":45,"author":{"gitID":"-"},"content":"                : null;"},{"lineNumber":46,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":49,"author":{"gitID":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {"},{"lineNumber":50,"author":{"gitID":"-"},"content":"        assertFalse(readPartTimeManager(\"NonExistentFile.xml\").isPresent());"},{"lineNumber":51,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"-"},"content":""},{"lineNumber":53,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":54,"author":{"gitID":"-"},"content":"    public void read_notXmlFormat_exceptionThrown() throws Exception {"},{"lineNumber":55,"author":{"gitID":"-"},"content":""},{"lineNumber":56,"author":{"gitID":"-"},"content":"        thrown.expect(DataConversionException.class);"},{"lineNumber":57,"author":{"gitID":"-"},"content":"        readPartTimeManager(\"NotXmlFormatPartTimeManager.xml\");"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"-"},"content":"        /* IMPORTANT: Any code below an exception-throwing line (like the one above) will be ignored."},{"lineNumber":60,"author":{"gitID":"-"},"content":"         * That means you should not have more than one exception test in one method"},{"lineNumber":61,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":62,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"-"},"content":""},{"lineNumber":64,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":65,"author":{"gitID":"-"},"content":"    public void readPartTimeManager_invalidEmployeePartTimeManager_throwDataConversionException() throws Exception {"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        thrown.expect(DataConversionException.class);"},{"lineNumber":67,"author":{"gitID":"-"},"content":"        readPartTimeManager(\"invalidEmployeePartTimeManager.xml\");"},{"lineNumber":68,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitID":"-"},"content":""},{"lineNumber":70,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":71,"author":{"gitID":"-"},"content":"    public void readPartTimeManager_invalidAndValidEmployeePartTimeManager_throwDataConversionException()"},{"lineNumber":72,"author":{"gitID":"-"},"content":"            throws Exception {"},{"lineNumber":73,"author":{"gitID":"-"},"content":"        thrown.expect(DataConversionException.class);"},{"lineNumber":74,"author":{"gitID":"-"},"content":"        readPartTimeManager(\"invalidAndValidEmployeePartTimeManager.xml\");"},{"lineNumber":75,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":76,"author":{"gitID":"-"},"content":""},{"lineNumber":77,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":78,"author":{"gitID":"-"},"content":"    public void readAndSavePartTimeManager_allInOrder_success() throws Exception {"},{"lineNumber":79,"author":{"gitID":"-"},"content":"        String filePath \u003d testFolder.getRoot().getPath() + \"TempPartTimeManager.xml\";"},{"lineNumber":80,"author":{"gitID":"-"},"content":"        PartTimeManager original \u003d getTypicalPartTimeManager();"},{"lineNumber":81,"author":{"gitID":"-"},"content":"        XmlPartTimeManagerStorage xmlPartTimeManagerStorage \u003d new XmlPartTimeManagerStorage(filePath);"},{"lineNumber":82,"author":{"gitID":"-"},"content":""},{"lineNumber":83,"author":{"gitID":"-"},"content":"        //Save in new file and read back"},{"lineNumber":84,"author":{"gitID":"-"},"content":"        xmlPartTimeManagerStorage.savePartTimeManager(original, filePath);"},{"lineNumber":85,"author":{"gitID":"-"},"content":"        ReadOnlyPartTimeManager readBack \u003d xmlPartTimeManagerStorage.readPartTimeManager(false, filePath).get();"},{"lineNumber":86,"author":{"gitID":"-"},"content":"        assertEquals(original, new PartTimeManager(readBack));"},{"lineNumber":87,"author":{"gitID":"-"},"content":""},{"lineNumber":88,"author":{"gitID":"-"},"content":"        //Modify data, overwrite exiting file, and read back"},{"lineNumber":89,"author":{"gitID":"-"},"content":"        original.addEmployee(HOON);"},{"lineNumber":90,"author":{"gitID":"-"},"content":"        original.removeEmployee(ALICE);"},{"lineNumber":91,"author":{"gitID":"-"},"content":"        xmlPartTimeManagerStorage.savePartTimeManager(original, filePath);"},{"lineNumber":92,"author":{"gitID":"-"},"content":"        readBack \u003d xmlPartTimeManagerStorage.readPartTimeManager(false, filePath).get();"},{"lineNumber":93,"author":{"gitID":"-"},"content":"        assertEquals(original, new PartTimeManager(readBack));"},{"lineNumber":94,"author":{"gitID":"-"},"content":""},{"lineNumber":95,"author":{"gitID":"-"},"content":"        //Save and read without specifying file path"},{"lineNumber":96,"author":{"gitID":"-"},"content":"        original.addEmployee(IDA);"},{"lineNumber":97,"author":{"gitID":"-"},"content":"        xmlPartTimeManagerStorage.savePartTimeManager(original); //file path not specified"},{"lineNumber":98,"author":{"gitID":"-"},"content":"        readBack \u003d xmlPartTimeManagerStorage.readPartTimeManager(false).get(); //file path not specified"},{"lineNumber":99,"author":{"gitID":"-"},"content":"        assertEquals(original, new PartTimeManager(readBack));"},{"lineNumber":100,"author":{"gitID":"-"},"content":""},{"lineNumber":101,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":102,"author":{"gitID":"-"},"content":""},{"lineNumber":103,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":104,"author":{"gitID":"-"},"content":"    public void savePartTimeManager_nullPartTimeManager_throwsNullPointerException() {"},{"lineNumber":105,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":106,"author":{"gitID":"-"},"content":"        savePartTimeManager(null, \"SomeFile.xml\");"},{"lineNumber":107,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":108,"author":{"gitID":"-"},"content":""},{"lineNumber":109,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":110,"author":{"gitID":"-"},"content":"     * Saves {@code partTimeManager} at the specified {@code filePath}."},{"lineNumber":111,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":112,"author":{"gitID":"-"},"content":"    private void savePartTimeManager(ReadOnlyPartTimeManager partTimeManager, String filePath) {"},{"lineNumber":113,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":114,"author":{"gitID":"-"},"content":"            new XmlPartTimeManagerStorage(filePath)"},{"lineNumber":115,"author":{"gitID":"-"},"content":"                    .savePartTimeManager(partTimeManager, addToTestDataPathIfNotNull(filePath));"},{"lineNumber":116,"author":{"gitID":"-"},"content":"        } catch (IOException ioe) {"},{"lineNumber":117,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);"},{"lineNumber":118,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":119,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":120,"author":{"gitID":"-"},"content":""},{"lineNumber":121,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":122,"author":{"gitID":"-"},"content":"    public void savePartTimeManager_nullFilePath_throwsNullPointerException() throws IOException {"},{"lineNumber":123,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":124,"author":{"gitID":"-"},"content":"        savePartTimeManager(new PartTimeManager(), null);"},{"lineNumber":125,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":126,"author":{"gitID":"-"},"content":""},{"lineNumber":127,"author":{"gitID":"SunBangjie"},"content":"    //@@author SunBangjie"},{"lineNumber":128,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":129,"author":{"gitID":"SunBangjie"},"content":"    public void backupPartTimeManager_nullPartTimeManager_throwsNullPointerException() {"},{"lineNumber":130,"author":{"gitID":"SunBangjie"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":131,"author":{"gitID":"SunBangjie"},"content":"        backupPartTimeManager(null, TEST_DATA_FOLDER + \"SomeBackupFile.xml\");"},{"lineNumber":132,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":133,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":134,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":135,"author":{"gitID":"SunBangjie"},"content":"    public void backupPartTimeManager_nullFilePath_throwsNullPointerException() {"},{"lineNumber":136,"author":{"gitID":"SunBangjie"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":137,"author":{"gitID":"SunBangjie"},"content":"        backupPartTimeManager(new PartTimeManager(), null);"},{"lineNumber":138,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":139,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":140,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":141,"author":{"gitID":"SunBangjie"},"content":"    public void backupParTimeManager_validInputs_backupSuccess() throws Exception {"},{"lineNumber":142,"author":{"gitID":"SunBangjie"},"content":"        String filePath \u003d TEST_DATA_FOLDER + \"backupFile\";"},{"lineNumber":143,"author":{"gitID":"SunBangjie"},"content":"        PartTimeManager original \u003d getTypicalPartTimeManager();"},{"lineNumber":144,"author":{"gitID":"SunBangjie"},"content":"        backupPartTimeManager(original, filePath);"},{"lineNumber":145,"author":{"gitID":"SunBangjie"},"content":"        XmlPartTimeManagerStorage xmlPartTimeManagerStorage \u003d"},{"lineNumber":146,"author":{"gitID":"SunBangjie"},"content":"                new XmlPartTimeManagerStorage(filePath + \".backup\");"},{"lineNumber":147,"author":{"gitID":"SunBangjie"},"content":"        ReadOnlyPartTimeManager readBack \u003d"},{"lineNumber":148,"author":{"gitID":"SunBangjie"},"content":"                xmlPartTimeManagerStorage.readPartTimeManager(false, filePath + \".backup\").get();"},{"lineNumber":149,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(original, new PartTimeManager(readBack));"},{"lineNumber":150,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":151,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":152,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":153,"author":{"gitID":"SunBangjie"},"content":"     * Backups {@code partTimeManager} at the specified {@code filePath}."},{"lineNumber":154,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":155,"author":{"gitID":"SunBangjie"},"content":"    private void backupPartTimeManager(ReadOnlyPartTimeManager partTimeManager, String filePath) {"},{"lineNumber":156,"author":{"gitID":"SunBangjie"},"content":"        try {"},{"lineNumber":157,"author":{"gitID":"SunBangjie"},"content":"            new XmlPartTimeManagerStorage(filePath).backupPartTimeManager(partTimeManager);"},{"lineNumber":158,"author":{"gitID":"SunBangjie"},"content":"        } catch (IOException ioe) {"},{"lineNumber":159,"author":{"gitID":"SunBangjie"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);"},{"lineNumber":160,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":161,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":162,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":126,"SunBangjie":36}},{"path":"src/test/java/seedu/ptman/storage/XmlAdaptedOutletInformationTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.storage.XmlAdaptedOutletInformation.FAIL_MESSAGE;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.exceptions.IllegalValueException;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.Announcement;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OperatingHours;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletContact;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletEmail;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletName;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.Assert;"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":21,"author":{"gitID":"SunBangjie"},"content":"public class XmlAdaptedOutletInformationTest {"},{"lineNumber":22,"author":{"gitID":"SunBangjie"},"content":"    private static final String DECRYPTED \u003d OutletInformation.DATA_NOT_ENCRYPTED_MESSAGE;"},{"lineNumber":23,"author":{"gitID":"SunBangjie"},"content":"    private static final String ENCRYPTED \u003d OutletInformation.DATA_ENCRYPTED_MESSAGE;"},{"lineNumber":24,"author":{"gitID":"SunBangjie"},"content":"    private static final String INVALID_OUTLET_NAME \u003d \"Awesome@outlet\";"},{"lineNumber":25,"author":{"gitID":"SunBangjie"},"content":"    private static final String INVALID_OPERATING_HOURS \u003d \"1000/2000\";"},{"lineNumber":26,"author":{"gitID":"SunBangjie"},"content":"    private static final String INVALID_OUTLET_CONTACT \u003d \"+6591112222\";"},{"lineNumber":27,"author":{"gitID":"SunBangjie"},"content":"    private static final String INVALID_OUTLET_EMAIL \u003d \"example.com\";"},{"lineNumber":28,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":29,"author":{"gitID":"SunBangjie"},"content":"    private static final String VALID_OUTLET_NAME \u003d \"AwesomeOutlet\";"},{"lineNumber":30,"author":{"gitID":"SunBangjie"},"content":"    private static final String VALID_OPERATING_HOURS \u003d \"1000-2000\";"},{"lineNumber":31,"author":{"gitID":"SunBangjie"},"content":"    private static final String VALID_OUTLET_CONTACT \u003d \"91112222\";"},{"lineNumber":32,"author":{"gitID":"SunBangjie"},"content":"    private static final String VALID_OUTLET_EMAIL \u003d \"AwesomeOutlet@gmail.com\";"},{"lineNumber":33,"author":{"gitID":"SunBangjie"},"content":"    private static final String VALID_ANNOUNCEMENT \u003d \"New Announcement\";"},{"lineNumber":34,"author":{"gitID":"SunBangjie"},"content":"    private static final String DEFAULT_PASSWORD_HASH \u003d new Password().getPasswordHash();"},{"lineNumber":35,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":36,"author":{"gitID":"SunBangjie"},"content":"    private OutletInformation outlet \u003d new OutletInformation();"},{"lineNumber":37,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":38,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":39,"author":{"gitID":"SunBangjie"},"content":"    public void toModelType_validOutletInformationDetails_returnsOutletInformation() throws Exception {"},{"lineNumber":40,"author":{"gitID":"SunBangjie"},"content":"        XmlAdaptedOutletInformation outletInformation \u003d new XmlAdaptedOutletInformation(outlet);"},{"lineNumber":41,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(outlet, outletInformation.toModelType());"},{"lineNumber":42,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":43,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":44,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":45,"author":{"gitID":"SunBangjie"},"content":"    public void toModelType_invalidOutletName_throwsIllegalValueException() {"},{"lineNumber":46,"author":{"gitID":"SunBangjie"},"content":"        XmlAdaptedOutletInformation outletInformation \u003d new XmlAdaptedOutletInformation(DECRYPTED,"},{"lineNumber":47,"author":{"gitID":"SunBangjie"},"content":"                INVALID_OUTLET_NAME, VALID_OPERATING_HOURS, VALID_OUTLET_CONTACT, VALID_OUTLET_EMAIL,"},{"lineNumber":48,"author":{"gitID":"SunBangjie"},"content":"                DEFAULT_PASSWORD_HASH, VALID_ANNOUNCEMENT);"},{"lineNumber":49,"author":{"gitID":"SunBangjie"},"content":"        String expectedMessage \u003d OutletName.MESSAGE_NAME_CONSTRAINTS;"},{"lineNumber":50,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, outletInformation::toModelType);"},{"lineNumber":51,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":53,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":54,"author":{"gitID":"SunBangjie"},"content":"    public void toModelType_nullOutletName_throwsIllegalValueException() {"},{"lineNumber":55,"author":{"gitID":"SunBangjie"},"content":"        XmlAdaptedOutletInformation outletInformation \u003d new XmlAdaptedOutletInformation(DECRYPTED, null,"},{"lineNumber":56,"author":{"gitID":"SunBangjie"},"content":"                VALID_OPERATING_HOURS, VALID_OUTLET_CONTACT, VALID_OUTLET_EMAIL, DEFAULT_PASSWORD_HASH,"},{"lineNumber":57,"author":{"gitID":"SunBangjie"},"content":"                VALID_ANNOUNCEMENT);"},{"lineNumber":58,"author":{"gitID":"SunBangjie"},"content":"        String expectedMessage \u003d String.format(FAIL_MESSAGE, OutletName.class.getSimpleName());"},{"lineNumber":59,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, outletInformation::toModelType);"},{"lineNumber":60,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":61,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":62,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":63,"author":{"gitID":"SunBangjie"},"content":"    public void toModelType_invalidOperatingHours_throwsIllegalValueException() {"},{"lineNumber":64,"author":{"gitID":"SunBangjie"},"content":"        XmlAdaptedOutletInformation outletInformation \u003d new XmlAdaptedOutletInformation(DECRYPTED,"},{"lineNumber":65,"author":{"gitID":"SunBangjie"},"content":"                VALID_OUTLET_NAME, INVALID_OPERATING_HOURS, VALID_OUTLET_CONTACT, VALID_OUTLET_EMAIL,"},{"lineNumber":66,"author":{"gitID":"SunBangjie"},"content":"                DEFAULT_PASSWORD_HASH, VALID_ANNOUNCEMENT);"},{"lineNumber":67,"author":{"gitID":"SunBangjie"},"content":"        String expectedMessage \u003d OperatingHours.MESSAGE_OPERATING_HOUR_CONSTRAINTS;"},{"lineNumber":68,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, outletInformation::toModelType);"},{"lineNumber":69,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":70,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":71,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":72,"author":{"gitID":"SunBangjie"},"content":"    public void toModelType_nullOperatingHours_throwsIllegalValueException() {"},{"lineNumber":73,"author":{"gitID":"SunBangjie"},"content":"        XmlAdaptedOutletInformation outletInformation \u003d new XmlAdaptedOutletInformation(DECRYPTED, VALID_OUTLET_NAME,"},{"lineNumber":74,"author":{"gitID":"SunBangjie"},"content":"                null, VALID_OUTLET_CONTACT, VALID_OUTLET_EMAIL, DEFAULT_PASSWORD_HASH,"},{"lineNumber":75,"author":{"gitID":"SunBangjie"},"content":"                VALID_ANNOUNCEMENT);"},{"lineNumber":76,"author":{"gitID":"SunBangjie"},"content":"        String expectedMessage \u003d String.format(FAIL_MESSAGE, OperatingHours.class.getSimpleName());"},{"lineNumber":77,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, outletInformation::toModelType);"},{"lineNumber":78,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":79,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":80,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":81,"author":{"gitID":"SunBangjie"},"content":"    public void toModelType_invalidOutletContact_throwsIllegalValueException() {"},{"lineNumber":82,"author":{"gitID":"SunBangjie"},"content":"        XmlAdaptedOutletInformation outletInformation \u003d new XmlAdaptedOutletInformation(DECRYPTED, VALID_OUTLET_NAME,"},{"lineNumber":83,"author":{"gitID":"SunBangjie"},"content":"                VALID_OPERATING_HOURS, INVALID_OUTLET_CONTACT, VALID_OUTLET_EMAIL, DEFAULT_PASSWORD_HASH,"},{"lineNumber":84,"author":{"gitID":"SunBangjie"},"content":"                VALID_ANNOUNCEMENT);"},{"lineNumber":85,"author":{"gitID":"SunBangjie"},"content":"        String expectedMessage \u003d OutletContact.MESSAGE_OUTLET_CONTACT_CONSTRAINTS;"},{"lineNumber":86,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, outletInformation::toModelType);"},{"lineNumber":87,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":88,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":89,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":90,"author":{"gitID":"SunBangjie"},"content":"    public void toModelType_nullOutletContact_throwsIllegalValueException() {"},{"lineNumber":91,"author":{"gitID":"SunBangjie"},"content":"        XmlAdaptedOutletInformation outletInformation \u003d new XmlAdaptedOutletInformation(DECRYPTED, VALID_OUTLET_NAME,"},{"lineNumber":92,"author":{"gitID":"SunBangjie"},"content":"                VALID_OPERATING_HOURS, null, VALID_OUTLET_EMAIL, DEFAULT_PASSWORD_HASH,"},{"lineNumber":93,"author":{"gitID":"SunBangjie"},"content":"                VALID_ANNOUNCEMENT);"},{"lineNumber":94,"author":{"gitID":"SunBangjie"},"content":"        String expectedMessage \u003d String.format(FAIL_MESSAGE, OutletContact.class.getSimpleName());"},{"lineNumber":95,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, outletInformation::toModelType);"},{"lineNumber":96,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":97,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":98,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":99,"author":{"gitID":"SunBangjie"},"content":"    public void toModelType_invalidOutletEmail_throwsIllegalValueException() {"},{"lineNumber":100,"author":{"gitID":"SunBangjie"},"content":"        XmlAdaptedOutletInformation outletInformation \u003d new XmlAdaptedOutletInformation(DECRYPTED, VALID_OUTLET_NAME,"},{"lineNumber":101,"author":{"gitID":"SunBangjie"},"content":"                VALID_OPERATING_HOURS, VALID_OUTLET_CONTACT, INVALID_OUTLET_EMAIL, DEFAULT_PASSWORD_HASH,"},{"lineNumber":102,"author":{"gitID":"SunBangjie"},"content":"                VALID_ANNOUNCEMENT);"},{"lineNumber":103,"author":{"gitID":"SunBangjie"},"content":"        String expectedMessage \u003d OutletEmail.MESSAGE_OUTLET_EMAIL_CONSTRAINTS;"},{"lineNumber":104,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, outletInformation::toModelType);"},{"lineNumber":105,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":106,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":107,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":108,"author":{"gitID":"SunBangjie"},"content":"    public void toModelType_nullOutletEmail_throwsIllegalValueException() {"},{"lineNumber":109,"author":{"gitID":"SunBangjie"},"content":"        XmlAdaptedOutletInformation outletInformation \u003d new XmlAdaptedOutletInformation(DECRYPTED, VALID_OUTLET_NAME,"},{"lineNumber":110,"author":{"gitID":"SunBangjie"},"content":"                VALID_OPERATING_HOURS, VALID_OUTLET_CONTACT, null, DEFAULT_PASSWORD_HASH,"},{"lineNumber":111,"author":{"gitID":"SunBangjie"},"content":"                VALID_ANNOUNCEMENT);"},{"lineNumber":112,"author":{"gitID":"SunBangjie"},"content":"        String expectedMessage \u003d String.format(FAIL_MESSAGE, OutletEmail.class.getSimpleName());"},{"lineNumber":113,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, outletInformation::toModelType);"},{"lineNumber":114,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":115,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":116,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":117,"author":{"gitID":"SunBangjie"},"content":"    public void toModelType_nullPasswordHash_throwsIllegalValueException() {"},{"lineNumber":118,"author":{"gitID":"SunBangjie"},"content":"        XmlAdaptedOutletInformation outletInformation \u003d new XmlAdaptedOutletInformation(DECRYPTED, VALID_OUTLET_NAME,"},{"lineNumber":119,"author":{"gitID":"SunBangjie"},"content":"                VALID_OPERATING_HOURS, VALID_OUTLET_CONTACT, VALID_OUTLET_EMAIL, null,"},{"lineNumber":120,"author":{"gitID":"SunBangjie"},"content":"                VALID_ANNOUNCEMENT);"},{"lineNumber":121,"author":{"gitID":"SunBangjie"},"content":"        String expectedMessage \u003d String.format(FAIL_MESSAGE, Password.class.getSimpleName());"},{"lineNumber":122,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, outletInformation::toModelType);"},{"lineNumber":123,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":124,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":125,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":126,"author":{"gitID":"SunBangjie"},"content":"    public void toModelType_nullAnnouncement_throwsIllegalValueException() {"},{"lineNumber":127,"author":{"gitID":"SunBangjie"},"content":"        XmlAdaptedOutletInformation outletInformation \u003d new XmlAdaptedOutletInformation(DECRYPTED, VALID_OUTLET_NAME,"},{"lineNumber":128,"author":{"gitID":"SunBangjie"},"content":"                VALID_OPERATING_HOURS, VALID_OUTLET_CONTACT, VALID_OUTLET_EMAIL, DEFAULT_PASSWORD_HASH,"},{"lineNumber":129,"author":{"gitID":"SunBangjie"},"content":"                null);"},{"lineNumber":130,"author":{"gitID":"SunBangjie"},"content":"        String expectedMessage \u003d String.format(FAIL_MESSAGE, Announcement.class.getSimpleName());"},{"lineNumber":131,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, outletInformation::toModelType);"},{"lineNumber":132,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":133,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":134,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":135,"author":{"gitID":"SunBangjie"},"content":"    public void equals() {"},{"lineNumber":136,"author":{"gitID":"SunBangjie"},"content":"        XmlAdaptedOutletInformation firstOutletInformation \u003d new XmlAdaptedOutletInformation(DECRYPTED,"},{"lineNumber":137,"author":{"gitID":"SunBangjie"},"content":"                VALID_OUTLET_NAME, VALID_OPERATING_HOURS, VALID_OUTLET_CONTACT, VALID_OUTLET_EMAIL,"},{"lineNumber":138,"author":{"gitID":"SunBangjie"},"content":"                DEFAULT_PASSWORD_HASH, VALID_ANNOUNCEMENT);"},{"lineNumber":139,"author":{"gitID":"SunBangjie"},"content":"        XmlAdaptedOutletInformation secondOutletInformation \u003d new XmlAdaptedOutletInformation(outlet);"},{"lineNumber":140,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":141,"author":{"gitID":"SunBangjie"},"content":"        // Same object -\u003e return true"},{"lineNumber":142,"author":{"gitID":"SunBangjie"},"content":"        assertTrue(firstOutletInformation.equals(firstOutletInformation));"},{"lineNumber":143,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":144,"author":{"gitID":"SunBangjie"},"content":"        // Same values -\u003e return true"},{"lineNumber":145,"author":{"gitID":"SunBangjie"},"content":"        XmlAdaptedOutletInformation firstOutletInformationCopy \u003d new XmlAdaptedOutletInformation(DECRYPTED,"},{"lineNumber":146,"author":{"gitID":"SunBangjie"},"content":"                VALID_OUTLET_NAME, VALID_OPERATING_HOURS, VALID_OUTLET_CONTACT, VALID_OUTLET_EMAIL,"},{"lineNumber":147,"author":{"gitID":"SunBangjie"},"content":"                DEFAULT_PASSWORD_HASH, VALID_ANNOUNCEMENT);"},{"lineNumber":148,"author":{"gitID":"SunBangjie"},"content":"        assertTrue(firstOutletInformation.equals(firstOutletInformationCopy));"},{"lineNumber":149,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":150,"author":{"gitID":"SunBangjie"},"content":"        // Different types -\u003e return false"},{"lineNumber":151,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(firstOutletInformation.equals(1));"},{"lineNumber":152,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":153,"author":{"gitID":"SunBangjie"},"content":"        // Null type -\u003e return false"},{"lineNumber":154,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(firstOutletInformation.equals(null));"},{"lineNumber":155,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":156,"author":{"gitID":"SunBangjie"},"content":"        // Different values -\u003e return false"},{"lineNumber":157,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(firstOutletInformation.equals(secondOutletInformation));"},{"lineNumber":158,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":159,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":160,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":161,"author":{"gitID":"SunBangjie"},"content":"    public void setAttributesFromSource_validInputs_returnsEqualObject() {"},{"lineNumber":162,"author":{"gitID":"SunBangjie"},"content":"        OutletInformation outlet \u003d new OutletInformation();"},{"lineNumber":163,"author":{"gitID":"SunBangjie"},"content":"        XmlAdaptedOutletInformation outletInformation \u003d new XmlAdaptedOutletInformation();"},{"lineNumber":164,"author":{"gitID":"SunBangjie"},"content":"        outletInformation.setAttributesFromSource(outlet);"},{"lineNumber":165,"author":{"gitID":"SunBangjie"},"content":"        XmlAdaptedOutletInformation sameOutletInformation \u003d new XmlAdaptedOutletInformation();"},{"lineNumber":166,"author":{"gitID":"SunBangjie"},"content":"        sameOutletInformation.setAttributesFromSource(outlet);"},{"lineNumber":167,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(outletInformation, sameOutletInformation);"},{"lineNumber":168,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":169,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":170,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":171,"author":{"gitID":"SunBangjie"},"content":"    public void setAttributesFromStrings_validInputs_returnEqualObject() {"},{"lineNumber":172,"author":{"gitID":"SunBangjie"},"content":"        OutletInformation outlet \u003d new OutletInformation();"},{"lineNumber":173,"author":{"gitID":"SunBangjie"},"content":"        XmlAdaptedOutletInformation outletInformation \u003d new XmlAdaptedOutletInformation();"},{"lineNumber":174,"author":{"gitID":"SunBangjie"},"content":"        outletInformation.setAttributesFromStrings(DECRYPTED, outlet.getName().toString(),"},{"lineNumber":175,"author":{"gitID":"SunBangjie"},"content":"                outlet.getOperatingHours().toString(), outlet.getOutletContact().toString(),"},{"lineNumber":176,"author":{"gitID":"SunBangjie"},"content":"                outlet.getOutletEmail().toString(), outlet.getMasterPassword().getPasswordHash(),"},{"lineNumber":177,"author":{"gitID":"SunBangjie"},"content":"                outlet.getAnnouncement().toString());"},{"lineNumber":178,"author":{"gitID":"SunBangjie"},"content":"        XmlAdaptedOutletInformation sameOutletInformation \u003d new XmlAdaptedOutletInformation();"},{"lineNumber":179,"author":{"gitID":"SunBangjie"},"content":"        sameOutletInformation.setAttributesFromStrings(DECRYPTED, outlet.getName().toString(),"},{"lineNumber":180,"author":{"gitID":"SunBangjie"},"content":"                outlet.getOperatingHours().toString(),"},{"lineNumber":181,"author":{"gitID":"SunBangjie"},"content":"                outlet.getOutletContact().toString(), outlet.getOutletEmail().toString(),"},{"lineNumber":182,"author":{"gitID":"SunBangjie"},"content":"                outlet.getMasterPassword().getPasswordHash(),"},{"lineNumber":183,"author":{"gitID":"SunBangjie"},"content":"                outlet.getAnnouncement().toString());"},{"lineNumber":184,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(outletInformation, sameOutletInformation);"},{"lineNumber":185,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":186,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":19,"SunBangjie":167}},{"path":"src/test/java/seedu/ptman/model/shift/TimeTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.model.shift;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.time.LocalTime;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.Assert;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"shanwpf"},"content":"//@@author shanwpf"},{"lineNumber":14,"author":{"gitID":"shanwpf"},"content":"public class TimeTest {"},{"lineNumber":15,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":16,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":17,"author":{"gitID":"shanwpf"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":18,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Time(null));"},{"lineNumber":19,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":20,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":21,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":22,"author":{"gitID":"shanwpf"},"content":"    public void constructor_invalidTime_throwsIllegalArgumentException() {"},{"lineNumber":23,"author":{"gitID":"shanwpf"},"content":"        String invalidTime \u003d \"\";"},{"lineNumber":24,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Time(invalidTime));"},{"lineNumber":25,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":27,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":28,"author":{"gitID":"shanwpf"},"content":"    public void isValidTime_nullTime_throwsNullPointerException() {"},{"lineNumber":29,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Time.isValidTime(null));"},{"lineNumber":30,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":32,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":33,"author":{"gitID":"shanwpf"},"content":"    public void isValidTime_invalidTime_returnsFalse() {"},{"lineNumber":34,"author":{"gitID":"shanwpf"},"content":"        assertFalse(Time.isValidTime(\"\")); // empty string"},{"lineNumber":35,"author":{"gitID":"shanwpf"},"content":"        assertFalse(Time.isValidTime(\" \")); // spaces only"},{"lineNumber":36,"author":{"gitID":"shanwpf"},"content":"        assertFalse(Time.isValidTime(\"^\")); // only non-alphanumeric characters"},{"lineNumber":37,"author":{"gitID":"shanwpf"},"content":"        assertFalse(Time.isValidTime(\"11:11\")); // contains non-alphanumeric characters"},{"lineNumber":38,"author":{"gitID":"shanwpf"},"content":"        assertFalse(Time.isValidTime(\"2500\")); // contains invalid time"},{"lineNumber":39,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":41,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":42,"author":{"gitID":"shanwpf"},"content":"    public void isValidTime_validTime_returnsTrue() {"},{"lineNumber":43,"author":{"gitID":"shanwpf"},"content":"        assertTrue(Time.isValidTime(\"0000\"));"},{"lineNumber":44,"author":{"gitID":"shanwpf"},"content":"        assertTrue(Time.isValidTime(\"2359\"));"},{"lineNumber":45,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":47,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":48,"author":{"gitID":"shanwpf"},"content":"    public void toString_sameValue_returnsTrue() {"},{"lineNumber":49,"author":{"gitID":"shanwpf"},"content":"        Time day \u003d new Time(\"1000\");"},{"lineNumber":50,"author":{"gitID":"shanwpf"},"content":"        assertEquals(day.toString(), \"1000\");"},{"lineNumber":51,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":53,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":54,"author":{"gitID":"shanwpf"},"content":"    public void equals_sameValue_returnsTrue() {"},{"lineNumber":55,"author":{"gitID":"shanwpf"},"content":"        Time test \u003d new Time(\"1000\");"},{"lineNumber":56,"author":{"gitID":"shanwpf"},"content":"        Time other \u003d new Time(\"1000\");"},{"lineNumber":57,"author":{"gitID":"shanwpf"},"content":"        assertTrue(test.equals(other));"},{"lineNumber":58,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":59,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":60,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":61,"author":{"gitID":"shanwpf"},"content":"    public void equals_differentValue_returnsFalse() {"},{"lineNumber":62,"author":{"gitID":"shanwpf"},"content":"        Time test \u003d new Time(\"1200\");"},{"lineNumber":63,"author":{"gitID":"shanwpf"},"content":"        Time other \u003d new Time(\"2300\");"},{"lineNumber":64,"author":{"gitID":"shanwpf"},"content":"        assertFalse(test.equals(other));"},{"lineNumber":65,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":66,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":67,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":68,"author":{"gitID":"shanwpf"},"content":"    public void hashCode_sameTime_returnsTrue() {"},{"lineNumber":69,"author":{"gitID":"shanwpf"},"content":"        Time test \u003d new Time(\"1100\");"},{"lineNumber":70,"author":{"gitID":"shanwpf"},"content":"        assertEquals(test.hashCode(), LocalTime.of(11, 0).hashCode());"},{"lineNumber":71,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":72,"author":{"gitID":"shanwpf"},"content":"}"}],"authorContributionMap":{"shanwpf":60,"-":12}},{"path":"src/test/java/seedu/ptman/model/PartTimeManagerTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.model;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.ALICE;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.BENSON;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.getTypicalPartTimeManager;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalShifts.SHIFT_MONDAY_AM;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import java.util.Collection;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Employee;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Shift;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import seedu.ptman.model.tag.Tag;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.EmployeeBuilder;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.PartTimeManagerBuilder;"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"-"},"content":"public class PartTimeManagerTest {"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"    private final PartTimeManager partTimeManager \u003d new PartTimeManager();"},{"lineNumber":36,"author":{"gitID":"-"},"content":"    private final PartTimeManager partTimeManagerWithAliceAndBenson \u003d new PartTimeManagerBuilder().withEmployee(ALICE)"},{"lineNumber":37,"author":{"gitID":"-"},"content":"            .withEmployee(BENSON).build();"},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    public void constructor() {"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        assertEquals(Collections.emptyList(), partTimeManager.getEmployeeList());"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        assertEquals(Collections.emptyList(), partTimeManager.getTagList());"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    public void resetData_null_throwsNullPointerException() {"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        partTimeManager.resetData(null);"},{"lineNumber":50,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":53,"author":{"gitID":"-"},"content":"    public void resetData_withValidReadOnlyPartTimeManager_replacesData() {"},{"lineNumber":54,"author":{"gitID":"-"},"content":"        PartTimeManager newData \u003d getTypicalPartTimeManager();"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        partTimeManager.resetData(newData);"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        assertEquals(newData, partTimeManager);"},{"lineNumber":57,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":60,"author":{"gitID":"-"},"content":"    public void resetData_withDuplicateEmployees_throwsAssertionError() {"},{"lineNumber":61,"author":{"gitID":"-"},"content":"        // Repeat ALICE twice"},{"lineNumber":62,"author":{"gitID":"-"},"content":"        List\u003cEmployee\u003e newEmployees \u003d Arrays.asList(ALICE, ALICE);"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        List\u003cShift\u003e newShifts \u003d new ArrayList\u003c\u003e();"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        List\u003cTag\u003e newTags \u003d new ArrayList\u003c\u003e(ALICE.getTags());"},{"lineNumber":65,"author":{"gitID":"-"},"content":"        OutletInformation outlet \u003d new OutletInformation();"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        PartTimeManagerStub newData \u003d new PartTimeManagerStub(newEmployees, newTags, newShifts, outlet);"},{"lineNumber":67,"author":{"gitID":"-"},"content":""},{"lineNumber":68,"author":{"gitID":"-"},"content":"        thrown.expect(AssertionError.class);"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        partTimeManager.resetData(newData);"},{"lineNumber":70,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitID":"-"},"content":""},{"lineNumber":72,"author":{"gitID":"shanwpf"},"content":"    //@@author shanwpf"},{"lineNumber":73,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":74,"author":{"gitID":"shanwpf"},"content":"    public void resetData_withDuplicateShifts_throwsAssertionError() {"},{"lineNumber":75,"author":{"gitID":"shanwpf"},"content":"        List\u003cEmployee\u003e newEmployees \u003d Arrays.asList(ALICE);"},{"lineNumber":76,"author":{"gitID":"shanwpf"},"content":"        List\u003cShift\u003e newShifts \u003d Arrays.asList(SHIFT_MONDAY_AM, SHIFT_MONDAY_AM);"},{"lineNumber":77,"author":{"gitID":"shanwpf"},"content":"        List\u003cTag\u003e newTags \u003d new ArrayList\u003c\u003e(ALICE.getTags());"},{"lineNumber":78,"author":{"gitID":"shanwpf"},"content":"        OutletInformation outlet \u003d new OutletInformation();"},{"lineNumber":79,"author":{"gitID":"shanwpf"},"content":"        PartTimeManagerStub newData \u003d new PartTimeManagerStub(newEmployees, newTags, newShifts, outlet);"},{"lineNumber":80,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":81,"author":{"gitID":"shanwpf"},"content":"        thrown.expect(AssertionError.class);"},{"lineNumber":82,"author":{"gitID":"shanwpf"},"content":"        partTimeManager.resetData(newData);"},{"lineNumber":83,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":84,"author":{"gitID":"shanwpf"},"content":"    //@@author"},{"lineNumber":85,"author":{"gitID":"-"},"content":""},{"lineNumber":86,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":87,"author":{"gitID":"-"},"content":"    public void getEmployeeList_modifyList_throwsUnsupportedOperationException() {"},{"lineNumber":88,"author":{"gitID":"-"},"content":"        thrown.expect(UnsupportedOperationException.class);"},{"lineNumber":89,"author":{"gitID":"-"},"content":"        partTimeManager.getEmployeeList().remove(0);"},{"lineNumber":90,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":91,"author":{"gitID":"-"},"content":""},{"lineNumber":92,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":93,"author":{"gitID":"-"},"content":"    public void getTagList_modifyList_throwsUnsupportedOperationException() {"},{"lineNumber":94,"author":{"gitID":"-"},"content":"        thrown.expect(UnsupportedOperationException.class);"},{"lineNumber":95,"author":{"gitID":"-"},"content":"        partTimeManager.getTagList().remove(0);"},{"lineNumber":96,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":97,"author":{"gitID":"-"},"content":""},{"lineNumber":98,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":99,"author":{"gitID":"-"},"content":"    public void removeTagFromAllEmployees_tagNonExisting_partTimeManagerNoChange() {"},{"lineNumber":100,"author":{"gitID":"-"},"content":"        partTimeManagerWithAliceAndBenson.removeTagFromAllEmployees(new Tag(\"NoSuchTag\"));"},{"lineNumber":101,"author":{"gitID":"-"},"content":""},{"lineNumber":102,"author":{"gitID":"-"},"content":"        PartTimeManager expectedPartTimeManager \u003d new PartTimeManagerBuilder().withEmployee(ALICE)"},{"lineNumber":103,"author":{"gitID":"-"},"content":"                .withEmployee(BENSON).build();"},{"lineNumber":104,"author":{"gitID":"-"},"content":""},{"lineNumber":105,"author":{"gitID":"-"},"content":"        assertEquals(expectedPartTimeManager, partTimeManagerWithAliceAndBenson);"},{"lineNumber":106,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":107,"author":{"gitID":"-"},"content":""},{"lineNumber":108,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":109,"author":{"gitID":"-"},"content":"    public void removeTagFromAllEmployees_tagExistInMultipleEmployees_tagChanged() {"},{"lineNumber":110,"author":{"gitID":"-"},"content":"        partTimeManagerWithAliceAndBenson.removeTagFromAllEmployees(new Tag(\"friends\"));"},{"lineNumber":111,"author":{"gitID":"-"},"content":""},{"lineNumber":112,"author":{"gitID":"-"},"content":"        Employee aliceWithoutFriendTag \u003d new EmployeeBuilder(ALICE).withTags().build();"},{"lineNumber":113,"author":{"gitID":"-"},"content":"        Employee bensonWithoutFriendTag \u003d new EmployeeBuilder(BENSON).withTags(\"owesMoney\").build();"},{"lineNumber":114,"author":{"gitID":"-"},"content":"        PartTimeManager expectedPartTimeManager \u003d new PartTimeManagerBuilder().withEmployee(aliceWithoutFriendTag)"},{"lineNumber":115,"author":{"gitID":"-"},"content":"                .withEmployee(bensonWithoutFriendTag).build();"},{"lineNumber":116,"author":{"gitID":"-"},"content":""},{"lineNumber":117,"author":{"gitID":"-"},"content":"        assertEquals(expectedPartTimeManager, partTimeManagerWithAliceAndBenson);"},{"lineNumber":118,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":119,"author":{"gitID":"-"},"content":""},{"lineNumber":120,"author":{"gitID":"SunBangjie"},"content":"    //@@author SunBangjie"},{"lineNumber":121,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":122,"author":{"gitID":"SunBangjie"},"content":"    public void encryptLocalStorage_dataNotEncrypted_encryptSuccessfully() {"},{"lineNumber":123,"author":{"gitID":"SunBangjie"},"content":"        partTimeManager.encryptLocalStorage();"},{"lineNumber":124,"author":{"gitID":"SunBangjie"},"content":"        assertTrue(partTimeManager.getOutletInformation().getEncryptionMode());"},{"lineNumber":125,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":126,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":127,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":128,"author":{"gitID":"SunBangjie"},"content":"    public void decryptLocalStorage_dataEncrypted_decryptSuccessfully() {"},{"lineNumber":129,"author":{"gitID":"SunBangjie"},"content":"        partTimeManager.encryptLocalStorage();"},{"lineNumber":130,"author":{"gitID":"SunBangjie"},"content":"        partTimeManager.decryptLocalStorage();"},{"lineNumber":131,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(partTimeManager.getOutletInformation().getEncryptionMode());"},{"lineNumber":132,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":133,"author":{"gitID":"SunBangjie"},"content":"    //@@author"},{"lineNumber":134,"author":{"gitID":"-"},"content":""},{"lineNumber":135,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":136,"author":{"gitID":"-"},"content":"     * A stub ReadOnlyPartTimeManager whose employees and tags lists can violate interface constraints."},{"lineNumber":137,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":138,"author":{"gitID":"-"},"content":"    private static class PartTimeManagerStub implements ReadOnlyPartTimeManager {"},{"lineNumber":139,"author":{"gitID":"-"},"content":"        private final ObservableList\u003cEmployee\u003e employees \u003d FXCollections.observableArrayList();"},{"lineNumber":140,"author":{"gitID":"-"},"content":"        private final ObservableList\u003cShift\u003e shifts \u003d FXCollections.observableArrayList();"},{"lineNumber":141,"author":{"gitID":"-"},"content":"        private final ObservableList\u003cTag\u003e tags \u003d FXCollections.observableArrayList();"},{"lineNumber":142,"author":{"gitID":"-"},"content":"        private final OutletInformation outlet;"},{"lineNumber":143,"author":{"gitID":"-"},"content":""},{"lineNumber":144,"author":{"gitID":"-"},"content":"        PartTimeManagerStub(Collection\u003cEmployee\u003e employees, Collection\u003c? extends Tag\u003e tags,"},{"lineNumber":145,"author":{"gitID":"-"},"content":"                            Collection\u003cShift\u003e shifts, OutletInformation outlet) {"},{"lineNumber":146,"author":{"gitID":"-"},"content":"            this.employees.setAll(employees);"},{"lineNumber":147,"author":{"gitID":"-"},"content":"            this.tags.setAll(tags);"},{"lineNumber":148,"author":{"gitID":"-"},"content":"            this.shifts.setAll(shifts);"},{"lineNumber":149,"author":{"gitID":"-"},"content":"            this.outlet \u003d outlet;"},{"lineNumber":150,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":151,"author":{"gitID":"-"},"content":""},{"lineNumber":152,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":153,"author":{"gitID":"-"},"content":"        public ObservableList\u003cEmployee\u003e getEmployeeList() {"},{"lineNumber":154,"author":{"gitID":"-"},"content":"            return employees;"},{"lineNumber":155,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":156,"author":{"gitID":"-"},"content":""},{"lineNumber":157,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":158,"author":{"gitID":"-"},"content":"        public ObservableList\u003cShift\u003e getShiftList() {"},{"lineNumber":159,"author":{"gitID":"-"},"content":"            return shifts;"},{"lineNumber":160,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":161,"author":{"gitID":"-"},"content":""},{"lineNumber":162,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":163,"author":{"gitID":"-"},"content":"        public ObservableList\u003cTag\u003e getTagList() {"},{"lineNumber":164,"author":{"gitID":"-"},"content":"            return tags;"},{"lineNumber":165,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":166,"author":{"gitID":"-"},"content":""},{"lineNumber":167,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":168,"author":{"gitID":"-"},"content":"        public OutletInformation getOutletInformation() {"},{"lineNumber":169,"author":{"gitID":"-"},"content":"            return outlet;"},{"lineNumber":170,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":171,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":172,"author":{"gitID":"-"},"content":""},{"lineNumber":173,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"shanwpf":13,"-":146,"SunBangjie":14}},{"path":"src/test/java/seedu/ptman/model/shift/ShiftTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.model.shift;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertNotEquals;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.ALICE;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.BOB;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.exceptions.DuplicateEmployeeException;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.exceptions.ShiftFullException;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.Assert;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.ShiftBuilder;"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"shanwpf"},"content":"//@@author shanwpf"},{"lineNumber":20,"author":{"gitID":"shanwpf"},"content":"public class ShiftTest {"},{"lineNumber":21,"author":{"gitID":"shanwpf"},"content":"    @Rule"},{"lineNumber":22,"author":{"gitID":"shanwpf"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":23,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":24,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":25,"author":{"gitID":"shanwpf"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":26,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e"},{"lineNumber":27,"author":{"gitID":"shanwpf"},"content":"                new Shift(null, null, null, null)"},{"lineNumber":28,"author":{"gitID":"shanwpf"},"content":"        );"},{"lineNumber":29,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e"},{"lineNumber":30,"author":{"gitID":"shanwpf"},"content":"                new Shift(new Date(\"19-03-18\"), new Time(\"1000\"), null, null)"},{"lineNumber":31,"author":{"gitID":"shanwpf"},"content":"        );"},{"lineNumber":32,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":34,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":35,"author":{"gitID":"shanwpf"},"content":"    public void setEmployees() throws DuplicateEmployeeException, ShiftFullException {"},{"lineNumber":36,"author":{"gitID":"shanwpf"},"content":"        Shift shift \u003d new ShiftBuilder().build();"},{"lineNumber":37,"author":{"gitID":"shanwpf"},"content":"        shift.addEmployee(ALICE);"},{"lineNumber":38,"author":{"gitID":"shanwpf"},"content":"        shift.addEmployee(BOB);"},{"lineNumber":39,"author":{"gitID":"shanwpf"},"content":"        Shift other \u003d new ShiftBuilder().build();"},{"lineNumber":40,"author":{"gitID":"shanwpf"},"content":"        other.setEmployees(shift);"},{"lineNumber":41,"author":{"gitID":"shanwpf"},"content":"        assertTrue(other.contains(ALICE));"},{"lineNumber":42,"author":{"gitID":"shanwpf"},"content":"        assertTrue(other.contains(BOB));"},{"lineNumber":43,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":45,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"shanwpf"},"content":"    public void isFull_shiftFull_returnsTrue() throws ShiftFullException, DuplicateEmployeeException {"},{"lineNumber":47,"author":{"gitID":"shanwpf"},"content":"        Shift shift \u003d new ShiftBuilder().withCapacity(\"1\").build();"},{"lineNumber":48,"author":{"gitID":"shanwpf"},"content":"        shift.addEmployee(ALICE);"},{"lineNumber":49,"author":{"gitID":"shanwpf"},"content":"        assertTrue(shift.isFull());"},{"lineNumber":50,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":51,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":52,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":53,"author":{"gitID":"shanwpf"},"content":"    public void isFull_shiftNotFull_returnsFalse() throws ShiftFullException, DuplicateEmployeeException {"},{"lineNumber":54,"author":{"gitID":"shanwpf"},"content":"        Shift shift \u003d new ShiftBuilder().withCapacity(\"2\").build();"},{"lineNumber":55,"author":{"gitID":"shanwpf"},"content":"        shift.addEmployee(ALICE);"},{"lineNumber":56,"author":{"gitID":"shanwpf"},"content":"        assertFalse(shift.isFull());"},{"lineNumber":57,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":58,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":59,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":60,"author":{"gitID":"shanwpf"},"content":"    public void addEmployee_shiftFull_throwsShiftFullException() throws ShiftFullException, DuplicateEmployeeException {"},{"lineNumber":61,"author":{"gitID":"shanwpf"},"content":"        Shift shift \u003d new ShiftBuilder().withCapacity(\"1\").build();"},{"lineNumber":62,"author":{"gitID":"shanwpf"},"content":"        shift.addEmployee(ALICE);"},{"lineNumber":63,"author":{"gitID":"shanwpf"},"content":"        thrown.expect(ShiftFullException.class);"},{"lineNumber":64,"author":{"gitID":"shanwpf"},"content":"        shift.addEmployee(BOB);"},{"lineNumber":65,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":66,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":67,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":68,"author":{"gitID":"shanwpf"},"content":"    public void equals_sameShift_returnsTrue() throws DuplicateEmployeeException, ShiftFullException {"},{"lineNumber":69,"author":{"gitID":"shanwpf"},"content":"        Shift shift1 \u003d new ShiftBuilder().withDate(\"19-03-18\")"},{"lineNumber":70,"author":{"gitID":"shanwpf"},"content":"                .withCapacity(\"4\")"},{"lineNumber":71,"author":{"gitID":"shanwpf"},"content":"                .withStartTime(\"1200\")"},{"lineNumber":72,"author":{"gitID":"shanwpf"},"content":"                .withEndTime(\"1600\").build();"},{"lineNumber":73,"author":{"gitID":"shanwpf"},"content":"        Shift shift2 \u003d new ShiftBuilder().withDate(\"19-03-18\")"},{"lineNumber":74,"author":{"gitID":"shanwpf"},"content":"                .withCapacity(\"4\")"},{"lineNumber":75,"author":{"gitID":"shanwpf"},"content":"                .withStartTime(\"1200\")"},{"lineNumber":76,"author":{"gitID":"shanwpf"},"content":"                .withEndTime(\"1600\").build();"},{"lineNumber":77,"author":{"gitID":"shanwpf"},"content":"        shift1.addEmployee(ALICE);"},{"lineNumber":78,"author":{"gitID":"shanwpf"},"content":"        shift2.addEmployee(ALICE);"},{"lineNumber":79,"author":{"gitID":"shanwpf"},"content":"        assertEquals(shift1, shift2);"},{"lineNumber":80,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":81,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":82,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":83,"author":{"gitID":"shanwpf"},"content":"    public void hashCode_sameShift_sameHashCode() {"},{"lineNumber":84,"author":{"gitID":"shanwpf"},"content":"        Shift shift1 \u003d new ShiftBuilder().withDate(\"19-03-18\")"},{"lineNumber":85,"author":{"gitID":"shanwpf"},"content":"                .withCapacity(\"4\")"},{"lineNumber":86,"author":{"gitID":"shanwpf"},"content":"                .withStartTime(\"1200\")"},{"lineNumber":87,"author":{"gitID":"shanwpf"},"content":"                .withEndTime(\"1600\").build();"},{"lineNumber":88,"author":{"gitID":"shanwpf"},"content":"        Shift shift2 \u003d new ShiftBuilder().withDate(\"19-03-18\")"},{"lineNumber":89,"author":{"gitID":"shanwpf"},"content":"                .withCapacity(\"4\")"},{"lineNumber":90,"author":{"gitID":"shanwpf"},"content":"                .withStartTime(\"1200\")"},{"lineNumber":91,"author":{"gitID":"shanwpf"},"content":"                .withEndTime(\"1600\").build();"},{"lineNumber":92,"author":{"gitID":"shanwpf"},"content":"        assertEquals(shift1.hashCode(), shift2.hashCode());"},{"lineNumber":93,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":94,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":95,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":96,"author":{"gitID":"shanwpf"},"content":"    public void hashCode_differentShift_differentHashCode() {"},{"lineNumber":97,"author":{"gitID":"shanwpf"},"content":"        Shift shift1 \u003d new ShiftBuilder().withDate(\"12-03-18\")"},{"lineNumber":98,"author":{"gitID":"shanwpf"},"content":"                .withCapacity(\"4\")"},{"lineNumber":99,"author":{"gitID":"shanwpf"},"content":"                .withStartTime(\"1200\")"},{"lineNumber":100,"author":{"gitID":"shanwpf"},"content":"                .withEndTime(\"1600\").build();"},{"lineNumber":101,"author":{"gitID":"shanwpf"},"content":"        Shift shift2 \u003d new ShiftBuilder().withDate(\"19-03-18\")"},{"lineNumber":102,"author":{"gitID":"shanwpf"},"content":"                .withCapacity(\"4\")"},{"lineNumber":103,"author":{"gitID":"shanwpf"},"content":"                .withStartTime(\"1200\")"},{"lineNumber":104,"author":{"gitID":"shanwpf"},"content":"                .withEndTime(\"1600\").build();"},{"lineNumber":105,"author":{"gitID":"shanwpf"},"content":"        assertNotEquals(shift1.hashCode(), shift2.hashCode());"},{"lineNumber":106,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":107,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":108,"author":{"gitID":"shanwpf"},"content":"}"}],"authorContributionMap":{"shanwpf":90,"-":18}},{"path":"src/test/java/seedu/ptman/model/shift/DateTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.model.shift;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertNotEquals;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.time.LocalDate;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.Assert;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"shanwpf"},"content":"//@@author shanwpf"},{"lineNumber":15,"author":{"gitID":"shanwpf"},"content":"public class DateTest {"},{"lineNumber":16,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":17,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"shanwpf"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":19,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Date((String) null));"},{"lineNumber":20,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Date((LocalDate) null));"},{"lineNumber":21,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":22,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":23,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":24,"author":{"gitID":"shanwpf"},"content":"    public void constructor_invalidDate_throwsIllegalArgumentException() {"},{"lineNumber":25,"author":{"gitID":"shanwpf"},"content":"        String invalidDate \u003d \"\";"},{"lineNumber":26,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Date(invalidDate));"},{"lineNumber":27,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":28,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":29,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":30,"author":{"gitID":"shanwpf"},"content":"    public void isValidDate_nullDate_throwsNullPointerException() {"},{"lineNumber":31,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Date.isValidDate(null));"},{"lineNumber":32,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":34,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":35,"author":{"gitID":"shanwpf"},"content":"    public void isValidDate_invalidDate_returnsFalse() {"},{"lineNumber":36,"author":{"gitID":"shanwpf"},"content":"        assertFalse(Date.isValidDate(\"\")); // empty string"},{"lineNumber":37,"author":{"gitID":"shanwpf"},"content":"        assertFalse(Date.isValidDate(\" \")); // spaces only"},{"lineNumber":38,"author":{"gitID":"shanwpf"},"content":"        assertFalse(Date.isValidDate(\"^\")); // only non-alphanumeric characters"},{"lineNumber":39,"author":{"gitID":"shanwpf"},"content":"        assertFalse(Date.isValidDate(\"11-11\")); // invalid date"},{"lineNumber":40,"author":{"gitID":"shanwpf"},"content":"        assertFalse(Date.isValidDate(\"12-13-18\")); // invalid Date"},{"lineNumber":41,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":42,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":43,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":44,"author":{"gitID":"shanwpf"},"content":"    public void isValidDate_validDate_returnsTrue() {"},{"lineNumber":45,"author":{"gitID":"shanwpf"},"content":"        assertTrue(Date.isValidDate(\"12-12-18\"));"},{"lineNumber":46,"author":{"gitID":"shanwpf"},"content":"        assertTrue(Date.isValidDate(\"01-01-19\"));"},{"lineNumber":47,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":48,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":49,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":50,"author":{"gitID":"shanwpf"},"content":"    public void toString_sameValue_returnsTrue() {"},{"lineNumber":51,"author":{"gitID":"shanwpf"},"content":"        Date date \u003d new Date(\"10-10-18\");"},{"lineNumber":52,"author":{"gitID":"shanwpf"},"content":"        assertEquals(date.toString(), \"10-10-18\");"},{"lineNumber":53,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":54,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":55,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":56,"author":{"gitID":"shanwpf"},"content":"    public void equals_null_returnsFalse() {"},{"lineNumber":57,"author":{"gitID":"shanwpf"},"content":"        Date test \u003d new Date(\"10-10-18\");"},{"lineNumber":58,"author":{"gitID":"shanwpf"},"content":"        assertFalse(test.equals(null));"},{"lineNumber":59,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":60,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":61,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":62,"author":{"gitID":"shanwpf"},"content":"    public void equals_sameValue_returnsTrue() {"},{"lineNumber":63,"author":{"gitID":"shanwpf"},"content":"        Date test \u003d new Date(\"10-10-18\");"},{"lineNumber":64,"author":{"gitID":"shanwpf"},"content":"        Date other \u003d new Date(\"10-10-18\");"},{"lineNumber":65,"author":{"gitID":"shanwpf"},"content":"        assertTrue(test.equals(other));"},{"lineNumber":66,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":67,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":68,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":69,"author":{"gitID":"shanwpf"},"content":"    public void equals_differentValue_returnsFalse() {"},{"lineNumber":70,"author":{"gitID":"shanwpf"},"content":"        Date test \u003d new Date(\"12-10-10\");"},{"lineNumber":71,"author":{"gitID":"shanwpf"},"content":"        Date other \u003d new Date(\"11-01-11\");"},{"lineNumber":72,"author":{"gitID":"shanwpf"},"content":"        assertFalse(test.equals(other));"},{"lineNumber":73,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":74,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":75,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":76,"author":{"gitID":"shanwpf"},"content":"    public void hashCode_sameDate_sameHashCode() {"},{"lineNumber":77,"author":{"gitID":"shanwpf"},"content":"        Date test \u003d new Date(\"11-11-18\");"},{"lineNumber":78,"author":{"gitID":"shanwpf"},"content":"        Date test1 \u003d new Date(\"11-11-18\");"},{"lineNumber":79,"author":{"gitID":"shanwpf"},"content":"        assertEquals(test.hashCode(), test1.hashCode());"},{"lineNumber":80,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":81,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":82,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":83,"author":{"gitID":"shanwpf"},"content":"    public void hashCode_differentDate_differentHashCode() {"},{"lineNumber":84,"author":{"gitID":"shanwpf"},"content":"        Date test \u003d new Date(\"11-11-18\");"},{"lineNumber":85,"author":{"gitID":"shanwpf"},"content":"        Date test1 \u003d new Date(\"11-12-18\");"},{"lineNumber":86,"author":{"gitID":"shanwpf"},"content":"        assertNotEquals(test.hashCode(), test1.hashCode());"},{"lineNumber":87,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":88,"author":{"gitID":"shanwpf"},"content":"}"}],"authorContributionMap":{"shanwpf":75,"-":13}},{"path":"src/test/java/seedu/ptman/model/shift/CapacityTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.model.shift;"},{"lineNumber":2,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":3,"author":{"gitID":"koo1993"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.Assert;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"shanwpf"},"content":"//@@author shanwpf"},{"lineNumber":12,"author":{"gitID":"shanwpf"},"content":"public class CapacityTest {"},{"lineNumber":13,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":14,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":15,"author":{"gitID":"shanwpf"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":16,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Capacity(null));"},{"lineNumber":17,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":18,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":19,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":20,"author":{"gitID":"shanwpf"},"content":"    public void constructor_invalidCapacity_throwsIllegalArgumentException() {"},{"lineNumber":21,"author":{"gitID":"shanwpf"},"content":"        String invalidCapacity \u003d \"w\";"},{"lineNumber":22,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Capacity(invalidCapacity));"},{"lineNumber":23,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":24,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":25,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":26,"author":{"gitID":"shanwpf"},"content":"    public void isValidCapacity_nullCapacity_throwsNullPointerException() {"},{"lineNumber":27,"author":{"gitID":"shanwpf"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Capacity.isValidCapacity(null));"},{"lineNumber":28,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":29,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":30,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":31,"author":{"gitID":"shanwpf"},"content":"    public void isValidCapacity_invalidCapacity_returnsFalse() {"},{"lineNumber":32,"author":{"gitID":"shanwpf"},"content":"        assertFalse(Capacity.isValidCapacity(\"\")); // empty string"},{"lineNumber":33,"author":{"gitID":"shanwpf"},"content":"        assertFalse(Capacity.isValidCapacity(\" \")); // spaces only"},{"lineNumber":34,"author":{"gitID":"shanwpf"},"content":"        assertFalse(Capacity.isValidCapacity(\"^\")); // only non-numeric characters"},{"lineNumber":35,"author":{"gitID":"shanwpf"},"content":"        assertFalse(Capacity.isValidCapacity(\"3*\")); // contains non-numeric characters"},{"lineNumber":36,"author":{"gitID":"shanwpf"},"content":"        assertFalse(Capacity.isValidCapacity(\"-3\")); // only negative numeric string"},{"lineNumber":37,"author":{"gitID":"shanwpf"},"content":"        assertFalse(Capacity.isValidCapacity(\"0\")); // only zero"},{"lineNumber":38,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":40,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":41,"author":{"gitID":"shanwpf"},"content":"    public void isValidCapacity_validCapacity_returnsTrue() {"},{"lineNumber":42,"author":{"gitID":"shanwpf"},"content":"        assertTrue(Capacity.isValidCapacity(\"4\")); // positive integer only"},{"lineNumber":43,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":45,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"shanwpf"},"content":"    public void toString_sameValue_returnsTrue() {"},{"lineNumber":47,"author":{"gitID":"shanwpf"},"content":"        Capacity test \u003d new Capacity(\"5\");"},{"lineNumber":48,"author":{"gitID":"shanwpf"},"content":"        assertEquals(test.toString(), \"5\");"},{"lineNumber":49,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":51,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":52,"author":{"gitID":"shanwpf"},"content":"    public void equals_sameValue_returnsTrue() {"},{"lineNumber":53,"author":{"gitID":"shanwpf"},"content":"        Capacity test \u003d new Capacity(\"5\");"},{"lineNumber":54,"author":{"gitID":"shanwpf"},"content":"        Capacity other \u003d new Capacity(\"5\");"},{"lineNumber":55,"author":{"gitID":"shanwpf"},"content":"        assertTrue(test.equals(other));"},{"lineNumber":56,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":58,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":59,"author":{"gitID":"shanwpf"},"content":"    public void equals_differentValue_returnsFalse() {"},{"lineNumber":60,"author":{"gitID":"shanwpf"},"content":"        Capacity test \u003d new Capacity(\"5\");"},{"lineNumber":61,"author":{"gitID":"shanwpf"},"content":"        Capacity other \u003d new Capacity(\"3\");"},{"lineNumber":62,"author":{"gitID":"shanwpf"},"content":"        assertFalse(test.equals(other));"},{"lineNumber":63,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":65,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":66,"author":{"gitID":"shanwpf"},"content":"    public void hashCode_sameValue_returnsTrue() {"},{"lineNumber":67,"author":{"gitID":"shanwpf"},"content":"        Capacity test \u003d new Capacity(\"4\");"},{"lineNumber":68,"author":{"gitID":"shanwpf"},"content":"        assertEquals(test.hashCode(), new Integer(4).hashCode());"},{"lineNumber":69,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":70,"author":{"gitID":"shanwpf"},"content":"}"}],"authorContributionMap":{"shanwpf":60,"koo1993":2,"-":8}},{"path":"src/test/java/seedu/ptman/model/shift/UniqueShiftListTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.model.shift;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.Assert.assertThrows;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalShifts.SHIFT_MONDAY_AM;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalShifts.SHIFT_MONDAY_PM;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalShifts.SHIFT_TUESDAY_AM;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.exceptions.DuplicateShiftException;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.exceptions.ShiftNotFoundException;"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"shanwpf"},"content":"//@@author shanwpf"},{"lineNumber":21,"author":{"gitID":"shanwpf"},"content":"public class UniqueShiftListTest {"},{"lineNumber":22,"author":{"gitID":"shanwpf"},"content":"    @Rule"},{"lineNumber":23,"author":{"gitID":"shanwpf"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":24,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":25,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":26,"author":{"gitID":"shanwpf"},"content":"    public void setShift_shiftDoesNotExist_throwsShiftNotFoundException() {"},{"lineNumber":27,"author":{"gitID":"shanwpf"},"content":"        UniqueShiftList uniqueShiftList \u003d new UniqueShiftList();"},{"lineNumber":28,"author":{"gitID":"shanwpf"},"content":"        assertThrows(ShiftNotFoundException.class, () -\u003e {"},{"lineNumber":29,"author":{"gitID":"shanwpf"},"content":"            uniqueShiftList.setShift(SHIFT_MONDAY_AM, SHIFT_MONDAY_PM);"},{"lineNumber":30,"author":{"gitID":"shanwpf"},"content":"        });"},{"lineNumber":31,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":32,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":33,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":34,"author":{"gitID":"shanwpf"},"content":"    public void setShift_editedShiftExists_throwsDuplicateShiftException()"},{"lineNumber":35,"author":{"gitID":"shanwpf"},"content":"            throws DuplicateShiftException {"},{"lineNumber":36,"author":{"gitID":"shanwpf"},"content":"        UniqueShiftList uniqueShiftList \u003d new UniqueShiftList();"},{"lineNumber":37,"author":{"gitID":"shanwpf"},"content":"        uniqueShiftList.add(SHIFT_MONDAY_AM);"},{"lineNumber":38,"author":{"gitID":"shanwpf"},"content":"        uniqueShiftList.add(SHIFT_MONDAY_PM);"},{"lineNumber":39,"author":{"gitID":"shanwpf"},"content":"        assertThrows(DuplicateShiftException.class, () -\u003e {"},{"lineNumber":40,"author":{"gitID":"shanwpf"},"content":"            uniqueShiftList.setShift(SHIFT_MONDAY_AM, SHIFT_MONDAY_PM);"},{"lineNumber":41,"author":{"gitID":"shanwpf"},"content":"        });"},{"lineNumber":42,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":43,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":44,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":45,"author":{"gitID":"shanwpf"},"content":"    public void setShift_validShifts_shiftReplaced()"},{"lineNumber":46,"author":{"gitID":"shanwpf"},"content":"            throws DuplicateShiftException, ShiftNotFoundException {"},{"lineNumber":47,"author":{"gitID":"shanwpf"},"content":"        UniqueShiftList uniqueShiftList \u003d new UniqueShiftList();"},{"lineNumber":48,"author":{"gitID":"shanwpf"},"content":"        uniqueShiftList.add(SHIFT_MONDAY_AM);"},{"lineNumber":49,"author":{"gitID":"shanwpf"},"content":"        uniqueShiftList.add(SHIFT_MONDAY_PM);"},{"lineNumber":50,"author":{"gitID":"shanwpf"},"content":"        uniqueShiftList.setShift(SHIFT_MONDAY_AM, SHIFT_TUESDAY_AM);"},{"lineNumber":51,"author":{"gitID":"shanwpf"},"content":"        assertFalse(uniqueShiftList.contains(SHIFT_MONDAY_AM));"},{"lineNumber":52,"author":{"gitID":"shanwpf"},"content":"        assertTrue(uniqueShiftList.contains(SHIFT_TUESDAY_AM));"},{"lineNumber":53,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":54,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":55,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":56,"author":{"gitID":"shanwpf"},"content":"    public void setShifts_validShifts_shiftsReplaced() throws DuplicateShiftException {"},{"lineNumber":57,"author":{"gitID":"shanwpf"},"content":"        UniqueShiftList uniqueShiftList \u003d new UniqueShiftList();"},{"lineNumber":58,"author":{"gitID":"shanwpf"},"content":"        List\u003cShift\u003e shiftList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":59,"author":{"gitID":"shanwpf"},"content":"        shiftList.add(SHIFT_MONDAY_AM);"},{"lineNumber":60,"author":{"gitID":"shanwpf"},"content":"        shiftList.add(SHIFT_MONDAY_PM);"},{"lineNumber":61,"author":{"gitID":"shanwpf"},"content":"        shiftList.add(SHIFT_TUESDAY_AM);"},{"lineNumber":62,"author":{"gitID":"shanwpf"},"content":"        uniqueShiftList.setShifts(shiftList);"},{"lineNumber":63,"author":{"gitID":"shanwpf"},"content":"        assertTrue(uniqueShiftList.contains(SHIFT_MONDAY_AM));"},{"lineNumber":64,"author":{"gitID":"shanwpf"},"content":"        assertTrue(uniqueShiftList.contains(SHIFT_MONDAY_PM));"},{"lineNumber":65,"author":{"gitID":"shanwpf"},"content":"        assertTrue(uniqueShiftList.contains(SHIFT_TUESDAY_AM));"},{"lineNumber":66,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":67,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":68,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":69,"author":{"gitID":"shanwpf"},"content":"    public void equals_sameUniqueShiftLists_returnsTrue() throws DuplicateShiftException {"},{"lineNumber":70,"author":{"gitID":"shanwpf"},"content":"        UniqueShiftList uniqueShiftList1 \u003d new UniqueShiftList();"},{"lineNumber":71,"author":{"gitID":"shanwpf"},"content":"        UniqueShiftList uniqueShiftList2 \u003d new UniqueShiftList();"},{"lineNumber":72,"author":{"gitID":"shanwpf"},"content":"        uniqueShiftList1.add(SHIFT_MONDAY_AM);"},{"lineNumber":73,"author":{"gitID":"shanwpf"},"content":"        uniqueShiftList2.add(SHIFT_MONDAY_AM);"},{"lineNumber":74,"author":{"gitID":"shanwpf"},"content":"        assertTrue(uniqueShiftList1.equals(uniqueShiftList2));"},{"lineNumber":75,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":76,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":77,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":78,"author":{"gitID":"shanwpf"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {"},{"lineNumber":79,"author":{"gitID":"shanwpf"},"content":"        UniqueShiftList uniqueShiftList \u003d new UniqueShiftList();"},{"lineNumber":80,"author":{"gitID":"shanwpf"},"content":"        thrown.expect(UnsupportedOperationException.class);"},{"lineNumber":81,"author":{"gitID":"shanwpf"},"content":"        uniqueShiftList.asObservableList().remove(0);"},{"lineNumber":82,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":83,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":84,"author":{"gitID":"shanwpf"},"content":"    @Test"},{"lineNumber":85,"author":{"gitID":"shanwpf"},"content":"    public void remove_shiftDoesNotExist_throwsShiftNotFoundException() {"},{"lineNumber":86,"author":{"gitID":"shanwpf"},"content":"        UniqueShiftList uniqueShiftList \u003d new UniqueShiftList();"},{"lineNumber":87,"author":{"gitID":"shanwpf"},"content":"        assertThrows(ShiftNotFoundException.class, () -\u003e uniqueShiftList.remove(SHIFT_MONDAY_AM));"},{"lineNumber":88,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":89,"author":{"gitID":"shanwpf"},"content":"}"}],"authorContributionMap":{"shanwpf":70,"-":19}},{"path":"src/test/java/seedu/ptman/model/outlet/NameTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.model.outlet;"},{"lineNumber":2,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":3,"author":{"gitID":"koo1993"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.Assert;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":12,"author":{"gitID":"SunBangjie"},"content":"public class NameTest {"},{"lineNumber":13,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":14,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":15,"author":{"gitID":"SunBangjie"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":16,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new OutletName(null));"},{"lineNumber":17,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":18,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":19,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":20,"author":{"gitID":"SunBangjie"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {"},{"lineNumber":21,"author":{"gitID":"SunBangjie"},"content":"        String invalidName \u003d \"\";"},{"lineNumber":22,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new OutletName(invalidName));"},{"lineNumber":23,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":24,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":25,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":26,"author":{"gitID":"SunBangjie"},"content":"    public void isValidName_nullName_throwsNullPointerException() {"},{"lineNumber":27,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e OutletName.isValidName(null));"},{"lineNumber":28,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":29,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":30,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":31,"author":{"gitID":"SunBangjie"},"content":"    public void isValidName_invalidName_returnsFalse() {"},{"lineNumber":32,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OutletName.isValidName(\"\")); // empty string"},{"lineNumber":33,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OutletName.isValidName(\" \")); // spaces only"},{"lineNumber":34,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OutletName.isValidName(\"^\")); // only non-alphanumeric characters"},{"lineNumber":35,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OutletName.isValidName(\"coffee*\")); // contains non-alphanumeric characters"},{"lineNumber":36,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":37,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":38,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":39,"author":{"gitID":"SunBangjie"},"content":"    public void isValidName_validName_returnsTrue() {"},{"lineNumber":40,"author":{"gitID":"SunBangjie"},"content":"        assertTrue(OutletName.isValidName(\"cool coffee\")); // alphabets only"},{"lineNumber":41,"author":{"gitID":"SunBangjie"},"content":"        assertTrue(OutletName.isValidName(\"12345\")); // numbers only"},{"lineNumber":42,"author":{"gitID":"SunBangjie"},"content":"        assertTrue(OutletName.isValidName(\"cool coffee 3rd branch\")); // alphanumeric characters"},{"lineNumber":43,"author":{"gitID":"SunBangjie"},"content":"        assertTrue(OutletName.isValidName(\"Cool Coffee\")); // with capital letters"},{"lineNumber":44,"author":{"gitID":"SunBangjie"},"content":"        assertTrue(OutletName.isValidName(\"The Best and Coolest Coffee in the World\")); // long names"},{"lineNumber":45,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":47,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":48,"author":{"gitID":"SunBangjie"},"content":"    public void toString_sameValue_returnsTrue() {"},{"lineNumber":49,"author":{"gitID":"SunBangjie"},"content":"        OutletName test \u003d new OutletName(\"Cool Coffee\");"},{"lineNumber":50,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(test.toString(), \"Cool Coffee\");"},{"lineNumber":51,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":53,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":54,"author":{"gitID":"SunBangjie"},"content":"    public void equals_sameValue_returnsTrue() {"},{"lineNumber":55,"author":{"gitID":"SunBangjie"},"content":"        OutletName test \u003d new OutletName(\"Cool Coffee\");"},{"lineNumber":56,"author":{"gitID":"SunBangjie"},"content":"        OutletName other \u003d new OutletName(\"Cool Coffee\");"},{"lineNumber":57,"author":{"gitID":"SunBangjie"},"content":"        assertTrue(test.equals(other));"},{"lineNumber":58,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":59,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":60,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":61,"author":{"gitID":"SunBangjie"},"content":"    public void equals_differentValue_returnsFalse() {"},{"lineNumber":62,"author":{"gitID":"SunBangjie"},"content":"        OutletName test \u003d new OutletName(\"Cool Coffee\");"},{"lineNumber":63,"author":{"gitID":"SunBangjie"},"content":"        OutletName other \u003d new OutletName(\"Coolest Coffee\");"},{"lineNumber":64,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(test.equals(other));"},{"lineNumber":65,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":66,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":67,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":68,"author":{"gitID":"SunBangjie"},"content":"    public void hashCode_sameFullName_returnsTrue() {"},{"lineNumber":69,"author":{"gitID":"SunBangjie"},"content":"        OutletName test \u003d new OutletName(\"Cool Coffee\");"},{"lineNumber":70,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(test.hashCode(), \"Cool Coffee\".hashCode());"},{"lineNumber":71,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":72,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"koo1993":2,"-":8,"SunBangjie":62}},{"path":"src/test/java/seedu/ptman/model/outlet/OutletEmailTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.model.outlet;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.Assert;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":11,"author":{"gitID":"SunBangjie"},"content":"public class OutletEmailTest {"},{"lineNumber":12,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":13,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":14,"author":{"gitID":"SunBangjie"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":15,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new OutletEmail(null));"},{"lineNumber":16,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":17,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":18,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":19,"author":{"gitID":"SunBangjie"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {"},{"lineNumber":20,"author":{"gitID":"SunBangjie"},"content":"        String invalidEmail \u003d \"\";"},{"lineNumber":21,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new OutletEmail(invalidEmail));"},{"lineNumber":22,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":23,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":24,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":25,"author":{"gitID":"SunBangjie"},"content":"    public void isValidOutletEmail_nullValue_throwsNullPointerException() {"},{"lineNumber":26,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e OutletEmail.isValidOutletEmail(null));"},{"lineNumber":27,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":28,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":29,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":30,"author":{"gitID":"SunBangjie"},"content":"    public void isValidOutletEmail_blankEmails_returnsFalse() {"},{"lineNumber":31,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OutletEmail.isValidOutletEmail(\"\")); // empty string"},{"lineNumber":32,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OutletEmail.isValidOutletEmail(\" \")); // spaces only"},{"lineNumber":33,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":35,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":36,"author":{"gitID":"SunBangjie"},"content":"    public void isValidOutletEmail_missingParts_returnsFalse() {"},{"lineNumber":37,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OutletEmail.isValidOutletEmail(\"@example.com\")); // missing local part"},{"lineNumber":38,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OutletEmail.isValidOutletEmail(\"coolcoffee.com\")); // missing \u0027@\u0027 symbol"},{"lineNumber":39,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OutletEmail.isValidOutletEmail(\"coolcoffee@\")); // missing domain name"},{"lineNumber":40,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":41,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":42,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":43,"author":{"gitID":"SunBangjie"},"content":"    public void isValidOutletEmail_invalidParts_returnsFalse() {"},{"lineNumber":44,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OutletEmail.isValidOutletEmail(\"coolcoffee@-\")); // invalid domain name"},{"lineNumber":45,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OutletEmail.isValidOutletEmail(\"coolcoffee@exam_ple.com\")); // underscore in domain name"},{"lineNumber":46,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OutletEmail.isValidOutletEmail(\"cool coffee@example.com\")); // spaces in local part"},{"lineNumber":47,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OutletEmail.isValidOutletEmail(\"coolcoffee@exam ple.com\")); // spaces in domain name"},{"lineNumber":48,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OutletEmail.isValidOutletEmail(\" coolcoffee@example.com\")); // leading space"},{"lineNumber":49,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OutletEmail.isValidOutletEmail(\"coolcoffee@example.com \")); // trailing space"},{"lineNumber":50,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OutletEmail.isValidOutletEmail(\"coolcoffee@@example.com\")); // double \u0027@\u0027 symbol"},{"lineNumber":51,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OutletEmail.isValidOutletEmail(\"cool@coffee@example.com\")); // \u0027@\u0027 symbol in local part"},{"lineNumber":52,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OutletEmail.isValidOutletEmail(\"coolcoffee@example@com\")); // \u0027@\u0027 symbol in domain name"},{"lineNumber":53,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OutletEmail.isValidOutletEmail(\"coolcoffee@.example.com\")); // domain starts with period"},{"lineNumber":54,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OutletEmail.isValidOutletEmail(\"coolcoffee@example.com.\")); // domain ends with a period"},{"lineNumber":55,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OutletEmail.isValidOutletEmail(\"coolcoffee@-example.com\")); // domain starts with a hyphen"},{"lineNumber":56,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OutletEmail.isValidOutletEmail(\"coolcoffee@example.com-\")); // domain ends with a hyphen"},{"lineNumber":57,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":58,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":59,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":60,"author":{"gitID":"SunBangjie"},"content":"    public void isValidOutletEmail_validEmail_returnsTrue() {"},{"lineNumber":61,"author":{"gitID":"SunBangjie"},"content":"        assertTrue(OutletEmail.isValidOutletEmail(\"CoolCoffee_3433@example.com\"));"},{"lineNumber":62,"author":{"gitID":"SunBangjie"},"content":"        assertTrue(OutletEmail.isValidOutletEmail(\"a@bc\"));  // minimal"},{"lineNumber":63,"author":{"gitID":"SunBangjie"},"content":"        assertTrue(OutletEmail.isValidOutletEmail(\"test@localhost\"));   // alphabets only"},{"lineNumber":64,"author":{"gitID":"SunBangjie"},"content":"        assertTrue(OutletEmail.isValidOutletEmail(\"!#$%\u0026\u0027*+/\u003d?`{|}~^.-@example.org\")); // special characters"},{"lineNumber":65,"author":{"gitID":"SunBangjie"},"content":"        assertTrue(OutletEmail.isValidOutletEmail(\"123@145\"));  // numeric local part and domain name"},{"lineNumber":66,"author":{"gitID":"SunBangjie"},"content":"        // mixture of alphanumeric and special characters"},{"lineNumber":67,"author":{"gitID":"SunBangjie"},"content":"        assertTrue(OutletEmail.isValidOutletEmail(\"a1+be!@example1.com\"));"},{"lineNumber":68,"author":{"gitID":"SunBangjie"},"content":"        // long domain name"},{"lineNumber":69,"author":{"gitID":"SunBangjie"},"content":"        assertTrue(OutletEmail.isValidOutletEmail(\"cool_coffee@very-very-very-long-example.com\"));"},{"lineNumber":70,"author":{"gitID":"SunBangjie"},"content":"        // long local part"},{"lineNumber":71,"author":{"gitID":"SunBangjie"},"content":"        assertTrue(OutletEmail.isValidOutletEmail(\"if.you.dream.it_you.can.do.it@example.com\"));"},{"lineNumber":72,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":9,"SunBangjie":64}},{"path":"src/test/java/seedu/ptman/model/outlet/OperatingHoursTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.model.outlet;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.time.LocalTime;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.Assert;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":15,"author":{"gitID":"SunBangjie"},"content":"public class OperatingHoursTest {"},{"lineNumber":16,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":17,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"SunBangjie"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":19,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new OperatingHours(null));"},{"lineNumber":20,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":22,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":23,"author":{"gitID":"SunBangjie"},"content":"    public void constructor_invalidOperatingHours_throwsIllegalArgumentException() {"},{"lineNumber":24,"author":{"gitID":"SunBangjie"},"content":"        String invalidOperatingHours \u003d \"\";"},{"lineNumber":25,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new OperatingHours(invalidOperatingHours));"},{"lineNumber":26,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":28,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":29,"author":{"gitID":"SunBangjie"},"content":"    public void isValidOperatingHours_nullOperatingHours_throwsNullPointerException() {"},{"lineNumber":30,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e OperatingHours.isValidOperatingHours(null));"},{"lineNumber":31,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":32,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":33,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":34,"author":{"gitID":"SunBangjie"},"content":"    public void isValidOperatingHours_blankOperatingHours_returnsFalse() {"},{"lineNumber":35,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OperatingHours.isValidOperatingHours(\"\")); // empty string"},{"lineNumber":36,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OperatingHours.isValidOperatingHours(\" \")); // spaces only"},{"lineNumber":37,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":39,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":40,"author":{"gitID":"SunBangjie"},"content":"    public void isValidOperatingHours_missingParts_returnsFalse() {"},{"lineNumber":41,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OperatingHours.isValidOperatingHours(\"-22:00\")); // missing start time"},{"lineNumber":42,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OperatingHours.isValidOperatingHours(\"09:00-\")); // missing end time"},{"lineNumber":43,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OperatingHours.isValidOperatingHours(\"-\")); // missing both start and end time"},{"lineNumber":44,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":46,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":47,"author":{"gitID":"SunBangjie"},"content":"    public void isValidOperatingHours_invalidParts_returnsFalse() {"},{"lineNumber":48,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OperatingHours.isValidOperatingHours(\"2500-2200\")); // invalid hour in start time"},{"lineNumber":49,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OperatingHours.isValidOperatingHours(\"09000-2200\")); // more than two numbers of hour"},{"lineNumber":50,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OperatingHours.isValidOperatingHours(\"0999-2200\")); // invalid minute in start time"},{"lineNumber":51,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OperatingHours.isValidOperatingHours(\"09000-2200\")); // more than two numbers of minute"},{"lineNumber":52,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OperatingHours.isValidOperatingHours(\"0900-2500\")); // invalid hour in end time"},{"lineNumber":53,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OperatingHours.isValidOperatingHours(\"0900-22000\")); // more than two numbers of hour"},{"lineNumber":54,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OperatingHours.isValidOperatingHours(\"0900-2299\")); // invalid minute in end time"},{"lineNumber":55,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OperatingHours.isValidOperatingHours(\"0900-22000\")); // more than two numbers of minute"},{"lineNumber":56,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OperatingHours.isValidOperatingHours(\"09.00-2200\")); // invalid \u0027.\u0027 symbol used in start"},{"lineNumber":57,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OperatingHours.isValidOperatingHours(\"09/00-2200\")); // invalid \u0027/\u0027 symbol used in start"},{"lineNumber":58,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OperatingHours.isValidOperatingHours(\"09@00-2200\")); // invalid \u0027@\u0027 symbol used in start"},{"lineNumber":59,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OperatingHours.isValidOperatingHours(\"0900-22.00\")); // invalid \u0027.\u0027 symbol used in end"},{"lineNumber":60,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OperatingHours.isValidOperatingHours(\"0900-22/00\")); // invalid \u0027/\u0027 symbol used in end"},{"lineNumber":61,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OperatingHours.isValidOperatingHours(\"0900-22@00\")); // invalid \u0027@\u0027 symbol used in end"},{"lineNumber":62,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OperatingHours.isValidOperatingHours(\" 0900-2200\")); // leading space"},{"lineNumber":63,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OperatingHours.isValidOperatingHours(\"0900-2200 \")); // trailing space"},{"lineNumber":64,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OperatingHours.isValidOperatingHours(\"0900--2200\")); // double \u0027-\u0027 symbol"},{"lineNumber":65,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OperatingHours.isValidOperatingHours(\"0900/2200\")); // invalid \u0027/\u0027 symbol used to connect"},{"lineNumber":66,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OperatingHours.isValidOperatingHours(\"0900.2200\")); // invalid \u0027.\u0027 symbol used to connect"},{"lineNumber":67,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OperatingHours.isValidOperatingHours(\"0900@2200\")); // invalid \u0027@\u0027 symbol used to connect"},{"lineNumber":68,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":69,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":70,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":71,"author":{"gitID":"SunBangjie"},"content":"    public void isValidOperatingHours_validOperatingHours_returnsTrue() {"},{"lineNumber":72,"author":{"gitID":"SunBangjie"},"content":"        assertTrue(OperatingHours.isValidOperatingHours(\"0900-2200\"));"},{"lineNumber":73,"author":{"gitID":"SunBangjie"},"content":"        assertTrue(OperatingHours.isValidOperatingHours(\"1000-2100\"));"},{"lineNumber":74,"author":{"gitID":"SunBangjie"},"content":"        assertTrue(OperatingHours.isValidOperatingHours(\"0800-1800\"));"},{"lineNumber":75,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":76,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":77,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":78,"author":{"gitID":"SunBangjie"},"content":"    public void isValidStartTimeEndTimeOrder_invalidOrder_returnsFalse() {"},{"lineNumber":79,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OperatingHours.isValidStartTimeEndTimeOrder(\"2200-1000\"));"},{"lineNumber":80,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OperatingHours.isValidStartTimeEndTimeOrder(\"1000-1000\"));"},{"lineNumber":81,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":82,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":83,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":84,"author":{"gitID":"SunBangjie"},"content":"    public void isValidStartTimeEndTimeOrder_validOrder_returnsTrue() {"},{"lineNumber":85,"author":{"gitID":"SunBangjie"},"content":"        assertTrue(OperatingHours.isValidStartTimeEndTimeOrder(\"1200-2000\"));"},{"lineNumber":86,"author":{"gitID":"SunBangjie"},"content":"        assertTrue(OperatingHours.isValidStartTimeEndTimeOrder(\"1200-1230\"));"},{"lineNumber":87,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":88,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":89,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":90,"author":{"gitID":"SunBangjie"},"content":"    public void convertStringToLocalTime_validInput_returnsLocalTime() {"},{"lineNumber":91,"author":{"gitID":"SunBangjie"},"content":"        LocalTime localTime \u003d LocalTime.of(9, 0);"},{"lineNumber":92,"author":{"gitID":"SunBangjie"},"content":"        String test \u003d \"0900\";"},{"lineNumber":93,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(OperatingHours.convertStringToLocalTime(test), localTime);"},{"lineNumber":94,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":95,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":96,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":97,"author":{"gitID":"SunBangjie"},"content":"    public void getStartTime_validInput_returnsTrue() {"},{"lineNumber":98,"author":{"gitID":"SunBangjie"},"content":"        OperatingHours test \u003d new OperatingHours(\"0900-2200\");"},{"lineNumber":99,"author":{"gitID":"SunBangjie"},"content":"        LocalTime startTime \u003d LocalTime.of(9, 0);"},{"lineNumber":100,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(test.getStartTime(), startTime);"},{"lineNumber":101,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":102,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":103,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":104,"author":{"gitID":"SunBangjie"},"content":"    public void getEndTime_validInput_returnsTrue() {"},{"lineNumber":105,"author":{"gitID":"SunBangjie"},"content":"        OperatingHours test \u003d new OperatingHours(\"0900-2200\");"},{"lineNumber":106,"author":{"gitID":"SunBangjie"},"content":"        LocalTime endTime \u003d LocalTime.of(22, 0);"},{"lineNumber":107,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(test.getEndTime(), endTime);"},{"lineNumber":108,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":109,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":110,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":111,"author":{"gitID":"SunBangjie"},"content":"    public void equals_sameOperatingHours_returnsTrue() {"},{"lineNumber":112,"author":{"gitID":"SunBangjie"},"content":"        String operatingHours \u003d \"0900-2200\";"},{"lineNumber":113,"author":{"gitID":"SunBangjie"},"content":"        OperatingHours test \u003d new OperatingHours(operatingHours);"},{"lineNumber":114,"author":{"gitID":"SunBangjie"},"content":"        OperatingHours other \u003d new OperatingHours(operatingHours);"},{"lineNumber":115,"author":{"gitID":"SunBangjie"},"content":"        assertTrue(test.equals(other));"},{"lineNumber":116,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":117,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":118,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":119,"author":{"gitID":"SunBangjie"},"content":"    public void hashCode_sameObject_returnsTrue() {"},{"lineNumber":120,"author":{"gitID":"SunBangjie"},"content":"        String operatingHours \u003d \"0900-2200\";"},{"lineNumber":121,"author":{"gitID":"SunBangjie"},"content":"        OperatingHours test \u003d new OperatingHours(operatingHours);"},{"lineNumber":122,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(test.hashCode(), Objects.hash(LocalTime.of(9, 0),"},{"lineNumber":123,"author":{"gitID":"SunBangjie"},"content":"                LocalTime.of(22, 0)));"},{"lineNumber":124,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":125,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":126,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":127,"author":{"gitID":"SunBangjie"},"content":"    public void toString_validInput_returnsTrue() {"},{"lineNumber":128,"author":{"gitID":"SunBangjie"},"content":"        String operatingHours \u003d \"0900-2200\";"},{"lineNumber":129,"author":{"gitID":"SunBangjie"},"content":"        OperatingHours test \u003d new OperatingHours(operatingHours);"},{"lineNumber":130,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(test.toString(), operatingHours);"},{"lineNumber":131,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":132,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":133,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":134,"author":{"gitID":"SunBangjie"},"content":"    public void getDisplayedMessage_validInput_returnsCorrectMessage() {"},{"lineNumber":135,"author":{"gitID":"SunBangjie"},"content":"        String operatingHours \u003d \"0900-2200\";"},{"lineNumber":136,"author":{"gitID":"SunBangjie"},"content":"        String expected \u003d \"09:00-22:00\";"},{"lineNumber":137,"author":{"gitID":"SunBangjie"},"content":"        OperatingHours test \u003d new OperatingHours(operatingHours);"},{"lineNumber":138,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(test.getDisplayedMessage(), expected);"},{"lineNumber":139,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":140,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":13,"SunBangjie":127}},{"path":"src/test/java/seedu/ptman/model/outlet/OutletInformationTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.model.outlet;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.Assert;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":14,"author":{"gitID":"SunBangjie"},"content":"public class OutletInformationTest {"},{"lineNumber":15,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":16,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":17,"author":{"gitID":"SunBangjie"},"content":"    public void constructor_nullName_throwsNullPointerException() {"},{"lineNumber":18,"author":{"gitID":"SunBangjie"},"content":"        OperatingHours operatingHours \u003d new OperatingHours(\"0900-2200\");"},{"lineNumber":19,"author":{"gitID":"SunBangjie"},"content":"        OutletContact outletContact \u003d new OutletContact(\"91234567\");"},{"lineNumber":20,"author":{"gitID":"SunBangjie"},"content":"        OutletEmail outletEmail \u003d new OutletEmail(\"outlet@gmail.com\");"},{"lineNumber":21,"author":{"gitID":"SunBangjie"},"content":"        Password password \u003d new Password();"},{"lineNumber":22,"author":{"gitID":"SunBangjie"},"content":"        Announcement announcement \u003d new Announcement(\"New Announcement.\");"},{"lineNumber":23,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new OutletInformation(null, operatingHours,"},{"lineNumber":24,"author":{"gitID":"SunBangjie"},"content":"                outletContact, outletEmail, announcement, password, false));"},{"lineNumber":25,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":27,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":28,"author":{"gitID":"SunBangjie"},"content":"    public void constructor_nullOperatingHours_throwsNullPointerException() {"},{"lineNumber":29,"author":{"gitID":"SunBangjie"},"content":"        OutletName name \u003d new OutletName(\"outlet\");"},{"lineNumber":30,"author":{"gitID":"SunBangjie"},"content":"        OutletContact outletContact \u003d new OutletContact(\"91234567\");"},{"lineNumber":31,"author":{"gitID":"SunBangjie"},"content":"        OutletEmail outletEmail \u003d new OutletEmail(\"outlet@gmail.com\");"},{"lineNumber":32,"author":{"gitID":"SunBangjie"},"content":"        Password password \u003d new Password();"},{"lineNumber":33,"author":{"gitID":"SunBangjie"},"content":"        Announcement announcement \u003d new Announcement(\"New Announcement.\");"},{"lineNumber":34,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new OutletInformation(name,"},{"lineNumber":35,"author":{"gitID":"SunBangjie"},"content":"                null, outletContact, outletEmail, announcement, password, false));"},{"lineNumber":36,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":37,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":38,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":39,"author":{"gitID":"SunBangjie"},"content":"    public void constructor_nullOutletContact_throwsNullPointerException() {"},{"lineNumber":40,"author":{"gitID":"SunBangjie"},"content":"        OutletName name \u003d new OutletName(\"outlet\");"},{"lineNumber":41,"author":{"gitID":"SunBangjie"},"content":"        OperatingHours operatingHours \u003d new OperatingHours(\"0900-2200\");"},{"lineNumber":42,"author":{"gitID":"SunBangjie"},"content":"        OutletEmail outletEmail \u003d new OutletEmail(\"outlet@gmail.com\");"},{"lineNumber":43,"author":{"gitID":"SunBangjie"},"content":"        Password password \u003d new Password();"},{"lineNumber":44,"author":{"gitID":"SunBangjie"},"content":"        Announcement announcement \u003d new Announcement(\"New Announcement.\");"},{"lineNumber":45,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new OutletInformation(name,"},{"lineNumber":46,"author":{"gitID":"SunBangjie"},"content":"                operatingHours, null, outletEmail, announcement, password, false));"},{"lineNumber":47,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":48,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":49,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":50,"author":{"gitID":"SunBangjie"},"content":"    public void constructor_nullOutletEmail_throwsNullPointerException() {"},{"lineNumber":51,"author":{"gitID":"SunBangjie"},"content":"        OutletName name \u003d new OutletName(\"outlet\");"},{"lineNumber":52,"author":{"gitID":"SunBangjie"},"content":"        OperatingHours operatingHours \u003d new OperatingHours(\"0900-2200\");"},{"lineNumber":53,"author":{"gitID":"SunBangjie"},"content":"        OutletContact outletContact \u003d new OutletContact(\"91234567\");"},{"lineNumber":54,"author":{"gitID":"SunBangjie"},"content":"        Password password \u003d new Password();"},{"lineNumber":55,"author":{"gitID":"SunBangjie"},"content":"        Announcement announcement \u003d new Announcement(\"New Announcement.\");"},{"lineNumber":56,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new OutletInformation(name, operatingHours,"},{"lineNumber":57,"author":{"gitID":"SunBangjie"},"content":"                outletContact, null, announcement, password, false));"},{"lineNumber":58,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":59,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":60,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":61,"author":{"gitID":"SunBangjie"},"content":"    public void constructor_nullPassword_throwsNullPointerException() {"},{"lineNumber":62,"author":{"gitID":"SunBangjie"},"content":"        OutletName name \u003d new OutletName(\"outlet\");"},{"lineNumber":63,"author":{"gitID":"SunBangjie"},"content":"        OperatingHours operatingHours \u003d new OperatingHours(\"0900-2200\");"},{"lineNumber":64,"author":{"gitID":"SunBangjie"},"content":"        OutletContact outletContact \u003d new OutletContact(\"91234567\");"},{"lineNumber":65,"author":{"gitID":"SunBangjie"},"content":"        OutletEmail outletEmail \u003d new OutletEmail(\"outlet@gmail.com\");"},{"lineNumber":66,"author":{"gitID":"SunBangjie"},"content":"        Announcement announcement \u003d new Announcement(\"New Announcement.\");"},{"lineNumber":67,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new OutletInformation(name, operatingHours,"},{"lineNumber":68,"author":{"gitID":"SunBangjie"},"content":"                outletContact, outletEmail, announcement, null, false));"},{"lineNumber":69,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":70,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":71,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":72,"author":{"gitID":"SunBangjie"},"content":"    public void constructor_nullAnnouncement_throwsNullPointerException() {"},{"lineNumber":73,"author":{"gitID":"SunBangjie"},"content":"        OutletName name \u003d new OutletName(\"outlet\");"},{"lineNumber":74,"author":{"gitID":"SunBangjie"},"content":"        OperatingHours operatingHours \u003d new OperatingHours(\"0900-2200\");"},{"lineNumber":75,"author":{"gitID":"SunBangjie"},"content":"        OutletContact outletContact \u003d new OutletContact(\"91234567\");"},{"lineNumber":76,"author":{"gitID":"SunBangjie"},"content":"        OutletEmail outletEmail \u003d new OutletEmail(\"outlet@gmail.com\");"},{"lineNumber":77,"author":{"gitID":"SunBangjie"},"content":"        Password password \u003d new Password();"},{"lineNumber":78,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new OutletInformation(name, operatingHours,"},{"lineNumber":79,"author":{"gitID":"SunBangjie"},"content":"                outletContact, outletEmail, null, password, false));"},{"lineNumber":80,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":81,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":82,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":83,"author":{"gitID":"SunBangjie"},"content":"    public void equals_sameOutletInformation_returnsTrue() {"},{"lineNumber":84,"author":{"gitID":"SunBangjie"},"content":"        OutletName name \u003d new OutletName(\"outlet\");"},{"lineNumber":85,"author":{"gitID":"SunBangjie"},"content":"        OperatingHours operatingHours \u003d new OperatingHours(\"0900-2200\");"},{"lineNumber":86,"author":{"gitID":"SunBangjie"},"content":"        OutletContact outletContact \u003d new OutletContact(\"91234567\");"},{"lineNumber":87,"author":{"gitID":"SunBangjie"},"content":"        OutletEmail outletEmail \u003d new OutletEmail(\"outlet@gmail.com\");"},{"lineNumber":88,"author":{"gitID":"SunBangjie"},"content":"        Password password \u003d new Password();"},{"lineNumber":89,"author":{"gitID":"SunBangjie"},"content":"        Announcement announcement \u003d new Announcement(\"New Announcement.\");"},{"lineNumber":90,"author":{"gitID":"SunBangjie"},"content":"        OutletInformation outlet \u003d new OutletInformation(name, operatingHours, outletContact, outletEmail,"},{"lineNumber":91,"author":{"gitID":"SunBangjie"},"content":"                announcement, password, false);"},{"lineNumber":92,"author":{"gitID":"SunBangjie"},"content":"        OutletInformation other \u003d new OutletInformation(name, operatingHours, outletContact, outletEmail,"},{"lineNumber":93,"author":{"gitID":"SunBangjie"},"content":"                announcement, password, false);"},{"lineNumber":94,"author":{"gitID":"SunBangjie"},"content":"        assertTrue(outlet.equals(other));"},{"lineNumber":95,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":96,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":97,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":98,"author":{"gitID":"SunBangjie"},"content":"    public void setAnnouncement_validAnnouncement_success() {"},{"lineNumber":99,"author":{"gitID":"SunBangjie"},"content":"        OutletInformation outlet \u003d new OutletInformation();"},{"lineNumber":100,"author":{"gitID":"SunBangjie"},"content":"        Announcement editedAnnouncement \u003d new Announcement(\"Edited Announcement.\");"},{"lineNumber":101,"author":{"gitID":"SunBangjie"},"content":"        Announcement expectedAnnouncement \u003d new Announcement(\"Edited Announcement.\");"},{"lineNumber":102,"author":{"gitID":"SunBangjie"},"content":"        outlet.setAnnouncement(editedAnnouncement);"},{"lineNumber":103,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(outlet.getAnnouncement(), expectedAnnouncement);"},{"lineNumber":104,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":105,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":106,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":107,"author":{"gitID":"SunBangjie"},"content":"    public void setEncryptionMode_inputTrue_returnsTrue() {"},{"lineNumber":108,"author":{"gitID":"SunBangjie"},"content":"        OutletInformation outlet \u003d new OutletInformation();"},{"lineNumber":109,"author":{"gitID":"SunBangjie"},"content":"        outlet.setEncryptionMode(true);"},{"lineNumber":110,"author":{"gitID":"SunBangjie"},"content":"        assertTrue(outlet.getEncryptionMode());"},{"lineNumber":111,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":112,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":113,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":114,"author":{"gitID":"SunBangjie"},"content":"    public void getEncryptionModeMessage_inputTrue_returnsEncryptedMessage() {"},{"lineNumber":115,"author":{"gitID":"SunBangjie"},"content":"        OutletInformation outlet \u003d new OutletInformation();"},{"lineNumber":116,"author":{"gitID":"SunBangjie"},"content":"        outlet.setEncryptionMode(true);"},{"lineNumber":117,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(outlet.getEncryptionModeMessage(), OutletInformation.DATA_ENCRYPTED_MESSAGE);"},{"lineNumber":118,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":119,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":120,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":121,"author":{"gitID":"SunBangjie"},"content":"    public void getEncryptionModeMessage_inputFalse_returnsNotEncryptedMessage() {"},{"lineNumber":122,"author":{"gitID":"SunBangjie"},"content":"        OutletInformation outlet \u003d new OutletInformation();"},{"lineNumber":123,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(outlet.getEncryptionModeMessage(), OutletInformation.DATA_NOT_ENCRYPTED_MESSAGE);"},{"lineNumber":124,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":125,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":126,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":127,"author":{"gitID":"SunBangjie"},"content":"    public void hashCode_sameObject_returnsTrue() {"},{"lineNumber":128,"author":{"gitID":"SunBangjie"},"content":"        Password masterPassword \u003d new Password();"},{"lineNumber":129,"author":{"gitID":"SunBangjie"},"content":"        OutletName name \u003d new OutletName(\"outlet\");"},{"lineNumber":130,"author":{"gitID":"SunBangjie"},"content":"        OperatingHours operatingHours \u003d new OperatingHours(\"0900-2200\");"},{"lineNumber":131,"author":{"gitID":"SunBangjie"},"content":"        OutletContact outletContact \u003d new OutletContact(\"91234567\");"},{"lineNumber":132,"author":{"gitID":"SunBangjie"},"content":"        OutletEmail outletEmail \u003d new OutletEmail(\"outlet@gmail.com\");"},{"lineNumber":133,"author":{"gitID":"SunBangjie"},"content":"        Announcement announcement \u003d new Announcement(\"New Announcement.\");"},{"lineNumber":134,"author":{"gitID":"SunBangjie"},"content":"        OutletInformation outlet \u003d new OutletInformation(name, operatingHours, outletContact, outletEmail,"},{"lineNumber":135,"author":{"gitID":"SunBangjie"},"content":"                announcement, masterPassword, false);"},{"lineNumber":136,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(outlet.hashCode(), Objects.hash(name, masterPassword, operatingHours, outletContact,"},{"lineNumber":137,"author":{"gitID":"SunBangjie"},"content":"                outletEmail, announcement, false));"},{"lineNumber":138,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":139,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":140,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":141,"author":{"gitID":"SunBangjie"},"content":"    public void toString_validInput_returnsTrue() {"},{"lineNumber":142,"author":{"gitID":"SunBangjie"},"content":"        OutletName name \u003d new OutletName(\"outlet\");"},{"lineNumber":143,"author":{"gitID":"SunBangjie"},"content":"        OperatingHours operatingHours \u003d new OperatingHours(\"0900-2200\");"},{"lineNumber":144,"author":{"gitID":"SunBangjie"},"content":"        OutletContact outletContact \u003d new OutletContact(\"91234567\");"},{"lineNumber":145,"author":{"gitID":"SunBangjie"},"content":"        OutletEmail outletEmail \u003d new OutletEmail(\"outlet@gmail.com\");"},{"lineNumber":146,"author":{"gitID":"SunBangjie"},"content":"        Password password \u003d new Password();"},{"lineNumber":147,"author":{"gitID":"SunBangjie"},"content":"        Announcement announcement \u003d new Announcement(\"New announcement.\");"},{"lineNumber":148,"author":{"gitID":"SunBangjie"},"content":"        OutletInformation outlet \u003d new OutletInformation(name, operatingHours, outletContact, outletEmail,"},{"lineNumber":149,"author":{"gitID":"SunBangjie"},"content":"                announcement, password, false);"},{"lineNumber":150,"author":{"gitID":"SunBangjie"},"content":"        String expected \u003d \"Outlet Name: outlet Operating Hours: 09:00-22:00 \""},{"lineNumber":151,"author":{"gitID":"SunBangjie"},"content":"                + \"Contact: 91234567 Email: outlet@gmail.com Announcement: New announcement. \""},{"lineNumber":152,"author":{"gitID":"SunBangjie"},"content":"                + \"Encryption: Local storage files are not encrypted.\";"},{"lineNumber":153,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(outlet.toString(), expected);"},{"lineNumber":154,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":155,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":12,"SunBangjie":143}},{"path":"src/test/java/seedu/ptman/model/outlet/OutletContactTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.model.outlet;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.Assert;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":11,"author":{"gitID":"SunBangjie"},"content":"public class OutletContactTest {"},{"lineNumber":12,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":13,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":14,"author":{"gitID":"SunBangjie"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":15,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new OutletContact(null));"},{"lineNumber":16,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":17,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":18,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":19,"author":{"gitID":"SunBangjie"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {"},{"lineNumber":20,"author":{"gitID":"SunBangjie"},"content":"        String invalidPhone \u003d \"\";"},{"lineNumber":21,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new OutletContact(invalidPhone));"},{"lineNumber":22,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":23,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":24,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":25,"author":{"gitID":"SunBangjie"},"content":"    public void isValidOutletContact_nullValue_throwsNullPointerException() {"},{"lineNumber":26,"author":{"gitID":"SunBangjie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e OutletContact.isValidOutletContact(null));"},{"lineNumber":27,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":28,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":29,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":30,"author":{"gitID":"SunBangjie"},"content":"    public void isValidOutletContact_invalidValues_returnsFalse() {"},{"lineNumber":31,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OutletContact.isValidOutletContact(\"\")); // empty string"},{"lineNumber":32,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OutletContact.isValidOutletContact(\" \")); // spaces only"},{"lineNumber":33,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OutletContact.isValidOutletContact(\"91\")); // less than 3 numbers"},{"lineNumber":34,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OutletContact.isValidOutletContact(\"phone\")); // non-numeric"},{"lineNumber":35,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OutletContact.isValidOutletContact(\"9011p041\")); // alphabets within digits"},{"lineNumber":36,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(OutletContact.isValidOutletContact(\"9312 1534\")); // spaces within digits"},{"lineNumber":37,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":39,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":40,"author":{"gitID":"SunBangjie"},"content":"    public void isValidOutletContact_validValues_returnsTrue() {"},{"lineNumber":41,"author":{"gitID":"SunBangjie"},"content":"        assertTrue(OutletContact.isValidOutletContact(\"911\")); // exactly 3 numbers"},{"lineNumber":42,"author":{"gitID":"SunBangjie"},"content":"        assertTrue(OutletContact.isValidOutletContact(\"93121534\"));"},{"lineNumber":43,"author":{"gitID":"SunBangjie"},"content":"        assertTrue(OutletContact.isValidOutletContact(\"124293842033123\")); // long phone numbers"},{"lineNumber":44,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":9,"SunBangjie":36}},{"path":"src/test/java/seedu/ptman/model/ModelManagerTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.model;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertNotEquals;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.model.Model.PREDICATE_SHOW_ALL_EMPLOYEES;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.ALICE;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.BENSON;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.NameContainsKeywordsPredicate;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.Announcement;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OperatingHours;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletContact;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletEmail;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletName;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.exceptions.NoOutletInformationFieldChangeException;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.PartTimeManagerBuilder;"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":"public class ModelManagerTest {"},{"lineNumber":28,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    public void getFilteredEmployeeList_modifyList_throwsUnsupportedOperationException() {"},{"lineNumber":33,"author":{"gitID":"-"},"content":"        ModelManager modelManager \u003d new ModelManager();"},{"lineNumber":34,"author":{"gitID":"-"},"content":"        thrown.expect(UnsupportedOperationException.class);"},{"lineNumber":35,"author":{"gitID":"-"},"content":"        modelManager.getFilteredEmployeeList().remove(0);"},{"lineNumber":36,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":37,"author":{"gitID":"-"},"content":""},{"lineNumber":38,"author":{"gitID":"SunBangjie"},"content":"    //@@author SunBangjie"},{"lineNumber":39,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":40,"author":{"gitID":"SunBangjie"},"content":"    public void updateOutlet_validCondition_success() throws NoOutletInformationFieldChangeException {"},{"lineNumber":41,"author":{"gitID":"SunBangjie"},"content":"        PartTimeManager partTimeManager \u003d new PartTimeManager();"},{"lineNumber":42,"author":{"gitID":"SunBangjie"},"content":"        PartTimeManager differentPartTimeManager \u003d new PartTimeManager();"},{"lineNumber":43,"author":{"gitID":"SunBangjie"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();"},{"lineNumber":44,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":45,"author":{"gitID":"SunBangjie"},"content":"        OutletInformation outlet \u003d new OutletInformation(new OutletName(\"test\"), new OperatingHours(\"1000-1500\"),"},{"lineNumber":46,"author":{"gitID":"SunBangjie"},"content":"                new OutletContact(\"123\"), new OutletEmail(\"test@test.com\"),"},{"lineNumber":47,"author":{"gitID":"SunBangjie"},"content":"                new Announcement(\"New Announcement.\"), new Password(), false);"},{"lineNumber":48,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":49,"author":{"gitID":"SunBangjie"},"content":"        ModelManager modelManager \u003d new ModelManager(differentPartTimeManager, userPrefs, new OutletInformation());"},{"lineNumber":50,"author":{"gitID":"SunBangjie"},"content":"        ModelManager differentModelManager \u003d new ModelManager(partTimeManager, userPrefs, new OutletInformation());"},{"lineNumber":51,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":52,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(modelManager, differentModelManager);"},{"lineNumber":53,"author":{"gitID":"SunBangjie"},"content":"        modelManager.updateOutlet(outlet);"},{"lineNumber":54,"author":{"gitID":"SunBangjie"},"content":"        assertNotEquals(modelManager, differentModelManager);"},{"lineNumber":55,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":57,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":58,"author":{"gitID":"SunBangjie"},"content":"    public void getEncryptionMode_defaultData_returnsFalse() {"},{"lineNumber":59,"author":{"gitID":"SunBangjie"},"content":"        ModelManager modelManager \u003d new ModelManager();"},{"lineNumber":60,"author":{"gitID":"SunBangjie"},"content":"        assertFalse(modelManager.getEncryptionMode());"},{"lineNumber":61,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":62,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":63,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":64,"author":{"gitID":"SunBangjie"},"content":"    public void getEncryptionModeMessage_defaultData_returnsCorrectMessage() {"},{"lineNumber":65,"author":{"gitID":"SunBangjie"},"content":"        ModelManager modelManager \u003d new ModelManager();"},{"lineNumber":66,"author":{"gitID":"SunBangjie"},"content":"        String actualMessage \u003d modelManager.getEncryptionModeMessage();"},{"lineNumber":67,"author":{"gitID":"SunBangjie"},"content":"        String expectedMessage \u003d new OutletInformation().getEncryptionModeMessage();"},{"lineNumber":68,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(actualMessage, expectedMessage);"},{"lineNumber":69,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":70,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":71,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":72,"author":{"gitID":"SunBangjie"},"content":"    public void getEncryptionMode_encryptedData_returnsTrue() {"},{"lineNumber":73,"author":{"gitID":"SunBangjie"},"content":"        ModelManager modelManager \u003d new ModelManager();"},{"lineNumber":74,"author":{"gitID":"SunBangjie"},"content":"        modelManager.encryptLocalStorage();"},{"lineNumber":75,"author":{"gitID":"SunBangjie"},"content":"        assertTrue(modelManager.getEncryptionMode());"},{"lineNumber":76,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":77,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":78,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":79,"author":{"gitID":"SunBangjie"},"content":"    public void getEncryptionModeMessage_encryptedData_returnsCorrectMessage() {"},{"lineNumber":80,"author":{"gitID":"SunBangjie"},"content":"        ModelManager modelManager \u003d new ModelManager();"},{"lineNumber":81,"author":{"gitID":"SunBangjie"},"content":"        modelManager.encryptLocalStorage();"},{"lineNumber":82,"author":{"gitID":"SunBangjie"},"content":"        String actualMessage \u003d modelManager.getEncryptionModeMessage();"},{"lineNumber":83,"author":{"gitID":"SunBangjie"},"content":"        OutletInformation outletInformation \u003d new OutletInformation();"},{"lineNumber":84,"author":{"gitID":"SunBangjie"},"content":"        outletInformation.setEncryptionMode(true);"},{"lineNumber":85,"author":{"gitID":"SunBangjie"},"content":"        String expectedMessage \u003d outletInformation.getEncryptionModeMessage();"},{"lineNumber":86,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(actualMessage, expectedMessage);"},{"lineNumber":87,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":88,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":89,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":90,"author":{"gitID":"SunBangjie"},"content":"    public void encryptLocalStorage_dataNotEncrypted_success() {"},{"lineNumber":91,"author":{"gitID":"SunBangjie"},"content":"        PartTimeManager partTimeManager \u003d new PartTimeManager();"},{"lineNumber":92,"author":{"gitID":"SunBangjie"},"content":"        PartTimeManager differentPartTimeManager \u003d new PartTimeManager();"},{"lineNumber":93,"author":{"gitID":"SunBangjie"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();"},{"lineNumber":94,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":95,"author":{"gitID":"SunBangjie"},"content":"        ModelManager modelManager \u003d new ModelManager(partTimeManager, userPrefs, new OutletInformation());"},{"lineNumber":96,"author":{"gitID":"SunBangjie"},"content":"        ModelManager differentModelManager \u003d new ModelManager(differentPartTimeManager, userPrefs,"},{"lineNumber":97,"author":{"gitID":"SunBangjie"},"content":"                new OutletInformation());"},{"lineNumber":98,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":99,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(modelManager, differentModelManager);"},{"lineNumber":100,"author":{"gitID":"SunBangjie"},"content":"        modelManager.encryptLocalStorage();"},{"lineNumber":101,"author":{"gitID":"SunBangjie"},"content":"        assertNotEquals(modelManager, differentModelManager);"},{"lineNumber":102,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":103,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":104,"author":{"gitID":"SunBangjie"},"content":"    @Test"},{"lineNumber":105,"author":{"gitID":"SunBangjie"},"content":"    public void decryptLocalStorage_dataEncrypted_success() {"},{"lineNumber":106,"author":{"gitID":"SunBangjie"},"content":"        PartTimeManager partTimeManager \u003d new PartTimeManager();"},{"lineNumber":107,"author":{"gitID":"SunBangjie"},"content":"        PartTimeManager differentPartTimeManager \u003d new PartTimeManager();"},{"lineNumber":108,"author":{"gitID":"SunBangjie"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();"},{"lineNumber":109,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":110,"author":{"gitID":"SunBangjie"},"content":"        ModelManager modelManager \u003d new ModelManager(partTimeManager, userPrefs, new OutletInformation());"},{"lineNumber":111,"author":{"gitID":"SunBangjie"},"content":"        ModelManager differentModelManager \u003d new ModelManager(differentPartTimeManager, userPrefs,"},{"lineNumber":112,"author":{"gitID":"SunBangjie"},"content":"                new OutletInformation());"},{"lineNumber":113,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":114,"author":{"gitID":"SunBangjie"},"content":"        modelManager.encryptLocalStorage();"},{"lineNumber":115,"author":{"gitID":"SunBangjie"},"content":"        differentModelManager.encryptLocalStorage();"},{"lineNumber":116,"author":{"gitID":"SunBangjie"},"content":"        assertEquals(modelManager, differentModelManager);"},{"lineNumber":117,"author":{"gitID":"SunBangjie"},"content":"        modelManager.decryptLocalStorage();"},{"lineNumber":118,"author":{"gitID":"SunBangjie"},"content":"        assertNotEquals(modelManager, differentModelManager);"},{"lineNumber":119,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":120,"author":{"gitID":"SunBangjie"},"content":"    //@@author"},{"lineNumber":121,"author":{"gitID":"-"},"content":""},{"lineNumber":122,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":123,"author":{"gitID":"-"},"content":"    public void equals() {"},{"lineNumber":124,"author":{"gitID":"-"},"content":"        PartTimeManager partTimeManager \u003d new PartTimeManagerBuilder().withEmployee(ALICE).withEmployee(BENSON).build();"},{"lineNumber":125,"author":{"gitID":"-"},"content":"        PartTimeManager differentPartTimeManager \u003d new PartTimeManager();"},{"lineNumber":126,"author":{"gitID":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();"},{"lineNumber":127,"author":{"gitID":"-"},"content":"        OutletInformation outlet \u003d new OutletInformation();"},{"lineNumber":128,"author":{"gitID":"-"},"content":""},{"lineNumber":129,"author":{"gitID":"-"},"content":"        // same values -\u003e returns true"},{"lineNumber":130,"author":{"gitID":"-"},"content":"        ModelManager modelManager \u003d new ModelManager(partTimeManager, userPrefs, outlet);"},{"lineNumber":131,"author":{"gitID":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(partTimeManager, userPrefs, outlet);"},{"lineNumber":132,"author":{"gitID":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));"},{"lineNumber":133,"author":{"gitID":"-"},"content":""},{"lineNumber":134,"author":{"gitID":"-"},"content":"        // same object -\u003e returns true"},{"lineNumber":135,"author":{"gitID":"-"},"content":"        assertTrue(modelManager.equals(modelManager));"},{"lineNumber":136,"author":{"gitID":"-"},"content":""},{"lineNumber":137,"author":{"gitID":"-"},"content":"        // null -\u003e returns false"},{"lineNumber":138,"author":{"gitID":"-"},"content":"        assertFalse(modelManager.equals(null));"},{"lineNumber":139,"author":{"gitID":"-"},"content":""},{"lineNumber":140,"author":{"gitID":"-"},"content":"        // different types -\u003e returns false"},{"lineNumber":141,"author":{"gitID":"-"},"content":"        assertFalse(modelManager.equals(5));"},{"lineNumber":142,"author":{"gitID":"-"},"content":""},{"lineNumber":143,"author":{"gitID":"-"},"content":"        // different partTimeManager -\u003e returns false"},{"lineNumber":144,"author":{"gitID":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentPartTimeManager, userPrefs, outlet)));"},{"lineNumber":145,"author":{"gitID":"-"},"content":""},{"lineNumber":146,"author":{"gitID":"-"},"content":"        // different filteredList -\u003e returns false"},{"lineNumber":147,"author":{"gitID":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");"},{"lineNumber":148,"author":{"gitID":"-"},"content":"        modelManager.updateFilteredEmployeeList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));"},{"lineNumber":149,"author":{"gitID":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(partTimeManager, userPrefs, outlet)));"},{"lineNumber":150,"author":{"gitID":"-"},"content":""},{"lineNumber":151,"author":{"gitID":"-"},"content":"        // resets modelManager to initial state for upcoming tests"},{"lineNumber":152,"author":{"gitID":"-"},"content":"        modelManager.updateFilteredEmployeeList(PREDICATE_SHOW_ALL_EMPLOYEES);"},{"lineNumber":153,"author":{"gitID":"-"},"content":""},{"lineNumber":154,"author":{"gitID":"-"},"content":"        // different userPrefs -\u003e returns true"},{"lineNumber":155,"author":{"gitID":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();"},{"lineNumber":156,"author":{"gitID":"-"},"content":"        differentUserPrefs.setPartTimeManagerName(\"differentName\");"},{"lineNumber":157,"author":{"gitID":"-"},"content":"        assertTrue(modelManager.equals(new ModelManager(partTimeManager, differentUserPrefs, outlet)));"},{"lineNumber":158,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":159,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"-":76,"SunBangjie":83}},{"path":"src/test/java/seedu/ptman/model/employee/AddressTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.model.employee;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.Assert;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"public class AddressTest {"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":13,"author":{"gitID":"-"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":14,"author":{"gitID":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Address(null));"},{"lineNumber":15,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {"},{"lineNumber":19,"author":{"gitID":"-"},"content":"        String invalidAddress \u003d \"\";"},{"lineNumber":20,"author":{"gitID":"-"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));"},{"lineNumber":21,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    public void isValidAddress() {"},{"lineNumber":25,"author":{"gitID":"koo1993"},"content":"        // null address"},{"lineNumber":26,"author":{"gitID":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"        // invalid addresses"},{"lineNumber":29,"author":{"gitID":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"        // valid addresses"},{"lineNumber":33,"author":{"gitID":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));"},{"lineNumber":34,"author":{"gitID":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character"},{"lineNumber":35,"author":{"gitID":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long ptman"},{"lineNumber":36,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":37,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"koo1993":1,"-":36}},{"path":"src/test/java/seedu/ptman/model/employee/SalaryTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.model.employee;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.Assert;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"koo1993"},"content":"//@@author koo1993"},{"lineNumber":11,"author":{"gitID":"koo1993"},"content":"public class SalaryTest {"},{"lineNumber":12,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":13,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":14,"author":{"gitID":"koo1993"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":15,"author":{"gitID":"koo1993"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Salary(null));"},{"lineNumber":16,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":17,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":18,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":19,"author":{"gitID":"koo1993"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {"},{"lineNumber":20,"author":{"gitID":"koo1993"},"content":"        String invalidSalary \u003d \"\";"},{"lineNumber":21,"author":{"gitID":"koo1993"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Salary(invalidSalary));"},{"lineNumber":22,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":23,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":24,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":25,"author":{"gitID":"koo1993"},"content":"    public void isValidSalary() {"},{"lineNumber":26,"author":{"gitID":"koo1993"},"content":"        //null salary"},{"lineNumber":27,"author":{"gitID":"koo1993"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Salary.isValidSalary(null));"},{"lineNumber":28,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":29,"author":{"gitID":"koo1993"},"content":"        // invalid Salary"},{"lineNumber":30,"author":{"gitID":"koo1993"},"content":"        assertFalse(Salary.isValidSalary(\" \")); // empty string"},{"lineNumber":31,"author":{"gitID":"koo1993"},"content":"        assertFalse(Salary.isValidSalary(\"abc\")); // alphabets"},{"lineNumber":32,"author":{"gitID":"koo1993"},"content":"        assertFalse(Salary.isValidSalary(\"123abc\")); // alphanumeric"},{"lineNumber":33,"author":{"gitID":"koo1993"},"content":"        assertFalse(Salary.isValidSalary(\"123 123\")); // space within digits"},{"lineNumber":34,"author":{"gitID":"koo1993"},"content":"        assertFalse(Salary.isValidSalary(\"-10\")); // negative digits"},{"lineNumber":35,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":36,"author":{"gitID":"koo1993"},"content":"        //valid Salary"},{"lineNumber":37,"author":{"gitID":"koo1993"},"content":"        assertTrue(Salary.isValidSalary(\"0\"));"},{"lineNumber":38,"author":{"gitID":"koo1993"},"content":"        assertTrue(Salary.isValidSalary(\"100\"));"},{"lineNumber":39,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"koo1993"},"content":"}"}],"authorContributionMap":{"koo1993":31,"-":9}},{"path":"src/test/java/seedu/ptman/model/PasswordTest.java","lines":[{"lineNumber":1,"author":{"gitID":"koo1993"},"content":"package seedu.ptman.model;"},{"lineNumber":2,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":3,"author":{"gitID":"koo1993"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.ptman.testutil.Assert;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"koo1993"},"content":"//@@author koo1993"},{"lineNumber":12,"author":{"gitID":"koo1993"},"content":"public class PasswordTest {"},{"lineNumber":13,"author":{"gitID":"koo1993"},"content":"    public static final String DEFAULT1_HASH \u003d \"wkqTFuX6NX3hucWqn2ZxB24cRo73LssRq7IDOk6Zx00\u003d\"; // hash code for DEFAULT1"},{"lineNumber":14,"author":{"gitID":"koo1993"},"content":"    public static final String DEFAULT2_HASH \u003d \"j9R1Y0IIRVI052lxIOkweVd88O+EiSLGJvnXAZXKD40\u003d\"; // hash code for DEFAULT2"},{"lineNumber":15,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":16,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":17,"author":{"gitID":"koo1993"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":18,"author":{"gitID":"koo1993"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Password((Password) null));"},{"lineNumber":19,"author":{"gitID":"koo1993"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Password((String) null));"},{"lineNumber":20,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":22,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":23,"author":{"gitID":"koo1993"},"content":"    public void constructor_defaultConstructor_noError() {"},{"lineNumber":24,"author":{"gitID":"koo1993"},"content":"        Password password \u003d new Password();"},{"lineNumber":25,"author":{"gitID":"koo1993"},"content":"        Password expectPassword \u003d new Password(DEFAULT1_HASH);"},{"lineNumber":26,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":27,"author":{"gitID":"koo1993"},"content":"        assertEquals(password, expectPassword);"},{"lineNumber":28,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":29,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":30,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":31,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":32,"author":{"gitID":"koo1993"},"content":"    public void isValidPassword() {"},{"lineNumber":33,"author":{"gitID":"koo1993"},"content":"        // null password"},{"lineNumber":34,"author":{"gitID":"koo1993"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Password.isValidPassword(null));"},{"lineNumber":35,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":36,"author":{"gitID":"koo1993"},"content":"        // invalid Password"},{"lineNumber":37,"author":{"gitID":"koo1993"},"content":"        assertFalse(Password.isValidPassword(\"\")); // empty string"},{"lineNumber":38,"author":{"gitID":"koo1993"},"content":"        assertFalse(Password.isValidPassword(\" \")); // spaces only"},{"lineNumber":39,"author":{"gitID":"koo1993"},"content":"        assertFalse(Password.isValidPassword(\"!#@! fdsafdsafdsa\")); // characters with space"},{"lineNumber":40,"author":{"gitID":"koo1993"},"content":"        assertFalse(Password.isValidPassword(\"less8\")); // less than 8 character"},{"lineNumber":41,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":42,"author":{"gitID":"koo1993"},"content":"        // valid name"},{"lineNumber":43,"author":{"gitID":"koo1993"},"content":"        assertTrue(Password.isValidPassword(\"peterjack\")); // alphabets only"},{"lineNumber":44,"author":{"gitID":"koo1993"},"content":"        assertTrue(Password.isValidPassword(\"1234567dsa6\")); // numbers only"},{"lineNumber":45,"author":{"gitID":"koo1993"},"content":"        assertTrue(Password.isValidPassword(\"peterthe2nd\")); // alphanumeric characters"},{"lineNumber":46,"author":{"gitID":"koo1993"},"content":"        assertTrue(Password.isValidPassword(\"CapitalTan\")); // with capital letters"},{"lineNumber":47,"author":{"gitID":"koo1993"},"content":"        assertTrue(Password.isValidPassword(\"Da@acks$RayJr2nd\")); // alphanumeric with captial and special character"},{"lineNumber":48,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":49,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":50,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":51,"author":{"gitID":"koo1993"},"content":"    public void isCorrectPassword() {"},{"lineNumber":52,"author":{"gitID":"koo1993"},"content":"        Password password \u003d new Password(DEFAULT1_HASH);"},{"lineNumber":53,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":54,"author":{"gitID":"koo1993"},"content":"        // wrong password"},{"lineNumber":55,"author":{"gitID":"koo1993"},"content":"        assertFalse(password.isCorrectPassword(\"thisiswrongpassword\"));"},{"lineNumber":56,"author":{"gitID":"koo1993"},"content":"        assertFalse(password.isCorrectPassword(\"THISISNOTTHEPASS\"));"},{"lineNumber":57,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":58,"author":{"gitID":"koo1993"},"content":"        //correct password"},{"lineNumber":59,"author":{"gitID":"koo1993"},"content":"        assertTrue(password.isCorrectPassword(\"DEFAULT1\")); //correct password"},{"lineNumber":60,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":61,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":62,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":63,"author":{"gitID":"koo1993"},"content":"    @Test"},{"lineNumber":64,"author":{"gitID":"koo1993"},"content":"    public void changePassword() {"},{"lineNumber":65,"author":{"gitID":"koo1993"},"content":"        Password password \u003d new Password(DEFAULT1_HASH);"},{"lineNumber":66,"author":{"gitID":"koo1993"},"content":"        Password expectedPassword \u003d new Password(DEFAULT2_HASH);"},{"lineNumber":67,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":68,"author":{"gitID":"koo1993"},"content":"        //wrong password"},{"lineNumber":69,"author":{"gitID":"koo1993"},"content":"        assertFalse(password.checkAndChangePassword(\"this is the password\", \"newPassword\"));"},{"lineNumber":70,"author":{"gitID":"koo1993"},"content":"        assertFalse(password.checkAndChangePassword(\"notapassword\", \"newPassword\"));"},{"lineNumber":71,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":72,"author":{"gitID":"koo1993"},"content":"        //correct password and changed"},{"lineNumber":73,"author":{"gitID":"koo1993"},"content":"        assertTrue(password.checkAndChangePassword(\"DEFAULT1\", \"DEFAULT2\"));"},{"lineNumber":74,"author":{"gitID":"koo1993"},"content":"        assertEquals(password, expectedPassword);"},{"lineNumber":75,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":76,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":77,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":78,"author":{"gitID":"koo1993"},"content":"}"}],"authorContributionMap":{"koo1993":71,"-":7}},{"path":"src/test/java/seedu/ptman/testutil/ShiftBuilder.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.testutil;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.HashSet;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Set;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Employee;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Capacity;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Date;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Shift;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Time;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"shanwpf"},"content":"//@@author shanwpf"},{"lineNumber":15,"author":{"gitID":"shanwpf"},"content":"/**"},{"lineNumber":16,"author":{"gitID":"shanwpf"},"content":" * A utility class to help with building Shift objects."},{"lineNumber":17,"author":{"gitID":"shanwpf"},"content":" */"},{"lineNumber":18,"author":{"gitID":"shanwpf"},"content":"public class ShiftBuilder {"},{"lineNumber":19,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":20,"author":{"gitID":"shanwpf"},"content":"    public static final LocalDate DEFAULT_DATE \u003d LocalDate.now().plusDays(1);"},{"lineNumber":21,"author":{"gitID":"shanwpf"},"content":"    public static final String DEFAULT_TIME_START \u003d \"0900\";"},{"lineNumber":22,"author":{"gitID":"shanwpf"},"content":"    public static final String DEFAULT_TIME_END \u003d \"1600\";"},{"lineNumber":23,"author":{"gitID":"shanwpf"},"content":"    public static final String DEFAULT_CAPACITY \u003d \"5\";"},{"lineNumber":24,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":25,"author":{"gitID":"shanwpf"},"content":"    private Date date;"},{"lineNumber":26,"author":{"gitID":"shanwpf"},"content":"    private Time startTime;"},{"lineNumber":27,"author":{"gitID":"shanwpf"},"content":"    private Time endTime;"},{"lineNumber":28,"author":{"gitID":"shanwpf"},"content":"    private Capacity capacity;"},{"lineNumber":29,"author":{"gitID":"shanwpf"},"content":"    private Set\u003cEmployee\u003e employees;"},{"lineNumber":30,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":31,"author":{"gitID":"shanwpf"},"content":"    public ShiftBuilder() {"},{"lineNumber":32,"author":{"gitID":"shanwpf"},"content":"        date \u003d new Date(DEFAULT_DATE);"},{"lineNumber":33,"author":{"gitID":"shanwpf"},"content":"        startTime \u003d new Time(DEFAULT_TIME_START);"},{"lineNumber":34,"author":{"gitID":"shanwpf"},"content":"        endTime \u003d new Time(DEFAULT_TIME_END);"},{"lineNumber":35,"author":{"gitID":"shanwpf"},"content":"        capacity \u003d new Capacity(DEFAULT_CAPACITY);"},{"lineNumber":36,"author":{"gitID":"shanwpf"},"content":"        employees \u003d new HashSet\u003c\u003e();"},{"lineNumber":37,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":39,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":40,"author":{"gitID":"shanwpf"},"content":"     * Sets the {@code Date} of the {@code Shift} that we are building."},{"lineNumber":41,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":42,"author":{"gitID":"shanwpf"},"content":"    public ShiftBuilder withDate(String date) {"},{"lineNumber":43,"author":{"gitID":"shanwpf"},"content":"        this.date \u003d new Date(date);"},{"lineNumber":44,"author":{"gitID":"shanwpf"},"content":"        return this;"},{"lineNumber":45,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":47,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":48,"author":{"gitID":"shanwpf"},"content":"     * Sets the {@code Date} of the {@code Shift} that we are building."},{"lineNumber":49,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":50,"author":{"gitID":"shanwpf"},"content":"    public ShiftBuilder withDate(LocalDate date) {"},{"lineNumber":51,"author":{"gitID":"shanwpf"},"content":"        this.date \u003d new Date(date);"},{"lineNumber":52,"author":{"gitID":"shanwpf"},"content":"        return this;"},{"lineNumber":53,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":54,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":55,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":56,"author":{"gitID":"shanwpf"},"content":"     * Sets the start {@code Time} of the {@code Shift} that we are building."},{"lineNumber":57,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":58,"author":{"gitID":"shanwpf"},"content":"    public ShiftBuilder withStartTime(String startTime) {"},{"lineNumber":59,"author":{"gitID":"shanwpf"},"content":"        this.startTime \u003d new Time(startTime);"},{"lineNumber":60,"author":{"gitID":"shanwpf"},"content":"        return this;"},{"lineNumber":61,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":62,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":63,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":64,"author":{"gitID":"shanwpf"},"content":"     * Sets the end {@code Time} of the {@code Shift} that we are building."},{"lineNumber":65,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":66,"author":{"gitID":"shanwpf"},"content":"    public ShiftBuilder withEndTime(String endTime) {"},{"lineNumber":67,"author":{"gitID":"shanwpf"},"content":"        this.endTime \u003d new Time(endTime);"},{"lineNumber":68,"author":{"gitID":"shanwpf"},"content":"        return this;"},{"lineNumber":69,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":70,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":71,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":72,"author":{"gitID":"shanwpf"},"content":"     * Sets the {@code Capacity} of the {@code Shift} that we are building."},{"lineNumber":73,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":74,"author":{"gitID":"shanwpf"},"content":"    public ShiftBuilder withCapacity(String capacity) {"},{"lineNumber":75,"author":{"gitID":"shanwpf"},"content":"        this.capacity \u003d new Capacity(capacity);"},{"lineNumber":76,"author":{"gitID":"shanwpf"},"content":"        return this;"},{"lineNumber":77,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":78,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":79,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":80,"author":{"gitID":"shanwpf"},"content":"     * Sets the {@code Employee} of the {@code Shift} that we are building."},{"lineNumber":81,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":82,"author":{"gitID":"shanwpf"},"content":"    public ShiftBuilder withEmployees(Employee... employees) {"},{"lineNumber":83,"author":{"gitID":"shanwpf"},"content":"        this.employees.addAll(Arrays.asList(employees));"},{"lineNumber":84,"author":{"gitID":"shanwpf"},"content":"        return this;"},{"lineNumber":85,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":86,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":87,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":88,"author":{"gitID":"shanwpf"},"content":"     * Returns the {@code Shift}"},{"lineNumber":89,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":90,"author":{"gitID":"shanwpf"},"content":"    public Shift build() {"},{"lineNumber":91,"author":{"gitID":"shanwpf"},"content":"        return new Shift(date, startTime, endTime, capacity, employees);"},{"lineNumber":92,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":93,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":94,"author":{"gitID":"shanwpf"},"content":"}"}],"authorContributionMap":{"shanwpf":81,"-":13}},{"path":"src/test/java/seedu/ptman/testutil/ShiftUtil.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.testutil;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_CAPACITY;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_DATE;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_TIME_END;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_TIME_START;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.AddShiftCommand;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Shift;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"shanwpf"},"content":"//@@author shanwpf"},{"lineNumber":12,"author":{"gitID":"shanwpf"},"content":"/**"},{"lineNumber":13,"author":{"gitID":"shanwpf"},"content":" * A utility class for Shift."},{"lineNumber":14,"author":{"gitID":"shanwpf"},"content":" */"},{"lineNumber":15,"author":{"gitID":"shanwpf"},"content":"public class ShiftUtil {"},{"lineNumber":16,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":17,"author":{"gitID":"shanwpf"},"content":"     * Returns an addshift command string for adding the {@code shift}."},{"lineNumber":18,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":19,"author":{"gitID":"shanwpf"},"content":"    public static String getAddShiftCommand(Shift shift) {"},{"lineNumber":20,"author":{"gitID":"shanwpf"},"content":"        return AddShiftCommand.COMMAND_WORD + \" \" + getShiftDetails(shift);"},{"lineNumber":21,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":22,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":23,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":24,"author":{"gitID":"shanwpf"},"content":"     * Returns an aliased addshift command string for adding the {@code shift}."},{"lineNumber":25,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":26,"author":{"gitID":"shanwpf"},"content":"    public static String getAliasedAddShiftCommand(Shift shift) {"},{"lineNumber":27,"author":{"gitID":"shanwpf"},"content":"        return AddShiftCommand.COMMAND_ALIAS + \" \" + getShiftDetails(shift);"},{"lineNumber":28,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":29,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":30,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":31,"author":{"gitID":"shanwpf"},"content":"     * Returns the part of command string for the given {@code shift}\u0027s details."},{"lineNumber":32,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":33,"author":{"gitID":"shanwpf"},"content":"    public static String getShiftDetails(Shift shift) {"},{"lineNumber":34,"author":{"gitID":"shanwpf"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":35,"author":{"gitID":"shanwpf"},"content":"        sb.append(PREFIX_DATE + shift.getDate().toString() + \" \");"},{"lineNumber":36,"author":{"gitID":"shanwpf"},"content":"        sb.append(PREFIX_TIME_START + shift.getStartTime().toString() + \" \");"},{"lineNumber":37,"author":{"gitID":"shanwpf"},"content":"        sb.append(PREFIX_TIME_END + shift.getEndTime().toString() + \" \");"},{"lineNumber":38,"author":{"gitID":"shanwpf"},"content":"        sb.append(PREFIX_CAPACITY + shift.getCapacity().toString() + \" \");"},{"lineNumber":39,"author":{"gitID":"shanwpf"},"content":"        return sb.toString();"},{"lineNumber":40,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":41,"author":{"gitID":"shanwpf"},"content":"}"}],"authorContributionMap":{"shanwpf":31,"-":10}},{"path":"src/test/java/seedu/ptman/testutil/TypicalShifts.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.testutil;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.ALICE;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.BENSON;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.CARL;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.testutil.TypicalEmployees.getTypicalEmployees;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.model.PartTimeManager;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Employee;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.exceptions.DuplicateEmployeeException;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Shift;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.exceptions.DuplicateShiftException;"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"shanwpf"},"content":"//@@author shanwpf"},{"lineNumber":19,"author":{"gitID":"shanwpf"},"content":"/**"},{"lineNumber":20,"author":{"gitID":"shanwpf"},"content":" * A utility class containing a list of {@code Shift} objects to be used in tests."},{"lineNumber":21,"author":{"gitID":"shanwpf"},"content":" */"},{"lineNumber":22,"author":{"gitID":"shanwpf"},"content":"public class TypicalShifts {"},{"lineNumber":23,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":24,"author":{"gitID":"shanwpf"},"content":"    public static final Shift SHIFT_MONDAY_AM \u003d new ShiftBuilder().withDate(\"19-03-18\")"},{"lineNumber":25,"author":{"gitID":"shanwpf"},"content":"            .withStartTime(\"0800\")"},{"lineNumber":26,"author":{"gitID":"shanwpf"},"content":"            .withEndTime(\"1300\")"},{"lineNumber":27,"author":{"gitID":"shanwpf"},"content":"            .withCapacity(\"4\").build();"},{"lineNumber":28,"author":{"gitID":"shanwpf"},"content":"    public static final Shift SHIFT_MONDAY_PM \u003d new ShiftBuilder().withDate(\"19-03-18\")"},{"lineNumber":29,"author":{"gitID":"shanwpf"},"content":"            .withStartTime(\"1300\")"},{"lineNumber":30,"author":{"gitID":"shanwpf"},"content":"            .withEndTime(\"2200\")"},{"lineNumber":31,"author":{"gitID":"shanwpf"},"content":"            .withCapacity(\"4\").build();"},{"lineNumber":32,"author":{"gitID":"shanwpf"},"content":"    public static final Shift SHIFT_TUESDAY_AM \u003d new ShiftBuilder().withDate(\"20-03-18\")"},{"lineNumber":33,"author":{"gitID":"shanwpf"},"content":"            .withStartTime(\"0900\")"},{"lineNumber":34,"author":{"gitID":"shanwpf"},"content":"            .withEndTime(\"1200\")"},{"lineNumber":35,"author":{"gitID":"shanwpf"},"content":"            .withCapacity(\"5\").build();"},{"lineNumber":36,"author":{"gitID":"shanwpf"},"content":"    public static final Shift SHIFT_TUESDAY_PM \u003d new ShiftBuilder().withDate(\"20-03-18\")"},{"lineNumber":37,"author":{"gitID":"shanwpf"},"content":"            .withStartTime(\"1200\")"},{"lineNumber":38,"author":{"gitID":"shanwpf"},"content":"            .withEndTime(\"2200\")"},{"lineNumber":39,"author":{"gitID":"shanwpf"},"content":"            .withCapacity(\"3\").build();"},{"lineNumber":40,"author":{"gitID":"shanwpf"},"content":"    public static final Shift SHIFT_SUNDAY_AM \u003d new ShiftBuilder().withDate(\"25-03-18\")"},{"lineNumber":41,"author":{"gitID":"shanwpf"},"content":"            .withStartTime(\"1000\")"},{"lineNumber":42,"author":{"gitID":"shanwpf"},"content":"            .withEndTime(\"1300\")"},{"lineNumber":43,"author":{"gitID":"shanwpf"},"content":"            .withCapacity(\"4\").build();"},{"lineNumber":44,"author":{"gitID":"shanwpf"},"content":"    public static final Shift SHIFT_SUNDAY_PM \u003d new ShiftBuilder().withDate(\"25-03-18\")"},{"lineNumber":45,"author":{"gitID":"shanwpf"},"content":"            .withStartTime(\"1300\")"},{"lineNumber":46,"author":{"gitID":"shanwpf"},"content":"            .withEndTime(\"1700\")"},{"lineNumber":47,"author":{"gitID":"shanwpf"},"content":"            .withCapacity(\"4\").build();"},{"lineNumber":48,"author":{"gitID":"shanwpf"},"content":"    public static final Shift SHIFT_WEDNESDAY_AM \u003d new ShiftBuilder().withDate(\"21-03-18\")"},{"lineNumber":49,"author":{"gitID":"shanwpf"},"content":"            .withStartTime(\"0900\")"},{"lineNumber":50,"author":{"gitID":"shanwpf"},"content":"            .withEndTime(\"1200\")"},{"lineNumber":51,"author":{"gitID":"shanwpf"},"content":"            .withCapacity(\"5\").build();"},{"lineNumber":52,"author":{"gitID":"shanwpf"},"content":"    public static final Shift SHIFT_WEDNESDAY_PM \u003d new ShiftBuilder().withDate(\"21-03-18\")"},{"lineNumber":53,"author":{"gitID":"shanwpf"},"content":"            .withStartTime(\"1200\")"},{"lineNumber":54,"author":{"gitID":"shanwpf"},"content":"            .withEndTime(\"2200\")"},{"lineNumber":55,"author":{"gitID":"shanwpf"},"content":"            .withCapacity(\"3\").build();"},{"lineNumber":56,"author":{"gitID":"shanwpf"},"content":"    public static final Shift SHIFT_THURSDAY_AM \u003d new ShiftBuilder().withDate(\"22-03-18\")"},{"lineNumber":57,"author":{"gitID":"shanwpf"},"content":"            .withStartTime(\"0900\")"},{"lineNumber":58,"author":{"gitID":"shanwpf"},"content":"            .withEndTime(\"1200\")"},{"lineNumber":59,"author":{"gitID":"shanwpf"},"content":"            .withCapacity(\"5\")"},{"lineNumber":60,"author":{"gitID":"shanwpf"},"content":"            .withEmployees(new EmployeeBuilder().build()).build();"},{"lineNumber":61,"author":{"gitID":"shanwpf"},"content":"    public static final Shift SHIFT_THURSDAY_PM \u003d new ShiftBuilder().withDate(\"22-03-18\")"},{"lineNumber":62,"author":{"gitID":"shanwpf"},"content":"            .withStartTime(\"1200\")"},{"lineNumber":63,"author":{"gitID":"shanwpf"},"content":"            .withEndTime(\"2200\")"},{"lineNumber":64,"author":{"gitID":"shanwpf"},"content":"            .withCapacity(\"3\")"},{"lineNumber":65,"author":{"gitID":"shanwpf"},"content":"            .withEmployees(ALICE, BENSON, CARL).build();"},{"lineNumber":66,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":67,"author":{"gitID":"shanwpf"},"content":"    public static final Shift SHIFT_RUNNING_OUT \u003d new ShiftBuilder().withDate(\"22-03-18\")"},{"lineNumber":68,"author":{"gitID":"shanwpf"},"content":"            .withStartTime(\"0900\")"},{"lineNumber":69,"author":{"gitID":"shanwpf"},"content":"            .withEndTime(\"1200\")"},{"lineNumber":70,"author":{"gitID":"shanwpf"},"content":"            .withCapacity(\"1\").build();"},{"lineNumber":71,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":72,"author":{"gitID":"shanwpf"},"content":"    private TypicalShifts() {} // prevents instantiation"},{"lineNumber":73,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":74,"author":{"gitID":"shanwpf"},"content":"    public static PartTimeManager getTypicalPartTimeManagerWithShifts() {"},{"lineNumber":75,"author":{"gitID":"shanwpf"},"content":"        PartTimeManager ptman \u003d new PartTimeManager();"},{"lineNumber":76,"author":{"gitID":"shanwpf"},"content":"        for (Employee employee : getTypicalEmployees()) {"},{"lineNumber":77,"author":{"gitID":"shanwpf"},"content":"            try {"},{"lineNumber":78,"author":{"gitID":"shanwpf"},"content":"                ptman.addEmployee(employee);"},{"lineNumber":79,"author":{"gitID":"shanwpf"},"content":"            } catch (DuplicateEmployeeException e) {"},{"lineNumber":80,"author":{"gitID":"shanwpf"},"content":"                throw new AssertionError(\"not possible\");"},{"lineNumber":81,"author":{"gitID":"shanwpf"},"content":"            }"},{"lineNumber":82,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":83,"author":{"gitID":"shanwpf"},"content":"        for (Shift shift : getTypicalShifts()) {"},{"lineNumber":84,"author":{"gitID":"shanwpf"},"content":"            try {"},{"lineNumber":85,"author":{"gitID":"shanwpf"},"content":"                ptman.addShift(shift);"},{"lineNumber":86,"author":{"gitID":"shanwpf"},"content":"            } catch (DuplicateShiftException e) {"},{"lineNumber":87,"author":{"gitID":"shanwpf"},"content":"                throw new AssertionError(\"not possible\");"},{"lineNumber":88,"author":{"gitID":"shanwpf"},"content":"            }"},{"lineNumber":89,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":90,"author":{"gitID":"shanwpf"},"content":"        return ptman;"},{"lineNumber":91,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":92,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":93,"author":{"gitID":"shanwpf"},"content":"    public static List\u003cShift\u003e getTypicalShifts() {"},{"lineNumber":94,"author":{"gitID":"shanwpf"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(SHIFT_MONDAY_AM, SHIFT_MONDAY_PM, SHIFT_TUESDAY_AM, SHIFT_TUESDAY_PM,"},{"lineNumber":95,"author":{"gitID":"shanwpf"},"content":"                SHIFT_WEDNESDAY_AM, SHIFT_WEDNESDAY_PM, SHIFT_THURSDAY_PM, SHIFT_SUNDAY_AM, SHIFT_SUNDAY_PM));"},{"lineNumber":96,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":97,"author":{"gitID":"shanwpf"},"content":"}"}],"authorContributionMap":{"shanwpf":80,"-":17}},{"path":"src/test/java/guitests/guihandles/ResultDisplayHandle.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package guitests.guihandles;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"hzxcaryn"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import javafx.scene.control.TextArea;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":8,"author":{"gitID":"-"},"content":" * A handler for the {@code ResultDisplay} of the UI"},{"lineNumber":9,"author":{"gitID":"-"},"content":" */"},{"lineNumber":10,"author":{"gitID":"-"},"content":"public class ResultDisplayHandle extends NodeHandle\u003cTextArea\u003e {"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"    public static final String RESULT_DISPLAY_ID \u003d \"#resultDisplay\";"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"-"},"content":"    public ResultDisplayHandle(TextArea resultDisplayNode) {"},{"lineNumber":15,"author":{"gitID":"-"},"content":"        super(resultDisplayNode);"},{"lineNumber":16,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":19,"author":{"gitID":"-"},"content":"     * Returns the text in the result display."},{"lineNumber":20,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":21,"author":{"gitID":"-"},"content":"    public String getText() {"},{"lineNumber":22,"author":{"gitID":"-"},"content":"        return getRootNode().getText();"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":24,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":25,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":26,"author":{"gitID":"hzxcaryn"},"content":"     * Returns the list of style classes present in the result display."},{"lineNumber":27,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":28,"author":{"gitID":"hzxcaryn"},"content":"    public List\u003cString\u003e getStyleClass() {"},{"lineNumber":29,"author":{"gitID":"hzxcaryn"},"content":"        return getRootNode().getStyleClass();"},{"lineNumber":30,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"hzxcaryn":9,"-":22}},{"path":"src/test/java/guitests/guihandles/CommandBoxHandle.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package guitests.guihandles;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import javafx.scene.input.KeyCode;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import seedu.ptman.ui.CommandBox;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":9,"author":{"gitID":"-"},"content":" * A handle to the {@code CommandBox} in the GUI."},{"lineNumber":10,"author":{"gitID":"-"},"content":" */"},{"lineNumber":11,"author":{"gitID":"-"},"content":"public class CommandBoxHandle extends NodeHandle\u003cTextField\u003e {"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"koo1993"},"content":"    public static final String COMMAND_FIELD_ID \u003d \"#commandTextField\";"},{"lineNumber":14,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"    public CommandBoxHandle(TextField commandBoxNode) {"},{"lineNumber":17,"author":{"gitID":"-"},"content":"        super(commandBoxNode);"},{"lineNumber":18,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":21,"author":{"gitID":"-"},"content":"     * Returns the text in the command box."},{"lineNumber":22,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    public String getInput() {"},{"lineNumber":24,"author":{"gitID":"-"},"content":"        return getRootNode().getText();"},{"lineNumber":25,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":28,"author":{"gitID":"-"},"content":"     * Enters the given command in the Command Box and presses enter."},{"lineNumber":29,"author":{"gitID":"-"},"content":"     * @return true if the command succeeded, false otherwise."},{"lineNumber":30,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":31,"author":{"gitID":"-"},"content":"    public boolean run(String command) {"},{"lineNumber":32,"author":{"gitID":"-"},"content":"        click();"},{"lineNumber":33,"author":{"gitID":"-"},"content":"        guiRobot.interact(() -\u003e getRootNode().setText(command));"},{"lineNumber":34,"author":{"gitID":"-"},"content":"        guiRobot.pauseForHuman();"},{"lineNumber":35,"author":{"gitID":"-"},"content":""},{"lineNumber":36,"author":{"gitID":"-"},"content":"        guiRobot.type(KeyCode.ENTER);"},{"lineNumber":37,"author":{"gitID":"-"},"content":""},{"lineNumber":38,"author":{"gitID":"-"},"content":"        return !getStyleClass().contains(CommandBox.ERROR_STYLE_CLASS);"},{"lineNumber":39,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"-"},"content":""},{"lineNumber":41,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":42,"author":{"gitID":"-"},"content":"     * Returns the list of style classes present in the command box."},{"lineNumber":43,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    public ObservableList\u003cString\u003e getStyleClass() {"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        return getRootNode().getStyleClass();"},{"lineNumber":46,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"koo1993":2,"-":45}},{"path":"src/test/java/guitests/guihandles/MainWindowHandle.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package guitests.guihandles;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import javafx.scene.input.KeyCode;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import javafx.stage.Stage;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"-"},"content":" * Provides a handle for {@code MainWindow}."},{"lineNumber":8,"author":{"gitID":"-"},"content":" */"},{"lineNumber":9,"author":{"gitID":"-"},"content":"public class MainWindowHandle extends StageHandle {"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"    private final EmployeeListPanelHandle employeeListPanel;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"    private final ResultDisplayHandle resultDisplay;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"    private final CommandBoxHandle commandBox;"},{"lineNumber":14,"author":{"gitID":"hzxcaryn"},"content":"    private final AdminModeDisplayHandle adminModeDisplay;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"    private final StatusBarFooterHandle statusBarFooter;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"    private final MainMenuHandle mainMenu;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"    private final OutletDetailsPanelHandle outletPanel;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"    private final TimetablePanelHandle timetablePanel;"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":"    private final KeyCode[] keyCtrlShiftLeft \u003d {KeyCode.SHORTCUT, KeyCode.SHIFT, KeyCode.LEFT};"},{"lineNumber":21,"author":{"gitID":"-"},"content":"    private final KeyCode[] keyCtrlShiftRight \u003d {KeyCode.SHORTCUT, KeyCode.SHIFT, KeyCode.RIGHT};"},{"lineNumber":22,"author":{"gitID":"-"},"content":"    private final KeyCode[] keyCtrlShiftDown \u003d {KeyCode.SHORTCUT, KeyCode.SHIFT, KeyCode.DOWN};"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"    public MainWindowHandle(Stage stage) {"},{"lineNumber":25,"author":{"gitID":"-"},"content":"        super(stage);"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":"        employeeListPanel \u003d new EmployeeListPanelHandle(getChildNode(EmployeeListPanelHandle.EMPLOYEE_LIST_VIEW_ID));"},{"lineNumber":28,"author":{"gitID":"-"},"content":"        resultDisplay \u003d new ResultDisplayHandle(getChildNode(ResultDisplayHandle.RESULT_DISPLAY_ID));"},{"lineNumber":29,"author":{"gitID":"koo1993"},"content":"        commandBox \u003d new CommandBoxHandle(getChildNode(CommandBoxHandle.COMMAND_FIELD_ID));"},{"lineNumber":30,"author":{"gitID":"hzxcaryn"},"content":"        adminModeDisplay \u003d new AdminModeDisplayHandle(getChildNode(AdminModeDisplayHandle.ADMIN_MODE_DISPLAY_LABEL_ID));"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        statusBarFooter \u003d new StatusBarFooterHandle(getChildNode(StatusBarFooterHandle.STATUS_BAR_PLACEHOLDER));"},{"lineNumber":32,"author":{"gitID":"-"},"content":"        mainMenu \u003d new MainMenuHandle(getChildNode(MainMenuHandle.MENU_BAR_ID));"},{"lineNumber":33,"author":{"gitID":"-"},"content":"        outletPanel \u003d new OutletDetailsPanelHandle(getChildNode(OutletDetailsPanelHandle.OUTLET_ID));"},{"lineNumber":34,"author":{"gitID":"-"},"content":"        timetablePanel \u003d new TimetablePanelHandle(getChildNode(TimetablePanelHandle.TIMETABLE_PANEL_PLACEHOLDER_ID));"},{"lineNumber":35,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"    public EmployeeListPanelHandle getEmployeeListPanel() {"},{"lineNumber":38,"author":{"gitID":"-"},"content":"        return employeeListPanel;"},{"lineNumber":39,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"-"},"content":""},{"lineNumber":41,"author":{"gitID":"-"},"content":"    public ResultDisplayHandle getResultDisplay() {"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        return resultDisplay;"},{"lineNumber":43,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"-"},"content":"    public CommandBoxHandle getCommandBox() {"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        return commandBox;"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"hzxcaryn"},"content":"    public AdminModeDisplayHandle getAdminModeDisplay() {"},{"lineNumber":50,"author":{"gitID":"hzxcaryn"},"content":"        return adminModeDisplay;"},{"lineNumber":51,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":53,"author":{"gitID":"-"},"content":"    public StatusBarFooterHandle getStatusBarFooter() {"},{"lineNumber":54,"author":{"gitID":"-"},"content":"        return statusBarFooter;"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"-"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":"    public MainMenuHandle getMainMenu() {"},{"lineNumber":58,"author":{"gitID":"-"},"content":"        return mainMenu;"},{"lineNumber":59,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":60,"author":{"gitID":"-"},"content":""},{"lineNumber":61,"author":{"gitID":"-"},"content":"    public OutletDetailsPanelHandle getOutletDetailsPanel() {"},{"lineNumber":62,"author":{"gitID":"-"},"content":"        return outletPanel;"},{"lineNumber":63,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"-"},"content":""},{"lineNumber":65,"author":{"gitID":"-"},"content":"    public TimetablePanelHandle getTimetablePanel() {"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        return timetablePanel;"},{"lineNumber":67,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"-"},"content":""},{"lineNumber":69,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"koo1993":1,"hzxcaryn":6,"-":62}},{"path":"src/test/java/guitests/guihandles/OutletDetailsPanelHandle.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package guitests.guihandles;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import javafx.scene.Node;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import javafx.scene.control.Label;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"hzxcaryn"},"content":"//@@author hzxcaryn"},{"lineNumber":7,"author":{"gitID":"hzxcaryn"},"content":"/**"},{"lineNumber":8,"author":{"gitID":"hzxcaryn"},"content":" * A handler for the {@code OutletDetailsPanel} of the UI"},{"lineNumber":9,"author":{"gitID":"hzxcaryn"},"content":" */"},{"lineNumber":10,"author":{"gitID":"hzxcaryn"},"content":"public class OutletDetailsPanelHandle extends NodeHandle\u003cNode\u003e {"},{"lineNumber":11,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":12,"author":{"gitID":"hzxcaryn"},"content":"    public static final String OUTLET_ID \u003d \"#outletDetailsPanelPlaceholder\";"},{"lineNumber":13,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":14,"author":{"gitID":"hzxcaryn"},"content":"    private static final String OUTLET_NAME_ID \u003d \"#outletNamePanelHeader\";"},{"lineNumber":15,"author":{"gitID":"hzxcaryn"},"content":"    private static final String OUTLET_OPERATING_HOURS_ID \u003d \"#operatingHours\";"},{"lineNumber":16,"author":{"gitID":"hzxcaryn"},"content":"    private static final String OUTLET_CONTACT_ID \u003d \"#outletContact\";"},{"lineNumber":17,"author":{"gitID":"hzxcaryn"},"content":"    private static final String OUTLET_EMAIL_ID \u003d \"#outletEmail\";"},{"lineNumber":18,"author":{"gitID":"hzxcaryn"},"content":"    private static final String OUTLET_ANNOUNCEMENT_ID \u003d \"#announcement\";"},{"lineNumber":19,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":20,"author":{"gitID":"hzxcaryn"},"content":"    private final Label outletNameNode;"},{"lineNumber":21,"author":{"gitID":"hzxcaryn"},"content":"    private final Label outletOperatingHoursNode;"},{"lineNumber":22,"author":{"gitID":"hzxcaryn"},"content":"    private final Label outletContactNode;"},{"lineNumber":23,"author":{"gitID":"hzxcaryn"},"content":"    private final Label outletEmailNode;"},{"lineNumber":24,"author":{"gitID":"hzxcaryn"},"content":"    private final Label outletAnnouncementNode;"},{"lineNumber":25,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":26,"author":{"gitID":"hzxcaryn"},"content":"    private String lastRememberedOutletName;"},{"lineNumber":27,"author":{"gitID":"hzxcaryn"},"content":"    private String lastRememberedOutletOperatingHours;"},{"lineNumber":28,"author":{"gitID":"hzxcaryn"},"content":"    private String lastRememberedOutletContact;"},{"lineNumber":29,"author":{"gitID":"hzxcaryn"},"content":"    private String lastRememberedOutletEmail;"},{"lineNumber":30,"author":{"gitID":"hzxcaryn"},"content":"    private String lastRememberedOutletAnnouncement;"},{"lineNumber":31,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":32,"author":{"gitID":"hzxcaryn"},"content":"    public OutletDetailsPanelHandle(Node outletDetailsNode) {"},{"lineNumber":33,"author":{"gitID":"hzxcaryn"},"content":"        super(outletDetailsNode);"},{"lineNumber":34,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":35,"author":{"gitID":"hzxcaryn"},"content":"        this.outletNameNode \u003d getChildNode(OUTLET_NAME_ID);"},{"lineNumber":36,"author":{"gitID":"hzxcaryn"},"content":"        this.outletOperatingHoursNode \u003d getChildNode(OUTLET_OPERATING_HOURS_ID);"},{"lineNumber":37,"author":{"gitID":"hzxcaryn"},"content":"        this.outletContactNode \u003d getChildNode(OUTLET_CONTACT_ID);"},{"lineNumber":38,"author":{"gitID":"hzxcaryn"},"content":"        this.outletEmailNode \u003d getChildNode(OUTLET_EMAIL_ID);"},{"lineNumber":39,"author":{"gitID":"hzxcaryn"},"content":"        this.outletAnnouncementNode \u003d getChildNode(OUTLET_ANNOUNCEMENT_ID);"},{"lineNumber":40,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":41,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":42,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":43,"author":{"gitID":"hzxcaryn"},"content":"     * @return the outlet name in outlet panel."},{"lineNumber":44,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":45,"author":{"gitID":"hzxcaryn"},"content":"    public String getOutletName() {"},{"lineNumber":46,"author":{"gitID":"hzxcaryn"},"content":"        return outletNameNode.getText();"},{"lineNumber":47,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":48,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":49,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":50,"author":{"gitID":"hzxcaryn"},"content":"     * @return the outlet info in outlet panel."},{"lineNumber":51,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":52,"author":{"gitID":"hzxcaryn"},"content":"    public String getAnnouncement() {"},{"lineNumber":53,"author":{"gitID":"hzxcaryn"},"content":"        return outletAnnouncementNode.getText();"},{"lineNumber":54,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":55,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":56,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":57,"author":{"gitID":"hzxcaryn"},"content":"     * @return the outlet info in outlet panel."},{"lineNumber":58,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":59,"author":{"gitID":"hzxcaryn"},"content":"    public String getOutletOperatingHours() {"},{"lineNumber":60,"author":{"gitID":"hzxcaryn"},"content":"        return outletOperatingHoursNode.getText();"},{"lineNumber":61,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":62,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":63,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":64,"author":{"gitID":"hzxcaryn"},"content":"     * @return the outlet info in outlet panel."},{"lineNumber":65,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":66,"author":{"gitID":"hzxcaryn"},"content":"    public String getOutletContact() {"},{"lineNumber":67,"author":{"gitID":"hzxcaryn"},"content":"        return outletContactNode.getText();"},{"lineNumber":68,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":69,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":70,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":71,"author":{"gitID":"hzxcaryn"},"content":"     * @return the outlet info in outlet panel."},{"lineNumber":72,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":73,"author":{"gitID":"hzxcaryn"},"content":"    public String getOutletEmail() {"},{"lineNumber":74,"author":{"gitID":"hzxcaryn"},"content":"        return outletEmailNode.getText();"},{"lineNumber":75,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":76,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":77,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":78,"author":{"gitID":"hzxcaryn"},"content":"     * Remembers the outlet name in the outlet panel."},{"lineNumber":79,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":80,"author":{"gitID":"hzxcaryn"},"content":"    public void rememberOutletName() {"},{"lineNumber":81,"author":{"gitID":"hzxcaryn"},"content":"        lastRememberedOutletName \u003d getOutletName();"},{"lineNumber":82,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":83,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":84,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":85,"author":{"gitID":"hzxcaryn"},"content":"     * Returns true if the current outlet name is different from the value remembered by the most recent"},{"lineNumber":86,"author":{"gitID":"hzxcaryn"},"content":"     * {@code rememberOutletName()} call."},{"lineNumber":87,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":88,"author":{"gitID":"hzxcaryn"},"content":"    public boolean isOutletNameChanged() {"},{"lineNumber":89,"author":{"gitID":"hzxcaryn"},"content":"        return !lastRememberedOutletName.equals(getOutletName());"},{"lineNumber":90,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":91,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":92,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":93,"author":{"gitID":"hzxcaryn"},"content":"     * Remembers the outlet info in the outlet panel."},{"lineNumber":94,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":95,"author":{"gitID":"hzxcaryn"},"content":"    public void rememberOutletInformation() {"},{"lineNumber":96,"author":{"gitID":"hzxcaryn"},"content":"        lastRememberedOutletOperatingHours \u003d getOutletOperatingHours();"},{"lineNumber":97,"author":{"gitID":"hzxcaryn"},"content":"        lastRememberedOutletContact \u003d getOutletContact();"},{"lineNumber":98,"author":{"gitID":"hzxcaryn"},"content":"        lastRememberedOutletEmail \u003d getOutletEmail();"},{"lineNumber":99,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":100,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":101,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":102,"author":{"gitID":"hzxcaryn"},"content":"     * Returns true if the current outlet information is different from the value remembered by the most"},{"lineNumber":103,"author":{"gitID":"hzxcaryn"},"content":"     * recent {@code rememberOutletInformation()} call."},{"lineNumber":104,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":105,"author":{"gitID":"hzxcaryn"},"content":"    public boolean isOutletInformationChanged() {"},{"lineNumber":106,"author":{"gitID":"hzxcaryn"},"content":"        boolean isOutletOperatingHoursChanged \u003d !lastRememberedOutletOperatingHours.equals(getOutletOperatingHours());"},{"lineNumber":107,"author":{"gitID":"hzxcaryn"},"content":"        boolean isOutletContactChanged \u003d !lastRememberedOutletContact.equals(getOutletContact());"},{"lineNumber":108,"author":{"gitID":"hzxcaryn"},"content":"        boolean isOutletEmailChanged \u003d !lastRememberedOutletEmail.equals(getOutletContact());"},{"lineNumber":109,"author":{"gitID":"hzxcaryn"},"content":"        return isOutletOperatingHoursChanged \u0026\u0026 isOutletContactChanged \u0026\u0026 isOutletEmailChanged;"},{"lineNumber":110,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":111,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":112,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":113,"author":{"gitID":"hzxcaryn"},"content":"     * Remembers the outlet name in the outlet panel."},{"lineNumber":114,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":115,"author":{"gitID":"hzxcaryn"},"content":"    public void rememberOutletAnnouncement() {"},{"lineNumber":116,"author":{"gitID":"hzxcaryn"},"content":"        lastRememberedOutletAnnouncement \u003d getAnnouncement();"},{"lineNumber":117,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":118,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":119,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":120,"author":{"gitID":"hzxcaryn"},"content":"     * Returns true if the current outlet name is different from the value remembered by the most recent"},{"lineNumber":121,"author":{"gitID":"hzxcaryn"},"content":"     * {@code rememberOutletName()} call."},{"lineNumber":122,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":123,"author":{"gitID":"hzxcaryn"},"content":"    public boolean isOutletAnnouncementChanged() {"},{"lineNumber":124,"author":{"gitID":"hzxcaryn"},"content":"        return !lastRememberedOutletAnnouncement.equals(getAnnouncement());"},{"lineNumber":125,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":126,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":127,"author":{"gitID":"hzxcaryn"},"content":"}"}],"authorContributionMap":{"hzxcaryn":122,"-":5}},{"path":"src/test/java/guitests/guihandles/EmployeeCardHandle.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package guitests.guihandles;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import javafx.scene.Node;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import javafx.scene.control.Label;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":11,"author":{"gitID":"-"},"content":" * Provides a handle to a employee card in the employee list panel."},{"lineNumber":12,"author":{"gitID":"-"},"content":" */"},{"lineNumber":13,"author":{"gitID":"-"},"content":"public class EmployeeCardHandle extends NodeHandle\u003cNode\u003e {"},{"lineNumber":14,"author":{"gitID":"-"},"content":"    private static final String ID_FIELD_ID \u003d \"#id\";"},{"lineNumber":15,"author":{"gitID":"-"},"content":"    private static final String NAME_FIELD_ID \u003d \"#name\";"},{"lineNumber":16,"author":{"gitID":"-"},"content":"    private static final String ADDRESS_FIELD_ID \u003d \"#address\";"},{"lineNumber":17,"author":{"gitID":"-"},"content":"    private static final String PHONE_FIELD_ID \u003d \"#phone\";"},{"lineNumber":18,"author":{"gitID":"-"},"content":"    private static final String EMAIL_FIELD_ID \u003d \"#email\";"},{"lineNumber":19,"author":{"gitID":"-"},"content":"    private static final String TAGS_FIELD_ID \u003d \"#tags\";"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":"    private final Label idLabel;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"    private final Label nameLabel;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    private final Label addressLabel;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    private final Label phoneLabel;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"    private final Label emailLabel;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    private final List\u003cLabel\u003e tagLabels;"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    public EmployeeCardHandle(Node cardNode) {"},{"lineNumber":29,"author":{"gitID":"-"},"content":"        super(cardNode);"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"        this.idLabel \u003d getChildNode(ID_FIELD_ID);"},{"lineNumber":32,"author":{"gitID":"-"},"content":"        this.nameLabel \u003d getChildNode(NAME_FIELD_ID);"},{"lineNumber":33,"author":{"gitID":"-"},"content":"        this.addressLabel \u003d getChildNode(ADDRESS_FIELD_ID);"},{"lineNumber":34,"author":{"gitID":"-"},"content":"        this.phoneLabel \u003d getChildNode(PHONE_FIELD_ID);"},{"lineNumber":35,"author":{"gitID":"-"},"content":"        this.emailLabel \u003d getChildNode(EMAIL_FIELD_ID);"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"        Region tagsContainer \u003d getChildNode(TAGS_FIELD_ID);"},{"lineNumber":38,"author":{"gitID":"-"},"content":"        this.tagLabels \u003d tagsContainer"},{"lineNumber":39,"author":{"gitID":"-"},"content":"                .getChildrenUnmodifiable()"},{"lineNumber":40,"author":{"gitID":"-"},"content":"                .stream()"},{"lineNumber":41,"author":{"gitID":"-"},"content":"                .map(Label.class::cast)"},{"lineNumber":42,"author":{"gitID":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":43,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"-"},"content":"    public String getId() {"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        return idLabel.getText();"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"-"},"content":"    public String getName() {"},{"lineNumber":50,"author":{"gitID":"-"},"content":"        return nameLabel.getText();"},{"lineNumber":51,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"-"},"content":""},{"lineNumber":53,"author":{"gitID":"-"},"content":"    public String getAddress() {"},{"lineNumber":54,"author":{"gitID":"-"},"content":"        return addressLabel.getText();"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"-"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":"    public String getPhone() {"},{"lineNumber":58,"author":{"gitID":"-"},"content":"        return phoneLabel.getText();"},{"lineNumber":59,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":60,"author":{"gitID":"-"},"content":""},{"lineNumber":61,"author":{"gitID":"-"},"content":"    public String getEmail() {"},{"lineNumber":62,"author":{"gitID":"-"},"content":"        return emailLabel.getText();"},{"lineNumber":63,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"-"},"content":""},{"lineNumber":65,"author":{"gitID":"-"},"content":"    public List\u003cString\u003e getTags() {"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        return tagLabels"},{"lineNumber":67,"author":{"gitID":"-"},"content":"                .stream()"},{"lineNumber":68,"author":{"gitID":"-"},"content":"                .map(Label::getText)"},{"lineNumber":69,"author":{"gitID":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":70,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":72,"author":{"gitID":"hzxcaryn"},"content":"    public List\u003cString\u003e getTagStyleClasses(String tag) {"},{"lineNumber":73,"author":{"gitID":"-"},"content":"        return tagLabels"},{"lineNumber":74,"author":{"gitID":"-"},"content":"                .stream()"},{"lineNumber":75,"author":{"gitID":"hzxcaryn"},"content":"                .filter(label -\u003e label.getText().equals(tag))"},{"lineNumber":76,"author":{"gitID":"hzxcaryn"},"content":"                .map(Label::getStyleClass)"},{"lineNumber":77,"author":{"gitID":"hzxcaryn"},"content":"                .findFirst()"},{"lineNumber":78,"author":{"gitID":"hzxcaryn"},"content":"                .orElseThrow(() -\u003e new IllegalArgumentException(\"Tag does not exist.\"));"},{"lineNumber":79,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":80,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":81,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"hzxcaryn":8,"-":73}},{"path":"src/test/java/guitests/guihandles/StatusBarFooterHandle.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package guitests.guihandles;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import org.controlsfx.control.StatusBar;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import javafx.scene.Node;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":8,"author":{"gitID":"-"},"content":" * A handle for the {@code StatusBarFooter} at the footer of the application."},{"lineNumber":9,"author":{"gitID":"-"},"content":" */"},{"lineNumber":10,"author":{"gitID":"-"},"content":"public class StatusBarFooterHandle extends NodeHandle\u003cNode\u003e {"},{"lineNumber":11,"author":{"gitID":"-"},"content":"    public static final String STATUS_BAR_PLACEHOLDER \u003d \"#statusbarPlaceholder\";"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"    private static final String SYNC_STATUS_ID \u003d \"#syncStatus\";"},{"lineNumber":14,"author":{"gitID":"-"},"content":"    private static final String NUM_EMPLOYEES_STATUS_ID \u003d \"#numEmployeesStatus\";"},{"lineNumber":15,"author":{"gitID":"-"},"content":"    private static final String SAVE_LOCATION_STATUS_ID \u003d \"#saveLocationStatus\";"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"    private final StatusBar syncStatusNode;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"    private final StatusBar numEmployeesNode;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"    private final StatusBar saveLocationNode;"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":"    private String lastRememberedSyncStatus;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"    private String lastRememberedNumEmployees;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    private String lastRememberedSaveLocation;"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"    public StatusBarFooterHandle(Node statusBarFooterNode) {"},{"lineNumber":26,"author":{"gitID":"-"},"content":"        super(statusBarFooterNode);"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"        this.syncStatusNode \u003d getChildNode(SYNC_STATUS_ID);"},{"lineNumber":29,"author":{"gitID":"-"},"content":"        this.numEmployeesNode \u003d getChildNode(NUM_EMPLOYEES_STATUS_ID);"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        this.saveLocationNode \u003d getChildNode(SAVE_LOCATION_STATUS_ID);"},{"lineNumber":31,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":34,"author":{"gitID":"-"},"content":"     * Returns the text of the sync status portion of the status bar."},{"lineNumber":35,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":36,"author":{"gitID":"-"},"content":"    public String getSyncStatus() {"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        return syncStatusNode.getText();"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":41,"author":{"gitID":"-"},"content":"     * Returns the text of the \u0027num employees\u0027 portion of the status bar."},{"lineNumber":42,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":43,"author":{"gitID":"-"},"content":"    public String getNumEmployees() {"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        return numEmployeesNode.getText();"},{"lineNumber":45,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":48,"author":{"gitID":"-"},"content":"     * Returns the text of the \u0027save location\u0027 portion of the status bar."},{"lineNumber":49,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":50,"author":{"gitID":"-"},"content":"    public String getSaveLocation() {"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        return saveLocationNode.getText();"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":55,"author":{"gitID":"-"},"content":"     * Remembers the content of the sync status portion of the status bar."},{"lineNumber":56,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":57,"author":{"gitID":"-"},"content":"    public void rememberSyncStatus() {"},{"lineNumber":58,"author":{"gitID":"-"},"content":"        lastRememberedSyncStatus \u003d getSyncStatus();"},{"lineNumber":59,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":60,"author":{"gitID":"-"},"content":""},{"lineNumber":61,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":62,"author":{"gitID":"-"},"content":"     * Returns true if the current content of the sync status is different from the value remembered by the most recent"},{"lineNumber":63,"author":{"gitID":"-"},"content":"     * {@code rememberSyncStatus()} call."},{"lineNumber":64,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":65,"author":{"gitID":"-"},"content":"    public boolean isSyncStatusChanged() {"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        return !lastRememberedSyncStatus.equals(getSyncStatus());"},{"lineNumber":67,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"-"},"content":""},{"lineNumber":69,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":70,"author":{"gitID":"-"},"content":"     * Remembers the content of the \u0027num Employees\u0027 portion of the status bar."},{"lineNumber":71,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":72,"author":{"gitID":"-"},"content":"    public void rememberNumEmployees() {"},{"lineNumber":73,"author":{"gitID":"-"},"content":"        lastRememberedNumEmployees \u003d getNumEmployees();"},{"lineNumber":74,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":75,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":76,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":77,"author":{"gitID":"-"},"content":"     * Returns true if the current content of the \u0027num employees\u0027 is different from the value remembered by the most"},{"lineNumber":78,"author":{"gitID":"-"},"content":"     * recent {@code rememberSaveLocation()} call."},{"lineNumber":79,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":80,"author":{"gitID":"-"},"content":"    public boolean isNumEmployeesChanged() {"},{"lineNumber":81,"author":{"gitID":"-"},"content":"        return !lastRememberedNumEmployees.equals(getNumEmployees());"},{"lineNumber":82,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":83,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":84,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":85,"author":{"gitID":"-"},"content":"     * Remembers the content of the \u0027save location\u0027 portion of the status bar."},{"lineNumber":86,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":87,"author":{"gitID":"-"},"content":"    public void rememberSaveLocation() {"},{"lineNumber":88,"author":{"gitID":"-"},"content":"        lastRememberedSaveLocation \u003d getSaveLocation();"},{"lineNumber":89,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":90,"author":{"gitID":"-"},"content":""},{"lineNumber":91,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":92,"author":{"gitID":"-"},"content":"     * Returns true if the current content of the \u0027save location\u0027 is different from the value remembered by the most"},{"lineNumber":93,"author":{"gitID":"-"},"content":"     * recent {@code rememberSaveLocation()} call."},{"lineNumber":94,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":95,"author":{"gitID":"-"},"content":"    public boolean isSaveLocationChanged() {"},{"lineNumber":96,"author":{"gitID":"-"},"content":"        return !lastRememberedSaveLocation.equals(getSaveLocation());"},{"lineNumber":97,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":98,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"hzxcaryn":11,"-":87}},{"path":"src/test/java/guitests/guihandles/AdminModeDisplayHandle.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package guitests.guihandles;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"hzxcaryn"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import javafx.scene.control.Label;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"hzxcaryn"},"content":"//@@author hzxcaryn"},{"lineNumber":8,"author":{"gitID":"hzxcaryn"},"content":"/**"},{"lineNumber":9,"author":{"gitID":"hzxcaryn"},"content":" * A handler for the {@code AdminModeDetails} of the UI"},{"lineNumber":10,"author":{"gitID":"hzxcaryn"},"content":" */"},{"lineNumber":11,"author":{"gitID":"hzxcaryn"},"content":"public class AdminModeDisplayHandle extends NodeHandle\u003cLabel\u003e {"},{"lineNumber":12,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":13,"author":{"gitID":"hzxcaryn"},"content":"    public static final String ADMIN_MODE_DISPLAY_LABEL_ID \u003d \"#adminModeDisplay\";"},{"lineNumber":14,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":15,"author":{"gitID":"hzxcaryn"},"content":"    public AdminModeDisplayHandle (Label adminModeDisplayNode) {"},{"lineNumber":16,"author":{"gitID":"hzxcaryn"},"content":"        super(adminModeDisplayNode);"},{"lineNumber":17,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":18,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":19,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":20,"author":{"gitID":"hzxcaryn"},"content":"     * @return the text in the admin mode label"},{"lineNumber":21,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":22,"author":{"gitID":"hzxcaryn"},"content":"    public String getText() {"},{"lineNumber":23,"author":{"gitID":"hzxcaryn"},"content":"        return getRootNode().getText();"},{"lineNumber":24,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":25,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":26,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":27,"author":{"gitID":"hzxcaryn"},"content":"     * @return the list of style classes present in the admin mode display"},{"lineNumber":28,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":29,"author":{"gitID":"hzxcaryn"},"content":"    public List\u003cString\u003e getStyleClass() {"},{"lineNumber":30,"author":{"gitID":"hzxcaryn"},"content":"        return getRootNode().getStyleClass();"},{"lineNumber":31,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":32,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":33,"author":{"gitID":"hzxcaryn"},"content":"}"}],"authorContributionMap":{"hzxcaryn":29,"-":4}},{"path":"src/main/java/seedu/ptman/ui/PtmanLogoDisplay.java","lines":[{"lineNumber":1,"author":{"gitID":"hzxcaryn"},"content":"package seedu.ptman.ui;"},{"lineNumber":2,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":3,"author":{"gitID":"hzxcaryn"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitID":"hzxcaryn"},"content":"import javafx.scene.image.Image;"},{"lineNumber":5,"author":{"gitID":"hzxcaryn"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":6,"author":{"gitID":"hzxcaryn"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":7,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":8,"author":{"gitID":"hzxcaryn"},"content":"//@@author hzxcaryn"},{"lineNumber":9,"author":{"gitID":"hzxcaryn"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"hzxcaryn"},"content":" * Displays the PTMan logo at the left side of the command box."},{"lineNumber":11,"author":{"gitID":"hzxcaryn"},"content":" */"},{"lineNumber":12,"author":{"gitID":"hzxcaryn"},"content":"public class PtmanLogoDisplay extends UiPart\u003cRegion\u003e {"},{"lineNumber":13,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":14,"author":{"gitID":"hzxcaryn"},"content":"    private static final String imagePath \u003d \"/icons/ptman_logo_icon.png\";"},{"lineNumber":15,"author":{"gitID":"hzxcaryn"},"content":"    private static final String FXML \u003d \"PtmanLogoDisplay.fxml\";"},{"lineNumber":16,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":17,"author":{"gitID":"hzxcaryn"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitID":"hzxcaryn"},"content":"    private ImageView ptmanLogoView;"},{"lineNumber":19,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":20,"author":{"gitID":"hzxcaryn"},"content":"    public PtmanLogoDisplay() {"},{"lineNumber":21,"author":{"gitID":"hzxcaryn"},"content":"        super(FXML);"},{"lineNumber":22,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":23,"author":{"gitID":"hzxcaryn"},"content":"        Image ptmanLogo \u003d new Image(imagePath);"},{"lineNumber":24,"author":{"gitID":"hzxcaryn"},"content":"        ptmanLogoView.setImage(ptmanLogo);"},{"lineNumber":25,"author":{"gitID":"hzxcaryn"},"content":"        setLogoSize();"},{"lineNumber":26,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":28,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":29,"author":{"gitID":"hzxcaryn"},"content":"     * Scale the logo image to the desired size"},{"lineNumber":30,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":31,"author":{"gitID":"hzxcaryn"},"content":"    private void setLogoSize() {"},{"lineNumber":32,"author":{"gitID":"hzxcaryn"},"content":"        ptmanLogoView.setFitWidth(35);"},{"lineNumber":33,"author":{"gitID":"hzxcaryn"},"content":"        ptmanLogoView.setPreserveRatio(true);"},{"lineNumber":34,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"hzxcaryn"},"content":"}"}],"authorContributionMap":{"hzxcaryn":35}},{"path":"src/main/java/seedu/ptman/ui/CommandBox.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_PASSWORD;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"koo1993"},"content":"import com.sun.javafx.scene.control.behavior.PasswordFieldBehavior;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import com.sun.javafx.scene.control.skin.TextFieldSkin;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import javafx.fxml.FXML;"},{"lineNumber":12,"author":{"gitID":"koo1993"},"content":"import javafx.scene.control.PasswordField;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import javafx.scene.control.Tooltip;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import javafx.scene.input.KeyEvent;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":18,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.LogsCenter;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.ui.NewResultAvailableEvent;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.ListElementPointer;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.Logic;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.CommandResult;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.exceptions.CommandException;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.parser.exceptions.ParseException;"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":29,"author":{"gitID":"-"},"content":" * The UI component that is responsible for receiving user command inputs."},{"lineNumber":30,"author":{"gitID":"-"},"content":" */"},{"lineNumber":31,"author":{"gitID":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {"},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";"},{"lineNumber":34,"author":{"gitID":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";"},{"lineNumber":35,"author":{"gitID":"-"},"content":""},{"lineNumber":36,"author":{"gitID":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(CommandBox.class);"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    private final Logic logic;"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    private ListElementPointer historySnapshot;"},{"lineNumber":39,"author":{"gitID":"-"},"content":"    private final Tooltip tooltip \u003d new Tooltip();"},{"lineNumber":40,"author":{"gitID":"-"},"content":""},{"lineNumber":41,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":42,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":43,"author":{"gitID":"koo1993"},"content":"    private PasswordField commandTextField;"},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"koo1993"},"content":"    //@@author koo1993"},{"lineNumber":46,"author":{"gitID":"koo1993"},"content":"    public CommandBox(Logic logic) {"},{"lineNumber":47,"author":{"gitID":"koo1993"},"content":"        super(FXML);"},{"lineNumber":48,"author":{"gitID":"koo1993"},"content":"        this.logic \u003d logic;"},{"lineNumber":49,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":50,"author":{"gitID":"koo1993"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box."},{"lineNumber":51,"author":{"gitID":"koo1993"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());"},{"lineNumber":52,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":53,"author":{"gitID":"koo1993"},"content":"        commandTextField.setSkin(new PasswordFieldSkinAndCaret(commandTextField , Color.web(\"969696\")));"},{"lineNumber":54,"author":{"gitID":"koo1993"},"content":"        historySnapshot \u003d logic.getHistorySnapshot();"},{"lineNumber":55,"author":{"gitID":"koo1993"},"content":"        tooltip.setText(\"Tip: Enter \\\"help\\\" when you get stuck\");"},{"lineNumber":56,"author":{"gitID":"koo1993"},"content":"        commandTextField.setTooltip(tooltip);"},{"lineNumber":57,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":58,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":59,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":60,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":61,"author":{"gitID":"koo1993"},"content":"     * Obscure sensitive information like password by replacing each character by \"*\""},{"lineNumber":62,"author":{"gitID":"koo1993"},"content":"     * @param input"},{"lineNumber":63,"author":{"gitID":"koo1993"},"content":"     * @return the processed input"},{"lineNumber":64,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":65,"author":{"gitID":"koo1993"},"content":"    private String processInput(String input) {"},{"lineNumber":66,"author":{"gitID":"koo1993"},"content":"        StringBuilder newString \u003d new StringBuilder(input);"},{"lineNumber":67,"author":{"gitID":"koo1993"},"content":"        int indexOfPrefix \u003d input.indexOf(PREFIX_PASSWORD.getPrefix());"},{"lineNumber":68,"author":{"gitID":"koo1993"},"content":"        int indexOfSpace \u003d input.indexOf(\" \", indexOfPrefix);"},{"lineNumber":69,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":70,"author":{"gitID":"koo1993"},"content":"        while (indexOfPrefix \u003e\u003d 0) {"},{"lineNumber":71,"author":{"gitID":"koo1993"},"content":"            if (indexOfSpace \u003d\u003d -1) {"},{"lineNumber":72,"author":{"gitID":"koo1993"},"content":"                indexOfSpace \u003d input.length();"},{"lineNumber":73,"author":{"gitID":"koo1993"},"content":"            }"},{"lineNumber":74,"author":{"gitID":"koo1993"},"content":"            for (int i \u003d indexOfPrefix + 3; i \u003c indexOfSpace; i++) {"},{"lineNumber":75,"author":{"gitID":"koo1993"},"content":"                newString.replace(i, i + 1, \"*\");"},{"lineNumber":76,"author":{"gitID":"koo1993"},"content":"            }"},{"lineNumber":77,"author":{"gitID":"koo1993"},"content":"            indexOfPrefix \u003d input.indexOf(PREFIX_PASSWORD.getPrefix(), indexOfPrefix + 3);"},{"lineNumber":78,"author":{"gitID":"koo1993"},"content":"            indexOfSpace \u003d input.indexOf(\" \", indexOfPrefix);"},{"lineNumber":79,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":80,"author":{"gitID":"koo1993"},"content":"        return newString.toString();"},{"lineNumber":81,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":82,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":83,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":84,"author":{"gitID":"koo1993"},"content":"    //@@author"},{"lineNumber":85,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":86,"author":{"gitID":"-"},"content":"     * Handles the key press event, {@code keyEvent}."},{"lineNumber":87,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":88,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":89,"author":{"gitID":"-"},"content":"    private void handleKeyPress(KeyEvent keyEvent) {"},{"lineNumber":90,"author":{"gitID":"-"},"content":"        switch (keyEvent.getCode()) {"},{"lineNumber":91,"author":{"gitID":"-"},"content":"        case UP:"},{"lineNumber":92,"author":{"gitID":"-"},"content":"            // As up and down buttons will alter the position of the caret,"},{"lineNumber":93,"author":{"gitID":"-"},"content":"            // consuming it causes the caret\u0027s position to remain unchanged"},{"lineNumber":94,"author":{"gitID":"-"},"content":"            keyEvent.consume();"},{"lineNumber":95,"author":{"gitID":"-"},"content":"            navigateToPreviousInput();"},{"lineNumber":96,"author":{"gitID":"-"},"content":"            break;"},{"lineNumber":97,"author":{"gitID":"-"},"content":"        case DOWN:"},{"lineNumber":98,"author":{"gitID":"-"},"content":"            keyEvent.consume();"},{"lineNumber":99,"author":{"gitID":"-"},"content":"            navigateToNextInput();"},{"lineNumber":100,"author":{"gitID":"-"},"content":"            break;"},{"lineNumber":101,"author":{"gitID":"-"},"content":"        default:"},{"lineNumber":102,"author":{"gitID":"-"},"content":"            // let JavaFx handle the keypress"},{"lineNumber":103,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":104,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":105,"author":{"gitID":"-"},"content":""},{"lineNumber":106,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":107,"author":{"gitID":"-"},"content":"     * Updates the text field with the previous input in {@code historySnapshot},"},{"lineNumber":108,"author":{"gitID":"-"},"content":"     * if there exists a previous input in {@code historySnapshot}"},{"lineNumber":109,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":110,"author":{"gitID":"-"},"content":"    private void navigateToPreviousInput() {"},{"lineNumber":111,"author":{"gitID":"-"},"content":"        assert historySnapshot !\u003d null;"},{"lineNumber":112,"author":{"gitID":"-"},"content":"        if (!historySnapshot.hasPrevious()) {"},{"lineNumber":113,"author":{"gitID":"-"},"content":"            return;"},{"lineNumber":114,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":115,"author":{"gitID":"-"},"content":""},{"lineNumber":116,"author":{"gitID":"-"},"content":"        replaceText(historySnapshot.previous());"},{"lineNumber":117,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":118,"author":{"gitID":"-"},"content":""},{"lineNumber":119,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":120,"author":{"gitID":"-"},"content":"     * Updates the text field with the next input in {@code historySnapshot},"},{"lineNumber":121,"author":{"gitID":"-"},"content":"     * if there exists a next input in {@code historySnapshot}"},{"lineNumber":122,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":123,"author":{"gitID":"-"},"content":"    private void navigateToNextInput() {"},{"lineNumber":124,"author":{"gitID":"-"},"content":"        assert historySnapshot !\u003d null;"},{"lineNumber":125,"author":{"gitID":"-"},"content":"        if (!historySnapshot.hasNext()) {"},{"lineNumber":126,"author":{"gitID":"-"},"content":"            return;"},{"lineNumber":127,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":128,"author":{"gitID":"-"},"content":""},{"lineNumber":129,"author":{"gitID":"-"},"content":"        replaceText(historySnapshot.next());"},{"lineNumber":130,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":131,"author":{"gitID":"-"},"content":""},{"lineNumber":132,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":133,"author":{"gitID":"-"},"content":"     * Sets {@code CommandBox}\u0027s text field with {@code text} and"},{"lineNumber":134,"author":{"gitID":"-"},"content":"     * positions the caret to the end of the {@code text}."},{"lineNumber":135,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":136,"author":{"gitID":"-"},"content":"    private void replaceText(String text) {"},{"lineNumber":137,"author":{"gitID":"koo1993"},"content":"        commandTextField.setText(text);"},{"lineNumber":138,"author":{"gitID":"koo1993"},"content":"        commandTextField.positionCaret(commandTextField.getText().length());"},{"lineNumber":139,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":140,"author":{"gitID":"-"},"content":""},{"lineNumber":141,"author":{"gitID":"-"},"content":""},{"lineNumber":142,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":143,"author":{"gitID":"-"},"content":"     * Handles the Enter button pressed event."},{"lineNumber":144,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":145,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":146,"author":{"gitID":"-"},"content":"    private void handleCommandInputChanged() {"},{"lineNumber":147,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":148,"author":{"gitID":"koo1993"},"content":"            CommandResult commandResult \u003d logic.execute(commandTextField.getText());"},{"lineNumber":149,"author":{"gitID":"-"},"content":"            initHistory();"},{"lineNumber":150,"author":{"gitID":"-"},"content":"            historySnapshot.next();"},{"lineNumber":151,"author":{"gitID":"-"},"content":"            // process result of the command"},{"lineNumber":152,"author":{"gitID":"koo1993"},"content":"            commandTextField.setText(\"\");"},{"lineNumber":153,"author":{"gitID":"-"},"content":"            logger.info(\"Result: \" + commandResult.feedbackToUser);"},{"lineNumber":154,"author":{"gitID":"hzxcaryn"},"content":"            raise(new NewResultAvailableEvent(commandResult.feedbackToUser, false));"},{"lineNumber":155,"author":{"gitID":"-"},"content":""},{"lineNumber":156,"author":{"gitID":"-"},"content":"        } catch (CommandException | ParseException e) {"},{"lineNumber":157,"author":{"gitID":"-"},"content":"            initHistory();"},{"lineNumber":158,"author":{"gitID":"-"},"content":"            // handle command failure"},{"lineNumber":159,"author":{"gitID":"-"},"content":"            setStyleToIndicateCommandFailure();"},{"lineNumber":160,"author":{"gitID":"koo1993"},"content":"            logger.info(\"Invalid command: \" + processInput(commandTextField.getText()));"},{"lineNumber":161,"author":{"gitID":"hzxcaryn"},"content":"            raise(new NewResultAvailableEvent(e.getMessage(), true));"},{"lineNumber":162,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":163,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":164,"author":{"gitID":"-"},"content":""},{"lineNumber":165,"author":{"gitID":"-"},"content":""},{"lineNumber":166,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":167,"author":{"gitID":"-"},"content":"     * Initializes the history snapshot."},{"lineNumber":168,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":169,"author":{"gitID":"-"},"content":"    private void initHistory() {"},{"lineNumber":170,"author":{"gitID":"-"},"content":"        historySnapshot \u003d logic.getHistorySnapshot();"},{"lineNumber":171,"author":{"gitID":"-"},"content":"        // add an empty string to represent the most-recent end of historySnapshot, to be shown to"},{"lineNumber":172,"author":{"gitID":"-"},"content":"        // the user if she tries to navigate past the most-recent end of the historySnapshot."},{"lineNumber":173,"author":{"gitID":"-"},"content":"        historySnapshot.add(\"\");"},{"lineNumber":174,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":175,"author":{"gitID":"-"},"content":""},{"lineNumber":176,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":177,"author":{"gitID":"-"},"content":"     * Sets the command box style to use the default style."},{"lineNumber":178,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":179,"author":{"gitID":"-"},"content":"    private void setStyleToDefault() {"},{"lineNumber":180,"author":{"gitID":"koo1993"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);"},{"lineNumber":181,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":182,"author":{"gitID":"-"},"content":""},{"lineNumber":183,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":184,"author":{"gitID":"-"},"content":"     * Sets the command box style to indicate a failed command."},{"lineNumber":185,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":186,"author":{"gitID":"-"},"content":"    private void setStyleToIndicateCommandFailure() {"},{"lineNumber":187,"author":{"gitID":"koo1993"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();"},{"lineNumber":188,"author":{"gitID":"-"},"content":""},{"lineNumber":189,"author":{"gitID":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {"},{"lineNumber":190,"author":{"gitID":"-"},"content":"            return;"},{"lineNumber":191,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":192,"author":{"gitID":"-"},"content":""},{"lineNumber":193,"author":{"gitID":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);"},{"lineNumber":194,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":195,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":196,"author":{"gitID":"koo1993"},"content":"    //@@author koo1993"},{"lineNumber":197,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":198,"author":{"gitID":"koo1993"},"content":"     * TextFieldSkin class to set up caret colour for textField and skinning of password"},{"lineNumber":199,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":200,"author":{"gitID":"koo1993"},"content":"    public class PasswordFieldSkinAndCaret extends TextFieldSkin {"},{"lineNumber":201,"author":{"gitID":"koo1993"},"content":"        public static final String ASTERISK \u003d \"*\";"},{"lineNumber":202,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":203,"author":{"gitID":"koo1993"},"content":"        public PasswordFieldSkinAndCaret(PasswordField passwordField, Color caretColor) {"},{"lineNumber":204,"author":{"gitID":"koo1993"},"content":"            super(passwordField, new PasswordFieldBehavior(passwordField));"},{"lineNumber":205,"author":{"gitID":"koo1993"},"content":"            setCaretColor(caretColor);"},{"lineNumber":206,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":207,"author":{"gitID":"koo1993"},"content":"        private void setCaretColor(Color color) {"},{"lineNumber":208,"author":{"gitID":"koo1993"},"content":"            caretPath.strokeProperty().unbind();"},{"lineNumber":209,"author":{"gitID":"koo1993"},"content":"            caretPath.fillProperty().unbind();"},{"lineNumber":210,"author":{"gitID":"koo1993"},"content":"            caretPath.setStroke(color);"},{"lineNumber":211,"author":{"gitID":"koo1993"},"content":"            caretPath.setFill(color);"},{"lineNumber":212,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":213,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":214,"author":{"gitID":"koo1993"},"content":"        @Override"},{"lineNumber":215,"author":{"gitID":"koo1993"},"content":"        protected String maskText(String txt) {"},{"lineNumber":216,"author":{"gitID":"koo1993"},"content":"            TextField textField \u003d getSkinnable();"},{"lineNumber":217,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":218,"author":{"gitID":"koo1993"},"content":"            StringBuilder newString \u003d new StringBuilder(textField.getText());"},{"lineNumber":219,"author":{"gitID":"koo1993"},"content":"            int indexOfPrefix \u003d newString.indexOf(PREFIX_PASSWORD.getPrefix());"},{"lineNumber":220,"author":{"gitID":"koo1993"},"content":"            int indexOfSpace \u003d newString.indexOf(\" \", indexOfPrefix);"},{"lineNumber":221,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":222,"author":{"gitID":"koo1993"},"content":"            while (indexOfPrefix \u003e\u003d 0) {"},{"lineNumber":223,"author":{"gitID":"koo1993"},"content":"                if (indexOfSpace \u003d\u003d -1) {"},{"lineNumber":224,"author":{"gitID":"koo1993"},"content":"                    indexOfSpace \u003d newString.length();"},{"lineNumber":225,"author":{"gitID":"koo1993"},"content":"                }"},{"lineNumber":226,"author":{"gitID":"koo1993"},"content":"                for (int i \u003d indexOfPrefix + 3; i \u003c indexOfSpace; i++) {"},{"lineNumber":227,"author":{"gitID":"koo1993"},"content":"                    newString.replace(i, i + 1, ASTERISK);"},{"lineNumber":228,"author":{"gitID":"koo1993"},"content":"                }"},{"lineNumber":229,"author":{"gitID":"koo1993"},"content":"                indexOfPrefix \u003d newString.indexOf(PREFIX_PASSWORD.getPrefix(), indexOfPrefix + 3);"},{"lineNumber":230,"author":{"gitID":"koo1993"},"content":"                indexOfSpace \u003d newString.indexOf(\" \", indexOfPrefix);"},{"lineNumber":231,"author":{"gitID":"koo1993"},"content":"            }"},{"lineNumber":232,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":233,"author":{"gitID":"koo1993"},"content":"            return newString.toString();"},{"lineNumber":234,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":235,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":236,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":237,"author":{"gitID":"koo1993"},"content":"}"},{"lineNumber":238,"author":{"gitID":"koo1993"},"content":""}],"authorContributionMap":{"koo1993":96,"hzxcaryn":2,"-":140}},{"path":"src/main/java/seedu/ptman/ui/UiManager.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import javafx.application.Platform;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import javafx.scene.control.Alert;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import javafx.scene.control.Alert.AlertType;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import javafx.scene.image.Image;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import javafx.stage.Stage;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.MainApp;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.ComponentManager;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.Config;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.LogsCenter;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.storage.DataSavingExceptionEvent;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.util.StringUtil;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.Logic;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.ptman.model.UserPrefs;"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":22,"author":{"gitID":"-"},"content":" * The manager of the UI component."},{"lineNumber":23,"author":{"gitID":"-"},"content":" */"},{"lineNumber":24,"author":{"gitID":"-"},"content":"public class UiManager extends ComponentManager implements Ui {"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    public static final String FILE_OPS_ERROR_DIALOG_STAGE_TITLE \u003d \"File Op Error\";"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    public static final String FILE_OPS_ERROR_DIALOG_HEADER_MESSAGE \u003d \"Could not save data\";"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    public static final String FILE_OPS_ERROR_DIALOG_CONTENT_MESSAGE \u003d \"Could not save data to file\";"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/icons/ptman_logo_icon.png\";"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"    private Logic logic;"},{"lineNumber":36,"author":{"gitID":"-"},"content":"    private Config config;"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    private UserPrefs prefs;"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    private MainWindow mainWindow;"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"    public UiManager(Logic logic, Config config, UserPrefs prefs) {"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        super();"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        this.logic \u003d logic;"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        this.config \u003d config;"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        this.prefs \u003d prefs;"},{"lineNumber":45,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"-"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":48,"author":{"gitID":"-"},"content":"    public void start(Stage primaryStage) {"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        logger.info(\"Starting UI...\");"},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"-"},"content":"        //Set the application icon."},{"lineNumber":52,"author":{"gitID":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":55,"author":{"gitID":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, config, prefs, logic);"},{"lineNumber":56,"author":{"gitID":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts"},{"lineNumber":57,"author":{"gitID":"-"},"content":"            mainWindow.fillInnerParts();"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"-"},"content":"        } catch (Throwable e) {"},{"lineNumber":60,"author":{"gitID":"-"},"content":"            logger.severe(StringUtil.getDetails(e));"},{"lineNumber":61,"author":{"gitID":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);"},{"lineNumber":62,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":63,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"-"},"content":""},{"lineNumber":65,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":66,"author":{"gitID":"-"},"content":"    public void stop() {"},{"lineNumber":67,"author":{"gitID":"-"},"content":"        prefs.updateLastUsedGuiSetting(mainWindow.getCurrentGuiSetting());"},{"lineNumber":68,"author":{"gitID":"-"},"content":"        mainWindow.hide();"},{"lineNumber":69,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":70,"author":{"gitID":"-"},"content":""},{"lineNumber":71,"author":{"gitID":"-"},"content":"    private void showFileOperationAlertAndWait(String description, String details, Throwable cause) {"},{"lineNumber":72,"author":{"gitID":"-"},"content":"        final String content \u003d details + \":\\n\" + cause.toString();"},{"lineNumber":73,"author":{"gitID":"-"},"content":"        showAlertDialogAndWait(AlertType.ERROR, FILE_OPS_ERROR_DIALOG_STAGE_TITLE, description, content);"},{"lineNumber":74,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitID":"-"},"content":""},{"lineNumber":76,"author":{"gitID":"-"},"content":"    private Image getImage(String imagePath) {"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));"},{"lineNumber":78,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":79,"author":{"gitID":"-"},"content":""},{"lineNumber":80,"author":{"gitID":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {"},{"lineNumber":81,"author":{"gitID":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);"},{"lineNumber":82,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":83,"author":{"gitID":"-"},"content":""},{"lineNumber":84,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":85,"author":{"gitID":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters."},{"lineNumber":86,"author":{"gitID":"-"},"content":"     * This method only returns after the user has closed the alert dialog."},{"lineNumber":87,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":88,"author":{"gitID":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,"},{"lineNumber":89,"author":{"gitID":"-"},"content":"                                               String contentText) {"},{"lineNumber":90,"author":{"gitID":"-"},"content":"        final Alert alert \u003d new Alert(type);"},{"lineNumber":91,"author":{"gitID":"hzxcaryn"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/PtmanTheme.css\");"},{"lineNumber":92,"author":{"gitID":"-"},"content":"        alert.initOwner(owner);"},{"lineNumber":93,"author":{"gitID":"-"},"content":"        alert.setTitle(title);"},{"lineNumber":94,"author":{"gitID":"-"},"content":"        alert.setHeaderText(headerText);"},{"lineNumber":95,"author":{"gitID":"-"},"content":"        alert.setContentText(contentText);"},{"lineNumber":96,"author":{"gitID":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);"},{"lineNumber":97,"author":{"gitID":"-"},"content":"        alert.showAndWait();"},{"lineNumber":98,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":99,"author":{"gitID":"-"},"content":""},{"lineNumber":100,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":101,"author":{"gitID":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},"},{"lineNumber":102,"author":{"gitID":"-"},"content":"     * and exits the application after the user has closed the alert dialog."},{"lineNumber":103,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":104,"author":{"gitID":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {"},{"lineNumber":105,"author":{"gitID":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));"},{"lineNumber":106,"author":{"gitID":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());"},{"lineNumber":107,"author":{"gitID":"-"},"content":"        Platform.exit();"},{"lineNumber":108,"author":{"gitID":"-"},"content":"        System.exit(1);"},{"lineNumber":109,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":110,"author":{"gitID":"-"},"content":""},{"lineNumber":111,"author":{"gitID":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Event Handling Code \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":112,"author":{"gitID":"-"},"content":""},{"lineNumber":113,"author":{"gitID":"-"},"content":"    @Subscribe"},{"lineNumber":114,"author":{"gitID":"-"},"content":"    private void handleDataSavingExceptionEvent(DataSavingExceptionEvent event) {"},{"lineNumber":115,"author":{"gitID":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":116,"author":{"gitID":"-"},"content":"        showFileOperationAlertAndWait(FILE_OPS_ERROR_DIALOG_HEADER_MESSAGE, FILE_OPS_ERROR_DIALOG_CONTENT_MESSAGE,"},{"lineNumber":117,"author":{"gitID":"-"},"content":"                event.exception);"},{"lineNumber":118,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":119,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"hzxcaryn":1,"-":118}},{"path":"src/main/java/seedu/ptman/ui/EmployeeCard.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import javafx.scene.control.Label;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import javafx.scene.layout.FlowPane;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Employee;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":11,"author":{"gitID":"-"},"content":" * An UI component that displays information of a {@code Employee}."},{"lineNumber":12,"author":{"gitID":"-"},"content":" */"},{"lineNumber":13,"author":{"gitID":"-"},"content":"public class EmployeeCard extends UiPart\u003cRegion\u003e {"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"    private static final String FXML \u003d \"EmployeeListCard.fxml\";"},{"lineNumber":16,"author":{"gitID":"hzxcaryn"},"content":"    private static final String[] TAG_COLORS \u003d"},{"lineNumber":17,"author":{"gitID":"hzxcaryn"},"content":"        {\"salmon\", \"mint\", \"teal\", \"turquoise\", \"pink\", \"pale-blue\", \"purple\", \"blue\", \"indigo\", \"yellow\"};"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":20,"author":{"gitID":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX."},{"lineNumber":21,"author":{"gitID":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords"},{"lineNumber":22,"author":{"gitID":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime."},{"lineNumber":23,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":24,"author":{"gitID":"-"},"content":"     * @see"},{"lineNumber":25,"author":{"gitID":"-"},"content":"     * \u003ca href\u003d\"https://github.com/se-edu/parttimemanager-level4/issues/336\"\u003eThe issue on PartTimeManager level 4\u003c/a\u003e"},{"lineNumber":26,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    public final Employee employee;"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitID":"-"},"content":"    private HBox cardPane;"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    private Label name;"},{"lineNumber":34,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":35,"author":{"gitID":"-"},"content":"    private Label id;"},{"lineNumber":36,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    private Label phone;"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":39,"author":{"gitID":"-"},"content":"    private Label address;"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    private Label email;"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":43,"author":{"gitID":"-"},"content":"    private Label salary;"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":45,"author":{"gitID":"-"},"content":"    private FlowPane tags;"},{"lineNumber":46,"author":{"gitID":"-"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":"    public EmployeeCard(Employee employee, int displayedIndex) {"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        super(FXML);"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        this.employee \u003d employee;"},{"lineNumber":50,"author":{"gitID":"-"},"content":"        id.setText(Integer.toString(displayedIndex));"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        name.setText(employee.getName().fullName);"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        phone.setText(employee.getPhone().value);"},{"lineNumber":53,"author":{"gitID":"-"},"content":"        address.setText(employee.getAddress().value);"},{"lineNumber":54,"author":{"gitID":"-"},"content":"        email.setText(employee.getEmail().value);"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        salary.setText(\"Earned: $\" + employee.getSalary().value);"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        addTagLabels(employee);"},{"lineNumber":57,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":58,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":59,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":60,"author":{"gitID":"hzxcaryn"},"content":"     * Tag colors are derived by calculating the hash code of the {@code tagName} string to"},{"lineNumber":61,"author":{"gitID":"hzxcaryn"},"content":"     * select a color from the {@code TAG_COLORS} array"},{"lineNumber":62,"author":{"gitID":"hzxcaryn"},"content":"     *"},{"lineNumber":63,"author":{"gitID":"hzxcaryn"},"content":"     * @param tagName"},{"lineNumber":64,"author":{"gitID":"hzxcaryn"},"content":"     * @return color for the {@code tagName}\u0027s tag label"},{"lineNumber":65,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":66,"author":{"gitID":"hzxcaryn"},"content":"    private String getTagColor(String tagName) {"},{"lineNumber":67,"author":{"gitID":"hzxcaryn"},"content":"        int index \u003d Math.abs(tagName.hashCode()) %  TAG_COLORS.length;"},{"lineNumber":68,"author":{"gitID":"hzxcaryn"},"content":"        return TAG_COLORS[index];"},{"lineNumber":69,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":70,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":71,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":72,"author":{"gitID":"-"},"content":"     * Adds all tags of {@code employee} as color-coded labels"},{"lineNumber":73,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":74,"author":{"gitID":"-"},"content":"    private void addTagLabels(Employee employee) {"},{"lineNumber":75,"author":{"gitID":"-"},"content":"        employee.getTags().forEach(tag -\u003e {"},{"lineNumber":76,"author":{"gitID":"hzxcaryn"},"content":"            Label newLabel \u003d new Label(tag.tagName);"},{"lineNumber":77,"author":{"gitID":"hzxcaryn"},"content":"            newLabel.getStyleClass().add(getTagColor(tag.tagName));"},{"lineNumber":78,"author":{"gitID":"hzxcaryn"},"content":"            tags.getChildren().add(newLabel);"},{"lineNumber":79,"author":{"gitID":"hzxcaryn"},"content":"        });"},{"lineNumber":80,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":81,"author":{"gitID":"-"},"content":""},{"lineNumber":82,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":83,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":84,"author":{"gitID":"-"},"content":"        // short circuit if same object"},{"lineNumber":85,"author":{"gitID":"-"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":86,"author":{"gitID":"-"},"content":"            return true;"},{"lineNumber":87,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":88,"author":{"gitID":"-"},"content":""},{"lineNumber":89,"author":{"gitID":"-"},"content":"        // instanceof handles nulls"},{"lineNumber":90,"author":{"gitID":"-"},"content":"        if (!(other instanceof EmployeeCard)) {"},{"lineNumber":91,"author":{"gitID":"-"},"content":"            return false;"},{"lineNumber":92,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":93,"author":{"gitID":"-"},"content":""},{"lineNumber":94,"author":{"gitID":"-"},"content":"        // state check"},{"lineNumber":95,"author":{"gitID":"-"},"content":"        EmployeeCard card \u003d (EmployeeCard) other;"},{"lineNumber":96,"author":{"gitID":"-"},"content":"        return id.getText().equals(card.id.getText())"},{"lineNumber":97,"author":{"gitID":"-"},"content":"                \u0026\u0026 employee.equals(card.employee);"},{"lineNumber":98,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":99,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"hzxcaryn":22,"-":77}},{"path":"src/main/java/seedu/ptman/ui/StatusBarFooter.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.time.Clock;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.Date;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.controlsfx.control.StatusBar;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import javafx.application.Platform;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import javafx.fxml.FXML;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.LogsCenter;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.model.PartTimeManagerChangedEvent;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":18,"author":{"gitID":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application."},{"lineNumber":19,"author":{"gitID":"-"},"content":" */"},{"lineNumber":20,"author":{"gitID":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"    public static final String SYNC_STATUS_INITIAL \u003d \"Not updated yet in this session\";"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    public static final String SYNC_STATUS_UPDATED \u003d \"Last Updated: %s\";"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    public static final String NUM_EMPLOYEES_STATUS \u003d \"%d employee(s) total\";"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":27,"author":{"gitID":"-"},"content":"     * Used to generate time stamps."},{"lineNumber":28,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":29,"author":{"gitID":"-"},"content":"     * TODO: change clock to an instance variable."},{"lineNumber":30,"author":{"gitID":"-"},"content":"     * We leave it as a static variable because manual dependency injection"},{"lineNumber":31,"author":{"gitID":"-"},"content":"     * will require passing down the clock reference all the way from MainApp,"},{"lineNumber":32,"author":{"gitID":"-"},"content":"     * but it should be easier once we have factories/DI frameworks."},{"lineNumber":33,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":34,"author":{"gitID":"-"},"content":"    private static Clock clock \u003d Clock.systemDefaultZone();"},{"lineNumber":35,"author":{"gitID":"-"},"content":""},{"lineNumber":36,"author":{"gitID":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StatusBarFooter.class);"},{"lineNumber":37,"author":{"gitID":"-"},"content":""},{"lineNumber":38,"author":{"gitID":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    private StatusBar syncStatus;"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":43,"author":{"gitID":"-"},"content":"    private StatusBar saveLocationStatus;"},{"lineNumber":44,"author":{"gitID":"hzxcaryn"},"content":"    @FXML"},{"lineNumber":45,"author":{"gitID":"-"},"content":"    private StatusBar numEmployeesStatus;"},{"lineNumber":46,"author":{"gitID":"-"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":"    public StatusBarFooter(String saveLocation, int numEmployees) {"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        super(FXML);"},{"lineNumber":50,"author":{"gitID":"-"},"content":"        setSyncStatus(SYNC_STATUS_INITIAL);"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        setSaveLocation(\"./\" + saveLocation);"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        setNumEmployees(numEmployees);"},{"lineNumber":53,"author":{"gitID":"-"},"content":"        registerAsAnEventHandler(this);"},{"lineNumber":54,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":55,"author":{"gitID":"-"},"content":""},{"lineNumber":56,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":57,"author":{"gitID":"-"},"content":"     * Sets the clock used to determine the current time."},{"lineNumber":58,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":59,"author":{"gitID":"-"},"content":"    public static void setClock(Clock clock) {"},{"lineNumber":60,"author":{"gitID":"-"},"content":"        StatusBarFooter.clock \u003d clock;"},{"lineNumber":61,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":62,"author":{"gitID":"-"},"content":""},{"lineNumber":63,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":64,"author":{"gitID":"-"},"content":"     * Returns the clock currently in use."},{"lineNumber":65,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":66,"author":{"gitID":"-"},"content":"    public static Clock getClock() {"},{"lineNumber":67,"author":{"gitID":"-"},"content":"        return clock;"},{"lineNumber":68,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitID":"-"},"content":""},{"lineNumber":70,"author":{"gitID":"-"},"content":"    private void setNumEmployees(int numEmployees) {"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        Platform.runLater(() -\u003e this.numEmployeesStatus.setText(String.format(NUM_EMPLOYEES_STATUS, numEmployees)));"},{"lineNumber":72,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":74,"author":{"gitID":"-"},"content":"    private void setSaveLocation(String location) {"},{"lineNumber":75,"author":{"gitID":"-"},"content":"        Platform.runLater(() -\u003e this.saveLocationStatus.setText(location));"},{"lineNumber":76,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":77,"author":{"gitID":"-"},"content":""},{"lineNumber":78,"author":{"gitID":"-"},"content":"    private void setSyncStatus(String status) {"},{"lineNumber":79,"author":{"gitID":"-"},"content":"        Platform.runLater(() -\u003e this.syncStatus.setText(status));"},{"lineNumber":80,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":81,"author":{"gitID":"-"},"content":""},{"lineNumber":82,"author":{"gitID":"-"},"content":"    @Subscribe"},{"lineNumber":83,"author":{"gitID":"-"},"content":"    public void handlePartTimeManagerChangedEvent(PartTimeManagerChangedEvent abce) {"},{"lineNumber":84,"author":{"gitID":"-"},"content":"        long now \u003d clock.millis();"},{"lineNumber":85,"author":{"gitID":"-"},"content":"        String lastUpdated \u003d new Date(now).toString();"},{"lineNumber":86,"author":{"gitID":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(abce, \"Setting last updated status to \" + lastUpdated));"},{"lineNumber":87,"author":{"gitID":"-"},"content":"        setSyncStatus(String.format(SYNC_STATUS_UPDATED, lastUpdated));"},{"lineNumber":88,"author":{"gitID":"-"},"content":"        setNumEmployees(abce.data.getEmployeeList().size());"},{"lineNumber":89,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":90,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"hzxcaryn":3,"-":87}},{"path":"src/main/java/seedu/ptman/ui/MainWindow.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import javafx.event.ActionEvent;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import javafx.scene.control.MenuItem;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import javafx.scene.control.TextInputControl;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import javafx.scene.input.KeyCode;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import javafx.scene.input.KeyCodeCombination;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import javafx.scene.input.KeyCombination;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import javafx.scene.input.KeyEvent;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import javafx.scene.layout.StackPane;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import javafx.stage.Stage;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.Config;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.GuiSettings;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.LogsCenter;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.ui.ExitAppRequestEvent;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.ui.ShowHelpRequestEvent;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.ui.TimetableWeekChangeRequestEvent;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.Logic;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.ptman.model.UserPrefs;"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":27,"author":{"gitID":"-"},"content":" * The Main Window. Provides the basic application layout containing"},{"lineNumber":28,"author":{"gitID":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed."},{"lineNumber":29,"author":{"gitID":"-"},"content":" */"},{"lineNumber":30,"author":{"gitID":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(this.getClass());"},{"lineNumber":35,"author":{"gitID":"-"},"content":""},{"lineNumber":36,"author":{"gitID":"hzxcaryn"},"content":"    //@@author hzxcaryn"},{"lineNumber":37,"author":{"gitID":"hzxcaryn"},"content":"    private final KeyCombination keyCtrlShiftLeft \u003d"},{"lineNumber":38,"author":{"gitID":"hzxcaryn"},"content":"            new KeyCodeCombination(KeyCode.LEFT, KeyCombination.SHIFT_DOWN, KeyCombination.SHORTCUT_DOWN);"},{"lineNumber":39,"author":{"gitID":"hzxcaryn"},"content":"    private final KeyCombination keyCtrlShiftRight \u003d"},{"lineNumber":40,"author":{"gitID":"hzxcaryn"},"content":"            new KeyCodeCombination(KeyCode.RIGHT, KeyCombination.SHIFT_DOWN, KeyCombination.SHORTCUT_DOWN);"},{"lineNumber":41,"author":{"gitID":"hzxcaryn"},"content":"    private final KeyCombination keyCtrlShiftDown \u003d"},{"lineNumber":42,"author":{"gitID":"hzxcaryn"},"content":"            new KeyCodeCombination(KeyCode.DOWN, KeyCombination.SHIFT_DOWN, KeyCombination.SHORTCUT_DOWN);"},{"lineNumber":43,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":44,"author":{"gitID":"hzxcaryn"},"content":"    //@@author"},{"lineNumber":45,"author":{"gitID":"-"},"content":"    private Stage primaryStage;"},{"lineNumber":46,"author":{"gitID":"-"},"content":"    private Logic logic;"},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":"    // Independent Ui parts residing in this Ui container"},{"lineNumber":49,"author":{"gitID":"-"},"content":"    private OutletDetailsPanel outletPanel;"},{"lineNumber":50,"author":{"gitID":"-"},"content":"    private TimetablePanel timetablePanel;"},{"lineNumber":51,"author":{"gitID":"-"},"content":"    private EmployeeListPanel employeeListPanel;"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    private Config config;"},{"lineNumber":53,"author":{"gitID":"-"},"content":"    private UserPrefs prefs;"},{"lineNumber":54,"author":{"gitID":"-"},"content":""},{"lineNumber":55,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":56,"author":{"gitID":"-"},"content":"    private StackPane browserPlaceholder;"},{"lineNumber":57,"author":{"gitID":"-"},"content":""},{"lineNumber":58,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":59,"author":{"gitID":"-"},"content":"    private StackPane outletDetailsPanelPlaceholder;"},{"lineNumber":60,"author":{"gitID":"-"},"content":""},{"lineNumber":61,"author":{"gitID":"hzxcaryn"},"content":"    @FXML"},{"lineNumber":62,"author":{"gitID":"hzxcaryn"},"content":"    private StackPane ptmanLogoDisplayPlaceholder;"},{"lineNumber":63,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":64,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":65,"author":{"gitID":"-"},"content":"    private StackPane commandBoxPlaceholder;"},{"lineNumber":66,"author":{"gitID":"-"},"content":""},{"lineNumber":67,"author":{"gitID":"hzxcaryn"},"content":"    @FXML"},{"lineNumber":68,"author":{"gitID":"hzxcaryn"},"content":"    private StackPane adminModeDisplayPlaceholder;"},{"lineNumber":69,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":70,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":71,"author":{"gitID":"-"},"content":"    private MenuItem helpMenuItem;"},{"lineNumber":72,"author":{"gitID":"-"},"content":""},{"lineNumber":73,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":74,"author":{"gitID":"-"},"content":"    private StackPane employeeListPanelPlaceholder;"},{"lineNumber":75,"author":{"gitID":"-"},"content":""},{"lineNumber":76,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":77,"author":{"gitID":"-"},"content":"    private StackPane resultDisplayPlaceholder;"},{"lineNumber":78,"author":{"gitID":"-"},"content":""},{"lineNumber":79,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":80,"author":{"gitID":"-"},"content":"    private StackPane statusbarPlaceholder;"},{"lineNumber":81,"author":{"gitID":"-"},"content":""},{"lineNumber":82,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":83,"author":{"gitID":"-"},"content":"    private StackPane timetablePanelPlaceholder;"},{"lineNumber":84,"author":{"gitID":"-"},"content":""},{"lineNumber":85,"author":{"gitID":"-"},"content":"    public MainWindow(Stage primaryStage, Config config, UserPrefs prefs, Logic logic) {"},{"lineNumber":86,"author":{"gitID":"-"},"content":"        super(FXML, primaryStage);"},{"lineNumber":87,"author":{"gitID":"-"},"content":""},{"lineNumber":88,"author":{"gitID":"-"},"content":"        // Set dependencies"},{"lineNumber":89,"author":{"gitID":"-"},"content":"        this.primaryStage \u003d primaryStage;"},{"lineNumber":90,"author":{"gitID":"-"},"content":"        this.logic \u003d logic;"},{"lineNumber":91,"author":{"gitID":"-"},"content":"        this.config \u003d config;"},{"lineNumber":92,"author":{"gitID":"-"},"content":"        this.prefs \u003d prefs;"},{"lineNumber":93,"author":{"gitID":"-"},"content":""},{"lineNumber":94,"author":{"gitID":"-"},"content":"        // Configure the UI"},{"lineNumber":95,"author":{"gitID":"-"},"content":"        setTitle(config.getAppTitle());"},{"lineNumber":96,"author":{"gitID":"-"},"content":"        setWindowDefaultSize(prefs);"},{"lineNumber":97,"author":{"gitID":"-"},"content":""},{"lineNumber":98,"author":{"gitID":"-"},"content":"        setEventHandlerForTimetableWeekChangeRequestEvent();"},{"lineNumber":99,"author":{"gitID":"-"},"content":"        setAccelerators();"},{"lineNumber":100,"author":{"gitID":"-"},"content":"        registerAsAnEventHandler(this);"},{"lineNumber":101,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":102,"author":{"gitID":"-"},"content":""},{"lineNumber":103,"author":{"gitID":"-"},"content":"    public Stage getPrimaryStage() {"},{"lineNumber":104,"author":{"gitID":"-"},"content":"        return primaryStage;"},{"lineNumber":105,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":106,"author":{"gitID":"-"},"content":""},{"lineNumber":107,"author":{"gitID":"-"},"content":"    private void setAccelerators() {"},{"lineNumber":108,"author":{"gitID":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));"},{"lineNumber":109,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":110,"author":{"gitID":"-"},"content":""},{"lineNumber":111,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":112,"author":{"gitID":"-"},"content":"     * Sets the accelerator of a MenuItem."},{"lineNumber":113,"author":{"gitID":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator"},{"lineNumber":114,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":115,"author":{"gitID":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {"},{"lineNumber":116,"author":{"gitID":"-"},"content":"        menuItem.setAccelerator(keyCombination);"},{"lineNumber":117,"author":{"gitID":"-"},"content":""},{"lineNumber":118,"author":{"gitID":"-"},"content":"        /*"},{"lineNumber":119,"author":{"gitID":"-"},"content":"         * TODO: the code below can be removed once the bug reported here"},{"lineNumber":120,"author":{"gitID":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666"},{"lineNumber":121,"author":{"gitID":"-"},"content":"         * is fixed in later version of SDK."},{"lineNumber":122,"author":{"gitID":"-"},"content":"         *"},{"lineNumber":123,"author":{"gitID":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will"},{"lineNumber":124,"author":{"gitID":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and"},{"lineNumber":125,"author":{"gitID":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will"},{"lineNumber":126,"author":{"gitID":"-"},"content":"         * not work when the focus is in them because the key event is consumed by"},{"lineNumber":127,"author":{"gitID":"-"},"content":"         * the TextInputControl(s)."},{"lineNumber":128,"author":{"gitID":"-"},"content":"         *"},{"lineNumber":129,"author":{"gitID":"-"},"content":"         * For now, we add following event filter to capture such key events and open"},{"lineNumber":130,"author":{"gitID":"-"},"content":"         * help window purposely so to support accelerators even when focus is"},{"lineNumber":131,"author":{"gitID":"-"},"content":"         * in CommandBox or ResultDisplay."},{"lineNumber":132,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":133,"author":{"gitID":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {"},{"lineNumber":134,"author":{"gitID":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {"},{"lineNumber":135,"author":{"gitID":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());"},{"lineNumber":136,"author":{"gitID":"-"},"content":"                event.consume();"},{"lineNumber":137,"author":{"gitID":"-"},"content":"            }"},{"lineNumber":138,"author":{"gitID":"-"},"content":"        });"},{"lineNumber":139,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":140,"author":{"gitID":"-"},"content":""},{"lineNumber":141,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":142,"author":{"gitID":"-"},"content":"     * Fills up all the placeholders of this window."},{"lineNumber":143,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":144,"author":{"gitID":"-"},"content":"    void fillInnerParts() {"},{"lineNumber":145,"author":{"gitID":"-"},"content":"        outletPanel \u003d new OutletDetailsPanel(logic.getOutletInformation());"},{"lineNumber":146,"author":{"gitID":"-"},"content":"        outletDetailsPanelPlaceholder.getChildren().add(outletPanel.getRoot());"},{"lineNumber":147,"author":{"gitID":"-"},"content":""},{"lineNumber":148,"author":{"gitID":"-"},"content":"        timetablePanel \u003d new TimetablePanel(logic);"},{"lineNumber":149,"author":{"gitID":"-"},"content":"        timetablePanelPlaceholder.getChildren().add(timetablePanel.getRoot());"},{"lineNumber":150,"author":{"gitID":"-"},"content":""},{"lineNumber":151,"author":{"gitID":"-"},"content":"        employeeListPanel \u003d new EmployeeListPanel(logic.getFilteredEmployeeList());"},{"lineNumber":152,"author":{"gitID":"-"},"content":"        employeeListPanelPlaceholder.getChildren().add(employeeListPanel.getRoot());"},{"lineNumber":153,"author":{"gitID":"-"},"content":""},{"lineNumber":154,"author":{"gitID":"hzxcaryn"},"content":"        PtmanLogoDisplay ptmanLogoDisplay \u003d new PtmanLogoDisplay();"},{"lineNumber":155,"author":{"gitID":"hzxcaryn"},"content":"        ptmanLogoDisplayPlaceholder.getChildren().add(ptmanLogoDisplay.getRoot());"},{"lineNumber":156,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":157,"author":{"gitID":"hzxcaryn"},"content":"        AdminModeDisplay adminModeDisplay \u003d new AdminModeDisplay(logic.isAdminMode());"},{"lineNumber":158,"author":{"gitID":"hzxcaryn"},"content":"        adminModeDisplayPlaceholder.getChildren().add(adminModeDisplay.getRoot());"},{"lineNumber":159,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":160,"author":{"gitID":"-"},"content":"        ResultDisplay resultDisplay \u003d new ResultDisplay();"},{"lineNumber":161,"author":{"gitID":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());"},{"lineNumber":162,"author":{"gitID":"-"},"content":""},{"lineNumber":163,"author":{"gitID":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(prefs.getPartTimeManagerFilePath(),"},{"lineNumber":164,"author":{"gitID":"-"},"content":"                logic.getFilteredEmployeeList().size());"},{"lineNumber":165,"author":{"gitID":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());"},{"lineNumber":166,"author":{"gitID":"-"},"content":""},{"lineNumber":167,"author":{"gitID":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(logic);"},{"lineNumber":168,"author":{"gitID":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());"},{"lineNumber":169,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":170,"author":{"gitID":"-"},"content":""},{"lineNumber":171,"author":{"gitID":"-"},"content":"    void hide() {"},{"lineNumber":172,"author":{"gitID":"-"},"content":"        primaryStage.hide();"},{"lineNumber":173,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":174,"author":{"gitID":"-"},"content":""},{"lineNumber":175,"author":{"gitID":"-"},"content":"    private void setTitle(String appTitle) {"},{"lineNumber":176,"author":{"gitID":"-"},"content":"        primaryStage.setTitle(appTitle);"},{"lineNumber":177,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":178,"author":{"gitID":"-"},"content":""},{"lineNumber":179,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":180,"author":{"gitID":"-"},"content":"     * Sets the default size based on user preferences."},{"lineNumber":181,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":182,"author":{"gitID":"-"},"content":"    private void setWindowDefaultSize(UserPrefs prefs) {"},{"lineNumber":183,"author":{"gitID":"-"},"content":"        primaryStage.setHeight(prefs.getGuiSettings().getWindowHeight());"},{"lineNumber":184,"author":{"gitID":"-"},"content":"        primaryStage.setWidth(prefs.getGuiSettings().getWindowWidth());"},{"lineNumber":185,"author":{"gitID":"-"},"content":"        if (prefs.getGuiSettings().getWindowCoordinates() !\u003d null) {"},{"lineNumber":186,"author":{"gitID":"-"},"content":"            primaryStage.setX(prefs.getGuiSettings().getWindowCoordinates().getX());"},{"lineNumber":187,"author":{"gitID":"-"},"content":"            primaryStage.setY(prefs.getGuiSettings().getWindowCoordinates().getY());"},{"lineNumber":188,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":189,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":190,"author":{"gitID":"-"},"content":""},{"lineNumber":191,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":192,"author":{"gitID":"-"},"content":"     * Returns the current size and the position of the main Window."},{"lineNumber":193,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":194,"author":{"gitID":"-"},"content":"    GuiSettings getCurrentGuiSetting() {"},{"lineNumber":195,"author":{"gitID":"-"},"content":"        return new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),"},{"lineNumber":196,"author":{"gitID":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());"},{"lineNumber":197,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":198,"author":{"gitID":"-"},"content":""},{"lineNumber":199,"author":{"gitID":"hzxcaryn"},"content":"    //@@author hzxcaryn"},{"lineNumber":200,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":201,"author":{"gitID":"hzxcaryn"},"content":"     * Listens to the {@code keyEvent} that requests to navigate to the prev/next timetable view and handles it."},{"lineNumber":202,"author":{"gitID":"hzxcaryn"},"content":"     * Windows: Ctrl, Mac: Command"},{"lineNumber":203,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":204,"author":{"gitID":"hzxcaryn"},"content":"    private void setEventHandlerForTimetableWeekChangeRequestEvent() {"},{"lineNumber":205,"author":{"gitID":"hzxcaryn"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {"},{"lineNumber":206,"author":{"gitID":"hzxcaryn"},"content":"            if (keyCtrlShiftLeft.match(event)) {"},{"lineNumber":207,"author":{"gitID":"hzxcaryn"},"content":"                event.consume();"},{"lineNumber":208,"author":{"gitID":"hzxcaryn"},"content":"                logger.fine(\"Timetable view requested to display the previous week.\");"},{"lineNumber":209,"author":{"gitID":"hzxcaryn"},"content":"                raise(new TimetableWeekChangeRequestEvent(TimetableWeekChangeRequestEvent.WeekChangeRequest.PREVIOUS));"},{"lineNumber":210,"author":{"gitID":"hzxcaryn"},"content":"            } else if (keyCtrlShiftRight.match(event)) {"},{"lineNumber":211,"author":{"gitID":"hzxcaryn"},"content":"                event.consume();"},{"lineNumber":212,"author":{"gitID":"hzxcaryn"},"content":"                logger.fine(\"Timetable view requested to display the next week.\");"},{"lineNumber":213,"author":{"gitID":"hzxcaryn"},"content":"                raise(new TimetableWeekChangeRequestEvent(TimetableWeekChangeRequestEvent.WeekChangeRequest.NEXT));"},{"lineNumber":214,"author":{"gitID":"hzxcaryn"},"content":"            } else if (keyCtrlShiftDown.match(event)) {"},{"lineNumber":215,"author":{"gitID":"hzxcaryn"},"content":"                event.consume();"},{"lineNumber":216,"author":{"gitID":"hzxcaryn"},"content":"                logger.fine(\"Timetable view requested to display the current week.\");"},{"lineNumber":217,"author":{"gitID":"hzxcaryn"},"content":"                raise(new TimetableWeekChangeRequestEvent(TimetableWeekChangeRequestEvent.WeekChangeRequest.CURRENT));"},{"lineNumber":218,"author":{"gitID":"hzxcaryn"},"content":"            }"},{"lineNumber":219,"author":{"gitID":"hzxcaryn"},"content":"        });"},{"lineNumber":220,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":221,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":222,"author":{"gitID":"hzxcaryn"},"content":"    //@@author"},{"lineNumber":223,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":224,"author":{"gitID":"-"},"content":"     * Opens the help window."},{"lineNumber":225,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":226,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":227,"author":{"gitID":"-"},"content":"    public void handleHelp() {"},{"lineNumber":228,"author":{"gitID":"-"},"content":"        HelpWindow helpWindow \u003d new HelpWindow();"},{"lineNumber":229,"author":{"gitID":"-"},"content":"        helpWindow.show();"},{"lineNumber":230,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":231,"author":{"gitID":"-"},"content":""},{"lineNumber":232,"author":{"gitID":"-"},"content":"    void show() {"},{"lineNumber":233,"author":{"gitID":"-"},"content":"        primaryStage.show();"},{"lineNumber":234,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":235,"author":{"gitID":"-"},"content":""},{"lineNumber":236,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":237,"author":{"gitID":"-"},"content":"     * Closes the application."},{"lineNumber":238,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":239,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":240,"author":{"gitID":"-"},"content":"    private void handleExit() {"},{"lineNumber":241,"author":{"gitID":"-"},"content":"        raise(new ExitAppRequestEvent());"},{"lineNumber":242,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":243,"author":{"gitID":"-"},"content":""},{"lineNumber":244,"author":{"gitID":"-"},"content":"    public EmployeeListPanel getEmployeeListPanel() {"},{"lineNumber":245,"author":{"gitID":"-"},"content":"        return this.employeeListPanel;"},{"lineNumber":246,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":247,"author":{"gitID":"-"},"content":""},{"lineNumber":248,"author":{"gitID":"-"},"content":"    @Subscribe"},{"lineNumber":249,"author":{"gitID":"-"},"content":"    private void handleShowHelpEvent(ShowHelpRequestEvent event) {"},{"lineNumber":250,"author":{"gitID":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":251,"author":{"gitID":"-"},"content":"        handleHelp();"},{"lineNumber":252,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":253,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"hzxcaryn":45,"-":208}},{"path":"src/main/java/seedu/ptman/ui/ResultDisplay.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import javafx.application.Platform;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import javafx.beans.property.SimpleStringProperty;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import javafx.beans.property.StringProperty;"},{"lineNumber":10,"author":{"gitID":"hzxcaryn"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import javafx.fxml.FXML;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import javafx.scene.control.TextArea;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.LogsCenter;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.ui.NewResultAvailableEvent;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":18,"author":{"gitID":"-"},"content":" * A ui for the status bar that is displayed at the header of the application."},{"lineNumber":19,"author":{"gitID":"-"},"content":" */"},{"lineNumber":20,"author":{"gitID":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ResultDisplay.class);"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"    private final StringProperty displayed \u003d new SimpleStringProperty(\"Welcome to PTMan. \""},{"lineNumber":27,"author":{"gitID":"-"},"content":"            + \"Type a command in the search bar above to get started. \""},{"lineNumber":28,"author":{"gitID":"-"},"content":"            + \"If you need somewhere to start, search “help” to view the user guide.\");"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitID":"-"},"content":"    private TextArea resultDisplay;"},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"-"},"content":"    public ResultDisplay() {"},{"lineNumber":34,"author":{"gitID":"-"},"content":"        super(FXML);"},{"lineNumber":35,"author":{"gitID":"-"},"content":"        resultDisplay.setWrapText(true);"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        resultDisplay.textProperty().bind(displayed);"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        registerAsAnEventHandler(this);"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"    @Subscribe"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    private void handleNewResultAvailableEvent(NewResultAvailableEvent event) {"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":43,"author":{"gitID":"hzxcaryn"},"content":"        Platform.runLater(() -\u003e {"},{"lineNumber":44,"author":{"gitID":"hzxcaryn"},"content":"            displayed.setValue(event.message);;"},{"lineNumber":45,"author":{"gitID":"hzxcaryn"},"content":"            if (event.isError) {"},{"lineNumber":46,"author":{"gitID":"hzxcaryn"},"content":"                setStyleToIndicateCommandFailure();"},{"lineNumber":47,"author":{"gitID":"hzxcaryn"},"content":"            } else {"},{"lineNumber":48,"author":{"gitID":"hzxcaryn"},"content":"                setStyleToDefault();"},{"lineNumber":49,"author":{"gitID":"hzxcaryn"},"content":"            }"},{"lineNumber":50,"author":{"gitID":"hzxcaryn"},"content":"        });"},{"lineNumber":51,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":53,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":54,"author":{"gitID":"hzxcaryn"},"content":"     * Sets the result display style to use the default style."},{"lineNumber":55,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":56,"author":{"gitID":"hzxcaryn"},"content":"    private void setStyleToDefault() {"},{"lineNumber":57,"author":{"gitID":"hzxcaryn"},"content":"        resultDisplay.getStyleClass().remove(ERROR_STYLE_CLASS);"},{"lineNumber":58,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":59,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":60,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":61,"author":{"gitID":"hzxcaryn"},"content":"     * Sets the result display style to indicate a failed command."},{"lineNumber":62,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":63,"author":{"gitID":"-"},"content":"    private void setStyleToIndicateCommandFailure() {"},{"lineNumber":64,"author":{"gitID":"hzxcaryn"},"content":"        ObservableList\u003cString\u003e styleClass \u003d resultDisplay.getStyleClass();"},{"lineNumber":65,"author":{"gitID":"-"},"content":""},{"lineNumber":66,"author":{"gitID":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {"},{"lineNumber":67,"author":{"gitID":"-"},"content":"            return;"},{"lineNumber":68,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":69,"author":{"gitID":"-"},"content":""},{"lineNumber":70,"author":{"gitID":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);"},{"lineNumber":71,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":72,"author":{"gitID":"-"},"content":""},{"lineNumber":73,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"hzxcaryn":21,"-":52}},{"path":"src/main/java/seedu/ptman/ui/EmployeeListPanel.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import org.fxmisc.easybind.EasyBind;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import javafx.application.Platform;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import javafx.fxml.FXML;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import javafx.scene.control.ListCell;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import javafx.scene.control.ListView;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.LogsCenter;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.ui.EmployeePanelSelectionChangedEvent;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.ui.JumpToListRequestEvent;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Employee;"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":22,"author":{"gitID":"-"},"content":" * Panel containing the list of employees."},{"lineNumber":23,"author":{"gitID":"-"},"content":" */"},{"lineNumber":24,"author":{"gitID":"-"},"content":"public class EmployeeListPanel extends UiPart\u003cRegion\u003e {"},{"lineNumber":25,"author":{"gitID":"-"},"content":"    private static final String FXML \u003d \"EmployeeListPanel.fxml\";"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    private static final String PANEL_HEADER \u003d \"Employees\";"},{"lineNumber":27,"author":{"gitID":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(EmployeeListPanel.class);"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    private ListView\u003cEmployeeCard\u003e employeeListView;"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    private Label employeeListPanelHeader;"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"    public EmployeeListPanel(ObservableList\u003cEmployee\u003e employeeList) {"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        super(FXML);"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        employeeListPanelHeader.setText(PANEL_HEADER);"},{"lineNumber":38,"author":{"gitID":"-"},"content":"        setConnections(employeeList);"},{"lineNumber":39,"author":{"gitID":"-"},"content":"        registerAsAnEventHandler(this);"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":41,"author":{"gitID":"-"},"content":""},{"lineNumber":42,"author":{"gitID":"-"},"content":"    private void setConnections(ObservableList\u003cEmployee\u003e employeeList) {"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        ObservableList\u003cEmployeeCard\u003e mappedList \u003d EasyBind.map("},{"lineNumber":44,"author":{"gitID":"-"},"content":"                employeeList, (employee) -\u003e new EmployeeCard(employee, employeeList.indexOf(employee) + 1));"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        employeeListView.setItems(mappedList);"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        employeeListView.setCellFactory(listView -\u003e new EmployeeListViewCell());"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        setEventHandlerForSelectionChangeEvent();"},{"lineNumber":48,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"-"},"content":"    private void setEventHandlerForSelectionChangeEvent() {"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        employeeListView.getSelectionModel().selectedItemProperty()"},{"lineNumber":52,"author":{"gitID":"-"},"content":"                .addListener((observable, oldValue, newValue) -\u003e {"},{"lineNumber":53,"author":{"gitID":"-"},"content":"                    if (newValue !\u003d null) {"},{"lineNumber":54,"author":{"gitID":"-"},"content":"                        logger.fine(\"Selection in employee list panel changed to : \u0027\" + newValue + \"\u0027\");"},{"lineNumber":55,"author":{"gitID":"hzxcaryn"},"content":"                    } else {"},{"lineNumber":56,"author":{"gitID":"hzxcaryn"},"content":"                        logger.fine(\"Employee list panel deselected\");"},{"lineNumber":57,"author":{"gitID":"-"},"content":"                    }"},{"lineNumber":58,"author":{"gitID":"-"},"content":"                    raise(new EmployeePanelSelectionChangedEvent(newValue));"},{"lineNumber":59,"author":{"gitID":"-"},"content":"                });"},{"lineNumber":60,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":61,"author":{"gitID":"-"},"content":""},{"lineNumber":62,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":63,"author":{"gitID":"-"},"content":"     * Scrolls to the {@code EmployeeCard} at the {@code index} and selects it."},{"lineNumber":64,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":65,"author":{"gitID":"hzxcaryn"},"content":"    private void scrollToAndSelect(int index) {"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        Platform.runLater(() -\u003e {"},{"lineNumber":67,"author":{"gitID":"-"},"content":"            employeeListView.scrollTo(index);"},{"lineNumber":68,"author":{"gitID":"-"},"content":"            employeeListView.getSelectionModel().clearAndSelect(index);"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        });"},{"lineNumber":70,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitID":"-"},"content":""},{"lineNumber":72,"author":{"gitID":"hzxcaryn"},"content":"    //@@author hzxcaryn"},{"lineNumber":73,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":74,"author":{"gitID":"hzxcaryn"},"content":"     * Scrolls to the top of the {@code EmployeeListPanel} and deselect any current selection."},{"lineNumber":75,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":76,"author":{"gitID":"hzxcaryn"},"content":"    private void scrollToTopAndDeselect() {"},{"lineNumber":77,"author":{"gitID":"hzxcaryn"},"content":"        Platform.runLater(() -\u003e {"},{"lineNumber":78,"author":{"gitID":"hzxcaryn"},"content":"            employeeListView.scrollTo(0);"},{"lineNumber":79,"author":{"gitID":"hzxcaryn"},"content":"            employeeListView.getSelectionModel().clearSelection();"},{"lineNumber":80,"author":{"gitID":"hzxcaryn"},"content":"        });"},{"lineNumber":81,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":82,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":83,"author":{"gitID":"hzxcaryn"},"content":"    @Subscribe"},{"lineNumber":84,"author":{"gitID":"hzxcaryn"},"content":"    private void handleJumpToListRequestEvent(JumpToListRequestEvent event) {"},{"lineNumber":85,"author":{"gitID":"hzxcaryn"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":86,"author":{"gitID":"hzxcaryn"},"content":"        if (event.isNewSelection) {"},{"lineNumber":87,"author":{"gitID":"hzxcaryn"},"content":"            scrollToAndSelect(event.targetIndex);"},{"lineNumber":88,"author":{"gitID":"hzxcaryn"},"content":"        } else {"},{"lineNumber":89,"author":{"gitID":"hzxcaryn"},"content":"            scrollToTopAndDeselect();"},{"lineNumber":90,"author":{"gitID":"hzxcaryn"},"content":"        }"},{"lineNumber":91,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":92,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":93,"author":{"gitID":"hzxcaryn"},"content":"    //@@author"},{"lineNumber":94,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":95,"author":{"gitID":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code EmployeeCard}."},{"lineNumber":96,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":97,"author":{"gitID":"-"},"content":"    class EmployeeListViewCell extends ListCell\u003cEmployeeCard\u003e {"},{"lineNumber":98,"author":{"gitID":"-"},"content":""},{"lineNumber":99,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":100,"author":{"gitID":"-"},"content":"        protected void updateItem(EmployeeCard employee, boolean empty) {"},{"lineNumber":101,"author":{"gitID":"-"},"content":"            super.updateItem(employee, empty);"},{"lineNumber":102,"author":{"gitID":"-"},"content":""},{"lineNumber":103,"author":{"gitID":"-"},"content":"            if (empty || employee \u003d\u003d null) {"},{"lineNumber":104,"author":{"gitID":"-"},"content":"                setGraphic(null);"},{"lineNumber":105,"author":{"gitID":"-"},"content":"                setText(null);"},{"lineNumber":106,"author":{"gitID":"-"},"content":"            } else {"},{"lineNumber":107,"author":{"gitID":"-"},"content":"                setGraphic(employee.getRoot());"},{"lineNumber":108,"author":{"gitID":"-"},"content":"            }"},{"lineNumber":109,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":110,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":111,"author":{"gitID":"-"},"content":""},{"lineNumber":112,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"hzxcaryn":25,"-":87}},{"path":"src/main/java/seedu/ptman/ui/TimetablePanel.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.nio.file.Files;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.time.LocalTime;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.time.temporal.ChronoUnit;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import java.time.temporal.WeekFields;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import java.util.Locale;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"-"},"content":"import javax.imageio.ImageIO;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import javax.mail.MessagingException;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"import com.calendarfx.model.Calendar;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import com.calendarfx.model.Calendar.Style;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import com.calendarfx.model.CalendarSource;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import com.calendarfx.model.Entry;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import com.calendarfx.model.Interval;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import com.calendarfx.view.CalendarView;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import com.calendarfx.view.DayViewBase;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import com.calendarfx.view.DetailedWeekView;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":"import javafx.application.Platform;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"import javafx.embed.swing.SwingFXUtils;"},{"lineNumber":30,"author":{"gitID":"-"},"content":"import javafx.fxml.FXML;"},{"lineNumber":31,"author":{"gitID":"-"},"content":"import javafx.scene.SnapshotParameters;"},{"lineNumber":32,"author":{"gitID":"-"},"content":"import javafx.scene.control.Button;"},{"lineNumber":33,"author":{"gitID":"-"},"content":"import javafx.scene.control.Label;"},{"lineNumber":34,"author":{"gitID":"-"},"content":"import javafx.scene.image.WritableImage;"},{"lineNumber":35,"author":{"gitID":"-"},"content":"import javafx.scene.layout.BorderPane;"},{"lineNumber":36,"author":{"gitID":"-"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":37,"author":{"gitID":"-"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":38,"author":{"gitID":"-"},"content":"import javafx.scene.transform.Transform;"},{"lineNumber":39,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.LogsCenter;"},{"lineNumber":40,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.model.PartTimeManagerChangedEvent;"},{"lineNumber":41,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.ui.EmployeePanelSelectionChangedEvent;"},{"lineNumber":42,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.ui.ExportTimetableAsImageAndEmailRequestEvent;"},{"lineNumber":43,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.ui.ExportTimetableAsImageRequestEvent;"},{"lineNumber":44,"author":{"gitID":"hzxcaryn"},"content":"import seedu.ptman.commons.events.ui.OutletInformationChangedEvent;"},{"lineNumber":45,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.ui.TimetableWeekChangeRequestEvent;"},{"lineNumber":46,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.ui.TimetableWeekChangeRequestEvent.WeekChangeRequest;"},{"lineNumber":47,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.services.EmailService;"},{"lineNumber":48,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.util.DateUtil;"},{"lineNumber":49,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.Logic;"},{"lineNumber":50,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Email;"},{"lineNumber":51,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Employee;"},{"lineNumber":52,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":53,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Shift;"},{"lineNumber":54,"author":{"gitID":"-"},"content":""},{"lineNumber":55,"author":{"gitID":"hzxcaryn"},"content":"//@@author hzxcaryn"},{"lineNumber":56,"author":{"gitID":"hzxcaryn"},"content":"/**"},{"lineNumber":57,"author":{"gitID":"hzxcaryn"},"content":" * Displays the GUI Timetable."},{"lineNumber":58,"author":{"gitID":"hzxcaryn"},"content":" */"},{"lineNumber":59,"author":{"gitID":"hzxcaryn"},"content":"public class TimetablePanel extends UiPart\u003cRegion\u003e {"},{"lineNumber":60,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":61,"author":{"gitID":"hzxcaryn"},"content":"    public static final String TIMETABLE_IMAGE_FILE_NAME_DEFAULT \u003d \"MyTimetable\";"},{"lineNumber":62,"author":{"gitID":"hzxcaryn"},"content":"    public static final String TIMETABLE_IMAGE_FILE_FORMAT \u003d \"png\";"},{"lineNumber":63,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":64,"author":{"gitID":"hzxcaryn"},"content":"    private static final int TIMETABLE_IMAGE_PIXEL_SCALE \u003d 2;"},{"lineNumber":65,"author":{"gitID":"hzxcaryn"},"content":"    private static final String FXML \u003d \"TimetablePanel.fxml\";"},{"lineNumber":66,"author":{"gitID":"hzxcaryn"},"content":"    private static final int MAX_SLOTS_LEFT_RUNNING_OUT \u003d 3;"},{"lineNumber":67,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":68,"author":{"gitID":"hzxcaryn"},"content":"    private static final Style ENTRY_GREEN_STYLE \u003d Style.STYLE1;"},{"lineNumber":69,"author":{"gitID":"hzxcaryn"},"content":"    private static final Style ENTRY_BLUE_STYLE \u003d Style.STYLE2;"},{"lineNumber":70,"author":{"gitID":"hzxcaryn"},"content":"    private static final Style ENTRY_YELLOW_STYLE \u003d Style.STYLE3;"},{"lineNumber":71,"author":{"gitID":"hzxcaryn"},"content":"    private static final Style ENTRY_RED_STYLE \u003d Style.STYLE5;"},{"lineNumber":72,"author":{"gitID":"hzxcaryn"},"content":"    private static final Style ENTRY_BROWN_STYLE \u003d Style.STYLE7;"},{"lineNumber":73,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":74,"author":{"gitID":"hzxcaryn"},"content":"    private static Calendar timetableAvail;"},{"lineNumber":75,"author":{"gitID":"hzxcaryn"},"content":"    private static Calendar timetableEmployee;"},{"lineNumber":76,"author":{"gitID":"hzxcaryn"},"content":"    private static Calendar timetableFull;"},{"lineNumber":77,"author":{"gitID":"hzxcaryn"},"content":"    private static Calendar timetableOthers;"},{"lineNumber":78,"author":{"gitID":"hzxcaryn"},"content":"    private static Calendar timetableRunningOut;"},{"lineNumber":79,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":80,"author":{"gitID":"hzxcaryn"},"content":"    protected Logic logic;"},{"lineNumber":81,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":82,"author":{"gitID":"hzxcaryn"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(this.getClass());"},{"lineNumber":83,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":84,"author":{"gitID":"hzxcaryn"},"content":"    @FXML"},{"lineNumber":85,"author":{"gitID":"hzxcaryn"},"content":"    private VBox timetableBox;"},{"lineNumber":86,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":87,"author":{"gitID":"hzxcaryn"},"content":"    @FXML"},{"lineNumber":88,"author":{"gitID":"hzxcaryn"},"content":"    private CalendarView timetableView;"},{"lineNumber":89,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":90,"author":{"gitID":"hzxcaryn"},"content":"    @FXML"},{"lineNumber":91,"author":{"gitID":"hzxcaryn"},"content":"    private BorderPane navBar;"},{"lineNumber":92,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":93,"author":{"gitID":"hzxcaryn"},"content":"    @FXML"},{"lineNumber":94,"author":{"gitID":"hzxcaryn"},"content":"    private Button prevButton;"},{"lineNumber":95,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":96,"author":{"gitID":"hzxcaryn"},"content":"    @FXML"},{"lineNumber":97,"author":{"gitID":"hzxcaryn"},"content":"    private Button nextButton;"},{"lineNumber":98,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":99,"author":{"gitID":"hzxcaryn"},"content":"    @FXML"},{"lineNumber":100,"author":{"gitID":"hzxcaryn"},"content":"    private Label monthDisplay;"},{"lineNumber":101,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":102,"author":{"gitID":"hzxcaryn"},"content":"    private ObservableList\u003cShift\u003e shiftObservableList;"},{"lineNumber":103,"author":{"gitID":"hzxcaryn"},"content":"    private OutletInformation outletInformation;"},{"lineNumber":104,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":105,"author":{"gitID":"hzxcaryn"},"content":"    private Employee currentEmployee \u003d null;"},{"lineNumber":106,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":107,"author":{"gitID":"hzxcaryn"},"content":"    public TimetablePanel(Logic logic) {"},{"lineNumber":108,"author":{"gitID":"hzxcaryn"},"content":"        super(FXML);"},{"lineNumber":109,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":110,"author":{"gitID":"hzxcaryn"},"content":"        this.logic \u003d logic;"},{"lineNumber":111,"author":{"gitID":"hzxcaryn"},"content":"        this.shiftObservableList \u003d logic.getFilteredShiftList();"},{"lineNumber":112,"author":{"gitID":"hzxcaryn"},"content":"        this.outletInformation \u003d logic.getOutletInformation();"},{"lineNumber":113,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":114,"author":{"gitID":"hzxcaryn"},"content":"        setUpNavBar();"},{"lineNumber":115,"author":{"gitID":"hzxcaryn"},"content":"        setTimetableViewStyle();"},{"lineNumber":116,"author":{"gitID":"hzxcaryn"},"content":"        showRelevantViewsOnly();"},{"lineNumber":117,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":118,"author":{"gitID":"hzxcaryn"},"content":"        // disable clicks on timetable view"},{"lineNumber":119,"author":{"gitID":"hzxcaryn"},"content":"        timetableView.getWeekPage().setMouseTransparent(true);"},{"lineNumber":120,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":121,"author":{"gitID":"hzxcaryn"},"content":"        updateTimetableView();"},{"lineNumber":122,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":123,"author":{"gitID":"hzxcaryn"},"content":"        registerAsAnEventHandler(this);"},{"lineNumber":124,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":125,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":126,"author":{"gitID":"hzxcaryn"},"content":"    public static Calendar getTimetableAvail() {"},{"lineNumber":127,"author":{"gitID":"hzxcaryn"},"content":"        return timetableAvail;"},{"lineNumber":128,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":129,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":130,"author":{"gitID":"hzxcaryn"},"content":"    public static Calendar getTimetableRunningOut() {"},{"lineNumber":131,"author":{"gitID":"hzxcaryn"},"content":"        return timetableRunningOut;"},{"lineNumber":132,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":133,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":134,"author":{"gitID":"hzxcaryn"},"content":"    public static Calendar getTimetableFull() {"},{"lineNumber":135,"author":{"gitID":"hzxcaryn"},"content":"        return timetableFull;"},{"lineNumber":136,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":137,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":138,"author":{"gitID":"hzxcaryn"},"content":"    public static Calendar getTimetableEmployee() {"},{"lineNumber":139,"author":{"gitID":"hzxcaryn"},"content":"        return timetableEmployee;"},{"lineNumber":140,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":141,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":142,"author":{"gitID":"hzxcaryn"},"content":"    public static Calendar getTimetableOthers() {"},{"lineNumber":143,"author":{"gitID":"hzxcaryn"},"content":"        return timetableOthers;"},{"lineNumber":144,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":145,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":146,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":147,"author":{"gitID":"hzxcaryn"},"content":"     * Sets up the navigation bar and its behavior"},{"lineNumber":148,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":149,"author":{"gitID":"hzxcaryn"},"content":"    private void setUpNavBar() {"},{"lineNumber":150,"author":{"gitID":"hzxcaryn"},"content":"        setMonthDisplay(logic.getCurrentDisplayedDate());"},{"lineNumber":151,"author":{"gitID":"hzxcaryn"},"content":"        navBar.setLeft(prevButton);"},{"lineNumber":152,"author":{"gitID":"hzxcaryn"},"content":"        navBar.setRight(nextButton);"},{"lineNumber":153,"author":{"gitID":"hzxcaryn"},"content":"        navBar.setCenter(monthDisplay);"},{"lineNumber":154,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":155,"author":{"gitID":"hzxcaryn"},"content":"        prevButton.setOnAction(value -\u003e Platform.runLater(() -\u003e navigateToPreviousWeek()));"},{"lineNumber":156,"author":{"gitID":"hzxcaryn"},"content":"        nextButton.setOnAction(value -\u003e Platform.runLater(() -\u003e navigateToNextWeek()));"},{"lineNumber":157,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":158,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":159,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":160,"author":{"gitID":"hzxcaryn"},"content":"     * Sets the displayed month on the {@code monthDisplay}."},{"lineNumber":161,"author":{"gitID":"hzxcaryn"},"content":"     * Month is determined by the majority date displayed in the timetable view."},{"lineNumber":162,"author":{"gitID":"hzxcaryn"},"content":"     * This means that if there are 4 dates that are of month April and 3 dates that are of month May,"},{"lineNumber":163,"author":{"gitID":"hzxcaryn"},"content":"     * April will be displayed on the {@code monthDisplay}."},{"lineNumber":164,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":165,"author":{"gitID":"hzxcaryn"},"content":"    private void setMonthDisplay(LocalDate date) {"},{"lineNumber":166,"author":{"gitID":"hzxcaryn"},"content":"        LocalDate thursdayDate \u003d DateUtil.getThursdayOfDate(date);"},{"lineNumber":167,"author":{"gitID":"hzxcaryn"},"content":"        monthDisplay.setText(DateUtil.getMonthYearFromDate(thursdayDate));"},{"lineNumber":168,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":169,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":170,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":171,"author":{"gitID":"hzxcaryn"},"content":"     * Sets the style of the timetable view"},{"lineNumber":172,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":173,"author":{"gitID":"hzxcaryn"},"content":"    private void setTimetableViewStyle() {"},{"lineNumber":174,"author":{"gitID":"hzxcaryn"},"content":"        ObservableList\u003cString\u003e styleClass \u003d timetableView.getStyleClass();"},{"lineNumber":175,"author":{"gitID":"hzxcaryn"},"content":"        styleClass.add(\"timetable-container\");"},{"lineNumber":176,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":177,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":178,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":179,"author":{"gitID":"hzxcaryn"},"content":"     * Only show the parts of CalendarFX that we need."},{"lineNumber":180,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":181,"author":{"gitID":"hzxcaryn"},"content":"    private void showRelevantViewsOnly() {"},{"lineNumber":182,"author":{"gitID":"hzxcaryn"},"content":"        timetableView.showWeekPage();"},{"lineNumber":183,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":184,"author":{"gitID":"hzxcaryn"},"content":"        timetableView.getWeekPage().setShowNavigation(false);"},{"lineNumber":185,"author":{"gitID":"hzxcaryn"},"content":"        timetableView.getWeekPage().setShowDate(false);"},{"lineNumber":186,"author":{"gitID":"hzxcaryn"},"content":"        timetableView.weekFieldsProperty().setValue(WeekFields.of(Locale.FRANCE)); // Start week from Monday"},{"lineNumber":187,"author":{"gitID":"hzxcaryn"},"content":"        timetableView.setShowToday(true);"},{"lineNumber":188,"author":{"gitID":"hzxcaryn"},"content":"        timetableView.setShowPrintButton(true);"},{"lineNumber":189,"author":{"gitID":"hzxcaryn"},"content":"        timetableView.setShowAddCalendarButton(false);"},{"lineNumber":190,"author":{"gitID":"hzxcaryn"},"content":"        timetableView.setShowSearchField(false);"},{"lineNumber":191,"author":{"gitID":"hzxcaryn"},"content":"        timetableView.setShowToolBar(false);"},{"lineNumber":192,"author":{"gitID":"hzxcaryn"},"content":"        timetableView.setShowPageSwitcher(false);"},{"lineNumber":193,"author":{"gitID":"hzxcaryn"},"content":"        timetableView.setShowPageToolBarControls(false);"},{"lineNumber":194,"author":{"gitID":"hzxcaryn"},"content":"        timetableView.setShowSearchResultsTray(false);"},{"lineNumber":195,"author":{"gitID":"hzxcaryn"},"content":"        timetableView.setShowSourceTray(false);"},{"lineNumber":196,"author":{"gitID":"hzxcaryn"},"content":"        timetableView.setShowSourceTrayButton(false);"},{"lineNumber":197,"author":{"gitID":"hzxcaryn"},"content":"        timetableView.getWeekPage().getDetailedWeekView().setShowAllDayView(false);"},{"lineNumber":198,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":199,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":200,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":201,"author":{"gitID":"hzxcaryn"},"content":"     * This ensures that the range of the times shown by the timetable view is constrained to the"},{"lineNumber":202,"author":{"gitID":"hzxcaryn"},"content":"     * operating hours of the outlet."},{"lineNumber":203,"author":{"gitID":"hzxcaryn"},"content":"     * Also ensures that no scrolling is required to view the entire timetable."},{"lineNumber":204,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":205,"author":{"gitID":"hzxcaryn"},"content":"    private void setTimetableRange() {"},{"lineNumber":206,"author":{"gitID":"hzxcaryn"},"content":"        LocalTime startTime \u003d outletInformation.getOperatingHours().getStartTime();"},{"lineNumber":207,"author":{"gitID":"hzxcaryn"},"content":"        LocalTime endTime \u003d outletInformation.getOperatingHours().getEndTime();"},{"lineNumber":208,"author":{"gitID":"hzxcaryn"},"content":"        timetableView.setStartTime(startTime);"},{"lineNumber":209,"author":{"gitID":"hzxcaryn"},"content":"        timetableView.setEndTime(endTime);"},{"lineNumber":210,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":211,"author":{"gitID":"hzxcaryn"},"content":"        DetailedWeekView detailedWeekView \u003d timetableView.getWeekPage().getDetailedWeekView();"},{"lineNumber":212,"author":{"gitID":"hzxcaryn"},"content":"        detailedWeekView.setEarlyLateHoursStrategy(DayViewBase.EarlyLateHoursStrategy.HIDE);"},{"lineNumber":213,"author":{"gitID":"hzxcaryn"},"content":"        detailedWeekView.setHoursLayoutStrategy(DayViewBase.HoursLayoutStrategy.FIXED_HOUR_COUNT);"},{"lineNumber":214,"author":{"gitID":"hzxcaryn"},"content":"        detailedWeekView.setVisibleHours((int) ChronoUnit.HOURS.between(startTime, endTime));"},{"lineNumber":215,"author":{"gitID":"hzxcaryn"},"content":"        detailedWeekView.setShowScrollBar(false);"},{"lineNumber":216,"author":{"gitID":"hzxcaryn"},"content":"        detailedWeekView.setEnableCurrentTimeMarker(false);"},{"lineNumber":217,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":218,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":219,"author":{"gitID":"hzxcaryn"},"content":"    private void setCurrentDisplayedDate() {"},{"lineNumber":220,"author":{"gitID":"hzxcaryn"},"content":"        timetableView.setDate(logic.getCurrentDisplayedDate());"},{"lineNumber":221,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":222,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":223,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":224,"author":{"gitID":"hzxcaryn"},"content":"     * Takes default outlet shifts and set timetable entries based on these shifts."},{"lineNumber":225,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":226,"author":{"gitID":"hzxcaryn"},"content":"    private void setShifts() {"},{"lineNumber":227,"author":{"gitID":"hzxcaryn"},"content":"        int index \u003d 1;"},{"lineNumber":228,"author":{"gitID":"hzxcaryn"},"content":"        for (Shift shift: shiftObservableList) {"},{"lineNumber":229,"author":{"gitID":"hzxcaryn"},"content":"            LocalDate date \u003d shift.getDate().getLocalDate();"},{"lineNumber":230,"author":{"gitID":"hzxcaryn"},"content":"            Interval timeInterval \u003d new Interval(date, shift.getStartTime().getLocalTime(),"},{"lineNumber":231,"author":{"gitID":"hzxcaryn"},"content":"                    date, shift.getEndTime().getLocalTime());"},{"lineNumber":232,"author":{"gitID":"hzxcaryn"},"content":"            Entry\u003cString\u003e shiftEntry \u003d new Entry\u003c\u003e(\"SHIFT \" + index + \"\\nSlots left: \" + shift.getSlotsLeft()"},{"lineNumber":233,"author":{"gitID":"hzxcaryn"},"content":"                    + \"/\" + shift.getCapacity().getCapacity(), timeInterval);"},{"lineNumber":234,"author":{"gitID":"hzxcaryn"},"content":"            setEntryType(shift, shiftEntry);"},{"lineNumber":235,"author":{"gitID":"hzxcaryn"},"content":"            index++;"},{"lineNumber":236,"author":{"gitID":"hzxcaryn"},"content":"        }"},{"lineNumber":237,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":238,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":239,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":240,"author":{"gitID":"hzxcaryn"},"content":"     * Sets the entry type (aka the color) of the shift in the timetable"},{"lineNumber":241,"author":{"gitID":"hzxcaryn"},"content":"     * @param shift"},{"lineNumber":242,"author":{"gitID":"hzxcaryn"},"content":"     * @param shiftEntry"},{"lineNumber":243,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":244,"author":{"gitID":"hzxcaryn"},"content":"    private void setEntryType(Shift shift, Entry\u003cString\u003e shiftEntry) {"},{"lineNumber":245,"author":{"gitID":"hzxcaryn"},"content":"        Calendar entryType;"},{"lineNumber":246,"author":{"gitID":"hzxcaryn"},"content":"        if (currentEmployee !\u003d null) {"},{"lineNumber":247,"author":{"gitID":"hzxcaryn"},"content":"            entryType \u003d getEntryTypeEmployee(shift);"},{"lineNumber":248,"author":{"gitID":"hzxcaryn"},"content":"        } else {"},{"lineNumber":249,"author":{"gitID":"hzxcaryn"},"content":"            entryType \u003d getEntryTypeDefault(shift);"},{"lineNumber":250,"author":{"gitID":"hzxcaryn"},"content":"        }"},{"lineNumber":251,"author":{"gitID":"hzxcaryn"},"content":"        entryType.addEntry(shiftEntry);"},{"lineNumber":252,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":253,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":254,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":255,"author":{"gitID":"hzxcaryn"},"content":"     * @return the entryType (a Calendar object) for the shift in the default timetable view, which reflects"},{"lineNumber":256,"author":{"gitID":"hzxcaryn"},"content":"     * the color of the shift in the timetableView."},{"lineNumber":257,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":258,"author":{"gitID":"hzxcaryn"},"content":"    private Calendar getEntryTypeDefault(Shift shift) {"},{"lineNumber":259,"author":{"gitID":"hzxcaryn"},"content":"        float ratio \u003d (float) shift.getSlotsLeft() / (float) shift.getCapacity().getCapacity();"},{"lineNumber":260,"author":{"gitID":"hzxcaryn"},"content":"        if (ratio \u003c\u003d 0) {"},{"lineNumber":261,"author":{"gitID":"hzxcaryn"},"content":"            return timetableFull;"},{"lineNumber":262,"author":{"gitID":"hzxcaryn"},"content":"        } else if (ratio \u003c\u003d 0.5 || shift.getCapacity().getCapacity() \u003c MAX_SLOTS_LEFT_RUNNING_OUT) {"},{"lineNumber":263,"author":{"gitID":"hzxcaryn"},"content":"            return timetableRunningOut;"},{"lineNumber":264,"author":{"gitID":"hzxcaryn"},"content":"        } else {"},{"lineNumber":265,"author":{"gitID":"hzxcaryn"},"content":"            return timetableAvail;"},{"lineNumber":266,"author":{"gitID":"hzxcaryn"},"content":"        }"},{"lineNumber":267,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":268,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":269,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":270,"author":{"gitID":"hzxcaryn"},"content":"     * @return the entryType (a Calendar object) for the shift in the employee timetable view, which reflects"},{"lineNumber":271,"author":{"gitID":"hzxcaryn"},"content":"     * the color of the shift in the timetableView."},{"lineNumber":272,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":273,"author":{"gitID":"hzxcaryn"},"content":"    private Calendar getEntryTypeEmployee(Shift shift) {"},{"lineNumber":274,"author":{"gitID":"hzxcaryn"},"content":"        if (shift.containsEmployee(currentEmployee)) {"},{"lineNumber":275,"author":{"gitID":"hzxcaryn"},"content":"            return timetableEmployee;"},{"lineNumber":276,"author":{"gitID":"hzxcaryn"},"content":"        } else {"},{"lineNumber":277,"author":{"gitID":"hzxcaryn"},"content":"            return timetableOthers;"},{"lineNumber":278,"author":{"gitID":"hzxcaryn"},"content":"        }"},{"lineNumber":279,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":280,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":281,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":282,"author":{"gitID":"hzxcaryn"},"content":"     * Navigates the timetable view to the following week."},{"lineNumber":283,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":284,"author":{"gitID":"hzxcaryn"},"content":"    private void navigateToNextWeek() {"},{"lineNumber":285,"author":{"gitID":"hzxcaryn"},"content":"        logic.setFilteredShiftListToNextWeek();"},{"lineNumber":286,"author":{"gitID":"hzxcaryn"},"content":"        shiftObservableList \u003d logic.getFilteredShiftList();"},{"lineNumber":287,"author":{"gitID":"hzxcaryn"},"content":"        updateTimetableView();"},{"lineNumber":288,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":289,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":290,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":291,"author":{"gitID":"hzxcaryn"},"content":"     * Navigates the timetable view to the previous week."},{"lineNumber":292,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":293,"author":{"gitID":"hzxcaryn"},"content":"    private void navigateToPreviousWeek() {"},{"lineNumber":294,"author":{"gitID":"hzxcaryn"},"content":"        logic.setFilteredShiftListToPrevWeek();"},{"lineNumber":295,"author":{"gitID":"hzxcaryn"},"content":"        shiftObservableList \u003d logic.getFilteredShiftList();"},{"lineNumber":296,"author":{"gitID":"hzxcaryn"},"content":"        updateTimetableView();"},{"lineNumber":297,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":298,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":299,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":300,"author":{"gitID":"hzxcaryn"},"content":"     * Navigates the timetable view to the current week."},{"lineNumber":301,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":302,"author":{"gitID":"hzxcaryn"},"content":"    private void navigateToCurrWeek() {"},{"lineNumber":303,"author":{"gitID":"hzxcaryn"},"content":"        logic.setFilteredShiftListToCurrentWeek();"},{"lineNumber":304,"author":{"gitID":"hzxcaryn"},"content":"        shiftObservableList \u003d logic.getFilteredShiftList();"},{"lineNumber":305,"author":{"gitID":"hzxcaryn"},"content":"        updateTimetableView();"},{"lineNumber":306,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":307,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":308,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":309,"author":{"gitID":"hzxcaryn"},"content":"     * Replaces the timetable view with a new timetable, with shifts applied by the employee being highlighted"},{"lineNumber":310,"author":{"gitID":"hzxcaryn"},"content":"     * @param employee"},{"lineNumber":311,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":312,"author":{"gitID":"hzxcaryn"},"content":"    private void loadEmployeeTimetable(Employee employee) {"},{"lineNumber":313,"author":{"gitID":"hzxcaryn"},"content":"        currentEmployee \u003d employee;"},{"lineNumber":314,"author":{"gitID":"hzxcaryn"},"content":"        updateTimetableView();"},{"lineNumber":315,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":316,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":317,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":318,"author":{"gitID":"hzxcaryn"},"content":"     * Replaces the timetable view with a default timetable without any employee being selected."},{"lineNumber":319,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":320,"author":{"gitID":"hzxcaryn"},"content":"    private void loadDefaultTimetable() {"},{"lineNumber":321,"author":{"gitID":"hzxcaryn"},"content":"        currentEmployee \u003d null;"},{"lineNumber":322,"author":{"gitID":"hzxcaryn"},"content":"        updateTimetableView();"},{"lineNumber":323,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":324,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":325,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":326,"author":{"gitID":"hzxcaryn"},"content":"     * Replaces timetableView with a new timetable with updated shift and outlet information."},{"lineNumber":327,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":328,"author":{"gitID":"hzxcaryn"},"content":"    private void updateTimetableView() {"},{"lineNumber":329,"author":{"gitID":"hzxcaryn"},"content":"        setCurrentDisplayedDate();"},{"lineNumber":330,"author":{"gitID":"hzxcaryn"},"content":"        setMonthDisplay(logic.getCurrentDisplayedDate());"},{"lineNumber":331,"author":{"gitID":"hzxcaryn"},"content":"        resetTimetableView();"},{"lineNumber":332,"author":{"gitID":"hzxcaryn"},"content":"        setTimetableRange();"},{"lineNumber":333,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":334,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":335,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":336,"author":{"gitID":"hzxcaryn"},"content":"     * Clear current timetable view and resets it to a new timetable view with updated shifts."},{"lineNumber":337,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":338,"author":{"gitID":"hzxcaryn"},"content":"    private void resetTimetableView() {"},{"lineNumber":339,"author":{"gitID":"hzxcaryn"},"content":"        timetableView.getCalendarSources().clear();"},{"lineNumber":340,"author":{"gitID":"hzxcaryn"},"content":"        CalendarSource calendarSource \u003d new CalendarSource(\"Shifts\");"},{"lineNumber":341,"author":{"gitID":"hzxcaryn"},"content":"        addCalendars(calendarSource);"},{"lineNumber":342,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":343,"author":{"gitID":"hzxcaryn"},"content":"        setShifts();"},{"lineNumber":344,"author":{"gitID":"hzxcaryn"},"content":"        timetableView.getCalendarSources().add(calendarSource);"},{"lineNumber":345,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":346,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":347,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":348,"author":{"gitID":"hzxcaryn"},"content":"     * Initialises all the Calendar objects (These are our timetable entries)"},{"lineNumber":349,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":350,"author":{"gitID":"hzxcaryn"},"content":"    private void initialiseEntries() {"},{"lineNumber":351,"author":{"gitID":"hzxcaryn"},"content":"        timetableAvail \u003d new Calendar(\"Available\");"},{"lineNumber":352,"author":{"gitID":"hzxcaryn"},"content":"        timetableRunningOut \u003d new Calendar(\"Running Out\");"},{"lineNumber":353,"author":{"gitID":"hzxcaryn"},"content":"        timetableFull \u003d new Calendar(\"Full\");"},{"lineNumber":354,"author":{"gitID":"hzxcaryn"},"content":"        timetableEmployee \u003d new Calendar(\"Employee\u0027s shift\");"},{"lineNumber":355,"author":{"gitID":"hzxcaryn"},"content":"        timetableOthers \u003d new Calendar(\"Other shifts\");"},{"lineNumber":356,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":357,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":358,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":359,"author":{"gitID":"hzxcaryn"},"content":"     * Sets the color styles of the entries"},{"lineNumber":360,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":361,"author":{"gitID":"hzxcaryn"},"content":"    private void setEntryStyles() {"},{"lineNumber":362,"author":{"gitID":"hzxcaryn"},"content":"        timetableAvail.setStyle(ENTRY_GREEN_STYLE);"},{"lineNumber":363,"author":{"gitID":"hzxcaryn"},"content":"        timetableRunningOut.setStyle(ENTRY_YELLOW_STYLE);"},{"lineNumber":364,"author":{"gitID":"hzxcaryn"},"content":"        timetableFull.setStyle(ENTRY_RED_STYLE);"},{"lineNumber":365,"author":{"gitID":"hzxcaryn"},"content":"        timetableEmployee.setStyle(ENTRY_BLUE_STYLE);"},{"lineNumber":366,"author":{"gitID":"hzxcaryn"},"content":"        timetableOthers.setStyle(ENTRY_BROWN_STYLE);"},{"lineNumber":367,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":368,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":369,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":370,"author":{"gitID":"hzxcaryn"},"content":"     * Adds all relevant Calendars (entryTypes) to its source"},{"lineNumber":371,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":372,"author":{"gitID":"hzxcaryn"},"content":"    private void addCalendars(CalendarSource calendarSource) {"},{"lineNumber":373,"author":{"gitID":"hzxcaryn"},"content":"        initialiseEntries();"},{"lineNumber":374,"author":{"gitID":"hzxcaryn"},"content":"        setEntryStyles();"},{"lineNumber":375,"author":{"gitID":"hzxcaryn"},"content":"        calendarSource.getCalendars().addAll(timetableAvail, timetableRunningOut, timetableFull,"},{"lineNumber":376,"author":{"gitID":"hzxcaryn"},"content":"                timetableEmployee, timetableOthers);"},{"lineNumber":377,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":378,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":379,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":380,"author":{"gitID":"hzxcaryn"},"content":"     * Takes a snapshot of the timetable panel"},{"lineNumber":381,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":382,"author":{"gitID":"hzxcaryn"},"content":"    private WritableImage takeSnapshot() {"},{"lineNumber":383,"author":{"gitID":"hzxcaryn"},"content":"        WritableImage timetableWritableImage \u003d new WritableImage("},{"lineNumber":384,"author":{"gitID":"hzxcaryn"},"content":"                (int) (TIMETABLE_IMAGE_PIXEL_SCALE * timetableBox.getWidth()),"},{"lineNumber":385,"author":{"gitID":"hzxcaryn"},"content":"                (int) (TIMETABLE_IMAGE_PIXEL_SCALE * timetableBox.getHeight()));"},{"lineNumber":386,"author":{"gitID":"hzxcaryn"},"content":"        SnapshotParameters spa \u003d new SnapshotParameters();"},{"lineNumber":387,"author":{"gitID":"hzxcaryn"},"content":"        spa.setTransform(Transform.scale(TIMETABLE_IMAGE_PIXEL_SCALE, TIMETABLE_IMAGE_PIXEL_SCALE));"},{"lineNumber":388,"author":{"gitID":"hzxcaryn"},"content":"        WritableImage snapshot \u003d timetableBox.snapshot(spa, timetableWritableImage);"},{"lineNumber":389,"author":{"gitID":"hzxcaryn"},"content":"        return snapshot;"},{"lineNumber":390,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":391,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":392,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":393,"author":{"gitID":"hzxcaryn"},"content":"     * Exports timetable as image and save it locally"},{"lineNumber":394,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":395,"author":{"gitID":"hzxcaryn"},"content":"    private void exportTimetableAsImage(String filename) {"},{"lineNumber":396,"author":{"gitID":"hzxcaryn"},"content":"        File imageFile \u003d new File(\".\" + File.separator + filename + \".\" + TIMETABLE_IMAGE_FILE_FORMAT);"},{"lineNumber":397,"author":{"gitID":"hzxcaryn"},"content":"        try {"},{"lineNumber":398,"author":{"gitID":"hzxcaryn"},"content":"            ImageIO.write(SwingFXUtils.fromFXImage(takeSnapshot(), null), TIMETABLE_IMAGE_FILE_FORMAT, imageFile);"},{"lineNumber":399,"author":{"gitID":"hzxcaryn"},"content":"        } catch (IOException e) {"},{"lineNumber":400,"author":{"gitID":"hzxcaryn"},"content":"            logger.warning(\"Error taking snapshot of timetable.\");"},{"lineNumber":401,"author":{"gitID":"hzxcaryn"},"content":"        }"},{"lineNumber":402,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":403,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":404,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":405,"author":{"gitID":"hzxcaryn"},"content":"     * Exports timetable as image and email it"},{"lineNumber":406,"author":{"gitID":"hzxcaryn"},"content":"     * @param email"},{"lineNumber":407,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":408,"author":{"gitID":"hzxcaryn"},"content":"    private void exportTimetableAsImageAndEmail(String filename, Email email) {"},{"lineNumber":409,"author":{"gitID":"hzxcaryn"},"content":"        String pathName \u003d \".\" + File.separator + filename + \".\" + TIMETABLE_IMAGE_FILE_FORMAT;"},{"lineNumber":410,"author":{"gitID":"hzxcaryn"},"content":"        File imageFile \u003d new File(pathName);"},{"lineNumber":411,"author":{"gitID":"hzxcaryn"},"content":"        try {"},{"lineNumber":412,"author":{"gitID":"hzxcaryn"},"content":"            ImageIO.write(SwingFXUtils.fromFXImage(takeSnapshot(), null), TIMETABLE_IMAGE_FILE_FORMAT, imageFile);"},{"lineNumber":413,"author":{"gitID":"hzxcaryn"},"content":"            EmailService emailService \u003d EmailService.getInstance();"},{"lineNumber":414,"author":{"gitID":"hzxcaryn"},"content":"            emailService.sendTimetableAttachment(email.toString(), pathName);"},{"lineNumber":415,"author":{"gitID":"hzxcaryn"},"content":"        } catch (IOException e) {"},{"lineNumber":416,"author":{"gitID":"hzxcaryn"},"content":"            logger.warning(\"Error taking snapshot of timetable.\");"},{"lineNumber":417,"author":{"gitID":"hzxcaryn"},"content":"        } catch (MessagingException e) {"},{"lineNumber":418,"author":{"gitID":"hzxcaryn"},"content":"            logger.warning(\"Error sending timetable as email.\");"},{"lineNumber":419,"author":{"gitID":"hzxcaryn"},"content":"        }"},{"lineNumber":420,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":421,"author":{"gitID":"hzxcaryn"},"content":"        try {"},{"lineNumber":422,"author":{"gitID":"hzxcaryn"},"content":"            Files.deleteIfExists(Paths.get(pathName));"},{"lineNumber":423,"author":{"gitID":"hzxcaryn"},"content":"        } catch (IOException e) {"},{"lineNumber":424,"author":{"gitID":"hzxcaryn"},"content":"            logger.warning(\"Error deleting exported and emailed timetable image.\");"},{"lineNumber":425,"author":{"gitID":"hzxcaryn"},"content":"        }"},{"lineNumber":426,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":427,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":428,"author":{"gitID":"hzxcaryn"},"content":"    @Subscribe"},{"lineNumber":429,"author":{"gitID":"hzxcaryn"},"content":"    private void handlePartTimeManagerChangedEvent(PartTimeManagerChangedEvent event) {"},{"lineNumber":430,"author":{"gitID":"hzxcaryn"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event) + \": Updating timetable view....\");"},{"lineNumber":431,"author":{"gitID":"hzxcaryn"},"content":"        Platform.runLater(() -\u003e updateTimetableView());"},{"lineNumber":432,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":433,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":434,"author":{"gitID":"hzxcaryn"},"content":"    @Subscribe"},{"lineNumber":435,"author":{"gitID":"hzxcaryn"},"content":"    private void handleOutletInformationChangedEvent(OutletInformationChangedEvent event) {"},{"lineNumber":436,"author":{"gitID":"hzxcaryn"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event) + \": Rescaling timetable view....\");"},{"lineNumber":437,"author":{"gitID":"hzxcaryn"},"content":"        Platform.runLater(() -\u003e updateTimetableView());"},{"lineNumber":438,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":439,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":440,"author":{"gitID":"hzxcaryn"},"content":"    @Subscribe"},{"lineNumber":441,"author":{"gitID":"hzxcaryn"},"content":"    private void handleEmployeePanelSelectionChangedEvent(EmployeePanelSelectionChangedEvent event) {"},{"lineNumber":442,"author":{"gitID":"hzxcaryn"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":443,"author":{"gitID":"hzxcaryn"},"content":"        Platform.runLater(() -\u003e {"},{"lineNumber":444,"author":{"gitID":"hzxcaryn"},"content":"            if (event.hasNewSelection()) {"},{"lineNumber":445,"author":{"gitID":"hzxcaryn"},"content":"                loadEmployeeTimetable(event.getNewSelection().employee);"},{"lineNumber":446,"author":{"gitID":"hzxcaryn"},"content":"            } else {"},{"lineNumber":447,"author":{"gitID":"hzxcaryn"},"content":"                loadDefaultTimetable();"},{"lineNumber":448,"author":{"gitID":"hzxcaryn"},"content":"            }"},{"lineNumber":449,"author":{"gitID":"hzxcaryn"},"content":"        });"},{"lineNumber":450,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":451,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":452,"author":{"gitID":"hzxcaryn"},"content":"    @Subscribe"},{"lineNumber":453,"author":{"gitID":"hzxcaryn"},"content":"    private void handleTimetableWeekChangeRequestEvent(TimetableWeekChangeRequestEvent event) {"},{"lineNumber":454,"author":{"gitID":"hzxcaryn"},"content":"        WeekChangeRequest request \u003d event.getRequest();"},{"lineNumber":455,"author":{"gitID":"hzxcaryn"},"content":"        Platform.runLater(() -\u003e {"},{"lineNumber":456,"author":{"gitID":"hzxcaryn"},"content":"            if (request \u003d\u003d WeekChangeRequest.NEXT) {"},{"lineNumber":457,"author":{"gitID":"hzxcaryn"},"content":"                logger.info(LogsCenter.getEventHandlingLogMessage(event)"},{"lineNumber":458,"author":{"gitID":"hzxcaryn"},"content":"                        + \": Navigating timetable to the next week....\");"},{"lineNumber":459,"author":{"gitID":"hzxcaryn"},"content":"                navigateToNextWeek();"},{"lineNumber":460,"author":{"gitID":"hzxcaryn"},"content":"            } else if (request \u003d\u003d WeekChangeRequest.PREVIOUS) {"},{"lineNumber":461,"author":{"gitID":"hzxcaryn"},"content":"                logger.info(LogsCenter.getEventHandlingLogMessage(event)"},{"lineNumber":462,"author":{"gitID":"hzxcaryn"},"content":"                        + \": Navigating timetable to the previous week....\");"},{"lineNumber":463,"author":{"gitID":"hzxcaryn"},"content":"                navigateToPreviousWeek();"},{"lineNumber":464,"author":{"gitID":"hzxcaryn"},"content":"            } else if (request \u003d\u003d WeekChangeRequest.CURRENT) {"},{"lineNumber":465,"author":{"gitID":"hzxcaryn"},"content":"                logger.info(LogsCenter.getEventHandlingLogMessage(event)"},{"lineNumber":466,"author":{"gitID":"hzxcaryn"},"content":"                        + \": Navigating timetable to the current week....\");"},{"lineNumber":467,"author":{"gitID":"hzxcaryn"},"content":"                navigateToCurrWeek();"},{"lineNumber":468,"author":{"gitID":"hzxcaryn"},"content":"            }"},{"lineNumber":469,"author":{"gitID":"hzxcaryn"},"content":"        });"},{"lineNumber":470,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":471,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":472,"author":{"gitID":"hzxcaryn"},"content":"    @Subscribe"},{"lineNumber":473,"author":{"gitID":"hzxcaryn"},"content":"    private void handleExportTimetableAsImageRequestEvent(ExportTimetableAsImageRequestEvent event) {"},{"lineNumber":474,"author":{"gitID":"hzxcaryn"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event) + \": Exporting timetable as image....\");"},{"lineNumber":475,"author":{"gitID":"hzxcaryn"},"content":"        Platform.runLater(() -\u003e exportTimetableAsImage(event.filename));"},{"lineNumber":476,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":477,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":478,"author":{"gitID":"hzxcaryn"},"content":"    @Subscribe"},{"lineNumber":479,"author":{"gitID":"hzxcaryn"},"content":"    private void handleExportTimetableAsImageAndEmailRequestEvent(ExportTimetableAsImageAndEmailRequestEvent event) {"},{"lineNumber":480,"author":{"gitID":"hzxcaryn"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event)"},{"lineNumber":481,"author":{"gitID":"hzxcaryn"},"content":"                + \": Exporting timetable as image to send email....\");"},{"lineNumber":482,"author":{"gitID":"hzxcaryn"},"content":"        Platform.runLater(() -\u003e exportTimetableAsImageAndEmail(event.filename, event.email));"},{"lineNumber":483,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":484,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":485,"author":{"gitID":"hzxcaryn"},"content":"}"}],"authorContributionMap":{"hzxcaryn":432,"-":53}},{"path":"src/main/java/seedu/ptman/ui/AdminModeDisplay.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":6,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import javafx.application.Platform;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import javafx.fxml.FXML;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.LogsCenter;"},{"lineNumber":13,"author":{"gitID":"hzxcaryn"},"content":"import seedu.ptman.commons.events.model.UserModeChangedEvent;"},{"lineNumber":14,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":15,"author":{"gitID":"hzxcaryn"},"content":"//@@author hzxcaryn"},{"lineNumber":16,"author":{"gitID":"hzxcaryn"},"content":"/**"},{"lineNumber":17,"author":{"gitID":"hzxcaryn"},"content":" * Admin mode display of the app. Displays whether the user is in admin mode or not."},{"lineNumber":18,"author":{"gitID":"hzxcaryn"},"content":" */"},{"lineNumber":19,"author":{"gitID":"hzxcaryn"},"content":"public class AdminModeDisplay extends UiPart\u003cRegion\u003e {"},{"lineNumber":20,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":21,"author":{"gitID":"hzxcaryn"},"content":"    public static final String LABEL_STYLE_CLASS_ADMIN \u003d \"label-admin-mode\";"},{"lineNumber":22,"author":{"gitID":"hzxcaryn"},"content":"    public static final String LABEL_STYLE_CLASS_NON_ADMIN \u003d \"label-non-admin-mode\";"},{"lineNumber":23,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":24,"author":{"gitID":"hzxcaryn"},"content":"    private static final String adminModeText \u003d \"Admin Mode\";"},{"lineNumber":25,"author":{"gitID":"hzxcaryn"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AdminModeDisplay.class);"},{"lineNumber":26,"author":{"gitID":"hzxcaryn"},"content":"    private static final String FXML \u003d \"AdminModeDisplay.fxml\";"},{"lineNumber":27,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":28,"author":{"gitID":"hzxcaryn"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitID":"hzxcaryn"},"content":"    private Label adminModeDisplay;"},{"lineNumber":30,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":31,"author":{"gitID":"hzxcaryn"},"content":"    public AdminModeDisplay(boolean isAdminMode) {"},{"lineNumber":32,"author":{"gitID":"hzxcaryn"},"content":"        super(FXML);"},{"lineNumber":33,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":34,"author":{"gitID":"hzxcaryn"},"content":"        adminModeDisplay.setText(adminModeText);"},{"lineNumber":35,"author":{"gitID":"hzxcaryn"},"content":"        setLabelStyle(isAdminMode);"},{"lineNumber":36,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":37,"author":{"gitID":"hzxcaryn"},"content":"        registerAsAnEventHandler(this);"},{"lineNumber":38,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":40,"author":{"gitID":"hzxcaryn"},"content":"    private void setLabelStyle(boolean isAdminMode) {"},{"lineNumber":41,"author":{"gitID":"hzxcaryn"},"content":"        ObservableList\u003cString\u003e styleClass \u003d this.adminModeDisplay.getStyleClass();"},{"lineNumber":42,"author":{"gitID":"hzxcaryn"},"content":"        if (isAdminMode) {"},{"lineNumber":43,"author":{"gitID":"hzxcaryn"},"content":"            styleClass.remove(LABEL_STYLE_CLASS_NON_ADMIN);"},{"lineNumber":44,"author":{"gitID":"hzxcaryn"},"content":"            styleClass.add(LABEL_STYLE_CLASS_ADMIN);"},{"lineNumber":45,"author":{"gitID":"hzxcaryn"},"content":"        } else {"},{"lineNumber":46,"author":{"gitID":"hzxcaryn"},"content":"            styleClass.remove(LABEL_STYLE_CLASS_ADMIN);"},{"lineNumber":47,"author":{"gitID":"hzxcaryn"},"content":"            styleClass.add(LABEL_STYLE_CLASS_NON_ADMIN);"},{"lineNumber":48,"author":{"gitID":"hzxcaryn"},"content":"        }"},{"lineNumber":49,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":51,"author":{"gitID":"hzxcaryn"},"content":"    @Subscribe"},{"lineNumber":52,"author":{"gitID":"hzxcaryn"},"content":"    private void handleUserModeChangedEvent(UserModeChangedEvent event) {"},{"lineNumber":53,"author":{"gitID":"hzxcaryn"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":54,"author":{"gitID":"hzxcaryn"},"content":"        Platform.runLater(() -\u003e setLabelStyle(event.isAdminMode));"},{"lineNumber":55,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":57,"author":{"gitID":"hzxcaryn"},"content":"}"}],"authorContributionMap":{"hzxcaryn":46,"-":11}},{"path":"src/main/java/seedu/ptman/ui/OutletDetailsPanel.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import javafx.application.Platform;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import javafx.scene.control.Label;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.LogsCenter;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.ui.AnnouncementChangedEvent;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.ui.OutletInformationChangedEvent;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.ui.OutletNameChangedEvent;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":18,"author":{"gitID":"SunBangjie"},"content":"/**"},{"lineNumber":19,"author":{"gitID":"SunBangjie"},"content":" * The Outlet Panel of the App, which displays the Outlet name and details"},{"lineNumber":20,"author":{"gitID":"SunBangjie"},"content":" */"},{"lineNumber":21,"author":{"gitID":"SunBangjie"},"content":"public class OutletDetailsPanel extends UiPart\u003cRegion\u003e {"},{"lineNumber":22,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":23,"author":{"gitID":"SunBangjie"},"content":"    private static final String FXML \u003d \"OutletDetailsPanel.fxml\";"},{"lineNumber":24,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":25,"author":{"gitID":"SunBangjie"},"content":"    public final OutletInformation outlet;"},{"lineNumber":26,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":27,"author":{"gitID":"SunBangjie"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(this.getClass());"},{"lineNumber":28,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":29,"author":{"gitID":"SunBangjie"},"content":"    @FXML"},{"lineNumber":30,"author":{"gitID":"SunBangjie"},"content":"    private Label outletNamePanelHeader;"},{"lineNumber":31,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":32,"author":{"gitID":"SunBangjie"},"content":"    @FXML"},{"lineNumber":33,"author":{"gitID":"SunBangjie"},"content":"    private Label operatingHours;"},{"lineNumber":34,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":35,"author":{"gitID":"SunBangjie"},"content":"    @FXML"},{"lineNumber":36,"author":{"gitID":"SunBangjie"},"content":"    private Label outletContact;"},{"lineNumber":37,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":38,"author":{"gitID":"SunBangjie"},"content":"    @FXML"},{"lineNumber":39,"author":{"gitID":"SunBangjie"},"content":"    private Label outletEmail;"},{"lineNumber":40,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":41,"author":{"gitID":"SunBangjie"},"content":"    @FXML"},{"lineNumber":42,"author":{"gitID":"SunBangjie"},"content":"    private Label announcement;"},{"lineNumber":43,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":44,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":45,"author":{"gitID":"SunBangjie"},"content":"    public OutletDetailsPanel(OutletInformation outlet) {"},{"lineNumber":46,"author":{"gitID":"SunBangjie"},"content":"        super(FXML);"},{"lineNumber":47,"author":{"gitID":"SunBangjie"},"content":"        this.outlet \u003d outlet;"},{"lineNumber":48,"author":{"gitID":"SunBangjie"},"content":"        setOutletInformation(outlet.getOperatingHours().getDisplayedMessage(),"},{"lineNumber":49,"author":{"gitID":"SunBangjie"},"content":"                outlet.getOutletContact().toString(),"},{"lineNumber":50,"author":{"gitID":"SunBangjie"},"content":"                outlet.getOutletEmail().toString());"},{"lineNumber":51,"author":{"gitID":"SunBangjie"},"content":"        setOutletName(outlet.getName().toString());"},{"lineNumber":52,"author":{"gitID":"SunBangjie"},"content":"        setAnnouncement(outlet.getAnnouncement().toString());"},{"lineNumber":53,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":54,"author":{"gitID":"SunBangjie"},"content":"        registerAsAnEventHandler(this);"},{"lineNumber":55,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":57,"author":{"gitID":"hzxcaryn"},"content":"    //@@author hzxcaryn"},{"lineNumber":58,"author":{"gitID":"hzxcaryn"},"content":"    private void setOutletName(String name) {"},{"lineNumber":59,"author":{"gitID":"hzxcaryn"},"content":"        outletNamePanelHeader.setText(name);"},{"lineNumber":60,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":61,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":62,"author":{"gitID":"hzxcaryn"},"content":"    private void setOutletInformation(String operatingHours, String outletContact, String outletEmail) {"},{"lineNumber":63,"author":{"gitID":"hzxcaryn"},"content":"        this.operatingHours.setText(operatingHours + \"    \");"},{"lineNumber":64,"author":{"gitID":"hzxcaryn"},"content":"        this.outletContact.setText(outletContact + \"    \");"},{"lineNumber":65,"author":{"gitID":"hzxcaryn"},"content":"        this.outletEmail.setText(outletEmail);"},{"lineNumber":66,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":67,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":68,"author":{"gitID":"SunBangjie"},"content":"    //@@author SunBangjie"},{"lineNumber":69,"author":{"gitID":"SunBangjie"},"content":"    private void setAnnouncement(String text) {"},{"lineNumber":70,"author":{"gitID":"SunBangjie"},"content":"        announcement.setText(text);"},{"lineNumber":71,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":72,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":73,"author":{"gitID":"hzxcaryn"},"content":"    //@@author hzxcaryn"},{"lineNumber":74,"author":{"gitID":"hzxcaryn"},"content":"    @Subscribe"},{"lineNumber":75,"author":{"gitID":"hzxcaryn"},"content":"    private void handleOutletInformationChangedEvent(OutletInformationChangedEvent event) {"},{"lineNumber":76,"author":{"gitID":"hzxcaryn"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":77,"author":{"gitID":"hzxcaryn"},"content":"        Platform.runLater(() -\u003e setOutletInformation(event.operatingHours, event.outletContact, event.outletEmail));"},{"lineNumber":78,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":79,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":80,"author":{"gitID":"hzxcaryn"},"content":"    @Subscribe"},{"lineNumber":81,"author":{"gitID":"hzxcaryn"},"content":"    private void handleOutletNameChangedEvent(OutletNameChangedEvent event) {"},{"lineNumber":82,"author":{"gitID":"hzxcaryn"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":83,"author":{"gitID":"hzxcaryn"},"content":"        Platform.runLater(() -\u003e setOutletName(event.message));"},{"lineNumber":84,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":85,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":86,"author":{"gitID":"SunBangjie"},"content":"    //@@author SunBangjie"},{"lineNumber":87,"author":{"gitID":"SunBangjie"},"content":"    @Subscribe"},{"lineNumber":88,"author":{"gitID":"SunBangjie"},"content":"    public void handleAnnouncementChangedEvent(AnnouncementChangedEvent event) {"},{"lineNumber":89,"author":{"gitID":"SunBangjie"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":90,"author":{"gitID":"SunBangjie"},"content":"        Platform.runLater(() -\u003e setAnnouncement(event.information));"},{"lineNumber":91,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":92,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"hzxcaryn":24,"-":16,"SunBangjie":52}},{"path":"src/main/java/seedu/ptman/commons/encrypter/DataEncrypter.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.commons.encrypter;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.security.Key;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.Base64;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import javax.crypto.Cipher;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import javax.crypto.spec.SecretKeySpec;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":10,"author":{"gitID":"SunBangjie"},"content":"/**"},{"lineNumber":11,"author":{"gitID":"SunBangjie"},"content":" * Provides tools to encrypts data"},{"lineNumber":12,"author":{"gitID":"SunBangjie"},"content":" */"},{"lineNumber":13,"author":{"gitID":"SunBangjie"},"content":"public class DataEncrypter {"},{"lineNumber":14,"author":{"gitID":"SunBangjie"},"content":"    private static final String ALGO \u003d \"AES\";"},{"lineNumber":15,"author":{"gitID":"SunBangjie"},"content":"    private static final byte[] keyValue \u003d"},{"lineNumber":16,"author":{"gitID":"SunBangjie"},"content":"            new byte[]{\u0027T\u0027, \u0027h\u0027, \u0027e\u0027, \u0027B\u0027, \u0027e\u0027, \u0027s\u0027, \u0027t\u0027, \u0027S\u0027, \u0027e\u0027, \u0027c\u0027, \u0027r\u0027, \u0027e\u0027, \u0027t\u0027, \u0027K\u0027, \u0027e\u0027, \u0027y\u0027};"},{"lineNumber":17,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":18,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":19,"author":{"gitID":"SunBangjie"},"content":"     * Encrypt a string with AES algorithm."},{"lineNumber":20,"author":{"gitID":"SunBangjie"},"content":"     *"},{"lineNumber":21,"author":{"gitID":"SunBangjie"},"content":"     * @param data is a string"},{"lineNumber":22,"author":{"gitID":"SunBangjie"},"content":"     * @return the encrypted string"},{"lineNumber":23,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":24,"author":{"gitID":"SunBangjie"},"content":"    public static String encrypt(String data) throws Exception {"},{"lineNumber":25,"author":{"gitID":"SunBangjie"},"content":"        if (data \u003d\u003d null) {"},{"lineNumber":26,"author":{"gitID":"SunBangjie"},"content":"            return null;"},{"lineNumber":27,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":28,"author":{"gitID":"SunBangjie"},"content":"        Key key \u003d generateKey();"},{"lineNumber":29,"author":{"gitID":"SunBangjie"},"content":"        Cipher c \u003d Cipher.getInstance(ALGO);"},{"lineNumber":30,"author":{"gitID":"SunBangjie"},"content":"        c.init(Cipher.ENCRYPT_MODE, key);"},{"lineNumber":31,"author":{"gitID":"SunBangjie"},"content":"        byte[] encVal \u003d c.doFinal(data.getBytes());"},{"lineNumber":32,"author":{"gitID":"SunBangjie"},"content":"        return Base64.getEncoder().encodeToString(encVal);"},{"lineNumber":33,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":35,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":36,"author":{"gitID":"SunBangjie"},"content":"     * Decrypt a string with AES algorithm."},{"lineNumber":37,"author":{"gitID":"SunBangjie"},"content":"     *"},{"lineNumber":38,"author":{"gitID":"SunBangjie"},"content":"     * @param encryptedData is a string"},{"lineNumber":39,"author":{"gitID":"SunBangjie"},"content":"     * @return the decrypted string"},{"lineNumber":40,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":41,"author":{"gitID":"SunBangjie"},"content":"    public static String decrypt(String encryptedData) throws Exception {"},{"lineNumber":42,"author":{"gitID":"SunBangjie"},"content":"        if (encryptedData \u003d\u003d null) {"},{"lineNumber":43,"author":{"gitID":"SunBangjie"},"content":"            return null;"},{"lineNumber":44,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":45,"author":{"gitID":"SunBangjie"},"content":"        Key key \u003d generateKey();"},{"lineNumber":46,"author":{"gitID":"SunBangjie"},"content":"        Cipher c \u003d Cipher.getInstance(ALGO);"},{"lineNumber":47,"author":{"gitID":"SunBangjie"},"content":"        c.init(Cipher.DECRYPT_MODE, key);"},{"lineNumber":48,"author":{"gitID":"SunBangjie"},"content":"        byte[] decordedValue \u003d Base64.getDecoder().decode(encryptedData);"},{"lineNumber":49,"author":{"gitID":"SunBangjie"},"content":"        byte[] decValue \u003d c.doFinal(decordedValue);"},{"lineNumber":50,"author":{"gitID":"SunBangjie"},"content":"        return new String(decValue);"},{"lineNumber":51,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":53,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":54,"author":{"gitID":"SunBangjie"},"content":"     * Generate a new encryption key."},{"lineNumber":55,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":56,"author":{"gitID":"SunBangjie"},"content":"    private static Key generateKey() throws Exception {"},{"lineNumber":57,"author":{"gitID":"SunBangjie"},"content":"        return new SecretKeySpec(keyValue, ALGO);"},{"lineNumber":58,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":59,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":8,"SunBangjie":51}},{"path":"src/main/java/seedu/ptman/commons/events/ui/NewResultAvailableEvent.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.commons.events.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.BaseEvent;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":6,"author":{"gitID":"-"},"content":" * Indicates that a new result is available."},{"lineNumber":7,"author":{"gitID":"-"},"content":" */"},{"lineNumber":8,"author":{"gitID":"-"},"content":"public class NewResultAvailableEvent extends BaseEvent {"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"    public final String message;"},{"lineNumber":11,"author":{"gitID":"hzxcaryn"},"content":"    public final boolean isError;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"hzxcaryn"},"content":"    public NewResultAvailableEvent(String message, boolean isError) {"},{"lineNumber":14,"author":{"gitID":"-"},"content":"        this.message \u003d message;"},{"lineNumber":15,"author":{"gitID":"hzxcaryn"},"content":"        this.isError \u003d isError;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":19,"author":{"gitID":"-"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitID":"-"},"content":"        return this.getClass().getSimpleName();"},{"lineNumber":21,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"hzxcaryn":3,"-":20}},{"path":"src/main/java/seedu/ptman/commons/events/ui/ExportTimetableAsImageAndEmailRequestEvent.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.commons.events.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.BaseEvent;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Email;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"hzxcaryn"},"content":"//@@author hzxcaryn"},{"lineNumber":7,"author":{"gitID":"hzxcaryn"},"content":"/**"},{"lineNumber":8,"author":{"gitID":"hzxcaryn"},"content":" * An event requesting to export the timetable view as an image and email it to the given email"},{"lineNumber":9,"author":{"gitID":"hzxcaryn"},"content":" */"},{"lineNumber":10,"author":{"gitID":"hzxcaryn"},"content":"public class ExportTimetableAsImageAndEmailRequestEvent extends BaseEvent {"},{"lineNumber":11,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":12,"author":{"gitID":"hzxcaryn"},"content":"    public final String filename;"},{"lineNumber":13,"author":{"gitID":"hzxcaryn"},"content":"    public final Email email;"},{"lineNumber":14,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":15,"author":{"gitID":"hzxcaryn"},"content":"    public ExportTimetableAsImageAndEmailRequestEvent(String filename, Email email) {"},{"lineNumber":16,"author":{"gitID":"hzxcaryn"},"content":"        this.filename \u003d filename;"},{"lineNumber":17,"author":{"gitID":"hzxcaryn"},"content":"        this.email \u003d email;"},{"lineNumber":18,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":20,"author":{"gitID":"hzxcaryn"},"content":"    @Override"},{"lineNumber":21,"author":{"gitID":"hzxcaryn"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitID":"hzxcaryn"},"content":"        return this.getClass().getSimpleName();"},{"lineNumber":23,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":24,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":25,"author":{"gitID":"hzxcaryn"},"content":"}"}],"authorContributionMap":{"hzxcaryn":20,"-":5}},{"path":"src/main/java/seedu/ptman/commons/events/ui/TimetableWeekChangeRequestEvent.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.commons.events.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.BaseEvent;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"hzxcaryn"},"content":"//@@author hzxcaryn"},{"lineNumber":6,"author":{"gitID":"hzxcaryn"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"hzxcaryn"},"content":" * Indicates a request to change the timetable view to the next or previous week."},{"lineNumber":8,"author":{"gitID":"hzxcaryn"},"content":" */"},{"lineNumber":9,"author":{"gitID":"hzxcaryn"},"content":"public class TimetableWeekChangeRequestEvent extends BaseEvent {"},{"lineNumber":10,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":11,"author":{"gitID":"hzxcaryn"},"content":"     * This represents the different week change requests that can be made to the timetable"},{"lineNumber":12,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":13,"author":{"gitID":"hzxcaryn"},"content":"    public enum WeekChangeRequest {"},{"lineNumber":14,"author":{"gitID":"hzxcaryn"},"content":"        NEXT,"},{"lineNumber":15,"author":{"gitID":"hzxcaryn"},"content":"        PREVIOUS,"},{"lineNumber":16,"author":{"gitID":"hzxcaryn"},"content":"        CURRENT"},{"lineNumber":17,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":18,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":19,"author":{"gitID":"hzxcaryn"},"content":"    private WeekChangeRequest request;"},{"lineNumber":20,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":21,"author":{"gitID":"hzxcaryn"},"content":"    public TimetableWeekChangeRequestEvent(WeekChangeRequest request) {"},{"lineNumber":22,"author":{"gitID":"hzxcaryn"},"content":"        this.request \u003d request;"},{"lineNumber":23,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":24,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":25,"author":{"gitID":"hzxcaryn"},"content":"    public WeekChangeRequest getRequest() {"},{"lineNumber":26,"author":{"gitID":"hzxcaryn"},"content":"        return request;"},{"lineNumber":27,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":28,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":29,"author":{"gitID":"hzxcaryn"},"content":"    @Override"},{"lineNumber":30,"author":{"gitID":"hzxcaryn"},"content":"    public String toString() {"},{"lineNumber":31,"author":{"gitID":"hzxcaryn"},"content":"        return this.getClass().getSimpleName();"},{"lineNumber":32,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":34,"author":{"gitID":"hzxcaryn"},"content":"}"}],"authorContributionMap":{"hzxcaryn":30,"-":4}},{"path":"src/main/java/seedu/ptman/commons/events/ui/OutletNameChangedEvent.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.commons.events.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.BaseEvent;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":6,"author":{"gitID":"SunBangjie"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"SunBangjie"},"content":" * Represents an information change in the Outlet Information"},{"lineNumber":8,"author":{"gitID":"SunBangjie"},"content":" */"},{"lineNumber":9,"author":{"gitID":"SunBangjie"},"content":"public class OutletNameChangedEvent extends BaseEvent {"},{"lineNumber":10,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":11,"author":{"gitID":"SunBangjie"},"content":"    public final String message;"},{"lineNumber":12,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":13,"author":{"gitID":"SunBangjie"},"content":"    public OutletNameChangedEvent(String message) {"},{"lineNumber":14,"author":{"gitID":"SunBangjie"},"content":"        this.message \u003d message;"},{"lineNumber":15,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":16,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":17,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":18,"author":{"gitID":"SunBangjie"},"content":"    public String toString() {"},{"lineNumber":19,"author":{"gitID":"SunBangjie"},"content":"        return this.getClass().getSimpleName();"},{"lineNumber":20,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":22,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":4,"SunBangjie":18}},{"path":"src/main/java/seedu/ptman/commons/events/ui/AnnouncementChangedEvent.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.commons.events.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.BaseEvent;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":6,"author":{"gitID":"SunBangjie"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"SunBangjie"},"content":" * Represents an announcement change in the Outlet Information"},{"lineNumber":8,"author":{"gitID":"SunBangjie"},"content":" */"},{"lineNumber":9,"author":{"gitID":"SunBangjie"},"content":"public class AnnouncementChangedEvent extends BaseEvent {"},{"lineNumber":10,"author":{"gitID":"SunBangjie"},"content":"    public final String information;"},{"lineNumber":11,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":12,"author":{"gitID":"SunBangjie"},"content":"    public AnnouncementChangedEvent(String information) {"},{"lineNumber":13,"author":{"gitID":"SunBangjie"},"content":"        this.information \u003d information;"},{"lineNumber":14,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":15,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":16,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":17,"author":{"gitID":"SunBangjie"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitID":"SunBangjie"},"content":"        return this.getClass().getSimpleName();"},{"lineNumber":19,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":20,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":4,"SunBangjie":16}},{"path":"src/main/java/seedu/ptman/commons/events/ui/ExportTimetableAsImageRequestEvent.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.commons.events.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.BaseEvent;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"hzxcaryn"},"content":"//@@author hzxcaryn"},{"lineNumber":6,"author":{"gitID":"hzxcaryn"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"hzxcaryn"},"content":" * An event requesting to export the timetable view as an image locally"},{"lineNumber":8,"author":{"gitID":"hzxcaryn"},"content":" */"},{"lineNumber":9,"author":{"gitID":"hzxcaryn"},"content":"public class ExportTimetableAsImageRequestEvent extends BaseEvent {"},{"lineNumber":10,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":11,"author":{"gitID":"hzxcaryn"},"content":"    public final String filename;"},{"lineNumber":12,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":13,"author":{"gitID":"hzxcaryn"},"content":"    public ExportTimetableAsImageRequestEvent(String filename) {"},{"lineNumber":14,"author":{"gitID":"hzxcaryn"},"content":"        this.filename \u003d filename;"},{"lineNumber":15,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":16,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":17,"author":{"gitID":"hzxcaryn"},"content":"    @Override"},{"lineNumber":18,"author":{"gitID":"hzxcaryn"},"content":"    public String toString() {"},{"lineNumber":19,"author":{"gitID":"hzxcaryn"},"content":"        return this.getClass().getSimpleName();"},{"lineNumber":20,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"hzxcaryn"},"content":"}"}],"authorContributionMap":{"hzxcaryn":17,"-":4}},{"path":"src/main/java/seedu/ptman/commons/events/ui/JumpToListRequestEvent.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.commons.events.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.index.Index;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.BaseEvent;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"-"},"content":" * Indicates a request to jump to the list of employees"},{"lineNumber":8,"author":{"gitID":"-"},"content":" */"},{"lineNumber":9,"author":{"gitID":"-"},"content":"public class JumpToListRequestEvent extends BaseEvent {"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"    public final int targetIndex;"},{"lineNumber":12,"author":{"gitID":"hzxcaryn"},"content":"    public final boolean isNewSelection;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"hzxcaryn"},"content":"    public JumpToListRequestEvent(Index targetIndex, boolean isNewSelection) {"},{"lineNumber":15,"author":{"gitID":"-"},"content":"        this.targetIndex \u003d targetIndex.getZeroBased();"},{"lineNumber":16,"author":{"gitID":"hzxcaryn"},"content":"        this.isNewSelection \u003d isNewSelection;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":20,"author":{"gitID":"-"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitID":"-"},"content":"        return this.getClass().getSimpleName();"},{"lineNumber":22,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"hzxcaryn":3,"-":21}},{"path":"src/main/java/seedu/ptman/commons/events/ui/OutletInformationChangedEvent.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.commons.events.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.BaseEvent;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":6,"author":{"gitID":"SunBangjie"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"SunBangjie"},"content":" * Represents an information change in the Outlet Information"},{"lineNumber":8,"author":{"gitID":"SunBangjie"},"content":" */"},{"lineNumber":9,"author":{"gitID":"SunBangjie"},"content":"public class OutletInformationChangedEvent extends BaseEvent {"},{"lineNumber":10,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":11,"author":{"gitID":"SunBangjie"},"content":"    public final String operatingHours;"},{"lineNumber":12,"author":{"gitID":"SunBangjie"},"content":"    public final String outletContact;"},{"lineNumber":13,"author":{"gitID":"SunBangjie"},"content":"    public final String outletEmail;"},{"lineNumber":14,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":15,"author":{"gitID":"SunBangjie"},"content":"    public OutletInformationChangedEvent(String operatingHours, String outletContact, String outletEmail) {"},{"lineNumber":16,"author":{"gitID":"SunBangjie"},"content":"        this.operatingHours \u003d operatingHours;"},{"lineNumber":17,"author":{"gitID":"SunBangjie"},"content":"        this.outletContact \u003d outletContact;"},{"lineNumber":18,"author":{"gitID":"SunBangjie"},"content":"        this.outletEmail \u003d outletEmail;"},{"lineNumber":19,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":20,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":21,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":22,"author":{"gitID":"SunBangjie"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitID":"SunBangjie"},"content":"        return this.getClass().getSimpleName();"},{"lineNumber":24,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":25,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":26,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":4,"SunBangjie":22}},{"path":"src/main/java/seedu/ptman/commons/util/DateUtil.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.commons.util;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.time.Month;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.time.temporal.TemporalField;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.time.temporal.WeekFields;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.util.Locale;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"shanwpf"},"content":"//@@author shanwpf"},{"lineNumber":12,"author":{"gitID":"shanwpf"},"content":"/**"},{"lineNumber":13,"author":{"gitID":"shanwpf"},"content":" * Utility methods for handling dates"},{"lineNumber":14,"author":{"gitID":"shanwpf"},"content":" */"},{"lineNumber":15,"author":{"gitID":"shanwpf"},"content":"public class DateUtil {"},{"lineNumber":16,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":17,"author":{"gitID":"shanwpf"},"content":"    private static final int NUM_DAYS_IN_WEEK \u003d 7;"},{"lineNumber":18,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":19,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":20,"author":{"gitID":"shanwpf"},"content":"     * Returns the week number for {@code date} from the start of the year"},{"lineNumber":21,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":22,"author":{"gitID":"shanwpf"},"content":"    public static int getWeekFromDate(LocalDate date) {"},{"lineNumber":23,"author":{"gitID":"shanwpf"},"content":"        requireNonNull(date);"},{"lineNumber":24,"author":{"gitID":"shanwpf"},"content":"        TemporalField woy \u003d WeekFields.of(Locale.FRANCE).weekOfWeekBasedYear();"},{"lineNumber":25,"author":{"gitID":"shanwpf"},"content":"        return date.get(woy);"},{"lineNumber":26,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":28,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":29,"author":{"gitID":"shanwpf"},"content":"     * Given a {@code date}, returns the date of the week\u0027s Monday"},{"lineNumber":30,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":31,"author":{"gitID":"shanwpf"},"content":"    public static LocalDate getMondayOfDate(LocalDate date) {"},{"lineNumber":32,"author":{"gitID":"shanwpf"},"content":"        requireNonNull(date);"},{"lineNumber":33,"author":{"gitID":"shanwpf"},"content":"        int week \u003d getWeekFromDate(date);"},{"lineNumber":34,"author":{"gitID":"shanwpf"},"content":"        // We use Locale.FRANCE because it sets the first day of the week"},{"lineNumber":35,"author":{"gitID":"shanwpf"},"content":"        // to be Monday."},{"lineNumber":36,"author":{"gitID":"shanwpf"},"content":"        WeekFields weekFields \u003d WeekFields.of(Locale.FRANCE);"},{"lineNumber":37,"author":{"gitID":"shanwpf"},"content":"        return LocalDate.now()"},{"lineNumber":38,"author":{"gitID":"shanwpf"},"content":"                .withYear(date.getYear())"},{"lineNumber":39,"author":{"gitID":"shanwpf"},"content":"                .with(weekFields.weekOfYear(), week)"},{"lineNumber":40,"author":{"gitID":"shanwpf"},"content":"                .with(weekFields.dayOfWeek(), 1);"},{"lineNumber":41,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":42,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":43,"author":{"gitID":"hzxcaryn"},"content":"    //@@author hzxcaryn"},{"lineNumber":44,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":45,"author":{"gitID":"hzxcaryn"},"content":"     * Given a {@code date}, returns the date of the week\u0027s Thursday"},{"lineNumber":46,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":47,"author":{"gitID":"hzxcaryn"},"content":"    public static LocalDate getThursdayOfDate(LocalDate date) {"},{"lineNumber":48,"author":{"gitID":"hzxcaryn"},"content":"        requireNonNull(date);"},{"lineNumber":49,"author":{"gitID":"hzxcaryn"},"content":"        int week \u003d getWeekFromDate(date);"},{"lineNumber":50,"author":{"gitID":"hzxcaryn"},"content":"        WeekFields weekFields \u003d WeekFields.of(Locale.FRANCE);"},{"lineNumber":51,"author":{"gitID":"hzxcaryn"},"content":"        return LocalDate.now()"},{"lineNumber":52,"author":{"gitID":"hzxcaryn"},"content":"                .withYear(date.getYear())"},{"lineNumber":53,"author":{"gitID":"hzxcaryn"},"content":"                .with(weekFields.weekOfYear(), week)"},{"lineNumber":54,"author":{"gitID":"hzxcaryn"},"content":"                .with(weekFields.dayOfWeek(), 4);"},{"lineNumber":55,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":57,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":58,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":59,"author":{"gitID":"hzxcaryn"},"content":"     * Given {@code currDate}, returns the date one week later"},{"lineNumber":60,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":61,"author":{"gitID":"hzxcaryn"},"content":"    public static LocalDate getNextWeekDate(LocalDate currDate) {"},{"lineNumber":62,"author":{"gitID":"hzxcaryn"},"content":"        requireNonNull(currDate);"},{"lineNumber":63,"author":{"gitID":"hzxcaryn"},"content":"        LocalDate nextWeekDate \u003d currDate.plusDays(NUM_DAYS_IN_WEEK);"},{"lineNumber":64,"author":{"gitID":"hzxcaryn"},"content":"        return nextWeekDate;"},{"lineNumber":65,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":66,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":67,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":68,"author":{"gitID":"hzxcaryn"},"content":"     * Given {@code currDate}, returns the date one week before"},{"lineNumber":69,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":70,"author":{"gitID":"hzxcaryn"},"content":"    public static LocalDate getPrevWeekDate(LocalDate currDate) {"},{"lineNumber":71,"author":{"gitID":"hzxcaryn"},"content":"        requireNonNull(currDate);"},{"lineNumber":72,"author":{"gitID":"hzxcaryn"},"content":"        LocalDate prevWeekDate \u003d currDate.minusDays(NUM_DAYS_IN_WEEK);"},{"lineNumber":73,"author":{"gitID":"hzxcaryn"},"content":"        return prevWeekDate;"},{"lineNumber":74,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":75,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":76,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":77,"author":{"gitID":"hzxcaryn"},"content":"     * Given {@code date}, returns the month and year as a string"},{"lineNumber":78,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":79,"author":{"gitID":"hzxcaryn"},"content":"    public static String getMonthYearFromDate(LocalDate date) {"},{"lineNumber":80,"author":{"gitID":"hzxcaryn"},"content":"        requireNonNull(date);"},{"lineNumber":81,"author":{"gitID":"hzxcaryn"},"content":"        Month month \u003d date.getMonth();"},{"lineNumber":82,"author":{"gitID":"hzxcaryn"},"content":"        int year \u003d date.getYear();"},{"lineNumber":83,"author":{"gitID":"hzxcaryn"},"content":"        return month.name() + \" \" + year;"},{"lineNumber":84,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":85,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":86,"author":{"gitID":"hzxcaryn"},"content":"}"}],"authorContributionMap":{"shanwpf":32,"hzxcaryn":44,"-":10}},{"path":"src/test/java/guitests/guihandles/TimetablePanelHandle.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package guitests.guihandles;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.ui.TimetablePanel.getTimetableAvail;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.ui.TimetablePanel.getTimetableEmployee;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.ui.TimetablePanel.getTimetableFull;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.ui.TimetablePanel.getTimetableOthers;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.ui.TimetablePanel.getTimetableRunningOut;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.time.LocalDate;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import java.util.Collection;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import java.util.Comparator;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import java.util.Map;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import java.util.stream.Stream;"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":"import com.calendarfx.model.Calendar;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import com.calendarfx.model.Entry;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import com.calendarfx.view.CalendarView;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import com.calendarfx.view.page.PageBase;"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"import javafx.scene.Node;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import javafx.scene.control.Button;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"import javafx.scene.control.Label;"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"hzxcaryn"},"content":"//@@author hzxcaryn"},{"lineNumber":30,"author":{"gitID":"hzxcaryn"},"content":"/**"},{"lineNumber":31,"author":{"gitID":"hzxcaryn"},"content":" * A handler for the {@code TimetableView} of the UI"},{"lineNumber":32,"author":{"gitID":"hzxcaryn"},"content":" */"},{"lineNumber":33,"author":{"gitID":"hzxcaryn"},"content":"public class TimetablePanelHandle extends NodeHandle\u003cNode\u003e {"},{"lineNumber":34,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":35,"author":{"gitID":"hzxcaryn"},"content":"    public static final String TIMETABLE_PANEL_PLACEHOLDER_ID \u003d \"#timetablePanelPlaceholder\";"},{"lineNumber":36,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":37,"author":{"gitID":"hzxcaryn"},"content":"    private static final String TIMETABLE_VIEW_ID \u003d \"#timetableView\";"},{"lineNumber":38,"author":{"gitID":"hzxcaryn"},"content":"    private static final String PREV_BUTTON_ID \u003d \"#prevButton\";"},{"lineNumber":39,"author":{"gitID":"hzxcaryn"},"content":"    private static final String NEXT_BUTTON_ID \u003d \"#nextButton\";"},{"lineNumber":40,"author":{"gitID":"hzxcaryn"},"content":"    private static final String MONTH_DISPLAY_ID \u003d \"#monthDisplay\";"},{"lineNumber":41,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":42,"author":{"gitID":"hzxcaryn"},"content":"    private final CalendarView timetableViewNode;"},{"lineNumber":43,"author":{"gitID":"hzxcaryn"},"content":"    private final Button prevButtonNode;"},{"lineNumber":44,"author":{"gitID":"hzxcaryn"},"content":"    private final Button nextButtonNode;"},{"lineNumber":45,"author":{"gitID":"hzxcaryn"},"content":"    private final Label monthDisplayNode;"},{"lineNumber":46,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":47,"author":{"gitID":"hzxcaryn"},"content":"    public TimetablePanelHandle(Node rootNode) {"},{"lineNumber":48,"author":{"gitID":"hzxcaryn"},"content":"        super(rootNode);"},{"lineNumber":49,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":50,"author":{"gitID":"hzxcaryn"},"content":"        this.timetableViewNode \u003d getChildNode(TIMETABLE_VIEW_ID);"},{"lineNumber":51,"author":{"gitID":"hzxcaryn"},"content":"        this.prevButtonNode \u003d getChildNode(PREV_BUTTON_ID);"},{"lineNumber":52,"author":{"gitID":"hzxcaryn"},"content":"        this.nextButtonNode \u003d getChildNode(NEXT_BUTTON_ID);"},{"lineNumber":53,"author":{"gitID":"hzxcaryn"},"content":"        this.monthDisplayNode \u003d getChildNode(MONTH_DISPLAY_ID);"},{"lineNumber":54,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":55,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":56,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":57,"author":{"gitID":"hzxcaryn"},"content":"     * @return current date timetable is using to display the week"},{"lineNumber":58,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":59,"author":{"gitID":"hzxcaryn"},"content":"    public LocalDate getTimetableDate() {"},{"lineNumber":60,"author":{"gitID":"hzxcaryn"},"content":"        return timetableViewNode.getDate();"},{"lineNumber":61,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":62,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":63,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":64,"author":{"gitID":"hzxcaryn"},"content":"     * @return selected page type that timetable is displaying"},{"lineNumber":65,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":66,"author":{"gitID":"hzxcaryn"},"content":"    public PageBase getSelectedPage() {"},{"lineNumber":67,"author":{"gitID":"hzxcaryn"},"content":"        return timetableViewNode.getSelectedPage();"},{"lineNumber":68,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":69,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":70,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":71,"author":{"gitID":"hzxcaryn"},"content":"     * @return a week page type"},{"lineNumber":72,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":73,"author":{"gitID":"hzxcaryn"},"content":"    public PageBase getWeekPage() {"},{"lineNumber":74,"author":{"gitID":"hzxcaryn"},"content":"        return timetableViewNode.getWeekPage();"},{"lineNumber":75,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":76,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":77,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":78,"author":{"gitID":"hzxcaryn"},"content":"     * @return month and year displayed in {@code monthDisplayNode}"},{"lineNumber":79,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":80,"author":{"gitID":"hzxcaryn"},"content":"    public String getDisplayedMonthYear() {"},{"lineNumber":81,"author":{"gitID":"hzxcaryn"},"content":"        return monthDisplayNode.getText();"},{"lineNumber":82,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":83,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":84,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":85,"author":{"gitID":"hzxcaryn"},"content":"     * Navigate to the prev timetable week by clicking the next button"},{"lineNumber":86,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":87,"author":{"gitID":"hzxcaryn"},"content":"    public void navigateToPrevUsingButton() {"},{"lineNumber":88,"author":{"gitID":"hzxcaryn"},"content":"        guiRobot.clickOn(prevButtonNode);"},{"lineNumber":89,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":90,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":91,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":92,"author":{"gitID":"hzxcaryn"},"content":"     * Navigate to the next timetable week by clicking the next button"},{"lineNumber":93,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":94,"author":{"gitID":"hzxcaryn"},"content":"    public void navigateToNextUsingButton() {"},{"lineNumber":95,"author":{"gitID":"hzxcaryn"},"content":"        guiRobot.clickOn(nextButtonNode);"},{"lineNumber":96,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":97,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":98,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":99,"author":{"gitID":"hzxcaryn"},"content":"     * Check for all the entries from the default entry types in the timetable view"},{"lineNumber":100,"author":{"gitID":"hzxcaryn"},"content":"     * and returns a list of all the entries in sorted order"},{"lineNumber":101,"author":{"gitID":"hzxcaryn"},"content":"     * @return sorted list of all entries in timetable view"},{"lineNumber":102,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":103,"author":{"gitID":"hzxcaryn"},"content":"    public List\u003cEntry\u003e getTimetableEntriesFromDefaultMode() {"},{"lineNumber":104,"author":{"gitID":"hzxcaryn"},"content":"        List\u003cEntry\u003c?\u003e\u003e availEntries \u003d getEntriesForEntryType(getTimetableAvail());"},{"lineNumber":105,"author":{"gitID":"hzxcaryn"},"content":"        List\u003cEntry\u003c?\u003e\u003e runningOutEntries \u003d getEntriesForEntryType(getTimetableRunningOut());"},{"lineNumber":106,"author":{"gitID":"hzxcaryn"},"content":"        List\u003cEntry\u003c?\u003e\u003e fullEntries \u003d getEntriesForEntryType(getTimetableFull());"},{"lineNumber":107,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":108,"author":{"gitID":"hzxcaryn"},"content":"        ArrayList\u003cEntry\u003e entries \u003d new ArrayList\u003c\u003e(Stream.of("},{"lineNumber":109,"author":{"gitID":"hzxcaryn"},"content":"                availEntries, runningOutEntries, fullEntries)"},{"lineNumber":110,"author":{"gitID":"hzxcaryn"},"content":"                .flatMap(Collection::stream)"},{"lineNumber":111,"author":{"gitID":"hzxcaryn"},"content":"                .collect(Collectors.toList()));"},{"lineNumber":112,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":113,"author":{"gitID":"hzxcaryn"},"content":"        Collections.sort(entries, Comparator.comparing(Entry::getStartAsLocalDateTime));"},{"lineNumber":114,"author":{"gitID":"hzxcaryn"},"content":"        return entries;"},{"lineNumber":115,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":116,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":117,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":118,"author":{"gitID":"hzxcaryn"},"content":"     * Check for all the entries from selected employee entry types in the timetable view"},{"lineNumber":119,"author":{"gitID":"hzxcaryn"},"content":"     * and returns a list of all the entries in sorted order"},{"lineNumber":120,"author":{"gitID":"hzxcaryn"},"content":"     * @return sorted list of all entries in timetable view"},{"lineNumber":121,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":122,"author":{"gitID":"hzxcaryn"},"content":"    public List\u003cEntry\u003e getTimetableEntriesFromSelectedEmployeeMode() {"},{"lineNumber":123,"author":{"gitID":"hzxcaryn"},"content":"        List\u003cEntry\u003c?\u003e\u003e employeeEntries \u003d getEntriesForEntryType(getTimetableEmployee());"},{"lineNumber":124,"author":{"gitID":"hzxcaryn"},"content":"        List\u003cEntry\u003c?\u003e\u003e othersEntries \u003d getEntriesForEntryType(getTimetableOthers());"},{"lineNumber":125,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":126,"author":{"gitID":"hzxcaryn"},"content":"        ArrayList\u003cEntry\u003e entries \u003d new ArrayList\u003c\u003e(Stream.of(employeeEntries, othersEntries)"},{"lineNumber":127,"author":{"gitID":"hzxcaryn"},"content":"                .flatMap(Collection::stream)"},{"lineNumber":128,"author":{"gitID":"hzxcaryn"},"content":"                .collect(Collectors.toList()));"},{"lineNumber":129,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":130,"author":{"gitID":"hzxcaryn"},"content":"        Collections.sort(entries, Comparator.comparing(Entry::getStartAsLocalDateTime));"},{"lineNumber":131,"author":{"gitID":"hzxcaryn"},"content":"        return entries;"},{"lineNumber":132,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":133,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":134,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":135,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":136,"author":{"gitID":"hzxcaryn"},"content":"     * For the given {@code entryType}, check for all entries in the timetable view"},{"lineNumber":137,"author":{"gitID":"hzxcaryn"},"content":"     * of that entry type and return them in a list"},{"lineNumber":138,"author":{"gitID":"hzxcaryn"},"content":"     * @param entryType"},{"lineNumber":139,"author":{"gitID":"hzxcaryn"},"content":"     * @return list of all entries of the {@code entryType}"},{"lineNumber":140,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":141,"author":{"gitID":"hzxcaryn"},"content":"    public List\u003cEntry\u003c?\u003e\u003e getEntriesForEntryType(Calendar entryType) {"},{"lineNumber":142,"author":{"gitID":"hzxcaryn"},"content":"        Map\u003cLocalDate, List\u003cEntry\u003c?\u003e\u003e\u003e entryMap \u003d entryType.findEntries("},{"lineNumber":143,"author":{"gitID":"hzxcaryn"},"content":"                LocalDate.of(2018, 3, 19).minusDays(7),"},{"lineNumber":144,"author":{"gitID":"hzxcaryn"},"content":"                LocalDate.of(2018, 3, 19).plusDays(7), ZoneId.systemDefault());"},{"lineNumber":145,"author":{"gitID":"hzxcaryn"},"content":"        List\u003cEntry\u003c?\u003e\u003e entryList \u003d entryMap.values().stream()"},{"lineNumber":146,"author":{"gitID":"hzxcaryn"},"content":"                .flatMap(Collection::stream)"},{"lineNumber":147,"author":{"gitID":"hzxcaryn"},"content":"                .collect(Collectors.toList());"},{"lineNumber":148,"author":{"gitID":"hzxcaryn"},"content":"        return entryList;"},{"lineNumber":149,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":150,"author":{"gitID":"hzxcaryn"},"content":"}"}],"authorContributionMap":{"hzxcaryn":122,"-":28}},{"path":"src/main/java/seedu/ptman/logic/Logic.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.CommandResult;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.exceptions.CommandException;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.parser.exceptions.ParseException;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Employee;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Shift;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":14,"author":{"gitID":"-"},"content":" * API of the Logic component"},{"lineNumber":15,"author":{"gitID":"-"},"content":" */"},{"lineNumber":16,"author":{"gitID":"-"},"content":"public interface Logic {"},{"lineNumber":17,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":18,"author":{"gitID":"-"},"content":"     * Executes the command and returns the result."},{"lineNumber":19,"author":{"gitID":"-"},"content":"     * @param commandText The command as entered by the user."},{"lineNumber":20,"author":{"gitID":"-"},"content":"     * @return the result of the command execution."},{"lineNumber":21,"author":{"gitID":"-"},"content":"     * @throws CommandException If an error occurs during command execution."},{"lineNumber":22,"author":{"gitID":"-"},"content":"     * @throws ParseException If an error occurs during parsing."},{"lineNumber":23,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of employees */"},{"lineNumber":27,"author":{"gitID":"-"},"content":"    ObservableList\u003cEmployee\u003e getFilteredEmployeeList();"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    /** Returns an unmodifiable sorted view of the filtered shifts */"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    ObservableList\u003cShift\u003e getFilteredShiftList();"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"    /** Returns the list of input entered by the user, encapsulated in a {@code ListElementPointer} object */"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    ListElementPointer getHistorySnapshot();"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"    OutletInformation getOutletInformation();"},{"lineNumber":36,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"    /** Returns the current date used to update the filtered shift list */"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    LocalDate getCurrentDisplayedDate();"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"    /** Sets filteredShiftList to display the next week */"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    void setFilteredShiftListToNextWeek();"},{"lineNumber":42,"author":{"gitID":"-"},"content":""},{"lineNumber":43,"author":{"gitID":"-"},"content":"    /** Sets filteredShiftList to display the previous week */"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    void setFilteredShiftListToPrevWeek();"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"    /** Sets filteredShiftList to display the current week */"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    void setFilteredShiftListToCurrentWeek();"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"-"},"content":"    /** Sets filteredShiftList to display the wee of the given date */"},{"lineNumber":50,"author":{"gitID":"-"},"content":"    void setFilteredShiftListToCustomWeek(LocalDate date);"},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"hzxcaryn"},"content":"    /** Returns if the user is currently in admin mode */"},{"lineNumber":53,"author":{"gitID":"hzxcaryn"},"content":"    boolean isAdminMode();"},{"lineNumber":54,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"hzxcaryn":3,"-":51}},{"path":"src/main/java/seedu/ptman/commons/events/model/UserModeChangedEvent.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.commons.events.model;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.BaseEvent;"},{"lineNumber":4,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":5,"author":{"gitID":"hzxcaryn"},"content":"//@@author hzxcaryn"},{"lineNumber":6,"author":{"gitID":"hzxcaryn"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"hzxcaryn"},"content":" * Indicates that the user mode has changed. (Admin mode or not)"},{"lineNumber":8,"author":{"gitID":"hzxcaryn"},"content":" */"},{"lineNumber":9,"author":{"gitID":"hzxcaryn"},"content":"public class UserModeChangedEvent extends BaseEvent {"},{"lineNumber":10,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":11,"author":{"gitID":"hzxcaryn"},"content":"    public final boolean isAdminMode;"},{"lineNumber":12,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":13,"author":{"gitID":"hzxcaryn"},"content":"    public UserModeChangedEvent(boolean isAdminMode) {"},{"lineNumber":14,"author":{"gitID":"hzxcaryn"},"content":"        this.isAdminMode \u003d isAdminMode;"},{"lineNumber":15,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":16,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":17,"author":{"gitID":"hzxcaryn"},"content":"    @Override"},{"lineNumber":18,"author":{"gitID":"hzxcaryn"},"content":"    public String toString() {"},{"lineNumber":19,"author":{"gitID":"hzxcaryn"},"content":"        return this.getClass().getSimpleName();"},{"lineNumber":20,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":22,"author":{"gitID":"hzxcaryn"},"content":"}"}],"authorContributionMap":{"hzxcaryn":19,"-":3}},{"path":"src/main/java/seedu/ptman/commons/events/model/OutletDataChangedEvent.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.commons.events.model;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.BaseEvent;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":7,"author":{"gitID":"SunBangjie"},"content":"/** Indicates the OutletInformation in the model has changed*/"},{"lineNumber":8,"author":{"gitID":"SunBangjie"},"content":"public class OutletDataChangedEvent extends BaseEvent {"},{"lineNumber":9,"author":{"gitID":"SunBangjie"},"content":"    public final OutletInformation data;"},{"lineNumber":10,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":11,"author":{"gitID":"SunBangjie"},"content":"    public OutletDataChangedEvent(OutletInformation data) {"},{"lineNumber":12,"author":{"gitID":"SunBangjie"},"content":"        this.data \u003d data;"},{"lineNumber":13,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":14,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":15,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":16,"author":{"gitID":"SunBangjie"},"content":"    public String toString() {"},{"lineNumber":17,"author":{"gitID":"SunBangjie"},"content":"        return OutletDataChangedEvent.class.getSimpleName();"},{"lineNumber":18,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":5,"SunBangjie":14}},{"path":"src/main/java/seedu/ptman/commons/services/EmailService.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.commons.services;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.Properties;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import javax.activation.DataHandler;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import javax.activation.DataSource;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import javax.activation.FileDataSource;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import javax.mail.BodyPart;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import javax.mail.Message;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import javax.mail.MessagingException;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import javax.mail.Multipart;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import javax.mail.PasswordAuthentication;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import javax.mail.Session;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import javax.mail.Transport;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import javax.mail.internet.InternetAddress;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import javax.mail.internet.MimeBodyPart;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import javax.mail.internet.MimeMessage;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import javax.mail.internet.MimeMultipart;"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"koo1993"},"content":"//@@author koo1993"},{"lineNumber":22,"author":{"gitID":"koo1993"},"content":"/**"},{"lineNumber":23,"author":{"gitID":"koo1993"},"content":" * A email services that sends email to user"},{"lineNumber":24,"author":{"gitID":"koo1993"},"content":" */"},{"lineNumber":25,"author":{"gitID":"koo1993"},"content":"public class EmailService {"},{"lineNumber":26,"author":{"gitID":"koo1993"},"content":"    private static EmailService singleInstance \u003d new EmailService();"},{"lineNumber":27,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":28,"author":{"gitID":"koo1993"},"content":"    private final String senderEmail \u003d \"ptmanager.noreply@gmail.com\";"},{"lineNumber":29,"author":{"gitID":"koo1993"},"content":"    private final String password \u003d \"DEFAULT!1\";"},{"lineNumber":30,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":31,"author":{"gitID":"koo1993"},"content":"    private final String timetableMessageBody \u003d \"Dear Valued PTMan User,\\n\\nAttached is your exported timetable.\\n\""},{"lineNumber":32,"author":{"gitID":"koo1993"},"content":"            + \"Thank you for using PTMan and have a nice day!\\n\\nBest Regards,\\nThe PTMan Team\";"},{"lineNumber":33,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":34,"author":{"gitID":"koo1993"},"content":"    private Session session;"},{"lineNumber":35,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":36,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":37,"author":{"gitID":"koo1993"},"content":"    private EmailService() {"},{"lineNumber":38,"author":{"gitID":"koo1993"},"content":"        Properties props \u003d new Properties();"},{"lineNumber":39,"author":{"gitID":"koo1993"},"content":"        props.put(\"mail.smtp.auth\", \"true\");"},{"lineNumber":40,"author":{"gitID":"koo1993"},"content":"        props.put(\"mail.smtp.starttls.enable\", \"true\");"},{"lineNumber":41,"author":{"gitID":"koo1993"},"content":"        props.put(\"mail.smtp.host\", \"smtp.gmail.com\");"},{"lineNumber":42,"author":{"gitID":"koo1993"},"content":"        props.put(\"mail.smtp.port\", \"587\");"},{"lineNumber":43,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":44,"author":{"gitID":"koo1993"},"content":"        session \u003d Session.getInstance(props,"},{"lineNumber":45,"author":{"gitID":"koo1993"},"content":"                new javax.mail.Authenticator() {"},{"lineNumber":46,"author":{"gitID":"koo1993"},"content":"                    protected PasswordAuthentication getPasswordAuthentication() {"},{"lineNumber":47,"author":{"gitID":"koo1993"},"content":"                        return new PasswordAuthentication(senderEmail, password);"},{"lineNumber":48,"author":{"gitID":"koo1993"},"content":"                    }"},{"lineNumber":49,"author":{"gitID":"koo1993"},"content":"                });"},{"lineNumber":50,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":51,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":52,"author":{"gitID":"koo1993"},"content":"    public static synchronized EmailService getInstance() {"},{"lineNumber":53,"author":{"gitID":"koo1993"},"content":"        return singleInstance;"},{"lineNumber":54,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":55,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":56,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":57,"author":{"gitID":"koo1993"},"content":"     * Send a standard reset password message over to user"},{"lineNumber":58,"author":{"gitID":"koo1993"},"content":"     * @param name"},{"lineNumber":59,"author":{"gitID":"koo1993"},"content":"     * @param email"},{"lineNumber":60,"author":{"gitID":"koo1993"},"content":"     * @param newPassword"},{"lineNumber":61,"author":{"gitID":"koo1993"},"content":"     * @throws MessagingException"},{"lineNumber":62,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":63,"author":{"gitID":"koo1993"},"content":"    public void sendResetPasswordMessage(String name, String email, String newPassword) throws MessagingException {"},{"lineNumber":64,"author":{"gitID":"koo1993"},"content":"        Message message \u003d new MimeMessage(session);"},{"lineNumber":65,"author":{"gitID":"koo1993"},"content":"        message.setFrom(new InternetAddress(senderEmail));"},{"lineNumber":66,"author":{"gitID":"koo1993"},"content":"        message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(email));"},{"lineNumber":67,"author":{"gitID":"koo1993"},"content":"        message.setSubject(\"[PTMan] Password Reset\");"},{"lineNumber":68,"author":{"gitID":"koo1993"},"content":"        message.setText(\"Hi \" + name + \", \\n\\n\" + \"Your password has been reset: \" + newPassword + \"\\n\\n\""},{"lineNumber":69,"author":{"gitID":"koo1993"},"content":"                + \"Please reset your password immediately in PTMan.\\n\\nBest Regards,\\nThe PTMan Team\");"},{"lineNumber":70,"author":{"gitID":"koo1993"},"content":"        Transport.send(message);"},{"lineNumber":71,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":72,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":73,"author":{"gitID":"hzxcaryn"},"content":"    //@@author hzxcaryn"},{"lineNumber":74,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":75,"author":{"gitID":"hzxcaryn"},"content":"     * Send exported timetable image as an attachment to user"},{"lineNumber":76,"author":{"gitID":"hzxcaryn"},"content":"     * @param email"},{"lineNumber":77,"author":{"gitID":"hzxcaryn"},"content":"     * @param filename"},{"lineNumber":78,"author":{"gitID":"hzxcaryn"},"content":"     * @throws MessagingException"},{"lineNumber":79,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":80,"author":{"gitID":"hzxcaryn"},"content":"    public void sendTimetableAttachment(String email, String filename) throws MessagingException {"},{"lineNumber":81,"author":{"gitID":"hzxcaryn"},"content":"        Message message \u003d new MimeMessage(session);"},{"lineNumber":82,"author":{"gitID":"hzxcaryn"},"content":"        message.setFrom(new InternetAddress(senderEmail));"},{"lineNumber":83,"author":{"gitID":"hzxcaryn"},"content":"        message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(email));"},{"lineNumber":84,"author":{"gitID":"hzxcaryn"},"content":"        message.setSubject(\"[PTMan] My Timetable\");"},{"lineNumber":85,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":86,"author":{"gitID":"hzxcaryn"},"content":"        BodyPart messageBodyPart \u003d new MimeBodyPart();"},{"lineNumber":87,"author":{"gitID":"hzxcaryn"},"content":"        messageBodyPart.setText(timetableMessageBody);"},{"lineNumber":88,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":89,"author":{"gitID":"hzxcaryn"},"content":"        Multipart multipart \u003d new MimeMultipart();"},{"lineNumber":90,"author":{"gitID":"hzxcaryn"},"content":"        multipart.addBodyPart(messageBodyPart);"},{"lineNumber":91,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":92,"author":{"gitID":"hzxcaryn"},"content":"        messageBodyPart \u003d new MimeBodyPart();"},{"lineNumber":93,"author":{"gitID":"hzxcaryn"},"content":"        DataSource source \u003d new FileDataSource(filename);"},{"lineNumber":94,"author":{"gitID":"hzxcaryn"},"content":"        messageBodyPart.setDataHandler(new DataHandler(source));"},{"lineNumber":95,"author":{"gitID":"hzxcaryn"},"content":"        messageBodyPart.setFileName(filename);"},{"lineNumber":96,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":97,"author":{"gitID":"hzxcaryn"},"content":"        multipart.addBodyPart(messageBodyPart);"},{"lineNumber":98,"author":{"gitID":"hzxcaryn"},"content":"        message.setContent(multipart);"},{"lineNumber":99,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":100,"author":{"gitID":"hzxcaryn"},"content":"        Transport.send(message);"},{"lineNumber":101,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":102,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":103,"author":{"gitID":"hzxcaryn"},"content":"}"}],"authorContributionMap":{"koo1993":52,"hzxcaryn":31,"-":20}},{"path":"src/main/java/seedu/ptman/logic/parser/AnnouncementCommandParser.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.AnnouncementCommand;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.parser.exceptions.ParseException;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.Announcement;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":8,"author":{"gitID":"SunBangjie"},"content":"/**"},{"lineNumber":9,"author":{"gitID":"SunBangjie"},"content":" * Parses input arguments and creates a new AnnouncementCommand object"},{"lineNumber":10,"author":{"gitID":"SunBangjie"},"content":" */"},{"lineNumber":11,"author":{"gitID":"SunBangjie"},"content":"public class AnnouncementCommandParser implements Parser {"},{"lineNumber":12,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":13,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":14,"author":{"gitID":"SunBangjie"},"content":"     * Constructs an AnnouncementCommand parser"},{"lineNumber":15,"author":{"gitID":"SunBangjie"},"content":"     * @param args"},{"lineNumber":16,"author":{"gitID":"SunBangjie"},"content":"     * @return"},{"lineNumber":17,"author":{"gitID":"SunBangjie"},"content":"     * @throws ParseException"},{"lineNumber":18,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":19,"author":{"gitID":"SunBangjie"},"content":"    public AnnouncementCommand parse(String args) throws ParseException {"},{"lineNumber":20,"author":{"gitID":"SunBangjie"},"content":"        String trimmedArgs \u003d args.trim();"},{"lineNumber":21,"author":{"gitID":"SunBangjie"},"content":"        if (trimmedArgs.isEmpty()) {"},{"lineNumber":22,"author":{"gitID":"SunBangjie"},"content":"            throw new ParseException(AnnouncementCommand.MESSAGE_EDIT_OUTLET_FAILURE);"},{"lineNumber":23,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":24,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":25,"author":{"gitID":"SunBangjie"},"content":"        return new AnnouncementCommand(new Announcement(trimmedArgs));"},{"lineNumber":26,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":6,"SunBangjie":21}},{"path":"src/main/java/seedu/ptman/logic/parser/EditOutletCommandParser.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_OPERATING_HOURS;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_OUTLET_CONTACT;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_OUTLET_EMAIL;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_OUTLET_NAME;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.exceptions.IllegalValueException;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.EditOutletCommand;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.parser.exceptions.ParseException;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OperatingHours;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletContact;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletEmail;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletName;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":18,"author":{"gitID":"SunBangjie"},"content":"/**"},{"lineNumber":19,"author":{"gitID":"SunBangjie"},"content":" * Parses input arguments and creates a new EditOutletCommand object"},{"lineNumber":20,"author":{"gitID":"SunBangjie"},"content":" */"},{"lineNumber":21,"author":{"gitID":"SunBangjie"},"content":"public class EditOutletCommandParser implements Parser\u003cEditOutletCommand\u003e {"},{"lineNumber":22,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":23,"author":{"gitID":"SunBangjie"},"content":"     * Parses the given {@code String} of arguments in the context of the EditOutletCommand"},{"lineNumber":24,"author":{"gitID":"SunBangjie"},"content":"     * and returns an EditOutletCommand object for execution."},{"lineNumber":25,"author":{"gitID":"SunBangjie"},"content":"     * @throws ParseException if the user input does not conform the expected format"},{"lineNumber":26,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":27,"author":{"gitID":"SunBangjie"},"content":"    public EditOutletCommand parse(String args) throws ParseException {"},{"lineNumber":28,"author":{"gitID":"SunBangjie"},"content":"        requireNonNull(args);"},{"lineNumber":29,"author":{"gitID":"SunBangjie"},"content":"        ArgumentMultimap argMultimap \u003d"},{"lineNumber":30,"author":{"gitID":"SunBangjie"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_OUTLET_NAME, PREFIX_OPERATING_HOURS,"},{"lineNumber":31,"author":{"gitID":"SunBangjie"},"content":"                        PREFIX_OUTLET_CONTACT, PREFIX_OUTLET_EMAIL);"},{"lineNumber":32,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":33,"author":{"gitID":"SunBangjie"},"content":"        OutletName outletName;"},{"lineNumber":34,"author":{"gitID":"SunBangjie"},"content":"        OperatingHours operatingHours;"},{"lineNumber":35,"author":{"gitID":"SunBangjie"},"content":"        OutletContact outletContact;"},{"lineNumber":36,"author":{"gitID":"SunBangjie"},"content":"        OutletEmail outletEmail;"},{"lineNumber":37,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":38,"author":{"gitID":"SunBangjie"},"content":"        try {"},{"lineNumber":39,"author":{"gitID":"SunBangjie"},"content":"            outletName \u003d ParserUtil.parseOutletName(argMultimap.getValue(PREFIX_OUTLET_NAME)).isPresent()"},{"lineNumber":40,"author":{"gitID":"SunBangjie"},"content":"                    ? ParserUtil.parseOutletName(argMultimap.getValue(PREFIX_OUTLET_NAME)).get()"},{"lineNumber":41,"author":{"gitID":"SunBangjie"},"content":"                    : null;"},{"lineNumber":42,"author":{"gitID":"SunBangjie"},"content":"            operatingHours \u003d ParserUtil.parseOperatingHours(argMultimap.getValue(PREFIX_OPERATING_HOURS)).isPresent()"},{"lineNumber":43,"author":{"gitID":"SunBangjie"},"content":"                    ? ParserUtil.parseOperatingHours(argMultimap.getValue(PREFIX_OPERATING_HOURS)).get()"},{"lineNumber":44,"author":{"gitID":"SunBangjie"},"content":"                    : null;"},{"lineNumber":45,"author":{"gitID":"SunBangjie"},"content":"            outletContact \u003d ParserUtil.parseOutletContact(argMultimap.getValue(PREFIX_OUTLET_CONTACT)).isPresent()"},{"lineNumber":46,"author":{"gitID":"SunBangjie"},"content":"                    ? ParserUtil.parseOutletContact(argMultimap.getValue(PREFIX_OUTLET_CONTACT)).get()"},{"lineNumber":47,"author":{"gitID":"SunBangjie"},"content":"                    : null;"},{"lineNumber":48,"author":{"gitID":"SunBangjie"},"content":"            outletEmail \u003d ParserUtil.parseOutletEmail(argMultimap.getValue(PREFIX_OUTLET_EMAIL)).isPresent()"},{"lineNumber":49,"author":{"gitID":"SunBangjie"},"content":"                    ? ParserUtil.parseOutletEmail(argMultimap.getValue(PREFIX_OUTLET_EMAIL)).get()"},{"lineNumber":50,"author":{"gitID":"SunBangjie"},"content":"                    : null;"},{"lineNumber":51,"author":{"gitID":"SunBangjie"},"content":"        } catch (IllegalValueException ive) {"},{"lineNumber":52,"author":{"gitID":"SunBangjie"},"content":"            throw new ParseException(ive.getMessage(), ive);"},{"lineNumber":53,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":54,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":55,"author":{"gitID":"SunBangjie"},"content":"        return new EditOutletCommand(outletName, operatingHours, outletContact, outletEmail);"},{"lineNumber":56,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":16,"SunBangjie":41}},{"path":"src/main/java/seedu/ptman/logic/parser/DeleteShiftCommandParser.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.ParserUtil.clearPasswordFromCommand;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.index.Index;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.exceptions.IllegalValueException;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.DeleteShiftCommand;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.parser.exceptions.ParseException;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"shanwpf"},"content":"//@@author shanwpf"},{"lineNumber":12,"author":{"gitID":"shanwpf"},"content":"/**"},{"lineNumber":13,"author":{"gitID":"shanwpf"},"content":" * Parses input arguments and creates a new DeleteShiftCommand object"},{"lineNumber":14,"author":{"gitID":"shanwpf"},"content":" */"},{"lineNumber":15,"author":{"gitID":"shanwpf"},"content":"public class DeleteShiftCommandParser implements Parser\u003cDeleteShiftCommand\u003e {"},{"lineNumber":16,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":17,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":18,"author":{"gitID":"shanwpf"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteShiftCommand"},{"lineNumber":19,"author":{"gitID":"shanwpf"},"content":"     * and returns an DeleteShiftCommand object for execution."},{"lineNumber":20,"author":{"gitID":"shanwpf"},"content":"     * @throws ParseException if the user input does not conform the expected format"},{"lineNumber":21,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":22,"author":{"gitID":"shanwpf"},"content":"    public DeleteShiftCommand parse(String args) throws ParseException {"},{"lineNumber":23,"author":{"gitID":"shanwpf"},"content":"        try {"},{"lineNumber":24,"author":{"gitID":"shanwpf"},"content":"            Index index \u003d ParserUtil.parseIndex(clearPasswordFromCommand(args));"},{"lineNumber":25,"author":{"gitID":"shanwpf"},"content":"            return new DeleteShiftCommand(index);"},{"lineNumber":26,"author":{"gitID":"shanwpf"},"content":"        } catch (IllegalValueException ive) {"},{"lineNumber":27,"author":{"gitID":"shanwpf"},"content":"            throw new ParseException("},{"lineNumber":28,"author":{"gitID":"shanwpf"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteShiftCommand.MESSAGE_USAGE));"},{"lineNumber":29,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":30,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"shanwpf"},"content":"}"}],"authorContributionMap":{"shanwpf":21,"-":10}},{"path":"src/main/java/seedu/ptman/logic/parser/ResetAdminPasswordCommandParser.java","lines":[{"lineNumber":1,"author":{"gitID":"koo1993"},"content":"package seedu.ptman.logic.parser;"},{"lineNumber":2,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":3,"author":{"gitID":"koo1993"},"content":"import seedu.ptman.logic.commands.ResetAdminPasswordCommand;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.parser.exceptions.ParseException;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"koo1993"},"content":"//@@author koo1993"},{"lineNumber":7,"author":{"gitID":"koo1993"},"content":"/**"},{"lineNumber":8,"author":{"gitID":"koo1993"},"content":" * Parses input arguments and creates a new ResetAdminPasswordCommand object"},{"lineNumber":9,"author":{"gitID":"koo1993"},"content":" */"},{"lineNumber":10,"author":{"gitID":"koo1993"},"content":"public class ResetAdminPasswordCommandParser implements Parser\u003cResetAdminPasswordCommand\u003e {"},{"lineNumber":11,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":12,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":13,"author":{"gitID":"koo1993"},"content":"     * Parses the given {@code String} of arguments in the context of the ResetAdminPasswordCommand"},{"lineNumber":14,"author":{"gitID":"koo1993"},"content":"     * and returns an ResetAdminPasswordCommand object for execution."},{"lineNumber":15,"author":{"gitID":"koo1993"},"content":"     * @throws ParseException if the user input does not conform the expected format"},{"lineNumber":16,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":17,"author":{"gitID":"koo1993"},"content":"    public ResetAdminPasswordCommand parse(String args) {"},{"lineNumber":18,"author":{"gitID":"koo1993"},"content":"        return new ResetAdminPasswordCommand();"},{"lineNumber":19,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":20,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":21,"author":{"gitID":"koo1993"},"content":"}"}],"authorContributionMap":{"koo1993":19,"-":2}},{"path":"src/main/java/seedu/ptman/logic/parser/AddShiftCommandParser.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_CAPACITY;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_DATE;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_TIME_END;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_TIME_START;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.ParserUtil.arePrefixesPresent;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.exceptions.IllegalValueException;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.AddShiftCommand;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.parser.exceptions.ParseException;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Capacity;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Date;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Shift;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Time;"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"shanwpf"},"content":"//@@author shanwpf"},{"lineNumber":19,"author":{"gitID":"shanwpf"},"content":"/**"},{"lineNumber":20,"author":{"gitID":"shanwpf"},"content":" * Parses input arguments and creates a new AddShiftCommand object"},{"lineNumber":21,"author":{"gitID":"shanwpf"},"content":" */"},{"lineNumber":22,"author":{"gitID":"shanwpf"},"content":"public class AddShiftCommandParser implements Parser\u003cAddShiftCommand\u003e {"},{"lineNumber":23,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":24,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":25,"author":{"gitID":"shanwpf"},"content":"     * Parses the given {@code String} of arguments in the context of the AddShiftCommand"},{"lineNumber":26,"author":{"gitID":"shanwpf"},"content":"     * and returns an AddShiftCommand object for execution."},{"lineNumber":27,"author":{"gitID":"shanwpf"},"content":"     * @throws ParseException if the user input does not conform the expected format"},{"lineNumber":28,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":29,"author":{"gitID":"shanwpf"},"content":"    public AddShiftCommand parse(String args) throws ParseException {"},{"lineNumber":30,"author":{"gitID":"shanwpf"},"content":"        ArgumentMultimap argMultimap \u003d"},{"lineNumber":31,"author":{"gitID":"shanwpf"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DATE, PREFIX_TIME_START,"},{"lineNumber":32,"author":{"gitID":"shanwpf"},"content":"                        PREFIX_TIME_END, PREFIX_CAPACITY);"},{"lineNumber":33,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":34,"author":{"gitID":"shanwpf"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DATE, PREFIX_TIME_START,"},{"lineNumber":35,"author":{"gitID":"shanwpf"},"content":"                PREFIX_TIME_END, PREFIX_CAPACITY)"},{"lineNumber":36,"author":{"gitID":"shanwpf"},"content":"                || !argMultimap.getPreamble().isEmpty()) {"},{"lineNumber":37,"author":{"gitID":"shanwpf"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddShiftCommand.MESSAGE_USAGE));"},{"lineNumber":38,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":39,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":40,"author":{"gitID":"shanwpf"},"content":"        try {"},{"lineNumber":41,"author":{"gitID":"shanwpf"},"content":"            Date date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE)).get();"},{"lineNumber":42,"author":{"gitID":"shanwpf"},"content":"            Time startTime \u003d ParserUtil.parseTime(argMultimap.getValue(PREFIX_TIME_START)).get();"},{"lineNumber":43,"author":{"gitID":"shanwpf"},"content":"            Time endTime \u003d ParserUtil.parseTime(argMultimap.getValue(PREFIX_TIME_END)).get();"},{"lineNumber":44,"author":{"gitID":"shanwpf"},"content":"            Capacity capacity \u003d ParserUtil.parseCapacity(argMultimap.getValue(PREFIX_CAPACITY)).get();"},{"lineNumber":45,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":46,"author":{"gitID":"shanwpf"},"content":"            Shift shift \u003d new Shift(date, startTime, endTime, capacity);"},{"lineNumber":47,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":48,"author":{"gitID":"shanwpf"},"content":"            return new AddShiftCommand(shift);"},{"lineNumber":49,"author":{"gitID":"shanwpf"},"content":"        } catch (IllegalValueException ive) {"},{"lineNumber":50,"author":{"gitID":"shanwpf"},"content":"            throw new ParseException(ive.getMessage(), ive);"},{"lineNumber":51,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":52,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":53,"author":{"gitID":"shanwpf"},"content":"}"}],"authorContributionMap":{"shanwpf":36,"-":17}},{"path":"src/main/java/seedu/ptman/logic/parser/ExportCommandParser.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_EMAIL;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.ParserUtil.arePrefixesPresent;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.exceptions.IllegalValueException;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.ExportCommand;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.parser.exceptions.ParseException;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Email;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"hzxcaryn"},"content":"//@@author hzxcaryn"},{"lineNumber":13,"author":{"gitID":"hzxcaryn"},"content":"/**"},{"lineNumber":14,"author":{"gitID":"hzxcaryn"},"content":" * Parses input arguments and creates a new ExportCommand object"},{"lineNumber":15,"author":{"gitID":"hzxcaryn"},"content":" */"},{"lineNumber":16,"author":{"gitID":"hzxcaryn"},"content":"public class ExportCommandParser implements Parser\u003cExportCommand\u003e {"},{"lineNumber":17,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":18,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":19,"author":{"gitID":"hzxcaryn"},"content":"     * Parses the given {@code String} of arguments in the context of the ExportCommand"},{"lineNumber":20,"author":{"gitID":"hzxcaryn"},"content":"     * and returns an ExportCommand object for execution."},{"lineNumber":21,"author":{"gitID":"hzxcaryn"},"content":"     * @throws ParseException if the user input does not conform the expected format"},{"lineNumber":22,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":23,"author":{"gitID":"hzxcaryn"},"content":"    public ExportCommand parse(String args) throws ParseException {"},{"lineNumber":24,"author":{"gitID":"hzxcaryn"},"content":"        ArgumentMultimap argMultimap \u003d"},{"lineNumber":25,"author":{"gitID":"hzxcaryn"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_EMAIL);"},{"lineNumber":26,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":27,"author":{"gitID":"hzxcaryn"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_EMAIL) \u0026\u0026 argMultimap.getPreamble().isEmpty()) {"},{"lineNumber":28,"author":{"gitID":"hzxcaryn"},"content":"            return new ExportCommand();"},{"lineNumber":29,"author":{"gitID":"hzxcaryn"},"content":"        } else if (!argMultimap.getPreamble().isEmpty()) {"},{"lineNumber":30,"author":{"gitID":"hzxcaryn"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ExportCommand.MESSAGE_USAGE));"},{"lineNumber":31,"author":{"gitID":"hzxcaryn"},"content":"        }"},{"lineNumber":32,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":33,"author":{"gitID":"hzxcaryn"},"content":"        try {"},{"lineNumber":34,"author":{"gitID":"hzxcaryn"},"content":"            Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL)).get();"},{"lineNumber":35,"author":{"gitID":"hzxcaryn"},"content":"            return new ExportCommand(email);"},{"lineNumber":36,"author":{"gitID":"hzxcaryn"},"content":"        } catch (IllegalValueException ive) {"},{"lineNumber":37,"author":{"gitID":"hzxcaryn"},"content":"            throw new ParseException(ive.getMessage(), ive);"},{"lineNumber":38,"author":{"gitID":"hzxcaryn"},"content":"        }"},{"lineNumber":39,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"hzxcaryn"},"content":"}"}],"authorContributionMap":{"hzxcaryn":29,"-":11}},{"path":"src/main/java/seedu/ptman/logic/parser/ResetPasswordCommandParser.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.index.Index;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.exceptions.IllegalValueException;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.ResetPasswordCommand;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.parser.exceptions.ParseException;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"koo1993"},"content":"//@@author koo1993"},{"lineNumber":11,"author":{"gitID":"koo1993"},"content":"/**"},{"lineNumber":12,"author":{"gitID":"koo1993"},"content":" * Parses input arguments and creates a new ResetPasswordCommand object"},{"lineNumber":13,"author":{"gitID":"koo1993"},"content":" */"},{"lineNumber":14,"author":{"gitID":"koo1993"},"content":"public class ResetPasswordCommandParser implements Parser\u003cResetPasswordCommand\u003e {"},{"lineNumber":15,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":16,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":17,"author":{"gitID":"koo1993"},"content":"     * Parses the given {@code String} of arguments in the context of the ResetPasswordCommand"},{"lineNumber":18,"author":{"gitID":"koo1993"},"content":"     * and returns an ResetPasswordCommand object for execution."},{"lineNumber":19,"author":{"gitID":"koo1993"},"content":"     * @throws ParseException if the user input does not conform the expected format"},{"lineNumber":20,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":21,"author":{"gitID":"koo1993"},"content":"    public ResetPasswordCommand parse(String args) throws ParseException {"},{"lineNumber":22,"author":{"gitID":"koo1993"},"content":"        try {"},{"lineNumber":23,"author":{"gitID":"koo1993"},"content":"            Index index \u003d ParserUtil.parseIndex(args);"},{"lineNumber":24,"author":{"gitID":"koo1993"},"content":"            return new ResetPasswordCommand(index);"},{"lineNumber":25,"author":{"gitID":"koo1993"},"content":"        } catch (IllegalValueException ive) {"},{"lineNumber":26,"author":{"gitID":"koo1993"},"content":"            throw new ParseException("},{"lineNumber":27,"author":{"gitID":"koo1993"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ResetPasswordCommand.MESSAGE_USAGE));"},{"lineNumber":28,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":29,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":30,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":31,"author":{"gitID":"koo1993"},"content":"}"}],"authorContributionMap":{"koo1993":22,"-":9}},{"path":"src/main/java/seedu/ptman/logic/parser/LogInAdminCommandParser.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_PASSWORD;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.LogInAdminCommand;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.parser.exceptions.ParseException;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"koo1993"},"content":"//@@author koo1993"},{"lineNumber":11,"author":{"gitID":"koo1993"},"content":"/**"},{"lineNumber":12,"author":{"gitID":"koo1993"},"content":" * Parses input arguments and creates a new LogInAdminCommand object"},{"lineNumber":13,"author":{"gitID":"koo1993"},"content":" */"},{"lineNumber":14,"author":{"gitID":"koo1993"},"content":"public class LogInAdminCommandParser implements Parser\u003cLogInAdminCommand\u003e {"},{"lineNumber":15,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":16,"author":{"gitID":"koo1993"},"content":"     * Parses the given {@code String} of arguments in the context of the LogInAdminCommand"},{"lineNumber":17,"author":{"gitID":"koo1993"},"content":"     * and returns an LogInAdminCommand object for execution."},{"lineNumber":18,"author":{"gitID":"koo1993"},"content":"     *"},{"lineNumber":19,"author":{"gitID":"koo1993"},"content":"     * @throws ParseException if the user input does not conform the expected format."},{"lineNumber":20,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":21,"author":{"gitID":"koo1993"},"content":"    public LogInAdminCommand parse(String args) throws ParseException {"},{"lineNumber":22,"author":{"gitID":"koo1993"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_PASSWORD);"},{"lineNumber":23,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":24,"author":{"gitID":"koo1993"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_PASSWORD)) {"},{"lineNumber":25,"author":{"gitID":"koo1993"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, LogInAdminCommand.MESSAGE_USAGE));"},{"lineNumber":26,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":27,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":28,"author":{"gitID":"koo1993"},"content":"        Password adminPassword \u003d ParserUtil.parsePassword(argMultimap.getValue(PREFIX_PASSWORD)).get();"},{"lineNumber":29,"author":{"gitID":"koo1993"},"content":"        return new LogInAdminCommand(adminPassword);"},{"lineNumber":30,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"koo1993"},"content":"}"}],"authorContributionMap":{"koo1993":22,"-":9}},{"path":"src/main/java/seedu/ptman/logic/parser/UnapplyCommandParser.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_PASSWORD;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.index.Index;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.exceptions.IllegalValueException;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.UnapplyCommand;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.parser.exceptions.ParseException;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"shanwpf"},"content":"//@@author shanwpf"},{"lineNumber":15,"author":{"gitID":"shanwpf"},"content":"/**"},{"lineNumber":16,"author":{"gitID":"shanwpf"},"content":" * Parses input arguments and creates a new UnapplyCommand object"},{"lineNumber":17,"author":{"gitID":"shanwpf"},"content":" */"},{"lineNumber":18,"author":{"gitID":"shanwpf"},"content":"public class UnapplyCommandParser implements Parser\u003cUnapplyCommand\u003e {"},{"lineNumber":19,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":20,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":21,"author":{"gitID":"shanwpf"},"content":"     * Parses the given {@code String} of arguments in the context of the UnapplyCommand"},{"lineNumber":22,"author":{"gitID":"shanwpf"},"content":"     * and returns an UnapplyCommand object for execution."},{"lineNumber":23,"author":{"gitID":"shanwpf"},"content":"     * @throws ParseException if the user input does not conform the expected format"},{"lineNumber":24,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":25,"author":{"gitID":"shanwpf"},"content":"    public UnapplyCommand parse(String args) throws ParseException {"},{"lineNumber":26,"author":{"gitID":"shanwpf"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_PASSWORD);"},{"lineNumber":27,"author":{"gitID":"shanwpf"},"content":"        try {"},{"lineNumber":28,"author":{"gitID":"shanwpf"},"content":"            Optional\u003cPassword\u003e password \u003d ParserUtil.parsePassword(argMultimap.getValue(PREFIX_PASSWORD));"},{"lineNumber":29,"author":{"gitID":"shanwpf"},"content":"            Index employeeIndex \u003d ParserUtil.parseFirstIndex(ParserUtil.clearPasswordFromCommand(args));"},{"lineNumber":30,"author":{"gitID":"shanwpf"},"content":"            Index shiftIndex \u003d ParserUtil.parseSecondIndex(ParserUtil.clearPasswordFromCommand(args));"},{"lineNumber":31,"author":{"gitID":"shanwpf"},"content":"            return new UnapplyCommand(employeeIndex, shiftIndex, password);"},{"lineNumber":32,"author":{"gitID":"shanwpf"},"content":"        } catch (IllegalValueException ive) {"},{"lineNumber":33,"author":{"gitID":"shanwpf"},"content":"            throw new ParseException("},{"lineNumber":34,"author":{"gitID":"shanwpf"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnapplyCommand.MESSAGE_USAGE));"},{"lineNumber":35,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":36,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":37,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":38,"author":{"gitID":"shanwpf"},"content":"}"}],"authorContributionMap":{"shanwpf":25,"-":13}},{"path":"src/main/java/seedu/ptman/logic/parser/ChangeAdminPasswordCommandParser.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_PASSWORD;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.Collection;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.util.stream.Stream;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.exceptions.IllegalValueException;"},{"lineNumber":12,"author":{"gitID":"koo1993"},"content":"import seedu.ptman.logic.commands.ChangeAdminPasswordCommand;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.parser.exceptions.ParseException;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"koo1993"},"content":"//@@author koo1993"},{"lineNumber":18,"author":{"gitID":"koo1993"},"content":"/**"},{"lineNumber":19,"author":{"gitID":"koo1993"},"content":" * Parses input arguments and creates a new ChangeAdminPasswordCommand object"},{"lineNumber":20,"author":{"gitID":"koo1993"},"content":" */"},{"lineNumber":21,"author":{"gitID":"koo1993"},"content":"public class ChangeAdminPasswordCommandParser implements Parser\u003cChangeAdminPasswordCommand\u003e {"},{"lineNumber":22,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":23,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":24,"author":{"gitID":"koo1993"},"content":"     * Parses the given {@code String} of arguments in the context of the ChangeMasterPassword"},{"lineNumber":25,"author":{"gitID":"koo1993"},"content":"     * and returns an ChangeAdminPasswordCommand object for execution."},{"lineNumber":26,"author":{"gitID":"koo1993"},"content":"     * @throws ParseException if the user input does not conform the expected format"},{"lineNumber":27,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":28,"author":{"gitID":"koo1993"},"content":"    public ChangeAdminPasswordCommand parse(String args) throws ParseException {"},{"lineNumber":29,"author":{"gitID":"koo1993"},"content":"        ArgumentMultimap argMultimap \u003d"},{"lineNumber":30,"author":{"gitID":"koo1993"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_PASSWORD);"},{"lineNumber":31,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":32,"author":{"gitID":"koo1993"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_PASSWORD) || !argMultimap.getPreamble().isEmpty()) {"},{"lineNumber":33,"author":{"gitID":"koo1993"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,"},{"lineNumber":34,"author":{"gitID":"koo1993"},"content":"                    ChangeAdminPasswordCommand.MESSAGE_USAGE));"},{"lineNumber":35,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":36,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":37,"author":{"gitID":"koo1993"},"content":"        ArrayList\u003cString\u003e passwords;"},{"lineNumber":38,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":39,"author":{"gitID":"koo1993"},"content":"        try {"},{"lineNumber":40,"author":{"gitID":"koo1993"},"content":"            passwords \u003d parsePasswords(argMultimap.getAllValues(PREFIX_PASSWORD));"},{"lineNumber":41,"author":{"gitID":"koo1993"},"content":"        } catch (IllegalValueException ive) {"},{"lineNumber":42,"author":{"gitID":"koo1993"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,"},{"lineNumber":43,"author":{"gitID":"koo1993"},"content":"                    ChangeAdminPasswordCommand.MESSAGE_USAGE));"},{"lineNumber":44,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":45,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":46,"author":{"gitID":"koo1993"},"content":"        checkPasswordValidity(passwords.get(1));"},{"lineNumber":47,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":48,"author":{"gitID":"koo1993"},"content":"        return new ChangeAdminPasswordCommand(passwords);"},{"lineNumber":49,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":51,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":52,"author":{"gitID":"koo1993"},"content":"     * Check validity of the password string given"},{"lineNumber":53,"author":{"gitID":"koo1993"},"content":"     * @param passwords"},{"lineNumber":54,"author":{"gitID":"koo1993"},"content":"     * @throws ParseException if it does not satisfy the password 8 length restriction."},{"lineNumber":55,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":56,"author":{"gitID":"koo1993"},"content":"    private void checkPasswordValidity(String passwords) throws ParseException {"},{"lineNumber":57,"author":{"gitID":"koo1993"},"content":"        if (!Password.isValidPassword(passwords)) {"},{"lineNumber":58,"author":{"gitID":"koo1993"},"content":"            throw new ParseException(Password.MESSAGE_PASSWORD_CONSTRAINTS);"},{"lineNumber":59,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":60,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":61,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":62,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":63,"author":{"gitID":"koo1993"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"},{"lineNumber":64,"author":{"gitID":"koo1993"},"content":"     * {@code ArgumentMultimap}."},{"lineNumber":65,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":66,"author":{"gitID":"koo1993"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"},{"lineNumber":67,"author":{"gitID":"koo1993"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"},{"lineNumber":68,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":69,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":70,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":71,"author":{"gitID":"koo1993"},"content":"     * Parses {@code Collection\u003cString\u003e passwords} into a {@code Set\u003cPassword\u003e}."},{"lineNumber":72,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":73,"author":{"gitID":"koo1993"},"content":"    public static ArrayList\u003cString\u003e parsePasswords(Collection\u003cString\u003e passwords) throws ParseException {"},{"lineNumber":74,"author":{"gitID":"koo1993"},"content":"        requireNonNull(passwords);"},{"lineNumber":75,"author":{"gitID":"koo1993"},"content":"        final ArrayList\u003cString\u003e passwordSet \u003d new ArrayList\u003c\u003e();"},{"lineNumber":76,"author":{"gitID":"koo1993"},"content":"        for (String password : passwords) {"},{"lineNumber":77,"author":{"gitID":"koo1993"},"content":"            passwordSet.add(password);"},{"lineNumber":78,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":79,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":80,"author":{"gitID":"koo1993"},"content":"        if (passwordSet.size() !\u003d 3) {"},{"lineNumber":81,"author":{"gitID":"koo1993"},"content":"            throw new ParseException(\"Incorrect number of password provided\");"},{"lineNumber":82,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":83,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":84,"author":{"gitID":"koo1993"},"content":"        return passwordSet;"},{"lineNumber":85,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":86,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":87,"author":{"gitID":"koo1993"},"content":"}"}],"authorContributionMap":{"koo1993":72,"-":15}},{"path":"src/main/java/seedu/ptman/logic/parser/PartTimeManagerParser.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_ADDRESS;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_EMAIL;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_NAME;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_PASSWORD;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_PHONE;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_SALARY;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_TAG;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import java.util.regex.Matcher;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import java.util.regex.Pattern;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.AddCommand;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.AddSalaryCommand;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.AddShiftCommand;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.AnnouncementCommand;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.ApplyCommand;"},{"lineNumber":22,"author":{"gitID":"koo1993"},"content":"import seedu.ptman.logic.commands.ChangeAdminPasswordCommand;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.ChangePasswordCommand;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.ClearCommand;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.Command;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.DecryptDataCommand;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.DeleteCommand;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.DeleteShiftCommand;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.DeselectCommand;"},{"lineNumber":30,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.EditCommand;"},{"lineNumber":31,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.EditOutletCommand;"},{"lineNumber":32,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.EncryptDataCommand;"},{"lineNumber":33,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.ExitCommand;"},{"lineNumber":34,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.ExportCommand;"},{"lineNumber":35,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.FindCommand;"},{"lineNumber":36,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.HelpCommand;"},{"lineNumber":37,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.HistoryCommand;"},{"lineNumber":38,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.ListCommand;"},{"lineNumber":39,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.LogInAdminCommand;"},{"lineNumber":40,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.LogOutAdminCommand;"},{"lineNumber":41,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.RedoCommand;"},{"lineNumber":42,"author":{"gitID":"koo1993"},"content":"import seedu.ptman.logic.commands.ResetAdminPasswordCommand;"},{"lineNumber":43,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.ResetPasswordCommand;"},{"lineNumber":44,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.SelectCommand;"},{"lineNumber":45,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.UnapplyCommand;"},{"lineNumber":46,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.UndoCommand;"},{"lineNumber":47,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.ViewEncryptionCommand;"},{"lineNumber":48,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.ViewShiftCommand;"},{"lineNumber":49,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.parser.exceptions.ParseException;"},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":52,"author":{"gitID":"-"},"content":" * Parses user input."},{"lineNumber":53,"author":{"gitID":"-"},"content":" */"},{"lineNumber":54,"author":{"gitID":"-"},"content":"public class PartTimeManagerParser {"},{"lineNumber":55,"author":{"gitID":"-"},"content":""},{"lineNumber":56,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":57,"author":{"gitID":"-"},"content":"     * Used for initial separation of command word and args."},{"lineNumber":58,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":59,"author":{"gitID":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");"},{"lineNumber":60,"author":{"gitID":"-"},"content":""},{"lineNumber":61,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":62,"author":{"gitID":"-"},"content":"     * Parses user input into command for execution."},{"lineNumber":63,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":64,"author":{"gitID":"-"},"content":"     * @param userInput full user input string"},{"lineNumber":65,"author":{"gitID":"-"},"content":"     * @return the command based on the user input"},{"lineNumber":66,"author":{"gitID":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format"},{"lineNumber":67,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":68,"author":{"gitID":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());"},{"lineNumber":70,"author":{"gitID":"-"},"content":"        if (!matcher.matches()) {"},{"lineNumber":71,"author":{"gitID":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));"},{"lineNumber":72,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":73,"author":{"gitID":"-"},"content":""},{"lineNumber":74,"author":{"gitID":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");"},{"lineNumber":75,"author":{"gitID":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");"},{"lineNumber":76,"author":{"gitID":"-"},"content":"        switch (commandWord) {"},{"lineNumber":77,"author":{"gitID":"-"},"content":""},{"lineNumber":78,"author":{"gitID":"-"},"content":"        case LogOutAdminCommand.COMMAND_WORD:"},{"lineNumber":79,"author":{"gitID":"-"},"content":"            return new LogOutAdminCommand();"},{"lineNumber":80,"author":{"gitID":"-"},"content":""},{"lineNumber":81,"author":{"gitID":"-"},"content":"        case LogInAdminCommand.COMMAND_WORD:"},{"lineNumber":82,"author":{"gitID":"-"},"content":"            return new LogInAdminCommandParser().parse(arguments);"},{"lineNumber":83,"author":{"gitID":"-"},"content":""},{"lineNumber":84,"author":{"gitID":"-"},"content":"        case ChangePasswordCommand.COMMAND_WORD:"},{"lineNumber":85,"author":{"gitID":"-"},"content":"        case ChangePasswordCommand.COMMAND_ALIAS:"},{"lineNumber":86,"author":{"gitID":"-"},"content":"            return new ChangePasswordCommandParser().parse(arguments);"},{"lineNumber":87,"author":{"gitID":"-"},"content":""},{"lineNumber":88,"author":{"gitID":"koo1993"},"content":"        case ChangeAdminPasswordCommand.COMMAND_WORD:"},{"lineNumber":89,"author":{"gitID":"koo1993"},"content":"        case ChangeAdminPasswordCommand.COMMAND_ALIAS:"},{"lineNumber":90,"author":{"gitID":"koo1993"},"content":"            return new ChangeAdminPasswordCommandParser().parse(arguments);"},{"lineNumber":91,"author":{"gitID":"-"},"content":""},{"lineNumber":92,"author":{"gitID":"-"},"content":"        case ResetPasswordCommand.COMMAND_WORD:"},{"lineNumber":93,"author":{"gitID":"-"},"content":"        case ResetPasswordCommand.COMMAND_ALIAS:"},{"lineNumber":94,"author":{"gitID":"-"},"content":"            return new ResetPasswordCommandParser().parse(arguments);"},{"lineNumber":95,"author":{"gitID":"-"},"content":""},{"lineNumber":96,"author":{"gitID":"koo1993"},"content":"        case ResetAdminPasswordCommand.COMMAND_WORD:"},{"lineNumber":97,"author":{"gitID":"koo1993"},"content":"        case ResetAdminPasswordCommand.COMMAND_ALIAS:"},{"lineNumber":98,"author":{"gitID":"koo1993"},"content":"            return new ResetAdminPasswordCommandParser().parse(arguments);"},{"lineNumber":99,"author":{"gitID":"-"},"content":""},{"lineNumber":100,"author":{"gitID":"-"},"content":"        case AddSalaryCommand.COMMAND_WORD:"},{"lineNumber":101,"author":{"gitID":"-"},"content":"        case AddSalaryCommand.COMMAND_ALIAS:"},{"lineNumber":102,"author":{"gitID":"-"},"content":"            return new AddSalaryCommandParser().parse(arguments);"},{"lineNumber":103,"author":{"gitID":"-"},"content":""},{"lineNumber":104,"author":{"gitID":"-"},"content":"        case ApplyCommand.COMMAND_WORD:"},{"lineNumber":105,"author":{"gitID":"-"},"content":"        case ApplyCommand.COMMAND_ALIAS:"},{"lineNumber":106,"author":{"gitID":"-"},"content":"            return new ApplyCommandParser().parse(arguments);"},{"lineNumber":107,"author":{"gitID":"-"},"content":""},{"lineNumber":108,"author":{"gitID":"-"},"content":"        case UnapplyCommand.COMMAND_WORD:"},{"lineNumber":109,"author":{"gitID":"-"},"content":"        case UnapplyCommand.COMMAND_ALIAS:"},{"lineNumber":110,"author":{"gitID":"-"},"content":"            return new UnapplyCommandParser().parse(arguments);"},{"lineNumber":111,"author":{"gitID":"-"},"content":""},{"lineNumber":112,"author":{"gitID":"-"},"content":"        case AddCommand.COMMAND_WORD:"},{"lineNumber":113,"author":{"gitID":"-"},"content":"        case AddCommand.COMMAND_ALIAS:"},{"lineNumber":114,"author":{"gitID":"-"},"content":"            return new AddCommandParser().parse(arguments);"},{"lineNumber":115,"author":{"gitID":"-"},"content":""},{"lineNumber":116,"author":{"gitID":"-"},"content":"        case AddShiftCommand.COMMAND_WORD:"},{"lineNumber":117,"author":{"gitID":"-"},"content":"        case AddShiftCommand.COMMAND_ALIAS:"},{"lineNumber":118,"author":{"gitID":"-"},"content":"            return new AddShiftCommandParser().parse(arguments);"},{"lineNumber":119,"author":{"gitID":"-"},"content":""},{"lineNumber":120,"author":{"gitID":"-"},"content":"        case EditCommand.COMMAND_WORD:"},{"lineNumber":121,"author":{"gitID":"-"},"content":"        case EditCommand.COMMAND_ALIAS:"},{"lineNumber":122,"author":{"gitID":"-"},"content":"            return new EditCommandParser().parse(arguments);"},{"lineNumber":123,"author":{"gitID":"-"},"content":""},{"lineNumber":124,"author":{"gitID":"-"},"content":"        case SelectCommand.COMMAND_WORD:"},{"lineNumber":125,"author":{"gitID":"-"},"content":"        case SelectCommand.COMMAND_ALIAS:"},{"lineNumber":126,"author":{"gitID":"-"},"content":"            return new SelectCommandParser().parse(arguments);"},{"lineNumber":127,"author":{"gitID":"-"},"content":""},{"lineNumber":128,"author":{"gitID":"-"},"content":"        case DeselectCommand.COMMAND_WORD:"},{"lineNumber":129,"author":{"gitID":"-"},"content":"        case DeselectCommand.COMMAND_ALIAS:"},{"lineNumber":130,"author":{"gitID":"-"},"content":"            return new DeselectCommand();"},{"lineNumber":131,"author":{"gitID":"-"},"content":""},{"lineNumber":132,"author":{"gitID":"-"},"content":"        case DeleteCommand.COMMAND_WORD:"},{"lineNumber":133,"author":{"gitID":"-"},"content":"        case DeleteCommand.COMMAND_ALIAS:"},{"lineNumber":134,"author":{"gitID":"-"},"content":"            return new DeleteCommandParser().parse(arguments);"},{"lineNumber":135,"author":{"gitID":"-"},"content":""},{"lineNumber":136,"author":{"gitID":"-"},"content":"        case DeleteShiftCommand.COMMAND_WORD:"},{"lineNumber":137,"author":{"gitID":"-"},"content":"        case DeleteShiftCommand.COMMAND_ALIAS:"},{"lineNumber":138,"author":{"gitID":"-"},"content":"            return new DeleteShiftCommandParser().parse(arguments);"},{"lineNumber":139,"author":{"gitID":"-"},"content":""},{"lineNumber":140,"author":{"gitID":"-"},"content":"        case ClearCommand.COMMAND_WORD:"},{"lineNumber":141,"author":{"gitID":"-"},"content":"        case ClearCommand.COMMAND_ALIAS:"},{"lineNumber":142,"author":{"gitID":"-"},"content":"            return new ClearCommand();"},{"lineNumber":143,"author":{"gitID":"-"},"content":""},{"lineNumber":144,"author":{"gitID":"-"},"content":"        case FindCommand.COMMAND_WORD:"},{"lineNumber":145,"author":{"gitID":"-"},"content":"        case FindCommand.COMMAND_ALIAS:"},{"lineNumber":146,"author":{"gitID":"-"},"content":"            return new FindCommandParser().parse(arguments);"},{"lineNumber":147,"author":{"gitID":"-"},"content":""},{"lineNumber":148,"author":{"gitID":"-"},"content":"        case ListCommand.COMMAND_WORD:"},{"lineNumber":149,"author":{"gitID":"-"},"content":"        case ListCommand.COMMAND_ALIAS:"},{"lineNumber":150,"author":{"gitID":"-"},"content":"            return new ListCommand();"},{"lineNumber":151,"author":{"gitID":"-"},"content":""},{"lineNumber":152,"author":{"gitID":"-"},"content":"        case ViewShiftCommand.COMMAND_WORD:"},{"lineNumber":153,"author":{"gitID":"-"},"content":"        case ViewShiftCommand.COMMAND_ALIAS:"},{"lineNumber":154,"author":{"gitID":"-"},"content":"            return new ViewShiftCommandParser().parse(arguments);"},{"lineNumber":155,"author":{"gitID":"-"},"content":""},{"lineNumber":156,"author":{"gitID":"-"},"content":"        case HistoryCommand.COMMAND_WORD:"},{"lineNumber":157,"author":{"gitID":"-"},"content":"        case HistoryCommand.COMMAND_ALIAS:"},{"lineNumber":158,"author":{"gitID":"-"},"content":"            return new HistoryCommand();"},{"lineNumber":159,"author":{"gitID":"-"},"content":""},{"lineNumber":160,"author":{"gitID":"-"},"content":"        case ExitCommand.COMMAND_WORD:"},{"lineNumber":161,"author":{"gitID":"-"},"content":"            return new ExitCommand();"},{"lineNumber":162,"author":{"gitID":"-"},"content":""},{"lineNumber":163,"author":{"gitID":"-"},"content":"        case HelpCommand.COMMAND_WORD:"},{"lineNumber":164,"author":{"gitID":"-"},"content":"            return new HelpCommand();"},{"lineNumber":165,"author":{"gitID":"-"},"content":""},{"lineNumber":166,"author":{"gitID":"-"},"content":"        case UndoCommand.COMMAND_WORD:"},{"lineNumber":167,"author":{"gitID":"-"},"content":"        case UndoCommand.COMMAND_ALIAS:"},{"lineNumber":168,"author":{"gitID":"-"},"content":"            return new UndoCommand();"},{"lineNumber":169,"author":{"gitID":"-"},"content":""},{"lineNumber":170,"author":{"gitID":"-"},"content":"        case RedoCommand.COMMAND_WORD:"},{"lineNumber":171,"author":{"gitID":"-"},"content":"        case RedoCommand.COMMAND_ALIAS:"},{"lineNumber":172,"author":{"gitID":"-"},"content":"            return new RedoCommand();"},{"lineNumber":173,"author":{"gitID":"-"},"content":""},{"lineNumber":174,"author":{"gitID":"-"},"content":"        case EditOutletCommand.COMMAND_WORD:"},{"lineNumber":175,"author":{"gitID":"-"},"content":"        case EditOutletCommand.COMMAND_ALIAS:"},{"lineNumber":176,"author":{"gitID":"-"},"content":"            return new EditOutletCommandParser().parse(arguments);"},{"lineNumber":177,"author":{"gitID":"-"},"content":""},{"lineNumber":178,"author":{"gitID":"-"},"content":"        case ViewEncryptionCommand.COMMAND_WORD:"},{"lineNumber":179,"author":{"gitID":"-"},"content":"        case ViewEncryptionCommand.COMMAND_ALIAS:"},{"lineNumber":180,"author":{"gitID":"-"},"content":"            return new ViewEncryptionCommand();"},{"lineNumber":181,"author":{"gitID":"-"},"content":""},{"lineNumber":182,"author":{"gitID":"-"},"content":"        case AnnouncementCommand.COMMAND_WORD:"},{"lineNumber":183,"author":{"gitID":"-"},"content":"        case AnnouncementCommand.COMMAND_ALIAS:"},{"lineNumber":184,"author":{"gitID":"-"},"content":"            return new AnnouncementCommandParser().parse(arguments);"},{"lineNumber":185,"author":{"gitID":"-"},"content":""},{"lineNumber":186,"author":{"gitID":"-"},"content":"        case EncryptDataCommand.COMMAND_WORD:"},{"lineNumber":187,"author":{"gitID":"-"},"content":"            return new EncryptDataCommand();"},{"lineNumber":188,"author":{"gitID":"-"},"content":""},{"lineNumber":189,"author":{"gitID":"-"},"content":"        case DecryptDataCommand.COMMAND_WORD:"},{"lineNumber":190,"author":{"gitID":"-"},"content":"            return new DecryptDataCommand();"},{"lineNumber":191,"author":{"gitID":"-"},"content":""},{"lineNumber":192,"author":{"gitID":"-"},"content":"        case ExportCommand.COMMAND_WORD:"},{"lineNumber":193,"author":{"gitID":"-"},"content":"        case ExportCommand.COMMAND_ALIAS:"},{"lineNumber":194,"author":{"gitID":"-"},"content":"            return new ExportCommandParser().parse(arguments);"},{"lineNumber":195,"author":{"gitID":"-"},"content":""},{"lineNumber":196,"author":{"gitID":"-"},"content":"        default:"},{"lineNumber":197,"author":{"gitID":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);"},{"lineNumber":198,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":199,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":200,"author":{"gitID":"-"},"content":""},{"lineNumber":201,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":202,"author":{"gitID":"-"},"content":"     * Extract out password when given a commandText"},{"lineNumber":203,"author":{"gitID":"-"},"content":"     * @param commandText"},{"lineNumber":204,"author":{"gitID":"-"},"content":"     * @return password in String"},{"lineNumber":205,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":206,"author":{"gitID":"-"},"content":"    public String parseCommandForPassword(String commandText) throws ParseException {"},{"lineNumber":207,"author":{"gitID":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(commandText, PREFIX_NAME, PREFIX_ADDRESS,"},{"lineNumber":208,"author":{"gitID":"-"},"content":"                PREFIX_PHONE, PREFIX_SALARY, PREFIX_EMAIL, PREFIX_PASSWORD, PREFIX_TAG);"},{"lineNumber":209,"author":{"gitID":"-"},"content":"        Optional\u003cString\u003e passwordOptional \u003d argMultimap.getValue(PREFIX_PASSWORD);"},{"lineNumber":210,"author":{"gitID":"-"},"content":""},{"lineNumber":211,"author":{"gitID":"-"},"content":"        if (!passwordOptional.isPresent()) {"},{"lineNumber":212,"author":{"gitID":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, commandText));"},{"lineNumber":213,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":214,"author":{"gitID":"-"},"content":"        return argMultimap.getValue(PREFIX_PASSWORD).get();"},{"lineNumber":215,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":216,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"koo1993":8,"-":208}},{"path":"src/main/java/seedu/ptman/logic/parser/ChangePasswordCommandParser.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_PASSWORD;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.Collection;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.util.stream.Stream;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.index.Index;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.exceptions.IllegalValueException;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.ChangePasswordCommand;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.parser.exceptions.ParseException;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"koo1993"},"content":"//@@author koo1993"},{"lineNumber":18,"author":{"gitID":"koo1993"},"content":"/**"},{"lineNumber":19,"author":{"gitID":"koo1993"},"content":" * Parses input arguments and creates a new ChangePasswordCommand object"},{"lineNumber":20,"author":{"gitID":"koo1993"},"content":" */"},{"lineNumber":21,"author":{"gitID":"koo1993"},"content":"public class ChangePasswordCommandParser implements Parser\u003cChangePasswordCommand\u003e {"},{"lineNumber":22,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":23,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":24,"author":{"gitID":"koo1993"},"content":"     * Parses the given {@code String} of arguments in the context of the ChangePasswordCommand"},{"lineNumber":25,"author":{"gitID":"koo1993"},"content":"     * and returns an ChangePasswordCommand object for execution."},{"lineNumber":26,"author":{"gitID":"koo1993"},"content":"     * @throws ParseException if the user input does not conform the expected format"},{"lineNumber":27,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":28,"author":{"gitID":"koo1993"},"content":"    public ChangePasswordCommand parse(String args) throws ParseException {"},{"lineNumber":29,"author":{"gitID":"koo1993"},"content":"        ArgumentMultimap argMultimap \u003d"},{"lineNumber":30,"author":{"gitID":"koo1993"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_PASSWORD);"},{"lineNumber":31,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":32,"author":{"gitID":"koo1993"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_PASSWORD)) {"},{"lineNumber":33,"author":{"gitID":"koo1993"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,"},{"lineNumber":34,"author":{"gitID":"koo1993"},"content":"                    ChangePasswordCommand.MESSAGE_USAGE));"},{"lineNumber":35,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":36,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":37,"author":{"gitID":"koo1993"},"content":"        Index index;"},{"lineNumber":38,"author":{"gitID":"koo1993"},"content":"        ArrayList\u003cString\u003e passwords;"},{"lineNumber":39,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":40,"author":{"gitID":"koo1993"},"content":"        try {"},{"lineNumber":41,"author":{"gitID":"koo1993"},"content":"            passwords \u003d parsePasswords(argMultimap.getAllValues(PREFIX_PASSWORD));"},{"lineNumber":42,"author":{"gitID":"koo1993"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());"},{"lineNumber":43,"author":{"gitID":"koo1993"},"content":"        } catch (IllegalValueException ive) {"},{"lineNumber":44,"author":{"gitID":"koo1993"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,"},{"lineNumber":45,"author":{"gitID":"koo1993"},"content":"                    ChangePasswordCommand.MESSAGE_USAGE));"},{"lineNumber":46,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":47,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":48,"author":{"gitID":"koo1993"},"content":"        checkPasswordValidity(passwords.get(1));"},{"lineNumber":49,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":50,"author":{"gitID":"koo1993"},"content":"        return new ChangePasswordCommand(index, passwords);"},{"lineNumber":51,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":53,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":54,"author":{"gitID":"koo1993"},"content":"     * Check validity of the password string given"},{"lineNumber":55,"author":{"gitID":"koo1993"},"content":"     * @param passwords"},{"lineNumber":56,"author":{"gitID":"koo1993"},"content":"     * @throws ParseException if it does not satisfy the password 8 length restriction."},{"lineNumber":57,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":58,"author":{"gitID":"koo1993"},"content":"    private void checkPasswordValidity(String passwords) throws ParseException {"},{"lineNumber":59,"author":{"gitID":"koo1993"},"content":"        if (!Password.isValidPassword(passwords)) {"},{"lineNumber":60,"author":{"gitID":"koo1993"},"content":"            throw new ParseException(Password.MESSAGE_PASSWORD_CONSTRAINTS);"},{"lineNumber":61,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":62,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":64,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":65,"author":{"gitID":"koo1993"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"},{"lineNumber":66,"author":{"gitID":"koo1993"},"content":"     * {@code ArgumentMultimap}."},{"lineNumber":67,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":68,"author":{"gitID":"koo1993"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"},{"lineNumber":69,"author":{"gitID":"koo1993"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"},{"lineNumber":70,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":71,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":72,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":73,"author":{"gitID":"koo1993"},"content":"     * Parses {@code Collection\u003cString\u003e passwords} into a {@code Set\u003cPassword\u003e}."},{"lineNumber":74,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":75,"author":{"gitID":"koo1993"},"content":"    public static ArrayList\u003cString\u003e parsePasswords(Collection\u003cString\u003e passwords) throws ParseException {"},{"lineNumber":76,"author":{"gitID":"koo1993"},"content":"        requireNonNull(passwords);"},{"lineNumber":77,"author":{"gitID":"koo1993"},"content":"        final ArrayList\u003cString\u003e passwordSet \u003d new ArrayList\u003c\u003e();"},{"lineNumber":78,"author":{"gitID":"koo1993"},"content":"        for (String password : passwords) {"},{"lineNumber":79,"author":{"gitID":"koo1993"},"content":"            passwordSet.add(password);"},{"lineNumber":80,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":81,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":82,"author":{"gitID":"koo1993"},"content":"        if (passwordSet.size() !\u003d 3) {"},{"lineNumber":83,"author":{"gitID":"koo1993"},"content":"            throw new ParseException(\"Incorrect number of passwords provided\");"},{"lineNumber":84,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":85,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":86,"author":{"gitID":"koo1993"},"content":"        return passwordSet;"},{"lineNumber":87,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":88,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":89,"author":{"gitID":"koo1993"},"content":"}"}],"authorContributionMap":{"koo1993":73,"-":16}},{"path":"src/main/java/seedu/ptman/logic/parser/AddSalaryCommandParser.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_SALARY;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.ParserUtil.arePrefixesPresent;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.index.Index;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.exceptions.IllegalValueException;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.AddSalaryCommand;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.parser.exceptions.ParseException;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Salary;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"koo1993"},"content":"//@@author koo1993"},{"lineNumber":15,"author":{"gitID":"koo1993"},"content":"/**"},{"lineNumber":16,"author":{"gitID":"koo1993"},"content":" * Parses input arguments and creates a new AddSalaryCommand object"},{"lineNumber":17,"author":{"gitID":"koo1993"},"content":" */"},{"lineNumber":18,"author":{"gitID":"koo1993"},"content":"public class AddSalaryCommandParser implements Parser\u003cAddSalaryCommand\u003e {"},{"lineNumber":19,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":20,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":21,"author":{"gitID":"koo1993"},"content":"     * Parses the given {@code String} of arguments in the context of the AddSalaryCommand"},{"lineNumber":22,"author":{"gitID":"koo1993"},"content":"     * and returns an AddSalaryCommand object for execution."},{"lineNumber":23,"author":{"gitID":"koo1993"},"content":"     * @throws ParseException if the user input does not conform the expected format"},{"lineNumber":24,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":25,"author":{"gitID":"koo1993"},"content":"    public AddSalaryCommand parse(String args) throws ParseException {"},{"lineNumber":26,"author":{"gitID":"koo1993"},"content":"        requireNonNull(args);"},{"lineNumber":27,"author":{"gitID":"koo1993"},"content":"        Index index;"},{"lineNumber":28,"author":{"gitID":"koo1993"},"content":"        Salary salary;"},{"lineNumber":29,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":30,"author":{"gitID":"koo1993"},"content":"        ArgumentMultimap argMultimap \u003d"},{"lineNumber":31,"author":{"gitID":"koo1993"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_SALARY);"},{"lineNumber":32,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":33,"author":{"gitID":"koo1993"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_SALARY) || argMultimap.getPreamble().isEmpty()) {"},{"lineNumber":34,"author":{"gitID":"koo1993"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,"},{"lineNumber":35,"author":{"gitID":"koo1993"},"content":"                    AddSalaryCommand.MESSAGE_USAGE));"},{"lineNumber":36,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":37,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":38,"author":{"gitID":"koo1993"},"content":"        try {"},{"lineNumber":39,"author":{"gitID":"koo1993"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());"},{"lineNumber":40,"author":{"gitID":"koo1993"},"content":"            salary \u003d ParserUtil.parseSalary(argMultimap.getValue(PREFIX_SALARY)).get();"},{"lineNumber":41,"author":{"gitID":"koo1993"},"content":"        } catch (IllegalValueException ive) {"},{"lineNumber":42,"author":{"gitID":"koo1993"},"content":"            throw new ParseException(ive.getMessage(), ive);"},{"lineNumber":43,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":44,"author":{"gitID":"koo1993"},"content":"        return new AddSalaryCommand(index, salary);"},{"lineNumber":45,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":47,"author":{"gitID":"koo1993"},"content":"}"}],"authorContributionMap":{"koo1993":34,"-":13}},{"path":"src/main/java/seedu/ptman/logic/commands/EncryptDataCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_ACCESS_DENIED;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.exceptions.CommandException;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":8,"author":{"gitID":"SunBangjie"},"content":"/**"},{"lineNumber":9,"author":{"gitID":"SunBangjie"},"content":" * Encrypts local storage files."},{"lineNumber":10,"author":{"gitID":"SunBangjie"},"content":" */"},{"lineNumber":11,"author":{"gitID":"SunBangjie"},"content":"public class EncryptDataCommand extends Command {"},{"lineNumber":12,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":13,"author":{"gitID":"SunBangjie"},"content":"    public static final String COMMAND_WORD \u003d \"encrypt\";"},{"lineNumber":14,"author":{"gitID":"SunBangjie"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Encrypts local storage files.\\n\""},{"lineNumber":15,"author":{"gitID":"SunBangjie"},"content":"            + \"Example: \" + COMMAND_WORD;"},{"lineNumber":16,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":17,"author":{"gitID":"SunBangjie"},"content":"    public static final String MESSAGE_ENCRYPT_SUCCESS \u003d \"Local files successfully encrypted.\";"},{"lineNumber":18,"author":{"gitID":"SunBangjie"},"content":"    public static final String MESSAGE_ENCRYPT_FAILURE \u003d \"Local files have already been encrypted.\";"},{"lineNumber":19,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":20,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":21,"author":{"gitID":"SunBangjie"},"content":"    public CommandResult execute() throws CommandException {"},{"lineNumber":22,"author":{"gitID":"SunBangjie"},"content":"        if (!model.isAdminMode()) {"},{"lineNumber":23,"author":{"gitID":"SunBangjie"},"content":"            throw new CommandException(MESSAGE_ACCESS_DENIED);"},{"lineNumber":24,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":25,"author":{"gitID":"SunBangjie"},"content":"        if (model.getEncryptionMode()) {"},{"lineNumber":26,"author":{"gitID":"SunBangjie"},"content":"            throw new CommandException(MESSAGE_ENCRYPT_FAILURE);"},{"lineNumber":27,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":28,"author":{"gitID":"SunBangjie"},"content":"        model.encryptLocalStorage();"},{"lineNumber":29,"author":{"gitID":"SunBangjie"},"content":"        return new CommandResult(MESSAGE_ENCRYPT_SUCCESS);"},{"lineNumber":30,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":6,"SunBangjie":25}},{"path":"src/main/java/seedu/ptman/logic/parser/ViewShiftCommandParser.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.index.Index;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.exceptions.IllegalValueException;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.ViewShiftCommand;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.parser.exceptions.ParseException;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"hzxcaryn"},"content":"//@@author hzxcaryn"},{"lineNumber":11,"author":{"gitID":"hzxcaryn"},"content":"/**"},{"lineNumber":12,"author":{"gitID":"hzxcaryn"},"content":" * Parses input arguments and creates a new ViewShiftCommand object"},{"lineNumber":13,"author":{"gitID":"hzxcaryn"},"content":" */"},{"lineNumber":14,"author":{"gitID":"hzxcaryn"},"content":"public class ViewShiftCommandParser implements Parser\u003cViewShiftCommand\u003e {"},{"lineNumber":15,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":16,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":17,"author":{"gitID":"hzxcaryn"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewShiftCommand"},{"lineNumber":18,"author":{"gitID":"hzxcaryn"},"content":"     * and returns an ViewShiftCommand object for execution."},{"lineNumber":19,"author":{"gitID":"hzxcaryn"},"content":"     * @throws ParseException if the user input does not conform the expected format"},{"lineNumber":20,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":21,"author":{"gitID":"hzxcaryn"},"content":"    public ViewShiftCommand parse(String args) throws ParseException {"},{"lineNumber":22,"author":{"gitID":"hzxcaryn"},"content":"        try {"},{"lineNumber":23,"author":{"gitID":"hzxcaryn"},"content":"            Index index \u003d ParserUtil.parseIndex(args);"},{"lineNumber":24,"author":{"gitID":"hzxcaryn"},"content":"            return new ViewShiftCommand(index);"},{"lineNumber":25,"author":{"gitID":"hzxcaryn"},"content":"        } catch (IllegalValueException ive) {"},{"lineNumber":26,"author":{"gitID":"hzxcaryn"},"content":"            throw new ParseException("},{"lineNumber":27,"author":{"gitID":"hzxcaryn"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewShiftCommand.MESSAGE_USAGE));"},{"lineNumber":28,"author":{"gitID":"hzxcaryn"},"content":"        }"},{"lineNumber":29,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":30,"author":{"gitID":"hzxcaryn"},"content":"}"}],"authorContributionMap":{"hzxcaryn":21,"-":9}},{"path":"src/main/java/seedu/ptman/logic/parser/ApplyCommandParser.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_PASSWORD;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.ParserUtil.clearPasswordFromCommand;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.index.Index;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.exceptions.IllegalValueException;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.ApplyCommand;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.parser.exceptions.ParseException;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"shanwpf"},"content":"//@@author shanwpf"},{"lineNumber":16,"author":{"gitID":"shanwpf"},"content":"/**"},{"lineNumber":17,"author":{"gitID":"shanwpf"},"content":" * Parses input arguments and creates a new ApplyCommand object"},{"lineNumber":18,"author":{"gitID":"shanwpf"},"content":" */"},{"lineNumber":19,"author":{"gitID":"shanwpf"},"content":"public class ApplyCommandParser implements Parser\u003cApplyCommand\u003e {"},{"lineNumber":20,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":21,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":22,"author":{"gitID":"shanwpf"},"content":"     * Parses the given {@code String} of arguments in the context of the ApplyCommand"},{"lineNumber":23,"author":{"gitID":"shanwpf"},"content":"     * and returns an ApplyCommand object for execution."},{"lineNumber":24,"author":{"gitID":"shanwpf"},"content":"     * @throws ParseException if the user input does not conform the expected format"},{"lineNumber":25,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":26,"author":{"gitID":"shanwpf"},"content":"    public ApplyCommand parse(String args) throws ParseException {"},{"lineNumber":27,"author":{"gitID":"shanwpf"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_PASSWORD);"},{"lineNumber":28,"author":{"gitID":"shanwpf"},"content":"        try {"},{"lineNumber":29,"author":{"gitID":"shanwpf"},"content":"            Optional\u003cPassword\u003e password \u003d ParserUtil.parsePassword(argMultimap.getValue(PREFIX_PASSWORD));"},{"lineNumber":30,"author":{"gitID":"shanwpf"},"content":"            Index employeeIndex \u003d ParserUtil.parseFirstIndex(clearPasswordFromCommand(args));"},{"lineNumber":31,"author":{"gitID":"shanwpf"},"content":"            Index shiftIndex \u003d ParserUtil.parseSecondIndex(clearPasswordFromCommand(args));"},{"lineNumber":32,"author":{"gitID":"shanwpf"},"content":"            return new ApplyCommand(employeeIndex, shiftIndex, password);"},{"lineNumber":33,"author":{"gitID":"shanwpf"},"content":"        } catch (IllegalValueException ive) {"},{"lineNumber":34,"author":{"gitID":"shanwpf"},"content":"            throw new ParseException("},{"lineNumber":35,"author":{"gitID":"shanwpf"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ApplyCommand.MESSAGE_USAGE));"},{"lineNumber":36,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":37,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"shanwpf"},"content":"}"}],"authorContributionMap":{"shanwpf":24,"-":14}},{"path":"src/main/java/seedu/ptman/logic/commands/ViewEncryptionCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":4,"author":{"gitID":"SunBangjie"},"content":"/**"},{"lineNumber":5,"author":{"gitID":"SunBangjie"},"content":" * Displays the details of outlet in the ptman."},{"lineNumber":6,"author":{"gitID":"SunBangjie"},"content":" */"},{"lineNumber":7,"author":{"gitID":"SunBangjie"},"content":"public class ViewEncryptionCommand extends Command {"},{"lineNumber":8,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":9,"author":{"gitID":"SunBangjie"},"content":"    public static final String COMMAND_WORD \u003d \"viewencryption\";"},{"lineNumber":10,"author":{"gitID":"SunBangjie"},"content":"    public static final String COMMAND_ALIAS \u003d \"ve\";"},{"lineNumber":11,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":12,"author":{"gitID":"SunBangjie"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": displays encryption status of \""},{"lineNumber":13,"author":{"gitID":"SunBangjie"},"content":"            + \"local storage files.\\n\""},{"lineNumber":14,"author":{"gitID":"SunBangjie"},"content":"            + \"Example: \" + COMMAND_WORD;"},{"lineNumber":15,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":16,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":17,"author":{"gitID":"SunBangjie"},"content":"    public CommandResult execute() {"},{"lineNumber":18,"author":{"gitID":"SunBangjie"},"content":"        String messageToDisplay \u003d model.getEncryptionModeMessage();"},{"lineNumber":19,"author":{"gitID":"SunBangjie"},"content":"        return new CommandResult(messageToDisplay);"},{"lineNumber":20,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":2,"SunBangjie":19}},{"path":"src/main/java/seedu/ptman/logic/commands/ResetPasswordCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import javax.mail.MessagingException;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import javax.mail.internet.AddressException;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.Messages;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.index.Index;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.services.EmailService;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.exceptions.CommandException;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Employee;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"koo1993"},"content":"//@@author koo1993"},{"lineNumber":19,"author":{"gitID":"koo1993"},"content":"/**"},{"lineNumber":20,"author":{"gitID":"koo1993"},"content":" * Reset password for an existing employee in PTMan."},{"lineNumber":21,"author":{"gitID":"koo1993"},"content":" */"},{"lineNumber":22,"author":{"gitID":"koo1993"},"content":"public class ResetPasswordCommand extends Command {"},{"lineNumber":23,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":24,"author":{"gitID":"koo1993"},"content":"    public static final String COMMAND_WORD \u003d \"resetpw\";"},{"lineNumber":25,"author":{"gitID":"koo1993"},"content":"    public static final String COMMAND_ALIAS \u003d \"rp\";"},{"lineNumber":26,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":27,"author":{"gitID":"koo1993"},"content":"    public static final String COMMAND_FORMAT \u003d \"EMPLOYEE_INDEX\";"},{"lineNumber":28,"author":{"gitID":"koo1993"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Resets password for the chosen employee.\\n\""},{"lineNumber":29,"author":{"gitID":"koo1993"},"content":"            + \"Parameters: \""},{"lineNumber":30,"author":{"gitID":"koo1993"},"content":"            + COMMAND_FORMAT"},{"lineNumber":31,"author":{"gitID":"koo1993"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" 2\";"},{"lineNumber":32,"author":{"gitID":"koo1993"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Email with the new password is sent to you at: %1$s\";"},{"lineNumber":33,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":34,"author":{"gitID":"koo1993"},"content":"    public static final String MESSAGE_SENT_FAIL \u003d \"Reset password Fail, please check your internet connection\";"},{"lineNumber":35,"author":{"gitID":"koo1993"},"content":"    public static final String MESSAGE_EMAIL_FAIL \u003d \"No such email address %1$s\";"},{"lineNumber":36,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":37,"author":{"gitID":"koo1993"},"content":"    private final Index index;"},{"lineNumber":38,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":39,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":40,"author":{"gitID":"koo1993"},"content":"     * @param index of the employee in the filtered employee list to edit"},{"lineNumber":41,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":42,"author":{"gitID":"koo1993"},"content":"    public ResetPasswordCommand(Index index) {"},{"lineNumber":43,"author":{"gitID":"koo1993"},"content":"        requireNonNull(index);"},{"lineNumber":44,"author":{"gitID":"koo1993"},"content":"        this.index \u003d index;"},{"lineNumber":45,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":47,"author":{"gitID":"koo1993"},"content":"    @Override"},{"lineNumber":48,"author":{"gitID":"koo1993"},"content":"    public CommandResult execute() throws CommandException {"},{"lineNumber":49,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":50,"author":{"gitID":"koo1993"},"content":"        List\u003cEmployee\u003e lastShownList \u003d model.getFilteredEmployeeList();"},{"lineNumber":51,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":52,"author":{"gitID":"koo1993"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {"},{"lineNumber":53,"author":{"gitID":"koo1993"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX);"},{"lineNumber":54,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":55,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":56,"author":{"gitID":"koo1993"},"content":"        Employee requestedEmployee \u003d lastShownList.get(index.getZeroBased());"},{"lineNumber":57,"author":{"gitID":"koo1993"},"content":"        Password newPassword \u003d null;"},{"lineNumber":58,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":59,"author":{"gitID":"koo1993"},"content":"        try {"},{"lineNumber":60,"author":{"gitID":"koo1993"},"content":"            newPassword \u003d createAndSendRandomPassword(requestedEmployee);"},{"lineNumber":61,"author":{"gitID":"koo1993"},"content":"        } catch (AddressException ae) {"},{"lineNumber":62,"author":{"gitID":"koo1993"},"content":"            return new CommandResult(String.format(MESSAGE_EMAIL_FAIL, requestedEmployee.getEmail()));"},{"lineNumber":63,"author":{"gitID":"koo1993"},"content":"        } catch (MessagingException e) {"},{"lineNumber":64,"author":{"gitID":"koo1993"},"content":"            return new CommandResult(MESSAGE_SENT_FAIL);"},{"lineNumber":65,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":66,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":67,"author":{"gitID":"koo1993"},"content":"        model.storeResetPassword(requestedEmployee, newPassword);"},{"lineNumber":68,"author":{"gitID":"koo1993"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, requestedEmployee.getEmail()));"},{"lineNumber":69,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":70,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":71,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":72,"author":{"gitID":"koo1993"},"content":"     * Generate random password with 8 characters"},{"lineNumber":73,"author":{"gitID":"koo1993"},"content":"     * @return Password with the new password."},{"lineNumber":74,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":75,"author":{"gitID":"koo1993"},"content":"    private Password createAndSendRandomPassword(Employee requestedEmployee) throws MessagingException {"},{"lineNumber":76,"author":{"gitID":"koo1993"},"content":"        String newPassword \u003d Password.generateRandomPassword();"},{"lineNumber":77,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":78,"author":{"gitID":"koo1993"},"content":"        EmailService email \u003d EmailService.getInstance();"},{"lineNumber":79,"author":{"gitID":"koo1993"},"content":"        email.sendResetPasswordMessage(requestedEmployee.getName().toString(),"},{"lineNumber":80,"author":{"gitID":"koo1993"},"content":"                requestedEmployee.getEmail().toString(), newPassword);"},{"lineNumber":81,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":82,"author":{"gitID":"koo1993"},"content":"        return parsePassword(newPassword);"},{"lineNumber":83,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":84,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":85,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":86,"author":{"gitID":"koo1993"},"content":"    @Override"},{"lineNumber":87,"author":{"gitID":"koo1993"},"content":"    public boolean equals(Object other) {"},{"lineNumber":88,"author":{"gitID":"koo1993"},"content":"        // short circuit if same object"},{"lineNumber":89,"author":{"gitID":"koo1993"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":90,"author":{"gitID":"koo1993"},"content":"            return true;"},{"lineNumber":91,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":92,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":93,"author":{"gitID":"koo1993"},"content":"        // instanceof handles nulls"},{"lineNumber":94,"author":{"gitID":"koo1993"},"content":"        if (!(other instanceof ResetPasswordCommand)) {"},{"lineNumber":95,"author":{"gitID":"koo1993"},"content":"            return false;"},{"lineNumber":96,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":97,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":98,"author":{"gitID":"koo1993"},"content":"        // state check"},{"lineNumber":99,"author":{"gitID":"koo1993"},"content":"        ResetPasswordCommand e \u003d (ResetPasswordCommand) other;"},{"lineNumber":100,"author":{"gitID":"koo1993"},"content":"        return index.equals(e.index);"},{"lineNumber":101,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":102,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":103,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":104,"author":{"gitID":"koo1993"},"content":"     * Parses a {@code String password} into an {@code Password}."},{"lineNumber":105,"author":{"gitID":"koo1993"},"content":"     * Leading and trailing whitespaces will be trimmed."},{"lineNumber":106,"author":{"gitID":"koo1993"},"content":"     *"},{"lineNumber":107,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":108,"author":{"gitID":"koo1993"},"content":"    public static Password parsePassword(String password) {"},{"lineNumber":109,"author":{"gitID":"koo1993"},"content":"        requireNonNull(password);"},{"lineNumber":110,"author":{"gitID":"koo1993"},"content":"        String trimmedPassword \u003d password.trim();"},{"lineNumber":111,"author":{"gitID":"koo1993"},"content":"        Password newPassword \u003d new Password();"},{"lineNumber":112,"author":{"gitID":"koo1993"},"content":"        newPassword.createPassword(trimmedPassword);"},{"lineNumber":113,"author":{"gitID":"koo1993"},"content":"        return newPassword;"},{"lineNumber":114,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":115,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":116,"author":{"gitID":"koo1993"},"content":"}"}],"authorContributionMap":{"koo1993":99,"-":17}},{"path":"src/main/java/seedu/ptman/logic/commands/ViewShiftCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.Messages;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.index.Index;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.exceptions.CommandException;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Shift;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"hzxcaryn"},"content":"//@@author hzxcaryn"},{"lineNumber":11,"author":{"gitID":"hzxcaryn"},"content":"/**"},{"lineNumber":12,"author":{"gitID":"hzxcaryn"},"content":" * Lists all employees in PTMan that belongs to the input shift to the user."},{"lineNumber":13,"author":{"gitID":"hzxcaryn"},"content":" */"},{"lineNumber":14,"author":{"gitID":"hzxcaryn"},"content":"public class ViewShiftCommand extends Command {"},{"lineNumber":15,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":16,"author":{"gitID":"hzxcaryn"},"content":"    public static final String COMMAND_WORD \u003d \"viewshift\";"},{"lineNumber":17,"author":{"gitID":"hzxcaryn"},"content":"    public static final String COMMAND_ALIAS \u003d \"vs\";"},{"lineNumber":18,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":19,"author":{"gitID":"hzxcaryn"},"content":"    public static final String COMMAND_FORMAT \u003d \"SHIFT_INDEX\";"},{"lineNumber":20,"author":{"gitID":"hzxcaryn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"},{"lineNumber":21,"author":{"gitID":"hzxcaryn"},"content":"            + \": Lists the employees that belongs to the input shift index.\\n\""},{"lineNumber":22,"author":{"gitID":"hzxcaryn"},"content":"            + \"Parameters: \""},{"lineNumber":23,"author":{"gitID":"hzxcaryn"},"content":"            + COMMAND_FORMAT"},{"lineNumber":24,"author":{"gitID":"hzxcaryn"},"content":"            + \" (must be a positive integer)\""},{"lineNumber":25,"author":{"gitID":"hzxcaryn"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" 2\";"},{"lineNumber":26,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":27,"author":{"gitID":"hzxcaryn"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all employees in shift %1$s.\";"},{"lineNumber":28,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":29,"author":{"gitID":"hzxcaryn"},"content":"    private final Index targetIndex;"},{"lineNumber":30,"author":{"gitID":"hzxcaryn"},"content":"    private Shift targetShift;"},{"lineNumber":31,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":32,"author":{"gitID":"hzxcaryn"},"content":"    public ViewShiftCommand(Index targetIndex) {"},{"lineNumber":33,"author":{"gitID":"hzxcaryn"},"content":"        this.targetIndex \u003d targetIndex;"},{"lineNumber":34,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":36,"author":{"gitID":"hzxcaryn"},"content":"    @Override"},{"lineNumber":37,"author":{"gitID":"hzxcaryn"},"content":"    public CommandResult execute() throws CommandException {"},{"lineNumber":38,"author":{"gitID":"hzxcaryn"},"content":"        List\u003cShift\u003e shiftList \u003d model.getFilteredShiftList();"},{"lineNumber":39,"author":{"gitID":"hzxcaryn"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d shiftList.size()) {"},{"lineNumber":40,"author":{"gitID":"hzxcaryn"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_SHIFT_DISPLAYED_INDEX);"},{"lineNumber":41,"author":{"gitID":"hzxcaryn"},"content":"        }"},{"lineNumber":42,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":43,"author":{"gitID":"hzxcaryn"},"content":"        targetShift \u003d shiftList.get(targetIndex.getZeroBased());"},{"lineNumber":44,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":45,"author":{"gitID":"hzxcaryn"},"content":"        model.updateFilteredEmployeeList(employee -\u003e targetShift.containsEmployee(employee));"},{"lineNumber":46,"author":{"gitID":"hzxcaryn"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, targetIndex.getOneBased()));"},{"lineNumber":47,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":48,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":49,"author":{"gitID":"hzxcaryn"},"content":"    @Override"},{"lineNumber":50,"author":{"gitID":"hzxcaryn"},"content":"    public boolean equals(Object other) {"},{"lineNumber":51,"author":{"gitID":"hzxcaryn"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":52,"author":{"gitID":"hzxcaryn"},"content":"                || (other instanceof ViewShiftCommand // instanceof handles nulls"},{"lineNumber":53,"author":{"gitID":"hzxcaryn"},"content":"                \u0026\u0026 this.targetIndex.equals(((ViewShiftCommand) other).targetIndex)); // state check"},{"lineNumber":54,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":55,"author":{"gitID":"hzxcaryn"},"content":"}"}],"authorContributionMap":{"hzxcaryn":46,"-":9}},{"path":"src/main/java/seedu/ptman/logic/commands/ExportCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_EMAIL;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.ui.TimetablePanel.TIMETABLE_IMAGE_FILE_NAME_DEFAULT;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.time.LocalDateTime;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.EventsCenter;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.ui.ExportTimetableAsImageAndEmailRequestEvent;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.ui.ExportTimetableAsImageRequestEvent;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Email;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"hzxcaryn"},"content":"//@@author hzxcaryn"},{"lineNumber":15,"author":{"gitID":"hzxcaryn"},"content":"/**"},{"lineNumber":16,"author":{"gitID":"hzxcaryn"},"content":" * Exports current timetable view as an image locally"},{"lineNumber":17,"author":{"gitID":"hzxcaryn"},"content":" */"},{"lineNumber":18,"author":{"gitID":"hzxcaryn"},"content":"public class ExportCommand extends Command {"},{"lineNumber":19,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":20,"author":{"gitID":"hzxcaryn"},"content":"    public static final String COMMAND_WORD \u003d \"export\";"},{"lineNumber":21,"author":{"gitID":"hzxcaryn"},"content":"    public static final String COMMAND_ALIAS \u003d \"exp\";"},{"lineNumber":22,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":23,"author":{"gitID":"hzxcaryn"},"content":"    public static final String COMMAND_FORMAT \u003d \"[\" + PREFIX_EMAIL + \"EMAIL]\";"},{"lineNumber":24,"author":{"gitID":"hzxcaryn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": \""},{"lineNumber":25,"author":{"gitID":"hzxcaryn"},"content":"            + \"Exports timetable as image to the folder your jar file is located. \""},{"lineNumber":26,"author":{"gitID":"hzxcaryn"},"content":"            + \"If email is stated, timetable image will be sent as an attachment to the stated email. \""},{"lineNumber":27,"author":{"gitID":"hzxcaryn"},"content":"            + \"Else, timetable image will be saved locally.\\n\""},{"lineNumber":28,"author":{"gitID":"hzxcaryn"},"content":"            + \"Parameters: \""},{"lineNumber":29,"author":{"gitID":"hzxcaryn"},"content":"            + COMMAND_FORMAT"},{"lineNumber":30,"author":{"gitID":"hzxcaryn"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" \""},{"lineNumber":31,"author":{"gitID":"hzxcaryn"},"content":"            + PREFIX_EMAIL + \"email@example.com\";"},{"lineNumber":32,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":33,"author":{"gitID":"hzxcaryn"},"content":"    public static final String MESSAGE_SAVE_SUCCESS \u003d \"Timetable is successfully exported!\";"},{"lineNumber":34,"author":{"gitID":"hzxcaryn"},"content":"    public static final String MESSAGE_EMAIL_SUCCESS \u003d \"Timetable is sent to your email.\""},{"lineNumber":35,"author":{"gitID":"hzxcaryn"},"content":"            + \"Please check your internet connection if you fail to receive the email.\";"},{"lineNumber":36,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":37,"author":{"gitID":"hzxcaryn"},"content":"    private final Email emailToSendImageTo;"},{"lineNumber":38,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":39,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":40,"author":{"gitID":"hzxcaryn"},"content":"     * Creates an ExportCommand to save the timetable as image locally"},{"lineNumber":41,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":42,"author":{"gitID":"hzxcaryn"},"content":"    public ExportCommand() {"},{"lineNumber":43,"author":{"gitID":"hzxcaryn"},"content":"        emailToSendImageTo \u003d null;"},{"lineNumber":44,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":46,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":47,"author":{"gitID":"hzxcaryn"},"content":"     * Creates an ExportCommand to send the timetable image to the user\u0027s email"},{"lineNumber":48,"author":{"gitID":"hzxcaryn"},"content":"     * @param email"},{"lineNumber":49,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":50,"author":{"gitID":"hzxcaryn"},"content":"    public ExportCommand(Email email) {"},{"lineNumber":51,"author":{"gitID":"hzxcaryn"},"content":"        requireNonNull(email);"},{"lineNumber":52,"author":{"gitID":"hzxcaryn"},"content":"        emailToSendImageTo \u003d email;"},{"lineNumber":53,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":54,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":55,"author":{"gitID":"hzxcaryn"},"content":"    @Override"},{"lineNumber":56,"author":{"gitID":"hzxcaryn"},"content":"    public CommandResult execute() {"},{"lineNumber":57,"author":{"gitID":"hzxcaryn"},"content":"        if (emailToSendImageTo !\u003d null) {"},{"lineNumber":58,"author":{"gitID":"hzxcaryn"},"content":"            EventsCenter.getInstance().post(new ExportTimetableAsImageAndEmailRequestEvent("},{"lineNumber":59,"author":{"gitID":"hzxcaryn"},"content":"                    TIMETABLE_IMAGE_FILE_NAME_DEFAULT + LocalDateTime.now().toString(), emailToSendImageTo));"},{"lineNumber":60,"author":{"gitID":"hzxcaryn"},"content":"            return new CommandResult(MESSAGE_EMAIL_SUCCESS);"},{"lineNumber":61,"author":{"gitID":"hzxcaryn"},"content":"        } else {"},{"lineNumber":62,"author":{"gitID":"hzxcaryn"},"content":"            EventsCenter.getInstance().post(new ExportTimetableAsImageRequestEvent(TIMETABLE_IMAGE_FILE_NAME_DEFAULT));"},{"lineNumber":63,"author":{"gitID":"hzxcaryn"},"content":"            return new CommandResult(MESSAGE_SAVE_SUCCESS);"},{"lineNumber":64,"author":{"gitID":"hzxcaryn"},"content":"        }"},{"lineNumber":65,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":66,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":67,"author":{"gitID":"hzxcaryn"},"content":"    @Override"},{"lineNumber":68,"author":{"gitID":"hzxcaryn"},"content":"    public boolean equals(Object other) {"},{"lineNumber":69,"author":{"gitID":"hzxcaryn"},"content":"        // short circuit if same object"},{"lineNumber":70,"author":{"gitID":"hzxcaryn"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":71,"author":{"gitID":"hzxcaryn"},"content":"            return true;"},{"lineNumber":72,"author":{"gitID":"hzxcaryn"},"content":"        }"},{"lineNumber":73,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":74,"author":{"gitID":"hzxcaryn"},"content":"        // instanceof handles nulls"},{"lineNumber":75,"author":{"gitID":"hzxcaryn"},"content":"        if (!(other instanceof ExportCommand)) {"},{"lineNumber":76,"author":{"gitID":"hzxcaryn"},"content":"            return false;"},{"lineNumber":77,"author":{"gitID":"hzxcaryn"},"content":"        }"},{"lineNumber":78,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":79,"author":{"gitID":"hzxcaryn"},"content":"        // state check"},{"lineNumber":80,"author":{"gitID":"hzxcaryn"},"content":"        ExportCommand e \u003d (ExportCommand) other;"},{"lineNumber":81,"author":{"gitID":"hzxcaryn"},"content":"        return emailToSendImageTo.equals(e.emailToSendImageTo);"},{"lineNumber":82,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":83,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":84,"author":{"gitID":"hzxcaryn"},"content":"}"}],"authorContributionMap":{"hzxcaryn":71,"-":13}},{"path":"src/main/java/seedu/ptman/logic/commands/DeselectCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"hzxcaryn"},"content":"import seedu.ptman.commons.core.EventsCenter;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.index.Index;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.ui.JumpToListRequestEvent;"},{"lineNumber":6,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":8,"author":{"gitID":"-"},"content":" * Returns back to main timetable view (of current week) in PTMan"},{"lineNumber":9,"author":{"gitID":"-"},"content":" */"},{"lineNumber":10,"author":{"gitID":"-"},"content":"public class DeselectCommand extends Command {"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"    public static final String COMMAND_WORD \u003d \"deselect\";"},{"lineNumber":13,"author":{"gitID":"-"},"content":"    public static final String COMMAND_ALIAS \u003d \"dsel\";"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Deselected any selected employees. Returned to top of employee list.\";"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":18,"author":{"gitID":"-"},"content":"    public CommandResult execute() {"},{"lineNumber":19,"author":{"gitID":"hzxcaryn"},"content":"        EventsCenter eventsCenter \u003d EventsCenter.getInstance();"},{"lineNumber":20,"author":{"gitID":"hzxcaryn"},"content":"        eventsCenter.post(new JumpToListRequestEvent(Index.fromZeroBased(0), false));"},{"lineNumber":21,"author":{"gitID":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);"},{"lineNumber":22,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":23,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"hzxcaryn":4,"-":19}},{"path":"src/main/java/seedu/ptman/logic/commands/AddShiftCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_ACCESS_DENIED;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_CAPACITY;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_DATE;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_TIME_END;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_TIME_START;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import java.time.LocalDate;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.exceptions.CommandException;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Shift;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Time;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.exceptions.DuplicateShiftException;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"shanwpf"},"content":"//@@author shanwpf"},{"lineNumber":18,"author":{"gitID":"shanwpf"},"content":"/**"},{"lineNumber":19,"author":{"gitID":"shanwpf"},"content":" * Adds a shift to PTMan."},{"lineNumber":20,"author":{"gitID":"shanwpf"},"content":" */"},{"lineNumber":21,"author":{"gitID":"shanwpf"},"content":"public class AddShiftCommand extends UndoableCommand {"},{"lineNumber":22,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":23,"author":{"gitID":"shanwpf"},"content":"    public static final String COMMAND_WORD \u003d \"addshift\";"},{"lineNumber":24,"author":{"gitID":"shanwpf"},"content":"    public static final String COMMAND_ALIAS \u003d \"as\";"},{"lineNumber":25,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":26,"author":{"gitID":"shanwpf"},"content":"    public static final String COMMAND_FORMAT \u003d PREFIX_DATE + \"DATE (in dd-mm-yy format) \""},{"lineNumber":27,"author":{"gitID":"shanwpf"},"content":"            + PREFIX_TIME_START + \"START_TIME \""},{"lineNumber":28,"author":{"gitID":"shanwpf"},"content":"            + PREFIX_TIME_END + \"END_TIME \""},{"lineNumber":29,"author":{"gitID":"shanwpf"},"content":"            + PREFIX_CAPACITY + \"CAPACITY \";"},{"lineNumber":30,"author":{"gitID":"shanwpf"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a shift. \""},{"lineNumber":31,"author":{"gitID":"shanwpf"},"content":"            + \"Parameters: \""},{"lineNumber":32,"author":{"gitID":"shanwpf"},"content":"            + COMMAND_FORMAT"},{"lineNumber":33,"author":{"gitID":"shanwpf"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" \""},{"lineNumber":34,"author":{"gitID":"shanwpf"},"content":"            + PREFIX_DATE + \"12-03-18 \""},{"lineNumber":35,"author":{"gitID":"shanwpf"},"content":"            + PREFIX_TIME_START + \"0900 \""},{"lineNumber":36,"author":{"gitID":"shanwpf"},"content":"            + PREFIX_TIME_END + \"1600 \""},{"lineNumber":37,"author":{"gitID":"shanwpf"},"content":"            + PREFIX_CAPACITY + \"5 \";"},{"lineNumber":38,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":39,"author":{"gitID":"shanwpf"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New shift added: %1$s\";"},{"lineNumber":40,"author":{"gitID":"shanwpf"},"content":"    public static final String MESSAGE_DUPLICATE_SHIFT \u003d \"This shift already exists in PTMan\";"},{"lineNumber":41,"author":{"gitID":"shanwpf"},"content":"    public static final String MESSAGE_DATE_OVER \u003d \"You cannot add a shift to a date that is already over\";"},{"lineNumber":42,"author":{"gitID":"shanwpf"},"content":"    public static final String MESSAGE_INVALID_TIME \u003d \"The start time of the shift must be before the end time\";"},{"lineNumber":43,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":44,"author":{"gitID":"shanwpf"},"content":"    private final Shift toAdd;"},{"lineNumber":45,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":46,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":47,"author":{"gitID":"shanwpf"},"content":"     * Creates an AddShiftCommand to add the specified {@code Shift}"},{"lineNumber":48,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":49,"author":{"gitID":"shanwpf"},"content":"    public AddShiftCommand(Shift shift) {"},{"lineNumber":50,"author":{"gitID":"shanwpf"},"content":"        requireNonNull(shift);"},{"lineNumber":51,"author":{"gitID":"shanwpf"},"content":"        toAdd \u003d shift;"},{"lineNumber":52,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":53,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":54,"author":{"gitID":"shanwpf"},"content":"    @Override"},{"lineNumber":55,"author":{"gitID":"shanwpf"},"content":"    public CommandResult executeUndoableCommand() throws CommandException {"},{"lineNumber":56,"author":{"gitID":"shanwpf"},"content":"        requireNonNull(model);"},{"lineNumber":57,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":58,"author":{"gitID":"shanwpf"},"content":"        if (!model.isAdminMode()) {"},{"lineNumber":59,"author":{"gitID":"shanwpf"},"content":"            throw new CommandException(MESSAGE_ACCESS_DENIED);"},{"lineNumber":60,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":61,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":62,"author":{"gitID":"shanwpf"},"content":"        LocalDate shiftDate \u003d toAdd.getDate().getLocalDate();"},{"lineNumber":63,"author":{"gitID":"shanwpf"},"content":"        if (shiftDate.isBefore(LocalDate.now())) {"},{"lineNumber":64,"author":{"gitID":"shanwpf"},"content":"            throw new CommandException(MESSAGE_DATE_OVER);"},{"lineNumber":65,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":66,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":67,"author":{"gitID":"shanwpf"},"content":"        Time startTime \u003d toAdd.getStartTime();"},{"lineNumber":68,"author":{"gitID":"shanwpf"},"content":"        Time endTime \u003d toAdd.getEndTime();"},{"lineNumber":69,"author":{"gitID":"shanwpf"},"content":"        if (startTime.isAfter(endTime)) {"},{"lineNumber":70,"author":{"gitID":"shanwpf"},"content":"            throw new CommandException(MESSAGE_INVALID_TIME);"},{"lineNumber":71,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":72,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":73,"author":{"gitID":"shanwpf"},"content":"        try {"},{"lineNumber":74,"author":{"gitID":"shanwpf"},"content":"            model.addShift(toAdd);"},{"lineNumber":75,"author":{"gitID":"shanwpf"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));"},{"lineNumber":76,"author":{"gitID":"shanwpf"},"content":"        } catch (DuplicateShiftException e) {"},{"lineNumber":77,"author":{"gitID":"shanwpf"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_SHIFT);"},{"lineNumber":78,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":79,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":80,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":81,"author":{"gitID":"shanwpf"},"content":"    @Override"},{"lineNumber":82,"author":{"gitID":"shanwpf"},"content":"    public boolean equals(Object other) {"},{"lineNumber":83,"author":{"gitID":"shanwpf"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":84,"author":{"gitID":"shanwpf"},"content":"                || (other instanceof AddShiftCommand // instanceof handles nulls"},{"lineNumber":85,"author":{"gitID":"shanwpf"},"content":"                \u0026\u0026 toAdd.equals(((AddShiftCommand) other).toAdd));"},{"lineNumber":86,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":87,"author":{"gitID":"shanwpf"},"content":"}"}],"authorContributionMap":{"shanwpf":71,"-":16}},{"path":"src/main/java/seedu/ptman/logic/commands/UnapplyCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_PASSWORD;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.Messages;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.index.Index;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.exceptions.CommandException;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.exceptions.InvalidPasswordException;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.exceptions.MissingPasswordException;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Employee;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.exceptions.EmployeeNotFoundException;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Shift;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.exceptions.DuplicateShiftException;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.exceptions.ShiftNotFoundException;"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"shanwpf"},"content":"//@@author shanwpf"},{"lineNumber":23,"author":{"gitID":"shanwpf"},"content":"/**"},{"lineNumber":24,"author":{"gitID":"shanwpf"},"content":" * Registers an employee to a shift identified using their last displayed index from PTMan."},{"lineNumber":25,"author":{"gitID":"shanwpf"},"content":" */"},{"lineNumber":26,"author":{"gitID":"shanwpf"},"content":"public class UnapplyCommand extends UndoableCommand {"},{"lineNumber":27,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":28,"author":{"gitID":"shanwpf"},"content":"    public static final String COMMAND_WORD \u003d \"unapply\";"},{"lineNumber":29,"author":{"gitID":"shanwpf"},"content":"    public static final String COMMAND_ALIAS \u003d \"uap\";"},{"lineNumber":30,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":31,"author":{"gitID":"shanwpf"},"content":"    public static final String COMMAND_FORMAT \u003d \"EMPLOYEE_INDEX \""},{"lineNumber":32,"author":{"gitID":"shanwpf"},"content":"            + \"SHIFT_INDEX \""},{"lineNumber":33,"author":{"gitID":"shanwpf"},"content":"            + \"[\" + PREFIX_PASSWORD + \"PASSWORD]\";"},{"lineNumber":34,"author":{"gitID":"shanwpf"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"},{"lineNumber":35,"author":{"gitID":"shanwpf"},"content":"            + \": Removes an employee from the shift identified by the index number.\\n\""},{"lineNumber":36,"author":{"gitID":"shanwpf"},"content":"            + \"Parameters: \""},{"lineNumber":37,"author":{"gitID":"shanwpf"},"content":"            + COMMAND_FORMAT"},{"lineNumber":38,"author":{"gitID":"shanwpf"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" 1 1 \" + PREFIX_PASSWORD + \"hunter2\";"},{"lineNumber":39,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":40,"author":{"gitID":"shanwpf"},"content":"    public static final String MESSAGE_UNAPPLY_SHIFT_SUCCESS \u003d \"Employee %1$s removed from shift %2$s\";"},{"lineNumber":41,"author":{"gitID":"shanwpf"},"content":"    public static final String MESSAGE_EMPLOYEE_NOT_FOUND \u003d \"Employee is not in the shift.\";"},{"lineNumber":42,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":43,"author":{"gitID":"shanwpf"},"content":"    private final Index employeeIndex;"},{"lineNumber":44,"author":{"gitID":"shanwpf"},"content":"    private final Index shiftIndex;"},{"lineNumber":45,"author":{"gitID":"shanwpf"},"content":"    private final Optional\u003cPassword\u003e optionalPassword;"},{"lineNumber":46,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":47,"author":{"gitID":"shanwpf"},"content":"    private Employee applicant;"},{"lineNumber":48,"author":{"gitID":"shanwpf"},"content":"    private Shift shiftToUnapply;"},{"lineNumber":49,"author":{"gitID":"shanwpf"},"content":"    private Shift editedShift;"},{"lineNumber":50,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":51,"author":{"gitID":"shanwpf"},"content":"    public UnapplyCommand(Index employeeIndex, Index shiftIndex, Optional\u003cPassword\u003e optionalPassword) {"},{"lineNumber":52,"author":{"gitID":"shanwpf"},"content":"        this.optionalPassword \u003d optionalPassword;"},{"lineNumber":53,"author":{"gitID":"shanwpf"},"content":"        this.employeeIndex \u003d employeeIndex;"},{"lineNumber":54,"author":{"gitID":"shanwpf"},"content":"        this.shiftIndex \u003d shiftIndex;"},{"lineNumber":55,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":57,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":58,"author":{"gitID":"shanwpf"},"content":"    @Override"},{"lineNumber":59,"author":{"gitID":"shanwpf"},"content":"    public CommandResult executeUndoableCommand() throws CommandException {"},{"lineNumber":60,"author":{"gitID":"shanwpf"},"content":"        requireNonNull(applicant);"},{"lineNumber":61,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":62,"author":{"gitID":"shanwpf"},"content":"        // Check if password is present when not in admin mode"},{"lineNumber":63,"author":{"gitID":"shanwpf"},"content":"        if (!model.isAdminMode()) {"},{"lineNumber":64,"author":{"gitID":"shanwpf"},"content":"            if (!optionalPassword.isPresent()) {"},{"lineNumber":65,"author":{"gitID":"shanwpf"},"content":"                throw new MissingPasswordException();"},{"lineNumber":66,"author":{"gitID":"shanwpf"},"content":"            }"},{"lineNumber":67,"author":{"gitID":"shanwpf"},"content":"            if (!applicant.isCorrectPassword(optionalPassword.get())) {"},{"lineNumber":68,"author":{"gitID":"shanwpf"},"content":"                throw new InvalidPasswordException();"},{"lineNumber":69,"author":{"gitID":"shanwpf"},"content":"            }"},{"lineNumber":70,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":71,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":72,"author":{"gitID":"shanwpf"},"content":"        try {"},{"lineNumber":73,"author":{"gitID":"shanwpf"},"content":"            model.updateShift(shiftToUnapply, editedShift);"},{"lineNumber":74,"author":{"gitID":"shanwpf"},"content":"        } catch (ShiftNotFoundException e) {"},{"lineNumber":75,"author":{"gitID":"shanwpf"},"content":"            throw new AssertionError(\"Shift not found\");"},{"lineNumber":76,"author":{"gitID":"shanwpf"},"content":"        } catch (DuplicateShiftException e) {"},{"lineNumber":77,"author":{"gitID":"shanwpf"},"content":"            throw new AssertionError(\"Duplicate shift\");"},{"lineNumber":78,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":79,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":80,"author":{"gitID":"shanwpf"},"content":"        return new CommandResult(String.format(MESSAGE_UNAPPLY_SHIFT_SUCCESS,"},{"lineNumber":81,"author":{"gitID":"shanwpf"},"content":"                applicant.getName(), shiftIndex.getOneBased()));"},{"lineNumber":82,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":83,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":84,"author":{"gitID":"shanwpf"},"content":"    @Override"},{"lineNumber":85,"author":{"gitID":"shanwpf"},"content":"    protected void preprocessUndoableCommand() throws CommandException {"},{"lineNumber":86,"author":{"gitID":"shanwpf"},"content":"        List\u003cEmployee\u003e lastShownList \u003d model.getFilteredEmployeeList();"},{"lineNumber":87,"author":{"gitID":"shanwpf"},"content":"        List\u003cShift\u003e shiftList \u003d model.getFilteredShiftList();"},{"lineNumber":88,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":89,"author":{"gitID":"shanwpf"},"content":"        if (employeeIndex.getZeroBased() \u003e\u003d lastShownList.size()) {"},{"lineNumber":90,"author":{"gitID":"shanwpf"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX);"},{"lineNumber":91,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":92,"author":{"gitID":"shanwpf"},"content":"        if (shiftIndex.getZeroBased() \u003e\u003d shiftList.size()) {"},{"lineNumber":93,"author":{"gitID":"shanwpf"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_SHIFT_DISPLAYED_INDEX);"},{"lineNumber":94,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":95,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":96,"author":{"gitID":"shanwpf"},"content":"        applicant \u003d lastShownList.get(employeeIndex.getZeroBased());"},{"lineNumber":97,"author":{"gitID":"shanwpf"},"content":"        shiftToUnapply \u003d shiftList.get(shiftIndex.getZeroBased());"},{"lineNumber":98,"author":{"gitID":"shanwpf"},"content":"        editedShift \u003d new Shift(shiftToUnapply);"},{"lineNumber":99,"author":{"gitID":"shanwpf"},"content":"        try {"},{"lineNumber":100,"author":{"gitID":"shanwpf"},"content":"            editedShift.removeEmployee(applicant);"},{"lineNumber":101,"author":{"gitID":"shanwpf"},"content":"        } catch (EmployeeNotFoundException e) {"},{"lineNumber":102,"author":{"gitID":"shanwpf"},"content":"            throw new CommandException(MESSAGE_EMPLOYEE_NOT_FOUND);"},{"lineNumber":103,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":104,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":105,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":106,"author":{"gitID":"shanwpf"},"content":"    @Override"},{"lineNumber":107,"author":{"gitID":"shanwpf"},"content":"    public boolean equals(Object o) {"},{"lineNumber":108,"author":{"gitID":"shanwpf"},"content":"        if (this \u003d\u003d o) {"},{"lineNumber":109,"author":{"gitID":"shanwpf"},"content":"            return true;"},{"lineNumber":110,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":111,"author":{"gitID":"shanwpf"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"},{"lineNumber":112,"author":{"gitID":"shanwpf"},"content":"            return false;"},{"lineNumber":113,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":114,"author":{"gitID":"shanwpf"},"content":"        UnapplyCommand that \u003d (UnapplyCommand) o;"},{"lineNumber":115,"author":{"gitID":"shanwpf"},"content":"        return Objects.equals(employeeIndex, that.employeeIndex)"},{"lineNumber":116,"author":{"gitID":"shanwpf"},"content":"                \u0026\u0026 Objects.equals(shiftIndex, that.shiftIndex)"},{"lineNumber":117,"author":{"gitID":"shanwpf"},"content":"                \u0026\u0026 Objects.equals(applicant, that.applicant)"},{"lineNumber":118,"author":{"gitID":"shanwpf"},"content":"                \u0026\u0026 Objects.equals(shiftToUnapply, that.shiftToUnapply);"},{"lineNumber":119,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":120,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":121,"author":{"gitID":"shanwpf"},"content":"    @Override"},{"lineNumber":122,"author":{"gitID":"shanwpf"},"content":"    public int hashCode() {"},{"lineNumber":123,"author":{"gitID":"shanwpf"},"content":"        return Objects.hash(employeeIndex, shiftIndex, applicant, shiftToUnapply, optionalPassword);"},{"lineNumber":124,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":125,"author":{"gitID":"shanwpf"},"content":"}"}],"authorContributionMap":{"shanwpf":104,"-":21}},{"path":"src/main/java/seedu/ptman/logic/commands/LogInAdminCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"hzxcaryn"},"content":"import seedu.ptman.commons.core.EventsCenter;"},{"lineNumber":6,"author":{"gitID":"hzxcaryn"},"content":"import seedu.ptman.commons.events.model.UserModeChangedEvent;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.exceptions.CommandException;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.exceptions.InvalidPasswordException;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"koo1993"},"content":"//@@author koo1993"},{"lineNumber":12,"author":{"gitID":"koo1993"},"content":"/**"},{"lineNumber":13,"author":{"gitID":"koo1993"},"content":" * Login command for admin mode access."},{"lineNumber":14,"author":{"gitID":"koo1993"},"content":" */"},{"lineNumber":15,"author":{"gitID":"koo1993"},"content":"public class LogInAdminCommand extends Command {"},{"lineNumber":16,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":17,"author":{"gitID":"koo1993"},"content":"    public static final String COMMAND_WORD \u003d \"login\";"},{"lineNumber":18,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":19,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":20,"author":{"gitID":"koo1993"},"content":"    public static final String COMMAND_FORMAT \u003d \"pw/ADMIN_PASSWORD\";"},{"lineNumber":21,"author":{"gitID":"koo1993"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"},{"lineNumber":22,"author":{"gitID":"koo1993"},"content":"            + \": Log in to access admin command.\\n\""},{"lineNumber":23,"author":{"gitID":"koo1993"},"content":"            + \"Parameters: \""},{"lineNumber":24,"author":{"gitID":"koo1993"},"content":"            + COMMAND_FORMAT"},{"lineNumber":25,"author":{"gitID":"koo1993"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" pw/hunter2\";"},{"lineNumber":26,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":27,"author":{"gitID":"koo1993"},"content":"    public static final String MESSAGE_LOGGEDIN \u003d \"You are already logged in\";"},{"lineNumber":28,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":29,"author":{"gitID":"koo1993"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"You are now in admin mode. \\n\""},{"lineNumber":30,"author":{"gitID":"koo1993"},"content":"            + \"Please remember to log out after amending all the data.\";"},{"lineNumber":31,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":32,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":33,"author":{"gitID":"koo1993"},"content":"    private final Password toCheck;"},{"lineNumber":34,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":35,"author":{"gitID":"koo1993"},"content":"    public LogInAdminCommand(Password password) {"},{"lineNumber":36,"author":{"gitID":"koo1993"},"content":"        requireNonNull(password);"},{"lineNumber":37,"author":{"gitID":"koo1993"},"content":"        toCheck \u003d password;"},{"lineNumber":38,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":40,"author":{"gitID":"koo1993"},"content":"    @Override"},{"lineNumber":41,"author":{"gitID":"koo1993"},"content":"    public CommandResult execute() throws CommandException {"},{"lineNumber":42,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":43,"author":{"gitID":"koo1993"},"content":"        if (model.isAdminMode()) {"},{"lineNumber":44,"author":{"gitID":"koo1993"},"content":"            return new CommandResult(MESSAGE_LOGGEDIN);"},{"lineNumber":45,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":46,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":47,"author":{"gitID":"koo1993"},"content":"        if (!model.setTrueAdminMode(toCheck)) {"},{"lineNumber":48,"author":{"gitID":"koo1993"},"content":"            throw new InvalidPasswordException();"},{"lineNumber":49,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":50,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":51,"author":{"gitID":"koo1993"},"content":"        EventsCenter.getInstance().post(new UserModeChangedEvent(true));"},{"lineNumber":52,"author":{"gitID":"koo1993"},"content":"        return new CommandResult(MESSAGE_SUCCESS);"},{"lineNumber":53,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":54,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":55,"author":{"gitID":"koo1993"},"content":"    @Override"},{"lineNumber":56,"author":{"gitID":"koo1993"},"content":"    public boolean equals(Object other) {"},{"lineNumber":57,"author":{"gitID":"koo1993"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":58,"author":{"gitID":"koo1993"},"content":"                || (other instanceof LogInAdminCommand // instanceof handles nulls"},{"lineNumber":59,"author":{"gitID":"koo1993"},"content":"                \u0026\u0026 toCheck.equals(((LogInAdminCommand) other).toCheck));"},{"lineNumber":60,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":61,"author":{"gitID":"koo1993"},"content":"}"}],"authorContributionMap":{"koo1993":51,"hzxcaryn":2,"-":8}},{"path":"src/main/java/seedu/ptman/logic/commands/AddSalaryCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_ACCESS_DENIED;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_SALARY;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.model.Model.PREDICATE_SHOW_ALL_EMPLOYEES;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import java.util.Set;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.Messages;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.index.Index;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.exceptions.CommandException;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Address;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Email;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Employee;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Name;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Phone;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Salary;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.exceptions.DuplicateEmployeeException;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.exceptions.EmployeeNotFoundException;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.ptman.model.tag.Tag;"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"koo1993"},"content":"//@@author koo1993"},{"lineNumber":27,"author":{"gitID":"koo1993"},"content":"/**"},{"lineNumber":28,"author":{"gitID":"koo1993"},"content":" * Increase the salary of an existing employee in the ptman."},{"lineNumber":29,"author":{"gitID":"koo1993"},"content":" */"},{"lineNumber":30,"author":{"gitID":"koo1993"},"content":"public class AddSalaryCommand extends UndoableCommand {"},{"lineNumber":31,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":32,"author":{"gitID":"koo1993"},"content":"    public static final String COMMAND_WORD \u003d \"addsalary\";"},{"lineNumber":33,"author":{"gitID":"koo1993"},"content":"    public static final String COMMAND_ALIAS \u003d \"adds\";"},{"lineNumber":34,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":35,"author":{"gitID":"koo1993"},"content":"    public static final String COMMAND_FORMAT \u003d \"EMPLOYEE_INDEX \" + PREFIX_SALARY + \"INCREASEAMOUNT \";"},{"lineNumber":36,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":37,"author":{"gitID":"koo1993"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds the salary of the employee identified \""},{"lineNumber":38,"author":{"gitID":"koo1993"},"content":"            + \"by the index number used in the last employee listing. \""},{"lineNumber":39,"author":{"gitID":"koo1993"},"content":"            + \"Existing values will be added by the input values.\\n\""},{"lineNumber":40,"author":{"gitID":"koo1993"},"content":"            + \"Parameters: \""},{"lineNumber":41,"author":{"gitID":"koo1993"},"content":"            + COMMAND_FORMAT"},{"lineNumber":42,"author":{"gitID":"koo1993"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" 1 \""},{"lineNumber":43,"author":{"gitID":"koo1993"},"content":"            + PREFIX_SALARY + \"100 \";"},{"lineNumber":44,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":45,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":46,"author":{"gitID":"koo1993"},"content":"    public static final String MESSAGE_EDIT_EMPLOYEE_SUCCESS \u003d \"Added $%s to %s\u0027s Pay\";"},{"lineNumber":47,"author":{"gitID":"koo1993"},"content":"    public static final String MESSAGE_DUPLICATE_EMPLOYEE \u003d \"This employee already exists in PTMan.\";"},{"lineNumber":48,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":49,"author":{"gitID":"koo1993"},"content":"    private final Index index;"},{"lineNumber":50,"author":{"gitID":"koo1993"},"content":"    private Salary salaryToAdd;"},{"lineNumber":51,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":52,"author":{"gitID":"koo1993"},"content":"    private Employee employeeToEdit;"},{"lineNumber":53,"author":{"gitID":"koo1993"},"content":"    private Employee editedEmployee;"},{"lineNumber":54,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":55,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":56,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":57,"author":{"gitID":"koo1993"},"content":"     * @param index of the employee in the filtered employee list to edit"},{"lineNumber":58,"author":{"gitID":"koo1993"},"content":"     * @param salaryToAdd amount of salary to increase with."},{"lineNumber":59,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":60,"author":{"gitID":"koo1993"},"content":"    public AddSalaryCommand(Index index, Salary salaryToAdd) {"},{"lineNumber":61,"author":{"gitID":"koo1993"},"content":"        requireNonNull(index);"},{"lineNumber":62,"author":{"gitID":"koo1993"},"content":"        requireNonNull(salaryToAdd);"},{"lineNumber":63,"author":{"gitID":"koo1993"},"content":"        this.index \u003d index;"},{"lineNumber":64,"author":{"gitID":"koo1993"},"content":"        this.salaryToAdd \u003d salaryToAdd;"},{"lineNumber":65,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":66,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":67,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":68,"author":{"gitID":"koo1993"},"content":"    @Override"},{"lineNumber":69,"author":{"gitID":"koo1993"},"content":"    public CommandResult executeUndoableCommand() throws CommandException {"},{"lineNumber":70,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":71,"author":{"gitID":"koo1993"},"content":"        if (!model.isAdminMode()) {"},{"lineNumber":72,"author":{"gitID":"koo1993"},"content":"            throw new CommandException(MESSAGE_ACCESS_DENIED);"},{"lineNumber":73,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":74,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":75,"author":{"gitID":"koo1993"},"content":"        try {"},{"lineNumber":76,"author":{"gitID":"koo1993"},"content":"            model.updateEmployee(employeeToEdit, editedEmployee);"},{"lineNumber":77,"author":{"gitID":"koo1993"},"content":"        } catch (DuplicateEmployeeException dpe) {"},{"lineNumber":78,"author":{"gitID":"koo1993"},"content":"            throw new AssertionError(\"The target employee should not be duplicated\");"},{"lineNumber":79,"author":{"gitID":"koo1993"},"content":"        } catch (EmployeeNotFoundException pnfe) {"},{"lineNumber":80,"author":{"gitID":"koo1993"},"content":"            throw new AssertionError(\"The target employee cannot be missing\");"},{"lineNumber":81,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":82,"author":{"gitID":"koo1993"},"content":"        model.updateFilteredEmployeeList(PREDICATE_SHOW_ALL_EMPLOYEES);"},{"lineNumber":83,"author":{"gitID":"koo1993"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_EMPLOYEE_SUCCESS,"},{"lineNumber":84,"author":{"gitID":"koo1993"},"content":"                salaryToAdd.toString(), editedEmployee.getName()));"},{"lineNumber":85,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":86,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":87,"author":{"gitID":"koo1993"},"content":"    @Override"},{"lineNumber":88,"author":{"gitID":"koo1993"},"content":"    protected void preprocessUndoableCommand() throws CommandException {"},{"lineNumber":89,"author":{"gitID":"koo1993"},"content":"        List\u003cEmployee\u003e lastShownList \u003d model.getFilteredEmployeeList();"},{"lineNumber":90,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":91,"author":{"gitID":"koo1993"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {"},{"lineNumber":92,"author":{"gitID":"koo1993"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX);"},{"lineNumber":93,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":94,"author":{"gitID":"koo1993"},"content":"        employeeToEdit \u003d lastShownList.get(index.getZeroBased());"},{"lineNumber":95,"author":{"gitID":"koo1993"},"content":"        editedEmployee \u003d createAddedSalaryEmployee(employeeToEdit, salaryToAdd);"},{"lineNumber":96,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":97,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":98,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":99,"author":{"gitID":"koo1993"},"content":"     * Creates and returns a {@code Employee} with the details of {@code employeeToEdit}"},{"lineNumber":100,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":101,"author":{"gitID":"koo1993"},"content":"    private static Employee createAddedSalaryEmployee(Employee employeeToEdit,"},{"lineNumber":102,"author":{"gitID":"koo1993"},"content":"                                                 Salary salaryToAdd) {"},{"lineNumber":103,"author":{"gitID":"koo1993"},"content":"        assert employeeToEdit !\u003d null;"},{"lineNumber":104,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":105,"author":{"gitID":"koo1993"},"content":"        Name name \u003d employeeToEdit.getName();"},{"lineNumber":106,"author":{"gitID":"koo1993"},"content":"        Phone phone \u003d employeeToEdit.getPhone();"},{"lineNumber":107,"author":{"gitID":"koo1993"},"content":"        Email email \u003d employeeToEdit.getEmail();"},{"lineNumber":108,"author":{"gitID":"koo1993"},"content":"        Address address \u003d employeeToEdit.getAddress();"},{"lineNumber":109,"author":{"gitID":"koo1993"},"content":"        Set\u003cTag\u003e tags \u003d employeeToEdit.getTags();"},{"lineNumber":110,"author":{"gitID":"koo1993"},"content":"        Password password \u003d employeeToEdit.getPassword();"},{"lineNumber":111,"author":{"gitID":"koo1993"},"content":"        Salary salary \u003d addSalary(employeeToEdit.getSalary(), salaryToAdd);"},{"lineNumber":112,"author":{"gitID":"koo1993"},"content":"        return new Employee(name, phone, email, address, salary, password, tags);"},{"lineNumber":113,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":114,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":115,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":116,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":117,"author":{"gitID":"koo1993"},"content":"     * Adds up two salary."},{"lineNumber":118,"author":{"gitID":"koo1993"},"content":"     * @param salary"},{"lineNumber":119,"author":{"gitID":"koo1993"},"content":"     * @param salaryToadd"},{"lineNumber":120,"author":{"gitID":"koo1993"},"content":"     * @return"},{"lineNumber":121,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":122,"author":{"gitID":"koo1993"},"content":"    private static Salary addSalary(Salary salary, Salary salaryToadd) {"},{"lineNumber":123,"author":{"gitID":"koo1993"},"content":"        int salaryAmount \u003d Integer.parseInt(salary.value);"},{"lineNumber":124,"author":{"gitID":"koo1993"},"content":"        salaryAmount +\u003d Integer.parseInt(salaryToadd.value);"},{"lineNumber":125,"author":{"gitID":"koo1993"},"content":"        return new Salary(Integer.toString(salaryAmount));"},{"lineNumber":126,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":127,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":128,"author":{"gitID":"koo1993"},"content":"    @Override"},{"lineNumber":129,"author":{"gitID":"koo1993"},"content":"    public boolean equals(Object other) {"},{"lineNumber":130,"author":{"gitID":"koo1993"},"content":"        // short circuit if same object"},{"lineNumber":131,"author":{"gitID":"koo1993"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":132,"author":{"gitID":"koo1993"},"content":"            return true;"},{"lineNumber":133,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":134,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":135,"author":{"gitID":"koo1993"},"content":"        // instanceof handles nulls"},{"lineNumber":136,"author":{"gitID":"koo1993"},"content":"        if (!(other instanceof AddSalaryCommand)) {"},{"lineNumber":137,"author":{"gitID":"koo1993"},"content":"            return false;"},{"lineNumber":138,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":139,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":140,"author":{"gitID":"koo1993"},"content":"        // state check"},{"lineNumber":141,"author":{"gitID":"koo1993"},"content":"        AddSalaryCommand e \u003d (AddSalaryCommand) other;"},{"lineNumber":142,"author":{"gitID":"koo1993"},"content":"        return index.equals(e.index)"},{"lineNumber":143,"author":{"gitID":"koo1993"},"content":"                \u0026\u0026 salaryToAdd.equals(e.salaryToAdd)"},{"lineNumber":144,"author":{"gitID":"koo1993"},"content":"                \u0026\u0026 Objects.equals(employeeToEdit, e.employeeToEdit);"},{"lineNumber":145,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":146,"author":{"gitID":"koo1993"},"content":"}"}],"authorContributionMap":{"koo1993":121,"-":25}},{"path":"src/main/java/seedu/ptman/logic/commands/ChangeAdminPasswordCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_ACCESS_DENIED;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.CommandHistory;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.UndoRedoStack;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.exceptions.CommandException;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.exceptions.InvalidPasswordException;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Model;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"koo1993"},"content":"//@@author koo1993"},{"lineNumber":16,"author":{"gitID":"koo1993"},"content":"/**"},{"lineNumber":17,"author":{"gitID":"koo1993"},"content":" * Change password of the outlet in PTMan."},{"lineNumber":18,"author":{"gitID":"koo1993"},"content":" */"},{"lineNumber":19,"author":{"gitID":"koo1993"},"content":"public class ChangeAdminPasswordCommand extends Command {"},{"lineNumber":20,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":21,"author":{"gitID":"koo1993"},"content":"    public static final String COMMAND_WORD \u003d \"changeadminpw\";"},{"lineNumber":22,"author":{"gitID":"koo1993"},"content":"    public static final String COMMAND_ALIAS \u003d \"cap\";"},{"lineNumber":23,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":24,"author":{"gitID":"koo1993"},"content":"    public static final String COMMAND_FORMAT \u003d \"pw/CURRENT_PASSWORD \""},{"lineNumber":25,"author":{"gitID":"koo1993"},"content":"            + \"pw/NEW_PASSWORD \"  + \"pw/CONFIRM_NEW_PASSWORD\";"},{"lineNumber":26,"author":{"gitID":"koo1993"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Changes admin password.\\n\""},{"lineNumber":27,"author":{"gitID":"koo1993"},"content":"            + \"Parameters: \""},{"lineNumber":28,"author":{"gitID":"koo1993"},"content":"            + COMMAND_FORMAT"},{"lineNumber":29,"author":{"gitID":"koo1993"},"content":"            + \"\\nExample: \""},{"lineNumber":30,"author":{"gitID":"koo1993"},"content":"            + \"pw/DEFAULT1 \""},{"lineNumber":31,"author":{"gitID":"koo1993"},"content":"            + \"pw/hunter22 \"  + \"pw/hunter22\";"},{"lineNumber":32,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":33,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":34,"author":{"gitID":"koo1993"},"content":"    public static final String MESSAGE_INVALID_CONFIMREDPASSWORD \u003d \"New password entered are not the same.\";"},{"lineNumber":35,"author":{"gitID":"koo1993"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Your master password is changed.\";"},{"lineNumber":36,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":37,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":38,"author":{"gitID":"koo1993"},"content":"    private final ArrayList\u003cString\u003e passwords;"},{"lineNumber":39,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":40,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":41,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":42,"author":{"gitID":"koo1993"},"content":"     * @param passwords should contain 3 password String in the sequence of:"},{"lineNumber":43,"author":{"gitID":"koo1993"},"content":"     *                 confirmed password, new password, confirmed new password"},{"lineNumber":44,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":45,"author":{"gitID":"koo1993"},"content":"    public ChangeAdminPasswordCommand(ArrayList\u003cString\u003e passwords) {"},{"lineNumber":46,"author":{"gitID":"koo1993"},"content":"        requireNonNull(passwords);"},{"lineNumber":47,"author":{"gitID":"koo1993"},"content":"        if (passwords.size() \u003c 3) {"},{"lineNumber":48,"author":{"gitID":"koo1993"},"content":"            throw new IndexOutOfBoundsException();"},{"lineNumber":49,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":50,"author":{"gitID":"koo1993"},"content":"        this.passwords \u003d passwords;"},{"lineNumber":51,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":53,"author":{"gitID":"koo1993"},"content":"    @Override"},{"lineNumber":54,"author":{"gitID":"koo1993"},"content":"    public CommandResult execute() throws CommandException {"},{"lineNumber":55,"author":{"gitID":"koo1993"},"content":"        if (!model.isAdminMode()) {"},{"lineNumber":56,"author":{"gitID":"koo1993"},"content":"            throw new CommandException(MESSAGE_ACCESS_DENIED);"},{"lineNumber":57,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":58,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":59,"author":{"gitID":"koo1993"},"content":"        checkConfirmedPassword(passwords.get(1), passwords.get(2));"},{"lineNumber":60,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":61,"author":{"gitID":"koo1993"},"content":"        Password enteredPassword \u003d parsePassword(passwords.get(0));"},{"lineNumber":62,"author":{"gitID":"koo1993"},"content":"        Password newPassword \u003d parsePassword(passwords.get(1));"},{"lineNumber":63,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":64,"author":{"gitID":"koo1993"},"content":"        if (!model.isAdminPassword(enteredPassword)"},{"lineNumber":65,"author":{"gitID":"koo1993"},"content":"                \u0026\u0026 !model.isCorrectTempPwd(model.getOutletInformation(), enteredPassword)) {"},{"lineNumber":66,"author":{"gitID":"koo1993"},"content":"            throw new InvalidPasswordException();"},{"lineNumber":67,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":68,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":69,"author":{"gitID":"koo1993"},"content":"        model.setAdminPassword(newPassword);"},{"lineNumber":70,"author":{"gitID":"koo1993"},"content":"        return new CommandResult(MESSAGE_SUCCESS);"},{"lineNumber":71,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":72,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":73,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":74,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":75,"author":{"gitID":"koo1993"},"content":"     * Check confirmed new password with new password"},{"lineNumber":76,"author":{"gitID":"koo1993"},"content":"     * @throws CommandException if both password are not the same"},{"lineNumber":77,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":78,"author":{"gitID":"koo1993"},"content":"    private void checkConfirmedPassword(String newPassword, String confirmedPassword) throws CommandException {"},{"lineNumber":79,"author":{"gitID":"koo1993"},"content":"        if (!newPassword.equals(confirmedPassword)) {"},{"lineNumber":80,"author":{"gitID":"koo1993"},"content":"            throw new CommandException(MESSAGE_INVALID_CONFIMREDPASSWORD);"},{"lineNumber":81,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":82,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":83,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":84,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":85,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":86,"author":{"gitID":"koo1993"},"content":"    @Override"},{"lineNumber":87,"author":{"gitID":"koo1993"},"content":"    public void setData(Model model, CommandHistory history, UndoRedoStack undoRedoStack) {"},{"lineNumber":88,"author":{"gitID":"koo1993"},"content":"        super.setData(model, history, undoRedoStack);"},{"lineNumber":89,"author":{"gitID":"koo1993"},"content":"        undoRedoStack.resetRedoUndoStack();"},{"lineNumber":90,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":91,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":92,"author":{"gitID":"koo1993"},"content":"    @Override"},{"lineNumber":93,"author":{"gitID":"koo1993"},"content":"    public boolean equals(Object other) {"},{"lineNumber":94,"author":{"gitID":"koo1993"},"content":"        // short circuit if same object"},{"lineNumber":95,"author":{"gitID":"koo1993"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":96,"author":{"gitID":"koo1993"},"content":"            return true;"},{"lineNumber":97,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":98,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":99,"author":{"gitID":"koo1993"},"content":"        // instanceof handles nulls"},{"lineNumber":100,"author":{"gitID":"koo1993"},"content":"        if (!(other instanceof ChangeAdminPasswordCommand)) {"},{"lineNumber":101,"author":{"gitID":"koo1993"},"content":"            return false;"},{"lineNumber":102,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":103,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":104,"author":{"gitID":"koo1993"},"content":"        // state check"},{"lineNumber":105,"author":{"gitID":"koo1993"},"content":"        ChangeAdminPasswordCommand e \u003d (ChangeAdminPasswordCommand) other;"},{"lineNumber":106,"author":{"gitID":"koo1993"},"content":"        return passwords.equals(e.passwords);"},{"lineNumber":107,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":108,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":109,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":110,"author":{"gitID":"koo1993"},"content":"     * Parses a {@code String password} into an {@code Password}."},{"lineNumber":111,"author":{"gitID":"koo1993"},"content":"     * Leading and trailing whitespaces will be trimmed."},{"lineNumber":112,"author":{"gitID":"koo1993"},"content":"     *"},{"lineNumber":113,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":114,"author":{"gitID":"koo1993"},"content":"    public static Password parsePassword(String password) {"},{"lineNumber":115,"author":{"gitID":"koo1993"},"content":"        requireNonNull(password);"},{"lineNumber":116,"author":{"gitID":"koo1993"},"content":"        String trimmedPassword \u003d password.trim();"},{"lineNumber":117,"author":{"gitID":"koo1993"},"content":"        Password newPassword \u003d new Password();"},{"lineNumber":118,"author":{"gitID":"koo1993"},"content":"        newPassword.createPassword(trimmedPassword);"},{"lineNumber":119,"author":{"gitID":"koo1993"},"content":"        return newPassword;"},{"lineNumber":120,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":121,"author":{"gitID":"koo1993"},"content":"}"}],"authorContributionMap":{"koo1993":107,"-":14}},{"path":"src/main/java/seedu/ptman/logic/commands/EditOutletCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_ACCESS_DENIED;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_OPERATING_HOURS;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_OUTLET_CONTACT;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_OUTLET_EMAIL;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_OUTLET_NAME;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.EventsCenter;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.ui.OutletInformationChangedEvent;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.ui.OutletNameChangedEvent;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.exceptions.CommandException;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OperatingHours;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletContact;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletEmail;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletName;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.exceptions.NoOutletInformationFieldChangeException;"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":21,"author":{"gitID":"SunBangjie"},"content":"/**"},{"lineNumber":22,"author":{"gitID":"SunBangjie"},"content":" * Edits the details of outlet in the ptman."},{"lineNumber":23,"author":{"gitID":"SunBangjie"},"content":" */"},{"lineNumber":24,"author":{"gitID":"SunBangjie"},"content":"public class EditOutletCommand extends UndoableCommand {"},{"lineNumber":25,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":26,"author":{"gitID":"SunBangjie"},"content":"    public static final String COMMAND_WORD \u003d \"editoutlet\";"},{"lineNumber":27,"author":{"gitID":"SunBangjie"},"content":"    public static final String COMMAND_ALIAS \u003d \"eo\";"},{"lineNumber":28,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":29,"author":{"gitID":"SunBangjie"},"content":"    public static final String COMMAND_FORMAT \u003d \"[\" + PREFIX_OUTLET_NAME + \"OUTLETNAME] \""},{"lineNumber":30,"author":{"gitID":"SunBangjie"},"content":"            + \"[\" + PREFIX_OPERATING_HOURS + \"OPERATINGHOURS] \""},{"lineNumber":31,"author":{"gitID":"SunBangjie"},"content":"            + \"[\" + PREFIX_OUTLET_CONTACT + \"CONTACT] \""},{"lineNumber":32,"author":{"gitID":"SunBangjie"},"content":"            + \"[\" + PREFIX_OUTLET_EMAIL + \"EMAIL] \";"},{"lineNumber":33,"author":{"gitID":"SunBangjie"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the outlet in admin \""},{"lineNumber":34,"author":{"gitID":"SunBangjie"},"content":"            + \"mode. Existing values will be overwritten by the input values.\\n\""},{"lineNumber":35,"author":{"gitID":"SunBangjie"},"content":"            + \"Parameters: \""},{"lineNumber":36,"author":{"gitID":"SunBangjie"},"content":"            + COMMAND_FORMAT"},{"lineNumber":37,"author":{"gitID":"SunBangjie"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" \""},{"lineNumber":38,"author":{"gitID":"SunBangjie"},"content":"            + PREFIX_OUTLET_NAME + \"AwesomeOutlet \""},{"lineNumber":39,"author":{"gitID":"SunBangjie"},"content":"            + PREFIX_OPERATING_HOURS + \"09:00-22:00 \""},{"lineNumber":40,"author":{"gitID":"SunBangjie"},"content":"            + PREFIX_OUTLET_CONTACT + \"91234567 \""},{"lineNumber":41,"author":{"gitID":"SunBangjie"},"content":"            + PREFIX_OUTLET_EMAIL + \"AwesomeOutlet@gmail.com\";"},{"lineNumber":42,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":43,"author":{"gitID":"SunBangjie"},"content":"    public static final String MESSAGE_EDIT_OUTLET_SUCCESS \u003d \"Outlet Information Edited.\";"},{"lineNumber":44,"author":{"gitID":"SunBangjie"},"content":"    public static final String MESSAGE_EDIT_OUTLET_FAILURE \u003d \"At least one field must be specified.\\n\""},{"lineNumber":45,"author":{"gitID":"SunBangjie"},"content":"            + MESSAGE_USAGE;"},{"lineNumber":46,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":47,"author":{"gitID":"SunBangjie"},"content":"    private final OutletName name;"},{"lineNumber":48,"author":{"gitID":"SunBangjie"},"content":"    private final OperatingHours operatingHours;"},{"lineNumber":49,"author":{"gitID":"SunBangjie"},"content":"    private final OutletContact outletContact;"},{"lineNumber":50,"author":{"gitID":"SunBangjie"},"content":"    private final OutletEmail outletEmail;"},{"lineNumber":51,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":52,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":53,"author":{"gitID":"SunBangjie"},"content":"     * Constructor of EditOutletCommand"},{"lineNumber":54,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":55,"author":{"gitID":"SunBangjie"},"content":"    public EditOutletCommand(OutletName name, OperatingHours operatingHours, OutletContact outletContact,"},{"lineNumber":56,"author":{"gitID":"SunBangjie"},"content":"                             OutletEmail outletEmail) {"},{"lineNumber":57,"author":{"gitID":"SunBangjie"},"content":"        this.name \u003d name;"},{"lineNumber":58,"author":{"gitID":"SunBangjie"},"content":"        this.operatingHours \u003d operatingHours;"},{"lineNumber":59,"author":{"gitID":"SunBangjie"},"content":"        this.outletContact \u003d outletContact;"},{"lineNumber":60,"author":{"gitID":"SunBangjie"},"content":"        this.outletEmail \u003d outletEmail;"},{"lineNumber":61,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":62,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":63,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":64,"author":{"gitID":"SunBangjie"},"content":"    public CommandResult executeUndoableCommand() throws CommandException {"},{"lineNumber":65,"author":{"gitID":"SunBangjie"},"content":"        if (!model.isAdminMode()) {"},{"lineNumber":66,"author":{"gitID":"SunBangjie"},"content":"            throw new CommandException(MESSAGE_ACCESS_DENIED);"},{"lineNumber":67,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":68,"author":{"gitID":"SunBangjie"},"content":"        try {"},{"lineNumber":69,"author":{"gitID":"SunBangjie"},"content":"            OutletInformation editedOutlet \u003d new OutletInformation(model.getOutletInformation());"},{"lineNumber":70,"author":{"gitID":"SunBangjie"},"content":"            editedOutlet.setOutletInformation(name, operatingHours, outletContact, outletEmail);"},{"lineNumber":71,"author":{"gitID":"SunBangjie"},"content":"            model.updateOutlet(editedOutlet);"},{"lineNumber":72,"author":{"gitID":"SunBangjie"},"content":"            EventsCenter.getInstance().post(new OutletInformationChangedEvent("},{"lineNumber":73,"author":{"gitID":"SunBangjie"},"content":"                    editedOutlet.getOperatingHours().getDisplayedMessage(),"},{"lineNumber":74,"author":{"gitID":"SunBangjie"},"content":"                    editedOutlet.getOutletContact().toString(),"},{"lineNumber":75,"author":{"gitID":"SunBangjie"},"content":"                    editedOutlet.getOutletEmail().toString()));"},{"lineNumber":76,"author":{"gitID":"SunBangjie"},"content":"            EventsCenter.getInstance().post(new OutletNameChangedEvent(editedOutlet.getName().toString()));"},{"lineNumber":77,"author":{"gitID":"SunBangjie"},"content":"        } catch (NoOutletInformationFieldChangeException e) {"},{"lineNumber":78,"author":{"gitID":"SunBangjie"},"content":"            throw new CommandException(MESSAGE_EDIT_OUTLET_FAILURE);"},{"lineNumber":79,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":80,"author":{"gitID":"SunBangjie"},"content":"        return new CommandResult(MESSAGE_EDIT_OUTLET_SUCCESS);"},{"lineNumber":81,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":82,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":83,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":84,"author":{"gitID":"SunBangjie"},"content":"    public boolean equals(Object other) {"},{"lineNumber":85,"author":{"gitID":"SunBangjie"},"content":"        // short circuit if same object"},{"lineNumber":86,"author":{"gitID":"SunBangjie"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":87,"author":{"gitID":"SunBangjie"},"content":"            return true;"},{"lineNumber":88,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":89,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":90,"author":{"gitID":"SunBangjie"},"content":"        // instanceof handles nulls"},{"lineNumber":91,"author":{"gitID":"SunBangjie"},"content":"        if (!(other instanceof EditOutletCommand)) {"},{"lineNumber":92,"author":{"gitID":"SunBangjie"},"content":"            return false;"},{"lineNumber":93,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":94,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":95,"author":{"gitID":"SunBangjie"},"content":"        // state check"},{"lineNumber":96,"author":{"gitID":"SunBangjie"},"content":"        EditOutletCommand e \u003d (EditOutletCommand) other;"},{"lineNumber":97,"author":{"gitID":"SunBangjie"},"content":"        return outletContact.equals(e.outletContact)"},{"lineNumber":98,"author":{"gitID":"SunBangjie"},"content":"                \u0026\u0026 name.equals(e.name)"},{"lineNumber":99,"author":{"gitID":"SunBangjie"},"content":"                \u0026\u0026 operatingHours.equals(e.operatingHours)"},{"lineNumber":100,"author":{"gitID":"SunBangjie"},"content":"                \u0026\u0026 outletEmail.equals(e.outletEmail);"},{"lineNumber":101,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":102,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":19,"SunBangjie":83}},{"path":"src/main/java/seedu/ptman/logic/commands/AnnouncementCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_ACCESS_DENIED;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.EventsCenter;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.ui.AnnouncementChangedEvent;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.exceptions.CommandException;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.Announcement;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.exceptions.NoOutletInformationFieldChangeException;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":13,"author":{"gitID":"SunBangjie"},"content":"/**"},{"lineNumber":14,"author":{"gitID":"SunBangjie"},"content":" * Edits the announcement of outlet in the ptman."},{"lineNumber":15,"author":{"gitID":"SunBangjie"},"content":" */"},{"lineNumber":16,"author":{"gitID":"SunBangjie"},"content":"public class AnnouncementCommand extends UndoableCommand {"},{"lineNumber":17,"author":{"gitID":"SunBangjie"},"content":"    public static final String COMMAND_WORD \u003d \"announcement\";"},{"lineNumber":18,"author":{"gitID":"SunBangjie"},"content":"    public static final String COMMAND_ALIAS \u003d \"announce\";"},{"lineNumber":19,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":20,"author":{"gitID":"SunBangjie"},"content":"    public static final String COMMAND_FORMAT \u003d \"ANNOUNCEMENT_MESSAGE\";"},{"lineNumber":21,"author":{"gitID":"SunBangjie"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the announcement of the outlet \""},{"lineNumber":22,"author":{"gitID":"SunBangjie"},"content":"            + \"in admin mode. Existing values will be overwritten by the input values.\\n\""},{"lineNumber":23,"author":{"gitID":"SunBangjie"},"content":"            + \"Parameters: \""},{"lineNumber":24,"author":{"gitID":"SunBangjie"},"content":"            + COMMAND_FORMAT"},{"lineNumber":25,"author":{"gitID":"SunBangjie"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" \""},{"lineNumber":26,"author":{"gitID":"SunBangjie"},"content":"            + \"This is a new announcement.\";"},{"lineNumber":27,"author":{"gitID":"SunBangjie"},"content":"    public static final String MESSAGE_EDIT_OUTLET_SUCCESS \u003d \"Announcement successfully updated.\";"},{"lineNumber":28,"author":{"gitID":"SunBangjie"},"content":"    public static final String MESSAGE_EDIT_OUTLET_FAILURE \u003d \"New announcement cannot be empty.\""},{"lineNumber":29,"author":{"gitID":"SunBangjie"},"content":"            + MESSAGE_USAGE;"},{"lineNumber":30,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":31,"author":{"gitID":"SunBangjie"},"content":"    private Announcement announcement;"},{"lineNumber":32,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":33,"author":{"gitID":"SunBangjie"},"content":"    public AnnouncementCommand(Announcement announcement) {"},{"lineNumber":34,"author":{"gitID":"SunBangjie"},"content":"        this.announcement \u003d announcement;"},{"lineNumber":35,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":36,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":37,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":38,"author":{"gitID":"SunBangjie"},"content":"    public CommandResult executeUndoableCommand() throws CommandException {"},{"lineNumber":39,"author":{"gitID":"SunBangjie"},"content":"        if (!model.isAdminMode()) {"},{"lineNumber":40,"author":{"gitID":"SunBangjie"},"content":"            throw new CommandException(MESSAGE_ACCESS_DENIED);"},{"lineNumber":41,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":42,"author":{"gitID":"SunBangjie"},"content":"        try {"},{"lineNumber":43,"author":{"gitID":"SunBangjie"},"content":"            OutletInformation editedOutlet \u003d new OutletInformation(model.getOutletInformation());"},{"lineNumber":44,"author":{"gitID":"SunBangjie"},"content":"            editedOutlet.setAnnouncement(announcement);"},{"lineNumber":45,"author":{"gitID":"SunBangjie"},"content":"            model.updateOutlet(editedOutlet);"},{"lineNumber":46,"author":{"gitID":"SunBangjie"},"content":"            EventsCenter.getInstance().post(new AnnouncementChangedEvent(editedOutlet.getAnnouncement().value));"},{"lineNumber":47,"author":{"gitID":"SunBangjie"},"content":"        } catch (NoOutletInformationFieldChangeException e) {"},{"lineNumber":48,"author":{"gitID":"SunBangjie"},"content":"            throw new CommandException(MESSAGE_EDIT_OUTLET_FAILURE);"},{"lineNumber":49,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":50,"author":{"gitID":"SunBangjie"},"content":"        return new CommandResult(MESSAGE_EDIT_OUTLET_SUCCESS);"},{"lineNumber":51,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":53,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":54,"author":{"gitID":"SunBangjie"},"content":"    public boolean equals(Object other) {"},{"lineNumber":55,"author":{"gitID":"SunBangjie"},"content":"        // short circuit if same object"},{"lineNumber":56,"author":{"gitID":"SunBangjie"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":57,"author":{"gitID":"SunBangjie"},"content":"            return true;"},{"lineNumber":58,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":59,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":60,"author":{"gitID":"SunBangjie"},"content":"        // instanceof handles nulls"},{"lineNumber":61,"author":{"gitID":"SunBangjie"},"content":"        if (!(other instanceof AnnouncementCommand)) {"},{"lineNumber":62,"author":{"gitID":"SunBangjie"},"content":"            return false;"},{"lineNumber":63,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":64,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":65,"author":{"gitID":"SunBangjie"},"content":"        // state check"},{"lineNumber":66,"author":{"gitID":"SunBangjie"},"content":"        return announcement.equals(((AnnouncementCommand) other).announcement);"},{"lineNumber":67,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":11,"SunBangjie":57}},{"path":"src/main/java/seedu/ptman/logic/commands/LogOutAdminCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"hzxcaryn"},"content":"import seedu.ptman.commons.core.EventsCenter;"},{"lineNumber":4,"author":{"gitID":"hzxcaryn"},"content":"import seedu.ptman.commons.events.model.UserModeChangedEvent;"},{"lineNumber":5,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":6,"author":{"gitID":"koo1993"},"content":"//@@author koo1993"},{"lineNumber":7,"author":{"gitID":"koo1993"},"content":"/**"},{"lineNumber":8,"author":{"gitID":"koo1993"},"content":" * logout command from admin mode."},{"lineNumber":9,"author":{"gitID":"koo1993"},"content":" */"},{"lineNumber":10,"author":{"gitID":"koo1993"},"content":"public class LogOutAdminCommand extends Command {"},{"lineNumber":11,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":12,"author":{"gitID":"koo1993"},"content":"    public static final String COMMAND_WORD \u003d \"logout\";"},{"lineNumber":13,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":14,"author":{"gitID":"koo1993"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"You have logged out from admin mode\";"},{"lineNumber":15,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":16,"author":{"gitID":"koo1993"},"content":"    public static final String MESSAGE_LOGGEDOUT \u003d \"You already logged out\";"},{"lineNumber":17,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":18,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":19,"author":{"gitID":"koo1993"},"content":"    @Override"},{"lineNumber":20,"author":{"gitID":"koo1993"},"content":"    public CommandResult execute() {"},{"lineNumber":21,"author":{"gitID":"koo1993"},"content":"        if (!model.isAdminMode()) {"},{"lineNumber":22,"author":{"gitID":"koo1993"},"content":"            return new CommandResult(MESSAGE_LOGGEDOUT);"},{"lineNumber":23,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":24,"author":{"gitID":"koo1993"},"content":"        model.setFalseAdminMode();"},{"lineNumber":25,"author":{"gitID":"koo1993"},"content":"        EventsCenter.getInstance().post(new UserModeChangedEvent(false));"},{"lineNumber":26,"author":{"gitID":"koo1993"},"content":"        return new CommandResult(MESSAGE_SUCCESS);"},{"lineNumber":27,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":28,"author":{"gitID":"koo1993"},"content":"}"}],"authorContributionMap":{"koo1993":23,"hzxcaryn":3,"-":2}},{"path":"src/main/java/seedu/ptman/logic/commands/SelectCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.EventsCenter;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.Messages;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.index.Index;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.ui.JumpToListRequestEvent;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.exceptions.CommandException;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Employee;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":13,"author":{"gitID":"-"},"content":" * Selects a employee identified using it\u0027s last displayed index from PTMan."},{"lineNumber":14,"author":{"gitID":"-"},"content":" */"},{"lineNumber":15,"author":{"gitID":"-"},"content":"public class SelectCommand extends Command {"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"    public static final String COMMAND_WORD \u003d \"select\";"},{"lineNumber":18,"author":{"gitID":"-"},"content":"    public static final String COMMAND_ALIAS \u003d \"sel\";"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":"    public static final String COMMAND_FORMAT \u003d \"EMPLOYEE_INDEX\";"},{"lineNumber":21,"author":{"gitID":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"},{"lineNumber":22,"author":{"gitID":"-"},"content":"            + \": Selects the employee identified by the index number used in the last employee listing and highlights\""},{"lineNumber":23,"author":{"gitID":"-"},"content":"            + \"his/her shifts in the timetable.\\n\""},{"lineNumber":24,"author":{"gitID":"-"},"content":"            + \"Parameters: \""},{"lineNumber":25,"author":{"gitID":"-"},"content":"            + COMMAND_FORMAT"},{"lineNumber":26,"author":{"gitID":"-"},"content":"            + \" (must be a positive integer)\""},{"lineNumber":27,"author":{"gitID":"-"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" 1\";"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    public static final String MESSAGE_SELECT_EMPLOYEE_SUCCESS \u003d \"Selected Employee: %1$s\";"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"    private final Index targetIndex;"},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"-"},"content":"    public SelectCommand(Index targetIndex) {"},{"lineNumber":34,"author":{"gitID":"-"},"content":"        this.targetIndex \u003d targetIndex;"},{"lineNumber":35,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    public CommandResult execute() throws CommandException {"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"        List\u003cEmployee\u003e lastShownList \u003d model.getFilteredEmployeeList();"},{"lineNumber":41,"author":{"gitID":"-"},"content":""},{"lineNumber":42,"author":{"gitID":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {"},{"lineNumber":43,"author":{"gitID":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX);"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"hzxcaryn"},"content":"        EventsCenter.getInstance().post(new JumpToListRequestEvent(targetIndex, true));"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SELECT_EMPLOYEE_SUCCESS, targetIndex.getOneBased()));"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":53,"author":{"gitID":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":54,"author":{"gitID":"-"},"content":"                || (other instanceof SelectCommand // instanceof handles nulls"},{"lineNumber":55,"author":{"gitID":"-"},"content":"                \u0026\u0026 this.targetIndex.equals(((SelectCommand) other).targetIndex)); // state check"},{"lineNumber":56,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"hzxcaryn":1,"-":56}},{"path":"src/main/java/seedu/ptman/logic/commands/DecryptDataCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_ACCESS_DENIED;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.exceptions.CommandException;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":8,"author":{"gitID":"SunBangjie"},"content":"/**"},{"lineNumber":9,"author":{"gitID":"SunBangjie"},"content":" * Decrypts local storage files."},{"lineNumber":10,"author":{"gitID":"SunBangjie"},"content":" */"},{"lineNumber":11,"author":{"gitID":"SunBangjie"},"content":"public class DecryptDataCommand extends Command {"},{"lineNumber":12,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":13,"author":{"gitID":"SunBangjie"},"content":"    public static final String COMMAND_WORD \u003d \"decrypt\";"},{"lineNumber":14,"author":{"gitID":"SunBangjie"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Decrypts local storage files.\\n\""},{"lineNumber":15,"author":{"gitID":"SunBangjie"},"content":"            + \"Example: \" + COMMAND_WORD;"},{"lineNumber":16,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":17,"author":{"gitID":"SunBangjie"},"content":"    public static final String MESSAGE_DECRYPT_SUCCESS \u003d \"Local files successfully decrypted.\";"},{"lineNumber":18,"author":{"gitID":"SunBangjie"},"content":"    public static final String MESSAGE_DECRYPT_FAILURE \u003d \"Local files have already been decrypted.\";"},{"lineNumber":19,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":20,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":21,"author":{"gitID":"SunBangjie"},"content":"    public CommandResult execute() throws CommandException {"},{"lineNumber":22,"author":{"gitID":"SunBangjie"},"content":"        if (!model.isAdminMode()) {"},{"lineNumber":23,"author":{"gitID":"SunBangjie"},"content":"            throw new CommandException(MESSAGE_ACCESS_DENIED);"},{"lineNumber":24,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":25,"author":{"gitID":"SunBangjie"},"content":"        if (!model.getOutletInformation().getEncryptionMode()) {"},{"lineNumber":26,"author":{"gitID":"SunBangjie"},"content":"            throw new CommandException(MESSAGE_DECRYPT_FAILURE);"},{"lineNumber":27,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":28,"author":{"gitID":"SunBangjie"},"content":"        model.decryptLocalStorage();"},{"lineNumber":29,"author":{"gitID":"SunBangjie"},"content":"        return new CommandResult(MESSAGE_DECRYPT_SUCCESS);"},{"lineNumber":30,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":6,"SunBangjie":25}},{"path":"src/main/java/seedu/ptman/logic/LogicManager.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.util.DateUtil.getNextWeekDate;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.util.DateUtil.getPrevWeekDate;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_PASSWORD;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.ComponentManager;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.LogsCenter;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.Command;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.CommandResult;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.exceptions.CommandException;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.parser.PartTimeManagerParser;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.parser.exceptions.ParseException;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Model;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Employee;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Shift;"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":24,"author":{"gitID":"-"},"content":" * The main LogicManager of the app."},{"lineNumber":25,"author":{"gitID":"-"},"content":" */"},{"lineNumber":26,"author":{"gitID":"-"},"content":"public class LogicManager extends ComponentManager implements Logic {"},{"lineNumber":27,"author":{"gitID":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    private final Model model;"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    private final CommandHistory history;"},{"lineNumber":31,"author":{"gitID":"-"},"content":"    private final PartTimeManagerParser partTimeManagerParser;"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    private final UndoRedoStack undoRedoStack;"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"    private LocalDate currentDisplayedDate;"},{"lineNumber":35,"author":{"gitID":"-"},"content":""},{"lineNumber":36,"author":{"gitID":"-"},"content":"    public LogicManager(Model model) {"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        this.model \u003d model;"},{"lineNumber":38,"author":{"gitID":"-"},"content":"        history \u003d new CommandHistory();"},{"lineNumber":39,"author":{"gitID":"-"},"content":"        partTimeManagerParser \u003d new PartTimeManagerParser();"},{"lineNumber":40,"author":{"gitID":"-"},"content":"        undoRedoStack \u003d new UndoRedoStack();"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        setFilteredShiftListToCurrentWeek();"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":45,"author":{"gitID":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":48,"author":{"gitID":"-"},"content":"            Command command \u003d partTimeManagerParser.parseCommand(commandText);"},{"lineNumber":49,"author":{"gitID":"-"},"content":"            command.setData(model, history, undoRedoStack);"},{"lineNumber":50,"author":{"gitID":"-"},"content":"            CommandResult result \u003d command.execute();"},{"lineNumber":51,"author":{"gitID":"-"},"content":"            undoRedoStack.push(command);"},{"lineNumber":52,"author":{"gitID":"-"},"content":"            return result;"},{"lineNumber":53,"author":{"gitID":"-"},"content":"        } finally {"},{"lineNumber":54,"author":{"gitID":"-"},"content":"            history.add(processInput(commandText));"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":56,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"-"},"content":""},{"lineNumber":58,"author":{"gitID":"koo1993"},"content":"    //@@author koo1993"},{"lineNumber":59,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":60,"author":{"gitID":"koo1993"},"content":"     * Obscure sensitive information like password by replacing it with \"a space\""},{"lineNumber":61,"author":{"gitID":"koo1993"},"content":"     * @param input"},{"lineNumber":62,"author":{"gitID":"koo1993"},"content":"     * @return the processed input"},{"lineNumber":63,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":64,"author":{"gitID":"koo1993"},"content":"    private String processInput(String input) {"},{"lineNumber":65,"author":{"gitID":"koo1993"},"content":"        StringBuilder newString \u003d new StringBuilder(input);"},{"lineNumber":66,"author":{"gitID":"koo1993"},"content":"        int indexOfPrefix \u003d newString.indexOf(PREFIX_PASSWORD.getPrefix());"},{"lineNumber":67,"author":{"gitID":"koo1993"},"content":"        int indexOfSpace \u003d newString.indexOf(\" \", indexOfPrefix);"},{"lineNumber":68,"author":{"gitID":"koo1993"},"content":"        while (indexOfPrefix \u003e\u003d 0) {"},{"lineNumber":69,"author":{"gitID":"koo1993"},"content":"            if (indexOfSpace \u003d\u003d -1) {"},{"lineNumber":70,"author":{"gitID":"koo1993"},"content":"                indexOfSpace \u003d newString.length();"},{"lineNumber":71,"author":{"gitID":"koo1993"},"content":"            }"},{"lineNumber":72,"author":{"gitID":"koo1993"},"content":"            newString.replace(indexOfPrefix + 3 , indexOfSpace, \" \");"},{"lineNumber":73,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":74,"author":{"gitID":"koo1993"},"content":"            indexOfPrefix \u003d newString.indexOf(PREFIX_PASSWORD.getPrefix(), indexOfPrefix + 3);"},{"lineNumber":75,"author":{"gitID":"koo1993"},"content":"            indexOfSpace \u003d newString.indexOf(\" \", indexOfPrefix);"},{"lineNumber":76,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":77,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":78,"author":{"gitID":"koo1993"},"content":"        return newString.toString();"},{"lineNumber":79,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":80,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":81,"author":{"gitID":"koo1993"},"content":"    //@@author"},{"lineNumber":82,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":83,"author":{"gitID":"-"},"content":"    public ObservableList\u003cEmployee\u003e getFilteredEmployeeList() {"},{"lineNumber":84,"author":{"gitID":"-"},"content":"        return model.getFilteredEmployeeList();"},{"lineNumber":85,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":86,"author":{"gitID":"-"},"content":""},{"lineNumber":87,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":88,"author":{"gitID":"-"},"content":"    public ObservableList\u003cShift\u003e getFilteredShiftList() {"},{"lineNumber":89,"author":{"gitID":"-"},"content":"        return model.getFilteredShiftList();"},{"lineNumber":90,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":91,"author":{"gitID":"-"},"content":""},{"lineNumber":92,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":93,"author":{"gitID":"-"},"content":"    public ListElementPointer getHistorySnapshot() {"},{"lineNumber":94,"author":{"gitID":"-"},"content":"        return new ListElementPointer(history.getHistory());"},{"lineNumber":95,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":96,"author":{"gitID":"-"},"content":""},{"lineNumber":97,"author":{"gitID":"hzxcaryn"},"content":"    //@@author hzxcaryn"},{"lineNumber":98,"author":{"gitID":"hzxcaryn"},"content":"    @Override"},{"lineNumber":99,"author":{"gitID":"hzxcaryn"},"content":"    public OutletInformation getOutletInformation() {"},{"lineNumber":100,"author":{"gitID":"hzxcaryn"},"content":"        return model.getOutletInformation();"},{"lineNumber":101,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":102,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":103,"author":{"gitID":"hzxcaryn"},"content":"    @Override"},{"lineNumber":104,"author":{"gitID":"hzxcaryn"},"content":"    public LocalDate getCurrentDisplayedDate() {"},{"lineNumber":105,"author":{"gitID":"hzxcaryn"},"content":"        return currentDisplayedDate;"},{"lineNumber":106,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":107,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":108,"author":{"gitID":"hzxcaryn"},"content":"    @Override"},{"lineNumber":109,"author":{"gitID":"hzxcaryn"},"content":"    public void setFilteredShiftListToNextWeek() {"},{"lineNumber":110,"author":{"gitID":"hzxcaryn"},"content":"        currentDisplayedDate \u003d getNextWeekDate(currentDisplayedDate);"},{"lineNumber":111,"author":{"gitID":"hzxcaryn"},"content":"        model.setFilteredShiftListToWeek(currentDisplayedDate);"},{"lineNumber":112,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":113,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":114,"author":{"gitID":"hzxcaryn"},"content":"    @Override"},{"lineNumber":115,"author":{"gitID":"hzxcaryn"},"content":"    public void setFilteredShiftListToPrevWeek() {"},{"lineNumber":116,"author":{"gitID":"hzxcaryn"},"content":"        currentDisplayedDate \u003d getPrevWeekDate(currentDisplayedDate);"},{"lineNumber":117,"author":{"gitID":"hzxcaryn"},"content":"        model.setFilteredShiftListToWeek(currentDisplayedDate);"},{"lineNumber":118,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":119,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":120,"author":{"gitID":"hzxcaryn"},"content":"    @Override"},{"lineNumber":121,"author":{"gitID":"hzxcaryn"},"content":"    public void setFilteredShiftListToCurrentWeek() {"},{"lineNumber":122,"author":{"gitID":"hzxcaryn"},"content":"        currentDisplayedDate \u003d LocalDate.now();"},{"lineNumber":123,"author":{"gitID":"hzxcaryn"},"content":"        model.setFilteredShiftListToWeek(currentDisplayedDate);"},{"lineNumber":124,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":125,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":126,"author":{"gitID":"hzxcaryn"},"content":"    @Override"},{"lineNumber":127,"author":{"gitID":"hzxcaryn"},"content":"    public void setFilteredShiftListToCustomWeek(LocalDate date) {"},{"lineNumber":128,"author":{"gitID":"hzxcaryn"},"content":"        currentDisplayedDate \u003d date;"},{"lineNumber":129,"author":{"gitID":"hzxcaryn"},"content":"        model.setFilteredShiftListToWeek(date);"},{"lineNumber":130,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":131,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":132,"author":{"gitID":"hzxcaryn"},"content":"    @Override"},{"lineNumber":133,"author":{"gitID":"hzxcaryn"},"content":"    public boolean isAdminMode() {"},{"lineNumber":134,"author":{"gitID":"hzxcaryn"},"content":"        return model.isAdminMode();"},{"lineNumber":135,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":136,"author":{"gitID":"hzxcaryn"},"content":"}"}],"authorContributionMap":{"koo1993":24,"hzxcaryn":40,"-":72}},{"path":"src/main/java/seedu/ptman/logic/commands/ResetAdminPasswordCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import javax.mail.MessagingException;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import javax.mail.internet.AddressException;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.services.EmailService;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.exceptions.CommandException;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"koo1993"},"content":"//@@author koo1993"},{"lineNumber":14,"author":{"gitID":"koo1993"},"content":"/**"},{"lineNumber":15,"author":{"gitID":"koo1993"},"content":" * Reset password for the outlet in PTMan."},{"lineNumber":16,"author":{"gitID":"koo1993"},"content":" */"},{"lineNumber":17,"author":{"gitID":"koo1993"},"content":"public class ResetAdminPasswordCommand extends Command {"},{"lineNumber":18,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":19,"author":{"gitID":"koo1993"},"content":"    public static final String COMMAND_WORD \u003d \"resetadminpw\";"},{"lineNumber":20,"author":{"gitID":"koo1993"},"content":"    public static final String COMMAND_ALIAS \u003d \"rap\";"},{"lineNumber":21,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":22,"author":{"gitID":"koo1993"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD;"},{"lineNumber":23,"author":{"gitID":"koo1993"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Email with the new password is sent to you at: %1$s\";"},{"lineNumber":24,"author":{"gitID":"koo1993"},"content":"    public static final String MESSAGE_SENT_FAIL \u003d"},{"lineNumber":25,"author":{"gitID":"koo1993"},"content":"            \"Reset password fail to send through email, please check your internet connection\";"},{"lineNumber":26,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":27,"author":{"gitID":"koo1993"},"content":"    public static final String MESSAGE_EMAIL_FAIL \u003d \"No such email address %1$s\";"},{"lineNumber":28,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":29,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":30,"author":{"gitID":"koo1993"},"content":"    @Override"},{"lineNumber":31,"author":{"gitID":"koo1993"},"content":"    public CommandResult execute() throws CommandException {"},{"lineNumber":32,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":33,"author":{"gitID":"koo1993"},"content":"        Password newPassword;"},{"lineNumber":34,"author":{"gitID":"koo1993"},"content":"        OutletInformation outletRequested \u003d model.getOutletInformation();"},{"lineNumber":35,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":36,"author":{"gitID":"koo1993"},"content":"        try {"},{"lineNumber":37,"author":{"gitID":"koo1993"},"content":"            newPassword \u003d createAndSendRandomPassword(outletRequested);"},{"lineNumber":38,"author":{"gitID":"koo1993"},"content":"        } catch (AddressException ae) {"},{"lineNumber":39,"author":{"gitID":"koo1993"},"content":"            return new CommandResult(String.format(MESSAGE_EMAIL_FAIL, outletRequested.getOutletEmail()));"},{"lineNumber":40,"author":{"gitID":"koo1993"},"content":"        } catch (MessagingException e) {"},{"lineNumber":41,"author":{"gitID":"koo1993"},"content":"            return new CommandResult(MESSAGE_SENT_FAIL);"},{"lineNumber":42,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":43,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":44,"author":{"gitID":"koo1993"},"content":"        model.storeResetPassword(outletRequested, newPassword);"},{"lineNumber":45,"author":{"gitID":"koo1993"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, outletRequested.getOutletEmail()));"},{"lineNumber":46,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":47,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":48,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":49,"author":{"gitID":"koo1993"},"content":"     * Generate random password with 8 characters"},{"lineNumber":50,"author":{"gitID":"koo1993"},"content":"     * @return Password with the new password."},{"lineNumber":51,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":52,"author":{"gitID":"koo1993"},"content":"    private Password createAndSendRandomPassword(OutletInformation outlet) throws MessagingException {"},{"lineNumber":53,"author":{"gitID":"koo1993"},"content":"        String newPassword \u003d Password.generateRandomPassword();"},{"lineNumber":54,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":55,"author":{"gitID":"koo1993"},"content":"        EmailService email \u003d EmailService.getInstance();"},{"lineNumber":56,"author":{"gitID":"koo1993"},"content":"        email.sendResetPasswordMessage(outlet.getName().toString(),"},{"lineNumber":57,"author":{"gitID":"koo1993"},"content":"                outlet.getOutletEmail().toString(), newPassword);"},{"lineNumber":58,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":59,"author":{"gitID":"koo1993"},"content":"        return parsePassword(newPassword);"},{"lineNumber":60,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":61,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":62,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":63,"author":{"gitID":"koo1993"},"content":"    @Override"},{"lineNumber":64,"author":{"gitID":"koo1993"},"content":"    public boolean equals(Object other) {"},{"lineNumber":65,"author":{"gitID":"koo1993"},"content":"        // instanceof handles nulls"},{"lineNumber":66,"author":{"gitID":"koo1993"},"content":"        return (other instanceof ResetAdminPasswordCommand);"},{"lineNumber":67,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":69,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":70,"author":{"gitID":"koo1993"},"content":"     * Parses a {@code String password} into an {@code Password}."},{"lineNumber":71,"author":{"gitID":"koo1993"},"content":"     * Leading and trailing whitespaces will be trimmed."},{"lineNumber":72,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":73,"author":{"gitID":"koo1993"},"content":"    public static Password parsePassword(String password) {"},{"lineNumber":74,"author":{"gitID":"koo1993"},"content":"        requireNonNull(password);"},{"lineNumber":75,"author":{"gitID":"koo1993"},"content":"        String trimmedPassword \u003d password.trim();"},{"lineNumber":76,"author":{"gitID":"koo1993"},"content":"        Password newPassword \u003d new Password();"},{"lineNumber":77,"author":{"gitID":"koo1993"},"content":"        newPassword.createPassword(trimmedPassword);"},{"lineNumber":78,"author":{"gitID":"koo1993"},"content":"        return newPassword;"},{"lineNumber":79,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":80,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":81,"author":{"gitID":"koo1993"},"content":"}"}],"authorContributionMap":{"koo1993":69,"-":12}},{"path":"src/main/java/seedu/ptman/logic/commands/DeleteShiftCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.core.Messages.MESSAGE_ACCESS_DENIED;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.Messages;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.index.Index;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.exceptions.CommandException;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Shift;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.exceptions.ShiftNotFoundException;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"shanwpf"},"content":"//@@author shanwpf"},{"lineNumber":16,"author":{"gitID":"shanwpf"},"content":"/**"},{"lineNumber":17,"author":{"gitID":"shanwpf"},"content":" * Deletes a shift identified using it\u0027s last displayed index in the timetable."},{"lineNumber":18,"author":{"gitID":"shanwpf"},"content":" */"},{"lineNumber":19,"author":{"gitID":"shanwpf"},"content":"public class DeleteShiftCommand extends UndoableCommand {"},{"lineNumber":20,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":21,"author":{"gitID":"shanwpf"},"content":"    public static final String COMMAND_WORD \u003d \"deleteshift\";"},{"lineNumber":22,"author":{"gitID":"shanwpf"},"content":"    public static final String COMMAND_ALIAS \u003d \"ds\";"},{"lineNumber":23,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":24,"author":{"gitID":"shanwpf"},"content":"    public static final String COMMAND_FORMAT \u003d \"SHIFT_INDEX\";"},{"lineNumber":25,"author":{"gitID":"shanwpf"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"},{"lineNumber":26,"author":{"gitID":"shanwpf"},"content":"            + \": Deletes the shift identified by the index number used in the timetable.\\n\""},{"lineNumber":27,"author":{"gitID":"shanwpf"},"content":"            + \"Parameters: \""},{"lineNumber":28,"author":{"gitID":"shanwpf"},"content":"            + COMMAND_FORMAT"},{"lineNumber":29,"author":{"gitID":"shanwpf"},"content":"            + \" (must be a positive integer)\""},{"lineNumber":30,"author":{"gitID":"shanwpf"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" 1\";"},{"lineNumber":31,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":32,"author":{"gitID":"shanwpf"},"content":"    public static final String MESSAGE_DELETE_SHIFT_SUCCESS \u003d \"Deleted Shift: %1$s\";"},{"lineNumber":33,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":34,"author":{"gitID":"shanwpf"},"content":"    private final Index targetIndex;"},{"lineNumber":35,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":36,"author":{"gitID":"shanwpf"},"content":"    private Shift shiftToDelete;"},{"lineNumber":37,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":38,"author":{"gitID":"shanwpf"},"content":"    public DeleteShiftCommand(Index targetIndex) {"},{"lineNumber":39,"author":{"gitID":"shanwpf"},"content":"        this.targetIndex \u003d targetIndex;"},{"lineNumber":40,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":41,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":42,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":43,"author":{"gitID":"shanwpf"},"content":"    @Override"},{"lineNumber":44,"author":{"gitID":"shanwpf"},"content":"    public CommandResult executeUndoableCommand() throws CommandException {"},{"lineNumber":45,"author":{"gitID":"shanwpf"},"content":"        requireNonNull(shiftToDelete);"},{"lineNumber":46,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":47,"author":{"gitID":"shanwpf"},"content":"        if (!model.isAdminMode()) {"},{"lineNumber":48,"author":{"gitID":"shanwpf"},"content":"            throw new CommandException(MESSAGE_ACCESS_DENIED);"},{"lineNumber":49,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":50,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":51,"author":{"gitID":"shanwpf"},"content":"        try {"},{"lineNumber":52,"author":{"gitID":"shanwpf"},"content":"            model.deleteShift(shiftToDelete);"},{"lineNumber":53,"author":{"gitID":"shanwpf"},"content":"        } catch (ShiftNotFoundException pnfe) {"},{"lineNumber":54,"author":{"gitID":"shanwpf"},"content":"            throw new AssertionError(\"The target shift cannot be missing\");"},{"lineNumber":55,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":56,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":57,"author":{"gitID":"shanwpf"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_SHIFT_SUCCESS, shiftToDelete));"},{"lineNumber":58,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":59,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":60,"author":{"gitID":"shanwpf"},"content":"    @Override"},{"lineNumber":61,"author":{"gitID":"shanwpf"},"content":"    protected void preprocessUndoableCommand() throws CommandException {"},{"lineNumber":62,"author":{"gitID":"shanwpf"},"content":"        List\u003cShift\u003e lastShownList \u003d model.getFilteredShiftList();"},{"lineNumber":63,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":64,"author":{"gitID":"shanwpf"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {"},{"lineNumber":65,"author":{"gitID":"shanwpf"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_SHIFT_DISPLAYED_INDEX);"},{"lineNumber":66,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":67,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":68,"author":{"gitID":"shanwpf"},"content":"        shiftToDelete \u003d lastShownList.get(targetIndex.getZeroBased());"},{"lineNumber":69,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":70,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":71,"author":{"gitID":"shanwpf"},"content":"    @Override"},{"lineNumber":72,"author":{"gitID":"shanwpf"},"content":"    public boolean equals(Object other) {"},{"lineNumber":73,"author":{"gitID":"shanwpf"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":74,"author":{"gitID":"shanwpf"},"content":"                || (other instanceof DeleteShiftCommand // instanceof handles nulls"},{"lineNumber":75,"author":{"gitID":"shanwpf"},"content":"                \u0026\u0026 this.targetIndex.equals(((DeleteShiftCommand) other).targetIndex) // state check"},{"lineNumber":76,"author":{"gitID":"shanwpf"},"content":"                \u0026\u0026 Objects.equals(this.shiftToDelete, ((DeleteShiftCommand) other).shiftToDelete));"},{"lineNumber":77,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":78,"author":{"gitID":"shanwpf"},"content":"}"}],"authorContributionMap":{"shanwpf":64,"-":14}},{"path":"src/main/java/seedu/ptman/logic/commands/ChangePasswordCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.Set;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.Messages;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.index.Index;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.CommandHistory;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.UndoRedoStack;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.exceptions.CommandException;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.exceptions.InvalidPasswordException;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Model;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Address;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Email;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Employee;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Name;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Phone;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Salary;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.exceptions.DuplicateEmployeeException;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.exceptions.EmployeeNotFoundException;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import seedu.ptman.model.tag.Tag;"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"koo1993"},"content":"//@@author koo1993"},{"lineNumber":29,"author":{"gitID":"koo1993"},"content":"/**"},{"lineNumber":30,"author":{"gitID":"koo1993"},"content":" * Change password of an existing employee in PTMan."},{"lineNumber":31,"author":{"gitID":"koo1993"},"content":" */"},{"lineNumber":32,"author":{"gitID":"koo1993"},"content":"public class ChangePasswordCommand extends Command {"},{"lineNumber":33,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":34,"author":{"gitID":"koo1993"},"content":"    public static final String COMMAND_WORD \u003d \"changepw\";"},{"lineNumber":35,"author":{"gitID":"koo1993"},"content":"    public static final String COMMAND_ALIAS \u003d \"cp\";"},{"lineNumber":36,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":37,"author":{"gitID":"koo1993"},"content":"    public static final String COMMAND_FORMAT \u003d \"INDEX \""},{"lineNumber":38,"author":{"gitID":"koo1993"},"content":"            + \"pw/CURRENT_PASSWORD \""},{"lineNumber":39,"author":{"gitID":"koo1993"},"content":"            + \"pw/NEW_PASSWORD \""},{"lineNumber":40,"author":{"gitID":"koo1993"},"content":"            + \"pw/CONFIRM_NEW_PASSWORD\";"},{"lineNumber":41,"author":{"gitID":"koo1993"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Changes employee password.\\n\""},{"lineNumber":42,"author":{"gitID":"koo1993"},"content":"            + \"Parameters: \""},{"lineNumber":43,"author":{"gitID":"koo1993"},"content":"            + COMMAND_FORMAT"},{"lineNumber":44,"author":{"gitID":"koo1993"},"content":"            + \"\\nExample: \""},{"lineNumber":45,"author":{"gitID":"koo1993"},"content":"            + \"1 \""},{"lineNumber":46,"author":{"gitID":"koo1993"},"content":"            + \"pw/DEFAULT1 \""},{"lineNumber":47,"author":{"gitID":"koo1993"},"content":"            + \"pw/hunter22 \"  + \"pw/hunter22\";"},{"lineNumber":48,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":49,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":50,"author":{"gitID":"koo1993"},"content":"    public static final String MESSAGE_INVALID_CONFIMREDPASSWORD \u003d \"New password entered are not the same\";"},{"lineNumber":51,"author":{"gitID":"koo1993"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"%1$s, your password is changed.\";"},{"lineNumber":52,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":53,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":54,"author":{"gitID":"koo1993"},"content":"    private final Index index;"},{"lineNumber":55,"author":{"gitID":"koo1993"},"content":"    private final ArrayList\u003cString\u003e passwords;"},{"lineNumber":56,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":57,"author":{"gitID":"koo1993"},"content":"    private Employee employeeToEdit;"},{"lineNumber":58,"author":{"gitID":"koo1993"},"content":"    private Employee editedEmployee;"},{"lineNumber":59,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":60,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":61,"author":{"gitID":"koo1993"},"content":"     * @param index of the employee in the filtered employee list to edit"},{"lineNumber":62,"author":{"gitID":"koo1993"},"content":"     * @param passwords should contain 3 password String in the sequence of:"},{"lineNumber":63,"author":{"gitID":"koo1993"},"content":"     *                 confirmed password, new password, confirmed new password"},{"lineNumber":64,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":65,"author":{"gitID":"koo1993"},"content":"    public ChangePasswordCommand(Index index, ArrayList\u003cString\u003e passwords) {"},{"lineNumber":66,"author":{"gitID":"koo1993"},"content":"        requireNonNull(index);"},{"lineNumber":67,"author":{"gitID":"koo1993"},"content":"        requireNonNull(passwords);"},{"lineNumber":68,"author":{"gitID":"koo1993"},"content":"        if (passwords.size() \u003c 3) {"},{"lineNumber":69,"author":{"gitID":"koo1993"},"content":"            throw new IndexOutOfBoundsException();"},{"lineNumber":70,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":71,"author":{"gitID":"koo1993"},"content":"        this.index \u003d index;"},{"lineNumber":72,"author":{"gitID":"koo1993"},"content":"        this.passwords \u003d passwords;"},{"lineNumber":73,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":74,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":75,"author":{"gitID":"koo1993"},"content":"    @Override"},{"lineNumber":76,"author":{"gitID":"koo1993"},"content":"    public CommandResult execute() throws CommandException {"},{"lineNumber":77,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":78,"author":{"gitID":"koo1993"},"content":"        checkConfirmedPassword(passwords.get(1), passwords.get(2));"},{"lineNumber":79,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":80,"author":{"gitID":"koo1993"},"content":"        List\u003cEmployee\u003e lastShownList \u003d model.getFilteredEmployeeList();"},{"lineNumber":81,"author":{"gitID":"koo1993"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {"},{"lineNumber":82,"author":{"gitID":"koo1993"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX);"},{"lineNumber":83,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":84,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":85,"author":{"gitID":"koo1993"},"content":"        Password currentPassword \u003d parsePassword(passwords.get(0));"},{"lineNumber":86,"author":{"gitID":"koo1993"},"content":"        employeeToEdit \u003d lastShownList.get(index.getZeroBased());"},{"lineNumber":87,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":88,"author":{"gitID":"koo1993"},"content":"        checkAuthenticity(currentPassword, employeeToEdit);"},{"lineNumber":89,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":90,"author":{"gitID":"koo1993"},"content":"        editedEmployee \u003d createNewPasswordEmployee(employeeToEdit, parsePassword(passwords.get(1)));"},{"lineNumber":91,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":92,"author":{"gitID":"koo1993"},"content":"        try {"},{"lineNumber":93,"author":{"gitID":"koo1993"},"content":"            model.updateEmployee(employeeToEdit, editedEmployee);"},{"lineNumber":94,"author":{"gitID":"koo1993"},"content":"        } catch (DuplicateEmployeeException dpe) {"},{"lineNumber":95,"author":{"gitID":"koo1993"},"content":"            throw new AssertionError(\"The target employee should not be duplicated\");"},{"lineNumber":96,"author":{"gitID":"koo1993"},"content":"        } catch (EmployeeNotFoundException pnfe) {"},{"lineNumber":97,"author":{"gitID":"koo1993"},"content":"            throw new AssertionError(\"The target employee cannot be missing\");"},{"lineNumber":98,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":99,"author":{"gitID":"koo1993"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, editedEmployee.getName()));"},{"lineNumber":100,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":101,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":102,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":103,"author":{"gitID":"koo1993"},"content":"     * Check password given is employee\u0027s or it\u0027s temp password."},{"lineNumber":104,"author":{"gitID":"koo1993"},"content":"     * @param currentPassword"},{"lineNumber":105,"author":{"gitID":"koo1993"},"content":"     * @throws InvalidPasswordException if password is invalid"},{"lineNumber":106,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":107,"author":{"gitID":"koo1993"},"content":"    private void checkAuthenticity(Password currentPassword, Employee employeeToEdit)"},{"lineNumber":108,"author":{"gitID":"koo1993"},"content":"            throws InvalidPasswordException {"},{"lineNumber":109,"author":{"gitID":"koo1993"},"content":"        if (!employeeToEdit.isCorrectPassword(currentPassword)"},{"lineNumber":110,"author":{"gitID":"koo1993"},"content":"                \u0026\u0026 !model.isCorrectTempPwd(employeeToEdit, currentPassword)) {"},{"lineNumber":111,"author":{"gitID":"koo1993"},"content":"            throw new InvalidPasswordException();"},{"lineNumber":112,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":113,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":114,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":115,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":116,"author":{"gitID":"koo1993"},"content":"     * Check confirmed new password with new password"},{"lineNumber":117,"author":{"gitID":"koo1993"},"content":"     * @throws CommandException if both password are not the same"},{"lineNumber":118,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":119,"author":{"gitID":"koo1993"},"content":"    private void checkConfirmedPassword(String newPassword, String confirmedPassword) throws CommandException {"},{"lineNumber":120,"author":{"gitID":"koo1993"},"content":"        if (!newPassword.equals(confirmedPassword)) {"},{"lineNumber":121,"author":{"gitID":"koo1993"},"content":"            throw new CommandException(MESSAGE_INVALID_CONFIMREDPASSWORD);"},{"lineNumber":122,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":123,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":124,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":125,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":126,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":127,"author":{"gitID":"koo1993"},"content":"     * Creates and returns a {@code Employee} with the details of {@code employeeToEdit}"},{"lineNumber":128,"author":{"gitID":"koo1993"},"content":"     * edited with {@code editEmployeeDescriptor}."},{"lineNumber":129,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":130,"author":{"gitID":"koo1993"},"content":"    private static Employee createNewPasswordEmployee(Employee employeeToEdit,"},{"lineNumber":131,"author":{"gitID":"koo1993"},"content":"                                                 Password password) {"},{"lineNumber":132,"author":{"gitID":"koo1993"},"content":"        assert employeeToEdit !\u003d null;"},{"lineNumber":133,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":134,"author":{"gitID":"koo1993"},"content":"        Name name \u003d employeeToEdit.getName();"},{"lineNumber":135,"author":{"gitID":"koo1993"},"content":"        Phone phone \u003d employeeToEdit.getPhone();"},{"lineNumber":136,"author":{"gitID":"koo1993"},"content":"        Email email \u003d employeeToEdit.getEmail();"},{"lineNumber":137,"author":{"gitID":"koo1993"},"content":"        Address address \u003d employeeToEdit.getAddress();"},{"lineNumber":138,"author":{"gitID":"koo1993"},"content":"        Salary salary \u003d employeeToEdit.getSalary();"},{"lineNumber":139,"author":{"gitID":"koo1993"},"content":"        Set\u003cTag\u003e tags \u003d employeeToEdit.getTags();"},{"lineNumber":140,"author":{"gitID":"koo1993"},"content":"        Password updatedPassword \u003d password;"},{"lineNumber":141,"author":{"gitID":"koo1993"},"content":"        return new Employee(name, phone, email, address, salary, updatedPassword, tags);"},{"lineNumber":142,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":143,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":144,"author":{"gitID":"koo1993"},"content":"    @Override"},{"lineNumber":145,"author":{"gitID":"koo1993"},"content":"    public void setData(Model model, CommandHistory history, UndoRedoStack undoRedoStack) {"},{"lineNumber":146,"author":{"gitID":"koo1993"},"content":"        super.setData(model, history, undoRedoStack);"},{"lineNumber":147,"author":{"gitID":"koo1993"},"content":"        undoRedoStack.resetRedoUndoStack();"},{"lineNumber":148,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":149,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":150,"author":{"gitID":"koo1993"},"content":"    @Override"},{"lineNumber":151,"author":{"gitID":"koo1993"},"content":"    public boolean equals(Object other) {"},{"lineNumber":152,"author":{"gitID":"koo1993"},"content":"        // short circuit if same object"},{"lineNumber":153,"author":{"gitID":"koo1993"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":154,"author":{"gitID":"koo1993"},"content":"            return true;"},{"lineNumber":155,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":156,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":157,"author":{"gitID":"koo1993"},"content":"        // instanceof handles nulls"},{"lineNumber":158,"author":{"gitID":"koo1993"},"content":"        if (!(other instanceof ChangePasswordCommand)) {"},{"lineNumber":159,"author":{"gitID":"koo1993"},"content":"            return false;"},{"lineNumber":160,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":161,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":162,"author":{"gitID":"koo1993"},"content":"        // state check"},{"lineNumber":163,"author":{"gitID":"koo1993"},"content":"        ChangePasswordCommand e \u003d (ChangePasswordCommand) other;"},{"lineNumber":164,"author":{"gitID":"koo1993"},"content":"        return index.equals(e.index)"},{"lineNumber":165,"author":{"gitID":"koo1993"},"content":"                \u0026\u0026 passwords.equals(e.passwords)"},{"lineNumber":166,"author":{"gitID":"koo1993"},"content":"                \u0026\u0026 Objects.equals(employeeToEdit, e.employeeToEdit)"},{"lineNumber":167,"author":{"gitID":"koo1993"},"content":"                \u0026\u0026 Objects.equals(editedEmployee, e.editedEmployee);"},{"lineNumber":168,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":169,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":170,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":171,"author":{"gitID":"koo1993"},"content":"     * Parses a {@code String password} into an {@code Password}."},{"lineNumber":172,"author":{"gitID":"koo1993"},"content":"     * Leading and trailing whitespaces will be trimmed."},{"lineNumber":173,"author":{"gitID":"koo1993"},"content":"     *"},{"lineNumber":174,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":175,"author":{"gitID":"koo1993"},"content":"    public static Password parsePassword(String password) {"},{"lineNumber":176,"author":{"gitID":"koo1993"},"content":"        requireNonNull(password);"},{"lineNumber":177,"author":{"gitID":"koo1993"},"content":"        String trimmedPassword \u003d password.trim();"},{"lineNumber":178,"author":{"gitID":"koo1993"},"content":"        Password newPassword \u003d new Password();"},{"lineNumber":179,"author":{"gitID":"koo1993"},"content":"        newPassword.createPassword(trimmedPassword);"},{"lineNumber":180,"author":{"gitID":"koo1993"},"content":"        return newPassword;"},{"lineNumber":181,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":182,"author":{"gitID":"koo1993"},"content":"}"}],"authorContributionMap":{"koo1993":155,"-":27}},{"path":"src/main/java/seedu/ptman/logic/commands/ApplyCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.logic.parser.CliSyntax.PREFIX_PASSWORD;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.Messages;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.index.Index;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.exceptions.CommandException;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.exceptions.InvalidPasswordException;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.commands.exceptions.MissingPasswordException;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Employee;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.exceptions.DuplicateEmployeeException;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Shift;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.exceptions.DuplicateShiftException;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.exceptions.ShiftFullException;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.exceptions.ShiftNotFoundException;"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"shanwpf"},"content":"//@@author shanwpf"},{"lineNumber":24,"author":{"gitID":"shanwpf"},"content":"/**"},{"lineNumber":25,"author":{"gitID":"shanwpf"},"content":" * Registers an employee to a shift identified using their last displayed index from PTMan."},{"lineNumber":26,"author":{"gitID":"shanwpf"},"content":" */"},{"lineNumber":27,"author":{"gitID":"shanwpf"},"content":"public class ApplyCommand extends UndoableCommand {"},{"lineNumber":28,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":29,"author":{"gitID":"shanwpf"},"content":"    public static final String COMMAND_WORD \u003d \"apply\";"},{"lineNumber":30,"author":{"gitID":"shanwpf"},"content":"    public static final String COMMAND_ALIAS \u003d \"ap\";"},{"lineNumber":31,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":32,"author":{"gitID":"shanwpf"},"content":"    public static final String COMMAND_FORMAT \u003d \"EMPLOYEE_INDEX \""},{"lineNumber":33,"author":{"gitID":"shanwpf"},"content":"            + \"SHIFT_INDEX \""},{"lineNumber":34,"author":{"gitID":"shanwpf"},"content":"            + \"[\" + PREFIX_PASSWORD + \"PASSWORD]\";"},{"lineNumber":35,"author":{"gitID":"shanwpf"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"},{"lineNumber":36,"author":{"gitID":"shanwpf"},"content":"            + \": Applies an employee for the shift identified by the index number.\\n\""},{"lineNumber":37,"author":{"gitID":"shanwpf"},"content":"            + \"Parameters: \""},{"lineNumber":38,"author":{"gitID":"shanwpf"},"content":"            + COMMAND_FORMAT"},{"lineNumber":39,"author":{"gitID":"shanwpf"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" 1 1 \" + PREFIX_PASSWORD + \"hunter2\";"},{"lineNumber":40,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":41,"author":{"gitID":"shanwpf"},"content":"    public static final String MESSAGE_APPLY_SHIFT_SUCCESS \u003d \"Employee %1$s applied for shift %2$s\";"},{"lineNumber":42,"author":{"gitID":"shanwpf"},"content":"    public static final String MESSAGE_DUPLICATE_EMPLOYEE \u003d \"Employee is already in the shift\";"},{"lineNumber":43,"author":{"gitID":"shanwpf"},"content":"    public static final String MESSAGE_SHIFT_FULL \u003d \"Shift %1$s is full\";"},{"lineNumber":44,"author":{"gitID":"shanwpf"},"content":"    public static final String MESSAGE_SHIFT_OVER \u003d \"Shift %1$s has already passed\";"},{"lineNumber":45,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":46,"author":{"gitID":"shanwpf"},"content":"    private final Index employeeIndex;"},{"lineNumber":47,"author":{"gitID":"shanwpf"},"content":"    private final Index shiftIndex;"},{"lineNumber":48,"author":{"gitID":"shanwpf"},"content":"    private final Optional\u003cPassword\u003e optionalPassword;"},{"lineNumber":49,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":50,"author":{"gitID":"shanwpf"},"content":"    private Employee applicant;"},{"lineNumber":51,"author":{"gitID":"shanwpf"},"content":"    private Shift shiftToApply;"},{"lineNumber":52,"author":{"gitID":"shanwpf"},"content":"    private Shift editedShift;"},{"lineNumber":53,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":54,"author":{"gitID":"shanwpf"},"content":"    public ApplyCommand(Index employeeIndex, Index shiftIndex, Optional\u003cPassword\u003e optionalPassword) {"},{"lineNumber":55,"author":{"gitID":"shanwpf"},"content":"        this.optionalPassword \u003d optionalPassword;"},{"lineNumber":56,"author":{"gitID":"shanwpf"},"content":"        this.employeeIndex \u003d employeeIndex;"},{"lineNumber":57,"author":{"gitID":"shanwpf"},"content":"        this.shiftIndex \u003d shiftIndex;"},{"lineNumber":58,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":59,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":60,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":61,"author":{"gitID":"shanwpf"},"content":"    @Override"},{"lineNumber":62,"author":{"gitID":"shanwpf"},"content":"    public CommandResult executeUndoableCommand() throws CommandException {"},{"lineNumber":63,"author":{"gitID":"shanwpf"},"content":"        requireNonNull(applicant);"},{"lineNumber":64,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":65,"author":{"gitID":"shanwpf"},"content":"        // Check if password is present when not in admin mode"},{"lineNumber":66,"author":{"gitID":"shanwpf"},"content":"        if (!model.isAdminMode()) {"},{"lineNumber":67,"author":{"gitID":"shanwpf"},"content":"            if (!optionalPassword.isPresent()) {"},{"lineNumber":68,"author":{"gitID":"shanwpf"},"content":"                throw new MissingPasswordException();"},{"lineNumber":69,"author":{"gitID":"shanwpf"},"content":"            }"},{"lineNumber":70,"author":{"gitID":"shanwpf"},"content":"            if (!applicant.isCorrectPassword(optionalPassword.get())) {"},{"lineNumber":71,"author":{"gitID":"shanwpf"},"content":"                throw new InvalidPasswordException();"},{"lineNumber":72,"author":{"gitID":"shanwpf"},"content":"            }"},{"lineNumber":73,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":74,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":75,"author":{"gitID":"shanwpf"},"content":"        try {"},{"lineNumber":76,"author":{"gitID":"shanwpf"},"content":"            model.updateShift(shiftToApply, editedShift);"},{"lineNumber":77,"author":{"gitID":"shanwpf"},"content":"        } catch (ShiftNotFoundException e) {"},{"lineNumber":78,"author":{"gitID":"shanwpf"},"content":"            throw new AssertionError(\"Shift not found\");"},{"lineNumber":79,"author":{"gitID":"shanwpf"},"content":"        } catch (DuplicateShiftException e) {"},{"lineNumber":80,"author":{"gitID":"shanwpf"},"content":"            throw new AssertionError(\"Duplicate shift\");"},{"lineNumber":81,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":82,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":83,"author":{"gitID":"shanwpf"},"content":"        return new CommandResult(String.format(MESSAGE_APPLY_SHIFT_SUCCESS,"},{"lineNumber":84,"author":{"gitID":"shanwpf"},"content":"                applicant.getName(), shiftIndex.getOneBased()));"},{"lineNumber":85,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":86,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":87,"author":{"gitID":"shanwpf"},"content":"    @Override"},{"lineNumber":88,"author":{"gitID":"shanwpf"},"content":"    protected void preprocessUndoableCommand() throws CommandException {"},{"lineNumber":89,"author":{"gitID":"shanwpf"},"content":"        List\u003cEmployee\u003e lastShownList \u003d model.getFilteredEmployeeList();"},{"lineNumber":90,"author":{"gitID":"shanwpf"},"content":"        List\u003cShift\u003e shiftList \u003d model.getFilteredShiftList();"},{"lineNumber":91,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":92,"author":{"gitID":"shanwpf"},"content":"        if (employeeIndex.getZeroBased() \u003e\u003d lastShownList.size()) {"},{"lineNumber":93,"author":{"gitID":"shanwpf"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX);"},{"lineNumber":94,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":95,"author":{"gitID":"shanwpf"},"content":"        if (shiftIndex.getZeroBased() \u003e\u003d shiftList.size()) {"},{"lineNumber":96,"author":{"gitID":"shanwpf"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_SHIFT_DISPLAYED_INDEX);"},{"lineNumber":97,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":98,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":99,"author":{"gitID":"shanwpf"},"content":"        applicant \u003d lastShownList.get(employeeIndex.getZeroBased());"},{"lineNumber":100,"author":{"gitID":"shanwpf"},"content":"        shiftToApply \u003d shiftList.get(shiftIndex.getZeroBased());"},{"lineNumber":101,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":102,"author":{"gitID":"shanwpf"},"content":"        if (shiftToApply.isOver()) {"},{"lineNumber":103,"author":{"gitID":"shanwpf"},"content":"            throw new CommandException(String.format(MESSAGE_SHIFT_OVER, shiftIndex.getOneBased()));"},{"lineNumber":104,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":105,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":106,"author":{"gitID":"shanwpf"},"content":"        editedShift \u003d new Shift(shiftToApply);"},{"lineNumber":107,"author":{"gitID":"shanwpf"},"content":"        try {"},{"lineNumber":108,"author":{"gitID":"shanwpf"},"content":"            editedShift.addEmployee(applicant);"},{"lineNumber":109,"author":{"gitID":"shanwpf"},"content":"        } catch (DuplicateEmployeeException e) {"},{"lineNumber":110,"author":{"gitID":"shanwpf"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EMPLOYEE);"},{"lineNumber":111,"author":{"gitID":"shanwpf"},"content":"        } catch (ShiftFullException e) {"},{"lineNumber":112,"author":{"gitID":"shanwpf"},"content":"            throw new CommandException(String.format(MESSAGE_SHIFT_FULL, shiftIndex.getOneBased()));"},{"lineNumber":113,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":114,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":115,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":116,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":117,"author":{"gitID":"shanwpf"},"content":"    @Override"},{"lineNumber":118,"author":{"gitID":"shanwpf"},"content":"    public boolean equals(Object o) {"},{"lineNumber":119,"author":{"gitID":"shanwpf"},"content":"        if (this \u003d\u003d o) {"},{"lineNumber":120,"author":{"gitID":"shanwpf"},"content":"            return true;"},{"lineNumber":121,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":122,"author":{"gitID":"shanwpf"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"},{"lineNumber":123,"author":{"gitID":"shanwpf"},"content":"            return false;"},{"lineNumber":124,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":125,"author":{"gitID":"shanwpf"},"content":"        ApplyCommand that \u003d (ApplyCommand) o;"},{"lineNumber":126,"author":{"gitID":"shanwpf"},"content":"        return Objects.equals(employeeIndex, that.employeeIndex)"},{"lineNumber":127,"author":{"gitID":"shanwpf"},"content":"                \u0026\u0026 Objects.equals(shiftIndex, that.shiftIndex)"},{"lineNumber":128,"author":{"gitID":"shanwpf"},"content":"                \u0026\u0026 Objects.equals(applicant, that.applicant)"},{"lineNumber":129,"author":{"gitID":"shanwpf"},"content":"                \u0026\u0026 Objects.equals(shiftToApply, that.shiftToApply);"},{"lineNumber":130,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":131,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":132,"author":{"gitID":"shanwpf"},"content":"    @Override"},{"lineNumber":133,"author":{"gitID":"shanwpf"},"content":"    public int hashCode() {"},{"lineNumber":134,"author":{"gitID":"shanwpf"},"content":"        return Objects.hash(employeeIndex, shiftIndex, applicant, shiftToApply);"},{"lineNumber":135,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":136,"author":{"gitID":"shanwpf"},"content":"}"}],"authorContributionMap":{"shanwpf":114,"-":22}},{"path":"src/main/java/seedu/ptman/storage/XmlAdaptedShift.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.HashSet;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import javax.xml.bind.annotation.XmlElement;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.exceptions.IllegalValueException;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Employee;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Capacity;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Date;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Shift;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Time;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"shanwpf"},"content":"//@@author shanwpf"},{"lineNumber":18,"author":{"gitID":"shanwpf"},"content":"/**"},{"lineNumber":19,"author":{"gitID":"shanwpf"},"content":" * JAXB-friendly version of the Shift."},{"lineNumber":20,"author":{"gitID":"shanwpf"},"content":" */"},{"lineNumber":21,"author":{"gitID":"shanwpf"},"content":"public class XmlAdaptedShift {"},{"lineNumber":22,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":23,"author":{"gitID":"shanwpf"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT_SHIFT \u003d \"Shifts\u0027s %s field is missing!\";"},{"lineNumber":24,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":25,"author":{"gitID":"shanwpf"},"content":"    @XmlElement(required \u003d true)"},{"lineNumber":26,"author":{"gitID":"shanwpf"},"content":"    private String date;"},{"lineNumber":27,"author":{"gitID":"shanwpf"},"content":"    @XmlElement(required \u003d true)"},{"lineNumber":28,"author":{"gitID":"shanwpf"},"content":"    private String startTime;"},{"lineNumber":29,"author":{"gitID":"shanwpf"},"content":"    @XmlElement(required \u003d true)"},{"lineNumber":30,"author":{"gitID":"shanwpf"},"content":"    private String endTime;"},{"lineNumber":31,"author":{"gitID":"shanwpf"},"content":"    @XmlElement(required \u003d true)"},{"lineNumber":32,"author":{"gitID":"shanwpf"},"content":"    private String capacity;"},{"lineNumber":33,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":34,"author":{"gitID":"shanwpf"},"content":"    @XmlElement"},{"lineNumber":35,"author":{"gitID":"shanwpf"},"content":"    private List\u003cXmlAdaptedEmployee\u003e employees \u003d new ArrayList\u003c\u003e();"},{"lineNumber":36,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":37,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":38,"author":{"gitID":"shanwpf"},"content":"     * Constructs an XmlAdaptedShift."},{"lineNumber":39,"author":{"gitID":"shanwpf"},"content":"     * This is the no-arg constructor that is required by JAXB."},{"lineNumber":40,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":41,"author":{"gitID":"shanwpf"},"content":"    public XmlAdaptedShift() {}"},{"lineNumber":42,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":43,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":44,"author":{"gitID":"shanwpf"},"content":"     * Constructs an {@code XmlAdaptedShift} with the given shift details."},{"lineNumber":45,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":46,"author":{"gitID":"shanwpf"},"content":"    public XmlAdaptedShift(String date, String startTime, String endTime,"},{"lineNumber":47,"author":{"gitID":"shanwpf"},"content":"                           String capacity, List\u003cXmlAdaptedEmployee\u003e employees) {"},{"lineNumber":48,"author":{"gitID":"shanwpf"},"content":"        this.date \u003d date;"},{"lineNumber":49,"author":{"gitID":"shanwpf"},"content":"        this.startTime \u003d startTime;"},{"lineNumber":50,"author":{"gitID":"shanwpf"},"content":"        this.endTime \u003d endTime;"},{"lineNumber":51,"author":{"gitID":"shanwpf"},"content":"        this.capacity \u003d capacity;"},{"lineNumber":52,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":53,"author":{"gitID":"shanwpf"},"content":"        if (employees !\u003d null) {"},{"lineNumber":54,"author":{"gitID":"shanwpf"},"content":"            this.employees \u003d new ArrayList\u003c\u003e(employees);"},{"lineNumber":55,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":56,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":58,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":59,"author":{"gitID":"shanwpf"},"content":"     * Converts a given Shift into this class for JAXB use."},{"lineNumber":60,"author":{"gitID":"shanwpf"},"content":"     *"},{"lineNumber":61,"author":{"gitID":"shanwpf"},"content":"     * @param source future changes to this will not affect the created XmlAdaptedShift"},{"lineNumber":62,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":63,"author":{"gitID":"shanwpf"},"content":"    public XmlAdaptedShift(Shift source) {"},{"lineNumber":64,"author":{"gitID":"shanwpf"},"content":"        date \u003d source.getDate().toString();"},{"lineNumber":65,"author":{"gitID":"shanwpf"},"content":"        startTime \u003d source.getStartTime().toString();"},{"lineNumber":66,"author":{"gitID":"shanwpf"},"content":"        endTime \u003d source.getEndTime().toString();"},{"lineNumber":67,"author":{"gitID":"shanwpf"},"content":"        capacity \u003d source.getCapacity().toString();"},{"lineNumber":68,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":69,"author":{"gitID":"shanwpf"},"content":"        employees \u003d new ArrayList\u003c\u003e();"},{"lineNumber":70,"author":{"gitID":"shanwpf"},"content":"        for (Employee employee : source.getEmployeeList()) {"},{"lineNumber":71,"author":{"gitID":"shanwpf"},"content":"            employees.add(new XmlAdaptedEmployee(employee));"},{"lineNumber":72,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":73,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":74,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":75,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":76,"author":{"gitID":"shanwpf"},"content":"     * Decrypts date"},{"lineNumber":77,"author":{"gitID":"shanwpf"},"content":"     * @return"},{"lineNumber":78,"author":{"gitID":"shanwpf"},"content":"     * @throws IllegalValueException"},{"lineNumber":79,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":80,"author":{"gitID":"shanwpf"},"content":"    private Date setDate() throws IllegalValueException {"},{"lineNumber":81,"author":{"gitID":"shanwpf"},"content":"        if (this.date \u003d\u003d null) {"},{"lineNumber":82,"author":{"gitID":"shanwpf"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT_SHIFT,"},{"lineNumber":83,"author":{"gitID":"shanwpf"},"content":"                    Date.class.getSimpleName()));"},{"lineNumber":84,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":85,"author":{"gitID":"shanwpf"},"content":"        if (!Date.isValidDate(this.date)) {"},{"lineNumber":86,"author":{"gitID":"shanwpf"},"content":"            throw new IllegalValueException(Date.MESSAGE_DATE_CONSTRAINTS);"},{"lineNumber":87,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":88,"author":{"gitID":"shanwpf"},"content":"        return new Date(this.date);"},{"lineNumber":89,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":90,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":91,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":92,"author":{"gitID":"shanwpf"},"content":"     * Decryptes time"},{"lineNumber":93,"author":{"gitID":"shanwpf"},"content":"     * @param time"},{"lineNumber":94,"author":{"gitID":"shanwpf"},"content":"     * @return"},{"lineNumber":95,"author":{"gitID":"shanwpf"},"content":"     * @throws IllegalValueException"},{"lineNumber":96,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":97,"author":{"gitID":"shanwpf"},"content":"    private Time setTime(String time) throws IllegalValueException {"},{"lineNumber":98,"author":{"gitID":"shanwpf"},"content":"        if (time \u003d\u003d null) {"},{"lineNumber":99,"author":{"gitID":"shanwpf"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT_SHIFT,"},{"lineNumber":100,"author":{"gitID":"shanwpf"},"content":"                    Time.class.getSimpleName()));"},{"lineNumber":101,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":102,"author":{"gitID":"shanwpf"},"content":"        if (!Time.isValidTime(time)) {"},{"lineNumber":103,"author":{"gitID":"shanwpf"},"content":"            throw new IllegalValueException(Time.MESSAGE_TIME_CONSTRAINTS);"},{"lineNumber":104,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":105,"author":{"gitID":"shanwpf"},"content":"        return new Time(time);"},{"lineNumber":106,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":107,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":108,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":109,"author":{"gitID":"shanwpf"},"content":"     * Decryptes capacity"},{"lineNumber":110,"author":{"gitID":"shanwpf"},"content":"     * @return"},{"lineNumber":111,"author":{"gitID":"shanwpf"},"content":"     * @throws IllegalValueException"},{"lineNumber":112,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":113,"author":{"gitID":"shanwpf"},"content":"    private Capacity setCapacity() throws IllegalValueException {"},{"lineNumber":114,"author":{"gitID":"shanwpf"},"content":"        if (this.capacity \u003d\u003d null) {"},{"lineNumber":115,"author":{"gitID":"shanwpf"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT_SHIFT,"},{"lineNumber":116,"author":{"gitID":"shanwpf"},"content":"                    Capacity.class.getSimpleName()));"},{"lineNumber":117,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":118,"author":{"gitID":"shanwpf"},"content":"        if (!Capacity.isValidCapacity(this.capacity)) {"},{"lineNumber":119,"author":{"gitID":"shanwpf"},"content":"            throw new IllegalValueException(Capacity.MESSAGE_CAPACITY_CONSTRAINTS);"},{"lineNumber":120,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":121,"author":{"gitID":"shanwpf"},"content":"        return new Capacity(this.capacity);"},{"lineNumber":122,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":123,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":124,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":125,"author":{"gitID":"shanwpf"},"content":"     * Converts this jaxb-friendly adapted shift object into the model\u0027s Shift object."},{"lineNumber":126,"author":{"gitID":"shanwpf"},"content":"     *"},{"lineNumber":127,"author":{"gitID":"shanwpf"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted shift"},{"lineNumber":128,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":129,"author":{"gitID":"shanwpf"},"content":"    public Shift toModelType() throws IllegalValueException {"},{"lineNumber":130,"author":{"gitID":"shanwpf"},"content":"        final List\u003cEmployee\u003e employees \u003d new ArrayList\u003c\u003e();"},{"lineNumber":131,"author":{"gitID":"shanwpf"},"content":"        for (XmlAdaptedEmployee employee : this.employees) {"},{"lineNumber":132,"author":{"gitID":"shanwpf"},"content":"            employees.add(employee.toModelType());"},{"lineNumber":133,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":134,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":135,"author":{"gitID":"shanwpf"},"content":"        final Date date \u003d setDate();"},{"lineNumber":136,"author":{"gitID":"shanwpf"},"content":"        final Time startTime \u003d setTime(this.startTime);"},{"lineNumber":137,"author":{"gitID":"shanwpf"},"content":"        final Time endTime \u003d setTime(this.endTime);"},{"lineNumber":138,"author":{"gitID":"shanwpf"},"content":"        final Capacity capacity \u003d setCapacity();"},{"lineNumber":139,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":140,"author":{"gitID":"shanwpf"},"content":"        return new Shift(date, startTime, endTime, capacity, new HashSet\u003c\u003e(employees));"},{"lineNumber":141,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":142,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":143,"author":{"gitID":"shanwpf"},"content":"    @Override"},{"lineNumber":144,"author":{"gitID":"shanwpf"},"content":"    public boolean equals(Object other) {"},{"lineNumber":145,"author":{"gitID":"shanwpf"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":146,"author":{"gitID":"shanwpf"},"content":"            return true;"},{"lineNumber":147,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":148,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":149,"author":{"gitID":"shanwpf"},"content":"        if (!(other instanceof XmlAdaptedShift)) {"},{"lineNumber":150,"author":{"gitID":"shanwpf"},"content":"            return false;"},{"lineNumber":151,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":152,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":153,"author":{"gitID":"shanwpf"},"content":"        XmlAdaptedShift otherShift \u003d (XmlAdaptedShift) other;"},{"lineNumber":154,"author":{"gitID":"shanwpf"},"content":"        return Objects.equals(date, otherShift.date)"},{"lineNumber":155,"author":{"gitID":"shanwpf"},"content":"                \u0026\u0026 Objects.equals(startTime, otherShift.startTime)"},{"lineNumber":156,"author":{"gitID":"shanwpf"},"content":"                \u0026\u0026 Objects.equals(endTime, otherShift.endTime)"},{"lineNumber":157,"author":{"gitID":"shanwpf"},"content":"                \u0026\u0026 Objects.equals(capacity, otherShift.capacity)"},{"lineNumber":158,"author":{"gitID":"shanwpf"},"content":"                \u0026\u0026 employees.equals(otherShift.employees);"},{"lineNumber":159,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":160,"author":{"gitID":"shanwpf"},"content":"}"}],"authorContributionMap":{"shanwpf":144,"-":16}},{"path":"src/main/java/seedu/ptman/storage/StorageManager.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.awt.Point;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.ComponentManager;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.LogsCenter;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.model.OutletDataChangedEvent;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.model.PartTimeManagerChangedEvent;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.storage.DataSavingExceptionEvent;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.exceptions.DataConversionException;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.ptman.model.ReadOnlyPartTimeManager;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.ptman.model.UserPrefs;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":21,"author":{"gitID":"-"},"content":" * Manages storage of PartTimeManager data in local storage."},{"lineNumber":22,"author":{"gitID":"-"},"content":" */"},{"lineNumber":23,"author":{"gitID":"-"},"content":"public class StorageManager extends ComponentManager implements Storage {"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    private PartTimeManagerStorage partTimeManagerStorage;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"    private UserPrefsStorage userPrefsStorage;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"    private OutletInformationStorage outletInformationStorage;"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"    public StorageManager(PartTimeManagerStorage partTimeManagerStorage, UserPrefsStorage userPrefsStorage,"},{"lineNumber":32,"author":{"gitID":"-"},"content":"                          OutletInformationStorage outletInformationStorage) {"},{"lineNumber":33,"author":{"gitID":"-"},"content":"        super();"},{"lineNumber":34,"author":{"gitID":"-"},"content":"        this.partTimeManagerStorage \u003d partTimeManagerStorage;"},{"lineNumber":35,"author":{"gitID":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        this.outletInformationStorage \u003d outletInformationStorage;"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":40,"author":{"gitID":"-"},"content":""},{"lineNumber":41,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    public String getUserPrefsFilePath() {"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        return userPrefsStorage.readUserPrefs();"},{"lineNumber":49,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    public void saveUserPrefs(UserPrefs userPrefs) throws IOException {"},{"lineNumber":53,"author":{"gitID":"-"},"content":"        Point coordinate \u003d userPrefs.getGuiSettings().getWindowCoordinates();"},{"lineNumber":54,"author":{"gitID":"-"},"content":"        if (coordinate.x \u003e 1600 || coordinate.x \u003c 0 || coordinate.y \u003e 1600 || coordinate.y \u003c 0) {"},{"lineNumber":55,"author":{"gitID":"-"},"content":"            userPrefs.resetGuiPosition();"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":57,"author":{"gitID":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);"},{"lineNumber":58,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":59,"author":{"gitID":"-"},"content":""},{"lineNumber":60,"author":{"gitID":"-"},"content":""},{"lineNumber":61,"author":{"gitID":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PartTimeManager methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":62,"author":{"gitID":"-"},"content":""},{"lineNumber":63,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":64,"author":{"gitID":"-"},"content":"    public String getPartTimeManagerFilePath() {"},{"lineNumber":65,"author":{"gitID":"-"},"content":"        return partTimeManagerStorage.getPartTimeManagerFilePath();"},{"lineNumber":66,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":67,"author":{"gitID":"-"},"content":""},{"lineNumber":68,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":69,"author":{"gitID":"-"},"content":"    public Optional\u003cReadOnlyPartTimeManager\u003e readPartTimeManager(boolean isDataEncrypted)"},{"lineNumber":70,"author":{"gitID":"-"},"content":"            throws DataConversionException, IOException {"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        return readPartTimeManager(isDataEncrypted, partTimeManagerStorage.getPartTimeManagerFilePath());"},{"lineNumber":72,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"-"},"content":""},{"lineNumber":74,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":75,"author":{"gitID":"-"},"content":"    public Optional\u003cReadOnlyPartTimeManager\u003e readPartTimeManager(boolean isDataEncrypted, String filePath)"},{"lineNumber":76,"author":{"gitID":"-"},"content":"            throws DataConversionException, IOException {"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);"},{"lineNumber":78,"author":{"gitID":"-"},"content":"        return partTimeManagerStorage.readPartTimeManager(isDataEncrypted, filePath);"},{"lineNumber":79,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":80,"author":{"gitID":"-"},"content":""},{"lineNumber":81,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":82,"author":{"gitID":"-"},"content":"    public void savePartTimeManager(ReadOnlyPartTimeManager partTimeManager) throws IOException {"},{"lineNumber":83,"author":{"gitID":"-"},"content":"        savePartTimeManager(partTimeManager, partTimeManagerStorage.getPartTimeManagerFilePath());"},{"lineNumber":84,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":85,"author":{"gitID":"-"},"content":""},{"lineNumber":86,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":87,"author":{"gitID":"-"},"content":"    public void savePartTimeManager(ReadOnlyPartTimeManager partTimeManager, String filePath) throws IOException {"},{"lineNumber":88,"author":{"gitID":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);"},{"lineNumber":89,"author":{"gitID":"-"},"content":"        partTimeManagerStorage.savePartTimeManager(partTimeManager, filePath);"},{"lineNumber":90,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":91,"author":{"gitID":"-"},"content":""},{"lineNumber":92,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":93,"author":{"gitID":"-"},"content":"    @Subscribe"},{"lineNumber":94,"author":{"gitID":"-"},"content":"    public void handlePartTimeManagerChangedEvent(PartTimeManagerChangedEvent event) {"},{"lineNumber":95,"author":{"gitID":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event, \"Local data changed, saving to file\"));"},{"lineNumber":96,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":97,"author":{"gitID":"-"},"content":"            savePartTimeManager(event.data);"},{"lineNumber":98,"author":{"gitID":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":99,"author":{"gitID":"-"},"content":"            raise(new DataSavingExceptionEvent(e));"},{"lineNumber":100,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":101,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":102,"author":{"gitID":"-"},"content":""},{"lineNumber":103,"author":{"gitID":"-"},"content":""},{"lineNumber":104,"author":{"gitID":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d OutletInformation methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":105,"author":{"gitID":"-"},"content":""},{"lineNumber":106,"author":{"gitID":"SunBangjie"},"content":"    //@@author SunBangjie"},{"lineNumber":107,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":108,"author":{"gitID":"SunBangjie"},"content":"    public String getOutletInformationFilePath() {"},{"lineNumber":109,"author":{"gitID":"SunBangjie"},"content":"        return outletInformationStorage.getOutletInformationFilePath();"},{"lineNumber":110,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":111,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":112,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":113,"author":{"gitID":"SunBangjie"},"content":"    public Optional\u003cOutletInformation\u003e readOutletInformation() throws DataConversionException, IOException {"},{"lineNumber":114,"author":{"gitID":"SunBangjie"},"content":"        return readOutletInformation(outletInformationStorage.getOutletInformationFilePath());"},{"lineNumber":115,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":116,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":117,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":118,"author":{"gitID":"SunBangjie"},"content":"    public Optional\u003cOutletInformation\u003e readOutletInformation(String filePath)"},{"lineNumber":119,"author":{"gitID":"SunBangjie"},"content":"            throws DataConversionException, IOException {"},{"lineNumber":120,"author":{"gitID":"SunBangjie"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);"},{"lineNumber":121,"author":{"gitID":"SunBangjie"},"content":"        return outletInformationStorage.readOutletInformation(filePath);"},{"lineNumber":122,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":123,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":124,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":125,"author":{"gitID":"SunBangjie"},"content":"    public void saveOutletInformation(OutletInformation outletInformation) throws IOException {"},{"lineNumber":126,"author":{"gitID":"SunBangjie"},"content":"        saveOutletInformation(outletInformation, outletInformationStorage.getOutletInformationFilePath());"},{"lineNumber":127,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":128,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":129,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":130,"author":{"gitID":"SunBangjie"},"content":"    public void saveOutletInformation(OutletInformation outletInformation, String filePath) throws IOException {"},{"lineNumber":131,"author":{"gitID":"SunBangjie"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);"},{"lineNumber":132,"author":{"gitID":"SunBangjie"},"content":"        outletInformationStorage.saveOutletInformation(outletInformation, filePath);"},{"lineNumber":133,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":134,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":135,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":136,"author":{"gitID":"SunBangjie"},"content":"    @Subscribe"},{"lineNumber":137,"author":{"gitID":"SunBangjie"},"content":"    public void handleOutletDataChangedEvent(OutletDataChangedEvent event) {"},{"lineNumber":138,"author":{"gitID":"SunBangjie"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event, \"Local data changed, saving to file\"));"},{"lineNumber":139,"author":{"gitID":"SunBangjie"},"content":"        try {"},{"lineNumber":140,"author":{"gitID":"SunBangjie"},"content":"            saveOutletInformation(event.data);"},{"lineNumber":141,"author":{"gitID":"SunBangjie"},"content":"        } catch (IOException e) {"},{"lineNumber":142,"author":{"gitID":"SunBangjie"},"content":"            raise(new DataSavingExceptionEvent(e));"},{"lineNumber":143,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":144,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":145,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":146,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":147,"author":{"gitID":"SunBangjie"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d backup methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":148,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":149,"author":{"gitID":"SunBangjie"},"content":"    //@@author SunBangjie"},{"lineNumber":150,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":151,"author":{"gitID":"SunBangjie"},"content":"    public void backupPartTimeManager(ReadOnlyPartTimeManager partTimeManager) throws IOException {"},{"lineNumber":152,"author":{"gitID":"SunBangjie"},"content":"        partTimeManagerStorage.backupPartTimeManager(partTimeManager);"},{"lineNumber":153,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":154,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":155,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":156,"author":{"gitID":"SunBangjie"},"content":"    public void backupOutletInformation(OutletInformation outletInformation) throws IOException {"},{"lineNumber":157,"author":{"gitID":"SunBangjie"},"content":"        outletInformationStorage.backupOutletInformation(outletInformation);"},{"lineNumber":158,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":159,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":105,"SunBangjie":54}},{"path":"src/main/java/seedu/ptman/storage/XmlOutletInformationStorage.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.LogsCenter;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.exceptions.DataConversionException;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.exceptions.IllegalValueException;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.util.FileUtil;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":18,"author":{"gitID":"SunBangjie"},"content":"/**"},{"lineNumber":19,"author":{"gitID":"SunBangjie"},"content":" * A class to access OutletInformation data stored as an xml file on the hard disk."},{"lineNumber":20,"author":{"gitID":"SunBangjie"},"content":" */"},{"lineNumber":21,"author":{"gitID":"SunBangjie"},"content":"public class XmlOutletInformationStorage implements OutletInformationStorage {"},{"lineNumber":22,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":23,"author":{"gitID":"SunBangjie"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(XmlOutletInformationStorage.class);"},{"lineNumber":24,"author":{"gitID":"SunBangjie"},"content":"    private static final String BACKUP_FILE_EXTENSION \u003d \".backup\";"},{"lineNumber":25,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":26,"author":{"gitID":"SunBangjie"},"content":"    private String filePath;"},{"lineNumber":27,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":28,"author":{"gitID":"SunBangjie"},"content":"    public XmlOutletInformationStorage(String filePath) {"},{"lineNumber":29,"author":{"gitID":"SunBangjie"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":30,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":32,"author":{"gitID":"SunBangjie"},"content":"    public String getOutletInformationFilePath() {"},{"lineNumber":33,"author":{"gitID":"SunBangjie"},"content":"        return filePath;"},{"lineNumber":34,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":36,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":37,"author":{"gitID":"SunBangjie"},"content":"    public Optional\u003cOutletInformation\u003e readOutletInformation() throws DataConversionException, IOException {"},{"lineNumber":38,"author":{"gitID":"SunBangjie"},"content":"        return readOutletInformation(filePath);"},{"lineNumber":39,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":41,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":42,"author":{"gitID":"SunBangjie"},"content":"     * Reads outlet information from storage"},{"lineNumber":43,"author":{"gitID":"SunBangjie"},"content":"     * @param filePath"},{"lineNumber":44,"author":{"gitID":"SunBangjie"},"content":"     * @return"},{"lineNumber":45,"author":{"gitID":"SunBangjie"},"content":"     * @throws DataConversionException"},{"lineNumber":46,"author":{"gitID":"SunBangjie"},"content":"     * @throws FileNotFoundException"},{"lineNumber":47,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":48,"author":{"gitID":"SunBangjie"},"content":"    public Optional\u003cOutletInformation\u003e readOutletInformation(String filePath) throws DataConversionException,"},{"lineNumber":49,"author":{"gitID":"SunBangjie"},"content":"            FileNotFoundException {"},{"lineNumber":50,"author":{"gitID":"SunBangjie"},"content":"        requireNonNull(filePath);"},{"lineNumber":51,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":52,"author":{"gitID":"SunBangjie"},"content":"        File outletInformationFile \u003d new File(filePath);"},{"lineNumber":53,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":54,"author":{"gitID":"SunBangjie"},"content":"        if (!outletInformationFile.exists()) {"},{"lineNumber":55,"author":{"gitID":"SunBangjie"},"content":"            logger.info(\"OutletInformation file \" + outletInformationFile + \" not found\");"},{"lineNumber":56,"author":{"gitID":"SunBangjie"},"content":"            return Optional.empty();"},{"lineNumber":57,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":58,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":59,"author":{"gitID":"SunBangjie"},"content":"        XmlAdaptedOutletInformation xmlAdaptedOutletInformation \u003d XmlOutletFileStorage"},{"lineNumber":60,"author":{"gitID":"SunBangjie"},"content":"                .loadDataFromSaveFile(new File(filePath));"},{"lineNumber":61,"author":{"gitID":"SunBangjie"},"content":"        try {"},{"lineNumber":62,"author":{"gitID":"SunBangjie"},"content":"            return Optional.of(xmlAdaptedOutletInformation.toModelType());"},{"lineNumber":63,"author":{"gitID":"SunBangjie"},"content":"        } catch (IllegalValueException ive) {"},{"lineNumber":64,"author":{"gitID":"SunBangjie"},"content":"            logger.info(\"Illegal values found in \" + outletInformationFile + \": \" + ive.getMessage());"},{"lineNumber":65,"author":{"gitID":"SunBangjie"},"content":"            throw new DataConversionException(ive);"},{"lineNumber":66,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":67,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":69,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":70,"author":{"gitID":"SunBangjie"},"content":"    public void saveOutletInformation(OutletInformation outletInformation) throws IOException {"},{"lineNumber":71,"author":{"gitID":"SunBangjie"},"content":"        saveOutletInformation(outletInformation, filePath);"},{"lineNumber":72,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":74,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":75,"author":{"gitID":"SunBangjie"},"content":"     * Saves outlet information into storage"},{"lineNumber":76,"author":{"gitID":"SunBangjie"},"content":"     * @param outletInformation"},{"lineNumber":77,"author":{"gitID":"SunBangjie"},"content":"     * @param filePath"},{"lineNumber":78,"author":{"gitID":"SunBangjie"},"content":"     * @throws IOException"},{"lineNumber":79,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":80,"author":{"gitID":"SunBangjie"},"content":"    public void saveOutletInformation(OutletInformation outletInformation, String filePath) throws IOException {"},{"lineNumber":81,"author":{"gitID":"SunBangjie"},"content":"        requireNonNull(outletInformation);"},{"lineNumber":82,"author":{"gitID":"SunBangjie"},"content":"        requireNonNull(filePath);"},{"lineNumber":83,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":84,"author":{"gitID":"SunBangjie"},"content":"        File file \u003d new File(filePath);"},{"lineNumber":85,"author":{"gitID":"SunBangjie"},"content":"        FileUtil.createIfMissing(file);"},{"lineNumber":86,"author":{"gitID":"SunBangjie"},"content":"        XmlOutletFileStorage.saveDataToFile(file, new XmlAdaptedOutletInformation(outletInformation));"},{"lineNumber":87,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":88,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":89,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":90,"author":{"gitID":"SunBangjie"},"content":"    public void backupOutletInformation(OutletInformation outletInformation) throws IOException {"},{"lineNumber":91,"author":{"gitID":"SunBangjie"},"content":"        saveOutletInformation(outletInformation, addFileNameExtentionIfNotNull(filePath));"},{"lineNumber":92,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":93,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":94,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":95,"author":{"gitID":"SunBangjie"},"content":"     *"},{"lineNumber":96,"author":{"gitID":"SunBangjie"},"content":"     * @param filePath location of data."},{"lineNumber":97,"author":{"gitID":"SunBangjie"},"content":"     * @return"},{"lineNumber":98,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":99,"author":{"gitID":"SunBangjie"},"content":"    private String addFileNameExtentionIfNotNull(String filePath) {"},{"lineNumber":100,"author":{"gitID":"SunBangjie"},"content":"        if (filePath \u003d\u003d null) {"},{"lineNumber":101,"author":{"gitID":"SunBangjie"},"content":"            return null;"},{"lineNumber":102,"author":{"gitID":"SunBangjie"},"content":"        } else {"},{"lineNumber":103,"author":{"gitID":"SunBangjie"},"content":"            return filePath + BACKUP_FILE_EXTENSION;"},{"lineNumber":104,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":105,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":106,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":16,"SunBangjie":90}},{"path":"src/main/java/seedu/ptman/storage/OutletInformationStorage.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.exceptions.DataConversionException;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":10,"author":{"gitID":"SunBangjie"},"content":"/**"},{"lineNumber":11,"author":{"gitID":"SunBangjie"},"content":" * Represents a storage for {@link seedu.ptman.model.outlet.OutletInformation}."},{"lineNumber":12,"author":{"gitID":"SunBangjie"},"content":" */"},{"lineNumber":13,"author":{"gitID":"SunBangjie"},"content":"public interface OutletInformationStorage {"},{"lineNumber":14,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":15,"author":{"gitID":"SunBangjie"},"content":"     * Returns the file path of the data file."},{"lineNumber":16,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":17,"author":{"gitID":"SunBangjie"},"content":"    String getOutletInformationFilePath();"},{"lineNumber":18,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":19,"author":{"gitID":"SunBangjie"},"content":"    Optional\u003cOutletInformation\u003e readOutletInformation() throws DataConversionException, IOException;"},{"lineNumber":20,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":21,"author":{"gitID":"SunBangjie"},"content":"    Optional\u003cOutletInformation\u003e readOutletInformation(String filePath) throws DataConversionException, IOException;"},{"lineNumber":22,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":23,"author":{"gitID":"SunBangjie"},"content":"    void saveOutletInformation(OutletInformation outletInformation) throws IOException;"},{"lineNumber":24,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":25,"author":{"gitID":"SunBangjie"},"content":"    void saveOutletInformation(OutletInformation outletInformation, String filePath) throws IOException;"},{"lineNumber":26,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":27,"author":{"gitID":"SunBangjie"},"content":"    void backupOutletInformation(OutletInformation outletInformation) throws IOException;"},{"lineNumber":28,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":8,"SunBangjie":20}},{"path":"src/main/java/seedu/ptman/model/util/SampleDataUtil.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.model.util;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.HashSet;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.Set;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.util.DateUtil;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.ptman.model.PartTimeManager;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.ptman.model.ReadOnlyPartTimeManager;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Address;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Email;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Employee;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Name;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Phone;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Salary;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.exceptions.DuplicateEmployeeException;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Capacity;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Date;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Shift;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Time;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.exceptions.DuplicateShiftException;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.exceptions.ShiftFullException;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.ptman.model.tag.Tag;"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"hzxcaryn"},"content":"//@@author hzxcaryn"},{"lineNumber":27,"author":{"gitID":"hzxcaryn"},"content":"/**"},{"lineNumber":28,"author":{"gitID":"hzxcaryn"},"content":" * Contains utility methods for populating {@code PartTimeManager} with sample data."},{"lineNumber":29,"author":{"gitID":"hzxcaryn"},"content":" */"},{"lineNumber":30,"author":{"gitID":"hzxcaryn"},"content":"public class SampleDataUtil {"},{"lineNumber":31,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":32,"author":{"gitID":"hzxcaryn"},"content":"    public static Employee[] getSampleEmployees() {"},{"lineNumber":33,"author":{"gitID":"hzxcaryn"},"content":"        return new Employee[] {"},{"lineNumber":34,"author":{"gitID":"hzxcaryn"},"content":"            new Employee(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),"},{"lineNumber":35,"author":{"gitID":"hzxcaryn"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), new Salary(\"300\"), new Password(),"},{"lineNumber":36,"author":{"gitID":"hzxcaryn"},"content":"                getTagSet(\"barista\", \"cashier\")),"},{"lineNumber":37,"author":{"gitID":"hzxcaryn"},"content":"            new Employee(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),"},{"lineNumber":38,"author":{"gitID":"hzxcaryn"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new Salary(\"0\"), new Password(),"},{"lineNumber":39,"author":{"gitID":"hzxcaryn"},"content":"                getTagSet(\"barista\", \"supervisor\")),"},{"lineNumber":40,"author":{"gitID":"hzxcaryn"},"content":"            new Employee(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),"},{"lineNumber":41,"author":{"gitID":"hzxcaryn"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new Salary(\"100\"), new Password(),"},{"lineNumber":42,"author":{"gitID":"hzxcaryn"},"content":"                getTagSet(\"bartender\")),"},{"lineNumber":43,"author":{"gitID":"hzxcaryn"},"content":"            new Employee(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),"},{"lineNumber":44,"author":{"gitID":"hzxcaryn"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new Salary(\"450\"), new Password(),"},{"lineNumber":45,"author":{"gitID":"hzxcaryn"},"content":"                getTagSet(\"paperwork\")),"},{"lineNumber":46,"author":{"gitID":"hzxcaryn"},"content":"            new Employee(new Name(\"Eden Lim\"), new Phone(\"92624417\"), new Email(\"eden123@example.com\"),"},{"lineNumber":47,"author":{"gitID":"hzxcaryn"},"content":"                new Address(\"Blk 25 Aljunied Street 85, #10-10\"), new Salary(\"250\"), new Password(),"},{"lineNumber":48,"author":{"gitID":"hzxcaryn"},"content":"                getTagSet(\"supervisor\", \"bartender\")),"},{"lineNumber":49,"author":{"gitID":"hzxcaryn"},"content":"            new Employee(new Name(\"Emelia Tan\"), new Phone(\"91275306\"), new Email(\"tanmeme@example.com\"),"},{"lineNumber":50,"author":{"gitID":"hzxcaryn"},"content":"                new Address(\"Blk 45 Bras Basah Rd 55, #11-11\"), new Salary(\"60\"), new Password(),"},{"lineNumber":51,"author":{"gitID":"hzxcaryn"},"content":"                getTagSet(\"paperwork\", \"barista\")),"},{"lineNumber":52,"author":{"gitID":"hzxcaryn"},"content":"            new Employee(new Name(\"Faith Foo\"), new Phone(\"82935501\"), new Email(\"faithful@example.com\"),"},{"lineNumber":53,"author":{"gitID":"hzxcaryn"},"content":"                new Address(\"Blk 01 Pasir Ris Street 81, #01-01\"), new Salary(\"110\"), new Password(),"},{"lineNumber":54,"author":{"gitID":"hzxcaryn"},"content":"                getTagSet(\"barista\", \"bartender\")),"},{"lineNumber":55,"author":{"gitID":"hzxcaryn"},"content":"            new Employee(new Name(\"Irfan Ibrahim\"), new Phone(\"82492021\"), new Email(\"irfan@example.com\"),"},{"lineNumber":56,"author":{"gitID":"hzxcaryn"},"content":"                new Address(\"Blk 17 Tampines Street 20, #17-35\"), new Salary(\"200\"), new Password(),"},{"lineNumber":57,"author":{"gitID":"hzxcaryn"},"content":"                getTagSet(\"barista\")),"},{"lineNumber":58,"author":{"gitID":"hzxcaryn"},"content":"            new Employee(new Name(\"Jessica Liu\"), new Phone(\"92823467\"), new Email(\"liushabao@example.com\"),"},{"lineNumber":59,"author":{"gitID":"hzxcaryn"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new Salary(\"300\"), new Password(),"},{"lineNumber":60,"author":{"gitID":"hzxcaryn"},"content":"                getTagSet(\"alfresco\", \"cashier\")),"},{"lineNumber":61,"author":{"gitID":"hzxcaryn"},"content":"            new Employee(new Name(\"Jorge Keng\"), new Phone(\"90129036\"), new Email(\"kengjjj@example.com\"),"},{"lineNumber":62,"author":{"gitID":"hzxcaryn"},"content":"                new Address(\"Blk 105 Tampines Street 85, #04-01\"), new Salary(\"80\"), new Password(),"},{"lineNumber":63,"author":{"gitID":"hzxcaryn"},"content":"                getTagSet(\"supervisor\", \"paperwork\")),"},{"lineNumber":64,"author":{"gitID":"hzxcaryn"},"content":"            new Employee(new Name(\"Katrina Rose\"), new Phone(\"80924520\"), new Email(\"rosie@example.com\"),"},{"lineNumber":65,"author":{"gitID":"hzxcaryn"},"content":"                new Address(\"Blk 555 Simei Street 05, #06-06\"), new Salary(\"100\"), new Password(),"},{"lineNumber":66,"author":{"gitID":"hzxcaryn"},"content":"                getTagSet(\"cashier\", \"bartender\", \"paperwork\")),"},{"lineNumber":67,"author":{"gitID":"hzxcaryn"},"content":"            new Employee(new Name(\"Lee Wenqi\"), new Phone(\"88124243\"), new Email(\"wenqiqi@example.com\"),"},{"lineNumber":68,"author":{"gitID":"hzxcaryn"},"content":"                new Address(\"Blk 01 Defu Lane 05, #02-11\"), new Salary(\"500\"), new Password(),"},{"lineNumber":69,"author":{"gitID":"hzxcaryn"},"content":"                getTagSet(\"bartender\", \"barista\")),"},{"lineNumber":70,"author":{"gitID":"hzxcaryn"},"content":"            new Employee(new Name(\"Liu Shi Qi\"), new Phone(\"87438807\"), new Email(\"liushishi@example.com\"),"},{"lineNumber":71,"author":{"gitID":"hzxcaryn"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), new Salary(\"300\"), new Password(),"},{"lineNumber":72,"author":{"gitID":"hzxcaryn"},"content":"                getTagSet(\"barista\", \"cashier\")),"},{"lineNumber":73,"author":{"gitID":"hzxcaryn"},"content":"            new Employee(new Name(\"Mallory Hek\"), new Phone(\"99272758\"), new Email(\"maliciousme@example.com\"),"},{"lineNumber":74,"author":{"gitID":"hzxcaryn"},"content":"                new Address(\"Blk 30 Serangoon Gardens, #07-18\"), new Salary(\"1000\"), new Password(),"},{"lineNumber":75,"author":{"gitID":"hzxcaryn"},"content":"                getTagSet(\"barista\", \"chef\")),"},{"lineNumber":76,"author":{"gitID":"hzxcaryn"},"content":"            new Employee(new Name(\"Matthew Koh\"), new Phone(\"93210283\"), new Email(\"madmatt@example.com\"),"},{"lineNumber":77,"author":{"gitID":"hzxcaryn"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new Salary(\"100\"), new Password(),"},{"lineNumber":78,"author":{"gitID":"hzxcaryn"},"content":"                getTagSet(\"bartender\")),"},{"lineNumber":79,"author":{"gitID":"hzxcaryn"},"content":"            new Employee(new Name(\"Nathan Gay\"), new Phone(\"91031282\"), new Email(\"gaygaygay@example.com\"),"},{"lineNumber":80,"author":{"gitID":"hzxcaryn"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new Salary(\"450\"), new Password(),"},{"lineNumber":81,"author":{"gitID":"hzxcaryn"},"content":"                getTagSet(\"paperwork\", \"cashier\")),"},{"lineNumber":82,"author":{"gitID":"hzxcaryn"},"content":"            new Employee(new Name(\"Ophelia Grey\"), new Phone(\"92492021\"), new Email(\"shades0fgrey@example.com\"),"},{"lineNumber":83,"author":{"gitID":"hzxcaryn"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), new Salary(\"200\"), new Password(),"},{"lineNumber":84,"author":{"gitID":"hzxcaryn"},"content":"                getTagSet(\"barista\")),"},{"lineNumber":85,"author":{"gitID":"hzxcaryn"},"content":"            new Employee(new Name(\"Patrick Soo\"), new Phone(\"91234417\"), new Email(\"guais00s00@example.com\"),"},{"lineNumber":86,"author":{"gitID":"hzxcaryn"},"content":"                new Address(\"Blk 99 Boon Keng Road 85, #08-01\"), new Salary(\"50\"), new Password(),"},{"lineNumber":87,"author":{"gitID":"hzxcaryn"},"content":"                getTagSet(\"bartender\", \"barista\")),"},{"lineNumber":88,"author":{"gitID":"hzxcaryn"},"content":"            new Employee(new Name(\"Philips Loy\"), new Phone(\"89801253\"), new Email(\"pheeloy@example.com\"),"},{"lineNumber":89,"author":{"gitID":"hzxcaryn"},"content":"                new Address(\"Blk 103 Hougang Street 32, #05-03\"), new Salary(\"60\"), new Password(),"},{"lineNumber":90,"author":{"gitID":"hzxcaryn"},"content":"                getTagSet(\"alfresco\")),"},{"lineNumber":91,"author":{"gitID":"hzxcaryn"},"content":"            new Employee(new Name(\"Quentin Cool\"), new Phone(\"92624417\"), new Email(\"iamcool123@example.com\"),"},{"lineNumber":92,"author":{"gitID":"hzxcaryn"},"content":"                new Address(\"Blk 111 Punggol Street 05, #01-05\"), new Salary(\"300\"), new Password(),"},{"lineNumber":93,"author":{"gitID":"hzxcaryn"},"content":"                getTagSet(\"chef\")),"},{"lineNumber":94,"author":{"gitID":"hzxcaryn"},"content":"            new Employee(new Name(\"Roy Balakrishnan\"), new Phone(\"83623312\"), new Email(\"royb@example.com\"),"},{"lineNumber":95,"author":{"gitID":"hzxcaryn"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new Salary(\"100\"), new Password(),"},{"lineNumber":96,"author":{"gitID":"hzxcaryn"},"content":"                getTagSet(\"paperwork\", \"alfresco\")),"},{"lineNumber":97,"author":{"gitID":"hzxcaryn"},"content":"            new Employee(new Name(\"Vaibhavi Shandilya\"), new Phone(\"91530773\"), new Email(\"chiobu@example.com\"),"},{"lineNumber":98,"author":{"gitID":"hzxcaryn"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new Salary(\"100\"), new Password(),"},{"lineNumber":99,"author":{"gitID":"hzxcaryn"},"content":"                getTagSet(\"supervisor\")),"},{"lineNumber":100,"author":{"gitID":"hzxcaryn"},"content":"        };"},{"lineNumber":101,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":102,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":103,"author":{"gitID":"hzxcaryn"},"content":"    public static Shift[] getSampleShifts() {"},{"lineNumber":104,"author":{"gitID":"hzxcaryn"},"content":"        LocalDate mondayDateOfCurrWeek \u003d DateUtil.getMondayOfDate(LocalDate.now());"},{"lineNumber":105,"author":{"gitID":"hzxcaryn"},"content":"        LocalDate mondayDateOfPrevWeek \u003d DateUtil.getPrevWeekDate(mondayDateOfCurrWeek);"},{"lineNumber":106,"author":{"gitID":"hzxcaryn"},"content":"        LocalDate mondayDateOfNextWeek \u003d DateUtil.getNextWeekDate(mondayDateOfCurrWeek);"},{"lineNumber":107,"author":{"gitID":"hzxcaryn"},"content":"        return new Shift[] {"},{"lineNumber":108,"author":{"gitID":"hzxcaryn"},"content":"            // Build shifts for previous week"},{"lineNumber":109,"author":{"gitID":"hzxcaryn"},"content":"            new Shift(new Date(mondayDateOfPrevWeek.plusDays(1)), new Time(\"0900\"), new Time(\"1600\"),"},{"lineNumber":110,"author":{"gitID":"hzxcaryn"},"content":"                new Capacity(\"3\")),"},{"lineNumber":111,"author":{"gitID":"hzxcaryn"},"content":"            new Shift(new Date(mondayDateOfPrevWeek.plusDays(2)), new Time(\"1500\"), new Time(\"2200\"),"},{"lineNumber":112,"author":{"gitID":"hzxcaryn"},"content":"                new Capacity(\"1\")),"},{"lineNumber":113,"author":{"gitID":"hzxcaryn"},"content":"            new Shift(new Date(mondayDateOfPrevWeek.plusDays(4)), new Time(\"1000\"), new Time(\"1600\"),"},{"lineNumber":114,"author":{"gitID":"hzxcaryn"},"content":"                new Capacity(\"5\")),"},{"lineNumber":115,"author":{"gitID":"hzxcaryn"},"content":"            new Shift(new Date(mondayDateOfPrevWeek.plusDays(5)), new Time(\"1100\"), new Time(\"1900\"),"},{"lineNumber":116,"author":{"gitID":"hzxcaryn"},"content":"                new Capacity(\"2\")),"},{"lineNumber":117,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":118,"author":{"gitID":"hzxcaryn"},"content":"            // Build shifts for current week"},{"lineNumber":119,"author":{"gitID":"hzxcaryn"},"content":"            new Shift(new Date(mondayDateOfCurrWeek), new Time(\"1500\"), new Time(\"2200\"), new Capacity(\"1\")),"},{"lineNumber":120,"author":{"gitID":"hzxcaryn"},"content":"            new Shift(new Date(mondayDateOfCurrWeek.plusDays(1)), new Time(\"0900\"), new Time(\"1600\"),"},{"lineNumber":121,"author":{"gitID":"hzxcaryn"},"content":"                new Capacity(\"5\")),"},{"lineNumber":122,"author":{"gitID":"hzxcaryn"},"content":"            new Shift(new Date(mondayDateOfCurrWeek.plusDays(2)), new Time(\"1000\"), new Time(\"1700\"),"},{"lineNumber":123,"author":{"gitID":"hzxcaryn"},"content":"                new Capacity(\"3\")),"},{"lineNumber":124,"author":{"gitID":"hzxcaryn"},"content":"            new Shift(new Date(mondayDateOfCurrWeek.plusDays(4)), new Time(\"0900\"), new Time(\"1700\"),"},{"lineNumber":125,"author":{"gitID":"hzxcaryn"},"content":"                new Capacity(\"3\")),"},{"lineNumber":126,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":127,"author":{"gitID":"hzxcaryn"},"content":"            // Build shifts for next week"},{"lineNumber":128,"author":{"gitID":"hzxcaryn"},"content":"            new Shift(new Date(mondayDateOfNextWeek.plusDays(2)), new Time(\"1100\"), new Time(\"1900\"),"},{"lineNumber":129,"author":{"gitID":"hzxcaryn"},"content":"                new Capacity(\"2\")),"},{"lineNumber":130,"author":{"gitID":"hzxcaryn"},"content":"            new Shift(new Date(mondayDateOfNextWeek.plusDays(3)), new Time(\"0900\"), new Time(\"1600\"),"},{"lineNumber":131,"author":{"gitID":"hzxcaryn"},"content":"                new Capacity(\"5\")),"},{"lineNumber":132,"author":{"gitID":"hzxcaryn"},"content":"            new Shift(new Date(mondayDateOfNextWeek.plusDays(5)), new Time(\"1500\"), new Time(\"2200\"),"},{"lineNumber":133,"author":{"gitID":"hzxcaryn"},"content":"                new Capacity(\"3\")),"},{"lineNumber":134,"author":{"gitID":"hzxcaryn"},"content":"            new Shift(new Date(mondayDateOfNextWeek.plusDays(6)), new Time(\"1200\"), new Time(\"1900\"),"},{"lineNumber":135,"author":{"gitID":"hzxcaryn"},"content":"                new Capacity(\"5\"))"},{"lineNumber":136,"author":{"gitID":"hzxcaryn"},"content":"        };"},{"lineNumber":137,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":138,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":139,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":140,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":141,"author":{"gitID":"hzxcaryn"},"content":"     * This method is used in {@code getSamplePartTimeManager} to add employees to the sample shifts."},{"lineNumber":142,"author":{"gitID":"hzxcaryn"},"content":"     * Each nested array contains employee indices that corresponds to an employee in the sample employee array."},{"lineNumber":143,"author":{"gitID":"hzxcaryn"},"content":"     * Each sample shift is assigned one of these nested arrays according to their index in {@code getSampleShifts}."},{"lineNumber":144,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":145,"author":{"gitID":"hzxcaryn"},"content":"    public static int[][] getSampleEmployeesForEachShift() {"},{"lineNumber":146,"author":{"gitID":"hzxcaryn"},"content":"        return new int[][] {"},{"lineNumber":147,"author":{"gitID":"hzxcaryn"},"content":"            // previous week"},{"lineNumber":148,"author":{"gitID":"hzxcaryn"},"content":"            new int[] {5, 17, 21},"},{"lineNumber":149,"author":{"gitID":"hzxcaryn"},"content":"            new int[] {6},"},{"lineNumber":150,"author":{"gitID":"hzxcaryn"},"content":"            new int[] {1, 2, 3, 4, 5},"},{"lineNumber":151,"author":{"gitID":"hzxcaryn"},"content":"            new int[] {7, 9},"},{"lineNumber":152,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":153,"author":{"gitID":"hzxcaryn"},"content":"            // current week"},{"lineNumber":154,"author":{"gitID":"hzxcaryn"},"content":"            new int[] {},"},{"lineNumber":155,"author":{"gitID":"hzxcaryn"},"content":"            new int[] {2, 10},"},{"lineNumber":156,"author":{"gitID":"hzxcaryn"},"content":"            new int[] {2, 5, 7},"},{"lineNumber":157,"author":{"gitID":"hzxcaryn"},"content":"            new int[] {3},"},{"lineNumber":158,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":159,"author":{"gitID":"hzxcaryn"},"content":"            // next week"},{"lineNumber":160,"author":{"gitID":"hzxcaryn"},"content":"            new int[] {2},"},{"lineNumber":161,"author":{"gitID":"hzxcaryn"},"content":"            new int[] {15, 20},"},{"lineNumber":162,"author":{"gitID":"hzxcaryn"},"content":"            new int[] {3, 5, 7},"},{"lineNumber":163,"author":{"gitID":"hzxcaryn"},"content":"            new int[] {2, 8, 10},"},{"lineNumber":164,"author":{"gitID":"hzxcaryn"},"content":"        };"},{"lineNumber":165,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":166,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":167,"author":{"gitID":"hzxcaryn"},"content":"    public static ReadOnlyPartTimeManager getSamplePartTimeManager() {"},{"lineNumber":168,"author":{"gitID":"hzxcaryn"},"content":"        try {"},{"lineNumber":169,"author":{"gitID":"hzxcaryn"},"content":"            PartTimeManager sampleAb \u003d new PartTimeManager();"},{"lineNumber":170,"author":{"gitID":"hzxcaryn"},"content":"            Employee[] sampleEmployees \u003d getSampleEmployees();"},{"lineNumber":171,"author":{"gitID":"hzxcaryn"},"content":"            Shift[] sampleShifts \u003d getSampleShifts();"},{"lineNumber":172,"author":{"gitID":"hzxcaryn"},"content":"            int[][] sampleEmployeesForEachShift \u003d getSampleEmployeesForEachShift();"},{"lineNumber":173,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":174,"author":{"gitID":"hzxcaryn"},"content":"            for (Employee sampleEmployee : sampleEmployees) {"},{"lineNumber":175,"author":{"gitID":"hzxcaryn"},"content":"                sampleAb.addEmployee(sampleEmployee);"},{"lineNumber":176,"author":{"gitID":"hzxcaryn"},"content":"            }"},{"lineNumber":177,"author":{"gitID":"hzxcaryn"},"content":"            for (int i \u003d 0; i \u003c sampleShifts.length; i++) {"},{"lineNumber":178,"author":{"gitID":"hzxcaryn"},"content":"                for (int employeeIndex : sampleEmployeesForEachShift[i]) {"},{"lineNumber":179,"author":{"gitID":"hzxcaryn"},"content":"                    sampleShifts[i].addEmployee(sampleEmployees[employeeIndex]);"},{"lineNumber":180,"author":{"gitID":"hzxcaryn"},"content":"                }"},{"lineNumber":181,"author":{"gitID":"hzxcaryn"},"content":"                sampleAb.addShift(sampleShifts[i]);"},{"lineNumber":182,"author":{"gitID":"hzxcaryn"},"content":"            }"},{"lineNumber":183,"author":{"gitID":"hzxcaryn"},"content":"            return sampleAb;"},{"lineNumber":184,"author":{"gitID":"hzxcaryn"},"content":"        } catch (DuplicateEmployeeException e) {"},{"lineNumber":185,"author":{"gitID":"hzxcaryn"},"content":"            throw new AssertionError(\"sample data cannot contain duplicate employees\", e);"},{"lineNumber":186,"author":{"gitID":"hzxcaryn"},"content":"        } catch (DuplicateShiftException e) {"},{"lineNumber":187,"author":{"gitID":"hzxcaryn"},"content":"            throw new AssertionError(\"sample data cannot contain duplicate shifts\", e);"},{"lineNumber":188,"author":{"gitID":"hzxcaryn"},"content":"        } catch (ShiftFullException e) {"},{"lineNumber":189,"author":{"gitID":"hzxcaryn"},"content":"            throw new AssertionError(\"sample data shifts cannot have more employees than capacity\", e);"},{"lineNumber":190,"author":{"gitID":"hzxcaryn"},"content":"        }"},{"lineNumber":191,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":192,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":193,"author":{"gitID":"hzxcaryn"},"content":"    /**"},{"lineNumber":194,"author":{"gitID":"hzxcaryn"},"content":"     * Returns a tag set containing the list of strings given."},{"lineNumber":195,"author":{"gitID":"hzxcaryn"},"content":"     */"},{"lineNumber":196,"author":{"gitID":"hzxcaryn"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {"},{"lineNumber":197,"author":{"gitID":"hzxcaryn"},"content":"        HashSet\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();"},{"lineNumber":198,"author":{"gitID":"hzxcaryn"},"content":"        for (String s : strings) {"},{"lineNumber":199,"author":{"gitID":"hzxcaryn"},"content":"            tags.add(new Tag(s));"},{"lineNumber":200,"author":{"gitID":"hzxcaryn"},"content":"        }"},{"lineNumber":201,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":202,"author":{"gitID":"hzxcaryn"},"content":"        return tags;"},{"lineNumber":203,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":204,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":205,"author":{"gitID":"hzxcaryn"},"content":"}"}],"authorContributionMap":{"hzxcaryn":180,"-":25}},{"path":"src/main/java/seedu/ptman/MainApp.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.Map;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import javafx.application.Application;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import javafx.application.Platform;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import javafx.stage.Stage;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.Config;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.EventsCenter;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.LogsCenter;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.Version;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.ui.ExitAppRequestEvent;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.exceptions.DataConversionException;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.util.ConfigUtil;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.util.StringUtil;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.Logic;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.ptman.logic.LogicManager;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Model;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.ptman.model.ModelManager;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.ptman.model.PartTimeManager;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import seedu.ptman.model.ReadOnlyPartTimeManager;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"import seedu.ptman.model.UserPrefs;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"import seedu.ptman.model.util.SampleDataUtil;"},{"lineNumber":30,"author":{"gitID":"-"},"content":"import seedu.ptman.storage.JsonUserPrefsStorage;"},{"lineNumber":31,"author":{"gitID":"-"},"content":"import seedu.ptman.storage.OutletInformationStorage;"},{"lineNumber":32,"author":{"gitID":"-"},"content":"import seedu.ptman.storage.PartTimeManagerStorage;"},{"lineNumber":33,"author":{"gitID":"-"},"content":"import seedu.ptman.storage.Storage;"},{"lineNumber":34,"author":{"gitID":"-"},"content":"import seedu.ptman.storage.StorageManager;"},{"lineNumber":35,"author":{"gitID":"-"},"content":"import seedu.ptman.storage.UserPrefsStorage;"},{"lineNumber":36,"author":{"gitID":"-"},"content":"import seedu.ptman.storage.XmlOutletInformationStorage;"},{"lineNumber":37,"author":{"gitID":"-"},"content":"import seedu.ptman.storage.XmlPartTimeManagerStorage;"},{"lineNumber":38,"author":{"gitID":"-"},"content":"import seedu.ptman.ui.Ui;"},{"lineNumber":39,"author":{"gitID":"-"},"content":"import seedu.ptman.ui.UiManager;"},{"lineNumber":40,"author":{"gitID":"-"},"content":""},{"lineNumber":41,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":42,"author":{"gitID":"-"},"content":" * The main entry point to the application."},{"lineNumber":43,"author":{"gitID":"-"},"content":" */"},{"lineNumber":44,"author":{"gitID":"-"},"content":"public class MainApp extends Application {"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"hzxcaryn"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);"},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);"},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"-"},"content":"    protected Ui ui;"},{"lineNumber":51,"author":{"gitID":"-"},"content":"    protected Logic logic;"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    protected Storage storage;"},{"lineNumber":53,"author":{"gitID":"-"},"content":"    protected Model model;"},{"lineNumber":54,"author":{"gitID":"-"},"content":"    protected Config config;"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    protected UserPrefs userPrefs;"},{"lineNumber":56,"author":{"gitID":"-"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":""},{"lineNumber":58,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":59,"author":{"gitID":"-"},"content":"    public void init() throws Exception {"},{"lineNumber":60,"author":{"gitID":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing PartTimeManager ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"},{"lineNumber":61,"author":{"gitID":"-"},"content":"        super.init();"},{"lineNumber":62,"author":{"gitID":"-"},"content":""},{"lineNumber":63,"author":{"gitID":"-"},"content":"        config \u003d initConfig(getApplicationParameter(\"config\"));"},{"lineNumber":64,"author":{"gitID":"-"},"content":""},{"lineNumber":65,"author":{"gitID":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        userPrefs \u003d initPrefs(userPrefsStorage);"},{"lineNumber":67,"author":{"gitID":"-"},"content":"        PartTimeManagerStorage partTimeManagerStorage \u003d"},{"lineNumber":68,"author":{"gitID":"-"},"content":"                new XmlPartTimeManagerStorage(userPrefs.getPartTimeManagerFilePath());"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        OutletInformationStorage outletInformationStorage \u003d"},{"lineNumber":70,"author":{"gitID":"-"},"content":"                new XmlOutletInformationStorage(userPrefs.getOutletInformationFilePath());"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        storage \u003d new StorageManager(partTimeManagerStorage, userPrefsStorage, outletInformationStorage);"},{"lineNumber":72,"author":{"gitID":"-"},"content":""},{"lineNumber":73,"author":{"gitID":"-"},"content":"        initLogging(config);"},{"lineNumber":74,"author":{"gitID":"-"},"content":""},{"lineNumber":75,"author":{"gitID":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);"},{"lineNumber":76,"author":{"gitID":"-"},"content":""},{"lineNumber":77,"author":{"gitID":"-"},"content":"        logic \u003d new LogicManager(model);"},{"lineNumber":78,"author":{"gitID":"-"},"content":""},{"lineNumber":79,"author":{"gitID":"-"},"content":"        ui \u003d new UiManager(logic, config, userPrefs);"},{"lineNumber":80,"author":{"gitID":"-"},"content":""},{"lineNumber":81,"author":{"gitID":"-"},"content":"        initEventsCenter();"},{"lineNumber":82,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":83,"author":{"gitID":"-"},"content":""},{"lineNumber":84,"author":{"gitID":"-"},"content":"    private String getApplicationParameter(String parameterName) {"},{"lineNumber":85,"author":{"gitID":"-"},"content":"        Map\u003cString, String\u003e applicationParameters \u003d getParameters().getNamed();"},{"lineNumber":86,"author":{"gitID":"-"},"content":"        return applicationParameters.get(parameterName);"},{"lineNumber":87,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":88,"author":{"gitID":"-"},"content":""},{"lineNumber":89,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":90,"author":{"gitID":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s PTMan and {@code userPrefs}. \u003cbr\u003e"},{"lineNumber":91,"author":{"gitID":"-"},"content":"     * The data from the sample PTMan will be used instead if {@code storage}\u0027s PTMan is not found,"},{"lineNumber":92,"author":{"gitID":"-"},"content":"     * or an empty PTMan will be used instead if errors occur when reading {@code storage}\u0027s PTMan."},{"lineNumber":93,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":94,"author":{"gitID":"-"},"content":"    private Model initModelManager(Storage storage, UserPrefs userPrefs) {"},{"lineNumber":95,"author":{"gitID":"-"},"content":"        Optional\u003cReadOnlyPartTimeManager\u003e partTimeManagerOptional;"},{"lineNumber":96,"author":{"gitID":"-"},"content":"        Optional\u003cOutletInformation\u003e outletInformationOptional;"},{"lineNumber":97,"author":{"gitID":"-"},"content":"        ReadOnlyPartTimeManager initialData;"},{"lineNumber":98,"author":{"gitID":"-"},"content":"        OutletInformation outletInformation;"},{"lineNumber":99,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":100,"author":{"gitID":"-"},"content":"            outletInformationOptional \u003d storage.readOutletInformation();"},{"lineNumber":101,"author":{"gitID":"-"},"content":"            outletInformation \u003d outletInformationOptional.orElseGet(OutletInformation::new);"},{"lineNumber":102,"author":{"gitID":"-"},"content":"            if (!outletInformationOptional.isPresent()) {"},{"lineNumber":103,"author":{"gitID":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample OutletInformation\");"},{"lineNumber":104,"author":{"gitID":"-"},"content":"            }"},{"lineNumber":105,"author":{"gitID":"-"},"content":"        } catch (DataConversionException e) {"},{"lineNumber":106,"author":{"gitID":"-"},"content":"            logger.warning(\"Data file not in the correct format. \""},{"lineNumber":107,"author":{"gitID":"-"},"content":"                    + \"Will be starting with an dafault OutletInformation\\\"\");"},{"lineNumber":108,"author":{"gitID":"-"},"content":"            outletInformation \u003d new OutletInformation();"},{"lineNumber":109,"author":{"gitID":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":110,"author":{"gitID":"-"},"content":"            logger.warning(\"Problem while reading from the file. \""},{"lineNumber":111,"author":{"gitID":"-"},"content":"                    + \"Will be starting with an dafault OutletInformation\\\"\");"},{"lineNumber":112,"author":{"gitID":"-"},"content":"            outletInformation \u003d new OutletInformation();"},{"lineNumber":113,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":114,"author":{"gitID":"-"},"content":""},{"lineNumber":115,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":116,"author":{"gitID":"-"},"content":"            partTimeManagerOptional \u003d storage.readPartTimeManager(outletInformation.getEncryptionMode());"},{"lineNumber":117,"author":{"gitID":"-"},"content":"            if (!partTimeManagerOptional.isPresent()) {"},{"lineNumber":118,"author":{"gitID":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample PartTimeManager\");"},{"lineNumber":119,"author":{"gitID":"-"},"content":"            }"},{"lineNumber":120,"author":{"gitID":"-"},"content":"            initialData \u003d partTimeManagerOptional.orElseGet(SampleDataUtil::getSamplePartTimeManager);"},{"lineNumber":121,"author":{"gitID":"-"},"content":"        } catch (DataConversionException e) {"},{"lineNumber":122,"author":{"gitID":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty PartTimeManager\");"},{"lineNumber":123,"author":{"gitID":"-"},"content":"            initialData \u003d new PartTimeManager();"},{"lineNumber":124,"author":{"gitID":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":125,"author":{"gitID":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty PartTimeManager\");"},{"lineNumber":126,"author":{"gitID":"-"},"content":"            initialData \u003d new PartTimeManager();"},{"lineNumber":127,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":128,"author":{"gitID":"-"},"content":""},{"lineNumber":129,"author":{"gitID":"-"},"content":"        return new ModelManager(initialData, userPrefs, outletInformation);"},{"lineNumber":130,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":131,"author":{"gitID":"-"},"content":""},{"lineNumber":132,"author":{"gitID":"-"},"content":"    private void initLogging(Config config) {"},{"lineNumber":133,"author":{"gitID":"-"},"content":"        LogsCenter.init(config);"},{"lineNumber":134,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":135,"author":{"gitID":"-"},"content":""},{"lineNumber":136,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":137,"author":{"gitID":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e"},{"lineNumber":138,"author":{"gitID":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead"},{"lineNumber":139,"author":{"gitID":"-"},"content":"     * if {@code configFilePath} is null."},{"lineNumber":140,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":141,"author":{"gitID":"-"},"content":"    protected Config initConfig(String configFilePath) {"},{"lineNumber":142,"author":{"gitID":"-"},"content":"        Config initializedConfig;"},{"lineNumber":143,"author":{"gitID":"-"},"content":"        String configFilePathUsed;"},{"lineNumber":144,"author":{"gitID":"-"},"content":""},{"lineNumber":145,"author":{"gitID":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;"},{"lineNumber":146,"author":{"gitID":"-"},"content":""},{"lineNumber":147,"author":{"gitID":"-"},"content":"        if (configFilePath !\u003d null) {"},{"lineNumber":148,"author":{"gitID":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);"},{"lineNumber":149,"author":{"gitID":"-"},"content":"            configFilePathUsed \u003d configFilePath;"},{"lineNumber":150,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":151,"author":{"gitID":"-"},"content":""},{"lineNumber":152,"author":{"gitID":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);"},{"lineNumber":153,"author":{"gitID":"-"},"content":""},{"lineNumber":154,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":155,"author":{"gitID":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);"},{"lineNumber":156,"author":{"gitID":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());"},{"lineNumber":157,"author":{"gitID":"-"},"content":"        } catch (DataConversionException e) {"},{"lineNumber":158,"author":{"gitID":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \""},{"lineNumber":159,"author":{"gitID":"-"},"content":"                    + \"Using default config properties\");"},{"lineNumber":160,"author":{"gitID":"-"},"content":"            initializedConfig \u003d new Config();"},{"lineNumber":161,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":162,"author":{"gitID":"-"},"content":""},{"lineNumber":163,"author":{"gitID":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields"},{"lineNumber":164,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":165,"author":{"gitID":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);"},{"lineNumber":166,"author":{"gitID":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":167,"author":{"gitID":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));"},{"lineNumber":168,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":169,"author":{"gitID":"-"},"content":"        return initializedConfig;"},{"lineNumber":170,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":171,"author":{"gitID":"-"},"content":""},{"lineNumber":172,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":173,"author":{"gitID":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,"},{"lineNumber":174,"author":{"gitID":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when"},{"lineNumber":175,"author":{"gitID":"-"},"content":"     * reading from the file."},{"lineNumber":176,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":177,"author":{"gitID":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {"},{"lineNumber":178,"author":{"gitID":"-"},"content":"        String prefsFilePath \u003d storage.getUserPrefsFilePath();"},{"lineNumber":179,"author":{"gitID":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);"},{"lineNumber":180,"author":{"gitID":"-"},"content":""},{"lineNumber":181,"author":{"gitID":"-"},"content":"        UserPrefs initializedPrefs;"},{"lineNumber":182,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":183,"author":{"gitID":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();"},{"lineNumber":184,"author":{"gitID":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());"},{"lineNumber":185,"author":{"gitID":"-"},"content":"        } catch (DataConversionException e) {"},{"lineNumber":186,"author":{"gitID":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \""},{"lineNumber":187,"author":{"gitID":"-"},"content":"                    + \"Using default user prefs\");"},{"lineNumber":188,"author":{"gitID":"-"},"content":"            initializedPrefs \u003d new UserPrefs();"},{"lineNumber":189,"author":{"gitID":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":190,"author":{"gitID":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty PartTimeManager\");"},{"lineNumber":191,"author":{"gitID":"-"},"content":"            initializedPrefs \u003d new UserPrefs();"},{"lineNumber":192,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":193,"author":{"gitID":"-"},"content":""},{"lineNumber":194,"author":{"gitID":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields"},{"lineNumber":195,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":196,"author":{"gitID":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);"},{"lineNumber":197,"author":{"gitID":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":198,"author":{"gitID":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));"},{"lineNumber":199,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":200,"author":{"gitID":"-"},"content":""},{"lineNumber":201,"author":{"gitID":"-"},"content":"        return initializedPrefs;"},{"lineNumber":202,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":203,"author":{"gitID":"-"},"content":""},{"lineNumber":204,"author":{"gitID":"-"},"content":"    private void initEventsCenter() {"},{"lineNumber":205,"author":{"gitID":"-"},"content":"        EventsCenter.getInstance().registerHandler(this);"},{"lineNumber":206,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":207,"author":{"gitID":"-"},"content":""},{"lineNumber":208,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":209,"author":{"gitID":"-"},"content":"    public void start(Stage primaryStage) {"},{"lineNumber":210,"author":{"gitID":"-"},"content":"        logger.info(\"Starting PartTimeManager \" + MainApp.VERSION);"},{"lineNumber":211,"author":{"gitID":"-"},"content":"        ui.start(primaryStage);"},{"lineNumber":212,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":213,"author":{"gitID":"-"},"content":""},{"lineNumber":214,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":215,"author":{"gitID":"-"},"content":"    public void stop() {"},{"lineNumber":216,"author":{"gitID":"hzxcaryn"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping PTMan ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"},{"lineNumber":217,"author":{"gitID":"-"},"content":"        ui.stop();"},{"lineNumber":218,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":219,"author":{"gitID":"-"},"content":"            storage.saveUserPrefs(userPrefs);"},{"lineNumber":220,"author":{"gitID":"-"},"content":"            storage.backupPartTimeManager(model.getPartTimeManager());"},{"lineNumber":221,"author":{"gitID":"-"},"content":"            storage.backupOutletInformation(model.getOutletInformation());"},{"lineNumber":222,"author":{"gitID":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":223,"author":{"gitID":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));"},{"lineNumber":224,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":225,"author":{"gitID":"-"},"content":"        Platform.exit();"},{"lineNumber":226,"author":{"gitID":"-"},"content":"        System.exit(0);"},{"lineNumber":227,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":228,"author":{"gitID":"-"},"content":""},{"lineNumber":229,"author":{"gitID":"-"},"content":"    @Subscribe"},{"lineNumber":230,"author":{"gitID":"-"},"content":"    public void handleExitAppRequestEvent(ExitAppRequestEvent event) {"},{"lineNumber":231,"author":{"gitID":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":232,"author":{"gitID":"-"},"content":"        this.stop();"},{"lineNumber":233,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":234,"author":{"gitID":"-"},"content":""},{"lineNumber":235,"author":{"gitID":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":236,"author":{"gitID":"-"},"content":"        launch(args);"},{"lineNumber":237,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":238,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"hzxcaryn":2,"-":236}},{"path":"src/main/java/seedu/ptman/storage/XmlOutletFileStorage.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import javax.xml.bind.JAXBException;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.exceptions.DataConversionException;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.util.XmlUtil;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":12,"author":{"gitID":"SunBangjie"},"content":"/**"},{"lineNumber":13,"author":{"gitID":"SunBangjie"},"content":" * Stores outlet information data in an XML file"},{"lineNumber":14,"author":{"gitID":"SunBangjie"},"content":" */"},{"lineNumber":15,"author":{"gitID":"SunBangjie"},"content":"public class XmlOutletFileStorage {"},{"lineNumber":16,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":17,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":18,"author":{"gitID":"SunBangjie"},"content":"     * Saves the given parttimemanager data to the specified file."},{"lineNumber":19,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":20,"author":{"gitID":"SunBangjie"},"content":"    public static void saveDataToFile(File file, XmlAdaptedOutletInformation outletInformation)"},{"lineNumber":21,"author":{"gitID":"SunBangjie"},"content":"            throws FileNotFoundException {"},{"lineNumber":22,"author":{"gitID":"SunBangjie"},"content":"        try {"},{"lineNumber":23,"author":{"gitID":"SunBangjie"},"content":"            XmlUtil.saveDataToFile(file, outletInformation);"},{"lineNumber":24,"author":{"gitID":"SunBangjie"},"content":"        } catch (JAXBException e) {"},{"lineNumber":25,"author":{"gitID":"SunBangjie"},"content":"            throw new AssertionError(\"Unexpected exception \" + e.getMessage());"},{"lineNumber":26,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":27,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":28,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":29,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":30,"author":{"gitID":"SunBangjie"},"content":"     * Returns outlet information in the file or an empty outlet information"},{"lineNumber":31,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":32,"author":{"gitID":"SunBangjie"},"content":"    public static XmlAdaptedOutletInformation loadDataFromSaveFile(File file) throws DataConversionException,"},{"lineNumber":33,"author":{"gitID":"SunBangjie"},"content":"            FileNotFoundException {"},{"lineNumber":34,"author":{"gitID":"SunBangjie"},"content":"        try {"},{"lineNumber":35,"author":{"gitID":"SunBangjie"},"content":"            return XmlUtil.getDataFromFile(file, XmlAdaptedOutletInformation.class);"},{"lineNumber":36,"author":{"gitID":"SunBangjie"},"content":"        } catch (JAXBException e) {"},{"lineNumber":37,"author":{"gitID":"SunBangjie"},"content":"            throw new DataConversionException(e);"},{"lineNumber":38,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":39,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":10,"SunBangjie":30}},{"path":"src/main/java/seedu/ptman/model/shift/exceptions/DuplicateShiftException.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.model.shift.exceptions;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.exceptions.DuplicateDataException;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"shanwpf"},"content":"//@@author shanwpf"},{"lineNumber":6,"author":{"gitID":"shanwpf"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"shanwpf"},"content":" * Signals that the operation will result in duplicate Shift objects."},{"lineNumber":8,"author":{"gitID":"shanwpf"},"content":" */"},{"lineNumber":9,"author":{"gitID":"shanwpf"},"content":"public class DuplicateShiftException extends DuplicateDataException {"},{"lineNumber":10,"author":{"gitID":"shanwpf"},"content":"    public DuplicateShiftException() {"},{"lineNumber":11,"author":{"gitID":"shanwpf"},"content":"        super(\"Operation would result in duplicate shifts\");"},{"lineNumber":12,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":13,"author":{"gitID":"shanwpf"},"content":"}"}],"authorContributionMap":{"shanwpf":9,"-":4}},{"path":"src/main/java/seedu/ptman/model/shift/exceptions/ShiftFullException.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.model.shift.exceptions;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"shanwpf"},"content":"//@@author shanwpf"},{"lineNumber":4,"author":{"gitID":"shanwpf"},"content":"/**"},{"lineNumber":5,"author":{"gitID":"shanwpf"},"content":" * Signals that the operation is attempting to add an employee to a full shift"},{"lineNumber":6,"author":{"gitID":"shanwpf"},"content":" */"},{"lineNumber":7,"author":{"gitID":"shanwpf"},"content":"public class ShiftFullException extends Exception {}"}],"authorContributionMap":{"shanwpf":5,"-":2}},{"path":"src/main/java/seedu/ptman/model/shift/exceptions/ShiftNotFoundException.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.model.shift.exceptions;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"shanwpf"},"content":"//@@author shanwpf"},{"lineNumber":4,"author":{"gitID":"shanwpf"},"content":"/**"},{"lineNumber":5,"author":{"gitID":"shanwpf"},"content":" * Signals that the operation is unable to find the specified shift."},{"lineNumber":6,"author":{"gitID":"shanwpf"},"content":" */"},{"lineNumber":7,"author":{"gitID":"shanwpf"},"content":"public class ShiftNotFoundException extends Exception {}"}],"authorContributionMap":{"shanwpf":5,"-":2}},{"path":"src/main/java/seedu/ptman/model/shift/Time.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.model.shift;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.util.AppUtil.checkArgument;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.time.LocalTime;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"shanwpf"},"content":"//@@author shanwpf"},{"lineNumber":12,"author":{"gitID":"shanwpf"},"content":"/**"},{"lineNumber":13,"author":{"gitID":"shanwpf"},"content":" * Represents a shift\u0027s start or end time."},{"lineNumber":14,"author":{"gitID":"shanwpf"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTime(String)}"},{"lineNumber":15,"author":{"gitID":"shanwpf"},"content":" */"},{"lineNumber":16,"author":{"gitID":"shanwpf"},"content":"public class Time {"},{"lineNumber":17,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":18,"author":{"gitID":"shanwpf"},"content":"    public static final String MESSAGE_TIME_CONSTRAINTS \u003d \"Time should be in 24-hour format.\";"},{"lineNumber":19,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":20,"author":{"gitID":"shanwpf"},"content":"    public final LocalTime time;"},{"lineNumber":21,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":22,"author":{"gitID":"shanwpf"},"content":"    public Time(String time) {"},{"lineNumber":23,"author":{"gitID":"shanwpf"},"content":"        requireNonNull(time);"},{"lineNumber":24,"author":{"gitID":"shanwpf"},"content":"        checkArgument(isValidTime(time), MESSAGE_TIME_CONSTRAINTS);"},{"lineNumber":25,"author":{"gitID":"shanwpf"},"content":"        this.time \u003d LocalTime.parse(time, DateTimeFormatter.ofPattern(\"HHmm\"));"},{"lineNumber":26,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":28,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":29,"author":{"gitID":"shanwpf"},"content":"     * Returns true if a given string is a valid time."},{"lineNumber":30,"author":{"gitID":"shanwpf"},"content":"     * @param test"},{"lineNumber":31,"author":{"gitID":"shanwpf"},"content":"     * @return"},{"lineNumber":32,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":33,"author":{"gitID":"shanwpf"},"content":"    public static Boolean isValidTime(String test) {"},{"lineNumber":34,"author":{"gitID":"shanwpf"},"content":"        try {"},{"lineNumber":35,"author":{"gitID":"shanwpf"},"content":"            LocalTime.parse(test, DateTimeFormatter.ofPattern(\"HHmm\"));"},{"lineNumber":36,"author":{"gitID":"shanwpf"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":37,"author":{"gitID":"shanwpf"},"content":"            return false;"},{"lineNumber":38,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":39,"author":{"gitID":"shanwpf"},"content":"        return true;"},{"lineNumber":40,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":41,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":42,"author":{"gitID":"shanwpf"},"content":"    public boolean isAfter(Time t) {"},{"lineNumber":43,"author":{"gitID":"shanwpf"},"content":"        return time.isAfter(t.time);"},{"lineNumber":44,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":46,"author":{"gitID":"shanwpf"},"content":"    @Override"},{"lineNumber":47,"author":{"gitID":"shanwpf"},"content":"    public String toString() {"},{"lineNumber":48,"author":{"gitID":"shanwpf"},"content":"        return time.toString().replace(\":\", \"\");"},{"lineNumber":49,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":51,"author":{"gitID":"shanwpf"},"content":"    @Override"},{"lineNumber":52,"author":{"gitID":"shanwpf"},"content":"    public boolean equals(Object o) {"},{"lineNumber":53,"author":{"gitID":"shanwpf"},"content":"        if (this \u003d\u003d o) {"},{"lineNumber":54,"author":{"gitID":"shanwpf"},"content":"            return true;"},{"lineNumber":55,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":56,"author":{"gitID":"shanwpf"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"},{"lineNumber":57,"author":{"gitID":"shanwpf"},"content":"            return false;"},{"lineNumber":58,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":59,"author":{"gitID":"shanwpf"},"content":"        Time time1 \u003d (Time) o;"},{"lineNumber":60,"author":{"gitID":"shanwpf"},"content":"        return Objects.equals(time, time1.time);"},{"lineNumber":61,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":62,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":63,"author":{"gitID":"shanwpf"},"content":"    @Override"},{"lineNumber":64,"author":{"gitID":"shanwpf"},"content":"    public int hashCode() {"},{"lineNumber":65,"author":{"gitID":"shanwpf"},"content":"        return time.hashCode();"},{"lineNumber":66,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":67,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":68,"author":{"gitID":"shanwpf"},"content":"    public int compareTo(Time startTime) {"},{"lineNumber":69,"author":{"gitID":"shanwpf"},"content":"        return time.compareTo(startTime.getLocalTime());"},{"lineNumber":70,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":71,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":72,"author":{"gitID":"shanwpf"},"content":"    public LocalTime getLocalTime() {"},{"lineNumber":73,"author":{"gitID":"shanwpf"},"content":"        return time;"},{"lineNumber":74,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":75,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":76,"author":{"gitID":"shanwpf"},"content":"    public boolean isOver() {"},{"lineNumber":77,"author":{"gitID":"shanwpf"},"content":"        return time.isBefore(LocalTime.now());"},{"lineNumber":78,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":79,"author":{"gitID":"shanwpf"},"content":"}"}],"authorContributionMap":{"shanwpf":69,"-":10}},{"path":"src/main/java/seedu/ptman/storage/XmlAdaptedOutletInformation.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.encrypter.DataEncrypter.decrypt;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.encrypter.DataEncrypter.encrypt;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import javax.xml.bind.annotation.XmlElement;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import javax.xml.bind.annotation.XmlRootElement;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.exceptions.IllegalValueException;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.Announcement;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OperatingHours;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletContact;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletEmail;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletName;"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":21,"author":{"gitID":"SunBangjie"},"content":"/**"},{"lineNumber":22,"author":{"gitID":"SunBangjie"},"content":" * JAXB-friendly version of the OutletInformation."},{"lineNumber":23,"author":{"gitID":"SunBangjie"},"content":" */"},{"lineNumber":24,"author":{"gitID":"SunBangjie"},"content":"@XmlRootElement(name \u003d \"outletinformation\")"},{"lineNumber":25,"author":{"gitID":"SunBangjie"},"content":"public class XmlAdaptedOutletInformation {"},{"lineNumber":26,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":27,"author":{"gitID":"SunBangjie"},"content":"    public static final String FAIL_MESSAGE \u003d \"Outlet\u0027s %s field is missing!\";"},{"lineNumber":28,"author":{"gitID":"SunBangjie"},"content":"    public static final String DECRYPT_FAIL_MESSAGE \u003d \"Cannot decrypt %s\";"},{"lineNumber":29,"author":{"gitID":"SunBangjie"},"content":"    public static final String ENCRYPTED \u003d OutletInformation.DATA_ENCRYPTED_MESSAGE;"},{"lineNumber":30,"author":{"gitID":"SunBangjie"},"content":"    public static final String DECRYPTED \u003d OutletInformation.DATA_NOT_ENCRYPTED_MESSAGE;"},{"lineNumber":31,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":32,"author":{"gitID":"SunBangjie"},"content":"    @XmlElement(required \u003d true)"},{"lineNumber":33,"author":{"gitID":"SunBangjie"},"content":"    private String encryptionMode;"},{"lineNumber":34,"author":{"gitID":"SunBangjie"},"content":"    @XmlElement(required \u003d true)"},{"lineNumber":35,"author":{"gitID":"SunBangjie"},"content":"    private String outletName;"},{"lineNumber":36,"author":{"gitID":"SunBangjie"},"content":"    @XmlElement(required \u003d true)"},{"lineNumber":37,"author":{"gitID":"SunBangjie"},"content":"    private String operatingHours;"},{"lineNumber":38,"author":{"gitID":"SunBangjie"},"content":"    @XmlElement(required \u003d true)"},{"lineNumber":39,"author":{"gitID":"SunBangjie"},"content":"    private String outletContact;"},{"lineNumber":40,"author":{"gitID":"SunBangjie"},"content":"    @XmlElement(required \u003d true)"},{"lineNumber":41,"author":{"gitID":"SunBangjie"},"content":"    private String outletEmail;"},{"lineNumber":42,"author":{"gitID":"SunBangjie"},"content":"    @XmlElement(required \u003d true)"},{"lineNumber":43,"author":{"gitID":"SunBangjie"},"content":"    private String passwordHash;"},{"lineNumber":44,"author":{"gitID":"SunBangjie"},"content":"    @XmlElement(required \u003d true)"},{"lineNumber":45,"author":{"gitID":"SunBangjie"},"content":"    private String announcement;"},{"lineNumber":46,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":47,"author":{"gitID":"SunBangjie"},"content":"    public XmlAdaptedOutletInformation() {"},{"lineNumber":48,"author":{"gitID":"SunBangjie"},"content":"        this.encryptionMode \u003d null;"},{"lineNumber":49,"author":{"gitID":"SunBangjie"},"content":"        this.outletName \u003d null;"},{"lineNumber":50,"author":{"gitID":"SunBangjie"},"content":"        this.operatingHours \u003d null;"},{"lineNumber":51,"author":{"gitID":"SunBangjie"},"content":"        this.outletContact \u003d null;"},{"lineNumber":52,"author":{"gitID":"SunBangjie"},"content":"        this.outletEmail \u003d null;"},{"lineNumber":53,"author":{"gitID":"SunBangjie"},"content":"        this.passwordHash \u003d null;"},{"lineNumber":54,"author":{"gitID":"SunBangjie"},"content":"        this.announcement \u003d null;"},{"lineNumber":55,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":57,"author":{"gitID":"SunBangjie"},"content":"    public XmlAdaptedOutletInformation(String encryptionMode, String outletName, String operatingHours,"},{"lineNumber":58,"author":{"gitID":"SunBangjie"},"content":"                                       String outletContact, String outletEmail, String passwordHash,"},{"lineNumber":59,"author":{"gitID":"SunBangjie"},"content":"                                       String announcement) {"},{"lineNumber":60,"author":{"gitID":"SunBangjie"},"content":"        if (encryptionMode.equals(ENCRYPTED)) {"},{"lineNumber":61,"author":{"gitID":"SunBangjie"},"content":"            this.encryptionMode \u003d encryptionMode;"},{"lineNumber":62,"author":{"gitID":"SunBangjie"},"content":"            try {"},{"lineNumber":63,"author":{"gitID":"SunBangjie"},"content":"                this.outletName \u003d encrypt(outletName);"},{"lineNumber":64,"author":{"gitID":"SunBangjie"},"content":"                this.operatingHours \u003d encrypt(operatingHours);"},{"lineNumber":65,"author":{"gitID":"SunBangjie"},"content":"                this.outletContact \u003d encrypt(outletContact);"},{"lineNumber":66,"author":{"gitID":"SunBangjie"},"content":"                this.outletEmail \u003d encrypt(outletEmail);"},{"lineNumber":67,"author":{"gitID":"SunBangjie"},"content":"                this.passwordHash \u003d encrypt(passwordHash);"},{"lineNumber":68,"author":{"gitID":"SunBangjie"},"content":"                this.announcement \u003d encrypt(announcement);"},{"lineNumber":69,"author":{"gitID":"SunBangjie"},"content":"            } catch (Exception e) {"},{"lineNumber":70,"author":{"gitID":"SunBangjie"},"content":"                //encryption should not fail"},{"lineNumber":71,"author":{"gitID":"SunBangjie"},"content":"            }"},{"lineNumber":72,"author":{"gitID":"SunBangjie"},"content":"        } else {"},{"lineNumber":73,"author":{"gitID":"SunBangjie"},"content":"            setAttributesFromStrings(encryptionMode, outletName, operatingHours, outletContact, outletEmail,"},{"lineNumber":74,"author":{"gitID":"SunBangjie"},"content":"                    passwordHash, announcement);"},{"lineNumber":75,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":76,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":77,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":78,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":79,"author":{"gitID":"SunBangjie"},"content":"     * Converts a given OutletInformation into this class for JAXB use."},{"lineNumber":80,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":81,"author":{"gitID":"SunBangjie"},"content":"    public XmlAdaptedOutletInformation(OutletInformation source) {"},{"lineNumber":82,"author":{"gitID":"SunBangjie"},"content":"        this();"},{"lineNumber":83,"author":{"gitID":"SunBangjie"},"content":"        if (source.getEncryptionMode()) {"},{"lineNumber":84,"author":{"gitID":"SunBangjie"},"content":"            encryptionMode \u003d source.getEncryptionModeMessage();"},{"lineNumber":85,"author":{"gitID":"SunBangjie"},"content":"            try {"},{"lineNumber":86,"author":{"gitID":"SunBangjie"},"content":"                outletName \u003d encrypt(source.getName().fullName);"},{"lineNumber":87,"author":{"gitID":"SunBangjie"},"content":"                operatingHours \u003d encrypt(source.getOperatingHours().value);"},{"lineNumber":88,"author":{"gitID":"SunBangjie"},"content":"                outletContact \u003d encrypt(source.getOutletContact().value);"},{"lineNumber":89,"author":{"gitID":"SunBangjie"},"content":"                outletEmail \u003d encrypt(source.getOutletEmail().value);"},{"lineNumber":90,"author":{"gitID":"SunBangjie"},"content":"                passwordHash \u003d encrypt(source.getMasterPassword().getPasswordHash());"},{"lineNumber":91,"author":{"gitID":"SunBangjie"},"content":"                announcement \u003d encrypt(source.getAnnouncement().value);"},{"lineNumber":92,"author":{"gitID":"SunBangjie"},"content":"            } catch (Exception e) {"},{"lineNumber":93,"author":{"gitID":"SunBangjie"},"content":"                //encryption should not fail"},{"lineNumber":94,"author":{"gitID":"SunBangjie"},"content":"            }"},{"lineNumber":95,"author":{"gitID":"SunBangjie"},"content":"        } else {"},{"lineNumber":96,"author":{"gitID":"SunBangjie"},"content":"            setAttributesFromSource(source);"},{"lineNumber":97,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":98,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":99,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":100,"author":{"gitID":"SunBangjie"},"content":"    public void setAttributesFromStrings(String encryptionMode, String outletName, String operatingHours,"},{"lineNumber":101,"author":{"gitID":"SunBangjie"},"content":"                                         String outletContact, String outletEmail, String passwordHash,"},{"lineNumber":102,"author":{"gitID":"SunBangjie"},"content":"                                         String announcement) {"},{"lineNumber":103,"author":{"gitID":"SunBangjie"},"content":"        this.encryptionMode \u003d encryptionMode;"},{"lineNumber":104,"author":{"gitID":"SunBangjie"},"content":"        this.outletName \u003d outletName;"},{"lineNumber":105,"author":{"gitID":"SunBangjie"},"content":"        this.operatingHours \u003d operatingHours;"},{"lineNumber":106,"author":{"gitID":"SunBangjie"},"content":"        this.outletContact \u003d outletContact;"},{"lineNumber":107,"author":{"gitID":"SunBangjie"},"content":"        this.outletEmail \u003d outletEmail;"},{"lineNumber":108,"author":{"gitID":"SunBangjie"},"content":"        this.passwordHash \u003d passwordHash;"},{"lineNumber":109,"author":{"gitID":"SunBangjie"},"content":"        this.announcement \u003d announcement;"},{"lineNumber":110,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":111,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":112,"author":{"gitID":"SunBangjie"},"content":"    public void setAttributesFromSource(OutletInformation source) {"},{"lineNumber":113,"author":{"gitID":"SunBangjie"},"content":"        encryptionMode \u003d source.getEncryptionModeMessage();"},{"lineNumber":114,"author":{"gitID":"SunBangjie"},"content":"        outletName \u003d source.getName().fullName;"},{"lineNumber":115,"author":{"gitID":"SunBangjie"},"content":"        operatingHours \u003d source.getOperatingHours().value;"},{"lineNumber":116,"author":{"gitID":"SunBangjie"},"content":"        outletContact \u003d source.getOutletContact().value;"},{"lineNumber":117,"author":{"gitID":"SunBangjie"},"content":"        outletEmail \u003d source.getOutletEmail().value;"},{"lineNumber":118,"author":{"gitID":"SunBangjie"},"content":"        passwordHash \u003d source.getMasterPassword().getPasswordHash();"},{"lineNumber":119,"author":{"gitID":"SunBangjie"},"content":"        announcement \u003d source.getAnnouncement().value;"},{"lineNumber":120,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":121,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":122,"author":{"gitID":"SunBangjie"},"content":"    private OutletName setOutletName() throws IllegalValueException {"},{"lineNumber":123,"author":{"gitID":"SunBangjie"},"content":"        String decryptedOutletName;"},{"lineNumber":124,"author":{"gitID":"SunBangjie"},"content":"        if (this.encryptionMode.equals(ENCRYPTED)) {"},{"lineNumber":125,"author":{"gitID":"SunBangjie"},"content":"            try {"},{"lineNumber":126,"author":{"gitID":"SunBangjie"},"content":"                decryptedOutletName \u003d decrypt(this.outletName);"},{"lineNumber":127,"author":{"gitID":"SunBangjie"},"content":"            } catch (Exception e) {"},{"lineNumber":128,"author":{"gitID":"SunBangjie"},"content":"                throw new IllegalValueException(String.format(DECRYPT_FAIL_MESSAGE, OutletName.class.getSimpleName()));"},{"lineNumber":129,"author":{"gitID":"SunBangjie"},"content":"            }"},{"lineNumber":130,"author":{"gitID":"SunBangjie"},"content":"        } else {"},{"lineNumber":131,"author":{"gitID":"SunBangjie"},"content":"            decryptedOutletName \u003d this.outletName;"},{"lineNumber":132,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":133,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":134,"author":{"gitID":"SunBangjie"},"content":"        if (decryptedOutletName \u003d\u003d null) {"},{"lineNumber":135,"author":{"gitID":"SunBangjie"},"content":"            throw new IllegalValueException(String.format(FAIL_MESSAGE, OutletName.class.getSimpleName()));"},{"lineNumber":136,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":137,"author":{"gitID":"SunBangjie"},"content":"        if (!OutletName.isValidName(decryptedOutletName)) {"},{"lineNumber":138,"author":{"gitID":"SunBangjie"},"content":"            throw new IllegalValueException(OutletName.MESSAGE_NAME_CONSTRAINTS);"},{"lineNumber":139,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":140,"author":{"gitID":"SunBangjie"},"content":"        OutletName outletName \u003d new OutletName(decryptedOutletName);"},{"lineNumber":141,"author":{"gitID":"SunBangjie"},"content":"        return outletName;"},{"lineNumber":142,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":143,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":144,"author":{"gitID":"SunBangjie"},"content":"    private OperatingHours setOperatingHours() throws IllegalValueException {"},{"lineNumber":145,"author":{"gitID":"SunBangjie"},"content":"        String decryptedOperatingHours;"},{"lineNumber":146,"author":{"gitID":"SunBangjie"},"content":"        if (this.encryptionMode.equals(ENCRYPTED)) {"},{"lineNumber":147,"author":{"gitID":"SunBangjie"},"content":"            try {"},{"lineNumber":148,"author":{"gitID":"SunBangjie"},"content":"                decryptedOperatingHours \u003d decrypt(this.operatingHours);"},{"lineNumber":149,"author":{"gitID":"SunBangjie"},"content":"            } catch (Exception e) {"},{"lineNumber":150,"author":{"gitID":"SunBangjie"},"content":"                throw new IllegalValueException(String.format(DECRYPT_FAIL_MESSAGE,"},{"lineNumber":151,"author":{"gitID":"SunBangjie"},"content":"                        OperatingHours.class.getSimpleName()));"},{"lineNumber":152,"author":{"gitID":"SunBangjie"},"content":"            }"},{"lineNumber":153,"author":{"gitID":"SunBangjie"},"content":"        } else {"},{"lineNumber":154,"author":{"gitID":"SunBangjie"},"content":"            decryptedOperatingHours \u003d this.operatingHours;"},{"lineNumber":155,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":156,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":157,"author":{"gitID":"SunBangjie"},"content":"        if (decryptedOperatingHours \u003d\u003d null) {"},{"lineNumber":158,"author":{"gitID":"SunBangjie"},"content":"            throw new IllegalValueException(String.format(FAIL_MESSAGE, OperatingHours.class.getSimpleName()));"},{"lineNumber":159,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":160,"author":{"gitID":"SunBangjie"},"content":"        if (!OperatingHours.isValidOperatingHours(decryptedOperatingHours)) {"},{"lineNumber":161,"author":{"gitID":"SunBangjie"},"content":"            throw new IllegalValueException(OperatingHours.MESSAGE_OPERATING_HOUR_CONSTRAINTS);"},{"lineNumber":162,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":163,"author":{"gitID":"SunBangjie"},"content":"        OperatingHours operatingHours \u003d new OperatingHours(decryptedOperatingHours);"},{"lineNumber":164,"author":{"gitID":"SunBangjie"},"content":"        return operatingHours;"},{"lineNumber":165,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":166,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":167,"author":{"gitID":"SunBangjie"},"content":"    private OutletContact setOutletContact() throws IllegalValueException {"},{"lineNumber":168,"author":{"gitID":"SunBangjie"},"content":"        String decryptedOutletContact;"},{"lineNumber":169,"author":{"gitID":"SunBangjie"},"content":"        if (this.encryptionMode.equals(ENCRYPTED)) {"},{"lineNumber":170,"author":{"gitID":"SunBangjie"},"content":"            try {"},{"lineNumber":171,"author":{"gitID":"SunBangjie"},"content":"                decryptedOutletContact \u003d decrypt(this.outletContact);"},{"lineNumber":172,"author":{"gitID":"SunBangjie"},"content":"            } catch (Exception e) {"},{"lineNumber":173,"author":{"gitID":"SunBangjie"},"content":"                throw new IllegalValueException(String.format(DECRYPT_FAIL_MESSAGE,"},{"lineNumber":174,"author":{"gitID":"SunBangjie"},"content":"                        OutletContact.class.getSimpleName()));"},{"lineNumber":175,"author":{"gitID":"SunBangjie"},"content":"            }"},{"lineNumber":176,"author":{"gitID":"SunBangjie"},"content":"        } else {"},{"lineNumber":177,"author":{"gitID":"SunBangjie"},"content":"            decryptedOutletContact \u003d this.outletContact;"},{"lineNumber":178,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":179,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":180,"author":{"gitID":"SunBangjie"},"content":"        if (decryptedOutletContact \u003d\u003d null) {"},{"lineNumber":181,"author":{"gitID":"SunBangjie"},"content":"            throw new IllegalValueException(String.format(FAIL_MESSAGE, OutletContact.class.getSimpleName()));"},{"lineNumber":182,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":183,"author":{"gitID":"SunBangjie"},"content":"        if (!OutletContact.isValidOutletContact(decryptedOutletContact)) {"},{"lineNumber":184,"author":{"gitID":"SunBangjie"},"content":"            throw new IllegalValueException(OutletContact.MESSAGE_OUTLET_CONTACT_CONSTRAINTS);"},{"lineNumber":185,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":186,"author":{"gitID":"SunBangjie"},"content":"        OutletContact outletContact \u003d new OutletContact(decryptedOutletContact);"},{"lineNumber":187,"author":{"gitID":"SunBangjie"},"content":"        return outletContact;"},{"lineNumber":188,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":189,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":190,"author":{"gitID":"SunBangjie"},"content":"    private OutletEmail setOutletEmail() throws IllegalValueException {"},{"lineNumber":191,"author":{"gitID":"SunBangjie"},"content":"        String decryptedOutletEmail;"},{"lineNumber":192,"author":{"gitID":"SunBangjie"},"content":"        if (this.encryptionMode.equals(ENCRYPTED)) {"},{"lineNumber":193,"author":{"gitID":"SunBangjie"},"content":"            try {"},{"lineNumber":194,"author":{"gitID":"SunBangjie"},"content":"                decryptedOutletEmail \u003d decrypt(this.outletEmail);"},{"lineNumber":195,"author":{"gitID":"SunBangjie"},"content":"            } catch (Exception e) {"},{"lineNumber":196,"author":{"gitID":"SunBangjie"},"content":"                throw new IllegalValueException(String.format(DECRYPT_FAIL_MESSAGE,"},{"lineNumber":197,"author":{"gitID":"SunBangjie"},"content":"                        OutletEmail.class.getSimpleName()));"},{"lineNumber":198,"author":{"gitID":"SunBangjie"},"content":"            }"},{"lineNumber":199,"author":{"gitID":"SunBangjie"},"content":"        } else {"},{"lineNumber":200,"author":{"gitID":"SunBangjie"},"content":"            decryptedOutletEmail \u003d this.outletEmail;"},{"lineNumber":201,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":202,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":203,"author":{"gitID":"SunBangjie"},"content":"        if (decryptedOutletEmail \u003d\u003d null) {"},{"lineNumber":204,"author":{"gitID":"SunBangjie"},"content":"            throw new IllegalValueException(String.format(FAIL_MESSAGE, OutletEmail.class.getSimpleName()));"},{"lineNumber":205,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":206,"author":{"gitID":"SunBangjie"},"content":"        if (!OutletEmail.isValidOutletEmail(decryptedOutletEmail)) {"},{"lineNumber":207,"author":{"gitID":"SunBangjie"},"content":"            throw new IllegalValueException(OutletEmail.MESSAGE_OUTLET_EMAIL_CONSTRAINTS);"},{"lineNumber":208,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":209,"author":{"gitID":"SunBangjie"},"content":"        OutletEmail outletEmail \u003d new OutletEmail(decryptedOutletEmail);"},{"lineNumber":210,"author":{"gitID":"SunBangjie"},"content":"        return outletEmail;"},{"lineNumber":211,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":212,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":213,"author":{"gitID":"SunBangjie"},"content":"    private Password setPassword() throws IllegalValueException {"},{"lineNumber":214,"author":{"gitID":"SunBangjie"},"content":"        String decryptedPasswordHash;"},{"lineNumber":215,"author":{"gitID":"SunBangjie"},"content":"        if (this.encryptionMode.equals(ENCRYPTED)) {"},{"lineNumber":216,"author":{"gitID":"SunBangjie"},"content":"            try {"},{"lineNumber":217,"author":{"gitID":"SunBangjie"},"content":"                decryptedPasswordHash \u003d decrypt(this.passwordHash);"},{"lineNumber":218,"author":{"gitID":"SunBangjie"},"content":"            } catch (Exception e) {"},{"lineNumber":219,"author":{"gitID":"SunBangjie"},"content":"                throw new IllegalValueException(String.format(DECRYPT_FAIL_MESSAGE, Password.class.getSimpleName()));"},{"lineNumber":220,"author":{"gitID":"SunBangjie"},"content":"            }"},{"lineNumber":221,"author":{"gitID":"SunBangjie"},"content":"        } else {"},{"lineNumber":222,"author":{"gitID":"SunBangjie"},"content":"            decryptedPasswordHash \u003d this.passwordHash;"},{"lineNumber":223,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":224,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":225,"author":{"gitID":"SunBangjie"},"content":"        if (decryptedPasswordHash \u003d\u003d null) {"},{"lineNumber":226,"author":{"gitID":"SunBangjie"},"content":"            throw new IllegalValueException(String.format(FAIL_MESSAGE, Password.class.getSimpleName()));"},{"lineNumber":227,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":228,"author":{"gitID":"SunBangjie"},"content":"        Password masterPassword \u003d new Password(decryptedPasswordHash);"},{"lineNumber":229,"author":{"gitID":"SunBangjie"},"content":"        return masterPassword;"},{"lineNumber":230,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":231,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":232,"author":{"gitID":"SunBangjie"},"content":"    private Announcement setAnnouncement() throws IllegalValueException {"},{"lineNumber":233,"author":{"gitID":"SunBangjie"},"content":"        String decryptedAnnouncement;"},{"lineNumber":234,"author":{"gitID":"SunBangjie"},"content":"        if (this.encryptionMode.equals(ENCRYPTED)) {"},{"lineNumber":235,"author":{"gitID":"SunBangjie"},"content":"            try {"},{"lineNumber":236,"author":{"gitID":"SunBangjie"},"content":"                decryptedAnnouncement \u003d decrypt(this.announcement);"},{"lineNumber":237,"author":{"gitID":"SunBangjie"},"content":"            } catch (Exception e) {"},{"lineNumber":238,"author":{"gitID":"SunBangjie"},"content":"                throw new IllegalValueException(String.format(DECRYPT_FAIL_MESSAGE,"},{"lineNumber":239,"author":{"gitID":"SunBangjie"},"content":"                        Announcement.class.getSimpleName()));"},{"lineNumber":240,"author":{"gitID":"SunBangjie"},"content":"            }"},{"lineNumber":241,"author":{"gitID":"SunBangjie"},"content":"        } else {"},{"lineNumber":242,"author":{"gitID":"SunBangjie"},"content":"            decryptedAnnouncement \u003d this.announcement;"},{"lineNumber":243,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":244,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":245,"author":{"gitID":"SunBangjie"},"content":"        if (decryptedAnnouncement \u003d\u003d null) {"},{"lineNumber":246,"author":{"gitID":"SunBangjie"},"content":"            throw new IllegalValueException(String.format(FAIL_MESSAGE, Announcement.class.getSimpleName()));"},{"lineNumber":247,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":248,"author":{"gitID":"SunBangjie"},"content":"        Announcement announcement \u003d new Announcement(decryptedAnnouncement);"},{"lineNumber":249,"author":{"gitID":"SunBangjie"},"content":"        return announcement;"},{"lineNumber":250,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":251,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":252,"author":{"gitID":"SunBangjie"},"content":"    private boolean getEncryptionMode() throws IllegalValueException {"},{"lineNumber":253,"author":{"gitID":"SunBangjie"},"content":"        if (this.encryptionMode \u003d\u003d null) {"},{"lineNumber":254,"author":{"gitID":"SunBangjie"},"content":"            throw new IllegalValueException(String.format(FAIL_MESSAGE, \"Encryption Mode\"));"},{"lineNumber":255,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":256,"author":{"gitID":"SunBangjie"},"content":"        if (this.encryptionMode.equals(ENCRYPTED)) {"},{"lineNumber":257,"author":{"gitID":"SunBangjie"},"content":"            return true;"},{"lineNumber":258,"author":{"gitID":"SunBangjie"},"content":"        } else if (this.encryptionMode.equals(DECRYPTED)) {"},{"lineNumber":259,"author":{"gitID":"SunBangjie"},"content":"            return false;"},{"lineNumber":260,"author":{"gitID":"SunBangjie"},"content":"        } else {"},{"lineNumber":261,"author":{"gitID":"SunBangjie"},"content":"            throw new IllegalValueException(\"Invalid encryption mode\");"},{"lineNumber":262,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":263,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":264,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":265,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":266,"author":{"gitID":"SunBangjie"},"content":"     * Converts this jaxb-friendly adapted outlet object into the model\u0027s OutletInformation object"},{"lineNumber":267,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":268,"author":{"gitID":"SunBangjie"},"content":"    public OutletInformation toModelType() throws IllegalValueException {"},{"lineNumber":269,"author":{"gitID":"SunBangjie"},"content":"        final boolean isDataEncrypted \u003d getEncryptionMode();"},{"lineNumber":270,"author":{"gitID":"SunBangjie"},"content":"        final OutletName outletName \u003d setOutletName();"},{"lineNumber":271,"author":{"gitID":"SunBangjie"},"content":"        final OperatingHours operatingHours \u003d setOperatingHours();"},{"lineNumber":272,"author":{"gitID":"SunBangjie"},"content":"        final OutletContact outletContact \u003d setOutletContact();"},{"lineNumber":273,"author":{"gitID":"SunBangjie"},"content":"        final OutletEmail outletEmail \u003d setOutletEmail();"},{"lineNumber":274,"author":{"gitID":"SunBangjie"},"content":"        final Password masterPassword \u003d setPassword();"},{"lineNumber":275,"author":{"gitID":"SunBangjie"},"content":"        final Announcement announcement \u003d setAnnouncement();"},{"lineNumber":276,"author":{"gitID":"SunBangjie"},"content":"        return new OutletInformation(outletName, operatingHours, outletContact, outletEmail,"},{"lineNumber":277,"author":{"gitID":"SunBangjie"},"content":"                announcement, masterPassword, isDataEncrypted);"},{"lineNumber":278,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":279,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":280,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":281,"author":{"gitID":"SunBangjie"},"content":"    public boolean equals(Object other) {"},{"lineNumber":282,"author":{"gitID":"SunBangjie"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":283,"author":{"gitID":"SunBangjie"},"content":"            return true;"},{"lineNumber":284,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":285,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":286,"author":{"gitID":"SunBangjie"},"content":"        if (!(other instanceof XmlAdaptedOutletInformation)) {"},{"lineNumber":287,"author":{"gitID":"SunBangjie"},"content":"            return false;"},{"lineNumber":288,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":289,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":290,"author":{"gitID":"SunBangjie"},"content":"        XmlAdaptedOutletInformation otherOutlet \u003d (XmlAdaptedOutletInformation) other;"},{"lineNumber":291,"author":{"gitID":"SunBangjie"},"content":"        return Objects.equals(outletName, otherOutlet.outletName)"},{"lineNumber":292,"author":{"gitID":"SunBangjie"},"content":"                \u0026\u0026 Objects.equals(operatingHours, otherOutlet.operatingHours)"},{"lineNumber":293,"author":{"gitID":"SunBangjie"},"content":"                \u0026\u0026 Objects.equals(outletContact, otherOutlet.outletContact)"},{"lineNumber":294,"author":{"gitID":"SunBangjie"},"content":"                \u0026\u0026 Objects.equals(outletEmail, otherOutlet.outletEmail)"},{"lineNumber":295,"author":{"gitID":"SunBangjie"},"content":"                \u0026\u0026 Objects.equals(passwordHash, otherOutlet.passwordHash)"},{"lineNumber":296,"author":{"gitID":"SunBangjie"},"content":"                \u0026\u0026 Objects.equals(announcement, otherOutlet.announcement)"},{"lineNumber":297,"author":{"gitID":"SunBangjie"},"content":"                \u0026\u0026 Objects.equals(encryptionMode, otherOutlet.encryptionMode);"},{"lineNumber":298,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":299,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":19,"SunBangjie":280}},{"path":"src/main/java/seedu/ptman/model/shift/Capacity.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.model.shift;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.util.AppUtil.checkArgument;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"shanwpf"},"content":"//@@author shanwpf"},{"lineNumber":9,"author":{"gitID":"shanwpf"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"shanwpf"},"content":" * Represents a shift\u0027s capacity"},{"lineNumber":11,"author":{"gitID":"shanwpf"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidCapacity(String)}"},{"lineNumber":12,"author":{"gitID":"shanwpf"},"content":" */"},{"lineNumber":13,"author":{"gitID":"shanwpf"},"content":"public class Capacity {"},{"lineNumber":14,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":15,"author":{"gitID":"shanwpf"},"content":"    public static final String MESSAGE_CAPACITY_CONSTRAINTS \u003d \"Capacity should be a positive integer.\";"},{"lineNumber":16,"author":{"gitID":"shanwpf"},"content":"    public static final String CAPACITY_VALIDATION_REGEX \u003d \"^[1-9]\\\\d*$\";"},{"lineNumber":17,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":18,"author":{"gitID":"shanwpf"},"content":"    public final int capacity;"},{"lineNumber":19,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":20,"author":{"gitID":"shanwpf"},"content":"    public Capacity(String capacity) {"},{"lineNumber":21,"author":{"gitID":"shanwpf"},"content":"        requireNonNull(capacity);"},{"lineNumber":22,"author":{"gitID":"shanwpf"},"content":"        checkArgument(isValidCapacity(capacity), MESSAGE_CAPACITY_CONSTRAINTS);"},{"lineNumber":23,"author":{"gitID":"shanwpf"},"content":"        this.capacity \u003d Integer.parseInt(capacity);"},{"lineNumber":24,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":25,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":26,"author":{"gitID":"shanwpf"},"content":"    public static Boolean isValidCapacity(String test) {"},{"lineNumber":27,"author":{"gitID":"shanwpf"},"content":"        return test.matches(CAPACITY_VALIDATION_REGEX);"},{"lineNumber":28,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":29,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":30,"author":{"gitID":"shanwpf"},"content":"    public int getCapacity() {"},{"lineNumber":31,"author":{"gitID":"shanwpf"},"content":"        return capacity;"},{"lineNumber":32,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":34,"author":{"gitID":"shanwpf"},"content":"    @Override"},{"lineNumber":35,"author":{"gitID":"shanwpf"},"content":"    public String toString() {"},{"lineNumber":36,"author":{"gitID":"shanwpf"},"content":"        return String.valueOf(capacity);"},{"lineNumber":37,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":39,"author":{"gitID":"shanwpf"},"content":"    @Override"},{"lineNumber":40,"author":{"gitID":"shanwpf"},"content":"    public boolean equals(Object o) {"},{"lineNumber":41,"author":{"gitID":"shanwpf"},"content":"        if (this \u003d\u003d o) {"},{"lineNumber":42,"author":{"gitID":"shanwpf"},"content":"            return true;"},{"lineNumber":43,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":44,"author":{"gitID":"shanwpf"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"},{"lineNumber":45,"author":{"gitID":"shanwpf"},"content":"            return false;"},{"lineNumber":46,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":47,"author":{"gitID":"shanwpf"},"content":"        Capacity capacity1 \u003d (Capacity) o;"},{"lineNumber":48,"author":{"gitID":"shanwpf"},"content":"        return Objects.equals(capacity, capacity1.capacity);"},{"lineNumber":49,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":51,"author":{"gitID":"shanwpf"},"content":"    @Override"},{"lineNumber":52,"author":{"gitID":"shanwpf"},"content":"    public int hashCode() {"},{"lineNumber":53,"author":{"gitID":"shanwpf"},"content":"        return new Integer(capacity).hashCode();"},{"lineNumber":54,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":55,"author":{"gitID":"shanwpf"},"content":"}"}],"authorContributionMap":{"shanwpf":48,"-":7}},{"path":"src/main/java/seedu/ptman/model/shift/Shift.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.model.shift;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.util.CollectionUtil.requireAllNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Set;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import com.google.common.collect.Iterables;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Employee;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.UniqueEmployeeList;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.exceptions.DuplicateEmployeeException;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.exceptions.EmployeeNotFoundException;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.exceptions.ShiftFullException;"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"shanwpf"},"content":"//@@author shanwpf"},{"lineNumber":19,"author":{"gitID":"shanwpf"},"content":"/**"},{"lineNumber":20,"author":{"gitID":"shanwpf"},"content":" * Represents a shift that employees can work in."},{"lineNumber":21,"author":{"gitID":"shanwpf"},"content":" */"},{"lineNumber":22,"author":{"gitID":"shanwpf"},"content":"public class Shift {"},{"lineNumber":23,"author":{"gitID":"shanwpf"},"content":"    private Time startTime;"},{"lineNumber":24,"author":{"gitID":"shanwpf"},"content":"    private Time endTime;"},{"lineNumber":25,"author":{"gitID":"shanwpf"},"content":"    private Date date;"},{"lineNumber":26,"author":{"gitID":"shanwpf"},"content":"    private UniqueEmployeeList uniqueEmployeeList;"},{"lineNumber":27,"author":{"gitID":"shanwpf"},"content":"    private Capacity capacity;"},{"lineNumber":28,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":29,"author":{"gitID":"shanwpf"},"content":"    public Shift(Date date, Time startTime, Time endTime, Capacity capacity) {"},{"lineNumber":30,"author":{"gitID":"shanwpf"},"content":"        requireAllNonNull(startTime, endTime, capacity);"},{"lineNumber":31,"author":{"gitID":"shanwpf"},"content":"        this.date \u003d date;"},{"lineNumber":32,"author":{"gitID":"shanwpf"},"content":"        this.startTime \u003d startTime;"},{"lineNumber":33,"author":{"gitID":"shanwpf"},"content":"        this.endTime \u003d endTime;"},{"lineNumber":34,"author":{"gitID":"shanwpf"},"content":"        this.capacity \u003d capacity;"},{"lineNumber":35,"author":{"gitID":"shanwpf"},"content":"        this.uniqueEmployeeList \u003d new UniqueEmployeeList();"},{"lineNumber":36,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":37,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":38,"author":{"gitID":"shanwpf"},"content":"    public Shift(Shift shift) {"},{"lineNumber":39,"author":{"gitID":"shanwpf"},"content":"        this.date \u003d shift.getDate();"},{"lineNumber":40,"author":{"gitID":"shanwpf"},"content":"        this.startTime \u003d shift.getStartTime();"},{"lineNumber":41,"author":{"gitID":"shanwpf"},"content":"        this.endTime \u003d shift.getEndTime();"},{"lineNumber":42,"author":{"gitID":"shanwpf"},"content":"        this.capacity \u003d shift.getCapacity();"},{"lineNumber":43,"author":{"gitID":"shanwpf"},"content":"        this.uniqueEmployeeList \u003d new UniqueEmployeeList();"},{"lineNumber":44,"author":{"gitID":"shanwpf"},"content":"        setEmployees(shift);"},{"lineNumber":45,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":47,"author":{"gitID":"shanwpf"},"content":"    public Shift(Date date, Time startTime, Time endTime, Capacity capacity, Set\u003cEmployee\u003e employees) {"},{"lineNumber":48,"author":{"gitID":"shanwpf"},"content":"        requireAllNonNull(date, startTime, endTime, capacity, employees);"},{"lineNumber":49,"author":{"gitID":"shanwpf"},"content":"        this.startTime \u003d startTime;"},{"lineNumber":50,"author":{"gitID":"shanwpf"},"content":"        this.endTime \u003d endTime;"},{"lineNumber":51,"author":{"gitID":"shanwpf"},"content":"        this.capacity \u003d capacity;"},{"lineNumber":52,"author":{"gitID":"shanwpf"},"content":"        this.date \u003d date;"},{"lineNumber":53,"author":{"gitID":"shanwpf"},"content":"        this.uniqueEmployeeList \u003d new UniqueEmployeeList(employees);"},{"lineNumber":54,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":55,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":56,"author":{"gitID":"shanwpf"},"content":"    protected boolean contains(Employee employee) {"},{"lineNumber":57,"author":{"gitID":"shanwpf"},"content":"        return uniqueEmployeeList.contains(employee);"},{"lineNumber":58,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":59,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":60,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":61,"author":{"gitID":"shanwpf"},"content":"     * Adds an employee to this shift"},{"lineNumber":62,"author":{"gitID":"shanwpf"},"content":"     * @throws DuplicateEmployeeException"},{"lineNumber":63,"author":{"gitID":"shanwpf"},"content":"     * @throws ShiftFullException"},{"lineNumber":64,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":65,"author":{"gitID":"shanwpf"},"content":"    public void addEmployee(Employee... employees) throws DuplicateEmployeeException, ShiftFullException {"},{"lineNumber":66,"author":{"gitID":"shanwpf"},"content":"        if (this.isFull()) {"},{"lineNumber":67,"author":{"gitID":"shanwpf"},"content":"            throw new ShiftFullException();"},{"lineNumber":68,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":69,"author":{"gitID":"shanwpf"},"content":"        for (Employee employee : employees) {"},{"lineNumber":70,"author":{"gitID":"shanwpf"},"content":"            uniqueEmployeeList.add(employee);"},{"lineNumber":71,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":72,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":74,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":75,"author":{"gitID":"shanwpf"},"content":"     * Removes an employee from this shift"},{"lineNumber":76,"author":{"gitID":"shanwpf"},"content":"     * @throws EmployeeNotFoundException"},{"lineNumber":77,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":78,"author":{"gitID":"shanwpf"},"content":"    public void removeEmployee(Employee employee) throws EmployeeNotFoundException {"},{"lineNumber":79,"author":{"gitID":"shanwpf"},"content":"        uniqueEmployeeList.remove(employee);"},{"lineNumber":80,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":81,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":82,"author":{"gitID":"shanwpf"},"content":"    @Override"},{"lineNumber":83,"author":{"gitID":"shanwpf"},"content":"    public boolean equals(Object o) {"},{"lineNumber":84,"author":{"gitID":"shanwpf"},"content":"        if (this \u003d\u003d o) {"},{"lineNumber":85,"author":{"gitID":"shanwpf"},"content":"            return true;"},{"lineNumber":86,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":87,"author":{"gitID":"shanwpf"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"},{"lineNumber":88,"author":{"gitID":"shanwpf"},"content":"            return false;"},{"lineNumber":89,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":90,"author":{"gitID":"shanwpf"},"content":"        Shift shift \u003d (Shift) o;"},{"lineNumber":91,"author":{"gitID":"shanwpf"},"content":"        return startTime.equals(shift.startTime)"},{"lineNumber":92,"author":{"gitID":"shanwpf"},"content":"                \u0026\u0026 endTime.equals(shift.endTime)"},{"lineNumber":93,"author":{"gitID":"shanwpf"},"content":"                \u0026\u0026 date.equals(shift.date)"},{"lineNumber":94,"author":{"gitID":"shanwpf"},"content":"                \u0026\u0026 capacity.equals(shift.capacity);"},{"lineNumber":95,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":96,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":97,"author":{"gitID":"shanwpf"},"content":"    @Override"},{"lineNumber":98,"author":{"gitID":"shanwpf"},"content":"    public int hashCode() {"},{"lineNumber":99,"author":{"gitID":"shanwpf"},"content":"        return Objects.hash(startTime, endTime, date, uniqueEmployeeList, capacity);"},{"lineNumber":100,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":101,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":102,"author":{"gitID":"shanwpf"},"content":"    public ObservableList\u003cEmployee\u003e getEmployeeList() {"},{"lineNumber":103,"author":{"gitID":"shanwpf"},"content":"        return uniqueEmployeeList.asObservableList();"},{"lineNumber":104,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":105,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":106,"author":{"gitID":"shanwpf"},"content":"    public Time getStartTime() {"},{"lineNumber":107,"author":{"gitID":"shanwpf"},"content":"        return startTime;"},{"lineNumber":108,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":109,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":110,"author":{"gitID":"shanwpf"},"content":"    public Time getEndTime() {"},{"lineNumber":111,"author":{"gitID":"shanwpf"},"content":"        return endTime;"},{"lineNumber":112,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":113,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":114,"author":{"gitID":"shanwpf"},"content":"    public Capacity getCapacity() {"},{"lineNumber":115,"author":{"gitID":"shanwpf"},"content":"        return capacity;"},{"lineNumber":116,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":117,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":118,"author":{"gitID":"shanwpf"},"content":"    public int getSlotsLeft() {"},{"lineNumber":119,"author":{"gitID":"shanwpf"},"content":"        int numEmployees \u003d Iterables.size(uniqueEmployeeList);"},{"lineNumber":120,"author":{"gitID":"shanwpf"},"content":"        return capacity.getCapacity() - numEmployees;"},{"lineNumber":121,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":122,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":123,"author":{"gitID":"shanwpf"},"content":"    public boolean isFull() {"},{"lineNumber":124,"author":{"gitID":"shanwpf"},"content":"        return getEmployeeList().size() \u003e\u003d this.capacity.getCapacity();"},{"lineNumber":125,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":126,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":127,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":128,"author":{"gitID":"shanwpf"},"content":"     * Compares this shift to another."},{"lineNumber":129,"author":{"gitID":"shanwpf"},"content":"     * Returns a negative integer if the argument is an earlier shift,"},{"lineNumber":130,"author":{"gitID":"shanwpf"},"content":"     * 0 if the shifts are equal, or a positive integer if the argument is a later shift."},{"lineNumber":131,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":132,"author":{"gitID":"shanwpf"},"content":"    public int compareTo(Shift other) {"},{"lineNumber":133,"author":{"gitID":"shanwpf"},"content":"        if (date.equals(other.getDate())) {"},{"lineNumber":134,"author":{"gitID":"shanwpf"},"content":"            return startTime.compareTo(other.getStartTime());"},{"lineNumber":135,"author":{"gitID":"shanwpf"},"content":"        } else {"},{"lineNumber":136,"author":{"gitID":"shanwpf"},"content":"            return date.compareTo(other.getDate());"},{"lineNumber":137,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":138,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":139,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":140,"author":{"gitID":"shanwpf"},"content":"    public UniqueEmployeeList getUniqueEmployeeList() {"},{"lineNumber":141,"author":{"gitID":"shanwpf"},"content":"        return uniqueEmployeeList;"},{"lineNumber":142,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":143,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":144,"author":{"gitID":"shanwpf"},"content":"    public void setEmployees(Shift shift) {"},{"lineNumber":145,"author":{"gitID":"shanwpf"},"content":"        for (final Employee employee : shift.getEmployeeList()) {"},{"lineNumber":146,"author":{"gitID":"shanwpf"},"content":"            try {"},{"lineNumber":147,"author":{"gitID":"shanwpf"},"content":"                uniqueEmployeeList.add(employee);"},{"lineNumber":148,"author":{"gitID":"shanwpf"},"content":"            } catch (DuplicateEmployeeException e) {"},{"lineNumber":149,"author":{"gitID":"shanwpf"},"content":"                e.printStackTrace();"},{"lineNumber":150,"author":{"gitID":"shanwpf"},"content":"            }"},{"lineNumber":151,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":152,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":153,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":154,"author":{"gitID":"shanwpf"},"content":"    @Override"},{"lineNumber":155,"author":{"gitID":"shanwpf"},"content":"    public String toString() {"},{"lineNumber":156,"author":{"gitID":"shanwpf"},"content":"        final StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":157,"author":{"gitID":"shanwpf"},"content":"        return sb.append(\"Date: \")"},{"lineNumber":158,"author":{"gitID":"shanwpf"},"content":"                .append(date)"},{"lineNumber":159,"author":{"gitID":"shanwpf"},"content":"                .append(\" Start time: \")"},{"lineNumber":160,"author":{"gitID":"shanwpf"},"content":"                .append(startTime)"},{"lineNumber":161,"author":{"gitID":"shanwpf"},"content":"                .append(\" End time: \")"},{"lineNumber":162,"author":{"gitID":"shanwpf"},"content":"                .append(endTime)"},{"lineNumber":163,"author":{"gitID":"shanwpf"},"content":"                .append(\" Capacity: \")"},{"lineNumber":164,"author":{"gitID":"shanwpf"},"content":"                .append(capacity).toString();"},{"lineNumber":165,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":166,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":167,"author":{"gitID":"shanwpf"},"content":"    public Date getDate() {"},{"lineNumber":168,"author":{"gitID":"shanwpf"},"content":"        return date;"},{"lineNumber":169,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":170,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":171,"author":{"gitID":"shanwpf"},"content":"    public boolean containsEmployee(Employee key) {"},{"lineNumber":172,"author":{"gitID":"shanwpf"},"content":"        return uniqueEmployeeList.contains(key);"},{"lineNumber":173,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":174,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":175,"author":{"gitID":"shanwpf"},"content":"    public Set\u003cEmployee\u003e getEmployees() {"},{"lineNumber":176,"author":{"gitID":"shanwpf"},"content":"        return Collections.unmodifiableSet(uniqueEmployeeList.toSet());"},{"lineNumber":177,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":178,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":179,"author":{"gitID":"shanwpf"},"content":"    public boolean isOver() {"},{"lineNumber":180,"author":{"gitID":"shanwpf"},"content":"        return date.isOver() || (date.isCurrentDate() \u0026\u0026 startTime.isOver());"},{"lineNumber":181,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":182,"author":{"gitID":"shanwpf"},"content":"}"}],"authorContributionMap":{"shanwpf":165,"-":17}},{"path":"src/main/java/seedu/ptman/storage/XmlEncryptedAdaptedEmployee.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.encrypter.DataEncrypter.decrypt;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.encrypter.DataEncrypter.encrypt;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.HashSet;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import java.util.Set;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import javax.xml.bind.annotation.XmlElement;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.exceptions.IllegalValueException;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Address;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Email;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Employee;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Name;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Phone;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Salary;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.ptman.model.tag.Tag;"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":25,"author":{"gitID":"SunBangjie"},"content":"/**"},{"lineNumber":26,"author":{"gitID":"SunBangjie"},"content":" * JAXB-friendly version of the Employee."},{"lineNumber":27,"author":{"gitID":"SunBangjie"},"content":" */"},{"lineNumber":28,"author":{"gitID":"SunBangjie"},"content":"public class XmlEncryptedAdaptedEmployee {"},{"lineNumber":29,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":30,"author":{"gitID":"SunBangjie"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Employee\u0027s %s field is missing!\";"},{"lineNumber":31,"author":{"gitID":"SunBangjie"},"content":"    public static final String DECRYPT_FAIL_MESSAGE \u003d \"Cannot decrypt %s\";"},{"lineNumber":32,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":33,"author":{"gitID":"SunBangjie"},"content":"    @XmlElement(required \u003d true)"},{"lineNumber":34,"author":{"gitID":"SunBangjie"},"content":"    private String name;"},{"lineNumber":35,"author":{"gitID":"SunBangjie"},"content":"    @XmlElement(required \u003d true)"},{"lineNumber":36,"author":{"gitID":"SunBangjie"},"content":"    private String phone;"},{"lineNumber":37,"author":{"gitID":"SunBangjie"},"content":"    @XmlElement(required \u003d true)"},{"lineNumber":38,"author":{"gitID":"SunBangjie"},"content":"    private String email;"},{"lineNumber":39,"author":{"gitID":"SunBangjie"},"content":"    @XmlElement(required \u003d true)"},{"lineNumber":40,"author":{"gitID":"SunBangjie"},"content":"    private String address;"},{"lineNumber":41,"author":{"gitID":"SunBangjie"},"content":"    @XmlElement(required \u003d true)"},{"lineNumber":42,"author":{"gitID":"SunBangjie"},"content":"    private String salary;"},{"lineNumber":43,"author":{"gitID":"SunBangjie"},"content":"    @XmlElement(required \u003d true)"},{"lineNumber":44,"author":{"gitID":"SunBangjie"},"content":"    private String passwordHash;"},{"lineNumber":45,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":46,"author":{"gitID":"SunBangjie"},"content":"    @XmlElement"},{"lineNumber":47,"author":{"gitID":"SunBangjie"},"content":"    private List\u003cXmlEncryptedAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();"},{"lineNumber":48,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":49,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":50,"author":{"gitID":"SunBangjie"},"content":"     * Constructs an XmlAdaptedEmployee."},{"lineNumber":51,"author":{"gitID":"SunBangjie"},"content":"     * This is the no-arg constructor that is required by JAXB."},{"lineNumber":52,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":53,"author":{"gitID":"SunBangjie"},"content":"    public XmlEncryptedAdaptedEmployee() {}"},{"lineNumber":54,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":55,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":56,"author":{"gitID":"SunBangjie"},"content":"     * Constructs an {@code XmlAdaptedEmployee} with the given employee details."},{"lineNumber":57,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":58,"author":{"gitID":"SunBangjie"},"content":"    public XmlEncryptedAdaptedEmployee(String name, String phone, String email, String address,"},{"lineNumber":59,"author":{"gitID":"SunBangjie"},"content":"                                       String salary, String passwordHash, List\u003cXmlEncryptedAdaptedTag\u003e tagged) {"},{"lineNumber":60,"author":{"gitID":"SunBangjie"},"content":"        try {"},{"lineNumber":61,"author":{"gitID":"SunBangjie"},"content":"            this.name \u003d encrypt(name);"},{"lineNumber":62,"author":{"gitID":"SunBangjie"},"content":"            this.phone \u003d encrypt(phone);"},{"lineNumber":63,"author":{"gitID":"SunBangjie"},"content":"            this.email \u003d encrypt(email);"},{"lineNumber":64,"author":{"gitID":"SunBangjie"},"content":"            this.address \u003d encrypt(address);"},{"lineNumber":65,"author":{"gitID":"SunBangjie"},"content":"            this.salary \u003d encrypt(salary);"},{"lineNumber":66,"author":{"gitID":"SunBangjie"},"content":"            this.passwordHash \u003d encrypt(passwordHash);"},{"lineNumber":67,"author":{"gitID":"SunBangjie"},"content":"        } catch (Exception e) {"},{"lineNumber":68,"author":{"gitID":"SunBangjie"},"content":"            //Encryption should not fail"},{"lineNumber":69,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":70,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":71,"author":{"gitID":"SunBangjie"},"content":"        if (tagged !\u003d null) {"},{"lineNumber":72,"author":{"gitID":"SunBangjie"},"content":"            this.tagged \u003d new ArrayList\u003c\u003e(tagged);"},{"lineNumber":73,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":74,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":75,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":76,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":77,"author":{"gitID":"SunBangjie"},"content":"     * Converts a given Employee into this class for JAXB use."},{"lineNumber":78,"author":{"gitID":"SunBangjie"},"content":"     *"},{"lineNumber":79,"author":{"gitID":"SunBangjie"},"content":"     * @param source future changes to this will not affect the created XmlAdaptedEmployee"},{"lineNumber":80,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":81,"author":{"gitID":"SunBangjie"},"content":"    public XmlEncryptedAdaptedEmployee(Employee source) {"},{"lineNumber":82,"author":{"gitID":"SunBangjie"},"content":"        try {"},{"lineNumber":83,"author":{"gitID":"SunBangjie"},"content":"            name \u003d encrypt(source.getName().fullName);"},{"lineNumber":84,"author":{"gitID":"SunBangjie"},"content":"            phone \u003d encrypt(source.getPhone().value);"},{"lineNumber":85,"author":{"gitID":"SunBangjie"},"content":"            email \u003d encrypt(source.getEmail().value);"},{"lineNumber":86,"author":{"gitID":"SunBangjie"},"content":"            address \u003d encrypt(source.getAddress().value);"},{"lineNumber":87,"author":{"gitID":"SunBangjie"},"content":"            salary \u003d encrypt(source.getSalary().value);"},{"lineNumber":88,"author":{"gitID":"SunBangjie"},"content":"            passwordHash \u003d encrypt(source.getPassword().getPasswordHash());"},{"lineNumber":89,"author":{"gitID":"SunBangjie"},"content":"        } catch (Exception e) {"},{"lineNumber":90,"author":{"gitID":"SunBangjie"},"content":"            //Encryption should not fail"},{"lineNumber":91,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":92,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":93,"author":{"gitID":"SunBangjie"},"content":"        tagged \u003d new ArrayList\u003c\u003e();"},{"lineNumber":94,"author":{"gitID":"SunBangjie"},"content":"        for (Tag tag : source.getTags()) {"},{"lineNumber":95,"author":{"gitID":"SunBangjie"},"content":"            tagged.add(new XmlEncryptedAdaptedTag(tag));"},{"lineNumber":96,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":97,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":98,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":99,"author":{"gitID":"SunBangjie"},"content":"    public void setAttributesFromStrings(String name, String phone, String email, String address,"},{"lineNumber":100,"author":{"gitID":"SunBangjie"},"content":"                                          String salary, String passwordHash) {"},{"lineNumber":101,"author":{"gitID":"SunBangjie"},"content":"        this.name \u003d name;"},{"lineNumber":102,"author":{"gitID":"SunBangjie"},"content":"        this.phone \u003d phone;"},{"lineNumber":103,"author":{"gitID":"SunBangjie"},"content":"        this.email \u003d email;"},{"lineNumber":104,"author":{"gitID":"SunBangjie"},"content":"        this.address \u003d address;"},{"lineNumber":105,"author":{"gitID":"SunBangjie"},"content":"        this.salary \u003d salary;"},{"lineNumber":106,"author":{"gitID":"SunBangjie"},"content":"        this.passwordHash \u003d passwordHash;"},{"lineNumber":107,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":108,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":109,"author":{"gitID":"SunBangjie"},"content":"    public void setAttributesFromSource(Employee source) {"},{"lineNumber":110,"author":{"gitID":"SunBangjie"},"content":"        name \u003d source.getName().fullName;"},{"lineNumber":111,"author":{"gitID":"SunBangjie"},"content":"        phone \u003d source.getPhone().value;"},{"lineNumber":112,"author":{"gitID":"SunBangjie"},"content":"        email \u003d source.getEmail().value;"},{"lineNumber":113,"author":{"gitID":"SunBangjie"},"content":"        address \u003d source.getAddress().value;"},{"lineNumber":114,"author":{"gitID":"SunBangjie"},"content":"        salary \u003d source.getSalary().value;"},{"lineNumber":115,"author":{"gitID":"SunBangjie"},"content":"        passwordHash \u003d source.getPassword().getPasswordHash();"},{"lineNumber":116,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":117,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":118,"author":{"gitID":"SunBangjie"},"content":"    private Name setName() throws IllegalValueException {"},{"lineNumber":119,"author":{"gitID":"SunBangjie"},"content":"        String decryptedName;"},{"lineNumber":120,"author":{"gitID":"SunBangjie"},"content":"        try {"},{"lineNumber":121,"author":{"gitID":"SunBangjie"},"content":"            decryptedName \u003d decrypt(this.name);"},{"lineNumber":122,"author":{"gitID":"SunBangjie"},"content":"        } catch (Exception e) {"},{"lineNumber":123,"author":{"gitID":"SunBangjie"},"content":"            throw new IllegalValueException(String.format(DECRYPT_FAIL_MESSAGE, Name.class.getSimpleName()));"},{"lineNumber":124,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":125,"author":{"gitID":"SunBangjie"},"content":"        if (decryptedName \u003d\u003d null) {"},{"lineNumber":126,"author":{"gitID":"SunBangjie"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,"},{"lineNumber":127,"author":{"gitID":"SunBangjie"},"content":"                    Name.class.getSimpleName()));"},{"lineNumber":128,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":129,"author":{"gitID":"SunBangjie"},"content":"        if (!Name.isValidName(decryptedName)) {"},{"lineNumber":130,"author":{"gitID":"SunBangjie"},"content":"            throw new IllegalValueException(Name.MESSAGE_NAME_CONSTRAINTS);"},{"lineNumber":131,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":132,"author":{"gitID":"SunBangjie"},"content":"        return new Name(decryptedName);"},{"lineNumber":133,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":134,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":135,"author":{"gitID":"SunBangjie"},"content":"    private Phone setPhone() throws IllegalValueException {"},{"lineNumber":136,"author":{"gitID":"SunBangjie"},"content":"        String decryptedPhone;"},{"lineNumber":137,"author":{"gitID":"SunBangjie"},"content":"        try {"},{"lineNumber":138,"author":{"gitID":"SunBangjie"},"content":"            decryptedPhone \u003d decrypt(this.phone);"},{"lineNumber":139,"author":{"gitID":"SunBangjie"},"content":"        } catch (Exception e) {"},{"lineNumber":140,"author":{"gitID":"SunBangjie"},"content":"            throw new IllegalValueException(String.format(DECRYPT_FAIL_MESSAGE, Phone.class.getSimpleName()));"},{"lineNumber":141,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":142,"author":{"gitID":"SunBangjie"},"content":"        if (decryptedPhone \u003d\u003d null) {"},{"lineNumber":143,"author":{"gitID":"SunBangjie"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,"},{"lineNumber":144,"author":{"gitID":"SunBangjie"},"content":"                    Phone.class.getSimpleName()));"},{"lineNumber":145,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":146,"author":{"gitID":"SunBangjie"},"content":"        if (!Phone.isValidPhone(decryptedPhone)) {"},{"lineNumber":147,"author":{"gitID":"SunBangjie"},"content":"            throw new IllegalValueException(Phone.MESSAGE_PHONE_CONSTRAINTS);"},{"lineNumber":148,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":149,"author":{"gitID":"SunBangjie"},"content":"        return new Phone(decryptedPhone);"},{"lineNumber":150,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":151,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":152,"author":{"gitID":"SunBangjie"},"content":"    private Email setEmail() throws IllegalValueException {"},{"lineNumber":153,"author":{"gitID":"SunBangjie"},"content":"        String decryptedEmail;"},{"lineNumber":154,"author":{"gitID":"SunBangjie"},"content":"        try {"},{"lineNumber":155,"author":{"gitID":"SunBangjie"},"content":"            decryptedEmail \u003d decrypt(this.email);"},{"lineNumber":156,"author":{"gitID":"SunBangjie"},"content":"        } catch (Exception e) {"},{"lineNumber":157,"author":{"gitID":"SunBangjie"},"content":"            throw new IllegalValueException(String.format(DECRYPT_FAIL_MESSAGE, Email.class.getSimpleName()));"},{"lineNumber":158,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":159,"author":{"gitID":"SunBangjie"},"content":"        if (decryptedEmail \u003d\u003d null) {"},{"lineNumber":160,"author":{"gitID":"SunBangjie"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,"},{"lineNumber":161,"author":{"gitID":"SunBangjie"},"content":"                    Email.class.getSimpleName()));"},{"lineNumber":162,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":163,"author":{"gitID":"SunBangjie"},"content":"        if (!Email.isValidEmail(decryptedEmail)) {"},{"lineNumber":164,"author":{"gitID":"SunBangjie"},"content":"            throw new IllegalValueException(Email.MESSAGE_EMAIL_CONSTRAINTS);"},{"lineNumber":165,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":166,"author":{"gitID":"SunBangjie"},"content":"        return new Email(decryptedEmail);"},{"lineNumber":167,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":168,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":169,"author":{"gitID":"SunBangjie"},"content":"    private Address setAddress() throws IllegalValueException {"},{"lineNumber":170,"author":{"gitID":"SunBangjie"},"content":"        String decryptedAddress;"},{"lineNumber":171,"author":{"gitID":"SunBangjie"},"content":"        try {"},{"lineNumber":172,"author":{"gitID":"SunBangjie"},"content":"            decryptedAddress \u003d decrypt(this.address);"},{"lineNumber":173,"author":{"gitID":"SunBangjie"},"content":"        } catch (Exception e) {"},{"lineNumber":174,"author":{"gitID":"SunBangjie"},"content":"            throw new IllegalValueException(String.format(DECRYPT_FAIL_MESSAGE, Address.class.getSimpleName()));"},{"lineNumber":175,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":176,"author":{"gitID":"SunBangjie"},"content":"        if (decryptedAddress \u003d\u003d null) {"},{"lineNumber":177,"author":{"gitID":"SunBangjie"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,"},{"lineNumber":178,"author":{"gitID":"SunBangjie"},"content":"                    Address.class.getSimpleName()));"},{"lineNumber":179,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":180,"author":{"gitID":"SunBangjie"},"content":"        if (!Address.isValidAddress(decryptedAddress)) {"},{"lineNumber":181,"author":{"gitID":"SunBangjie"},"content":"            throw new IllegalValueException(Address.MESSAGE_ADDRESS_CONSTRAINTS);"},{"lineNumber":182,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":183,"author":{"gitID":"SunBangjie"},"content":"        return new Address(decryptedAddress);"},{"lineNumber":184,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":185,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":186,"author":{"gitID":"SunBangjie"},"content":"    private Salary setSalary() throws IllegalValueException {"},{"lineNumber":187,"author":{"gitID":"SunBangjie"},"content":"        String decryptedSalary;"},{"lineNumber":188,"author":{"gitID":"SunBangjie"},"content":"        try {"},{"lineNumber":189,"author":{"gitID":"SunBangjie"},"content":"            decryptedSalary \u003d decrypt(this.salary);"},{"lineNumber":190,"author":{"gitID":"SunBangjie"},"content":"        } catch (Exception e) {"},{"lineNumber":191,"author":{"gitID":"SunBangjie"},"content":"            throw new IllegalValueException(String.format(DECRYPT_FAIL_MESSAGE, Salary.class.getSimpleName()));"},{"lineNumber":192,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":193,"author":{"gitID":"SunBangjie"},"content":"        if (decryptedSalary \u003d\u003d null) {"},{"lineNumber":194,"author":{"gitID":"SunBangjie"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,"},{"lineNumber":195,"author":{"gitID":"SunBangjie"},"content":"                    Salary.class.getSimpleName()));"},{"lineNumber":196,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":197,"author":{"gitID":"SunBangjie"},"content":"        if (!Salary.isValidSalary(decryptedSalary)) {"},{"lineNumber":198,"author":{"gitID":"SunBangjie"},"content":"            throw new IllegalValueException(Salary.MESSAGE_SALARY_CONSTRAINTS);"},{"lineNumber":199,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":200,"author":{"gitID":"SunBangjie"},"content":"        return new Salary(decryptedSalary);"},{"lineNumber":201,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":202,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":203,"author":{"gitID":"SunBangjie"},"content":"    private Password setPassword() throws IllegalValueException {"},{"lineNumber":204,"author":{"gitID":"SunBangjie"},"content":"        String decryptedPasswordHash;"},{"lineNumber":205,"author":{"gitID":"SunBangjie"},"content":"        try {"},{"lineNumber":206,"author":{"gitID":"SunBangjie"},"content":"            decryptedPasswordHash \u003d decrypt(this.passwordHash);"},{"lineNumber":207,"author":{"gitID":"SunBangjie"},"content":"        } catch (Exception e) {"},{"lineNumber":208,"author":{"gitID":"SunBangjie"},"content":"            throw new IllegalValueException(String.format(DECRYPT_FAIL_MESSAGE, Password.class.getSimpleName()));"},{"lineNumber":209,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":210,"author":{"gitID":"SunBangjie"},"content":"        if (decryptedPasswordHash \u003d\u003d null) {"},{"lineNumber":211,"author":{"gitID":"SunBangjie"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,"},{"lineNumber":212,"author":{"gitID":"SunBangjie"},"content":"                    Password.class.getSimpleName()));"},{"lineNumber":213,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":214,"author":{"gitID":"SunBangjie"},"content":"        return new Password(decryptedPasswordHash);"},{"lineNumber":215,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":216,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":217,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":218,"author":{"gitID":"SunBangjie"},"content":"     * Converts this jaxb-friendly adapted employee object into the model\u0027s Employee object."},{"lineNumber":219,"author":{"gitID":"SunBangjie"},"content":"     *"},{"lineNumber":220,"author":{"gitID":"SunBangjie"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted employee"},{"lineNumber":221,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":222,"author":{"gitID":"SunBangjie"},"content":"    public Employee toModelType() throws IllegalValueException {"},{"lineNumber":223,"author":{"gitID":"SunBangjie"},"content":"        final List\u003cTag\u003e employeeTags \u003d new ArrayList\u003c\u003e();"},{"lineNumber":224,"author":{"gitID":"SunBangjie"},"content":"        for (XmlEncryptedAdaptedTag tag : tagged) {"},{"lineNumber":225,"author":{"gitID":"SunBangjie"},"content":"            employeeTags.add(tag.toModelType());"},{"lineNumber":226,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":227,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":228,"author":{"gitID":"SunBangjie"},"content":"        final Name name \u003d setName();"},{"lineNumber":229,"author":{"gitID":"SunBangjie"},"content":"        final Phone phone \u003d setPhone();"},{"lineNumber":230,"author":{"gitID":"SunBangjie"},"content":"        final Email email \u003d setEmail();"},{"lineNumber":231,"author":{"gitID":"SunBangjie"},"content":"        final Address address \u003d setAddress();"},{"lineNumber":232,"author":{"gitID":"SunBangjie"},"content":"        final Salary salary \u003d setSalary();"},{"lineNumber":233,"author":{"gitID":"SunBangjie"},"content":"        final Password password \u003d setPassword();"},{"lineNumber":234,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":235,"author":{"gitID":"SunBangjie"},"content":"        final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e(employeeTags);"},{"lineNumber":236,"author":{"gitID":"SunBangjie"},"content":"        return new Employee(name, phone, email, address, salary, password, tags);"},{"lineNumber":237,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":238,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":239,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":240,"author":{"gitID":"SunBangjie"},"content":"    public boolean equals(Object other) {"},{"lineNumber":241,"author":{"gitID":"SunBangjie"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":242,"author":{"gitID":"SunBangjie"},"content":"            return true;"},{"lineNumber":243,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":244,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":245,"author":{"gitID":"SunBangjie"},"content":"        if (!(other instanceof XmlEncryptedAdaptedEmployee)) {"},{"lineNumber":246,"author":{"gitID":"SunBangjie"},"content":"            return false;"},{"lineNumber":247,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":248,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":249,"author":{"gitID":"SunBangjie"},"content":"        XmlEncryptedAdaptedEmployee otherEmployee \u003d (XmlEncryptedAdaptedEmployee) other;"},{"lineNumber":250,"author":{"gitID":"SunBangjie"},"content":"        return Objects.equals(name, otherEmployee.name)"},{"lineNumber":251,"author":{"gitID":"SunBangjie"},"content":"                \u0026\u0026 Objects.equals(phone, otherEmployee.phone)"},{"lineNumber":252,"author":{"gitID":"SunBangjie"},"content":"                \u0026\u0026 Objects.equals(email, otherEmployee.email)"},{"lineNumber":253,"author":{"gitID":"SunBangjie"},"content":"                \u0026\u0026 Objects.equals(address, otherEmployee.address)"},{"lineNumber":254,"author":{"gitID":"SunBangjie"},"content":"                \u0026\u0026 tagged.equals(otherEmployee.tagged);"},{"lineNumber":255,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":256,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":23,"SunBangjie":233}},{"path":"src/main/java/seedu/ptman/model/shift/Date.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.model.shift;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.util.AppUtil.checkArgument;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"shanwpf"},"content":"//@@author shanwpf"},{"lineNumber":12,"author":{"gitID":"shanwpf"},"content":"/**"},{"lineNumber":13,"author":{"gitID":"shanwpf"},"content":" * Represents a shift\u0027s date"},{"lineNumber":14,"author":{"gitID":"shanwpf"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDate(String)}"},{"lineNumber":15,"author":{"gitID":"shanwpf"},"content":" */"},{"lineNumber":16,"author":{"gitID":"shanwpf"},"content":"public class Date {"},{"lineNumber":17,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":18,"author":{"gitID":"shanwpf"},"content":"    public static final String STRING_DATE_PATTERN \u003d \"dd-MM-yy\";"},{"lineNumber":19,"author":{"gitID":"shanwpf"},"content":"    public static final String MESSAGE_DATE_CONSTRAINTS \u003d \"Date should be in dd-mm-yy format\";"},{"lineNumber":20,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":21,"author":{"gitID":"shanwpf"},"content":"    public final LocalDate date;"},{"lineNumber":22,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":23,"author":{"gitID":"shanwpf"},"content":"    public Date(String date) {"},{"lineNumber":24,"author":{"gitID":"shanwpf"},"content":"        requireNonNull(date);"},{"lineNumber":25,"author":{"gitID":"shanwpf"},"content":"        checkArgument(isValidDate(date), MESSAGE_DATE_CONSTRAINTS);"},{"lineNumber":26,"author":{"gitID":"shanwpf"},"content":"        this.date \u003d LocalDate.parse(date, DateTimeFormatter.ofPattern(STRING_DATE_PATTERN));"},{"lineNumber":27,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":28,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":29,"author":{"gitID":"shanwpf"},"content":"    public Date(LocalDate date) {"},{"lineNumber":30,"author":{"gitID":"shanwpf"},"content":"        requireNonNull(date);"},{"lineNumber":31,"author":{"gitID":"shanwpf"},"content":"        this.date \u003d date;"},{"lineNumber":32,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":34,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":35,"author":{"gitID":"shanwpf"},"content":"     * Returns true if a given string is a valid date."},{"lineNumber":36,"author":{"gitID":"shanwpf"},"content":"     * @param test"},{"lineNumber":37,"author":{"gitID":"shanwpf"},"content":"     * @return"},{"lineNumber":38,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":39,"author":{"gitID":"shanwpf"},"content":"    public static Boolean isValidDate(String test) {"},{"lineNumber":40,"author":{"gitID":"shanwpf"},"content":"        try {"},{"lineNumber":41,"author":{"gitID":"shanwpf"},"content":"            LocalDate.parse(test, DateTimeFormatter.ofPattern(STRING_DATE_PATTERN));"},{"lineNumber":42,"author":{"gitID":"shanwpf"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":43,"author":{"gitID":"shanwpf"},"content":"            return false;"},{"lineNumber":44,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":45,"author":{"gitID":"shanwpf"},"content":"        return true;"},{"lineNumber":46,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":47,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":48,"author":{"gitID":"shanwpf"},"content":"    @Override"},{"lineNumber":49,"author":{"gitID":"shanwpf"},"content":"    public String toString() {"},{"lineNumber":50,"author":{"gitID":"shanwpf"},"content":"        return date.format(DateTimeFormatter.ofPattern(STRING_DATE_PATTERN));"},{"lineNumber":51,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":53,"author":{"gitID":"shanwpf"},"content":"    @Override"},{"lineNumber":54,"author":{"gitID":"shanwpf"},"content":"    public boolean equals(Object o) {"},{"lineNumber":55,"author":{"gitID":"shanwpf"},"content":"        if (this \u003d\u003d o) {"},{"lineNumber":56,"author":{"gitID":"shanwpf"},"content":"            return true;"},{"lineNumber":57,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":58,"author":{"gitID":"shanwpf"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"},{"lineNumber":59,"author":{"gitID":"shanwpf"},"content":"            return false;"},{"lineNumber":60,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":61,"author":{"gitID":"shanwpf"},"content":"        Date date1 \u003d (Date) o;"},{"lineNumber":62,"author":{"gitID":"shanwpf"},"content":"        return Objects.equals(date, date1.date);"},{"lineNumber":63,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":65,"author":{"gitID":"shanwpf"},"content":"    @Override"},{"lineNumber":66,"author":{"gitID":"shanwpf"},"content":"    public int hashCode() {"},{"lineNumber":67,"author":{"gitID":"shanwpf"},"content":"        return date.hashCode();"},{"lineNumber":68,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":69,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":70,"author":{"gitID":"shanwpf"},"content":"    public int compareTo(Date startDate) {"},{"lineNumber":71,"author":{"gitID":"shanwpf"},"content":"        return date.compareTo(startDate.getLocalDate());"},{"lineNumber":72,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":74,"author":{"gitID":"shanwpf"},"content":"    public LocalDate getLocalDate() {"},{"lineNumber":75,"author":{"gitID":"shanwpf"},"content":"        return date;"},{"lineNumber":76,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":77,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":78,"author":{"gitID":"shanwpf"},"content":"    public boolean isOver() {"},{"lineNumber":79,"author":{"gitID":"shanwpf"},"content":"        return date.isBefore(LocalDate.now());"},{"lineNumber":80,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":81,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":82,"author":{"gitID":"shanwpf"},"content":"    public boolean isCurrentDate() {"},{"lineNumber":83,"author":{"gitID":"shanwpf"},"content":"        return date.isEqual(LocalDate.now());"},{"lineNumber":84,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":85,"author":{"gitID":"shanwpf"},"content":"}"}],"authorContributionMap":{"shanwpf":75,"-":10}},{"path":"src/main/java/seedu/ptman/model/outlet/OutletContact.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.model.outlet;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.util.AppUtil.checkArgument;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":7,"author":{"gitID":"SunBangjie"},"content":"/**"},{"lineNumber":8,"author":{"gitID":"SunBangjie"},"content":" * Represents an outlet\u0027s contact number in PTMan."},{"lineNumber":9,"author":{"gitID":"SunBangjie"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidOutletContact(String)}"},{"lineNumber":10,"author":{"gitID":"SunBangjie"},"content":" */"},{"lineNumber":11,"author":{"gitID":"SunBangjie"},"content":"public class OutletContact {"},{"lineNumber":12,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":13,"author":{"gitID":"SunBangjie"},"content":"    public static final String MESSAGE_OUTLET_CONTACT_CONSTRAINTS \u003d"},{"lineNumber":14,"author":{"gitID":"SunBangjie"},"content":"            \"Outlet contact numbers can only contain numbers, and should be at least 3 digits long\";"},{"lineNumber":15,"author":{"gitID":"SunBangjie"},"content":"    public static final String OUTLET_CONTACT_VALIDATION_REGEX \u003d \"\\\\d{3,}\";"},{"lineNumber":16,"author":{"gitID":"SunBangjie"},"content":"    public final String value;"},{"lineNumber":17,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":18,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":19,"author":{"gitID":"SunBangjie"},"content":"     * Constructs a {@code OutletContact}."},{"lineNumber":20,"author":{"gitID":"SunBangjie"},"content":"     *"},{"lineNumber":21,"author":{"gitID":"SunBangjie"},"content":"     * @param phone A valid phone number."},{"lineNumber":22,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":23,"author":{"gitID":"SunBangjie"},"content":"    public OutletContact(String phone) {"},{"lineNumber":24,"author":{"gitID":"SunBangjie"},"content":"        requireNonNull(phone);"},{"lineNumber":25,"author":{"gitID":"SunBangjie"},"content":"        checkArgument(isValidOutletContact(phone), MESSAGE_OUTLET_CONTACT_CONSTRAINTS);"},{"lineNumber":26,"author":{"gitID":"SunBangjie"},"content":"        this.value \u003d phone;"},{"lineNumber":27,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":28,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":29,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":30,"author":{"gitID":"SunBangjie"},"content":"     * Returns true if a given string is a valid employee phone number."},{"lineNumber":31,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":32,"author":{"gitID":"SunBangjie"},"content":"    public static boolean isValidOutletContact(String test) {"},{"lineNumber":33,"author":{"gitID":"SunBangjie"},"content":"        return test.matches(OUTLET_CONTACT_VALIDATION_REGEX);"},{"lineNumber":34,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":36,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":37,"author":{"gitID":"SunBangjie"},"content":"    public String toString() {"},{"lineNumber":38,"author":{"gitID":"SunBangjie"},"content":"        return value;"},{"lineNumber":39,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":41,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":42,"author":{"gitID":"SunBangjie"},"content":"    public boolean equals(Object other) {"},{"lineNumber":43,"author":{"gitID":"SunBangjie"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":44,"author":{"gitID":"SunBangjie"},"content":"                || (other instanceof OutletContact // instanceof handles nulls"},{"lineNumber":45,"author":{"gitID":"SunBangjie"},"content":"                \u0026\u0026 this.value.equals(((OutletContact) other).value)); // state check"},{"lineNumber":46,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":47,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":48,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":49,"author":{"gitID":"SunBangjie"},"content":"    public int hashCode() {"},{"lineNumber":50,"author":{"gitID":"SunBangjie"},"content":"        return value.hashCode();"},{"lineNumber":51,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":5,"SunBangjie":47}},{"path":"src/main/java/seedu/ptman/model/shift/UniqueShiftList.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.model.shift;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.util.CollectionUtil.requireAllNonNull;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Iterator;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.util.CollectionUtil;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.exceptions.DuplicateShiftException;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.exceptions.ShiftNotFoundException;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"shanwpf"},"content":"//@@author shanwpf"},{"lineNumber":16,"author":{"gitID":"shanwpf"},"content":"/**"},{"lineNumber":17,"author":{"gitID":"shanwpf"},"content":" * A list of shifts that enforces uniqueness between its elements and does not allow nulls."},{"lineNumber":18,"author":{"gitID":"shanwpf"},"content":" *"},{"lineNumber":19,"author":{"gitID":"shanwpf"},"content":" * Supports a minimal set of list operations."},{"lineNumber":20,"author":{"gitID":"shanwpf"},"content":" *"},{"lineNumber":21,"author":{"gitID":"shanwpf"},"content":" * @see Shift#equals(Object)"},{"lineNumber":22,"author":{"gitID":"shanwpf"},"content":" * @see CollectionUtil#elementsAreUnique(Collection)"},{"lineNumber":23,"author":{"gitID":"shanwpf"},"content":" */"},{"lineNumber":24,"author":{"gitID":"shanwpf"},"content":"public class UniqueShiftList implements Iterable\u003cShift\u003e {"},{"lineNumber":25,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":26,"author":{"gitID":"shanwpf"},"content":"    private final ObservableList\u003cShift\u003e internalList \u003d FXCollections.observableArrayList();"},{"lineNumber":27,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":28,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":29,"author":{"gitID":"shanwpf"},"content":"     * Returns true if the list contains an equivalent shift as the given argument."},{"lineNumber":30,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":31,"author":{"gitID":"shanwpf"},"content":"    public boolean contains(Shift toCheck) {"},{"lineNumber":32,"author":{"gitID":"shanwpf"},"content":"        requireNonNull(toCheck);"},{"lineNumber":33,"author":{"gitID":"shanwpf"},"content":"        return internalList.contains(toCheck);"},{"lineNumber":34,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":36,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":37,"author":{"gitID":"shanwpf"},"content":"     * Adds a shift to the list."},{"lineNumber":38,"author":{"gitID":"shanwpf"},"content":"     *"},{"lineNumber":39,"author":{"gitID":"shanwpf"},"content":"     * @throws DuplicateShiftException if the shift to add is a duplicate of an existing shift in the list."},{"lineNumber":40,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":41,"author":{"gitID":"shanwpf"},"content":"    public void add(Shift toAdd) throws DuplicateShiftException {"},{"lineNumber":42,"author":{"gitID":"shanwpf"},"content":"        requireNonNull(toAdd);"},{"lineNumber":43,"author":{"gitID":"shanwpf"},"content":"        if (contains(toAdd)) {"},{"lineNumber":44,"author":{"gitID":"shanwpf"},"content":"            throw new DuplicateShiftException();"},{"lineNumber":45,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":46,"author":{"gitID":"shanwpf"},"content":"        internalList.add(toAdd);"},{"lineNumber":47,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":48,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":49,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":50,"author":{"gitID":"shanwpf"},"content":"     * Replaces the shift {@code target} in the list with {@code editedShift}."},{"lineNumber":51,"author":{"gitID":"shanwpf"},"content":"     *"},{"lineNumber":52,"author":{"gitID":"shanwpf"},"content":"     * @throws DuplicateShiftException if the replacement is equivalent to another existing shift in the list."},{"lineNumber":53,"author":{"gitID":"shanwpf"},"content":"     * @throws ShiftNotFoundException if {@code target} could not be found in the list."},{"lineNumber":54,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":55,"author":{"gitID":"shanwpf"},"content":"    public void setShift(Shift target, Shift editedShift)"},{"lineNumber":56,"author":{"gitID":"shanwpf"},"content":"            throws DuplicateShiftException, ShiftNotFoundException {"},{"lineNumber":57,"author":{"gitID":"shanwpf"},"content":"        requireNonNull(editedShift);"},{"lineNumber":58,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":59,"author":{"gitID":"shanwpf"},"content":"        int index \u003d internalList.indexOf(target);"},{"lineNumber":60,"author":{"gitID":"shanwpf"},"content":"        if (index \u003d\u003d -1) {"},{"lineNumber":61,"author":{"gitID":"shanwpf"},"content":"            throw new ShiftNotFoundException();"},{"lineNumber":62,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":63,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":64,"author":{"gitID":"shanwpf"},"content":"        if (!target.equals(editedShift) \u0026\u0026 internalList.contains(editedShift)) {"},{"lineNumber":65,"author":{"gitID":"shanwpf"},"content":"            throw new DuplicateShiftException();"},{"lineNumber":66,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":67,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":68,"author":{"gitID":"shanwpf"},"content":"        internalList.set(index, editedShift);"},{"lineNumber":69,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":70,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":71,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":72,"author":{"gitID":"shanwpf"},"content":"     * Removes the equivalent shift from the list."},{"lineNumber":73,"author":{"gitID":"shanwpf"},"content":"     *"},{"lineNumber":74,"author":{"gitID":"shanwpf"},"content":"     * @throws ShiftNotFoundException if no such shift could be found in the list."},{"lineNumber":75,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":76,"author":{"gitID":"shanwpf"},"content":"    public boolean remove(Shift toRemove) throws ShiftNotFoundException {"},{"lineNumber":77,"author":{"gitID":"shanwpf"},"content":"        requireNonNull(toRemove);"},{"lineNumber":78,"author":{"gitID":"shanwpf"},"content":"        final boolean shiftFoundAndDeleted \u003d internalList.remove(toRemove);"},{"lineNumber":79,"author":{"gitID":"shanwpf"},"content":"        if (!shiftFoundAndDeleted) {"},{"lineNumber":80,"author":{"gitID":"shanwpf"},"content":"            throw new ShiftNotFoundException();"},{"lineNumber":81,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":82,"author":{"gitID":"shanwpf"},"content":"        return shiftFoundAndDeleted;"},{"lineNumber":83,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":84,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":85,"author":{"gitID":"shanwpf"},"content":"    public void setShifts(UniqueShiftList replacement) {"},{"lineNumber":86,"author":{"gitID":"shanwpf"},"content":"        this.internalList.setAll(replacement.internalList);"},{"lineNumber":87,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":88,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":89,"author":{"gitID":"shanwpf"},"content":"    public void setShifts(List\u003cShift\u003e shifts) throws DuplicateShiftException {"},{"lineNumber":90,"author":{"gitID":"shanwpf"},"content":"        requireAllNonNull(shifts);"},{"lineNumber":91,"author":{"gitID":"shanwpf"},"content":"        final UniqueShiftList replacement \u003d new UniqueShiftList();"},{"lineNumber":92,"author":{"gitID":"shanwpf"},"content":"        for (final Shift shift : shifts) {"},{"lineNumber":93,"author":{"gitID":"shanwpf"},"content":"            replacement.add(shift);"},{"lineNumber":94,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":95,"author":{"gitID":"shanwpf"},"content":"        setShifts(replacement);"},{"lineNumber":96,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":97,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":98,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":99,"author":{"gitID":"shanwpf"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}."},{"lineNumber":100,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":101,"author":{"gitID":"shanwpf"},"content":"    public ObservableList\u003cShift\u003e asObservableList() {"},{"lineNumber":102,"author":{"gitID":"shanwpf"},"content":"        return FXCollections.unmodifiableObservableList(internalList);"},{"lineNumber":103,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":104,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":105,"author":{"gitID":"shanwpf"},"content":"    @Override"},{"lineNumber":106,"author":{"gitID":"shanwpf"},"content":"    public Iterator\u003cShift\u003e iterator() {"},{"lineNumber":107,"author":{"gitID":"shanwpf"},"content":"        return internalList.iterator();"},{"lineNumber":108,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":109,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":110,"author":{"gitID":"shanwpf"},"content":"    @Override"},{"lineNumber":111,"author":{"gitID":"shanwpf"},"content":"    public boolean equals(Object other) {"},{"lineNumber":112,"author":{"gitID":"shanwpf"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":113,"author":{"gitID":"shanwpf"},"content":"                || (other instanceof UniqueShiftList // instanceof handles nulls"},{"lineNumber":114,"author":{"gitID":"shanwpf"},"content":"                        \u0026\u0026 this.internalList.equals(((UniqueShiftList) other).internalList));"},{"lineNumber":115,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":116,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":117,"author":{"gitID":"shanwpf"},"content":"    @Override"},{"lineNumber":118,"author":{"gitID":"shanwpf"},"content":"    public int hashCode() {"},{"lineNumber":119,"author":{"gitID":"shanwpf"},"content":"        return internalList.hashCode();"},{"lineNumber":120,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":121,"author":{"gitID":"shanwpf"},"content":"}"}],"authorContributionMap":{"shanwpf":107,"-":14}},{"path":"src/main/java/seedu/ptman/model/outlet/exceptions/NoOutletInformationFieldChangeException.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.model.outlet.exceptions;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":4,"author":{"gitID":"SunBangjie"},"content":"/**"},{"lineNumber":5,"author":{"gitID":"SunBangjie"},"content":" * Signals that the set outlet information operation has all null fields"},{"lineNumber":6,"author":{"gitID":"SunBangjie"},"content":" */"},{"lineNumber":7,"author":{"gitID":"SunBangjie"},"content":"public class NoOutletInformationFieldChangeException extends Exception {"},{"lineNumber":8,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":2,"SunBangjie":6}},{"path":"src/main/java/seedu/ptman/model/outlet/OperatingHours.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.model.outlet;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.util.AppUtil.checkArgument;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.time.LocalTime;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":12,"author":{"gitID":"SunBangjie"},"content":"/**"},{"lineNumber":13,"author":{"gitID":"SunBangjie"},"content":" * Represents operating hours in an outlet."},{"lineNumber":14,"author":{"gitID":"SunBangjie"},"content":" * Guarantees: details are present and not null, field values are validated, immutable."},{"lineNumber":15,"author":{"gitID":"SunBangjie"},"content":" */"},{"lineNumber":16,"author":{"gitID":"SunBangjie"},"content":"public class OperatingHours {"},{"lineNumber":17,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":18,"author":{"gitID":"SunBangjie"},"content":"    public static final String MESSAGE_OPERATING_HOUR_CONSTRAINTS \u003d"},{"lineNumber":19,"author":{"gitID":"SunBangjie"},"content":"            \"Operating hours must be in the format of START-END where START and END must be in \""},{"lineNumber":20,"author":{"gitID":"SunBangjie"},"content":"                    + \"the format of HHMM and in terms of 24 hours. For example, 0900-2200\";"},{"lineNumber":21,"author":{"gitID":"SunBangjie"},"content":"    public static final String MESSAGE_START_END_TIME_CONSTRAINTS \u003d \"START time must be before END time.\";"},{"lineNumber":22,"author":{"gitID":"SunBangjie"},"content":"    public static final String OPERATING_HOUR_VALIDATION_REGEX \u003d \"\\\\d{4}\" + \"-\" + \"\\\\d{4}\";"},{"lineNumber":23,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":24,"author":{"gitID":"SunBangjie"},"content":"    public final String value;"},{"lineNumber":25,"author":{"gitID":"SunBangjie"},"content":"    private final LocalTime startTime;"},{"lineNumber":26,"author":{"gitID":"SunBangjie"},"content":"    private final LocalTime endTime;"},{"lineNumber":27,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":28,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":29,"author":{"gitID":"SunBangjie"},"content":"     * Constructs an {@code OperatingHours}."},{"lineNumber":30,"author":{"gitID":"SunBangjie"},"content":"     *"},{"lineNumber":31,"author":{"gitID":"SunBangjie"},"content":"     * @param operatingHours A valid string of operating hours."},{"lineNumber":32,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":33,"author":{"gitID":"SunBangjie"},"content":"    public OperatingHours(String operatingHours) {"},{"lineNumber":34,"author":{"gitID":"SunBangjie"},"content":"        requireNonNull(operatingHours);"},{"lineNumber":35,"author":{"gitID":"SunBangjie"},"content":"        checkArgument(isValidOperatingHours(operatingHours), MESSAGE_OPERATING_HOUR_CONSTRAINTS);"},{"lineNumber":36,"author":{"gitID":"SunBangjie"},"content":"        checkArgument(isValidStartTimeEndTimeOrder(operatingHours), MESSAGE_START_END_TIME_CONSTRAINTS);"},{"lineNumber":37,"author":{"gitID":"SunBangjie"},"content":"        String[] splitedTime \u003d operatingHours.split(\"-\");"},{"lineNumber":38,"author":{"gitID":"SunBangjie"},"content":"        this.startTime \u003d convertStringToLocalTime(splitedTime[0]);"},{"lineNumber":39,"author":{"gitID":"SunBangjie"},"content":"        this.endTime \u003d convertStringToLocalTime(splitedTime[1]);"},{"lineNumber":40,"author":{"gitID":"SunBangjie"},"content":"        this.value \u003d operatingHours;"},{"lineNumber":41,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":42,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":43,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":44,"author":{"gitID":"SunBangjie"},"content":"     * Converts a valid string of time to Local Time"},{"lineNumber":45,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":46,"author":{"gitID":"SunBangjie"},"content":"    public static LocalTime convertStringToLocalTime(String time) {"},{"lineNumber":47,"author":{"gitID":"SunBangjie"},"content":"        String hourString \u003d time.substring(0, 2);"},{"lineNumber":48,"author":{"gitID":"SunBangjie"},"content":"        String minuteString \u003d time.substring(2);"},{"lineNumber":49,"author":{"gitID":"SunBangjie"},"content":"        int hour \u003d Integer.parseInt(hourString);"},{"lineNumber":50,"author":{"gitID":"SunBangjie"},"content":"        int minute \u003d Integer.parseInt(minuteString);"},{"lineNumber":51,"author":{"gitID":"SunBangjie"},"content":"        return LocalTime.of(hour, minute);"},{"lineNumber":52,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":53,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":54,"author":{"gitID":"SunBangjie"},"content":"    public LocalTime getStartTime() {"},{"lineNumber":55,"author":{"gitID":"SunBangjie"},"content":"        return startTime;"},{"lineNumber":56,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":58,"author":{"gitID":"SunBangjie"},"content":"    public LocalTime getEndTime() {"},{"lineNumber":59,"author":{"gitID":"SunBangjie"},"content":"        return endTime;"},{"lineNumber":60,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":61,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":62,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":63,"author":{"gitID":"SunBangjie"},"content":"     * Returns true if a given string is a valid operating hours of an outlet."},{"lineNumber":64,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":65,"author":{"gitID":"SunBangjie"},"content":"    public static boolean isValidOperatingHours(String test) {"},{"lineNumber":66,"author":{"gitID":"SunBangjie"},"content":"        if (!test.matches(OPERATING_HOUR_VALIDATION_REGEX)) {"},{"lineNumber":67,"author":{"gitID":"SunBangjie"},"content":"            return false;"},{"lineNumber":68,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":69,"author":{"gitID":"SunBangjie"},"content":"        String[] splitedTime \u003d test.split(\"-\");"},{"lineNumber":70,"author":{"gitID":"SunBangjie"},"content":"        try {"},{"lineNumber":71,"author":{"gitID":"SunBangjie"},"content":"            LocalTime.parse(splitedTime[0], DateTimeFormatter.ofPattern(\"HHmm\"));"},{"lineNumber":72,"author":{"gitID":"SunBangjie"},"content":"            LocalTime.parse(splitedTime[1], DateTimeFormatter.ofPattern(\"HHmm\"));"},{"lineNumber":73,"author":{"gitID":"SunBangjie"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":74,"author":{"gitID":"SunBangjie"},"content":"            return false;"},{"lineNumber":75,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":76,"author":{"gitID":"SunBangjie"},"content":"        return true;"},{"lineNumber":77,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":78,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":79,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":80,"author":{"gitID":"SunBangjie"},"content":"     * Returns true if a given string has start time before end time."},{"lineNumber":81,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":82,"author":{"gitID":"SunBangjie"},"content":"    public static boolean isValidStartTimeEndTimeOrder(String operatingHours) {"},{"lineNumber":83,"author":{"gitID":"SunBangjie"},"content":"        String[] splitedTime \u003d operatingHours.split(\"-\");"},{"lineNumber":84,"author":{"gitID":"SunBangjie"},"content":"        LocalTime startTime \u003d convertStringToLocalTime(splitedTime[0]);"},{"lineNumber":85,"author":{"gitID":"SunBangjie"},"content":"        LocalTime endTime \u003d convertStringToLocalTime(splitedTime[1]);"},{"lineNumber":86,"author":{"gitID":"SunBangjie"},"content":"        return startTime.isBefore(endTime);"},{"lineNumber":87,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":88,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":89,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":90,"author":{"gitID":"SunBangjie"},"content":"    public String toString() {"},{"lineNumber":91,"author":{"gitID":"SunBangjie"},"content":"        return value;"},{"lineNumber":92,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":93,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":94,"author":{"gitID":"SunBangjie"},"content":"    public String getDisplayedMessage() {"},{"lineNumber":95,"author":{"gitID":"SunBangjie"},"content":"        final StringBuilder builder \u003d new StringBuilder();"},{"lineNumber":96,"author":{"gitID":"SunBangjie"},"content":"        builder.append(getStartTime())"},{"lineNumber":97,"author":{"gitID":"SunBangjie"},"content":"                .append(\"-\")"},{"lineNumber":98,"author":{"gitID":"SunBangjie"},"content":"                .append(getEndTime());"},{"lineNumber":99,"author":{"gitID":"SunBangjie"},"content":"        return builder.toString();"},{"lineNumber":100,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":101,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":102,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":103,"author":{"gitID":"SunBangjie"},"content":"    public boolean equals(Object other) {"},{"lineNumber":104,"author":{"gitID":"SunBangjie"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":105,"author":{"gitID":"SunBangjie"},"content":"                || (other instanceof OperatingHours // instanceof handles nulls"},{"lineNumber":106,"author":{"gitID":"SunBangjie"},"content":"                \u0026\u0026 this.startTime.equals(((OperatingHours) other).startTime)"},{"lineNumber":107,"author":{"gitID":"SunBangjie"},"content":"                \u0026\u0026 this.endTime.equals(((OperatingHours) other).endTime)); // state check"},{"lineNumber":108,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":109,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":110,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":111,"author":{"gitID":"SunBangjie"},"content":"    public int hashCode() {"},{"lineNumber":112,"author":{"gitID":"SunBangjie"},"content":"        return Objects.hash(startTime, endTime);"},{"lineNumber":113,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":114,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":115,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":10,"SunBangjie":105}},{"path":"src/main/java/seedu/ptman/model/outlet/Announcement.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.model.outlet;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":6,"author":{"gitID":"SunBangjie"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"SunBangjie"},"content":" * Represents an announcement in PTMan."},{"lineNumber":8,"author":{"gitID":"SunBangjie"},"content":" * Guarantees: immutable;"},{"lineNumber":9,"author":{"gitID":"SunBangjie"},"content":" */"},{"lineNumber":10,"author":{"gitID":"SunBangjie"},"content":"public class Announcement {"},{"lineNumber":11,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":12,"author":{"gitID":"SunBangjie"},"content":"    public final String value;"},{"lineNumber":13,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":14,"author":{"gitID":"SunBangjie"},"content":"    public Announcement(String announcement) {"},{"lineNumber":15,"author":{"gitID":"SunBangjie"},"content":"        requireNonNull(announcement);"},{"lineNumber":16,"author":{"gitID":"SunBangjie"},"content":"        this.value \u003d announcement;"},{"lineNumber":17,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":18,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":19,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":20,"author":{"gitID":"SunBangjie"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitID":"SunBangjie"},"content":"        return value;"},{"lineNumber":22,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":23,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":24,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":25,"author":{"gitID":"SunBangjie"},"content":"    public boolean equals(Object other) {"},{"lineNumber":26,"author":{"gitID":"SunBangjie"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":27,"author":{"gitID":"SunBangjie"},"content":"                || (other instanceof Announcement // instanceof handles nulls"},{"lineNumber":28,"author":{"gitID":"SunBangjie"},"content":"                \u0026\u0026 this.value.equals(((Announcement) other).value)); // state check"},{"lineNumber":29,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":30,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":31,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":32,"author":{"gitID":"SunBangjie"},"content":"    public int hashCode() {"},{"lineNumber":33,"author":{"gitID":"SunBangjie"},"content":"        return value.hashCode();"},{"lineNumber":34,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":4,"SunBangjie":31}},{"path":"src/main/java/seedu/ptman/model/outlet/OutletInformation.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.model.outlet;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.util.CollectionUtil.requireAllNonNull;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.ptman.model.Password;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.exceptions.NoOutletInformationFieldChangeException;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":12,"author":{"gitID":"SunBangjie"},"content":"/**"},{"lineNumber":13,"author":{"gitID":"SunBangjie"},"content":" * Represents an outlet in PTMan."},{"lineNumber":14,"author":{"gitID":"SunBangjie"},"content":" * Guarantees: details are present and not null, field values are validated, immutable."},{"lineNumber":15,"author":{"gitID":"SunBangjie"},"content":" */"},{"lineNumber":16,"author":{"gitID":"SunBangjie"},"content":"public class OutletInformation {"},{"lineNumber":17,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":18,"author":{"gitID":"SunBangjie"},"content":"    public static final String DEFAULT_OUTLET_NAME \u003d \"DefaultOutlet\";"},{"lineNumber":19,"author":{"gitID":"SunBangjie"},"content":"    public static final String DEFAULT_OPERATING_HOURS \u003d \"0900-2200\";"},{"lineNumber":20,"author":{"gitID":"SunBangjie"},"content":"    public static final String DEFAULT_OUTLET_CONTACT \u003d \"91234567\";"},{"lineNumber":21,"author":{"gitID":"SunBangjie"},"content":"    public static final String DEFAULT_OUTLET_EMAIL \u003d \"DefaultOutlet@gmail.com\";"},{"lineNumber":22,"author":{"gitID":"SunBangjie"},"content":"    public static final String DEFAULT_ANNOUNCEMENT_MESSAGE \u003d \"No announcement. \""},{"lineNumber":23,"author":{"gitID":"SunBangjie"},"content":"            + \"Please add new announcement with announcement command.\";"},{"lineNumber":24,"author":{"gitID":"SunBangjie"},"content":"    public static final String DATA_ENCRYPTED_MESSAGE \u003d \"Local storage files are encrypted.\";"},{"lineNumber":25,"author":{"gitID":"SunBangjie"},"content":"    public static final String DATA_NOT_ENCRYPTED_MESSAGE \u003d"},{"lineNumber":26,"author":{"gitID":"SunBangjie"},"content":"            \"Local storage files are not encrypted.\";"},{"lineNumber":27,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":28,"author":{"gitID":"SunBangjie"},"content":"    private OutletName name;"},{"lineNumber":29,"author":{"gitID":"SunBangjie"},"content":"    private Password masterPassword;"},{"lineNumber":30,"author":{"gitID":"SunBangjie"},"content":"    private OperatingHours operatingHours;"},{"lineNumber":31,"author":{"gitID":"SunBangjie"},"content":"    private OutletContact outletContact;"},{"lineNumber":32,"author":{"gitID":"SunBangjie"},"content":"    private OutletEmail outletEmail;"},{"lineNumber":33,"author":{"gitID":"SunBangjie"},"content":"    private Announcement announcement;"},{"lineNumber":34,"author":{"gitID":"SunBangjie"},"content":"    private boolean isDataEncrypted;"},{"lineNumber":35,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":36,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":37,"author":{"gitID":"SunBangjie"},"content":"     * Constructs an {@code OutletInformation}."},{"lineNumber":38,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":39,"author":{"gitID":"SunBangjie"},"content":"    public OutletInformation(OutletName name, OperatingHours operatingHours, OutletContact outletContact,"},{"lineNumber":40,"author":{"gitID":"SunBangjie"},"content":"                             OutletEmail outletEmail, Announcement announcement, Password masterPassword,"},{"lineNumber":41,"author":{"gitID":"SunBangjie"},"content":"                             boolean isDataEncrypted) {"},{"lineNumber":42,"author":{"gitID":"SunBangjie"},"content":"        requireAllNonNull(name, operatingHours, outletContact, outletEmail, announcement, masterPassword,"},{"lineNumber":43,"author":{"gitID":"SunBangjie"},"content":"                isDataEncrypted);"},{"lineNumber":44,"author":{"gitID":"SunBangjie"},"content":"        this.name \u003d name;"},{"lineNumber":45,"author":{"gitID":"SunBangjie"},"content":"        this.operatingHours \u003d operatingHours;"},{"lineNumber":46,"author":{"gitID":"SunBangjie"},"content":"        this.outletContact \u003d outletContact;"},{"lineNumber":47,"author":{"gitID":"SunBangjie"},"content":"        this.outletEmail \u003d outletEmail;"},{"lineNumber":48,"author":{"gitID":"SunBangjie"},"content":"        this.announcement \u003d announcement;"},{"lineNumber":49,"author":{"gitID":"SunBangjie"},"content":"        this.masterPassword \u003d masterPassword;"},{"lineNumber":50,"author":{"gitID":"SunBangjie"},"content":"        this.isDataEncrypted \u003d isDataEncrypted;"},{"lineNumber":51,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":53,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":54,"author":{"gitID":"SunBangjie"},"content":"     * Constructs a new {@code OutletInformation} from source outlet."},{"lineNumber":55,"author":{"gitID":"SunBangjie"},"content":"     * @param outlet source outlet"},{"lineNumber":56,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":57,"author":{"gitID":"SunBangjie"},"content":"    public OutletInformation(OutletInformation outlet) {"},{"lineNumber":58,"author":{"gitID":"SunBangjie"},"content":"        this.name \u003d new OutletName(outlet.getName().toString());"},{"lineNumber":59,"author":{"gitID":"SunBangjie"},"content":"        this.masterPassword \u003d new Password(outlet.getMasterPassword());"},{"lineNumber":60,"author":{"gitID":"SunBangjie"},"content":"        this.outletContact \u003d new OutletContact(outlet.getOutletContact().toString());"},{"lineNumber":61,"author":{"gitID":"SunBangjie"},"content":"        this.operatingHours \u003d new OperatingHours(outlet.getOperatingHours().toString());"},{"lineNumber":62,"author":{"gitID":"SunBangjie"},"content":"        this.outletEmail \u003d new OutletEmail(outlet.getOutletEmail().toString());"},{"lineNumber":63,"author":{"gitID":"SunBangjie"},"content":"        this.announcement \u003d new Announcement(outlet.getAnnouncement().toString());"},{"lineNumber":64,"author":{"gitID":"SunBangjie"},"content":"        this.isDataEncrypted \u003d outlet.getEncryptionMode();"},{"lineNumber":65,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":66,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":67,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":68,"author":{"gitID":"SunBangjie"},"content":"     * Default constructor with default values"},{"lineNumber":69,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":70,"author":{"gitID":"SunBangjie"},"content":"    public OutletInformation() {"},{"lineNumber":71,"author":{"gitID":"SunBangjie"},"content":"        this.name \u003d new OutletName(DEFAULT_OUTLET_NAME);"},{"lineNumber":72,"author":{"gitID":"SunBangjie"},"content":"        this.masterPassword \u003d new Password();"},{"lineNumber":73,"author":{"gitID":"SunBangjie"},"content":"        this.operatingHours \u003d new OperatingHours(DEFAULT_OPERATING_HOURS);"},{"lineNumber":74,"author":{"gitID":"SunBangjie"},"content":"        this.outletContact \u003d new OutletContact(DEFAULT_OUTLET_CONTACT);"},{"lineNumber":75,"author":{"gitID":"SunBangjie"},"content":"        this.outletEmail \u003d new OutletEmail(DEFAULT_OUTLET_EMAIL);"},{"lineNumber":76,"author":{"gitID":"SunBangjie"},"content":"        this.announcement \u003d new Announcement(DEFAULT_ANNOUNCEMENT_MESSAGE);"},{"lineNumber":77,"author":{"gitID":"SunBangjie"},"content":"        this.isDataEncrypted \u003d false;"},{"lineNumber":78,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":79,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":80,"author":{"gitID":"SunBangjie"},"content":"    public OutletName getName() {"},{"lineNumber":81,"author":{"gitID":"SunBangjie"},"content":"        return name;"},{"lineNumber":82,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":83,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":84,"author":{"gitID":"SunBangjie"},"content":"    public Password getMasterPassword() {"},{"lineNumber":85,"author":{"gitID":"SunBangjie"},"content":"        return masterPassword;"},{"lineNumber":86,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":87,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":88,"author":{"gitID":"SunBangjie"},"content":"    public OperatingHours getOperatingHours() {"},{"lineNumber":89,"author":{"gitID":"SunBangjie"},"content":"        return operatingHours;"},{"lineNumber":90,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":91,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":92,"author":{"gitID":"SunBangjie"},"content":"    public OutletContact getOutletContact() {"},{"lineNumber":93,"author":{"gitID":"SunBangjie"},"content":"        return outletContact;"},{"lineNumber":94,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":95,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":96,"author":{"gitID":"SunBangjie"},"content":"    public OutletEmail getOutletEmail() {"},{"lineNumber":97,"author":{"gitID":"SunBangjie"},"content":"        return outletEmail;"},{"lineNumber":98,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":99,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":100,"author":{"gitID":"SunBangjie"},"content":"    public Announcement getAnnouncement() {"},{"lineNumber":101,"author":{"gitID":"SunBangjie"},"content":"        return announcement;"},{"lineNumber":102,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":103,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":104,"author":{"gitID":"SunBangjie"},"content":"    public boolean getEncryptionMode() {"},{"lineNumber":105,"author":{"gitID":"SunBangjie"},"content":"        return isDataEncrypted;"},{"lineNumber":106,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":107,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":108,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":109,"author":{"gitID":"SunBangjie"},"content":"     * Sets the outlet password."},{"lineNumber":110,"author":{"gitID":"SunBangjie"},"content":"     * only set after checking against outlet password."},{"lineNumber":111,"author":{"gitID":"SunBangjie"},"content":"     * @param password"},{"lineNumber":112,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":113,"author":{"gitID":"SunBangjie"},"content":"    public void setOutletPassword (Password password) {"},{"lineNumber":114,"author":{"gitID":"SunBangjie"},"content":"        requireNonNull(password);"},{"lineNumber":115,"author":{"gitID":"SunBangjie"},"content":"        this.masterPassword \u003d password;"},{"lineNumber":116,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":117,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":118,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":119,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":120,"author":{"gitID":"SunBangjie"},"content":"     * Sets the outlet information attributes."},{"lineNumber":121,"author":{"gitID":"SunBangjie"},"content":"     * Some fields can be unspecified."},{"lineNumber":122,"author":{"gitID":"SunBangjie"},"content":"     * If all fields are unspecified, NoOutletInformationFieldChangeException will be thrown."},{"lineNumber":123,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":124,"author":{"gitID":"SunBangjie"},"content":"    public void setOutletInformation(OutletName name, OperatingHours operatingHours, OutletContact outletContact,"},{"lineNumber":125,"author":{"gitID":"SunBangjie"},"content":"                                     OutletEmail outletEmail)"},{"lineNumber":126,"author":{"gitID":"SunBangjie"},"content":"            throws NoOutletInformationFieldChangeException {"},{"lineNumber":127,"author":{"gitID":"SunBangjie"},"content":"        if (name \u003d\u003d null \u0026\u0026 operatingHours \u003d\u003d null \u0026\u0026 outletContact \u003d\u003d null \u0026\u0026 outletEmail \u003d\u003d null) {"},{"lineNumber":128,"author":{"gitID":"SunBangjie"},"content":"            throw new NoOutletInformationFieldChangeException();"},{"lineNumber":129,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":130,"author":{"gitID":"SunBangjie"},"content":"        if (name !\u003d null) {"},{"lineNumber":131,"author":{"gitID":"SunBangjie"},"content":"            this.name \u003d name;"},{"lineNumber":132,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":133,"author":{"gitID":"SunBangjie"},"content":"        if (operatingHours !\u003d null) {"},{"lineNumber":134,"author":{"gitID":"SunBangjie"},"content":"            this.operatingHours \u003d operatingHours;"},{"lineNumber":135,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":136,"author":{"gitID":"SunBangjie"},"content":"        if (outletContact !\u003d null) {"},{"lineNumber":137,"author":{"gitID":"SunBangjie"},"content":"            this.outletContact \u003d outletContact;"},{"lineNumber":138,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":139,"author":{"gitID":"SunBangjie"},"content":"        if (outletEmail !\u003d null) {"},{"lineNumber":140,"author":{"gitID":"SunBangjie"},"content":"            this.outletEmail \u003d outletEmail;"},{"lineNumber":141,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":142,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":143,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":144,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":145,"author":{"gitID":"SunBangjie"},"content":"     * sets outlet information from source outlet"},{"lineNumber":146,"author":{"gitID":"SunBangjie"},"content":"     * @param outlet source outlet"},{"lineNumber":147,"author":{"gitID":"SunBangjie"},"content":"     * @throws NoOutletInformationFieldChangeException"},{"lineNumber":148,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":149,"author":{"gitID":"SunBangjie"},"content":"    public void setOutletInformation(OutletInformation outlet) throws NoOutletInformationFieldChangeException {"},{"lineNumber":150,"author":{"gitID":"SunBangjie"},"content":"        try {"},{"lineNumber":151,"author":{"gitID":"SunBangjie"},"content":"            requireAllNonNull(outlet.getName(), outlet.getOperatingHours(), outlet.getMasterPassword(),"},{"lineNumber":152,"author":{"gitID":"SunBangjie"},"content":"                    outlet.getOutletEmail(), outlet.getOutletContact(), outlet.getAnnouncement(),"},{"lineNumber":153,"author":{"gitID":"SunBangjie"},"content":"                    outlet.getEncryptionMode());"},{"lineNumber":154,"author":{"gitID":"SunBangjie"},"content":"        } catch (NullPointerException e) {"},{"lineNumber":155,"author":{"gitID":"SunBangjie"},"content":"            throw new NoOutletInformationFieldChangeException();"},{"lineNumber":156,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":157,"author":{"gitID":"SunBangjie"},"content":"        this.name \u003d outlet.getName();"},{"lineNumber":158,"author":{"gitID":"SunBangjie"},"content":"        this.operatingHours \u003d outlet.getOperatingHours();"},{"lineNumber":159,"author":{"gitID":"SunBangjie"},"content":"        this.outletContact \u003d outlet.getOutletContact();"},{"lineNumber":160,"author":{"gitID":"SunBangjie"},"content":"        this.outletEmail \u003d outlet.getOutletEmail();"},{"lineNumber":161,"author":{"gitID":"SunBangjie"},"content":"        this.masterPassword \u003d outlet.getMasterPassword();"},{"lineNumber":162,"author":{"gitID":"SunBangjie"},"content":"        this.announcement \u003d outlet.getAnnouncement();"},{"lineNumber":163,"author":{"gitID":"SunBangjie"},"content":"        this.isDataEncrypted \u003d outlet.getEncryptionMode();"},{"lineNumber":164,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":165,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":166,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":167,"author":{"gitID":"SunBangjie"},"content":"     * Sets encryption mode"},{"lineNumber":168,"author":{"gitID":"SunBangjie"},"content":"     * @param isEncrypted"},{"lineNumber":169,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":170,"author":{"gitID":"SunBangjie"},"content":"    public void setEncryptionMode(boolean isEncrypted) {"},{"lineNumber":171,"author":{"gitID":"SunBangjie"},"content":"        this.isDataEncrypted \u003d isEncrypted;"},{"lineNumber":172,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":173,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":174,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":175,"author":{"gitID":"SunBangjie"},"content":"     * Sets outlet announcement"},{"lineNumber":176,"author":{"gitID":"SunBangjie"},"content":"     * @param announcement"},{"lineNumber":177,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":178,"author":{"gitID":"SunBangjie"},"content":"    public void setAnnouncement(Announcement announcement) {"},{"lineNumber":179,"author":{"gitID":"SunBangjie"},"content":"        this.announcement \u003d announcement;"},{"lineNumber":180,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":181,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":182,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":183,"author":{"gitID":"SunBangjie"},"content":"     * Gets encryption mode message"},{"lineNumber":184,"author":{"gitID":"SunBangjie"},"content":"     * @return message that decribes whether current local files are encrypted"},{"lineNumber":185,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":186,"author":{"gitID":"SunBangjie"},"content":"    public String getEncryptionModeMessage() {"},{"lineNumber":187,"author":{"gitID":"SunBangjie"},"content":"        if (isDataEncrypted) {"},{"lineNumber":188,"author":{"gitID":"SunBangjie"},"content":"            return DATA_ENCRYPTED_MESSAGE;"},{"lineNumber":189,"author":{"gitID":"SunBangjie"},"content":"        }"},{"lineNumber":190,"author":{"gitID":"SunBangjie"},"content":"        return DATA_NOT_ENCRYPTED_MESSAGE;"},{"lineNumber":191,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":192,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":193,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":194,"author":{"gitID":"SunBangjie"},"content":"    public boolean equals(Object other) {"},{"lineNumber":195,"author":{"gitID":"SunBangjie"},"content":"        return this \u003d\u003d other"},{"lineNumber":196,"author":{"gitID":"SunBangjie"},"content":"                || (other instanceof OutletInformation"},{"lineNumber":197,"author":{"gitID":"SunBangjie"},"content":"                \u0026\u0026 ((OutletInformation) other).getName().equals(this.getName())"},{"lineNumber":198,"author":{"gitID":"SunBangjie"},"content":"                \u0026\u0026 ((OutletInformation) other).getMasterPassword().equals(this.getMasterPassword())"},{"lineNumber":199,"author":{"gitID":"SunBangjie"},"content":"                \u0026\u0026 ((OutletInformation) other).getOperatingHours().equals(this.getOperatingHours())"},{"lineNumber":200,"author":{"gitID":"SunBangjie"},"content":"                \u0026\u0026 ((OutletInformation) other).getOutletContact().equals(this.getOutletContact())"},{"lineNumber":201,"author":{"gitID":"SunBangjie"},"content":"                \u0026\u0026 ((OutletInformation) other).getOutletEmail().equals(this.getOutletEmail())"},{"lineNumber":202,"author":{"gitID":"SunBangjie"},"content":"                \u0026\u0026 ((OutletInformation) other).getAnnouncement().equals(this.getAnnouncement())"},{"lineNumber":203,"author":{"gitID":"SunBangjie"},"content":"                \u0026\u0026 ((OutletInformation) other).getEncryptionMode() \u003d\u003d (this.getEncryptionMode()));"},{"lineNumber":204,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":205,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":206,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":207,"author":{"gitID":"SunBangjie"},"content":"    public int hashCode() {"},{"lineNumber":208,"author":{"gitID":"SunBangjie"},"content":"        // use this method for custom fields hashing instead of implementing your own"},{"lineNumber":209,"author":{"gitID":"SunBangjie"},"content":"        return Objects.hash(name, masterPassword, operatingHours, outletContact, outletEmail, announcement,"},{"lineNumber":210,"author":{"gitID":"SunBangjie"},"content":"                isDataEncrypted);"},{"lineNumber":211,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":212,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":213,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":214,"author":{"gitID":"SunBangjie"},"content":"    public String toString() {"},{"lineNumber":215,"author":{"gitID":"SunBangjie"},"content":"        final StringBuilder builder \u003d new StringBuilder();"},{"lineNumber":216,"author":{"gitID":"SunBangjie"},"content":"        builder.append(\"Outlet Name: \")"},{"lineNumber":217,"author":{"gitID":"SunBangjie"},"content":"                .append(getName())"},{"lineNumber":218,"author":{"gitID":"SunBangjie"},"content":"                .append(\" Operating Hours: \")"},{"lineNumber":219,"author":{"gitID":"SunBangjie"},"content":"                .append(getOperatingHours().getDisplayedMessage())"},{"lineNumber":220,"author":{"gitID":"SunBangjie"},"content":"                .append(\" Contact: \")"},{"lineNumber":221,"author":{"gitID":"SunBangjie"},"content":"                .append(getOutletContact())"},{"lineNumber":222,"author":{"gitID":"SunBangjie"},"content":"                .append(\" Email: \")"},{"lineNumber":223,"author":{"gitID":"SunBangjie"},"content":"                .append(getOutletEmail())"},{"lineNumber":224,"author":{"gitID":"SunBangjie"},"content":"                .append(\" Announcement: \")"},{"lineNumber":225,"author":{"gitID":"SunBangjie"},"content":"                .append(getAnnouncement())"},{"lineNumber":226,"author":{"gitID":"SunBangjie"},"content":"                .append(\" Encryption: \")"},{"lineNumber":227,"author":{"gitID":"SunBangjie"},"content":"                .append(getEncryptionModeMessage());"},{"lineNumber":228,"author":{"gitID":"SunBangjie"},"content":"        return builder.toString();"},{"lineNumber":229,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":230,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":10,"SunBangjie":220}},{"path":"src/main/java/seedu/ptman/model/PartTimeManager.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.model;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.HashMap;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.HashSet;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.util.Map;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import java.util.Set;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Employee;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.UniqueEmployeeList;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.exceptions.DuplicateEmployeeException;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.exceptions.EmployeeNotFoundException;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.exceptions.NoOutletInformationFieldChangeException;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Shift;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.UniqueShiftList;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.exceptions.DuplicateShiftException;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.exceptions.ShiftNotFoundException;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.ptman.model.tag.Tag;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import seedu.ptman.model.tag.UniqueTagList;"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":29,"author":{"gitID":"-"},"content":" * Wraps all data at the address-book level"},{"lineNumber":30,"author":{"gitID":"-"},"content":" * Duplicates are not allowed (by .equals comparison)"},{"lineNumber":31,"author":{"gitID":"-"},"content":" */"},{"lineNumber":32,"author":{"gitID":"-"},"content":"public class PartTimeManager implements ReadOnlyPartTimeManager {"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"    private static final boolean ENCRYPTED \u003d true;"},{"lineNumber":35,"author":{"gitID":"-"},"content":"    private static final boolean DECRYPTED \u003d false;"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"    private final UniqueEmployeeList employees;"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    private final UniqueShiftList shifts;"},{"lineNumber":39,"author":{"gitID":"-"},"content":"    private final UniqueTagList tags;"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    private final OutletInformation outlet;"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    private boolean isAdminMode;"},{"lineNumber":42,"author":{"gitID":"-"},"content":""},{"lineNumber":43,"author":{"gitID":"-"},"content":"    /*"},{"lineNumber":44,"author":{"gitID":"-"},"content":"     * The \u0027unusual\u0027 code block below is an non-static initialization block, sometimes used to avoid duplication"},{"lineNumber":45,"author":{"gitID":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html"},{"lineNumber":46,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":47,"author":{"gitID":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication"},{"lineNumber":48,"author":{"gitID":"-"},"content":"     *   among constructors."},{"lineNumber":49,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":50,"author":{"gitID":"-"},"content":"    {"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        employees \u003d new UniqueEmployeeList();"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        shifts \u003d new UniqueShiftList();"},{"lineNumber":53,"author":{"gitID":"-"},"content":"        tags \u003d new UniqueTagList();"},{"lineNumber":54,"author":{"gitID":"-"},"content":"        outlet \u003d new OutletInformation();"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        isAdminMode \u003d false;"},{"lineNumber":56,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"-"},"content":""},{"lineNumber":58,"author":{"gitID":"-"},"content":"    public PartTimeManager() {}"},{"lineNumber":59,"author":{"gitID":"-"},"content":""},{"lineNumber":60,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":61,"author":{"gitID":"-"},"content":"     * Creates an PartTimeManager using the Employees and Tags in the {@code toBeCopied}"},{"lineNumber":62,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":63,"author":{"gitID":"-"},"content":"    public PartTimeManager(ReadOnlyPartTimeManager toBeCopied) {"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        this();"},{"lineNumber":65,"author":{"gitID":"-"},"content":"        resetData(toBeCopied);"},{"lineNumber":66,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":67,"author":{"gitID":"-"},"content":""},{"lineNumber":68,"author":{"gitID":"koo1993"},"content":"    //@@author koo1993"},{"lineNumber":69,"author":{"gitID":"koo1993"},"content":"    //// authorization operations"},{"lineNumber":70,"author":{"gitID":"koo1993"},"content":"    public boolean isAdminMode() {"},{"lineNumber":71,"author":{"gitID":"koo1993"},"content":"        return this.isAdminMode;"},{"lineNumber":72,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":74,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":75,"author":{"gitID":"koo1993"},"content":"     * Check if given password is of outlet\u0027s"},{"lineNumber":76,"author":{"gitID":"koo1993"},"content":"     * @param password"},{"lineNumber":77,"author":{"gitID":"koo1993"},"content":"     * @return true if password is the same"},{"lineNumber":78,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":79,"author":{"gitID":"koo1993"},"content":"    public boolean isAdminPassword(Password password) {"},{"lineNumber":80,"author":{"gitID":"koo1993"},"content":"        return outlet.getMasterPassword().equals(password);"},{"lineNumber":81,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":82,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":83,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":84,"author":{"gitID":"koo1993"},"content":"     * set admin mode only after check against adminPassword"},{"lineNumber":85,"author":{"gitID":"koo1993"},"content":"     * @param isAdmin"},{"lineNumber":86,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":87,"author":{"gitID":"koo1993"},"content":"    public void setAdminMode(boolean isAdmin) {"},{"lineNumber":88,"author":{"gitID":"koo1993"},"content":"        isAdminMode \u003d isAdmin;"},{"lineNumber":89,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":90,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":91,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":92,"author":{"gitID":"koo1993"},"content":"     * set password for outlet"},{"lineNumber":93,"author":{"gitID":"koo1993"},"content":"     * @param password"},{"lineNumber":94,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":95,"author":{"gitID":"koo1993"},"content":"    public void setAdminPassword(Password password) {"},{"lineNumber":96,"author":{"gitID":"koo1993"},"content":"        outlet.setOutletPassword(password);"},{"lineNumber":97,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":98,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":99,"author":{"gitID":"koo1993"},"content":"    //@@author"},{"lineNumber":100,"author":{"gitID":"-"},"content":"    //// list overwrite operations"},{"lineNumber":101,"author":{"gitID":"-"},"content":""},{"lineNumber":102,"author":{"gitID":"-"},"content":"    public void setEmployees(List\u003cEmployee\u003e employees) throws DuplicateEmployeeException {"},{"lineNumber":103,"author":{"gitID":"-"},"content":"        this.employees.setEmployees(employees);"},{"lineNumber":104,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":105,"author":{"gitID":"-"},"content":""},{"lineNumber":106,"author":{"gitID":"SunBangjie"},"content":"    //@@author SunBangjie"},{"lineNumber":107,"author":{"gitID":"SunBangjie"},"content":"    public void setOutletInformation(OutletInformation outlet) throws NoOutletInformationFieldChangeException {"},{"lineNumber":108,"author":{"gitID":"SunBangjie"},"content":"        this.outlet.setOutletInformation(outlet);"},{"lineNumber":109,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":110,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":111,"author":{"gitID":"shanwpf"},"content":"    //@@author shanwpf"},{"lineNumber":112,"author":{"gitID":"shanwpf"},"content":"    public void setShifts(List\u003cShift\u003e shifts) throws DuplicateShiftException {"},{"lineNumber":113,"author":{"gitID":"shanwpf"},"content":"        this.shifts.setShifts(shifts);"},{"lineNumber":114,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":115,"author":{"gitID":"shanwpf"},"content":"    //@@author"},{"lineNumber":116,"author":{"gitID":"-"},"content":""},{"lineNumber":117,"author":{"gitID":"-"},"content":"    public void setTags(Set\u003cTag\u003e tags) {"},{"lineNumber":118,"author":{"gitID":"-"},"content":"        this.tags.setTags(tags);"},{"lineNumber":119,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":120,"author":{"gitID":"-"},"content":""},{"lineNumber":121,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":122,"author":{"gitID":"-"},"content":"     * Resets the existing data of this {@code PartTimeManager} with {@code newData}."},{"lineNumber":123,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":124,"author":{"gitID":"-"},"content":"    public void resetData(ReadOnlyPartTimeManager newData) {"},{"lineNumber":125,"author":{"gitID":"-"},"content":"        requireNonNull(newData);"},{"lineNumber":126,"author":{"gitID":"-"},"content":"        setTags(new HashSet\u003c\u003e(newData.getTagList()));"},{"lineNumber":127,"author":{"gitID":"-"},"content":"        List\u003cEmployee\u003e syncedEmployeeList \u003d newData.getEmployeeList().stream()"},{"lineNumber":128,"author":{"gitID":"-"},"content":"                .map(this::syncWithMasterTagList)"},{"lineNumber":129,"author":{"gitID":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":130,"author":{"gitID":"-"},"content":""},{"lineNumber":131,"author":{"gitID":"-"},"content":"        List\u003cShift\u003e syncedShiftList \u003d new ArrayList\u003c\u003e(newData.getShiftList());"},{"lineNumber":132,"author":{"gitID":"-"},"content":"        OutletInformation syncedOutlet \u003d new OutletInformation(newData.getOutletInformation());"},{"lineNumber":133,"author":{"gitID":"-"},"content":""},{"lineNumber":134,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":135,"author":{"gitID":"-"},"content":"            setEmployees(syncedEmployeeList);"},{"lineNumber":136,"author":{"gitID":"-"},"content":"            setShifts(syncedShiftList);"},{"lineNumber":137,"author":{"gitID":"-"},"content":"            setOutletInformation(syncedOutlet);"},{"lineNumber":138,"author":{"gitID":"-"},"content":"        } catch (DuplicateEmployeeException e) {"},{"lineNumber":139,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"PartTimeManagers should not have duplicate employees\");"},{"lineNumber":140,"author":{"gitID":"-"},"content":"        } catch (DuplicateShiftException e) {"},{"lineNumber":141,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"PartTimeManagers should not have duplicate shifts\");"},{"lineNumber":142,"author":{"gitID":"-"},"content":"        } catch (NoOutletInformationFieldChangeException e) {"},{"lineNumber":143,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"PartTimeManagers should not have empty outlet information\");"},{"lineNumber":144,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":145,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":146,"author":{"gitID":"-"},"content":""},{"lineNumber":147,"author":{"gitID":"-"},"content":"    //// employee-level operations"},{"lineNumber":148,"author":{"gitID":"-"},"content":""},{"lineNumber":149,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":150,"author":{"gitID":"-"},"content":"     * Adds an employee to PTMan."},{"lineNumber":151,"author":{"gitID":"-"},"content":"     * Also checks the new employee\u0027s tags and updates {@link #tags} with any new tags found,"},{"lineNumber":152,"author":{"gitID":"-"},"content":"     * and updates the Tag objects in the employee to point to those in {@link #tags}."},{"lineNumber":153,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":154,"author":{"gitID":"-"},"content":"     * @throws DuplicateEmployeeException if an equivalent employee already exists."},{"lineNumber":155,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":156,"author":{"gitID":"-"},"content":"    public void addEmployee(Employee p) throws DuplicateEmployeeException {"},{"lineNumber":157,"author":{"gitID":"-"},"content":"        Employee employee \u003d syncWithMasterTagList(p);"},{"lineNumber":158,"author":{"gitID":"-"},"content":"        // TODO: the tags master list will be updated even though the below line fails."},{"lineNumber":159,"author":{"gitID":"-"},"content":"        // This can cause the tags master list to have additional tags that are not tagged to any employee"},{"lineNumber":160,"author":{"gitID":"-"},"content":"        // in the employee list."},{"lineNumber":161,"author":{"gitID":"-"},"content":"        employees.add(employee);"},{"lineNumber":162,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":163,"author":{"gitID":"-"},"content":""},{"lineNumber":164,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":165,"author":{"gitID":"-"},"content":"     * Replaces the given employee {@code target} in the list with {@code editedEmployee}."},{"lineNumber":166,"author":{"gitID":"-"},"content":"     * {@code PartTimeManager}\u0027s tag list will be updated with the tags of {@code editedEmployee}."},{"lineNumber":167,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":168,"author":{"gitID":"-"},"content":"     * @throws DuplicateEmployeeException if updating the employee\u0027s details causes the employee to be equivalent to"},{"lineNumber":169,"author":{"gitID":"-"},"content":"     *      another existing employee in the list."},{"lineNumber":170,"author":{"gitID":"-"},"content":"     * @throws EmployeeNotFoundException if {@code target} could not be found in the list."},{"lineNumber":171,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":172,"author":{"gitID":"-"},"content":"     * @see #syncWithMasterTagList(Employee)"},{"lineNumber":173,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":174,"author":{"gitID":"-"},"content":"    public void updateEmployee(Employee target, Employee editedEmployee)"},{"lineNumber":175,"author":{"gitID":"-"},"content":"            throws DuplicateEmployeeException, EmployeeNotFoundException {"},{"lineNumber":176,"author":{"gitID":"-"},"content":"        requireNonNull(editedEmployee);"},{"lineNumber":177,"author":{"gitID":"-"},"content":""},{"lineNumber":178,"author":{"gitID":"-"},"content":"        Employee syncedEditedEmployee \u003d syncWithMasterTagList(editedEmployee);"},{"lineNumber":179,"author":{"gitID":"-"},"content":"        // TODO: the tags master list will be updated even though the below line fails."},{"lineNumber":180,"author":{"gitID":"-"},"content":"        // This can cause the tags master list to have additional tags that are not tagged to any employee"},{"lineNumber":181,"author":{"gitID":"-"},"content":"        // in the employee list."},{"lineNumber":182,"author":{"gitID":"-"},"content":"        employees.setEmployee(target, syncedEditedEmployee);"},{"lineNumber":183,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":184,"author":{"gitID":"-"},"content":""},{"lineNumber":185,"author":{"gitID":"SunBangjie"},"content":"    //@@author SunBangjie"},{"lineNumber":186,"author":{"gitID":"SunBangjie"},"content":"    public void updateOutlet(OutletInformation editedOutlet) throws NoOutletInformationFieldChangeException {"},{"lineNumber":187,"author":{"gitID":"SunBangjie"},"content":"        outlet.setOutletInformation(editedOutlet);"},{"lineNumber":188,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":189,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":190,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":191,"author":{"gitID":"SunBangjie"},"content":"    public OutletInformation getOutletInformation() {"},{"lineNumber":192,"author":{"gitID":"SunBangjie"},"content":"        return outlet;"},{"lineNumber":193,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":194,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":195,"author":{"gitID":"SunBangjie"},"content":"    public void encryptLocalStorage() {"},{"lineNumber":196,"author":{"gitID":"SunBangjie"},"content":"        outlet.setEncryptionMode(ENCRYPTED);"},{"lineNumber":197,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":198,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":199,"author":{"gitID":"SunBangjie"},"content":"    public void decryptLocalStorage() {"},{"lineNumber":200,"author":{"gitID":"SunBangjie"},"content":"        outlet.setEncryptionMode(DECRYPTED);"},{"lineNumber":201,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":202,"author":{"gitID":"SunBangjie"},"content":"    //@@author"},{"lineNumber":203,"author":{"gitID":"-"},"content":""},{"lineNumber":204,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":205,"author":{"gitID":"-"},"content":"     *  Updates the master tag list to include tags in {@code employee} that are not in the list."},{"lineNumber":206,"author":{"gitID":"-"},"content":"     *  @return a copy of this {@code employee} such that every tag in this employee points to a Tag"},{"lineNumber":207,"author":{"gitID":"-"},"content":"     *  object in the master list."},{"lineNumber":208,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":209,"author":{"gitID":"-"},"content":"    private Employee syncWithMasterTagList(Employee employee) {"},{"lineNumber":210,"author":{"gitID":"-"},"content":"        final UniqueTagList employeeTags \u003d new UniqueTagList(employee.getTags());"},{"lineNumber":211,"author":{"gitID":"-"},"content":"        tags.mergeFrom(employeeTags);"},{"lineNumber":212,"author":{"gitID":"-"},"content":""},{"lineNumber":213,"author":{"gitID":"-"},"content":"        // Create map with values \u003d tag object references in the master list"},{"lineNumber":214,"author":{"gitID":"-"},"content":"        // used for checking employee tag references"},{"lineNumber":215,"author":{"gitID":"-"},"content":"        final Map\u003cTag, Tag\u003e masterTagObjects \u003d new HashMap\u003c\u003e();"},{"lineNumber":216,"author":{"gitID":"-"},"content":"        tags.forEach(tag -\u003e masterTagObjects.put(tag, tag));"},{"lineNumber":217,"author":{"gitID":"-"},"content":""},{"lineNumber":218,"author":{"gitID":"-"},"content":"        // Rebuild the list of employee tags to point to the relevant tags in the master tag list."},{"lineNumber":219,"author":{"gitID":"-"},"content":"        final Set\u003cTag\u003e correctTagReferences \u003d new HashSet\u003c\u003e();"},{"lineNumber":220,"author":{"gitID":"-"},"content":"        employeeTags.forEach(tag -\u003e correctTagReferences.add(masterTagObjects.get(tag)));"},{"lineNumber":221,"author":{"gitID":"-"},"content":"        return new Employee("},{"lineNumber":222,"author":{"gitID":"-"},"content":"                employee.getName(),"},{"lineNumber":223,"author":{"gitID":"-"},"content":"                employee.getPhone(),"},{"lineNumber":224,"author":{"gitID":"-"},"content":"                employee.getEmail(),"},{"lineNumber":225,"author":{"gitID":"-"},"content":"                employee.getAddress(),"},{"lineNumber":226,"author":{"gitID":"-"},"content":"                employee.getSalary(),"},{"lineNumber":227,"author":{"gitID":"-"},"content":"                employee.getPassword(),"},{"lineNumber":228,"author":{"gitID":"-"},"content":"                correctTagReferences"},{"lineNumber":229,"author":{"gitID":"-"},"content":"        );"},{"lineNumber":230,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":231,"author":{"gitID":"-"},"content":""},{"lineNumber":232,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":233,"author":{"gitID":"-"},"content":"     * Removes {@code key} from this {@code PartTimeManager}."},{"lineNumber":234,"author":{"gitID":"-"},"content":"     * @throws EmployeeNotFoundException if the {@code key} is not in this {@code PartTimeManager}."},{"lineNumber":235,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":236,"author":{"gitID":"-"},"content":"    public boolean removeEmployee(Employee key) throws EmployeeNotFoundException {"},{"lineNumber":237,"author":{"gitID":"-"},"content":"        if (employees.remove(key)) {"},{"lineNumber":238,"author":{"gitID":"-"},"content":"            removeEmployeeFromAllShifts(key);"},{"lineNumber":239,"author":{"gitID":"-"},"content":"            removeUnusedTag();"},{"lineNumber":240,"author":{"gitID":"-"},"content":"            return true;"},{"lineNumber":241,"author":{"gitID":"-"},"content":"        } else {"},{"lineNumber":242,"author":{"gitID":"-"},"content":"            throw new EmployeeNotFoundException();"},{"lineNumber":243,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":244,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":245,"author":{"gitID":"-"},"content":""},{"lineNumber":246,"author":{"gitID":"shanwpf"},"content":"    //@@author shanwpf"},{"lineNumber":247,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":248,"author":{"gitID":"shanwpf"},"content":"     * Removes {@code key} from all shifts"},{"lineNumber":249,"author":{"gitID":"shanwpf"},"content":"     * @throws EmployeeNotFoundException if the {@code key} is not found"},{"lineNumber":250,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":251,"author":{"gitID":"shanwpf"},"content":"    private void removeEmployeeFromAllShifts(Employee key) throws EmployeeNotFoundException {"},{"lineNumber":252,"author":{"gitID":"shanwpf"},"content":"        for (Shift shift : shifts) {"},{"lineNumber":253,"author":{"gitID":"shanwpf"},"content":"            if (shift.containsEmployee(key)) {"},{"lineNumber":254,"author":{"gitID":"shanwpf"},"content":"                Shift copy \u003d new Shift(shift);"},{"lineNumber":255,"author":{"gitID":"shanwpf"},"content":"                try {"},{"lineNumber":256,"author":{"gitID":"shanwpf"},"content":"                    copy.removeEmployee(key);"},{"lineNumber":257,"author":{"gitID":"shanwpf"},"content":"                    shifts.setShift(shift, copy);"},{"lineNumber":258,"author":{"gitID":"shanwpf"},"content":"                } catch (DuplicateShiftException e) {"},{"lineNumber":259,"author":{"gitID":"shanwpf"},"content":"                    throw new AssertionError(\"shifts should never be duplicates\");"},{"lineNumber":260,"author":{"gitID":"shanwpf"},"content":"                } catch (ShiftNotFoundException e) {"},{"lineNumber":261,"author":{"gitID":"shanwpf"},"content":"                    throw new AssertionError(\"shift should always exist\");"},{"lineNumber":262,"author":{"gitID":"shanwpf"},"content":"                }"},{"lineNumber":263,"author":{"gitID":"shanwpf"},"content":"            }"},{"lineNumber":264,"author":{"gitID":"shanwpf"},"content":"        }"},{"lineNumber":265,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":266,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":267,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":268,"author":{"gitID":"shanwpf"},"content":"     * Removes {@code key} from this {@code PartTimeManager}."},{"lineNumber":269,"author":{"gitID":"shanwpf"},"content":"     * @throws ShiftNotFoundException if the {@code key} is not in this {@code PartTimeManager}"},{"lineNumber":270,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":271,"author":{"gitID":"shanwpf"},"content":"    public boolean removeShift(Shift key) throws ShiftNotFoundException {"},{"lineNumber":272,"author":{"gitID":"shanwpf"},"content":"        return shifts.remove(key);"},{"lineNumber":273,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":274,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":275,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":276,"author":{"gitID":"shanwpf"},"content":"     * Adds a shift to PTMan."},{"lineNumber":277,"author":{"gitID":"shanwpf"},"content":"     * @throws DuplicateShiftException if a equivalent shift already exists."},{"lineNumber":278,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":279,"author":{"gitID":"shanwpf"},"content":"    public void addShift(Shift p) throws DuplicateShiftException {"},{"lineNumber":280,"author":{"gitID":"shanwpf"},"content":"        shifts.add(p);"},{"lineNumber":281,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":282,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":283,"author":{"gitID":"shanwpf"},"content":"    /**"},{"lineNumber":284,"author":{"gitID":"shanwpf"},"content":"     * Replaces the given shift {@code target} in the list with {@code editedShift}."},{"lineNumber":285,"author":{"gitID":"shanwpf"},"content":"     *"},{"lineNumber":286,"author":{"gitID":"shanwpf"},"content":"     * @throws DuplicateShiftException if updating the shift\u0027s details causes the shift to be equivalent to"},{"lineNumber":287,"author":{"gitID":"shanwpf"},"content":"     *      another existing shift in the list."},{"lineNumber":288,"author":{"gitID":"shanwpf"},"content":"     * @throws ShiftNotFoundException if {@code target} could not be found in the list."},{"lineNumber":289,"author":{"gitID":"shanwpf"},"content":"     */"},{"lineNumber":290,"author":{"gitID":"shanwpf"},"content":"    public void updateShift(Shift target, Shift editedShift) throws ShiftNotFoundException, DuplicateShiftException {"},{"lineNumber":291,"author":{"gitID":"shanwpf"},"content":"        shifts.setShift(target, editedShift);"},{"lineNumber":292,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":293,"author":{"gitID":"shanwpf"},"content":"    //@@author"},{"lineNumber":294,"author":{"gitID":"-"},"content":""},{"lineNumber":295,"author":{"gitID":"-"},"content":"    //// tag-level operations"},{"lineNumber":296,"author":{"gitID":"-"},"content":""},{"lineNumber":297,"author":{"gitID":"-"},"content":"    public void addTag(Tag t) throws UniqueTagList.DuplicateTagException {"},{"lineNumber":298,"author":{"gitID":"-"},"content":"        tags.add(t);"},{"lineNumber":299,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":300,"author":{"gitID":"-"},"content":""},{"lineNumber":301,"author":{"gitID":"-"},"content":"    //// util methods"},{"lineNumber":302,"author":{"gitID":"-"},"content":""},{"lineNumber":303,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":304,"author":{"gitID":"-"},"content":"     * Remove tag from Employee if the tag exist in Employee."},{"lineNumber":305,"author":{"gitID":"-"},"content":"     * @param tag"},{"lineNumber":306,"author":{"gitID":"-"},"content":"     * @param employee"},{"lineNumber":307,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":308,"author":{"gitID":"-"},"content":"    private void removeTagFromEmployee(Tag tag, Employee employee) {"},{"lineNumber":309,"author":{"gitID":"-"},"content":"        Set\u003cTag\u003e newTags \u003d new HashSet\u003c\u003e(employee.getTags());"},{"lineNumber":310,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":311,"author":{"gitID":"koo1993"},"content":"        if (!newTags.contains(tag)) {"},{"lineNumber":312,"author":{"gitID":"koo1993"},"content":"            return;"},{"lineNumber":313,"author":{"gitID":"koo1993"},"content":"        } else {"},{"lineNumber":314,"author":{"gitID":"koo1993"},"content":"            newTags.remove(tag);"},{"lineNumber":315,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":316,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":317,"author":{"gitID":"-"},"content":"        Employee newEmployee \u003d new Employee(employee.getName(), employee.getPhone(), employee.getEmail(),"},{"lineNumber":318,"author":{"gitID":"-"},"content":"                employee.getAddress(), employee.getSalary(), employee.getPassword(), newTags);"},{"lineNumber":319,"author":{"gitID":"-"},"content":""},{"lineNumber":320,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":321,"author":{"gitID":"-"},"content":"            updateEmployee(employee, newEmployee);"},{"lineNumber":322,"author":{"gitID":"-"},"content":"        } catch (DuplicateEmployeeException dpe) {"},{"lineNumber":323,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"updating employee should not result in duplicated employee\");"},{"lineNumber":324,"author":{"gitID":"-"},"content":"        } catch (EmployeeNotFoundException pnfe) {"},{"lineNumber":325,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"updating employee should always be able to find the employee you are editing\");"},{"lineNumber":326,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":327,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":328,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":329,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":330,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":331,"author":{"gitID":"koo1993"},"content":"     * remove tag that is unused in addressbook"},{"lineNumber":332,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":333,"author":{"gitID":"koo1993"},"content":"    private void removeUnusedTag() {"},{"lineNumber":334,"author":{"gitID":"koo1993"},"content":"        HashSet newSet \u003d new HashSet();"},{"lineNumber":335,"author":{"gitID":"-"},"content":"        for (Employee employee:employees) {"},{"lineNumber":336,"author":{"gitID":"-"},"content":"            for (Tag tag: employee.getTags()) {"},{"lineNumber":337,"author":{"gitID":"koo1993"},"content":"                if (!newSet.contains(tag)) {"},{"lineNumber":338,"author":{"gitID":"koo1993"},"content":"                    newSet.add(tag);"},{"lineNumber":339,"author":{"gitID":"koo1993"},"content":"                }"},{"lineNumber":340,"author":{"gitID":"koo1993"},"content":"            }"},{"lineNumber":341,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":342,"author":{"gitID":"koo1993"},"content":"        tags.setTags(newSet);"},{"lineNumber":343,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":344,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":345,"author":{"gitID":"koo1993"},"content":"     * Remove tags from everyone in the address book"},{"lineNumber":346,"author":{"gitID":"koo1993"},"content":"     * @param tag"},{"lineNumber":347,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":348,"author":{"gitID":"-"},"content":"    public void removeTagFromAllEmployees(Tag tag) {"},{"lineNumber":349,"author":{"gitID":"-"},"content":"        for (Employee employee: employees) {"},{"lineNumber":350,"author":{"gitID":"-"},"content":"            removeTagFromEmployee(tag, employee);"},{"lineNumber":351,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":352,"author":{"gitID":"koo1993"},"content":"        removeUnusedTag();"},{"lineNumber":353,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":354,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":355,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":356,"author":{"gitID":"-"},"content":"    public String toString() {"},{"lineNumber":357,"author":{"gitID":"-"},"content":"        return employees.asObservableList().size() + \" employees, \" + tags.asObservableList().size() +  \" tags\";"},{"lineNumber":358,"author":{"gitID":"-"},"content":"        // TODO: refine later"},{"lineNumber":359,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":360,"author":{"gitID":"-"},"content":""},{"lineNumber":361,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":362,"author":{"gitID":"-"},"content":"    public ObservableList\u003cEmployee\u003e getEmployeeList() {"},{"lineNumber":363,"author":{"gitID":"-"},"content":"        return employees.asObservableList();"},{"lineNumber":364,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":365,"author":{"gitID":"-"},"content":""},{"lineNumber":366,"author":{"gitID":"shanwpf"},"content":"    //@@author shanwpf"},{"lineNumber":367,"author":{"gitID":"shanwpf"},"content":"    @Override"},{"lineNumber":368,"author":{"gitID":"shanwpf"},"content":"    public ObservableList\u003cShift\u003e getShiftList() {"},{"lineNumber":369,"author":{"gitID":"shanwpf"},"content":"        return shifts.asObservableList();"},{"lineNumber":370,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":371,"author":{"gitID":"shanwpf"},"content":"    //@@author"},{"lineNumber":372,"author":{"gitID":"-"},"content":""},{"lineNumber":373,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":374,"author":{"gitID":"-"},"content":"    public ObservableList\u003cTag\u003e getTagList() {"},{"lineNumber":375,"author":{"gitID":"-"},"content":"        return tags.asObservableList();"},{"lineNumber":376,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":377,"author":{"gitID":"-"},"content":""},{"lineNumber":378,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":379,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":380,"author":{"gitID":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":381,"author":{"gitID":"-"},"content":"                || (other instanceof PartTimeManager // instanceof handles nulls"},{"lineNumber":382,"author":{"gitID":"-"},"content":"                \u0026\u0026 this.employees.equals(((PartTimeManager) other).employees)"},{"lineNumber":383,"author":{"gitID":"-"},"content":"                \u0026\u0026 this.tags.equalsOrderInsensitive(((PartTimeManager) other).tags))"},{"lineNumber":384,"author":{"gitID":"-"},"content":"                \u0026\u0026 this.outlet.equals(((PartTimeManager) other).outlet)"},{"lineNumber":385,"author":{"gitID":"-"},"content":"                \u0026\u0026 this.shifts.equals(((PartTimeManager) other).shifts);"},{"lineNumber":386,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":387,"author":{"gitID":"-"},"content":""},{"lineNumber":388,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":389,"author":{"gitID":"-"},"content":"    public int hashCode() {"},{"lineNumber":390,"author":{"gitID":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own"},{"lineNumber":391,"author":{"gitID":"-"},"content":"        return Objects.hash(employees, tags);"},{"lineNumber":392,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":393,"author":{"gitID":"-"},"content":""},{"lineNumber":394,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"shanwpf":59,"koo1993":63,"-":249,"SunBangjie":23}},{"path":"src/main/java/seedu/ptman/model/outlet/OutletName.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.model.outlet;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.util.AppUtil.checkArgument;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":7,"author":{"gitID":"SunBangjie"},"content":"/**"},{"lineNumber":8,"author":{"gitID":"SunBangjie"},"content":" * Represents an outlet\u0027s name in PTMan."},{"lineNumber":9,"author":{"gitID":"SunBangjie"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}"},{"lineNumber":10,"author":{"gitID":"SunBangjie"},"content":" */"},{"lineNumber":11,"author":{"gitID":"SunBangjie"},"content":"public class OutletName {"},{"lineNumber":12,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":13,"author":{"gitID":"SunBangjie"},"content":"    public static final String MESSAGE_NAME_CONSTRAINTS \u003d"},{"lineNumber":14,"author":{"gitID":"SunBangjie"},"content":"            \"Outlet name should only contain alphanumeric characters and spaces, and it should not be blank\";"},{"lineNumber":15,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":16,"author":{"gitID":"SunBangjie"},"content":"    /*"},{"lineNumber":17,"author":{"gitID":"SunBangjie"},"content":"     * The first character of the name must not be a whitespace,"},{"lineNumber":18,"author":{"gitID":"SunBangjie"},"content":"     * otherwise \" \" (a blank string) becomes a valid input."},{"lineNumber":19,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":20,"author":{"gitID":"SunBangjie"},"content":"    public static final String NAME_VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";"},{"lineNumber":21,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":22,"author":{"gitID":"SunBangjie"},"content":"    public final String fullName;"},{"lineNumber":23,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":24,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":25,"author":{"gitID":"SunBangjie"},"content":"     * Constructs a {@code Name}."},{"lineNumber":26,"author":{"gitID":"SunBangjie"},"content":"     *"},{"lineNumber":27,"author":{"gitID":"SunBangjie"},"content":"     * @param name A valid name."},{"lineNumber":28,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":29,"author":{"gitID":"SunBangjie"},"content":"    public OutletName(String name) {"},{"lineNumber":30,"author":{"gitID":"SunBangjie"},"content":"        requireNonNull(name);"},{"lineNumber":31,"author":{"gitID":"SunBangjie"},"content":"        checkArgument(isValidName(name), MESSAGE_NAME_CONSTRAINTS);"},{"lineNumber":32,"author":{"gitID":"SunBangjie"},"content":"        this.fullName \u003d name;"},{"lineNumber":33,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":35,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":36,"author":{"gitID":"SunBangjie"},"content":"     * Returns true if a given string is a valid outlet name."},{"lineNumber":37,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":38,"author":{"gitID":"SunBangjie"},"content":"    public static boolean isValidName(String test) {"},{"lineNumber":39,"author":{"gitID":"SunBangjie"},"content":"        return test.matches(NAME_VALIDATION_REGEX);"},{"lineNumber":40,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":41,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":42,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":43,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":44,"author":{"gitID":"SunBangjie"},"content":"    public String toString() {"},{"lineNumber":45,"author":{"gitID":"SunBangjie"},"content":"        return fullName;"},{"lineNumber":46,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":47,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":48,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":49,"author":{"gitID":"SunBangjie"},"content":"    public boolean equals(Object other) {"},{"lineNumber":50,"author":{"gitID":"SunBangjie"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":51,"author":{"gitID":"SunBangjie"},"content":"                || (other instanceof OutletName // instanceof handles nulls"},{"lineNumber":52,"author":{"gitID":"SunBangjie"},"content":"                \u0026\u0026 this.fullName.equals(((OutletName) other).fullName)); // state check"},{"lineNumber":53,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":54,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":55,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":56,"author":{"gitID":"SunBangjie"},"content":"    public int hashCode() {"},{"lineNumber":57,"author":{"gitID":"SunBangjie"},"content":"        return fullName.hashCode();"},{"lineNumber":58,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":59,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":60,"author":{"gitID":"SunBangjie"},"content":"}"},{"lineNumber":61,"author":{"gitID":"SunBangjie"},"content":""}],"authorContributionMap":{"-":5,"SunBangjie":56}},{"path":"src/main/java/seedu/ptman/model/employee/Salary.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.model.employee;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.util.AppUtil.checkArgument;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"koo1993"},"content":"//@@author koo1993"},{"lineNumber":7,"author":{"gitID":"koo1993"},"content":"/**"},{"lineNumber":8,"author":{"gitID":"koo1993"},"content":" * Represents a Employee\u0027s Salary earned so far in PTMan."},{"lineNumber":9,"author":{"gitID":"koo1993"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidSalary(String)}"},{"lineNumber":10,"author":{"gitID":"koo1993"},"content":" */"},{"lineNumber":11,"author":{"gitID":"koo1993"},"content":"public class Salary {"},{"lineNumber":12,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":13,"author":{"gitID":"koo1993"},"content":"    public static final String MESSAGE_SALARY_CONSTRAINTS \u003d"},{"lineNumber":14,"author":{"gitID":"koo1993"},"content":"            \"Salary can only contain positive Integer\";"},{"lineNumber":15,"author":{"gitID":"koo1993"},"content":"    public static final String SALARY_VALIDATION_REGEX \u003d \"^[0-9]\\\\d*$\";"},{"lineNumber":16,"author":{"gitID":"koo1993"},"content":"    public final String value;"},{"lineNumber":17,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":18,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":19,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":20,"author":{"gitID":"koo1993"},"content":"     * Constructs a {@code Salary}"},{"lineNumber":21,"author":{"gitID":"koo1993"},"content":"     *"},{"lineNumber":22,"author":{"gitID":"koo1993"},"content":"     * @param salary A valid salary."},{"lineNumber":23,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":24,"author":{"gitID":"koo1993"},"content":"    public Salary(String salary) {"},{"lineNumber":25,"author":{"gitID":"koo1993"},"content":"        requireNonNull(salary);"},{"lineNumber":26,"author":{"gitID":"koo1993"},"content":"        checkArgument(isValidSalary(salary), MESSAGE_SALARY_CONSTRAINTS);"},{"lineNumber":27,"author":{"gitID":"koo1993"},"content":"        this.value \u003d salary;"},{"lineNumber":28,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":29,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":30,"author":{"gitID":"koo1993"},"content":"    public static boolean isValidSalary(String test) {"},{"lineNumber":31,"author":{"gitID":"koo1993"},"content":"        return test.matches(SALARY_VALIDATION_REGEX);"},{"lineNumber":32,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":34,"author":{"gitID":"koo1993"},"content":"    @Override"},{"lineNumber":35,"author":{"gitID":"koo1993"},"content":"    public String toString() {"},{"lineNumber":36,"author":{"gitID":"koo1993"},"content":"        return value;"},{"lineNumber":37,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":39,"author":{"gitID":"koo1993"},"content":"    @Override"},{"lineNumber":40,"author":{"gitID":"koo1993"},"content":"    public boolean equals(Object other) {"},{"lineNumber":41,"author":{"gitID":"koo1993"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":42,"author":{"gitID":"koo1993"},"content":"                || (other instanceof Salary // instanceof handles nulls"},{"lineNumber":43,"author":{"gitID":"koo1993"},"content":"                \u0026\u0026 this.value.equals(((Salary) other).value)); // state check"},{"lineNumber":44,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":46,"author":{"gitID":"koo1993"},"content":"    @Override"},{"lineNumber":47,"author":{"gitID":"koo1993"},"content":"    public int hashCode() {"},{"lineNumber":48,"author":{"gitID":"koo1993"},"content":"        return value.hashCode();"},{"lineNumber":49,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":51,"author":{"gitID":"koo1993"},"content":"}"}],"authorContributionMap":{"koo1993":46,"-":5}},{"path":"src/main/java/seedu/ptman/model/outlet/OutletEmail.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.model.outlet;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.util.AppUtil.checkArgument;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"SunBangjie"},"content":"//@@author SunBangjie"},{"lineNumber":7,"author":{"gitID":"SunBangjie"},"content":"/**"},{"lineNumber":8,"author":{"gitID":"SunBangjie"},"content":" * Represents an email of outlet in PTMan."},{"lineNumber":9,"author":{"gitID":"SunBangjie"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidOutletEmail(String)}"},{"lineNumber":10,"author":{"gitID":"SunBangjie"},"content":" */"},{"lineNumber":11,"author":{"gitID":"SunBangjie"},"content":"public class OutletEmail {"},{"lineNumber":12,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":13,"author":{"gitID":"SunBangjie"},"content":"    private static  final String SPECIAL_CHARACTERS \u003d \"!#$%\u0026\u0027*+/\u003d?`{|}~^.-\";"},{"lineNumber":14,"author":{"gitID":"SunBangjie"},"content":"    public static final String MESSAGE_OUTLET_EMAIL_CONSTRAINTS \u003d \"Outlet emails should be of the format \""},{"lineNumber":15,"author":{"gitID":"SunBangjie"},"content":"            + \"local-part@domain and adhere to the following constraints:\\n\""},{"lineNumber":16,"author":{"gitID":"SunBangjie"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special \""},{"lineNumber":17,"author":{"gitID":"SunBangjie"},"content":"            + \"characters, excluding the parentheses, (\" + SPECIAL_CHARACTERS + \") .\\n\""},{"lineNumber":18,"author":{"gitID":"SunBangjie"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. \""},{"lineNumber":19,"author":{"gitID":"SunBangjie"},"content":"            + \"The domain name must:\\n\""},{"lineNumber":20,"author":{"gitID":"SunBangjie"},"content":"            + \"    - be at least 2 characters long\\n\""},{"lineNumber":21,"author":{"gitID":"SunBangjie"},"content":"            + \"    - start and end with alphanumeric characters\\n\""},{"lineNumber":22,"author":{"gitID":"SunBangjie"},"content":"            + \"    - consist of alphanumeric characters, a period or a hyphen for the \""},{"lineNumber":23,"author":{"gitID":"SunBangjie"},"content":"            + \"characters in between, if any.\";"},{"lineNumber":24,"author":{"gitID":"SunBangjie"},"content":"    // alphanumeric and special characters"},{"lineNumber":25,"author":{"gitID":"SunBangjie"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^[\\\\w\" + SPECIAL_CHARACTERS + \"]+\";"},{"lineNumber":26,"author":{"gitID":"SunBangjie"},"content":"    // alphanumeric characters except underscore"},{"lineNumber":27,"author":{"gitID":"SunBangjie"},"content":"    private static final String DOMAIN_FIRST_CHARACTER_REGEX \u003d \"[^\\\\W_]\";"},{"lineNumber":28,"author":{"gitID":"SunBangjie"},"content":"    // alphanumeric, period and hyphen"},{"lineNumber":29,"author":{"gitID":"SunBangjie"},"content":"    private static final String DOMAIN_MIDDLE_REGEX \u003d \"[a-zA-Z0-9.-]*\";"},{"lineNumber":30,"author":{"gitID":"SunBangjie"},"content":"    private static final String DOMAIN_LAST_CHARACTER_REGEX \u003d \"[^\\\\W_]$\";"},{"lineNumber":31,"author":{"gitID":"SunBangjie"},"content":"    public static final String OUTLET_EMAIL_VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\""},{"lineNumber":32,"author":{"gitID":"SunBangjie"},"content":"            + DOMAIN_FIRST_CHARACTER_REGEX + DOMAIN_MIDDLE_REGEX + DOMAIN_LAST_CHARACTER_REGEX;"},{"lineNumber":33,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":34,"author":{"gitID":"SunBangjie"},"content":"    public final String value;"},{"lineNumber":35,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":36,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":37,"author":{"gitID":"SunBangjie"},"content":"     * Constructs an {@code OutletEmail}."},{"lineNumber":38,"author":{"gitID":"SunBangjie"},"content":"     *"},{"lineNumber":39,"author":{"gitID":"SunBangjie"},"content":"     * @param outletEmail A valid outletEmail ptman."},{"lineNumber":40,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":41,"author":{"gitID":"SunBangjie"},"content":"    public OutletEmail(String outletEmail) {"},{"lineNumber":42,"author":{"gitID":"SunBangjie"},"content":"        requireNonNull(outletEmail);"},{"lineNumber":43,"author":{"gitID":"SunBangjie"},"content":"        checkArgument(isValidOutletEmail(outletEmail), MESSAGE_OUTLET_EMAIL_CONSTRAINTS);"},{"lineNumber":44,"author":{"gitID":"SunBangjie"},"content":"        this.value \u003d outletEmail;"},{"lineNumber":45,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":47,"author":{"gitID":"SunBangjie"},"content":"    /**"},{"lineNumber":48,"author":{"gitID":"SunBangjie"},"content":"     * Returns if a given string is a valid outlet email."},{"lineNumber":49,"author":{"gitID":"SunBangjie"},"content":"     */"},{"lineNumber":50,"author":{"gitID":"SunBangjie"},"content":"    public static boolean isValidOutletEmail(String test) {"},{"lineNumber":51,"author":{"gitID":"SunBangjie"},"content":"        return test.matches(OUTLET_EMAIL_VALIDATION_REGEX);"},{"lineNumber":52,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":53,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":54,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":55,"author":{"gitID":"SunBangjie"},"content":"    public String toString() {"},{"lineNumber":56,"author":{"gitID":"SunBangjie"},"content":"        return value;"},{"lineNumber":57,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":58,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":59,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":60,"author":{"gitID":"SunBangjie"},"content":"    public boolean equals(Object other) {"},{"lineNumber":61,"author":{"gitID":"SunBangjie"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":62,"author":{"gitID":"SunBangjie"},"content":"                || (other instanceof OutletEmail // instanceof handles nulls"},{"lineNumber":63,"author":{"gitID":"SunBangjie"},"content":"                \u0026\u0026 this.value.equals(((OutletEmail) other).value)); // state check"},{"lineNumber":64,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":65,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":66,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":67,"author":{"gitID":"SunBangjie"},"content":"    public int hashCode() {"},{"lineNumber":68,"author":{"gitID":"SunBangjie"},"content":"        return value.hashCode();"},{"lineNumber":69,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":70,"author":{"gitID":"SunBangjie"},"content":"}"}],"authorContributionMap":{"-":5,"SunBangjie":65}},{"path":"src/main/java/seedu/ptman/model/ModelManager.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.ptman.model;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.util.CollectionUtil.requireAllNonNull;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.ptman.commons.util.DateUtil.getWeekFromDate;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.HashMap;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import javafx.collections.transformation.FilteredList;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import javafx.collections.transformation.SortedList;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.ComponentManager;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.EventsCenter;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.core.LogsCenter;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.model.OutletDataChangedEvent;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.ptman.commons.events.model.PartTimeManagerChangedEvent;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.Employee;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.exceptions.DuplicateEmployeeException;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.ptman.model.employee.exceptions.EmployeeNotFoundException;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.OutletInformation;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.ptman.model.outlet.exceptions.NoOutletInformationFieldChangeException;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.Shift;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.exceptions.DuplicateShiftException;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"import seedu.ptman.model.shift.exceptions.ShiftNotFoundException;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"import seedu.ptman.model.tag.Tag;"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":32,"author":{"gitID":"-"},"content":" * Represents the in-memory model of the address book data."},{"lineNumber":33,"author":{"gitID":"-"},"content":" * All changes to any model should be synchronized."},{"lineNumber":34,"author":{"gitID":"-"},"content":" */"},{"lineNumber":35,"author":{"gitID":"-"},"content":"public class ModelManager extends ComponentManager implements Model {"},{"lineNumber":36,"author":{"gitID":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);"},{"lineNumber":37,"author":{"gitID":"-"},"content":""},{"lineNumber":38,"author":{"gitID":"-"},"content":"    private final PartTimeManager partTimeManager;"},{"lineNumber":39,"author":{"gitID":"-"},"content":"    private final FilteredList\u003cEmployee\u003e filteredEmployees;"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    private final FilteredList\u003cShift\u003e filteredShifts;"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    private HashMap\u003cEmployee, Password\u003e tempPasswordMap;"},{"lineNumber":42,"author":{"gitID":"koo1993"},"content":"    private HashMap\u003cOutletInformation, Password\u003e tempAdminPasswordMap;"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":45,"author":{"gitID":"-"},"content":"     * Initializes a ModelManager with the given partTimeManager and userPrefs."},{"lineNumber":46,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    public ModelManager(ReadOnlyPartTimeManager partTimeManager, UserPrefs userPrefs,"},{"lineNumber":48,"author":{"gitID":"-"},"content":"                        OutletInformation outletInformation) {"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        super();"},{"lineNumber":50,"author":{"gitID":"-"},"content":"        requireAllNonNull(partTimeManager, userPrefs, outletInformation);"},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"-"},"content":"        logger.fine(\"Initializing with PTMan: \" + partTimeManager + \" and user prefs \" + userPrefs);"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"        this.partTimeManager \u003d new PartTimeManager(partTimeManager);"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":56,"author":{"gitID":"-"},"content":"            this.partTimeManager.updateOutlet(outletInformation);"},{"lineNumber":57,"author":{"gitID":"-"},"content":"        } catch (NoOutletInformationFieldChangeException e) {"},{"lineNumber":58,"author":{"gitID":"-"},"content":"            logger.warning(\"Outlet data should not be empty.\");"},{"lineNumber":59,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":60,"author":{"gitID":"-"},"content":"        filteredEmployees \u003d new FilteredList\u003c\u003e(this.partTimeManager.getEmployeeList());"},{"lineNumber":61,"author":{"gitID":"-"},"content":"        filteredShifts \u003d new FilteredList\u003c\u003e(this.partTimeManager.getShiftList());"},{"lineNumber":62,"author":{"gitID":"-"},"content":""},{"lineNumber":63,"author":{"gitID":"-"},"content":"        // Only display shifts in the current week"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        setFilteredShiftListToWeek(LocalDate.now());"},{"lineNumber":65,"author":{"gitID":"-"},"content":""},{"lineNumber":66,"author":{"gitID":"-"},"content":"        tempPasswordMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":67,"author":{"gitID":"koo1993"},"content":"        tempAdminPasswordMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":68,"author":{"gitID":"-"},"content":""},{"lineNumber":69,"author":{"gitID":"-"},"content":"        EventsCenter.getInstance().registerHandler(this);"},{"lineNumber":70,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitID":"-"},"content":""},{"lineNumber":72,"author":{"gitID":"-"},"content":"    public ModelManager() {"},{"lineNumber":73,"author":{"gitID":"-"},"content":"        this(new PartTimeManager(), new UserPrefs(), new OutletInformation());"},{"lineNumber":74,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitID":"-"},"content":""},{"lineNumber":76,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":77,"author":{"gitID":"-"},"content":"    public void resetData(ReadOnlyPartTimeManager newData) {"},{"lineNumber":78,"author":{"gitID":"-"},"content":"        partTimeManager.resetData(newData);"},{"lineNumber":79,"author":{"gitID":"-"},"content":"        indicatePartTimeManagerChanged();"},{"lineNumber":80,"author":{"gitID":"-"},"content":"        indicateOutletInformationChanged();"},{"lineNumber":81,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":82,"author":{"gitID":"-"},"content":""},{"lineNumber":83,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":84,"author":{"gitID":"-"},"content":"    public ReadOnlyPartTimeManager getPartTimeManager() {"},{"lineNumber":85,"author":{"gitID":"-"},"content":"        return partTimeManager;"},{"lineNumber":86,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":87,"author":{"gitID":"-"},"content":""},{"lineNumber":88,"author":{"gitID":"-"},"content":"    /** Raises an event to indicate the model has changed */"},{"lineNumber":89,"author":{"gitID":"-"},"content":"    private void indicatePartTimeManagerChanged() {"},{"lineNumber":90,"author":{"gitID":"-"},"content":"        raise(new PartTimeManagerChangedEvent(partTimeManager));"},{"lineNumber":91,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":92,"author":{"gitID":"-"},"content":""},{"lineNumber":93,"author":{"gitID":"SunBangjie"},"content":"    //@@author SunBangjie"},{"lineNumber":94,"author":{"gitID":"SunBangjie"},"content":"    /** Raises an event to indicate the model has changed */"},{"lineNumber":95,"author":{"gitID":"SunBangjie"},"content":"    private void indicateEncryptionModeChanged() {"},{"lineNumber":96,"author":{"gitID":"SunBangjie"},"content":"        raise(new PartTimeManagerChangedEvent(partTimeManager));"},{"lineNumber":97,"author":{"gitID":"SunBangjie"},"content":"        raise(new OutletDataChangedEvent(partTimeManager.getOutletInformation()));"},{"lineNumber":98,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":99,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":100,"author":{"gitID":"SunBangjie"},"content":"    /** Raises an event to indicate the model has changed */"},{"lineNumber":101,"author":{"gitID":"SunBangjie"},"content":"    private void indicateOutletInformationChanged() {"},{"lineNumber":102,"author":{"gitID":"SunBangjie"},"content":"        raise(new OutletDataChangedEvent(partTimeManager.getOutletInformation()));"},{"lineNumber":103,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":104,"author":{"gitID":"SunBangjie"},"content":"    //@@author"},{"lineNumber":105,"author":{"gitID":"-"},"content":""},{"lineNumber":106,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":107,"author":{"gitID":"-"},"content":"    public synchronized void deleteEmployee(Employee target) throws EmployeeNotFoundException {"},{"lineNumber":108,"author":{"gitID":"-"},"content":"        partTimeManager.removeEmployee(target);"},{"lineNumber":109,"author":{"gitID":"-"},"content":"        indicatePartTimeManagerChanged();"},{"lineNumber":110,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":111,"author":{"gitID":"-"},"content":""},{"lineNumber":112,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":113,"author":{"gitID":"-"},"content":"    public synchronized void addEmployee(Employee employee) throws DuplicateEmployeeException {"},{"lineNumber":114,"author":{"gitID":"-"},"content":"        partTimeManager.addEmployee(employee);"},{"lineNumber":115,"author":{"gitID":"-"},"content":"        updateFilteredEmployeeList(PREDICATE_SHOW_ALL_EMPLOYEES);"},{"lineNumber":116,"author":{"gitID":"-"},"content":"        indicatePartTimeManagerChanged();"},{"lineNumber":117,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":118,"author":{"gitID":"-"},"content":""},{"lineNumber":119,"author":{"gitID":"koo1993"},"content":"    //@@author koo1993"},{"lineNumber":120,"author":{"gitID":"koo1993"},"content":"    @Override"},{"lineNumber":121,"author":{"gitID":"koo1993"},"content":"    public boolean isAdminMode() {"},{"lineNumber":122,"author":{"gitID":"koo1993"},"content":"        return partTimeManager.isAdminMode();"},{"lineNumber":123,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":124,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":125,"author":{"gitID":"koo1993"},"content":"    @Override"},{"lineNumber":126,"author":{"gitID":"koo1993"},"content":"    public synchronized boolean setTrueAdminMode(Password password) {"},{"lineNumber":127,"author":{"gitID":"koo1993"},"content":"        requireNonNull(password);"},{"lineNumber":128,"author":{"gitID":"koo1993"},"content":"        if (!partTimeManager.isAdminPassword(password)"},{"lineNumber":129,"author":{"gitID":"koo1993"},"content":"                \u0026\u0026 !isCorrectTempPwd(partTimeManager.getOutletInformation(), password)) {"},{"lineNumber":130,"author":{"gitID":"koo1993"},"content":"            return false;"},{"lineNumber":131,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":132,"author":{"gitID":"koo1993"},"content":"        partTimeManager.setAdminMode(true);"},{"lineNumber":133,"author":{"gitID":"koo1993"},"content":"        return true;"},{"lineNumber":134,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":135,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":136,"author":{"gitID":"koo1993"},"content":"    @Override"},{"lineNumber":137,"author":{"gitID":"koo1993"},"content":"    public synchronized void setFalseAdminMode() {"},{"lineNumber":138,"author":{"gitID":"koo1993"},"content":"        partTimeManager.setAdminMode(false);"},{"lineNumber":139,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":140,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":141,"author":{"gitID":"koo1993"},"content":"    @Override"},{"lineNumber":142,"author":{"gitID":"koo1993"},"content":"    public boolean isAdminPassword(Password password) {"},{"lineNumber":143,"author":{"gitID":"koo1993"},"content":"        return partTimeManager.isAdminPassword(password);"},{"lineNumber":144,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":145,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":146,"author":{"gitID":"koo1993"},"content":"    @Override"},{"lineNumber":147,"author":{"gitID":"koo1993"},"content":"    public void setAdminPassword(Password password) {"},{"lineNumber":148,"author":{"gitID":"koo1993"},"content":"        partTimeManager.setAdminPassword(password);"},{"lineNumber":149,"author":{"gitID":"koo1993"},"content":"        indicateOutletInformationChanged();"},{"lineNumber":150,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":151,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":152,"author":{"gitID":"koo1993"},"content":"    @Override"},{"lineNumber":153,"author":{"gitID":"koo1993"},"content":"    public void storeResetPassword(Employee employee, Password tempPassword) {"},{"lineNumber":154,"author":{"gitID":"koo1993"},"content":"        tempPasswordMap.put(employee, tempPassword);"},{"lineNumber":155,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":156,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":157,"author":{"gitID":"koo1993"},"content":"    @Override"},{"lineNumber":158,"author":{"gitID":"koo1993"},"content":"    public void storeResetPassword(OutletInformation outlet, Password tempPassword) {"},{"lineNumber":159,"author":{"gitID":"koo1993"},"content":"        tempAdminPasswordMap.put(outlet, tempPassword);"},{"lineNumber":160,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":161,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":162,"author":{"gitID":"koo1993"},"content":"    @Override"},{"lineNumber":163,"author":{"gitID":"koo1993"},"content":"    public boolean isCorrectTempPwd(Employee employee, Password tempPassword) {"},{"lineNumber":164,"author":{"gitID":"koo1993"},"content":"        if (!tempPasswordMap.containsKey(employee)) {"},{"lineNumber":165,"author":{"gitID":"koo1993"},"content":"            return false;"},{"lineNumber":166,"author":{"gitID":"koo1993"},"content":"        } else {"},{"lineNumber":167,"author":{"gitID":"koo1993"},"content":"            return tempPasswordMap.get(employee).equals(tempPassword);"},{"lineNumber":168,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":169,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":170,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":171,"author":{"gitID":"koo1993"},"content":"    @Override"},{"lineNumber":172,"author":{"gitID":"koo1993"},"content":"    public boolean isCorrectTempPwd(OutletInformation outlet, Password tempPassword) {"},{"lineNumber":173,"author":{"gitID":"koo1993"},"content":"        if (!tempAdminPasswordMap.containsKey(outlet)) {"},{"lineNumber":174,"author":{"gitID":"koo1993"},"content":"            return false;"},{"lineNumber":175,"author":{"gitID":"koo1993"},"content":"        } else {"},{"lineNumber":176,"author":{"gitID":"koo1993"},"content":"            return tempAdminPasswordMap.get(outlet).equals(tempPassword);"},{"lineNumber":177,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":178,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":179,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":180,"author":{"gitID":"shanwpf"},"content":"    //@@author shanwpf"},{"lineNumber":181,"author":{"gitID":"shanwpf"},"content":"    @Override"},{"lineNumber":182,"author":{"gitID":"shanwpf"},"content":"    public void addShift(Shift shift) throws DuplicateShiftException {"},{"lineNumber":183,"author":{"gitID":"shanwpf"},"content":"        partTimeManager.addShift(shift);"},{"lineNumber":184,"author":{"gitID":"shanwpf"},"content":"        indicatePartTimeManagerChanged();"},{"lineNumber":185,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":186,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":187,"author":{"gitID":"shanwpf"},"content":"    @Override"},{"lineNumber":188,"author":{"gitID":"shanwpf"},"content":"    public ObservableList\u003cShift\u003e getFilteredShiftList() {"},{"lineNumber":189,"author":{"gitID":"shanwpf"},"content":"        SortedList\u003cShift\u003e sortedShiftList \u003d new SortedList\u003c\u003e(filteredShifts, Shift::compareTo);"},{"lineNumber":190,"author":{"gitID":"shanwpf"},"content":"        return FXCollections.unmodifiableObservableList(sortedShiftList);"},{"lineNumber":191,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":192,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":193,"author":{"gitID":"shanwpf"},"content":"    @Override"},{"lineNumber":194,"author":{"gitID":"shanwpf"},"content":"    public void deleteShift(Shift target) throws ShiftNotFoundException {"},{"lineNumber":195,"author":{"gitID":"shanwpf"},"content":"        partTimeManager.removeShift(target);"},{"lineNumber":196,"author":{"gitID":"shanwpf"},"content":"        indicatePartTimeManagerChanged();"},{"lineNumber":197,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":198,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":199,"author":{"gitID":"shanwpf"},"content":"    @Override"},{"lineNumber":200,"author":{"gitID":"shanwpf"},"content":"    public void updateShift(Shift target, Shift editedShift) throws ShiftNotFoundException, DuplicateShiftException {"},{"lineNumber":201,"author":{"gitID":"shanwpf"},"content":"        partTimeManager.updateShift(target, editedShift);"},{"lineNumber":202,"author":{"gitID":"shanwpf"},"content":"        indicatePartTimeManagerChanged();"},{"lineNumber":203,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":204,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":205,"author":{"gitID":"shanwpf"},"content":"    @Override"},{"lineNumber":206,"author":{"gitID":"shanwpf"},"content":"    public void updateFilteredShiftList(Predicate\u003cShift\u003e predicate) {"},{"lineNumber":207,"author":{"gitID":"shanwpf"},"content":"        requireNonNull(predicate);"},{"lineNumber":208,"author":{"gitID":"shanwpf"},"content":"        filteredShifts.setPredicate(predicate);"},{"lineNumber":209,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":210,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":211,"author":{"gitID":"shanwpf"},"content":"    @Override"},{"lineNumber":212,"author":{"gitID":"shanwpf"},"content":"    public void updateEmployee(Employee target, Employee editedEmployee)"},{"lineNumber":213,"author":{"gitID":"shanwpf"},"content":"            throws DuplicateEmployeeException, EmployeeNotFoundException {"},{"lineNumber":214,"author":{"gitID":"shanwpf"},"content":"        requireAllNonNull(target, editedEmployee);"},{"lineNumber":215,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":216,"author":{"gitID":"shanwpf"},"content":"        partTimeManager.updateEmployee(target, editedEmployee);"},{"lineNumber":217,"author":{"gitID":"shanwpf"},"content":"        indicatePartTimeManagerChanged();"},{"lineNumber":218,"author":{"gitID":"shanwpf"},"content":"    }"},{"lineNumber":219,"author":{"gitID":"shanwpf"},"content":""},{"lineNumber":220,"author":{"gitID":"hzxcaryn"},"content":"    //@@author hzxcaryn"},{"lineNumber":221,"author":{"gitID":"hzxcaryn"},"content":"    @Override"},{"lineNumber":222,"author":{"gitID":"hzxcaryn"},"content":"    public void setFilteredShiftListToWeek(LocalDate date) {"},{"lineNumber":223,"author":{"gitID":"hzxcaryn"},"content":"        updateFilteredShiftList(shift -\u003e"},{"lineNumber":224,"author":{"gitID":"hzxcaryn"},"content":"                getWeekFromDate(shift.getDate().getLocalDate()) \u003d\u003d getWeekFromDate(date));"},{"lineNumber":225,"author":{"gitID":"hzxcaryn"},"content":"    }"},{"lineNumber":226,"author":{"gitID":"hzxcaryn"},"content":""},{"lineNumber":227,"author":{"gitID":"SunBangjie"},"content":"    //@@author SunBangjie"},{"lineNumber":228,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":229,"author":{"gitID":"SunBangjie"},"content":"    public void updateOutlet(OutletInformation editedOutlet) throws NoOutletInformationFieldChangeException {"},{"lineNumber":230,"author":{"gitID":"SunBangjie"},"content":"        partTimeManager.updateOutlet(editedOutlet);"},{"lineNumber":231,"author":{"gitID":"SunBangjie"},"content":"        indicateOutletInformationChanged();"},{"lineNumber":232,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":233,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":234,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":235,"author":{"gitID":"SunBangjie"},"content":"    public OutletInformation getOutletInformation() {"},{"lineNumber":236,"author":{"gitID":"SunBangjie"},"content":"        return partTimeManager.getOutletInformation();"},{"lineNumber":237,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":238,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":239,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":240,"author":{"gitID":"SunBangjie"},"content":"    public boolean getEncryptionMode() {"},{"lineNumber":241,"author":{"gitID":"SunBangjie"},"content":"        return getOutletInformation().getEncryptionMode();"},{"lineNumber":242,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":243,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":244,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":245,"author":{"gitID":"SunBangjie"},"content":"    public String getEncryptionModeMessage() {"},{"lineNumber":246,"author":{"gitID":"SunBangjie"},"content":"        return getOutletInformation().getEncryptionModeMessage();"},{"lineNumber":247,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":248,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":249,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":250,"author":{"gitID":"SunBangjie"},"content":"    public void encryptLocalStorage() {"},{"lineNumber":251,"author":{"gitID":"SunBangjie"},"content":"        partTimeManager.encryptLocalStorage();"},{"lineNumber":252,"author":{"gitID":"SunBangjie"},"content":"        indicateEncryptionModeChanged();"},{"lineNumber":253,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":254,"author":{"gitID":"SunBangjie"},"content":""},{"lineNumber":255,"author":{"gitID":"SunBangjie"},"content":"    @Override"},{"lineNumber":256,"author":{"gitID":"SunBangjie"},"content":"    public void decryptLocalStorage() {"},{"lineNumber":257,"author":{"gitID":"SunBangjie"},"content":"        partTimeManager.decryptLocalStorage();"},{"lineNumber":258,"author":{"gitID":"SunBangjie"},"content":"        indicateEncryptionModeChanged();"},{"lineNumber":259,"author":{"gitID":"SunBangjie"},"content":"    }"},{"lineNumber":260,"author":{"gitID":"SunBangjie"},"content":"    //@@author"},{"lineNumber":261,"author":{"gitID":"-"},"content":""},{"lineNumber":262,"author":{"gitID":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Employee List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":263,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":264,"author":{"gitID":"-"},"content":"    public void deleteTagFromAllEmployee(Tag tag) {"},{"lineNumber":265,"author":{"gitID":"-"},"content":"        partTimeManager.removeTagFromAllEmployees(tag);"},{"lineNumber":266,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":267,"author":{"gitID":"-"},"content":""},{"lineNumber":268,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":269,"author":{"gitID":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Employee} backed by the internal list of"},{"lineNumber":270,"author":{"gitID":"-"},"content":"     * {@code partTimeManager}"},{"lineNumber":271,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":272,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":273,"author":{"gitID":"-"},"content":"    public ObservableList\u003cEmployee\u003e getFilteredEmployeeList() {"},{"lineNumber":274,"author":{"gitID":"-"},"content":"        return FXCollections.unmodifiableObservableList(filteredEmployees);"},{"lineNumber":275,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":276,"author":{"gitID":"-"},"content":""},{"lineNumber":277,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":278,"author":{"gitID":"-"},"content":"    public void updateFilteredEmployeeList(Predicate\u003cEmployee\u003e predicate) {"},{"lineNumber":279,"author":{"gitID":"-"},"content":"        requireNonNull(predicate);"},{"lineNumber":280,"author":{"gitID":"-"},"content":"        filteredEmployees.setPredicate(predicate);"},{"lineNumber":281,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":282,"author":{"gitID":"-"},"content":""},{"lineNumber":283,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":284,"author":{"gitID":"-"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":285,"author":{"gitID":"-"},"content":"        // short circuit if same object"},{"lineNumber":286,"author":{"gitID":"-"},"content":"        if (obj \u003d\u003d this) {"},{"lineNumber":287,"author":{"gitID":"-"},"content":"            return true;"},{"lineNumber":288,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":289,"author":{"gitID":"-"},"content":""},{"lineNumber":290,"author":{"gitID":"-"},"content":"        // instanceof handles nulls"},{"lineNumber":291,"author":{"gitID":"-"},"content":"        if (!(obj instanceof ModelManager)) {"},{"lineNumber":292,"author":{"gitID":"-"},"content":"            return false;"},{"lineNumber":293,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":294,"author":{"gitID":"-"},"content":""},{"lineNumber":295,"author":{"gitID":"-"},"content":"        // state check"},{"lineNumber":296,"author":{"gitID":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;"},{"lineNumber":297,"author":{"gitID":"-"},"content":"        return partTimeManager.equals(other.partTimeManager)"},{"lineNumber":298,"author":{"gitID":"-"},"content":"                \u0026\u0026 filteredEmployees.equals(other.filteredEmployees)"},{"lineNumber":299,"author":{"gitID":"-"},"content":"                \u0026\u0026 filteredShifts.equals(other.filteredShifts);"},{"lineNumber":300,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":301,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"shanwpf":40,"koo1993":63,"hzxcaryn":7,"-":145,"SunBangjie":46}},{"path":"src/main/java/seedu/ptman/model/Password.java","lines":[{"lineNumber":1,"author":{"gitID":"koo1993"},"content":"package seedu.ptman.model;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":5,"author":{"gitID":"koo1993"},"content":"import java.nio.charset.StandardCharsets;"},{"lineNumber":6,"author":{"gitID":"koo1993"},"content":"import java.security.MessageDigest;"},{"lineNumber":7,"author":{"gitID":"koo1993"},"content":"import java.security.NoSuchAlgorithmException;"},{"lineNumber":8,"author":{"gitID":"koo1993"},"content":"import java.util.Base64;"},{"lineNumber":9,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.apache.commons.lang.RandomStringUtils;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import com.sun.media.jfxmedia.logging.Logger;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"koo1993"},"content":"//@@author koo1993"},{"lineNumber":16,"author":{"gitID":"koo1993"},"content":"/**"},{"lineNumber":17,"author":{"gitID":"koo1993"},"content":" * Represents a Password in PartTimeManger"},{"lineNumber":18,"author":{"gitID":"koo1993"},"content":" * Store password as hashCode"},{"lineNumber":19,"author":{"gitID":"koo1993"},"content":" */"},{"lineNumber":20,"author":{"gitID":"koo1993"},"content":"public class Password {"},{"lineNumber":21,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":22,"author":{"gitID":"koo1993"},"content":"    public static final String MESSAGE_PASSWORD_CONSTRAINTS \u003d"},{"lineNumber":23,"author":{"gitID":"koo1993"},"content":"            \"Password should be at least 8 character and no spaces.\";"},{"lineNumber":24,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":25,"author":{"gitID":"koo1993"},"content":"    public static final String DEFAULT_PASSWORD \u003d"},{"lineNumber":26,"author":{"gitID":"koo1993"},"content":"            \"DEFAULT1\";"},{"lineNumber":27,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":28,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":29,"author":{"gitID":"koo1993"},"content":"     * accept all password that do not have whitespaces and at least 8 characters."},{"lineNumber":30,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":31,"author":{"gitID":"koo1993"},"content":"    public static final String PASSWORD_VALIDATION_REGEX \u003d \"^(?\u003d\\\\S+$).{8,}$\";"},{"lineNumber":32,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":33,"author":{"gitID":"koo1993"},"content":"    private String passwordHash;"},{"lineNumber":34,"author":{"gitID":"koo1993"},"content":"    private final String initialValue \u003d \"IV\";"},{"lineNumber":35,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":36,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":37,"author":{"gitID":"koo1993"},"content":"     * constructor for default password"},{"lineNumber":38,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":39,"author":{"gitID":"koo1993"},"content":"    public Password() {"},{"lineNumber":40,"author":{"gitID":"koo1993"},"content":"        createPassword(DEFAULT_PASSWORD);"},{"lineNumber":41,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":42,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":43,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":44,"author":{"gitID":"koo1993"},"content":"     * use this if hashcode is known"},{"lineNumber":45,"author":{"gitID":"koo1993"},"content":"     * @param hashCode"},{"lineNumber":46,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":47,"author":{"gitID":"koo1993"},"content":"    public Password(String hashCode) {"},{"lineNumber":48,"author":{"gitID":"koo1993"},"content":"        requireNonNull(hashCode);"},{"lineNumber":49,"author":{"gitID":"koo1993"},"content":"        passwordHash \u003d hashCode;"},{"lineNumber":50,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":51,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":52,"author":{"gitID":"koo1993"},"content":"    public Password(Password masterPassword) {"},{"lineNumber":53,"author":{"gitID":"koo1993"},"content":"        requireNonNull(masterPassword);"},{"lineNumber":54,"author":{"gitID":"koo1993"},"content":"        this.passwordHash \u003d masterPassword.getPasswordHash();"},{"lineNumber":55,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":57,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":58,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":59,"author":{"gitID":"koo1993"},"content":"     * @param test"},{"lineNumber":60,"author":{"gitID":"koo1993"},"content":"     * @return true if password is of correct format"},{"lineNumber":61,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":62,"author":{"gitID":"koo1993"},"content":"    public static boolean isValidPassword(String test) {"},{"lineNumber":63,"author":{"gitID":"koo1993"},"content":"        return test.matches(PASSWORD_VALIDATION_REGEX);"},{"lineNumber":64,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":65,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":66,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":67,"author":{"gitID":"koo1993"},"content":"     * check if passwordHash generated from the string is same as current passwordHash"},{"lineNumber":68,"author":{"gitID":"koo1993"},"content":"     * @param password"},{"lineNumber":69,"author":{"gitID":"koo1993"},"content":"     * @return true if same"},{"lineNumber":70,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":71,"author":{"gitID":"koo1993"},"content":"    public boolean isCorrectPassword(String password) {"},{"lineNumber":72,"author":{"gitID":"koo1993"},"content":"        return passwordHash.equals(generatePasswordHash(password));"},{"lineNumber":73,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":74,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":75,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":76,"author":{"gitID":"koo1993"},"content":"     * Change password given a password"},{"lineNumber":77,"author":{"gitID":"koo1993"},"content":"     * @return true if password is changed"},{"lineNumber":78,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":79,"author":{"gitID":"koo1993"},"content":"    public boolean checkAndChangePassword(String oldPassword, String newPassword) {"},{"lineNumber":80,"author":{"gitID":"koo1993"},"content":"        if (isCorrectPassword(oldPassword)) {"},{"lineNumber":81,"author":{"gitID":"koo1993"},"content":"            createPassword(newPassword);"},{"lineNumber":82,"author":{"gitID":"koo1993"},"content":"            return true;"},{"lineNumber":83,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":84,"author":{"gitID":"koo1993"},"content":"        return false;"},{"lineNumber":85,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":86,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":87,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":88,"author":{"gitID":"koo1993"},"content":"     * Create passwordHash when password is entered in plain text"},{"lineNumber":89,"author":{"gitID":"koo1993"},"content":"     * @param password"},{"lineNumber":90,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":91,"author":{"gitID":"koo1993"},"content":"    public void createPassword(String password) {"},{"lineNumber":92,"author":{"gitID":"koo1993"},"content":"        requireNonNull(password);"},{"lineNumber":93,"author":{"gitID":"koo1993"},"content":"        passwordHash \u003d generatePasswordHash(password);"},{"lineNumber":94,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":95,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":96,"author":{"gitID":"koo1993"},"content":"    public String getPasswordHash() {"},{"lineNumber":97,"author":{"gitID":"koo1993"},"content":"        return passwordHash;"},{"lineNumber":98,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":99,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":100,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":101,"author":{"gitID":"koo1993"},"content":"     * Generate passwordHash given a string password"},{"lineNumber":102,"author":{"gitID":"koo1993"},"content":"     * @param password"},{"lineNumber":103,"author":{"gitID":"koo1993"},"content":"     * @return passwordHash in String"},{"lineNumber":104,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":105,"author":{"gitID":"koo1993"},"content":"    private String generatePasswordHash(String password) {"},{"lineNumber":106,"author":{"gitID":"koo1993"},"content":"        String encodedHash \u003d null;"},{"lineNumber":107,"author":{"gitID":"koo1993"},"content":"        try {"},{"lineNumber":108,"author":{"gitID":"koo1993"},"content":"            MessageDigest digest \u003d MessageDigest.getInstance(\"SHA-256\");"},{"lineNumber":109,"author":{"gitID":"koo1993"},"content":"            digest.update(initialValue.getBytes());"},{"lineNumber":110,"author":{"gitID":"koo1993"},"content":"            byte[] byteHash \u003d digest.digest(password.getBytes(StandardCharsets.UTF_8));"},{"lineNumber":111,"author":{"gitID":"koo1993"},"content":"            encodedHash \u003d Base64.getEncoder().encodeToString(byteHash);"},{"lineNumber":112,"author":{"gitID":"koo1993"},"content":"        } catch (NoSuchAlgorithmException noSuchAlgoException) {"},{"lineNumber":113,"author":{"gitID":"koo1993"},"content":"            Logger.logMsg(Logger.ERROR, \"cannot generate hash: MessageDigest.getInstance\");"},{"lineNumber":114,"author":{"gitID":"koo1993"},"content":"        }"},{"lineNumber":115,"author":{"gitID":"koo1993"},"content":"        return encodedHash;"},{"lineNumber":116,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":117,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":118,"author":{"gitID":"koo1993"},"content":"    /**"},{"lineNumber":119,"author":{"gitID":"koo1993"},"content":"     *"},{"lineNumber":120,"author":{"gitID":"koo1993"},"content":"     * @return random 8 character String password."},{"lineNumber":121,"author":{"gitID":"koo1993"},"content":"     */"},{"lineNumber":122,"author":{"gitID":"koo1993"},"content":"    public static String generateRandomPassword() {"},{"lineNumber":123,"author":{"gitID":"koo1993"},"content":"        String charactersAllowed \u003d \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";"},{"lineNumber":124,"author":{"gitID":"koo1993"},"content":"        String randomPwd \u003d RandomStringUtils.random(8, charactersAllowed);"},{"lineNumber":125,"author":{"gitID":"koo1993"},"content":"        return randomPwd;"},{"lineNumber":126,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":127,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":128,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":129,"author":{"gitID":"koo1993"},"content":"    @Override"},{"lineNumber":130,"author":{"gitID":"koo1993"},"content":"    public boolean equals(Object other) {"},{"lineNumber":131,"author":{"gitID":"koo1993"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":132,"author":{"gitID":"koo1993"},"content":"                || (other instanceof Password // instanceof handles nulls"},{"lineNumber":133,"author":{"gitID":"koo1993"},"content":"                \u0026\u0026 this.passwordHash.equals(((Password) other).passwordHash)); // state check"},{"lineNumber":134,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":135,"author":{"gitID":"koo1993"},"content":""},{"lineNumber":136,"author":{"gitID":"koo1993"},"content":"    @Override"},{"lineNumber":137,"author":{"gitID":"koo1993"},"content":"    public int hashCode() {"},{"lineNumber":138,"author":{"gitID":"koo1993"},"content":"        return passwordHash.hashCode();"},{"lineNumber":139,"author":{"gitID":"koo1993"},"content":"    }"},{"lineNumber":140,"author":{"gitID":"koo1993"},"content":"}"}],"authorContributionMap":{"koo1993":133,"-":7}}]
