var resultJson = [{"path":"docs/ContactUs.adoc","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"\u003d Contact Us"},{"lineNumber":2,"author":{"gitID":"-"},"content":":stylesDir: stylesheets"},{"lineNumber":3,"author":{"gitID":"-"},"content":""},{"lineNumber":4,"author":{"gitID":"mhq199657"},"content":"* *Bug reports, Suggestions* : Post in our https://github.com/CS2103JAN2018-W14-B3/main/issues[issue tracker] if you noticed bugs or have suggestions on how to improve."},{"lineNumber":5,"author":{"gitID":"-"},"content":"* *Contributing* : We welcome pull requests. Follow the process described https://github.com/oss-generic/process[here]"},{"lineNumber":6,"author":{"gitID":"mhq199657"},"content":"* *Email us* : You can also reach us at `e0032596 [at] u.nus.edu`"}],"authorContributionMap":{"mhq199657":2,"-":4}},{"path":"docs/UserGuide.adoc","lines":[{"lineNumber":1,"author":{"gitID":"tanhengyeow"},"content":"\u003d HR+ - User Guide"},{"lineNumber":2,"author":{"gitID":"-"},"content":":toc:"},{"lineNumber":3,"author":{"gitID":"-"},"content":":toc-title:"},{"lineNumber":4,"author":{"gitID":"-"},"content":":toc-placement: preamble"},{"lineNumber":5,"author":{"gitID":"-"},"content":":sectnums:"},{"lineNumber":6,"author":{"gitID":"-"},"content":":imagesDir: images"},{"lineNumber":7,"author":{"gitID":"-"},"content":":stylesDir: stylesheets"},{"lineNumber":8,"author":{"gitID":"-"},"content":":xrefstyle: full"},{"lineNumber":9,"author":{"gitID":"-"},"content":":experimental:"},{"lineNumber":10,"author":{"gitID":"-"},"content":"ifdef::env-github[]"},{"lineNumber":11,"author":{"gitID":"-"},"content":":tip-caption: :bulb:"},{"lineNumber":12,"author":{"gitID":"-"},"content":":note-caption: :information_source:"},{"lineNumber":13,"author":{"gitID":"-"},"content":"endif::[]"},{"lineNumber":14,"author":{"gitID":"-"},"content":":repoURL: https://github.com/CS2103JAN2018-W14-B3/main"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"By: `Team W14-B3`      Since: `Jan 2018`      Licence: `MIT`"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"\u003d\u003d Introduction"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"kexiaowen"},"content":"Welcome to *Human Resources Plus* (*HR+*)! HR+ is a free recruiting and talent management software designed for *campus recruiters* to achieve hiring success. HR+ streamlines your recruiting process, increases your productivity and helps you make more consistent and informed hiring decisions."},{"lineNumber":21,"author":{"gitID":"kexiaowen"},"content":"This guide provides you with everything you need to know about setting up and using various features of HR+ effectively as a campus recruiter. To enjoy the full benefits of HR+, you should be *comfortable using desktop applications* and *working with a Command Line Interface (CLI)*. If you can type fast, HR+ can get your talent management tasks done faster than traditional Graphical User Interface (GUI) applications."},{"lineNumber":22,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":23,"author":{"gitID":"kexiaowen"},"content":"Interested? Navigate to \u003c\u003cQuick Start\u003e\u003e to get started. Enjoy!"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"\u003d\u003d Quick Start"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":".  Ensure you have Java version `1.8.0_60` or later installed in your Computer."},{"lineNumber":28,"author":{"gitID":"-"},"content":"+"},{"lineNumber":29,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":30,"author":{"gitID":"-"},"content":"Having any Java 8 version is not enough. +"},{"lineNumber":31,"author":{"gitID":"-"},"content":"This app will not work with earlier versions of Java 8."},{"lineNumber":32,"author":{"gitID":"-"},"content":"+"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":".  Download the latest `HR.jar` link:{repoURL}/releases[here]."},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":".  Copy the file to the folder you want to use as the home folder for HR+."},{"lineNumber":35,"author":{"gitID":"-"},"content":".  Double-click the file to start the app. The GUI should appear in a few seconds."},{"lineNumber":36,"author":{"gitID":"-"},"content":"+"},{"lineNumber":37,"author":{"gitID":"-"},"content":"image::Ui.png[width\u003d\"790\"]"},{"lineNumber":38,"author":{"gitID":"-"},"content":"+"},{"lineNumber":39,"author":{"gitID":"-"},"content":".  Type the command in the command box and press kbd:[Enter] to execute it. +"},{"lineNumber":40,"author":{"gitID":"-"},"content":"e.g. typing *`help`* and pressing kbd:[Enter] will open the help window."},{"lineNumber":41,"author":{"gitID":"-"},"content":".  Some example commands you can try:"},{"lineNumber":42,"author":{"gitID":"-"},"content":""},{"lineNumber":43,"author":{"gitID":"-"},"content":"* *`list`* : lists all contacts"},{"lineNumber":44,"author":{"gitID":"kexiaowen"},"content":"* **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 u/NUS y/2020 m/Computer Science g/4.93 j/Software Tester` : adds a contact named `John Doe` to the Address Book."},{"lineNumber":45,"author":{"gitID":"-"},"content":"* **`delete`**`3` : deletes the 3rd contact shown in the current list"},{"lineNumber":46,"author":{"gitID":"-"},"content":"* *`exit`* : exits the app"},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":".  Refer to \u003c\u003cFeatures\u003e\u003e for details of each command."},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"-"},"content":"[[Features]]"},{"lineNumber":51,"author":{"gitID":"-"},"content":"\u003d\u003d Features"},{"lineNumber":52,"author":{"gitID":"-"},"content":""},{"lineNumber":53,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d"},{"lineNumber":54,"author":{"gitID":"-"},"content":"*Command Format*"},{"lineNumber":55,"author":{"gitID":"-"},"content":""},{"lineNumber":56,"author":{"gitID":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`."},{"lineNumber":57,"author":{"gitID":"-"},"content":"* Items in square brackets are optional e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`."},{"lineNumber":58,"author":{"gitID":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times e.g. `[t/TAG]...` can be used as `{nbsp}` (i.e. 0 times), `t/friend`, `t/friend t/family` etc."},{"lineNumber":59,"author":{"gitID":"-"},"content":"* Parameters can be in any order e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable."},{"lineNumber":60,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d"},{"lineNumber":61,"author":{"gitID":"-"},"content":""},{"lineNumber":62,"author":{"gitID":"kexiaowen"},"content":"[TIP]"},{"lineNumber":63,"author":{"gitID":"kexiaowen"},"content":"The command keywords and parameters are *case sensitive*."},{"lineNumber":64,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"[TIP]"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"There is a floating real-time parsing panel below the command box that shows parsed results before commands are executed. +"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"However, it only verifies that the command format is correct. Commands that are shown to be \"valid commands\" might not execute successfully. +"},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":"For example, when you use a correct `add` command format to add a duplicate student into HR+, the real time parser shows that it is a valid command but it will not be successfully executed."},{"lineNumber":69,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":70,"author":{"gitID":"tanhengyeow"},"content":"[TIP]"},{"lineNumber":71,"author":{"gitID":"tanhengyeow"},"content":"If you want to hide the real-time parsing panel, press kbd:[Tab]."},{"lineNumber":72,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":73,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Viewing help : `help`"},{"lineNumber":74,"author":{"gitID":"-"},"content":""},{"lineNumber":75,"author":{"gitID":"-"},"content":"Format: `help`"},{"lineNumber":76,"author":{"gitID":"-"},"content":""},{"lineNumber":77,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Adding a person: `add`"},{"lineNumber":78,"author":{"gitID":"-"},"content":""},{"lineNumber":79,"author":{"gitID":"kexiaowen"},"content":"Adds a person to HR+ +"},{"lineNumber":80,"author":{"gitID":"kexiaowen"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS u/UNIVERSITY y/EXPECTED_GRADUATION_YEAR m/MAJOR g/GRADE_POINT_AVERAGE j/JOB_APPLIED [r/RESUME] [i/IMAGE] [c/COMMENT] [t/TAG]...`"},{"lineNumber":81,"author":{"gitID":"-"},"content":""},{"lineNumber":82,"author":{"gitID":"-"},"content":"[TIP]"},{"lineNumber":83,"author":{"gitID":"-"},"content":"A person can have any number of tags (including 0)"},{"lineNumber":84,"author":{"gitID":"-"},"content":""},{"lineNumber":85,"author":{"gitID":"kexiaowen"},"content":"****"},{"lineNumber":86,"author":{"gitID":"kexiaowen"},"content":"* Two student contacts are considered to be duplicates only if they have the same name, phone number, email, address, university, expected graduation year, major and grade point average."},{"lineNumber":87,"author":{"gitID":"kexiaowen"},"content":"* Resume to be added is specified by the relative path to the jar file. It also must be valid PDF, and smaller than 1MB."},{"lineNumber":88,"author":{"gitID":"kexiaowen"},"content":"* Image to be added is specified by the relative path to the jar file and must be smaller than 1MB."},{"lineNumber":89,"author":{"gitID":"kexiaowen"},"content":"****"},{"lineNumber":90,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":91,"author":{"gitID":"-"},"content":"Examples:"},{"lineNumber":92,"author":{"gitID":"-"},"content":""},{"lineNumber":93,"author":{"gitID":"kexiaowen"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 u/NUS y/2020 m/Computer Science g/4.93 j/Software Tester`"},{"lineNumber":94,"author":{"gitID":"kexiaowen"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 u/SMU y/2018 m/Information Security g/4.56 j/Web Security Analyst t/Python`"},{"lineNumber":95,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":96,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Listing all persons : `list`"},{"lineNumber":97,"author":{"gitID":"-"},"content":""},{"lineNumber":98,"author":{"gitID":"kexiaowen"},"content":"Shows a list of all persons in HR+. +"},{"lineNumber":99,"author":{"gitID":"-"},"content":"Format: `list`"},{"lineNumber":100,"author":{"gitID":"-"},"content":""},{"lineNumber":101,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Editing a person : `edit`"},{"lineNumber":102,"author":{"gitID":"-"},"content":""},{"lineNumber":103,"author":{"gitID":"-"},"content":"Edits an existing person in the address book. +"},{"lineNumber":104,"author":{"gitID":"kexiaowen"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [u/UNIVERSITY] [y/EXPECTED_GRADUATION_YEAR] [m/MAJOR] [j/JOB_APPLIED] [r/RESUME] [i/IMAGE] [c/COMMENT] [j/JOB_APPLIED] [t/TAG]...`"},{"lineNumber":105,"author":{"gitID":"-"},"content":""},{"lineNumber":106,"author":{"gitID":"-"},"content":"****"},{"lineNumber":107,"author":{"gitID":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the last person listing. The index *must be a positive integer* 1, 2, 3, ..."},{"lineNumber":108,"author":{"gitID":"-"},"content":"* At least one of the optional fields must be provided."},{"lineNumber":109,"author":{"gitID":"-"},"content":"* Existing values will be updated to the input values."},{"lineNumber":110,"author":{"gitID":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative."},{"lineNumber":111,"author":{"gitID":"mhq199657"},"content":"* You can remove the person\u0027s resume by typing `r/` without specifying any resume after it."},{"lineNumber":112,"author":{"gitID":"-"},"content":"* You can remove all the person\u0027s tags by typing `t/` without specifying any tags after it."},{"lineNumber":113,"author":{"gitID":"-"},"content":"****"},{"lineNumber":114,"author":{"gitID":"-"},"content":""},{"lineNumber":115,"author":{"gitID":"-"},"content":"Examples:"},{"lineNumber":116,"author":{"gitID":"-"},"content":""},{"lineNumber":117,"author":{"gitID":"-"},"content":"* `edit 1 p/91234567 e/johndoe@example.com` +"},{"lineNumber":118,"author":{"gitID":"-"},"content":"Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively."},{"lineNumber":119,"author":{"gitID":"-"},"content":"* `edit 2 n/Betsy Crower t/` +"},{"lineNumber":120,"author":{"gitID":"-"},"content":"Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags."},{"lineNumber":121,"author":{"gitID":"-"},"content":""},{"lineNumber":122,"author":{"gitID":"Ang-YC"},"content":"// tag::interview[]"},{"lineNumber":123,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d Scheduling an interview for a person : `interview` `[since v1.2]`"},{"lineNumber":124,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":125,"author":{"gitID":"Ang-YC"},"content":"Schedules interview of an existing person in HR+. +"},{"lineNumber":126,"author":{"gitID":"Ang-YC"},"content":"Format: `interview INDEX DATE_TIME_EXPRESSION`"},{"lineNumber":127,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":128,"author":{"gitID":"Ang-YC"},"content":"****"},{"lineNumber":129,"author":{"gitID":"Ang-YC"},"content":"* interview command schedules interview for the person at the specified `INDEX`. The index refers to the index number shown in the last person listing. The index *must be a positive integer* 1, 2, 3, etc."},{"lineNumber":130,"author":{"gitID":"Ang-YC"},"content":"* `DATE_TIME_EXPRESSION` is the natural language date and time expression in English"},{"lineNumber":131,"author":{"gitID":"Ang-YC"},"content":"****"},{"lineNumber":132,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":133,"author":{"gitID":"Ang-YC"},"content":"Examples:"},{"lineNumber":134,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":135,"author":{"gitID":"Ang-YC"},"content":"* `interview 1 next Friday at 3pm` +"},{"lineNumber":136,"author":{"gitID":"Ang-YC"},"content":"schedules the interview of the 1st person to be next Friday at 3pm."},{"lineNumber":137,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":138,"author":{"gitID":"Ang-YC"},"content":"* `interview 2 Mar 14 2pm` +"},{"lineNumber":139,"author":{"gitID":"Ang-YC"},"content":"schedules the interview of the 2nd person to be 14 March at 2pm."},{"lineNumber":140,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":141,"author":{"gitID":"Ang-YC"},"content":"Due to the complexity of languages, the parser might fail to interpret what you mean."},{"lineNumber":142,"author":{"gitID":"Ang-YC"},"content":"Always refer to the real time floating panel below the command box (As shown in figure below) to check what is the parsed result."},{"lineNumber":143,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":144,"author":{"gitID":"Ang-YC"},"content":"image::userinterface/float_panel.png[width\u003d\"250\"]"},{"lineNumber":145,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":146,"author":{"gitID":"Ang-YC"},"content":"Below are some of the syntax for natural date and time parser:"},{"lineNumber":147,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":148,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d Formal dates"},{"lineNumber":149,"author":{"gitID":"Ang-YC"},"content":"Formal dates are represented using integers, separated by character - or /."},{"lineNumber":150,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":151,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d\u003d Format"},{"lineNumber":152,"author":{"gitID":"Ang-YC"},"content":"****"},{"lineNumber":153,"author":{"gitID":"Ang-YC"},"content":"- `YYYY-MM-DD`"},{"lineNumber":154,"author":{"gitID":"Ang-YC"},"content":"- `YYYY/MM/DD`"},{"lineNumber":155,"author":{"gitID":"Ang-YC"},"content":"- `MM-DD-YYYY`"},{"lineNumber":156,"author":{"gitID":"Ang-YC"},"content":"- `MM/DD/YYYY`"},{"lineNumber":157,"author":{"gitID":"Ang-YC"},"content":"****"},{"lineNumber":158,"author":{"gitID":"Ang-YC"},"content":"- `DD` represent the day of a month"},{"lineNumber":159,"author":{"gitID":"Ang-YC"},"content":"- `MM` represent the month of a year"},{"lineNumber":160,"author":{"gitID":"Ang-YC"},"content":"- `YYYY` represent the year"},{"lineNumber":161,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":162,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d\u003d Example"},{"lineNumber":163,"author":{"gitID":"Ang-YC"},"content":"|\u003d\u003d\u003d"},{"lineNumber":164,"author":{"gitID":"Ang-YC"},"content":"| *Input*    | *Output*"},{"lineNumber":165,"author":{"gitID":"Ang-YC"},"content":"| 2018-04-21 | 21/04/2018"},{"lineNumber":166,"author":{"gitID":"Ang-YC"},"content":"| 2018/04/21 | 21/04/2018"},{"lineNumber":167,"author":{"gitID":"Ang-YC"},"content":"| 04-21-2018 | 21/04/2018"},{"lineNumber":168,"author":{"gitID":"Ang-YC"},"content":"| 04/21/2018 | 21/04/2018"},{"lineNumber":169,"author":{"gitID":"Ang-YC"},"content":"|\u003d\u003d\u003d"},{"lineNumber":170,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":171,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d Relaxed dates"},{"lineNumber":172,"author":{"gitID":"Ang-YC"},"content":"Relaxed dates are those in which the information are provided as words instead of integers."},{"lineNumber":173,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":174,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d\u003d Example"},{"lineNumber":175,"author":{"gitID":"Ang-YC"},"content":"|\u003d\u003d\u003d"},{"lineNumber":176,"author":{"gitID":"Ang-YC"},"content":"| *Input*          | *Output*"},{"lineNumber":177,"author":{"gitID":"Ang-YC"},"content":"| 21st April 2018  | 21/04/2018"},{"lineNumber":178,"author":{"gitID":"Ang-YC"},"content":"| Sat, 21 Apr 2018 | 21/04/2018"},{"lineNumber":179,"author":{"gitID":"Ang-YC"},"content":"| Apr 21           | 21/04, the year when the command executed"},{"lineNumber":180,"author":{"gitID":"Ang-YC"},"content":"|\u003d\u003d\u003d"},{"lineNumber":181,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":182,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d Relative dates"},{"lineNumber":183,"author":{"gitID":"Ang-YC"},"content":"Relative dates are those that are relative to the current date."},{"lineNumber":184,"author":{"gitID":"Ang-YC"},"content":"Do note that a week starts on Sunday and ends on the next Saturday."},{"lineNumber":185,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":186,"author":{"gitID":"Ang-YC"},"content":"****"},{"lineNumber":187,"author":{"gitID":"Ang-YC"},"content":"- `YYYY-MM-DD`"},{"lineNumber":188,"author":{"gitID":"Ang-YC"},"content":"- `YYYY/MM/DD`"},{"lineNumber":189,"author":{"gitID":"Ang-YC"},"content":"- `MM-DD-YYYY`"},{"lineNumber":190,"author":{"gitID":"Ang-YC"},"content":"- `MM/DD/YYYY`"},{"lineNumber":191,"author":{"gitID":"Ang-YC"},"content":"****"},{"lineNumber":192,"author":{"gitID":"Ang-YC"},"content":"- `DD` represent the day of a month"},{"lineNumber":193,"author":{"gitID":"Ang-YC"},"content":"- `MM` represent the month of a year"},{"lineNumber":194,"author":{"gitID":"Ang-YC"},"content":"- `YYYY` represent the year"},{"lineNumber":195,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":196,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d\u003d Format"},{"lineNumber":197,"author":{"gitID":"Ang-YC"},"content":"****"},{"lineNumber":198,"author":{"gitID":"Ang-YC"},"content":"- next `DAY`"},{"lineNumber":199,"author":{"gitID":"Ang-YC"},"content":"- last `DAY`"},{"lineNumber":200,"author":{"gitID":"Ang-YC"},"content":"- `NUMBER` days from now"},{"lineNumber":201,"author":{"gitID":"Ang-YC"},"content":"- `NUMBER` weeks ago"},{"lineNumber":202,"author":{"gitID":"Ang-YC"},"content":"****"},{"lineNumber":203,"author":{"gitID":"Ang-YC"},"content":"- `DAY` represent the day of the week (Monday, Tuesday, ...)"},{"lineNumber":204,"author":{"gitID":"Ang-YC"},"content":"- `NUMBER` represent the integer or word representation of a number (1, two, 5)"},{"lineNumber":205,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":206,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d\u003d Example"},{"lineNumber":207,"author":{"gitID":"Ang-YC"},"content":"|\u003d\u003d\u003d"},{"lineNumber":208,"author":{"gitID":"Ang-YC"},"content":"| *Input*          | *Output*"},{"lineNumber":209,"author":{"gitID":"Ang-YC"},"content":"| next thursday    | Next Thursday after the command executed"},{"lineNumber":210,"author":{"gitID":"Ang-YC"},"content":"| last wednesday   | The Wednesday before the command executed"},{"lineNumber":211,"author":{"gitID":"Ang-YC"},"content":"| today            | The day when the command executed"},{"lineNumber":212,"author":{"gitID":"Ang-YC"},"content":"| tomorrow         | The next day after the command executed"},{"lineNumber":213,"author":{"gitID":"Ang-YC"},"content":"| yesterday        | The day before the command executed"},{"lineNumber":214,"author":{"gitID":"Ang-YC"},"content":"| 3 days from now  | 3 days after the command executed"},{"lineNumber":215,"author":{"gitID":"Ang-YC"},"content":"| three weeks ago  | 3 weeks before the command executed"},{"lineNumber":216,"author":{"gitID":"Ang-YC"},"content":"|\u003d\u003d\u003d"},{"lineNumber":217,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":218,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d Time"},{"lineNumber":219,"author":{"gitID":"Ang-YC"},"content":"Time of a day."},{"lineNumber":220,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":221,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d\u003d Format"},{"lineNumber":222,"author":{"gitID":"Ang-YC"},"content":"****"},{"lineNumber":223,"author":{"gitID":"Ang-YC"},"content":"- `HH`[`MM`][`SS`][`MERIDIAN`]"},{"lineNumber":224,"author":{"gitID":"Ang-YC"},"content":"- [`WORD`]"},{"lineNumber":225,"author":{"gitID":"Ang-YC"},"content":"****"},{"lineNumber":226,"author":{"gitID":"Ang-YC"},"content":"- `HH` represent the hour of a day (Range of 00-23)"},{"lineNumber":227,"author":{"gitID":"Ang-YC"},"content":"- `MM` represent the minute of an hour (Range of 00-59), optional"},{"lineNumber":228,"author":{"gitID":"Ang-YC"},"content":"- `SS` represent the second of a minute (Range of 00-59), optional"},{"lineNumber":229,"author":{"gitID":"Ang-YC"},"content":"- `MERIDIAN` indicates the meridian (a, p, am, pm, a.m., p.m.), optional"},{"lineNumber":230,"author":{"gitID":"Ang-YC"},"content":"- `WORD` can be any of (afternoon: 12pm, noon: 12pm, midnight: 12am, morning: 8am, evening: 7pm)"},{"lineNumber":231,"author":{"gitID":"Ang-YC"},"content":"- : can be added to separate between HH, MM and SS (such as 21:00)"},{"lineNumber":232,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":233,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d\u003d Example"},{"lineNumber":234,"author":{"gitID":"Ang-YC"},"content":"|\u003d\u003d\u003d"},{"lineNumber":235,"author":{"gitID":"Ang-YC"},"content":"| *Input*    | *Output*"},{"lineNumber":236,"author":{"gitID":"Ang-YC"},"content":"| 21         | 9:00:00pm"},{"lineNumber":237,"author":{"gitID":"Ang-YC"},"content":"| 232015     | 11:20:15pm"},{"lineNumber":238,"author":{"gitID":"Ang-YC"},"content":"| 21:00      | 9:00:00pm"},{"lineNumber":239,"author":{"gitID":"Ang-YC"},"content":"| 8a         | 8:00:00am"},{"lineNumber":240,"author":{"gitID":"Ang-YC"},"content":"| 7am        | 7:00:00am"},{"lineNumber":241,"author":{"gitID":"Ang-YC"},"content":"| 6:30 a.m.  | 6:30:00am"},{"lineNumber":242,"author":{"gitID":"Ang-YC"},"content":"| afternoon  | 12:00:00pm"},{"lineNumber":243,"author":{"gitID":"Ang-YC"},"content":"| midnight   | 12:00:00am"},{"lineNumber":244,"author":{"gitID":"Ang-YC"},"content":"|\u003d\u003d\u003d"},{"lineNumber":245,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":246,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d Relative Time"},{"lineNumber":247,"author":{"gitID":"Ang-YC"},"content":"Similar to relative dates, it is used to specify time that are relative to the current time."},{"lineNumber":248,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":249,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d\u003d Format"},{"lineNumber":250,"author":{"gitID":"Ang-YC"},"content":"****"},{"lineNumber":251,"author":{"gitID":"Ang-YC"},"content":"- `NUMBER` `UNIT` ago"},{"lineNumber":252,"author":{"gitID":"Ang-YC"},"content":"- `NUMBER` `UNIT` from now"},{"lineNumber":253,"author":{"gitID":"Ang-YC"},"content":"- `NUMBER` `UNIT` later"},{"lineNumber":254,"author":{"gitID":"Ang-YC"},"content":"- in `NUMBER` `UNIT`"},{"lineNumber":255,"author":{"gitID":"Ang-YC"},"content":"****"},{"lineNumber":256,"author":{"gitID":"Ang-YC"},"content":"- `NUMBER` represent the integer or word representation of a number (1, two, 5)"},{"lineNumber":257,"author":{"gitID":"Ang-YC"},"content":"- `UNIT` represent the unit of the"},{"lineNumber":258,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":259,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d\u003d Example"},{"lineNumber":260,"author":{"gitID":"Ang-YC"},"content":"|\u003d\u003d\u003d"},{"lineNumber":261,"author":{"gitID":"Ang-YC"},"content":"| *Input*             | *Output*"},{"lineNumber":262,"author":{"gitID":"Ang-YC"},"content":"| 10 seconds ago      | 10 second before the command executed"},{"lineNumber":263,"author":{"gitID":"Ang-YC"},"content":"| 4 minutes from now  | 4 minutes after the command executed"},{"lineNumber":264,"author":{"gitID":"Ang-YC"},"content":"| 8 hours later       | 8 hours after the command executed"},{"lineNumber":265,"author":{"gitID":"Ang-YC"},"content":"| in 5 minutes        | 5 minutes after the command executed"},{"lineNumber":266,"author":{"gitID":"Ang-YC"},"content":"|\u003d\u003d\u003d"},{"lineNumber":267,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":268,"author":{"gitID":"Ang-YC"},"content":"The syntax above is just part of the accepted values, detailed grammar definition can be found on http://natty.joestelmach.com/doc.jsp[Natty\u0027s documentation]"},{"lineNumber":269,"author":{"gitID":"Ang-YC"},"content":"// end::interview[]"},{"lineNumber":270,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":271,"author":{"gitID":"tanhengyeow"},"content":"// tag::find[]"},{"lineNumber":272,"author":{"gitID":"tanhengyeow"},"content":"\u003d\u003d\u003d Locating persons by field: `find` `[since v1.2]`"},{"lineNumber":273,"author":{"gitID":"-"},"content":""},{"lineNumber":274,"author":{"gitID":"tanhengyeow"},"content":"Finds persons whose fields contain any of the given keywords. +"},{"lineNumber":275,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":276,"author":{"gitID":"tanhengyeow"},"content":"Option 1: `find KEYWORD, [MORE_KEYWORDS]`"},{"lineNumber":277,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":278,"author":{"gitID":"tanhengyeow"},"content":"Option 2: `find prefix/KEYWORD, [MORE KEYWORDS] prefix/...`"},{"lineNumber":279,"author":{"gitID":"-"},"content":""},{"lineNumber":280,"author":{"gitID":"-"},"content":"****"},{"lineNumber":281,"author":{"gitID":"tanhengyeow"},"content":"These are the prefixes supported by the `find` command: +"},{"lineNumber":282,"author":{"gitID":"tanhengyeow"},"content":"1. Name -  `n/` +"},{"lineNumber":283,"author":{"gitID":"tanhengyeow"},"content":"2. Phone - `p/` +"},{"lineNumber":284,"author":{"gitID":"tanhengyeow"},"content":"3. Email - `e/` +"},{"lineNumber":285,"author":{"gitID":"tanhengyeow"},"content":"4. Address - `a/` +"},{"lineNumber":286,"author":{"gitID":"tanhengyeow"},"content":"5. University - `u/` +"},{"lineNumber":287,"author":{"gitID":"tanhengyeow"},"content":"6. Major - `m/` +"},{"lineNumber":288,"author":{"gitID":"tanhengyeow"},"content":"7. Job Applied - `j/` +"},{"lineNumber":289,"author":{"gitID":"tanhengyeow"},"content":"8. Comment - `c/` +"},{"lineNumber":290,"author":{"gitID":"-"},"content":""},{"lineNumber":291,"author":{"gitID":"tanhengyeow"},"content":"These are 3 types of features that are supported for the `find` command: +"},{"lineNumber":292,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":293,"author":{"gitID":"tanhengyeow"},"content":"1. Exact keyword match - Matches your search keyword with exact keywords found in the fields of persons. +"},{"lineNumber":294,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":295,"author":{"gitID":"tanhengyeow"},"content":"2. Fuzzy keyword match - Matches your search keyword that is a fuzzy match with keywords found in the fields of persons. The fuzzy matching algorithm is based on the `Levenshtein distance (LD)` , which is a measure of the similarity between two strings. The threshold is set to `2` in HR+. This means that any keyword that is 2 characters different from the search keyword will be detected. If you are interested in finding out how the fuzzy match algorithm works, you can refer to the Java API on how this method is implemented."},{"lineNumber":296,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":297,"author":{"gitID":"tanhengyeow"},"content":"3. Wildcard keyword match – Matches your search keyword with 3 types of wildcard support. You should substitute the keyword \" example \" with your desired keyword. +"},{"lineNumber":298,"author":{"gitID":"tanhengyeow"},"content":"• Wildcard \"example\" searches for field that contains keyword example"},{"lineNumber":299,"author":{"gitID":"tanhengyeow"},"content":"• Wildcard *example searches for field that ends with keyword example"},{"lineNumber":300,"author":{"gitID":"tanhengyeow"},"content":"• Wildcard example* searches for field that starts with keyword example"},{"lineNumber":301,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":302,"author":{"gitID":"tanhengyeow"},"content":"Search results are displayed in the application console. The format is: +"},{"lineNumber":303,"author":{"gitID":"tanhengyeow"},"content":"`TYPE OF SEARCH MATCH` +"},{"lineNumber":304,"author":{"gitID":"tanhengyeow"},"content":"`KEYWORD: (PREFIX)MATCHED KEYWORD` +"},{"lineNumber":305,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":306,"author":{"gitID":"tanhengyeow"},"content":"(PREFIX) - represents which field the matched keyword was in. +"},{"lineNumber":307,"author":{"gitID":"tanhengyeow"},"content":"****"},{"lineNumber":308,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":309,"author":{"gitID":"tanhengyeow"},"content":"The fuzzy search algorithm is implemented to cater to users that fit the following profiles: +"},{"lineNumber":310,"author":{"gitID":"tanhengyeow"},"content":"1. Unsure what they want to search for +"},{"lineNumber":311,"author":{"gitID":"tanhengyeow"},"content":"2. Aware of some patterns of the keywords but not the full keyword +"},{"lineNumber":312,"author":{"gitID":"tanhengyeow"},"content":"3. Prone to typos +"},{"lineNumber":313,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":314,"author":{"gitID":"tanhengyeow"},"content":"If you are certain that you want to find a certain keyword, please use the wildcard `\"example\"` so that all fields that contains the search keyword would be displayed only. Customizing fuzzy searching is one of our considerations for `v2.0`."},{"lineNumber":315,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":316,"author":{"gitID":"tanhengyeow"},"content":"Examples: +"},{"lineNumber":317,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":318,"author":{"gitID":"tanhengyeow"},"content":"[TIP]"},{"lineNumber":319,"author":{"gitID":"tanhengyeow"},"content":"General tips are not repeated across different examples!"},{"lineNumber":320,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":321,"author":{"gitID":"tanhengyeow"},"content":"* `find bernice, charlot` +"},{"lineNumber":322,"author":{"gitID":"tanhengyeow"},"content":"Returns list of persons whose keywords in **any** of their fields are of an exact keyword match **OR** fuzzy keyword match with `bernice` **OR** `charlot`. In the sample data provided, the list will return persons `Bernice Yu` and `Charlotte Oliveiro`. Keyword `bernice` is an exact keyword match with one of the keywords `Bernice` and `charlot` is a fuzzy keyword match with one of the keywords `Charlotte` in `Charlotte Oliveiro`."},{"lineNumber":323,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":324,"author":{"gitID":"tanhengyeow"},"content":"[TIP]"},{"lineNumber":325,"author":{"gitID":"tanhengyeow"},"content":"The search is case insensitive in HR+. e.g `bernice` might match `Bernice`. +"},{"lineNumber":326,"author":{"gitID":"tanhengyeow"},"content":"Different keywords should be **comma separated**, if not it will be treated as one keyword in HR+. +"},{"lineNumber":327,"author":{"gitID":"tanhengyeow"},"content":"All fields are searched if no prefix is supplied **first** in HR+. If the first keyword does not **start** with a valid prefix, this command would assume a global search for **all** fields. A global search does an **OR** search between keywords. +"},{"lineNumber":328,"author":{"gitID":"tanhengyeow"},"content":"Persons matching at least one keyword will be returned in HR+. +"},{"lineNumber":329,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":330,"author":{"gitID":"tanhengyeow"},"content":"* `find e/alexyeoh@example.com, lidavxx@example.com j/Software p/87438807` +"},{"lineNumber":331,"author":{"gitID":"tanhengyeow"},"content":"Returns list of persons that matches the following conditions: +"},{"lineNumber":332,"author":{"gitID":"tanhengyeow"},"content":"1. Keywords in their `email` field are of an exact match **OR** fuzzy match with `alexyeoh@example.com` **OR** `lidavxx@example.com` **AND** +"},{"lineNumber":333,"author":{"gitID":"tanhengyeow"},"content":"2. Keywords in their `job applied` field are of an exact match **OR** fuzzy match with `Software` **AND** +"},{"lineNumber":334,"author":{"gitID":"tanhengyeow"},"content":"3. Keywords in their `phone` field are of an exact match **OR** fuzzy match with `87438807`. +"},{"lineNumber":335,"author":{"gitID":"tanhengyeow"},"content":"In the sample data provided, the list will return person `Alex` as he is the only person that matches all these conditions."},{"lineNumber":336,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":337,"author":{"gitID":"tanhengyeow"},"content":"[TIP]"},{"lineNumber":338,"author":{"gitID":"tanhengyeow"},"content":"The first keyword is prepended with a prefix, thus this command assumes a prefix search. A prefix search does an **OR** search between keywords in the same prefix and an **AND** search between different prefixes. +"},{"lineNumber":339,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":340,"author":{"gitID":"tanhengyeow"},"content":"* `find Mohammed, Julius, n/test@example.com` +"},{"lineNumber":341,"author":{"gitID":"tanhengyeow"},"content":"Returns list of persons whose keywords in **any** of their fields that are of an exact match **OR** fuzzy match with `Mohammed`, `Julius` **OR** `n/test@example.com`. In the sample data provided, the list will return persons `Julius Hassange` and `Mohammed Lee`. +"},{"lineNumber":342,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":343,"author":{"gitID":"tanhengyeow"},"content":"[TIP]"},{"lineNumber":344,"author":{"gitID":"tanhengyeow"},"content":"The prefix is not accounted for in the third keyword as the first keyword does not **start** with a valid prefix."},{"lineNumber":345,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":346,"author":{"gitID":"tanhengyeow"},"content":"* `find alex bernice david` +"},{"lineNumber":347,"author":{"gitID":"tanhengyeow"},"content":"Returns list of persons whose keywords in **any** of their fields that are of an exact match **OR** fuzzy match with `alex bernice david`. In the sample data provided, this command will return an empty list."},{"lineNumber":348,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":349,"author":{"gitID":"tanhengyeow"},"content":"* `find n/alex bernice david p/98293213 92421423` +"},{"lineNumber":350,"author":{"gitID":"tanhengyeow"},"content":"Returns list of persons that matches the following conditions: +"},{"lineNumber":351,"author":{"gitID":"tanhengyeow"},"content":"1. Keywords in their `name` field are of an exact match **OR** fuzzy match with keyword `alex bernice david` **AND** +"},{"lineNumber":352,"author":{"gitID":"tanhengyeow"},"content":"2. Keywords in their `phone` field are of an exact match **OR** fuzzy match with keyword `98293213 92421423` +"},{"lineNumber":353,"author":{"gitID":"tanhengyeow"},"content":"In the sample data provided, this command will return an empty list. +"},{"lineNumber":354,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":355,"author":{"gitID":"tanhengyeow"},"content":"[TIP]"},{"lineNumber":356,"author":{"gitID":"tanhengyeow"},"content":"Keywords are not comma separated, thus they are treated as one keyword."},{"lineNumber":357,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":358,"author":{"gitID":"tanhengyeow"},"content":"* `find bernice, \"alex\", ir\u0026ast;, \u0026ast;li` +"},{"lineNumber":359,"author":{"gitID":"tanhengyeow"},"content":"Returns list of persons with **any** of their fields that matches the following conditions: +"},{"lineNumber":360,"author":{"gitID":"tanhengyeow"},"content":"1. Keywords that are of an exact match **OR** fuzzy match with keyword `bernice` **OR**"},{"lineNumber":361,"author":{"gitID":"tanhengyeow"},"content":"2. Field contains keyword `alex` **OR**"},{"lineNumber":362,"author":{"gitID":"tanhengyeow"},"content":"3. Field starts with keyword `ir` **OR**"},{"lineNumber":363,"author":{"gitID":"tanhengyeow"},"content":"4. Field ends with keyword `li` +"},{"lineNumber":364,"author":{"gitID":"tanhengyeow"},"content":"In the sample data provided, this command will return persons `Alex Yeoh`, `Bernice Yu`, `David Li` and `Irfan Ibrahim`. +"},{"lineNumber":365,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":366,"author":{"gitID":"tanhengyeow"},"content":"* `find n/bernice, \"alex\", ir\u0026ast;, \u0026ast;li e/\u0026ast;example.com p/\"5\" m/Computer\u0026ast;` +"},{"lineNumber":367,"author":{"gitID":"tanhengyeow"},"content":"Returns list of persons with matches the following conditions: +"},{"lineNumber":368,"author":{"gitID":"tanhengyeow"},"content":"1. `Name` field with keywords that are of an exact match **OR** fuzzy match with keyword `bernice` **OR** contains keyword `alex` **OR** starts with `ir` **OR** ends with `li` **AND** +"},{"lineNumber":369,"author":{"gitID":"tanhengyeow"},"content":"2. `Email` field ends with keyword `example.com` **AND** +"},{"lineNumber":370,"author":{"gitID":"tanhengyeow"},"content":"3. `Phone` field contains keyword `5` **AND** +"},{"lineNumber":371,"author":{"gitID":"tanhengyeow"},"content":"4. `Major` field starts with keyword `Computer` +"},{"lineNumber":372,"author":{"gitID":"tanhengyeow"},"content":"In the sample data provided, the list with return person `Bernice` as she is the only person that matches all these conditions."},{"lineNumber":373,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":374,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":375,"author":{"gitID":"tanhengyeow"},"content":"* `find berni, charlot, bernice, charlotte` +"},{"lineNumber":376,"author":{"gitID":"tanhengyeow"},"content":"Returns list of persons whose keywords in **any** of their fields that are of an exact match **OR** fuzzy match with `berni` **OR** `charlot` **OR** `bernice` **OR** `charlotte`. In the sample data provided, the list will return persons `Bernice Yu` and `Charlotte Oliveiro`. +"},{"lineNumber":377,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":378,"author":{"gitID":"tanhengyeow"},"content":"Below shows how the application console looks like when this command is executed:"},{"lineNumber":379,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":380,"author":{"gitID":"tanhengyeow"},"content":"****"},{"lineNumber":381,"author":{"gitID":"tanhengyeow"},"content":"Exact word search matches: +"},{"lineNumber":382,"author":{"gitID":"tanhengyeow"},"content":"charlotte: - +"},{"lineNumber":383,"author":{"gitID":"tanhengyeow"},"content":"charlot: - +"},{"lineNumber":384,"author":{"gitID":"tanhengyeow"},"content":"bernice: - +"},{"lineNumber":385,"author":{"gitID":"tanhengyeow"},"content":"berni: - +"},{"lineNumber":386,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":387,"author":{"gitID":"tanhengyeow"},"content":"Fuzzy search matches: +"},{"lineNumber":388,"author":{"gitID":"tanhengyeow"},"content":"charlotte: - +"},{"lineNumber":389,"author":{"gitID":"tanhengyeow"},"content":"charlot: (n/)Charlotte +"},{"lineNumber":390,"author":{"gitID":"tanhengyeow"},"content":"bernice: - +"},{"lineNumber":391,"author":{"gitID":"tanhengyeow"},"content":"berni: (n/)Bernice +"},{"lineNumber":392,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":393,"author":{"gitID":"tanhengyeow"},"content":"Wildcard search matches: +"},{"lineNumber":394,"author":{"gitID":"tanhengyeow"},"content":"****"},{"lineNumber":395,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":396,"author":{"gitID":"tanhengyeow"},"content":"[TIP]"},{"lineNumber":397,"author":{"gitID":"tanhengyeow"},"content":"When a search keyword matches a person first, subsequent search keywords that matches the same person would be reflected in the application console as `-`."},{"lineNumber":398,"author":{"gitID":"tanhengyeow"},"content":"// end::find[]"},{"lineNumber":399,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":400,"author":{"gitID":"mhq199657"},"content":"// tag::filter[]"},{"lineNumber":401,"author":{"gitID":"kexiaowen"},"content":"\u003d\u003d\u003d Filter persons by multiple fields: `filter` `[since v1.3]`"},{"lineNumber":402,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":403,"author":{"gitID":"mhq199657"},"content":"Filters persons whose keyword is within the specified range."},{"lineNumber":404,"author":{"gitID":"mhq199657"},"content":"Format: `filter [y/KEYWORD_RANGE] [r/KEYWORD_RANGE]`"},{"lineNumber":405,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":406,"author":{"gitID":"mhq199657"},"content":"* Keyword is in the format of (1) `KEYWORD` or (2) `KEYWORD1 - KEYWORD2` or (3) a combination of (1) and (2) `KEYWORD1, KEYWORD2 - KEYWORD3, KEYWORD4`."},{"lineNumber":407,"author":{"gitID":"mhq199657"},"content":"* Each keyword must be valid with respect to the preceding prefix."},{"lineNumber":408,"author":{"gitID":"mhq199657"},"content":"* `filter` command will only be filtering based on the current view of the person list, instead of all the persons."},{"lineNumber":409,"author":{"gitID":"mhq199657"},"content":"* Within each prefix, `filter` command will match all entries that satisfies at least one keyword range. You can think of an `OR` operator within the prefix."},{"lineNumber":410,"author":{"gitID":"mhq199657"},"content":"* `filter` command will match all persons that only matches every prefixes. You can think of an `AND` operator between all prefixes."},{"lineNumber":411,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":412,"author":{"gitID":"mhq199657"},"content":"Examples:"},{"lineNumber":413,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":414,"author":{"gitID":"mhq199657"},"content":"* `filter y/2020` +"},{"lineNumber":415,"author":{"gitID":"mhq199657"},"content":"Returns all persons whose graudation year that is exactly 2020"},{"lineNumber":416,"author":{"gitID":"tanhengyeow"},"content":"* `filter y/2019-2021 r/4.3, 4.5-5.0`"},{"lineNumber":417,"author":{"gitID":"tanhengyeow"},"content":"Returns all persons whose graduation year between 2019 and 2021, and whose overall rating score is either 4.3, or between 4.5 to 5.0"},{"lineNumber":418,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":419,"author":{"gitID":"mhq199657"},"content":"Since v1.4, filter command supports filtering by cGPA and interview date. It now takes the format:"},{"lineNumber":420,"author":{"gitID":"mhq199657"},"content":"`Format: `filter [y/KEYWORD_RANGE] [r/KEYWORD_RANGE] [g/CGPA_RANGE] [d/INTERVIEW_DATE_RANGE]`"},{"lineNumber":421,"author":{"gitID":"mhq199657"},"content":"// end::filter[]"},{"lineNumber":422,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":423,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Deleting a person : `delete`"},{"lineNumber":424,"author":{"gitID":"-"},"content":""},{"lineNumber":425,"author":{"gitID":"-"},"content":"Deletes the specified person from the address book. +"},{"lineNumber":426,"author":{"gitID":"-"},"content":"Format: `delete INDEX`"},{"lineNumber":427,"author":{"gitID":"-"},"content":""},{"lineNumber":428,"author":{"gitID":"-"},"content":"****"},{"lineNumber":429,"author":{"gitID":"-"},"content":"* Deletes the person at the specified `INDEX`."},{"lineNumber":430,"author":{"gitID":"-"},"content":"* The index refers to the index number shown in the most recent listing."},{"lineNumber":431,"author":{"gitID":"-"},"content":"* The index *must be a positive integer* 1, 2, 3, ..."},{"lineNumber":432,"author":{"gitID":"-"},"content":"****"},{"lineNumber":433,"author":{"gitID":"-"},"content":""},{"lineNumber":434,"author":{"gitID":"-"},"content":"Examples:"},{"lineNumber":435,"author":{"gitID":"-"},"content":""},{"lineNumber":436,"author":{"gitID":"-"},"content":"* `list` +"},{"lineNumber":437,"author":{"gitID":"-"},"content":"`delete 2` +"},{"lineNumber":438,"author":{"gitID":"-"},"content":"Deletes the 2nd person in the address book."},{"lineNumber":439,"author":{"gitID":"-"},"content":"* `find Betsy` +"},{"lineNumber":440,"author":{"gitID":"-"},"content":"`delete 1` +"},{"lineNumber":441,"author":{"gitID":"-"},"content":"Deletes the 1st person in the results of the `find` command."},{"lineNumber":442,"author":{"gitID":"-"},"content":""},{"lineNumber":443,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Selecting a person : `select`"},{"lineNumber":444,"author":{"gitID":"-"},"content":""},{"lineNumber":445,"author":{"gitID":"-"},"content":"Selects the person identified by the index number used in the last person listing. +"},{"lineNumber":446,"author":{"gitID":"-"},"content":"Format: `select INDEX`"},{"lineNumber":447,"author":{"gitID":"-"},"content":""},{"lineNumber":448,"author":{"gitID":"-"},"content":"****"},{"lineNumber":449,"author":{"gitID":"-"},"content":"* Selects the person and loads the Google search page the person at the specified `INDEX`."},{"lineNumber":450,"author":{"gitID":"-"},"content":"* The index refers to the index number shown in the most recent listing."},{"lineNumber":451,"author":{"gitID":"-"},"content":"* The index *must be a positive integer* `1, 2, 3, ...`"},{"lineNumber":452,"author":{"gitID":"-"},"content":"****"},{"lineNumber":453,"author":{"gitID":"-"},"content":""},{"lineNumber":454,"author":{"gitID":"-"},"content":"Examples:"},{"lineNumber":455,"author":{"gitID":"-"},"content":""},{"lineNumber":456,"author":{"gitID":"-"},"content":"* `list` +"},{"lineNumber":457,"author":{"gitID":"-"},"content":"`select 2` +"},{"lineNumber":458,"author":{"gitID":"-"},"content":"Selects the 2nd person in the address book."},{"lineNumber":459,"author":{"gitID":"-"},"content":"* `find Betsy` +"},{"lineNumber":460,"author":{"gitID":"-"},"content":"`select 1` +"},{"lineNumber":461,"author":{"gitID":"-"},"content":"Selects the 1st person in the results of the `find` command."},{"lineNumber":462,"author":{"gitID":"-"},"content":""},{"lineNumber":463,"author":{"gitID":"kexiaowen"},"content":"// tag::rate[]"},{"lineNumber":464,"author":{"gitID":"kexiaowen"},"content":"\u003d\u003d\u003d Rating a student : `rate` `[since v1.1]`"},{"lineNumber":465,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":466,"author":{"gitID":"kexiaowen"},"content":"Rates the student identified by the index number used in the last person listing based on technical, communication, problem solving skills and experience. +"},{"lineNumber":467,"author":{"gitID":"kexiaowen"},"content":"Format: `rate INDEX t/TECHNICAL_SKILLS_SCORE c/COMMUNICATION_SKILLS_SCORE p/PROBLEM_SOLVING_SKILLS_SCORE e/EXPERIENCE_SKILLS_SCORE`"},{"lineNumber":468,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":469,"author":{"gitID":"kexiaowen"},"content":"****"},{"lineNumber":470,"author":{"gitID":"kexiaowen"},"content":"* Rates the student at the specified `INDEX`. The index refers to the index number shown in the last person listing. The index *must be a positive integer* such as 1, 2, 3, ..."},{"lineNumber":471,"author":{"gitID":"kexiaowen"},"content":"* All four rating scores need to be supplied."},{"lineNumber":472,"author":{"gitID":"kexiaowen"},"content":"* The scores should be a number in the range of *1 to 5* (inclusive). Scores with more than two decimal places are rounded to *two decimal places*."},{"lineNumber":473,"author":{"gitID":"kexiaowen"},"content":"* The overall rating of a student is computed as the average of the four rating scores, rounded to two decimal places."},{"lineNumber":474,"author":{"gitID":"kexiaowen"},"content":"****"},{"lineNumber":475,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":476,"author":{"gitID":"kexiaowen"},"content":"[TIP]"},{"lineNumber":477,"author":{"gitID":"kexiaowen"},"content":"If you have rated the student, you will NOT be able to use the `rate` command on the same student again. Please use the `rating-edit` command to overwrite existing scores."},{"lineNumber":478,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":479,"author":{"gitID":"kexiaowen"},"content":"Examples:"},{"lineNumber":480,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":481,"author":{"gitID":"kexiaowen"},"content":"* `rate 1 t/4.5 c/3 p/4 e/3.5` +"},{"lineNumber":482,"author":{"gitID":"kexiaowen"},"content":"Rates the 1st person to have technical skills score of 4.5, communication skills score of 3, problem solving skills of 4, experience score of 3.5. The overall rating is computed to be 3.75."},{"lineNumber":483,"author":{"gitID":"kexiaowen"},"content":"* `rate 2 t/3 c/5 p/3.5 e/2` +"},{"lineNumber":484,"author":{"gitID":"kexiaowen"},"content":"Rates the 2nd person to have technical skills score of 3, communication skills score of 5, problem solving skills of 3.5, experience score of 2. The overall rating is computed to be 3.38."},{"lineNumber":485,"author":{"gitID":"kexiaowen"},"content":"// end::rate[]"},{"lineNumber":486,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":487,"author":{"gitID":"kexiaowen"},"content":"// tag::rating-edit[]"},{"lineNumber":488,"author":{"gitID":"kexiaowen"},"content":"\u003d\u003d\u003d Editing the rating given to a student : `rating-edit` `[since v1.5]`"},{"lineNumber":489,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":490,"author":{"gitID":"kexiaowen"},"content":"Edits the rating given to the student identified by the index number used in the last person listing. +"},{"lineNumber":491,"author":{"gitID":"kexiaowen"},"content":"Format: `rating-edit INDEX [t/TECHNICAL_SKILLS_SCORE] [c/COMMUNICATION_SKILLS_SCORE] [p/PROBLEM_SOLVING_SKILLS_SCORE] [e/EXPERIENCE_SKILLS_SCORE]`"},{"lineNumber":492,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":493,"author":{"gitID":"kexiaowen"},"content":"****"},{"lineNumber":494,"author":{"gitID":"kexiaowen"},"content":"* Edits the rating of the student at the specified `INDEX`. The index refers to the index number shown in the last person listing. The index *must be a positive integer* such as 1, 2, 3, ..."},{"lineNumber":495,"author":{"gitID":"kexiaowen"},"content":"* At least one rating score must be edited."},{"lineNumber":496,"author":{"gitID":"kexiaowen"},"content":"* The score(s) should be a number in the range of *1 to 5* (inclusive). Scores with more than two decimal places are rounded to *two decimal places*."},{"lineNumber":497,"author":{"gitID":"kexiaowen"},"content":"* The overall rating of a student will be re-computed and rounded to two decimal places."},{"lineNumber":498,"author":{"gitID":"kexiaowen"},"content":"****"},{"lineNumber":499,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":500,"author":{"gitID":"kexiaowen"},"content":"[TIP]"},{"lineNumber":501,"author":{"gitID":"kexiaowen"},"content":"If you have not rated the student, please use the `rate` command to assign new rating scores."},{"lineNumber":502,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":503,"author":{"gitID":"kexiaowen"},"content":"Examples:"},{"lineNumber":504,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":505,"author":{"gitID":"kexiaowen"},"content":"* `rating-edit 1 t/4.5 p/4 e/3.5` +"},{"lineNumber":506,"author":{"gitID":"kexiaowen"},"content":"Edits the 1st person to have technical skills score of 4.5, problem solving skills of 4, experience score of 3.5."},{"lineNumber":507,"author":{"gitID":"kexiaowen"},"content":"* `rating-edit 2 p/3.5` +"},{"lineNumber":508,"author":{"gitID":"kexiaowen"},"content":"Edits the 2nd person to have problem solving skills of 3.5."},{"lineNumber":509,"author":{"gitID":"kexiaowen"},"content":"// end::ratingedit[]"},{"lineNumber":510,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":511,"author":{"gitID":"kexiaowen"},"content":"// tag::ratingdelete[]"},{"lineNumber":512,"author":{"gitID":"kexiaowen"},"content":"\u003d\u003d\u003d Deleting the rating given to a student : `rating-delete` `[since v1.2]`"},{"lineNumber":513,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":514,"author":{"gitID":"kexiaowen"},"content":"Deletes the rating given to the student identified by the index number used in the last person listing. +"},{"lineNumber":515,"author":{"gitID":"kexiaowen"},"content":"Format: `rating-delete INDEX`"},{"lineNumber":516,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":517,"author":{"gitID":"kexiaowen"},"content":"****"},{"lineNumber":518,"author":{"gitID":"kexiaowen"},"content":"* Deletes the rating of the applicant at the specified `INDEX`."},{"lineNumber":519,"author":{"gitID":"kexiaowen"},"content":"* The index refers to the index number shown in the last person listing."},{"lineNumber":520,"author":{"gitID":"kexiaowen"},"content":"* The index *must be a positive integer* such as 1, 2, 3, ..."},{"lineNumber":521,"author":{"gitID":"kexiaowen"},"content":"****"},{"lineNumber":522,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":523,"author":{"gitID":"kexiaowen"},"content":"Examples:"},{"lineNumber":524,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":525,"author":{"gitID":"kexiaowen"},"content":"* `rating-delete 1` +"},{"lineNumber":526,"author":{"gitID":"kexiaowen"},"content":"Deletes the rating of the first applicant in HR+."},{"lineNumber":527,"author":{"gitID":"kexiaowen"},"content":"// end::ratingdelete[]"},{"lineNumber":528,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":529,"author":{"gitID":"kexiaowen"},"content":"// tag::sort[]"},{"lineNumber":530,"author":{"gitID":"kexiaowen"},"content":"\u003d\u003d\u003d Sorting the list of students based on different fields : `sort` `[since v1.3]`"},{"lineNumber":531,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":532,"author":{"gitID":"kexiaowen"},"content":"Sorts the current list of students in HR+ based on GPA, name or overall rating in descending or ascending order. +"},{"lineNumber":533,"author":{"gitID":"kexiaowen"},"content":"Format: `sort FIELD o/SORT ORDER`"},{"lineNumber":534,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":535,"author":{"gitID":"kexiaowen"},"content":"****"},{"lineNumber":536,"author":{"gitID":"kexiaowen"},"content":"* The field to be sorted by, `FIELD`, must be either `gpa`, `name` or `rating`."},{"lineNumber":537,"author":{"gitID":"kexiaowen"},"content":"* The sort order can only be `asc` (ascending order) or `desc` (descending order)."},{"lineNumber":538,"author":{"gitID":"kexiaowen"},"content":"* When sorting the students based on name, cases are ignored when doing comparisons."},{"lineNumber":539,"author":{"gitID":"kexiaowen"},"content":"* If the list has been filtered, only current students on the list will be sorted instead of all students in HR+. If you intend to sort all the students in HR+, you may run the `list` command first."},{"lineNumber":540,"author":{"gitID":"kexiaowen"},"content":"****"},{"lineNumber":541,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":542,"author":{"gitID":"kexiaowen"},"content":"Examples:"},{"lineNumber":543,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":544,"author":{"gitID":"kexiaowen"},"content":"* `sort rating o/asc` +"},{"lineNumber":545,"author":{"gitID":"kexiaowen"},"content":"Sorts the current list of students according to their overall rating in ascending order."},{"lineNumber":546,"author":{"gitID":"kexiaowen"},"content":"* `sort gpa o/desc` +"},{"lineNumber":547,"author":{"gitID":"kexiaowen"},"content":"Sorts the current list of students according to their grade point average in descending order."},{"lineNumber":548,"author":{"gitID":"kexiaowen"},"content":"// end::sort[]"},{"lineNumber":549,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":550,"author":{"gitID":"mhq199657"},"content":"// tag::status[]"},{"lineNumber":551,"author":{"gitID":"mhq199657"},"content":"\u003d\u003d\u003d Update applicant\u0027s status: `status` [Since v1.3]"},{"lineNumber":552,"author":{"gitID":"mhq199657"},"content":"Updates the status of an applicant. +"},{"lineNumber":553,"author":{"gitID":"mhq199657"},"content":"Format: `status INDEX STATUS_INDEX`"},{"lineNumber":554,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":555,"author":{"gitID":"mhq199657"},"content":"****"},{"lineNumber":556,"author":{"gitID":"kexiaowen"},"content":"* The index refers to the index number shown in the last person listing."},{"lineNumber":557,"author":{"gitID":"mhq199657"},"content":"* The index *must be a positive number* 1,2,3, ..."},{"lineNumber":558,"author":{"gitID":"mhq199657"},"content":"* Status index are"},{"lineNumber":559,"author":{"gitID":"mhq199657"},"content":"1. New"},{"lineNumber":560,"author":{"gitID":"mhq199657"},"content":"2. 1st round"},{"lineNumber":561,"author":{"gitID":"mhq199657"},"content":"3. 2nd round"},{"lineNumber":562,"author":{"gitID":"mhq199657"},"content":"4. Rejected"},{"lineNumber":563,"author":{"gitID":"mhq199657"},"content":"5. Waitlist"},{"lineNumber":564,"author":{"gitID":"mhq199657"},"content":"6. Offered"},{"lineNumber":565,"author":{"gitID":"mhq199657"},"content":"7. Accepted"},{"lineNumber":566,"author":{"gitID":"mhq199657"},"content":"8. Withdrawn"},{"lineNumber":567,"author":{"gitID":"mhq199657"},"content":"****"},{"lineNumber":568,"author":{"gitID":"mhq199657"},"content":"// end::status[]"},{"lineNumber":569,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":570,"author":{"gitID":"Ang-YC"},"content":"// tag::show[]"},{"lineNumber":571,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d Showing a specific panel: `show` `[since v1.5]`"},{"lineNumber":572,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":573,"author":{"gitID":"Ang-YC"},"content":"Showing a specific panel for more information about the currently selected person in HR+. +"},{"lineNumber":574,"author":{"gitID":"Ang-YC"},"content":"Format: `show PANEL`"},{"lineNumber":575,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":576,"author":{"gitID":"Ang-YC"},"content":"****"},{"lineNumber":577,"author":{"gitID":"Ang-YC"},"content":"* Make sure person are selected using `select` command before executing this command"},{"lineNumber":578,"author":{"gitID":"Ang-YC"},"content":"* When resume is requested, it will only shows when it is available."},{"lineNumber":579,"author":{"gitID":"Ang-YC"},"content":"* `PANEL` must be either \u0027info\u0027 or \u0027resume\u0027, case sensitive"},{"lineNumber":580,"author":{"gitID":"Ang-YC"},"content":"****"},{"lineNumber":581,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":582,"author":{"gitID":"Ang-YC"},"content":"Examples:"},{"lineNumber":583,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":584,"author":{"gitID":"Ang-YC"},"content":"* `show info` +"},{"lineNumber":585,"author":{"gitID":"Ang-YC"},"content":"shows the info panel of the currently selected person."},{"lineNumber":586,"author":{"gitID":"Ang-YC"},"content":"* `show resume` +"},{"lineNumber":587,"author":{"gitID":"Ang-YC"},"content":"shows the resume panel of the currently selected person."},{"lineNumber":588,"author":{"gitID":"Ang-YC"},"content":"// end::show[]"},{"lineNumber":589,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":590,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Listing entered commands : `history`"},{"lineNumber":591,"author":{"gitID":"-"},"content":""},{"lineNumber":592,"author":{"gitID":"-"},"content":"Lists all the commands that you have entered in reverse chronological order. +"},{"lineNumber":593,"author":{"gitID":"-"},"content":"Format: `history`"},{"lineNumber":594,"author":{"gitID":"-"},"content":""},{"lineNumber":595,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":596,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d"},{"lineNumber":597,"author":{"gitID":"-"},"content":"Pressing the kbd:[\u0026uarr;] and kbd:[\u0026darr;] arrows will display the previous and next input respectively in the command box."},{"lineNumber":598,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d"},{"lineNumber":599,"author":{"gitID":"-"},"content":""},{"lineNumber":600,"author":{"gitID":"-"},"content":"// tag::undoredo[]"},{"lineNumber":601,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Undoing previous command : `undo`"},{"lineNumber":602,"author":{"gitID":"-"},"content":""},{"lineNumber":603,"author":{"gitID":"-"},"content":"Restores the address book to the state before the previous _undoable_ command was executed. +"},{"lineNumber":604,"author":{"gitID":"-"},"content":"Format: `undo`"},{"lineNumber":605,"author":{"gitID":"-"},"content":""},{"lineNumber":606,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":607,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d"},{"lineNumber":608,"author":{"gitID":"-"},"content":"Undoable commands: those commands that modify the address book\u0027s content (`add`, `delete`, `edit` and `clear`)."},{"lineNumber":609,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d"},{"lineNumber":610,"author":{"gitID":"-"},"content":""},{"lineNumber":611,"author":{"gitID":"-"},"content":"Examples:"},{"lineNumber":612,"author":{"gitID":"-"},"content":""},{"lineNumber":613,"author":{"gitID":"-"},"content":"* `delete 1` +"},{"lineNumber":614,"author":{"gitID":"-"},"content":"`list` +"},{"lineNumber":615,"author":{"gitID":"-"},"content":"`undo` (reverses the `delete 1` command) +"},{"lineNumber":616,"author":{"gitID":"-"},"content":""},{"lineNumber":617,"author":{"gitID":"-"},"content":"* `select 1` +"},{"lineNumber":618,"author":{"gitID":"-"},"content":"`list` +"},{"lineNumber":619,"author":{"gitID":"-"},"content":"`undo` +"},{"lineNumber":620,"author":{"gitID":"-"},"content":"The `undo` command fails as there are no undoable commands executed previously."},{"lineNumber":621,"author":{"gitID":"-"},"content":""},{"lineNumber":622,"author":{"gitID":"-"},"content":"* `delete 1` +"},{"lineNumber":623,"author":{"gitID":"-"},"content":"`clear` +"},{"lineNumber":624,"author":{"gitID":"-"},"content":"`undo` (reverses the `clear` command) +"},{"lineNumber":625,"author":{"gitID":"-"},"content":"`undo` (reverses the `delete 1` command) +"},{"lineNumber":626,"author":{"gitID":"-"},"content":""},{"lineNumber":627,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Redoing the previously undone command : `redo`"},{"lineNumber":628,"author":{"gitID":"-"},"content":""},{"lineNumber":629,"author":{"gitID":"-"},"content":"Reverses the most recent `undo` command. +"},{"lineNumber":630,"author":{"gitID":"-"},"content":"Format: `redo`"},{"lineNumber":631,"author":{"gitID":"-"},"content":""},{"lineNumber":632,"author":{"gitID":"-"},"content":"Examples:"},{"lineNumber":633,"author":{"gitID":"-"},"content":""},{"lineNumber":634,"author":{"gitID":"-"},"content":"* `delete 1` +"},{"lineNumber":635,"author":{"gitID":"-"},"content":"`undo` (reverses the `delete 1` command) +"},{"lineNumber":636,"author":{"gitID":"-"},"content":"`redo` (reapplies the `delete 1` command) +"},{"lineNumber":637,"author":{"gitID":"-"},"content":""},{"lineNumber":638,"author":{"gitID":"-"},"content":"* `delete 1` +"},{"lineNumber":639,"author":{"gitID":"-"},"content":"`redo` +"},{"lineNumber":640,"author":{"gitID":"-"},"content":"The `redo` command fails as there are no `undo` commands executed previously."},{"lineNumber":641,"author":{"gitID":"-"},"content":""},{"lineNumber":642,"author":{"gitID":"-"},"content":"* `delete 1` +"},{"lineNumber":643,"author":{"gitID":"-"},"content":"`clear` +"},{"lineNumber":644,"author":{"gitID":"-"},"content":"`undo` (reverses the `clear` command) +"},{"lineNumber":645,"author":{"gitID":"-"},"content":"`undo` (reverses the `delete 1` command) +"},{"lineNumber":646,"author":{"gitID":"-"},"content":"`redo` (reapplies the `delete 1` command) +"},{"lineNumber":647,"author":{"gitID":"-"},"content":"`redo` (reapplies the `clear` command) +"},{"lineNumber":648,"author":{"gitID":"-"},"content":"// end::undoredo[]"},{"lineNumber":649,"author":{"gitID":"-"},"content":""},{"lineNumber":650,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Clearing all entries : `clear`"},{"lineNumber":651,"author":{"gitID":"-"},"content":""},{"lineNumber":652,"author":{"gitID":"-"},"content":"Clears all entries from the address book. +"},{"lineNumber":653,"author":{"gitID":"-"},"content":"Format: `clear`"},{"lineNumber":654,"author":{"gitID":"-"},"content":""},{"lineNumber":655,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Exiting the program : `exit`"},{"lineNumber":656,"author":{"gitID":"-"},"content":""},{"lineNumber":657,"author":{"gitID":"-"},"content":"Exits the program. +"},{"lineNumber":658,"author":{"gitID":"-"},"content":"Format: `exit`"},{"lineNumber":659,"author":{"gitID":"-"},"content":""},{"lineNumber":660,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Saving the data"},{"lineNumber":661,"author":{"gitID":"-"},"content":""},{"lineNumber":662,"author":{"gitID":"kexiaowen"},"content":"Data in HR+ are saved in the hard disk automatically after any command that changes the data. +"},{"lineNumber":663,"author":{"gitID":"-"},"content":"There is no need to save manually."},{"lineNumber":664,"author":{"gitID":"-"},"content":""},{"lineNumber":665,"author":{"gitID":"kexiaowen"},"content":"\u003d\u003d\u003d Display tags added to a student `[coming in v2.0]`"},{"lineNumber":666,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":667,"author":{"gitID":"kexiaowen"},"content":"Displays the tags that are added to a student in the left panel."},{"lineNumber":668,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":669,"author":{"gitID":"tanhengyeow"},"content":"// tag::futurefind[]"},{"lineNumber":670,"author":{"gitID":"tanhengyeow"},"content":"\u003d\u003d\u003d Highlights search results in user interface `[coming in v2.0]`"},{"lineNumber":671,"author":{"gitID":"-"},"content":""},{"lineNumber":672,"author":{"gitID":"tanhengyeow"},"content":"Highlights search results after user executes the `find` command."},{"lineNumber":673,"author":{"gitID":"-"},"content":""},{"lineNumber":674,"author":{"gitID":"tanhengyeow"},"content":"\u003d\u003d\u003d User specified Levenshtein distance `[coming in v2.0]`"},{"lineNumber":675,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":676,"author":{"gitID":"tanhengyeow"},"content":"Allows user to set the threshold used in the fuzzy match."},{"lineNumber":677,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":678,"author":{"gitID":"tanhengyeow"},"content":"\u003d\u003d\u003d User specified search support `[coming in v2.0]`"},{"lineNumber":679,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":680,"author":{"gitID":"tanhengyeow"},"content":"Allows user to toggle which search support they want at any point of time."},{"lineNumber":681,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":682,"author":{"gitID":"tanhengyeow"},"content":"\u003d\u003d\u003d Displays suggested searches for user before executing find command `[coming in v2.0]`"},{"lineNumber":683,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":684,"author":{"gitID":"tanhengyeow"},"content":"Allows user to view a list of suggested searches on the fly when typing in their search keywords."},{"lineNumber":685,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":686,"author":{"gitID":"kexiaowen"},"content":"\u003d\u003d\u003d Saving searches `[coming in v2.0]`"},{"lineNumber":687,"author":{"gitID":"kexiaowen"},"content":"Saves searches that can be displayed in future for fast lookups."},{"lineNumber":688,"author":{"gitID":"tanhengyeow"},"content":"// end::futurefind[]"},{"lineNumber":689,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":690,"author":{"gitID":"kexiaowen"},"content":"\u003d\u003d\u003d Customising rating criteria `[coming in v2.0]`"},{"lineNumber":691,"author":{"gitID":"kexiaowen"},"content":"Specifies the criteria that candidates will be rated against."},{"lineNumber":692,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":693,"author":{"gitID":"kexiaowen"},"content":"\u003d\u003d\u003d Sending and receiving emails `[coming in v2.0]`"},{"lineNumber":694,"author":{"gitID":"kexiaowen"},"content":"Sends and receives emails within HR+."},{"lineNumber":695,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":696,"author":{"gitID":"-"},"content":"\u003d\u003d FAQ"},{"lineNumber":697,"author":{"gitID":"-"},"content":""},{"lineNumber":698,"author":{"gitID":"-"},"content":"*Q*: How do I transfer my data to another Computer? +"},{"lineNumber":699,"author":{"gitID":"-"},"content":"*A*: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Address Book folder."},{"lineNumber":700,"author":{"gitID":"-"},"content":""},{"lineNumber":701,"author":{"gitID":"mhq199657"},"content":"*Q*: What is HR+\u0027s behaviour if the XML file is corrupted?"},{"lineNumber":702,"author":{"gitID":"mhq199657"},"content":"*A*: HR+ will then start up empty, i.e., no person is inside. This empty HR+ alerts to the user that the XML file is corrupted."},{"lineNumber":703,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":704,"author":{"gitID":"-"},"content":"\u003d\u003d Command Summary"},{"lineNumber":705,"author":{"gitID":"-"},"content":""},{"lineNumber":706,"author":{"gitID":"kexiaowen"},"content":"* *Add* `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS u/UNIVERSITY y/EXPECTED_GRADUATION_YEAR m/MAJOR g/GRADE_POINT_AVERAGE j/JOB_APPLIED [r/RESUME] [i/IMAGE] [c/COMMENT] [t/TAG]...` +"},{"lineNumber":707,"author":{"gitID":"kexiaowen"},"content":"e.g. `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 u/NTU y/2020 m/Information System g/4.33 j/Software Engineer`"},{"lineNumber":708,"author":{"gitID":"-"},"content":"* *Clear* : `clear`"},{"lineNumber":709,"author":{"gitID":"-"},"content":"* *Delete* : `delete INDEX` +"},{"lineNumber":710,"author":{"gitID":"-"},"content":"e.g. `delete 3`"},{"lineNumber":711,"author":{"gitID":"kexiaowen"},"content":"* *Edit* : `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [u/UNIVERSITY] [y/EXPECTED_GRADUATION_YEAR] [m/MAJOR] [j/JOB_APPLIED] [r/RESUME] [i/IMAGE] [c/COMMENT] [j/JOB_APPLIED] [t/TAG]...` +"},{"lineNumber":712,"author":{"gitID":"-"},"content":"e.g. `edit 2 n/James Lee e/jameslee@example.com`"},{"lineNumber":713,"author":{"gitID":"-"},"content":"* *Find* : `find KEYWORD [MORE_KEYWORDS]` +"},{"lineNumber":714,"author":{"gitID":"-"},"content":"e.g. `find James Jake`"},{"lineNumber":715,"author":{"gitID":"mhq199657"},"content":"* *Filter* : `filter [y/KEYWORD] [r/RATING]` +"},{"lineNumber":716,"author":{"gitID":"mhq199657"},"content":"e.g. `filter y/2019`"},{"lineNumber":717,"author":{"gitID":"Ang-YC"},"content":"* *Interview* : `interview INDEX DATE_TIME_EXPRESSION` +"},{"lineNumber":718,"author":{"gitID":"Ang-YC"},"content":"e.g. `interview 1 next Friday at 3pm`"},{"lineNumber":719,"author":{"gitID":"mhq199657"},"content":"* *Status* : `status INDEX STATUS_INDEX` +"},{"lineNumber":720,"author":{"gitID":"mhq199657"},"content":"e.g. `status 1 2`"},{"lineNumber":721,"author":{"gitID":"-"},"content":"* *List* : `list`"},{"lineNumber":722,"author":{"gitID":"-"},"content":"* *Help* : `help`"},{"lineNumber":723,"author":{"gitID":"-"},"content":"* *Select* : `select INDEX` +"},{"lineNumber":724,"author":{"gitID":"-"},"content":"e.g.`select 2`"},{"lineNumber":725,"author":{"gitID":"kexiaowen"},"content":"* *Rate* : `rate INDEX t/TECHNICAL_SKILLS_SCORE c/COMMUNICATION_SKILLS_SCORE p/PROBLEM_SOLVING_SKILLS_SCORE e/EXPERIENCE_SKILLS_SCORE` +"},{"lineNumber":726,"author":{"gitID":"kexiaowen"},"content":"e.g. `rate 1 t/4.5 c/3 p/4 e/3.5`"},{"lineNumber":727,"author":{"gitID":"kexiaowen"},"content":"* *Edit Rating* : `rating-edit INDEX [t/TECHNICAL_SKILLS_SCORE] [c/COMMUNICATION_SKILLS_SCORE] [p/PROBLEM_SOLVING_SKILLS_SCORE] [e/EXPERIENCE_SKILLS_SCORE]` +"},{"lineNumber":728,"author":{"gitID":"kexiaowen"},"content":"e.g. `rating-edit 1 t/4.5 c/3`"},{"lineNumber":729,"author":{"gitID":"kexiaowen"},"content":"* *Delete Rating* : `rating-delete INDEX` +"},{"lineNumber":730,"author":{"gitID":"kexiaowen"},"content":"e.g. `rating-delete 1`"},{"lineNumber":731,"author":{"gitID":"kexiaowen"},"content":"* *Sort* : `sort FIELD o/SORT ORDER` +"},{"lineNumber":732,"author":{"gitID":"kexiaowen"},"content":"e.g. `sort gpa o/asc`"},{"lineNumber":733,"author":{"gitID":"Ang-YC"},"content":"* *Show* : `show PANEL` +"},{"lineNumber":734,"author":{"gitID":"Ang-YC"},"content":"e.g. `show resume`"},{"lineNumber":735,"author":{"gitID":"-"},"content":"* *History* : `history`"},{"lineNumber":736,"author":{"gitID":"-"},"content":"* *Undo* : `undo`"},{"lineNumber":737,"author":{"gitID":"-"},"content":"* *Redo* : `redo`"}],"authorContributionMap":{"kexiaowen":133,"mhq199657":48,"-":227,"tanhengyeow":156,"Ang-YC":173}},{"path":"docs/team/mahongqiang.adoc","lines":[{"lineNumber":1,"author":{"gitID":"mhq199657"},"content":"\u003d Ma Hongqiang - Project Portfolio"},{"lineNumber":2,"author":{"gitID":"mhq199657"},"content":":imagesDir: ../images"},{"lineNumber":3,"author":{"gitID":"mhq199657"},"content":":stylesDir: ../stylesheets"},{"lineNumber":4,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":5,"author":{"gitID":"mhq199657"},"content":"\u003d\u003d PROJECT: HR+"},{"lineNumber":6,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":7,"author":{"gitID":"mhq199657"},"content":"---"},{"lineNumber":8,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":9,"author":{"gitID":"mhq199657"},"content":"\u003d\u003d Overview"},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":"HR+ is a free recruiting and talent management software designed for campus recruiters to achieve hiring success. HR+ streamlines the recruiting process, increases the productivity and helps make more consistent and informed hiring decisions for hiring managers. HR+ contains around 10KLoC."},{"lineNumber":12,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":13,"author":{"gitID":"mhq199657"},"content":"\u003d\u003d Summary of contributions"},{"lineNumber":14,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":"* *Major enhancement*: added *the ability to filter persons*"},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":"** What it does: allows the user to filter persons according to fields like cGPA, expected graduation year, rating and interview date."},{"lineNumber":17,"author":{"gitID":"mhq199657"},"content":"** Justification: This feature boosts the productivity significantly because a user can easily find out people in mind. For example, the user can `filter y/2019` to obtain all students graduating next year."},{"lineNumber":18,"author":{"gitID":"mhq199657"},"content":"** Highlights: This enhancement builds upon the fields a person has. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required multiple new predicate and utility classes."},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":"** Credits:"},{"lineNumber":20,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":21,"author":{"gitID":"mhq199657"},"content":"* *Minor enhancement*:"},{"lineNumber":22,"author":{"gitID":"mhq199657"},"content":"** Adds a status field and status command that updates the field"},{"lineNumber":23,"author":{"gitID":"mhq199657"},"content":"** Adds a expected graduation year field and modify add and edit command to accommodate such changes"},{"lineNumber":24,"author":{"gitID":"mhq199657"},"content":"** Adds a resume field"},{"lineNumber":25,"author":{"gitID":"mhq199657"},"content":"** Copies resume and profile pic to `data` folder for easy migration purpose"},{"lineNumber":26,"author":{"gitID":"mhq199657"},"content":"* *Code contributed*: [https://github.com/CS2103JAN2018-W14-B3/main/blob/master/collated/functional/mhq199657.md[Functional code]] [https://github.com/CS2103JAN2018-W14-B3/main/blob/master/collated/test/mhq199657.md[Test code]]"},{"lineNumber":27,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":28,"author":{"gitID":"mhq199657"},"content":"* *Other contributions*:"},{"lineNumber":29,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":30,"author":{"gitID":"mhq199657"},"content":"** Enhancements to existing features:"},{"lineNumber":31,"author":{"gitID":"mhq199657"},"content":"*** Wrote a larger sample data for sample HR+ content as well as for testing (Pull request https://github.com/CS2103JAN2018-W14-B3/main/pull/83[#83])"},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":"** Documentation:"},{"lineNumber":33,"author":{"gitID":"mhq199657"},"content":"*** Updated User Guide and Developer Guide"},{"lineNumber":34,"author":{"gitID":"mhq199657"},"content":"** Community:"},{"lineNumber":35,"author":{"gitID":"mhq199657"},"content":"*** Some parts of the resume feature I added was adopted by several other class mates (https://github.com/CS2103JAN2018-W14-B3/main/pull/66[#66])"},{"lineNumber":36,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":37,"author":{"gitID":"mhq199657"},"content":"\u003d\u003d Contributions to the User Guide"},{"lineNumber":38,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":39,"author":{"gitID":"-"},"content":"|\u003d\u003d\u003d"},{"lineNumber":40,"author":{"gitID":"-"},"content":"|_Given below are sections I contributed to the User Guide. They showcase my ability to write documentation targeting end-users._"},{"lineNumber":41,"author":{"gitID":"-"},"content":"|\u003d\u003d\u003d"},{"lineNumber":42,"author":{"gitID":"-"},"content":""},{"lineNumber":43,"author":{"gitID":"mhq199657"},"content":"include::../UserGuide.adoc[tag\u003dstatus]"},{"lineNumber":44,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":45,"author":{"gitID":"mhq199657"},"content":"include::../UserGuide.adoc[tag\u003dfilter]"},{"lineNumber":46,"author":{"gitID":"-"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":"\u003d\u003d Contributions to the Developer Guide"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"-"},"content":"|\u003d\u003d\u003d"},{"lineNumber":50,"author":{"gitID":"-"},"content":"|_Given below are sections I contributed to the Developer Guide. They showcase my ability to write technical documentation and the technical depth of my contributions to the project._"},{"lineNumber":51,"author":{"gitID":"-"},"content":"|\u003d\u003d\u003d"},{"lineNumber":52,"author":{"gitID":"-"},"content":""},{"lineNumber":53,"author":{"gitID":"mhq199657"},"content":"include::../DeveloperGuide.adoc[tag\u003dfiltercommand]"},{"lineNumber":54,"author":{"gitID":"mhq199657"},"content":""}],"authorContributionMap":{"mhq199657":43,"-":11}},{"path":"docs/team/kexiaowen.adoc","lines":[{"lineNumber":1,"author":{"gitID":"kexiaowen"},"content":"\u003d Ke Xiaowen - Project Portfolio"},{"lineNumber":2,"author":{"gitID":"kexiaowen"},"content":":imagesDir: ../images"},{"lineNumber":3,"author":{"gitID":"kexiaowen"},"content":":stylesDir: ../stylesheets"},{"lineNumber":4,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":5,"author":{"gitID":"kexiaowen"},"content":"\u003d\u003d PROJECT: HR+"},{"lineNumber":6,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":7,"author":{"gitID":"kexiaowen"},"content":"---"},{"lineNumber":8,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":9,"author":{"gitID":"kexiaowen"},"content":"\u003d\u003d Overview"},{"lineNumber":10,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":11,"author":{"gitID":"kexiaowen"},"content":"HR+ is a recruiting and talent management desktop application targeting University Talent Acquisition Specialists. It is built to help them manage a significant number of student contacts and find the best-fitting candidates. University Talent Acquisition Specialists interact with HR+ using a Command Line Interface(CLI). HR+ has a Graphical User Interface(GUI) created with JavaFX and it is written in Java with approximately 33 kLOC."},{"lineNumber":12,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":13,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":14,"author":{"gitID":"kexiaowen"},"content":"\u003d\u003d Summary of contributions"},{"lineNumber":15,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":16,"author":{"gitID":"kexiaowen"},"content":"* *Major enhancement*: added *commands for users to manage ratings of a student after an interview*"},{"lineNumber":17,"author":{"gitID":"kexiaowen"},"content":"** What it does: The `rate` command allows the user to evaluate a student\u0027s performance after an interview by assigning rating scores based on technical skills, communication skills, problem-solving skills and experience. The `rating-edit` command is used to edit the ratings of a student. The `rating-delete` command enables the user to delete the ratings assigned to a student."},{"lineNumber":18,"author":{"gitID":"kexiaowen"},"content":"** Justification: This feature is critical as it helps University Talent Acquisition Specialists track students\u0027 performance in interviews and decide whether or not to hire them."},{"lineNumber":19,"author":{"gitID":"kexiaowen"},"content":"** Highlights: This enhancement involves adding new commands to HR+. It requires a thorough understanding of the `Logic`, `Model` and `Storage` components and thus is challenging to implement."},{"lineNumber":20,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":21,"author":{"gitID":"kexiaowen"},"content":"* *Minor enhancement*: added a `sort` command that allows the user to sort the current list of students in HR+ based on GPA, name or overall rating score in either ascending or descending order."},{"lineNumber":22,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":23,"author":{"gitID":"kexiaowen"},"content":"* *Code contributed*: [https://github.com/CS2103JAN2018-W14-B3/main/blob/master/collated/functional/kexiaowen.md[Functional code]] [https://github.com/CS2103JAN2018-W14-B3/main/blob/master/collated/test/kexiaowen.md[Test code]]"},{"lineNumber":24,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":25,"author":{"gitID":"kexiaowen"},"content":"* *Other contributions*:"},{"lineNumber":26,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":27,"author":{"gitID":"kexiaowen"},"content":"** Enhancements to existing features:"},{"lineNumber":28,"author":{"gitID":"kexiaowen"},"content":"*** Enhanced the `add` and `edit` command to include a new field `university` and wrote relevant tests(Pull requests https://github.com/CS2103JAN2018-W14-B3/main/pull/67[#67])"},{"lineNumber":29,"author":{"gitID":"kexiaowen"},"content":"*** Enhanced the `add` and `edit` command to include a new field `job applied` and wrote relevant tests(Pull request https://github.com/CS2103JAN2018-W14-B3/main/pull/58[#58])"},{"lineNumber":30,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":31,"author":{"gitID":"kexiaowen"},"content":"** Documentation:"},{"lineNumber":32,"author":{"gitID":"kexiaowen"},"content":"*** Updated feature contribution, user stories, use cases and glossary sections in the Developer Guide (Pull requests https://github.com/CS2103JAN2018-W14-B3/main/pull/14[#14], https://github.com/CS2103JAN2018-W14-B3/main/pull/28[#28])"},{"lineNumber":33,"author":{"gitID":"kexiaowen"},"content":"*** Added features coming in v2.0 in the User Guide (Pull request https://github.com/CS2103JAN2018-W14-B3/main/pull/28[#28])"},{"lineNumber":34,"author":{"gitID":"kexiaowen"},"content":"*** Updated Features section in the User Guide by including explanation of `rate`, `rating-delete` and `sort` commands (Pull requests https://github.com/CS2103JAN2018-W14-B3/main/pull/18[#18], https://github.com/CS2103JAN2018-W14-B3/main/pull/32[#32], https://github.com/CS2103JAN2018-W14-B3/main/pull/64[#64], https://github.com/CS2103JAN2018-W14-B3/main/pull/71[#71])"},{"lineNumber":35,"author":{"gitID":"kexiaowen"},"content":"*** Wrote implementation of `rate` and `sort` commands in the Developer Guide (Pull request https://github.com/CS2103JAN2018-W14-B3/main/pull/48[#48])"},{"lineNumber":36,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":37,"author":{"gitID":"kexiaowen"},"content":"** Project Management:"},{"lineNumber":38,"author":{"gitID":"kexiaowen"},"content":"*** Maintained issue tracker."},{"lineNumber":39,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":40,"author":{"gitID":"kexiaowen"},"content":"** Community:"},{"lineNumber":41,"author":{"gitID":"kexiaowen"},"content":"*** PRs reviewed (with non-trivial review comments): https://github.com/CS2103JAN2018-W14-B3/main/pull/16[#16], https://github.com/CS2103JAN2018-W14-B3/main/pull/21[#21], https://github.com/CS2103JAN2018-W14-B3/main/pull/24[#24], https://github.com/CS2103JAN2018-W14-B3/main/pull/53[#53]"},{"lineNumber":42,"author":{"gitID":"kexiaowen"},"content":"*** Reported bugs and suggestions for other teams in the class (examples: https://github.com/CS2103JAN2018-W11-B2/main/issues/135[1], https://github.com/CS2103JAN2018-W11-B2/main/issues/140[2], https://github.com/CS2103JAN2018-W11-B2/main/issues/141[3], https://github.com/CS2103JAN2018-W11-B2/main/issues/136[4], https://github.com/CS2103JAN2018-W11-B2/main/issues/137[5], https://github.com/CS2103JAN2018-W11-B2/main/issues/145[6])"},{"lineNumber":43,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"-"},"content":"\u003d\u003d Contributions to the User Guide"},{"lineNumber":46,"author":{"gitID":"-"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":"|\u003d\u003d\u003d"},{"lineNumber":49,"author":{"gitID":"-"},"content":"|_Given below are sections I contributed to the User Guide. They showcase my ability to write documentation targeting end-users._"},{"lineNumber":50,"author":{"gitID":"-"},"content":"|\u003d\u003d\u003d"},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"kexiaowen"},"content":"// tag::rate[]"},{"lineNumber":53,"author":{"gitID":"kexiaowen"},"content":"\u003d\u003d\u003d Rating a student : `rate` `[since v1.1]`"},{"lineNumber":54,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":55,"author":{"gitID":"kexiaowen"},"content":"Rates the student identified by the index number used in the last person listing based on technical, communication, problem solving skills and experience. +"},{"lineNumber":56,"author":{"gitID":"kexiaowen"},"content":"Format: `rate INDEX t/TECHNICAL_SKILLS_SCORE c/COMMUNICATION_SKILLS_SCORE p/PROBLEM_SOLVING_SKILLS_SCORE e/EXPERIENCE_SKILLS_SCORE`"},{"lineNumber":57,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":58,"author":{"gitID":"kexiaowen"},"content":"****"},{"lineNumber":59,"author":{"gitID":"kexiaowen"},"content":"* Rates the student at the specified `INDEX`. The index refers to the index number shown in the last person listing. The index *must be a positive integer* such as 1, 2, 3, ..."},{"lineNumber":60,"author":{"gitID":"kexiaowen"},"content":"* All four rating scores need to be supplied."},{"lineNumber":61,"author":{"gitID":"kexiaowen"},"content":"* The scores should be a number in the range of *1 to 5* (inclusive). Scores with more than two decimal places are rounded to *two decimal places*."},{"lineNumber":62,"author":{"gitID":"kexiaowen"},"content":"* The overall rating of a student is computed as the average of the four rating scores, rounded to two decimal places."},{"lineNumber":63,"author":{"gitID":"kexiaowen"},"content":"****"},{"lineNumber":64,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":65,"author":{"gitID":"kexiaowen"},"content":"[TIP]"},{"lineNumber":66,"author":{"gitID":"kexiaowen"},"content":"If you have rated the student, you will NOT be able to use the `rate` command on the same student again. Please use the `rating-edit` command to overwrite existing scores."},{"lineNumber":67,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":68,"author":{"gitID":"kexiaowen"},"content":"Examples:"},{"lineNumber":69,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":70,"author":{"gitID":"kexiaowen"},"content":"* `rate 1 t/4.5 c/3 p/4 e/3.5` +"},{"lineNumber":71,"author":{"gitID":"kexiaowen"},"content":"Rates the 1st person to have technical skills score of 4.5, communication skills score of 3, problem solving skills of 4, experience score of 3.5. The overall rating is computed to be 3.75."},{"lineNumber":72,"author":{"gitID":"kexiaowen"},"content":"* `rate 2 t/3 c/5 p/3.5 e/2` +"},{"lineNumber":73,"author":{"gitID":"kexiaowen"},"content":"Rates the 2nd person to have technical skills score of 3, communication skills score of 5, problem solving skills of 3.5, experience score of 2. The overall rating is computed to be 3.38."},{"lineNumber":74,"author":{"gitID":"kexiaowen"},"content":"// end::rate[]"},{"lineNumber":75,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":76,"author":{"gitID":"kexiaowen"},"content":"// tag::rating-edit[]"},{"lineNumber":77,"author":{"gitID":"kexiaowen"},"content":"\u003d\u003d\u003d Editing the rating given to a student : `rating-edit` `[since v1.5]`"},{"lineNumber":78,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":79,"author":{"gitID":"kexiaowen"},"content":"Edits the rating given to the student identified by the index number used in the last person listing. +"},{"lineNumber":80,"author":{"gitID":"kexiaowen"},"content":"Format: `rating-edit INDEX [t/TECHNICAL_SKILLS_SCORE] [c/COMMUNICATION_SKILLS_SCORE] [p/PROBLEM_SOLVING_SKILLS_SCORE] [e/EXPERIENCE_SKILLS_SCORE]`"},{"lineNumber":81,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":82,"author":{"gitID":"kexiaowen"},"content":"****"},{"lineNumber":83,"author":{"gitID":"kexiaowen"},"content":"* Edits the rating of the student at the specified `INDEX`. The index refers to the index number shown in the last person listing. The index *must be a positive integer* such as 1, 2, 3, ..."},{"lineNumber":84,"author":{"gitID":"kexiaowen"},"content":"* At least one rating score must be edited."},{"lineNumber":85,"author":{"gitID":"kexiaowen"},"content":"* The score(s) should be a number in the range of *1 to 5* (inclusive). Scores with more than two decimal places are rounded to *two decimal places*."},{"lineNumber":86,"author":{"gitID":"kexiaowen"},"content":"* The overall rating of a student will be re-computed and rounded to two decimal places."},{"lineNumber":87,"author":{"gitID":"kexiaowen"},"content":"****"},{"lineNumber":88,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":89,"author":{"gitID":"kexiaowen"},"content":"[TIP]"},{"lineNumber":90,"author":{"gitID":"kexiaowen"},"content":"If you have not rated the student, please use the `rate` command to assign new rating scores."},{"lineNumber":91,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":92,"author":{"gitID":"kexiaowen"},"content":"Examples:"},{"lineNumber":93,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":94,"author":{"gitID":"kexiaowen"},"content":"* `rating-edit 1 t/4.5 p/4 e/3.5` +"},{"lineNumber":95,"author":{"gitID":"kexiaowen"},"content":"Edits the 1st person to have technical skills score of 4.5, problem solving skills of 4, experience score of 3.5."},{"lineNumber":96,"author":{"gitID":"kexiaowen"},"content":"* `rating-edit 2 p/3.5` +"},{"lineNumber":97,"author":{"gitID":"kexiaowen"},"content":"Edits the 2nd person to have problem solving skills of 3.5."},{"lineNumber":98,"author":{"gitID":"kexiaowen"},"content":"// end::ratingedit[]"},{"lineNumber":99,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":100,"author":{"gitID":"kexiaowen"},"content":"// tag::ratingdelete[]"},{"lineNumber":101,"author":{"gitID":"kexiaowen"},"content":"\u003d\u003d\u003d Deleting the rating given to a student : `rating-delete` `[since v1.2]`"},{"lineNumber":102,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":103,"author":{"gitID":"kexiaowen"},"content":"Deletes the rating given to the student identified by the index number used in the last person listing. +"},{"lineNumber":104,"author":{"gitID":"kexiaowen"},"content":"Format: `rating-delete INDEX`"},{"lineNumber":105,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":106,"author":{"gitID":"kexiaowen"},"content":"****"},{"lineNumber":107,"author":{"gitID":"kexiaowen"},"content":"* Deletes the rating of the applicant at the specified `INDEX`."},{"lineNumber":108,"author":{"gitID":"kexiaowen"},"content":"* The index refers to the index number shown in the last person listing."},{"lineNumber":109,"author":{"gitID":"kexiaowen"},"content":"* The index *must be a positive integer* such as 1, 2, 3, ..."},{"lineNumber":110,"author":{"gitID":"kexiaowen"},"content":"****"},{"lineNumber":111,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":112,"author":{"gitID":"kexiaowen"},"content":"Examples:"},{"lineNumber":113,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":114,"author":{"gitID":"kexiaowen"},"content":"* `rating-delete 1` +"},{"lineNumber":115,"author":{"gitID":"kexiaowen"},"content":"Deletes the rating of the first applicant in HR+."},{"lineNumber":116,"author":{"gitID":"kexiaowen"},"content":"// end::ratingdelete[]"},{"lineNumber":117,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":118,"author":{"gitID":"kexiaowen"},"content":"// tag::sort[]"},{"lineNumber":119,"author":{"gitID":"kexiaowen"},"content":"\u003d\u003d\u003d Sorting the list of students based on different fields : `sort` `[since v1.3]`"},{"lineNumber":120,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":121,"author":{"gitID":"kexiaowen"},"content":"Sorts the current list of students in HR+ based on GPA, name or overall rating in descending or ascending order. +"},{"lineNumber":122,"author":{"gitID":"kexiaowen"},"content":"Format: `sort FIELD o/SORT ORDER`"},{"lineNumber":123,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":124,"author":{"gitID":"kexiaowen"},"content":"****"},{"lineNumber":125,"author":{"gitID":"kexiaowen"},"content":"* The field to be sorted by, `FIELD`, must be either `gpa`, `name` or `rating`."},{"lineNumber":126,"author":{"gitID":"kexiaowen"},"content":"* The sort order can only be `asc` (ascending order) or `desc` (descending order)."},{"lineNumber":127,"author":{"gitID":"kexiaowen"},"content":"* When sorting the students based on name, cases are ignored when doing comparisons."},{"lineNumber":128,"author":{"gitID":"kexiaowen"},"content":"* If the list has been filtered, only current students on the list will be sorted instead of all students in HR+. If you intend to sort all the students in HR+, you may run the `list` command first."},{"lineNumber":129,"author":{"gitID":"kexiaowen"},"content":"****"},{"lineNumber":130,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":131,"author":{"gitID":"kexiaowen"},"content":"Examples:"},{"lineNumber":132,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":133,"author":{"gitID":"kexiaowen"},"content":"* `sort rating o/asc` +"},{"lineNumber":134,"author":{"gitID":"kexiaowen"},"content":"Sorts the current list of students according to their overall rating in ascending order."},{"lineNumber":135,"author":{"gitID":"kexiaowen"},"content":"* `sort gpa o/desc` +"},{"lineNumber":136,"author":{"gitID":"kexiaowen"},"content":"Sorts the current list of students according to their grade point average in descending order."},{"lineNumber":137,"author":{"gitID":"kexiaowen"},"content":"// end::sort[]"},{"lineNumber":138,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":139,"author":{"gitID":"-"},"content":""},{"lineNumber":140,"author":{"gitID":"-"},"content":"\u003d\u003d Contributions to the Developer Guide"},{"lineNumber":141,"author":{"gitID":"-"},"content":""},{"lineNumber":142,"author":{"gitID":"-"},"content":"|\u003d\u003d\u003d"},{"lineNumber":143,"author":{"gitID":"-"},"content":"|_Given below are sections I contributed to the Developer Guide. They showcase my ability to write technical documentation and the technical depth of my contributions to the project._"},{"lineNumber":144,"author":{"gitID":"-"},"content":"|\u003d\u003d\u003d"},{"lineNumber":145,"author":{"gitID":"-"},"content":""},{"lineNumber":146,"author":{"gitID":"kexiaowen"},"content":"// tag::rate[]"},{"lineNumber":147,"author":{"gitID":"kexiaowen"},"content":"\u003d\u003d\u003d Rate Command"},{"lineNumber":148,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Current Implementation"},{"lineNumber":149,"author":{"gitID":"kexiaowen"},"content":"The `rate` command allows Talent Acquisition Specialists to evaluate candidates\u0027 performance in interviews against four specific criteria, namely technical skills, communication skills, problem solving skills and experience. The format of this command is `rate INDEX t/TECHNICAL SKILLS SCORE c/COMMUNICATINO SKILLS SCORE p/PROBLEM SOLVING SKILLS SCORE e/EXPERIENCE SCORE`."},{"lineNumber":150,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":151,"author":{"gitID":"kexiaowen"},"content":"In our current implementation, the `rate` command inherits from the `UndoableCommand` class. Two components, `Logic` and `Model`, are involved in the execution of this command. The `Logic` component is responsible for parsing user inputs while the `Model` component deals with updating of filtered person list."},{"lineNumber":152,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":153,"author":{"gitID":"kexiaowen"},"content":"Below is a sequence diagram that illustrates how these two components interact when the `rate` command is executed:"},{"lineNumber":154,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":155,"author":{"gitID":"kexiaowen"},"content":"image::RateCommandSequenceDiagram.png[width\u003d\"800\"]"},{"lineNumber":156,"author":{"gitID":"kexiaowen"},"content":"Figure 3.1.1.1 Sequence diagram to illustrate component interactions for the `rate` command"},{"lineNumber":157,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":158,"author":{"gitID":"kexiaowen"},"content":"As shown above, execution of the `rate` command comprises the following steps:"},{"lineNumber":159,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":160,"author":{"gitID":"kexiaowen"},"content":". `LogicManager` invokes `parseCommand` method of `AddressbookParser`, taking user inputs as arguments."},{"lineNumber":161,"author":{"gitID":"kexiaowen"},"content":". During the `parseCommand` method call, an instance of `RateCommandParser` will be created when the keyword \"rate\" is matched. `RateCommandParser` then extracts the remaining user inputs and a `RateCommand` instance `r` will be returned provided that the format of user\u0027s input is correct."},{"lineNumber":162,"author":{"gitID":"kexiaowen"},"content":". `LogicManager` then calls `executeUndoableCommand` of the `RateCommand`, `r`, instantiated in step 2. Another component, `Model`, will be involved as the `RateCommand` requests to update the rating scores of the person."},{"lineNumber":163,"author":{"gitID":"kexiaowen"},"content":". The `Model` component gets the filtered persons list and replaces `Person` p1 with `Person` p2 which is identical to p2 except rating scores. A `CommandResult` will be generated and returned to `LogicManager`."},{"lineNumber":164,"author":{"gitID":"-"},"content":""},{"lineNumber":165,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Design Considerations"},{"lineNumber":166,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":167,"author":{"gitID":"kexiaowen"},"content":"\u003d\u003d\u003d\u003d\u003d Aspect: Implementation of adding and editing rating scores"},{"lineNumber":168,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":169,"author":{"gitID":"kexiaowen"},"content":"* **Alternative 1 (current choice):** Implement a new command class `RateCommand` that supports adding rating scores and `RatingEditCommand` to handle editing of rating scores"},{"lineNumber":170,"author":{"gitID":"kexiaowen"},"content":"** Pros: Results in more customisable commands that can be easily modified to support more prefixes and additional rating criteria"},{"lineNumber":171,"author":{"gitID":"kexiaowen"},"content":"** Cons: Complicates the system as users need to familiarise themselves with more commands"},{"lineNumber":172,"author":{"gitID":"kexiaowen"},"content":"* **Alternative 2:** Extend the original `EditCommand` to allow it to add and modify rating scores of a student"},{"lineNumber":173,"author":{"gitID":"kexiaowen"},"content":"** Pros: Minimises the number of commands users have to remember to execute tasks, making the application more user-friendly"},{"lineNumber":174,"author":{"gitID":"kexiaowen"},"content":"** Cons: Requires substantial changes to `EditCommandParser` and hence harder to implement"},{"lineNumber":175,"author":{"gitID":"kexiaowen"},"content":"// end::rate[]"},{"lineNumber":176,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":177,"author":{"gitID":"kexiaowen"},"content":"// tag::sort[]"},{"lineNumber":178,"author":{"gitID":"kexiaowen"},"content":"\u003d\u003d\u003d Sort Command"},{"lineNumber":179,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Current Implementation"},{"lineNumber":180,"author":{"gitID":"kexiaowen"},"content":"The `sort` command supports the listing of students in HR+ based on GPA, name or overall rating in ascending or descending order as specified by the user. The format of this `sort` command is `sort FIELD o/SORT ORDER`."},{"lineNumber":181,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":182,"author":{"gitID":"kexiaowen"},"content":"As sorting is not undoable, this command inherits from the `Command` class instead of the `UndoableCommand` class. The sorting mechanism is mainly facilitated by `Logic` and `ModelManager`. `SortCommandParser` residing in `LogicManager` processes user inputs and creates a corresponding `SortCommand`. `ModelManager` will then invoke appropriate sorting methods in `UniquePersonList`."},{"lineNumber":183,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":184,"author":{"gitID":"kexiaowen"},"content":"The following sequence diagrams depict the interactions between `LogicManager` and `ModelManager` when a user issues a request for sorting:"},{"lineNumber":185,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":186,"author":{"gitID":"kexiaowen"},"content":"image::SortCommandSequenceDiagram1.png[width\u003d\"800\"]"},{"lineNumber":187,"author":{"gitID":"kexiaowen"},"content":"image::SortCommandSequenceDiagram2.png[width\u003d\"800\"]"},{"lineNumber":188,"author":{"gitID":"kexiaowen"},"content":"Figure 3.2.1.1 Sequence diagrams for execution of `sort` command"},{"lineNumber":189,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":190,"author":{"gitID":"kexiaowen"},"content":"As seen from the sequence diagram above, `LogicManager` and `ModelManager` interact in the following way:"},{"lineNumber":191,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":192,"author":{"gitID":"kexiaowen"},"content":". When a user keys in `sort gpa o/desc`, `LogicManager` calls method `parser` in `AddressBookParser`."},{"lineNumber":193,"author":{"gitID":"kexiaowen"},"content":". `SortCommandParser` is instantiated. If the user input is of the correct format, a `SortCommand` will be successfully created and returned back to `LogicManager`. Suppose the inputs are not valid or the format of the command is invalid, an exception will be thrown and users will see an error message."},{"lineNumber":194,"author":{"gitID":"kexiaowen"},"content":". `LogicManager` proceeds to invoke `execute` method of `SortCommand`."},{"lineNumber":195,"author":{"gitID":"kexiaowen"},"content":". `ModelManager` is in charge of sorting the list of persons through calling relevant methods provided in `AddressBook` and `UniquePersonList` according to the field to be sorted by."},{"lineNumber":196,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":197,"author":{"gitID":"kexiaowen"},"content":"Currently, HR+ only allows users to sort the list of students by selected fields in ascending or descending order. This is achieved by encapsulating acceptable sorting orders and fields into `SortOrder` and `SortField` of the type `enum` respectively."},{"lineNumber":198,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":199,"author":{"gitID":"kexiaowen"},"content":"In order to make Person objects comparable, additional methods need to be implemented in the `Person` class to compare different `Person` objects based on GPA, name and rating scores. The following code snippet demonstrates how these methods are implemented:"},{"lineNumber":200,"author":{"gitID":"kexiaowen"},"content":"[source,java]"},{"lineNumber":201,"author":{"gitID":"kexiaowen"},"content":"----"},{"lineNumber":202,"author":{"gitID":"kexiaowen"},"content":"/**"},{"lineNumber":203,"author":{"gitID":"kexiaowen"},"content":" * Compares the overall ratings of two {@code Person} objects."},{"lineNumber":204,"author":{"gitID":"kexiaowen"},"content":" * @param p1"},{"lineNumber":205,"author":{"gitID":"kexiaowen"},"content":" * @param p2"},{"lineNumber":206,"author":{"gitID":"kexiaowen"},"content":" * @return 1 if p1 has a higher overall rating, 0 if p1 and p2 have equal overall rating and -1 otherwise."},{"lineNumber":207,"author":{"gitID":"kexiaowen"},"content":" */"},{"lineNumber":208,"author":{"gitID":"kexiaowen"},"content":"public static int compareByOverallRating(Person p1, Person p2) {"},{"lineNumber":209,"author":{"gitID":"kexiaowen"},"content":"    return Double.compare(p1.getRating().getOverallScore(),"},{"lineNumber":210,"author":{"gitID":"kexiaowen"},"content":"            p2.getRating().getOverallScore());"},{"lineNumber":211,"author":{"gitID":"kexiaowen"},"content":"}"},{"lineNumber":212,"author":{"gitID":"kexiaowen"},"content":"----"},{"lineNumber":213,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":214,"author":{"gitID":"kexiaowen"},"content":"To sort the list based on a particular field, we used the `sort` method from Java\u0027s `Collections` library. An example usage is shown below:"},{"lineNumber":215,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":216,"author":{"gitID":"kexiaowen"},"content":"[source,java]"},{"lineNumber":217,"author":{"gitID":"kexiaowen"},"content":"----"},{"lineNumber":218,"author":{"gitID":"kexiaowen"},"content":"/**"},{"lineNumber":219,"author":{"gitID":"kexiaowen"},"content":" * Sorts the list based on GPA in ascending order"},{"lineNumber":220,"author":{"gitID":"kexiaowen"},"content":" */"},{"lineNumber":221,"author":{"gitID":"kexiaowen"},"content":"public void sortPersonsGradePointAverageAsc() {"},{"lineNumber":222,"author":{"gitID":"kexiaowen"},"content":"    Collections.sort(internalList, Person::compareByGradePointAverage);"},{"lineNumber":223,"author":{"gitID":"kexiaowen"},"content":"}"},{"lineNumber":224,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":225,"author":{"gitID":"kexiaowen"},"content":"/**"},{"lineNumber":226,"author":{"gitID":"kexiaowen"},"content":" * Sorts the list based on GPA in descending order"},{"lineNumber":227,"author":{"gitID":"kexiaowen"},"content":" */"},{"lineNumber":228,"author":{"gitID":"kexiaowen"},"content":"public void sortPersonsGradePointAverageDesc() {"},{"lineNumber":229,"author":{"gitID":"kexiaowen"},"content":"    Collections.sort(internalList, Person::compareByGradePointAverage);"},{"lineNumber":230,"author":{"gitID":"kexiaowen"},"content":"    Collections.reverse(internalList);"},{"lineNumber":231,"author":{"gitID":"kexiaowen"},"content":"}"},{"lineNumber":232,"author":{"gitID":"kexiaowen"},"content":"----"},{"lineNumber":233,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":234,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Design Considerations"},{"lineNumber":235,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":236,"author":{"gitID":"kexiaowen"},"content":"\u003d\u003d\u003d\u003d Aspect: Implementation of `SortCommand`"},{"lineNumber":237,"author":{"gitID":"kexiaowen"},"content":"* **Alternative 1 (current choice):** Implement a more generic `SortCommand` that sorts the list of students based on parameters supplied by the user"},{"lineNumber":238,"author":{"gitID":"kexiaowen"},"content":"** Pros: It is easier to modify `SortCommand` to support more fields to be sorted by."},{"lineNumber":239,"author":{"gitID":"kexiaowen"},"content":"** Cons: It restricts the format of sort command to be the same and is thus less flexible."},{"lineNumber":240,"author":{"gitID":"kexiaowen"},"content":"* **Alternative 2:** Use separate commands for each possible field, such as `gpa-sort`, `rating-sort` and `name-sort` commands"},{"lineNumber":241,"author":{"gitID":"kexiaowen"},"content":"** Pros: It allows developers to specify different command formats. For example, users might not need to specify the sorting order explicitly. `rating-sort` and `gpa-sort` can have default sorting order to be descending while results from `name-sort` can be in ascending order."},{"lineNumber":242,"author":{"gitID":"kexiaowen"},"content":"** Cons: It increases the number of commands in HR+ and might be less user-friendly as users need to familiarise themselves with more commands."},{"lineNumber":243,"author":{"gitID":"kexiaowen"},"content":"// end::sort[]"}],"authorContributionMap":{"kexiaowen":223,"-":20}},{"path":"docs/AboutUs.adoc","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"\u003d About Us"},{"lineNumber":2,"author":{"gitID":"-"},"content":":relfileprefix: team/"},{"lineNumber":3,"author":{"gitID":"-"},"content":":imagesDir: images"},{"lineNumber":4,"author":{"gitID":"-"},"content":":stylesDir: stylesheets"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"HR+ was developed by Team https://github.com/CS2103JAN2018-W14-B3[W14-B3]. +"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"We are a team based in the http://www.comp.nus.edu.sg[School of Computing, National University of Singapore]."},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"\u003d\u003d Project Team"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"\u003d\u003d\u003d Tan Heng Yeow"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"image::tanhengyeow.png[width\u003d\"150\", align\u003d\"left\"]"},{"lineNumber":14,"author":{"gitID":"kexiaowen"},"content":"{empty}[https://github.com/tanhengyeow[github]] [\u003c\u003ctanhengyeow#, portfolio\u003e\u003e]"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"Role: Team Lead, Testing +"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"Responsibilites: Logic, Model"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"\u0027\u0027\u0027"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"\u003d\u003d\u003d Ang Yee Chin"},{"lineNumber":22,"author":{"gitID":"Ang-YC"},"content":"image::Ang-YC.png[width\u003d\"150\", align\u003d\"left\"]"},{"lineNumber":23,"author":{"gitID":"Ang-YC"},"content":"{empty}[http://github.com/Ang-YC[github]] [\u003c\u003cangyeechin#, portfolio\u003e\u003e]"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"Role: Team Lead, Integration +"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":"Responsibilities: Ui, Storage"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"\u0027\u0027\u0027"},{"lineNumber":30,"author":{"gitID":"kexiaowen"},"content":"\u003d\u003d\u003d Ma Hongqiang"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"image::mhq199657.png[width\u003d\"150\", align\u003d\"left\"]"},{"lineNumber":32,"author":{"gitID":"kexiaowen"},"content":"{empty}[http://github.com/mhq199657[github]] [\u003c\u003cmahongqiang#, portfolio\u003e\u003e]"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":"Role: Code quality, Testing +"},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"Responsibilities: Logic, Model"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":""},{"lineNumber":38,"author":{"gitID":"-"},"content":"\u0027\u0027\u0027"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"kexiaowen"},"content":"\u003d\u003d\u003d Ke Xiaowen"},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"image::kexiaowen.png[width\u003d\"150\", align\u003d\"left\"]"},{"lineNumber":42,"author":{"gitID":"kexiaowen"},"content":"{empty}[http://github.com/kexiaowen[github]] [\u003c\u003ckexiaowen#, portfolio\u003e\u003e]"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":"Role: Code quality, Documentation +"},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"Responsibilities: Code quality, Documentation"},{"lineNumber":46,"author":{"gitID":"-"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":"\u0027\u0027\u0027"}],"authorContributionMap":{"kexiaowen":5,"-":25,"tanhengyeow":15,"Ang-YC":2}},{"path":"README.adoc","lines":[{"lineNumber":1,"author":{"gitID":"tanhengyeow"},"content":"\u003d HR+"},{"lineNumber":2,"author":{"gitID":"-"},"content":"ifdef::env-github,env-browser[:relfileprefix: docs/]"},{"lineNumber":3,"author":{"gitID":"-"},"content":""},{"lineNumber":4,"author":{"gitID":"-"},"content":"https://travis-ci.org/CS2103JAN2018-W14-B3/main[image:https://travis-ci.org/CS2103JAN2018-W14-B3/main.svg?branch\u003dmaster[Build Status]]"},{"lineNumber":5,"author":{"gitID":"-"},"content":"https://coveralls.io/github/CS2103JAN2018-W14-B3/main?branch\u003dmaster[image:https://coveralls.io/repos/github/CS2103JAN2018-W14-B3/main/badge.svg?branch\u003dmaster[Coverage Status]]"},{"lineNumber":6,"author":{"gitID":"mhq199657"},"content":"https://app.codacy.com/app/mhq199657/main?utm_source\u003dgithub.com\u0026utm_medium\u003dreferral\u0026utm_content\u003dCS2103JAN2018-W14-B3/main\u0026utm_campaign\u003dbadger[image:https://api.codacy.com/project/badge/Grade/56d8bd8640684659aa1b55f8e96518cf[codacy]]"},{"lineNumber":7,"author":{"gitID":"-"},"content":"https://github.com/CS2103JAN2018-W14-B3/main[image:https://img.shields.io/badge/team-W14%20B3-blue.svg[Team W14-B3]]"},{"lineNumber":8,"author":{"gitID":"-"},"content":"https://github.com/CS2103JAN2018-W14-B3/main[image:https://img.shields.io/badge/members-HQ%20YC%20HY%20XW-2196F3.svg[Members]]"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"ifdef::env-github[]"},{"lineNumber":11,"author":{"gitID":"-"},"content":"image::docs/images/Ui.png[width\u003d\"600\"]"},{"lineNumber":12,"author":{"gitID":"Ang-YC"},"content":"image::docs/images/Ui.gif[width\u003d\"600\"]"},{"lineNumber":13,"author":{"gitID":"-"},"content":"endif::[]"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"ifndef::env-github[]"},{"lineNumber":16,"author":{"gitID":"-"},"content":"image::images/Ui.png[width\u003d\"600\"]"},{"lineNumber":17,"author":{"gitID":"-"},"content":"endif::[]"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":20,"author":{"gitID":"kexiaowen"},"content":"Welcome to Human Resources Plus (HR+)! HR+ is a free recruiting and talent management software designed for University Talent Acquisition Specialists to achieve hiring success. HR+ streamlines your recruiting process, increases your productivity and helps you make more consistent and informed hiring decisions."},{"lineNumber":21,"author":{"gitID":"kexiaowen"},"content":"To enjoy the full benefits of HR+, you should be comfortable using desktop applications and working with a Command Line Interface (CLI). If you can type fast, HR+ can get your talent management tasks done faster than traditional Graphical User Interface (GUI) applications."},{"lineNumber":22,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":23,"author":{"gitID":"kexiaowen"},"content":"Start optimising your hiring process today with HR+ to hire the right ones!"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"\u003d\u003d Site Map"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":"* \u003c\u003cUserGuide#, User Guide\u003e\u003e"},{"lineNumber":28,"author":{"gitID":"-"},"content":"* \u003c\u003cDeveloperGuide#, Developer Guide\u003e\u003e"},{"lineNumber":29,"author":{"gitID":"-"},"content":"* \u003c\u003cAboutUs#, About Us\u003e\u003e"},{"lineNumber":30,"author":{"gitID":"-"},"content":"* \u003c\u003cContactUs#, Contact Us\u003e\u003e"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"\u003d\u003d Acknowledgements"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"* Some parts of this sample application were inspired by the excellent http://code.makery.ch/library/javafx-8-tutorial/[Java FX tutorial] by"},{"lineNumber":35,"author":{"gitID":"-"},"content":"_Marco Jakob_."},{"lineNumber":36,"author":{"gitID":"-"},"content":"* Libraries used: https://github.com/TomasMikula/EasyBind[EasyBind], https://github.com/TestFX/TestFX[TextFX], https://bitbucket.org/controlsfx/controlsfx/[ControlsFX], https://github.com/FasterXML/jackson[Jackson], https://github.com/google/guava[Guava], https://github.com/junit-team/junit4[JUnit4]"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":"* The project is built upon source code based on SE-EDU initiative at https://github.com/se-edu/"},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"-"},"content":"\u003d\u003d Licence : link:LICENSE[MIT]"}],"authorContributionMap":{"kexiaowen":5,"mhq199657":1,"-":30,"tanhengyeow":2,"Ang-YC":1}},{"path":"docs/team/angyeechin.adoc","lines":[{"lineNumber":1,"author":{"gitID":"Ang-YC"},"content":"\u003d Ang Yee Chin - Project Portfolio"},{"lineNumber":2,"author":{"gitID":"mhq199657"},"content":":imagesDir: ../images"},{"lineNumber":3,"author":{"gitID":"mhq199657"},"content":":stylesDir: ../stylesheets"},{"lineNumber":4,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":5,"author":{"gitID":"mhq199657"},"content":"\u003d\u003d PROJECT: HR+"},{"lineNumber":6,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":7,"author":{"gitID":"mhq199657"},"content":"---"},{"lineNumber":8,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":9,"author":{"gitID":"mhq199657"},"content":"\u003d\u003d Overview"},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":11,"author":{"gitID":"Ang-YC"},"content":"HR+ is a recruiting and talent management desktop application targeting University Talent Acquisition Specialists. It is built to help them manage a significant number of student contacts and find the best-fitting candidates. University Talent Acquisition Specialists interact with HR+ using a Command Line Interface(CLI). HR+ has a Graphical User Interface(GUI) created with JavaFX and it is written in Java with approximately 33 kLOC."},{"lineNumber":12,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":14,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d Summary of contributions"},{"lineNumber":15,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":16,"author":{"gitID":"Ang-YC"},"content":"* *Major enhancement*: Revamps the user interface and Improve user experience"},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":"(Pull requests https://github.com/CS2103JAN2018-W14-B3/main/pull/50[#50])"},{"lineNumber":18,"author":{"gitID":"Ang-YC"},"content":"** What it does: New user interface featured a clean theme which allows user to find the necessary information easily, thus improve in performance and productivity of the user."},{"lineNumber":19,"author":{"gitID":"Ang-YC"},"content":"** Justification: This enhancement is important because the user interface gives the first impression to the users."},{"lineNumber":20,"author":{"gitID":"Ang-YC"},"content":"** Highlights: This enhancement involves rewriting almost all FXML and Java code of the UI part. It also required changing and updating of `Logic` and `Model` in order to provide a seamless smooth interaction and animation between each components. Some parts and logic have to be rewritten such as the window event function (minimize, maximize, drag, resize) because it is not come out of the box for borderless window. Besides that, it is also responsive to adapt with different screen sizes."},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":22,"author":{"gitID":"Ang-YC"},"content":"* *Minor enhancement*:"},{"lineNumber":23,"author":{"gitID":"Ang-YC"},"content":"** Added `interview` command and field that allows the user to schedule an interview date of students using natural language parser from Natty library"},{"lineNumber":24,"author":{"gitID":"Ang-YC"},"content":"(Pull requests https://github.com/CS2103JAN2018-W14-B3/main/pull/21[#21])"},{"lineNumber":25,"author":{"gitID":"Ang-YC"},"content":"** Enhanced the `add` and `edit` command to include a new field `ProfileImage` and `Comment`, and wrote relevant tests (Pull requests https://github.com/CS2103JAN2018-W14-B3/main/pull/66[#66])"},{"lineNumber":26,"author":{"gitID":"Ang-YC"},"content":"** Added `show` command to allow the displaying of panels using command instead of [TAB] button. (Pull requests https://github.com/CS2103JAN2018-W14-B3/main/pull/114[#114])"},{"lineNumber":27,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":28,"author":{"gitID":"Ang-YC"},"content":"* *Code contributed*: [https://github.com/CS2103JAN2018-W14-B3/main/blob/master/collated/functional/Ang-YC.md[Functional code]] [https://github.com/CS2103JAN2018-W14-B3/main/blob/master/collated/test/Ang-YC.md[Test code]]"},{"lineNumber":29,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":30,"author":{"gitID":"Ang-YC"},"content":"* *Other contributions*:"},{"lineNumber":31,"author":{"gitID":"Ang-YC"},"content":"** *Functionality*:"},{"lineNumber":32,"author":{"gitID":"Ang-YC"},"content":"*** PDF Viewer are added with custom implementation (only the renderer are used from the PDFBox library) (Pull requests https://github.com/CS2103JAN2018-W14-B3/main/pull/80[#80])"},{"lineNumber":33,"author":{"gitID":"Ang-YC"},"content":"*** Most of the panels in the interface are animated to provide a better interaction and transition. (Pull requests https://github.com/CS2103JAN2018-W14-B3/main/pull/114[#114])"},{"lineNumber":34,"author":{"gitID":"Ang-YC"},"content":"*** Radar chart is implemented using Canvas for better visualizing of the rating. (Pull requests https://github.com/CS2103JAN2018-W14-B3/main/pull/114[#114])"},{"lineNumber":35,"author":{"gitID":"Ang-YC"},"content":"*** Floating real-time parsing panel are added to show parsed result before executing. (Pull requests https://github.com/CS2103JAN2018-W14-B3/main/pull/114[#114])"},{"lineNumber":36,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":37,"author":{"gitID":"Ang-YC"},"content":"** *Performance*:"},{"lineNumber":38,"author":{"gitID":"Ang-YC"},"content":"*** Multi-threading are used to prevent from thread blocking when loading the resume / PDF files (Pull requests https://github.com/CS2103JAN2018-W14-B3/main/pull/80[#80])"},{"lineNumber":39,"author":{"gitID":"Ang-YC"},"content":"*** Profile Image are loaded only once, resized and cropped into correct dimension. (Pull requests https://github.com/CS2103JAN2018-W14-B3/main/pull/114[#114])"},{"lineNumber":40,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":41,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":42,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":43,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":44,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":45,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d Contributions to the User Guide"},{"lineNumber":46,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":47,"author":{"gitID":"Ang-YC"},"content":"|\u003d\u003d\u003d"},{"lineNumber":48,"author":{"gitID":"Ang-YC"},"content":"|_Given below are sections I contributed to the User Guide. They showcase my ability to write documentation targeting end-users._"},{"lineNumber":49,"author":{"gitID":"Ang-YC"},"content":"|\u003d\u003d\u003d"},{"lineNumber":50,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":51,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":52,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":53,"author":{"gitID":"Ang-YC"},"content":"// tag::show[]"},{"lineNumber":54,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d Showing a specific panel: `show` `[since v1.5]`"},{"lineNumber":55,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":56,"author":{"gitID":"Ang-YC"},"content":"Showing a specific panel for more information about the currently selected person in HR+. +"},{"lineNumber":57,"author":{"gitID":"Ang-YC"},"content":"Format: `show PANEL`"},{"lineNumber":58,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":59,"author":{"gitID":"Ang-YC"},"content":"****"},{"lineNumber":60,"author":{"gitID":"Ang-YC"},"content":"* Make sure person are selected using `select` command before executing this command"},{"lineNumber":61,"author":{"gitID":"Ang-YC"},"content":"* When resume is requested, it will only shows when it is available."},{"lineNumber":62,"author":{"gitID":"Ang-YC"},"content":"* `PANEL` must be either \u0027info\u0027 or \u0027resume\u0027, case sensitive"},{"lineNumber":63,"author":{"gitID":"Ang-YC"},"content":"****"},{"lineNumber":64,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":65,"author":{"gitID":"Ang-YC"},"content":"Examples:"},{"lineNumber":66,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":67,"author":{"gitID":"Ang-YC"},"content":"* `show info` +"},{"lineNumber":68,"author":{"gitID":"Ang-YC"},"content":"shows the info panel of the currently selected person."},{"lineNumber":69,"author":{"gitID":"Ang-YC"},"content":"* `show resume` +"},{"lineNumber":70,"author":{"gitID":"Ang-YC"},"content":"shows the resume panel of the currently selected person."},{"lineNumber":71,"author":{"gitID":"Ang-YC"},"content":"// end::show[]"},{"lineNumber":72,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":73,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":74,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":75,"author":{"gitID":"Ang-YC"},"content":"// tag::interviewCommand[]"},{"lineNumber":76,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d Scheduling an interview for a person : `interview` `[since v1.2]`"},{"lineNumber":77,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":78,"author":{"gitID":"Ang-YC"},"content":"Schedules interview of an existing person in HR+. +"},{"lineNumber":79,"author":{"gitID":"Ang-YC"},"content":"Format: `interview INDEX DATE_TIME_EXPRESSION`"},{"lineNumber":80,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":81,"author":{"gitID":"Ang-YC"},"content":"****"},{"lineNumber":82,"author":{"gitID":"Ang-YC"},"content":"* interview command schedules interview for the person at the specified `INDEX`. The index refers to the index number shown in the last person listing. The index *must be a positive integer* 1, 2, 3, etc."},{"lineNumber":83,"author":{"gitID":"Ang-YC"},"content":"* `DATE_TIME_EXPRESSION` is the natural language date and time expression in English"},{"lineNumber":84,"author":{"gitID":"Ang-YC"},"content":"****"},{"lineNumber":85,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":86,"author":{"gitID":"Ang-YC"},"content":"Examples:"},{"lineNumber":87,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":88,"author":{"gitID":"Ang-YC"},"content":"* `interview 1 next Friday at 3pm` +"},{"lineNumber":89,"author":{"gitID":"Ang-YC"},"content":"schedules the interview of the 1st person to be next Friday at 3pm."},{"lineNumber":90,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":91,"author":{"gitID":"Ang-YC"},"content":"* `interview 2 Mar 14 2pm` +"},{"lineNumber":92,"author":{"gitID":"Ang-YC"},"content":"schedules the interview of the 2nd person to be 14 March at 2pm."},{"lineNumber":93,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":94,"author":{"gitID":"Ang-YC"},"content":"Due to the complexity of languages, the parser might fail to interpret what you mean."},{"lineNumber":95,"author":{"gitID":"Ang-YC"},"content":"Always refer to the real time floating panel below the command box (As shown in figure below) to check what is the parsed result."},{"lineNumber":96,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":97,"author":{"gitID":"Ang-YC"},"content":"image::userinterface/float_panel.png[width\u003d\"250\"]"},{"lineNumber":98,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":99,"author":{"gitID":"Ang-YC"},"content":"Below are some of the syntax for natural date and time parser:"},{"lineNumber":100,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":101,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d Formal dates"},{"lineNumber":102,"author":{"gitID":"Ang-YC"},"content":"Formal dates are represented using integers, separated by character - or /."},{"lineNumber":103,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":104,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d\u003d Format"},{"lineNumber":105,"author":{"gitID":"Ang-YC"},"content":"****"},{"lineNumber":106,"author":{"gitID":"Ang-YC"},"content":"- `YYYY-MM-DD`"},{"lineNumber":107,"author":{"gitID":"Ang-YC"},"content":"- `YYYY/MM/DD`"},{"lineNumber":108,"author":{"gitID":"Ang-YC"},"content":"- `MM-DD-YYYY`"},{"lineNumber":109,"author":{"gitID":"Ang-YC"},"content":"- `MM/DD/YYYY`"},{"lineNumber":110,"author":{"gitID":"Ang-YC"},"content":"****"},{"lineNumber":111,"author":{"gitID":"Ang-YC"},"content":"- `DD` represent the day of a month"},{"lineNumber":112,"author":{"gitID":"Ang-YC"},"content":"- `MM` represent the month of a year"},{"lineNumber":113,"author":{"gitID":"Ang-YC"},"content":"- `YYYY` represent the year"},{"lineNumber":114,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":115,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d\u003d Example"},{"lineNumber":116,"author":{"gitID":"Ang-YC"},"content":"|\u003d\u003d\u003d"},{"lineNumber":117,"author":{"gitID":"Ang-YC"},"content":"| *Input*    | *Output*"},{"lineNumber":118,"author":{"gitID":"Ang-YC"},"content":"| 2018-04-21 | 21/04/2018"},{"lineNumber":119,"author":{"gitID":"Ang-YC"},"content":"| 2018/04/21 | 21/04/2018"},{"lineNumber":120,"author":{"gitID":"Ang-YC"},"content":"| 04-21-2018 | 21/04/2018"},{"lineNumber":121,"author":{"gitID":"Ang-YC"},"content":"| 04/21/2018 | 21/04/2018"},{"lineNumber":122,"author":{"gitID":"Ang-YC"},"content":"|\u003d\u003d\u003d"},{"lineNumber":123,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":124,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d Relaxed dates"},{"lineNumber":125,"author":{"gitID":"Ang-YC"},"content":"Relaxed dates are those in which the information are provided as words instead of integers."},{"lineNumber":126,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":127,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d\u003d Example"},{"lineNumber":128,"author":{"gitID":"Ang-YC"},"content":"|\u003d\u003d\u003d"},{"lineNumber":129,"author":{"gitID":"Ang-YC"},"content":"| *Input*          | *Output*"},{"lineNumber":130,"author":{"gitID":"Ang-YC"},"content":"| 21st April 2018  | 21/04/2018"},{"lineNumber":131,"author":{"gitID":"Ang-YC"},"content":"| Sat, 21 Apr 2018 | 21/04/2018"},{"lineNumber":132,"author":{"gitID":"Ang-YC"},"content":"| Apr 21           | 21/04, the year when the command executed"},{"lineNumber":133,"author":{"gitID":"Ang-YC"},"content":"|\u003d\u003d\u003d"},{"lineNumber":134,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":135,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d Relative dates"},{"lineNumber":136,"author":{"gitID":"Ang-YC"},"content":"Relative dates are those that are relative to the current date."},{"lineNumber":137,"author":{"gitID":"Ang-YC"},"content":"Do note that a week starts on Sunday and ends on the next Saturday."},{"lineNumber":138,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":139,"author":{"gitID":"Ang-YC"},"content":"****"},{"lineNumber":140,"author":{"gitID":"Ang-YC"},"content":"- `YYYY-MM-DD`"},{"lineNumber":141,"author":{"gitID":"Ang-YC"},"content":"- `YYYY/MM/DD`"},{"lineNumber":142,"author":{"gitID":"Ang-YC"},"content":"- `MM-DD-YYYY`"},{"lineNumber":143,"author":{"gitID":"Ang-YC"},"content":"- `MM/DD/YYYY`"},{"lineNumber":144,"author":{"gitID":"Ang-YC"},"content":"****"},{"lineNumber":145,"author":{"gitID":"Ang-YC"},"content":"- `DD` represent the day of a month"},{"lineNumber":146,"author":{"gitID":"Ang-YC"},"content":"- `MM` represent the month of a year"},{"lineNumber":147,"author":{"gitID":"Ang-YC"},"content":"- `YYYY` represent the year"},{"lineNumber":148,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":149,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d\u003d Format"},{"lineNumber":150,"author":{"gitID":"Ang-YC"},"content":"****"},{"lineNumber":151,"author":{"gitID":"Ang-YC"},"content":"- next `DAY`"},{"lineNumber":152,"author":{"gitID":"Ang-YC"},"content":"- last `DAY`"},{"lineNumber":153,"author":{"gitID":"Ang-YC"},"content":"- `NUMBER` days from now"},{"lineNumber":154,"author":{"gitID":"Ang-YC"},"content":"- `NUMBER` weeks ago"},{"lineNumber":155,"author":{"gitID":"Ang-YC"},"content":"****"},{"lineNumber":156,"author":{"gitID":"Ang-YC"},"content":"- `DAY` represent the day of the week (Monday, Tuesday, ...)"},{"lineNumber":157,"author":{"gitID":"Ang-YC"},"content":"- `NUMBER` represent the integer or word representation of a number (1, two, 5)"},{"lineNumber":158,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":159,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d\u003d Example"},{"lineNumber":160,"author":{"gitID":"Ang-YC"},"content":"|\u003d\u003d\u003d"},{"lineNumber":161,"author":{"gitID":"Ang-YC"},"content":"| *Input*          | *Output*"},{"lineNumber":162,"author":{"gitID":"Ang-YC"},"content":"| next thursday    | Next Thursday after the command executed"},{"lineNumber":163,"author":{"gitID":"Ang-YC"},"content":"| last wednesday   | The Wednesday before the command executed"},{"lineNumber":164,"author":{"gitID":"Ang-YC"},"content":"| today            | The day when the command executed"},{"lineNumber":165,"author":{"gitID":"Ang-YC"},"content":"| tomorrow         | The next day after the command executed"},{"lineNumber":166,"author":{"gitID":"Ang-YC"},"content":"| yesterday        | The day before the command executed"},{"lineNumber":167,"author":{"gitID":"Ang-YC"},"content":"| 3 days from now  | 3 days after the command executed"},{"lineNumber":168,"author":{"gitID":"Ang-YC"},"content":"| three weeks ago  | 3 weeks before the command executed"},{"lineNumber":169,"author":{"gitID":"Ang-YC"},"content":"|\u003d\u003d\u003d"},{"lineNumber":170,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":171,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d Time"},{"lineNumber":172,"author":{"gitID":"Ang-YC"},"content":"Time of a day."},{"lineNumber":173,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":174,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d\u003d Format"},{"lineNumber":175,"author":{"gitID":"Ang-YC"},"content":"****"},{"lineNumber":176,"author":{"gitID":"Ang-YC"},"content":"- `HH`[`MM`][`SS`][`MERIDIAN`]"},{"lineNumber":177,"author":{"gitID":"Ang-YC"},"content":"- [`WORD`]"},{"lineNumber":178,"author":{"gitID":"Ang-YC"},"content":"****"},{"lineNumber":179,"author":{"gitID":"Ang-YC"},"content":"- `HH` represent the hour of a day (Range of 00-23)"},{"lineNumber":180,"author":{"gitID":"Ang-YC"},"content":"- `MM` represent the minute of an hour (Range of 00-59), optional"},{"lineNumber":181,"author":{"gitID":"Ang-YC"},"content":"- `SS` represent the second of a minute (Range of 00-59), optional"},{"lineNumber":182,"author":{"gitID":"Ang-YC"},"content":"- `MERIDIAN` indicates the meridian (a, p, am, pm, a.m., p.m.), optional"},{"lineNumber":183,"author":{"gitID":"Ang-YC"},"content":"- `WORD` can be any of (afternoon: 12pm, noon: 12pm, midnight: 12am, morning: 8am, evening: 7pm)"},{"lineNumber":184,"author":{"gitID":"Ang-YC"},"content":"- : can be added to separate between HH, MM and SS (such as 21:00)"},{"lineNumber":185,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":186,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d\u003d Example"},{"lineNumber":187,"author":{"gitID":"Ang-YC"},"content":"|\u003d\u003d\u003d"},{"lineNumber":188,"author":{"gitID":"Ang-YC"},"content":"| *Input*    | *Output*"},{"lineNumber":189,"author":{"gitID":"Ang-YC"},"content":"| 21         | 9:00:00pm"},{"lineNumber":190,"author":{"gitID":"Ang-YC"},"content":"| 232015     | 11:20:15pm"},{"lineNumber":191,"author":{"gitID":"Ang-YC"},"content":"| 21:00      | 9:00:00pm"},{"lineNumber":192,"author":{"gitID":"Ang-YC"},"content":"| 8a         | 8:00:00am"},{"lineNumber":193,"author":{"gitID":"Ang-YC"},"content":"| 7am        | 7:00:00am"},{"lineNumber":194,"author":{"gitID":"Ang-YC"},"content":"| 6:30 a.m.  | 6:30:00am"},{"lineNumber":195,"author":{"gitID":"Ang-YC"},"content":"| afternoon  | 12:00:00pm"},{"lineNumber":196,"author":{"gitID":"Ang-YC"},"content":"| midnight   | 12:00:00am"},{"lineNumber":197,"author":{"gitID":"Ang-YC"},"content":"|\u003d\u003d\u003d"},{"lineNumber":198,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":199,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d Relative Time"},{"lineNumber":200,"author":{"gitID":"Ang-YC"},"content":"Similar to relative dates, it is used to specify time that are relative to the current time."},{"lineNumber":201,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":202,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d\u003d Format"},{"lineNumber":203,"author":{"gitID":"Ang-YC"},"content":"****"},{"lineNumber":204,"author":{"gitID":"Ang-YC"},"content":"- `NUMBER` `UNIT` ago"},{"lineNumber":205,"author":{"gitID":"Ang-YC"},"content":"- `NUMBER` `UNIT` from now"},{"lineNumber":206,"author":{"gitID":"Ang-YC"},"content":"- `NUMBER` `UNIT` later"},{"lineNumber":207,"author":{"gitID":"Ang-YC"},"content":"- in `NUMBER` `UNIT`"},{"lineNumber":208,"author":{"gitID":"Ang-YC"},"content":"****"},{"lineNumber":209,"author":{"gitID":"Ang-YC"},"content":"- `NUMBER` represent the integer or word representation of a number (1, two, 5)"},{"lineNumber":210,"author":{"gitID":"Ang-YC"},"content":"- `UNIT` represent the unit of the"},{"lineNumber":211,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":212,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d\u003d Example"},{"lineNumber":213,"author":{"gitID":"Ang-YC"},"content":"|\u003d\u003d\u003d"},{"lineNumber":214,"author":{"gitID":"Ang-YC"},"content":"| *Input*             | *Output*"},{"lineNumber":215,"author":{"gitID":"Ang-YC"},"content":"| 10 seconds ago      | 10 second before the command executed"},{"lineNumber":216,"author":{"gitID":"Ang-YC"},"content":"| 4 minutes from now  | 4 minutes after the command executed"},{"lineNumber":217,"author":{"gitID":"Ang-YC"},"content":"| 8 hours later       | 8 hours after the command executed"},{"lineNumber":218,"author":{"gitID":"Ang-YC"},"content":"| in 5 minutes        | 5 minutes after the command executed"},{"lineNumber":219,"author":{"gitID":"Ang-YC"},"content":"|\u003d\u003d\u003d"},{"lineNumber":220,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":221,"author":{"gitID":"Ang-YC"},"content":"The syntax above is just part of the accepted values, detailed grammar definition can be found on http://natty.joestelmach.com/doc.jsp[Natty\u0027s documentation]"},{"lineNumber":222,"author":{"gitID":"Ang-YC"},"content":"// end::interviewCommand[]"},{"lineNumber":223,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":224,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":225,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":226,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":227,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":228,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d Contributions to the Developer Guide"},{"lineNumber":229,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":230,"author":{"gitID":"Ang-YC"},"content":"|\u003d\u003d\u003d"},{"lineNumber":231,"author":{"gitID":"Ang-YC"},"content":"|_Given below are sections I contributed to the Developer Guide. They showcase my ability to write technical documentation and the technical depth of my contributions to the project._"},{"lineNumber":232,"author":{"gitID":"Ang-YC"},"content":"|\u003d\u003d\u003d"},{"lineNumber":233,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":234,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":235,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":236,"author":{"gitID":"Ang-YC"},"content":"// tag::interview[]"},{"lineNumber":237,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d Interview Command"},{"lineNumber":238,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":239,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d Current Implementation"},{"lineNumber":240,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":241,"author":{"gitID":"Ang-YC"},"content":"The `interview` command allows Talent Acquisition Specialists to schedule an interview for candidates. The format of this command is `interview INDEX DATE_TIME_EXPRESSION`."},{"lineNumber":242,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":243,"author":{"gitID":"Ang-YC"},"content":"This command make use of Natty, a natural language date parser library written in Java. When given a date expression, it will apply standard language recognition and translation techniques to produce `LocalDateTime` which represents the result."},{"lineNumber":244,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":245,"author":{"gitID":"Ang-YC"},"content":"In our current implementation, the `interview` command inherits from the `UndoableCommand` class. Two components, `Logic` and `Model`, are involved in the execution of this command. The `Logic` component is responsible for parsing user inputs while the `Model` component deals with updating of filtered person list."},{"lineNumber":246,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":247,"author":{"gitID":"Ang-YC"},"content":"Below is a sequence diagram that illustrates how these two components interact when the `interview` command is executed:"},{"lineNumber":248,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":249,"author":{"gitID":"Ang-YC"},"content":"image::InterviewCommandSequenceDiagram.png[width\u003d\"800\"]"},{"lineNumber":250,"author":{"gitID":"Ang-YC"},"content":"Figure 3.6.1.1 Sequence diagram to illustrate component interactions for the `interview` command"},{"lineNumber":251,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":252,"author":{"gitID":"Ang-YC"},"content":"As shown above, execution of the `interview` command comprises the following steps:"},{"lineNumber":253,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":254,"author":{"gitID":"Ang-YC"},"content":". `LogicManager` invokes `parseCommand` method of `AddressbookParser`, taking user inputs as arguments."},{"lineNumber":255,"author":{"gitID":"Ang-YC"},"content":". During the `parseCommand` method call, an instance of `InterviewCommandParser` will be created when the keyword \"interview\" is matched. `InterviewCommandParser` then extracts the remaining user inputs and a `InterviewCommand` instance `i` will be returned provided that the format of user\u0027s input is correct."},{"lineNumber":256,"author":{"gitID":"Ang-YC"},"content":". `LogicManager` then calls `executeUndoableCommand` of the `InterviewCommand`, `i`, instantiated in step 2. Another component, `Model`, will be involved as the `InterviewCommand` requests to update the interview date of the person."},{"lineNumber":257,"author":{"gitID":"Ang-YC"},"content":". The `Model` component gets the filtered persons list and replaces `Person` p1 with `Person` p2 which is identical to p2 except interview date. A `CommandResult` will be generated and returned to `LogicManager`."},{"lineNumber":258,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":259,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d Design Considerations"},{"lineNumber":260,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":261,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d\u003d Aspect: Usage of natural language parser"},{"lineNumber":262,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":263,"author":{"gitID":"Ang-YC"},"content":"* **Alternative 1 (current choice):** Use the natural language parser library by Natty to specify date and time"},{"lineNumber":264,"author":{"gitID":"Ang-YC"},"content":"** Pros: Users are able to enter the date and time in more natural tone without looking at calendar (For example, schedule an interview next Friday at 3pm)"},{"lineNumber":265,"author":{"gitID":"Ang-YC"},"content":"** Cons: Natural language parser doesn\u0027t have 100% reliability due to the complexity of human language"},{"lineNumber":266,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":267,"author":{"gitID":"Ang-YC"},"content":"* **Alternative 2:** Use the typical DD/MM/YYYY HH:MM format to specify date and time"},{"lineNumber":268,"author":{"gitID":"Ang-YC"},"content":"** Pros: Users are able to specify the date and time precisely"},{"lineNumber":269,"author":{"gitID":"Ang-YC"},"content":"** Cons: Users have to be certain on the date and time, which have to refer to the calendar at the same time"},{"lineNumber":270,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":271,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d\u003d Aspect: Implementation of scheduling and editing interview date"},{"lineNumber":272,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":273,"author":{"gitID":"Ang-YC"},"content":"* **Alternative 1 (current choice):** Implement a new command class `InterviewCommand` that supports both scheduling and editing of interview date."},{"lineNumber":274,"author":{"gitID":"Ang-YC"},"content":"** Pros: Results in more customisable and modular command that can be easily modified"},{"lineNumber":275,"author":{"gitID":"Ang-YC"},"content":"** Cons: Complicates the system as users need to familiarise themselves with more commands"},{"lineNumber":276,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":277,"author":{"gitID":"Ang-YC"},"content":"* **Alternative 2:** Extend the original `EditCommand` to allow it to schedule and modify interview date of a candidate"},{"lineNumber":278,"author":{"gitID":"Ang-YC"},"content":"** Pros: Minimises the number of commands users have to remember to execute tasks, making the application more user-friendly"},{"lineNumber":279,"author":{"gitID":"Ang-YC"},"content":"** Cons: Requires substantial changes to `EditCommandParser` and hence harder to implement"},{"lineNumber":280,"author":{"gitID":"Ang-YC"},"content":"// end::interview[]"},{"lineNumber":281,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":282,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":283,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":284,"author":{"gitID":"Ang-YC"},"content":"// tag::userinterface[]"},{"lineNumber":285,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d User Interface"},{"lineNumber":286,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":287,"author":{"gitID":"Ang-YC"},"content":"Our user interface is specially designed to maximise HR+’s usability and improve user experience. We take into account minor details and ensure that data is presented clearly so that it appeals to our users."},{"lineNumber":288,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":289,"author":{"gitID":"Ang-YC"},"content":"The following sections discuss the different aspects we have considered to make sure HR+ follows industry standards in user interface design. Our implementation follows https://material.io[Material Design] principles created by a leading technology company Google."},{"lineNumber":290,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":291,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d Responsive Design"},{"lineNumber":292,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":293,"author":{"gitID":"Ang-YC"},"content":"Responsive design is an approach to provide optimal viewing experience of an application regardless of the screen size of the user’s device. To incorporate responsive design into HR+, we use `AnchorPane` , a built-in JavaFX container component, to support relative positioning for all four directions (left, right, top and down) between parent and child components."},{"lineNumber":294,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":295,"author":{"gitID":"Ang-YC"},"content":"All UI components have a minimum size requirement. Therefore, every container component in HR+ has a `minWidth` property."},{"lineNumber":296,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":297,"author":{"gitID":"Ang-YC"},"content":"Besides `AnchorPane` , we also set a listener on the size of `InfoPanel` - a panel that displays detailed information about a student in HR+. The following code snippets illustrate how this listener is implemented:"},{"lineNumber":298,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":299,"author":{"gitID":"Ang-YC"},"content":"[source,java]"},{"lineNumber":300,"author":{"gitID":"Ang-YC"},"content":"----"},{"lineNumber":301,"author":{"gitID":"Ang-YC"},"content":"// SPLIT_MIN_WIDTH is a constant to define when to trigger the merge"},{"lineNumber":302,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":303,"author":{"gitID":"Ang-YC"},"content":"infoPaneWrapper.widthProperty().addListener((obs, old, newValue) -\u003e {"},{"lineNumber":304,"author":{"gitID":"Ang-YC"},"content":"    int width \u003d newValue.intValue();"},{"lineNumber":305,"author":{"gitID":"Ang-YC"},"content":"    if (width \u003e\u003d SPLIT_MIN_WIDTH) {"},{"lineNumber":306,"author":{"gitID":"Ang-YC"},"content":"        // Split into two parts"},{"lineNumber":307,"author":{"gitID":"Ang-YC"},"content":"    } else {"},{"lineNumber":308,"author":{"gitID":"Ang-YC"},"content":"        // Merge into one part"},{"lineNumber":309,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":310,"author":{"gitID":"Ang-YC"},"content":"});"},{"lineNumber":311,"author":{"gitID":"Ang-YC"},"content":"----"},{"lineNumber":312,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":313,"author":{"gitID":"Ang-YC"},"content":"When a user runs HR+ on a device with a bigger screen size, the `InfoPanel` will be split into two parts. The left panel will display student’s information while the right panel shows the student’s rating scores and a View resume button. The figure below (Figure 3.7.1.1) shows an example of our interface on devices with larger screens:"},{"lineNumber":314,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":315,"author":{"gitID":"Ang-YC"},"content":"image::userinterface/responsive_split.png[width\u003d\"500\"]"},{"lineNumber":316,"author":{"gitID":"Ang-YC"},"content":"Figure 3.7.1.1 InfoPanel on devices with larger screens"},{"lineNumber":317,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":318,"author":{"gitID":"Ang-YC"},"content":"On the other hand, if the device has a smaller screen size, the two components of `InfoPanel` will collapse into one. The student’s information is on top of the student’s ratings. `ScrollPane` in `InfoPanel` allows the user to scroll through the single merged panel. The figure below (Figure 3.7.1.2) shows our sample interface on devices with smaller screens:"},{"lineNumber":319,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":320,"author":{"gitID":"Ang-YC"},"content":"image::userinterface/responsive_merge.png[width\u003d\"300\"]"},{"lineNumber":321,"author":{"gitID":"Ang-YC"},"content":"Figure 3.7.1.2 InfoPanel on devices with smaller screens"},{"lineNumber":322,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":323,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d Consistency"},{"lineNumber":324,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":325,"author":{"gitID":"Ang-YC"},"content":"Consistency is another principle that is important in life and in design. Not only it brings up the professional feel and look, users will feel that the app is more reliable and robust. Besides that, it is easier for users to get started as the app follows a consistent pattern."},{"lineNumber":326,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":327,"author":{"gitID":"Ang-YC"},"content":"In order to follow this principle, we have used consistent color, layout and also fonts throughout the whole app. It will be discussed the in details below:"},{"lineNumber":328,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":329,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d\u003d Color"},{"lineNumber":330,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":331,"author":{"gitID":"Ang-YC"},"content":"The primary color in HR+ is blue, with 10 shades of blue in the figure illustrated below (Figure 3.7.2.1). Other than the primary color, different shades of grey are also being used to show the level of significance of an information. Besides that, the colors that are being used are harmonized such that it brings up an unified feeling while users are using the app."},{"lineNumber":332,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":333,"author":{"gitID":"Ang-YC"},"content":"image::userinterface/blue_shades.png[width\u003d\"300\"]"},{"lineNumber":334,"author":{"gitID":"Ang-YC"},"content":"Figure 3.7.2.1 10 shades of blue used in HR+"},{"lineNumber":335,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":336,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d\u003d Layout"},{"lineNumber":337,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":338,"author":{"gitID":"Ang-YC"},"content":"The spacing and layout inside HR+ is consistent and balanced. We make good use of spacing to achieve grouping of elements so that legibility is improved. This allow users to have a sense of which information are relevant to each other."},{"lineNumber":339,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":340,"author":{"gitID":"Ang-YC"},"content":"For example, it is easy to separate between the applicant\u0027s information, contact information and interview information at a glance without the need of boxes. Examples are shown in the figure below (Figure 3.7.2.2)"},{"lineNumber":341,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":342,"author":{"gitID":"Ang-YC"},"content":"image::userinterface/spacing_group.png[width\u003d\"300\"]"},{"lineNumber":343,"author":{"gitID":"Ang-YC"},"content":"Figure 3.7.2.2 Grouping with spacing"},{"lineNumber":344,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":345,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d\u003d Fonts"},{"lineNumber":346,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":347,"author":{"gitID":"Ang-YC"},"content":"The font family that is being used is Roboto. It follows a natural width that allows text to be read more fluently. Moreover, this font featured 6 different weights (thin, light, regular, medium, bold and black) which will allow text to be represented depending on the different level of importance. All different weights are shown in the figure below. (Figure 3.7.2.3)"},{"lineNumber":348,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":349,"author":{"gitID":"Ang-YC"},"content":"image::userinterface/roboto_weight.png[width\u003d\"300\"]"},{"lineNumber":350,"author":{"gitID":"Ang-YC"},"content":"Figure 3.7.2.3 Different weights of Roboto font"},{"lineNumber":351,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":352,"author":{"gitID":"Ang-YC"},"content":"Important information is usually shown with a higher weight whereas trivial information is shown with a lower weight. This allow users to skim through the information to process data easily. The fonts are stored in `resources/fonts` folder and embedded into the packaged app so that it can be loaded on all devices."},{"lineNumber":353,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":354,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d Familiarity"},{"lineNumber":355,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":356,"author":{"gitID":"Ang-YC"},"content":"Familiarity is another aspect that is useful when designing an app. It can reduce the cognitive load of a user so that users will not feel overwhelmed by the information that is being displayed."},{"lineNumber":357,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":358,"author":{"gitID":"Ang-YC"},"content":"In HR+, icons are used to represent some of the fields. For example, stars are used to represent average rating of an applicant in the PersonCard list on the left (Figure 3.7.3.1, pointed with red arrow)."},{"lineNumber":359,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":360,"author":{"gitID":"Ang-YC"},"content":"image::userinterface/familiar_star.png[width\u003d\"300\"]"},{"lineNumber":361,"author":{"gitID":"Ang-YC"},"content":"Figure 3.7.3.1 Rating icon in PersonCard"},{"lineNumber":362,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":363,"author":{"gitID":"Ang-YC"},"content":"Besides that, contact information fields such as e-mail, address and mobile phone number uses a familiar icon. (Figure 3.7.3.2)"},{"lineNumber":364,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":365,"author":{"gitID":"Ang-YC"},"content":"image::userinterface/familiar_icons.png[width\u003d\"300\"]"},{"lineNumber":366,"author":{"gitID":"Ang-YC"},"content":"Figure 3.7.3.2 Contact information icons in InfoPanel"},{"lineNumber":367,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":368,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d Visual Feedback"},{"lineNumber":369,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":370,"author":{"gitID":"Ang-YC"},"content":"Visual Feedback is also essential for users to identify the current state of the app. This is because user might get interrupted while using the app and have to resume the session at any time."},{"lineNumber":371,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":372,"author":{"gitID":"Ang-YC"},"content":"In HR+, when an applicant is selected in the PersonCard list on the left panel, it will be highlighted in blue border and shadow so that users know who they are currently selecting. (Figure 3.7.4.1)"},{"lineNumber":373,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":374,"author":{"gitID":"Ang-YC"},"content":"image::userinterface/list_active.png[width\u003d\"300\"]"},{"lineNumber":375,"author":{"gitID":"Ang-YC"},"content":"Figure 3.7.4.1 Highlighting of selected PersonCard"},{"lineNumber":376,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":377,"author":{"gitID":"Ang-YC"},"content":"Besides that, there is an indication when a panel is selected. This allows users to traverse between panel using keyboard only. (Figure 3.7.4.2)"},{"lineNumber":378,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":379,"author":{"gitID":"Ang-YC"},"content":"image::userinterface/panel_active.png[width\u003d\"500\"]"},{"lineNumber":380,"author":{"gitID":"Ang-YC"},"content":"Figure 3.7.4.2 Highlighting of selected Panel"},{"lineNumber":381,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":382,"author":{"gitID":"Ang-YC"},"content":"Moreover, when a command entered in `CommandBox` is invalid, the text color will be changed into red to indicate that there is an error in the command itself. (Figure 3.7.4.3)"},{"lineNumber":383,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":384,"author":{"gitID":"Ang-YC"},"content":"image::userinterface/feedback_error.png[width\u003d\"250\"]"},{"lineNumber":385,"author":{"gitID":"Ang-YC"},"content":"Figure 3.7.4.3 Invalid command indicator"},{"lineNumber":386,"author":{"gitID":"Ang-YC"},"content":"// end::userinterface[]"}],"authorContributionMap":{"mhq199657":9,"Ang-YC":377}},{"path":"docs/team/tanhengyeow.adoc","lines":[{"lineNumber":1,"author":{"gitID":"tanhengyeow"},"content":"\u003d Tan Heng Yeow - Project Portfolio"},{"lineNumber":2,"author":{"gitID":"mhq199657"},"content":":imagesDir: ../images"},{"lineNumber":3,"author":{"gitID":"mhq199657"},"content":":stylesDir: ../stylesheets"},{"lineNumber":4,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":5,"author":{"gitID":"mhq199657"},"content":"\u003d\u003d PROJECT: HR+"},{"lineNumber":6,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":7,"author":{"gitID":"mhq199657"},"content":"---"},{"lineNumber":8,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":9,"author":{"gitID":"mhq199657"},"content":"\u003d\u003d Overview"},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":"HR+ is a recruiting and talent management desktop application targeting University Talent Acquisition Specialists. It is built to help them manage a significant number of student contacts and find the best-fitting candidates. University Talent Acquisition Specialists interact with HR+ using a Command Line Interface(CLI). HR+ has a Graphical User Interface(GUI) created with JavaFX and it is written in Java with approximately 33 kLOC."},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"\u003d\u003d Summary of contributions"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"* *Major enhancement*: enhanced *find command to support a variety of search patterns*"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"** What it does: The `find` command allows the user to search for a student easily through exact keyword match, fuzzy keyword match or wildcard keyword match."},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"** Justification: This feature is important as users might be managing a large number of contacts and finding the contacts that they desire is not easy."},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"** Highlights: This enhancement involves adding new predicates on top of existing ones. Various new classes are created to manage and process the new predicates. A singleton pattern class `FindResults` is created to store find results and provide utility functions for parsing predicates."},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"* *Minor enhancement*: added `Major` and `GradePointAverage` fields to all students. These fields affect the `add` command and are editable by the `edit` command. They are crucial details that affect the hiring decision of an university student."},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"* *Code contributed*: [https://github.com/CS2103JAN2018-W14-B3/main/blob/master/collated/functional/tanhengyeow.md[Functional code]] [https://github.com/CS2103JAN2018-W14-B3/main/blob/master/collated/test/tanhengyeow.md[Test code]]"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"* *Other contributions*:"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"** Project Management:"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"*** Setup Travis, AppVeyor and Coveralls (https://github.com/CS2103JAN2018-W14-B3/main/pull/4[#4])"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"*** Managed releases `v1.2 - v1.5` on GitHub"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"*** Provide updates to main repo (https://github.com/nus-cs2103-AY1718S2/addressbook-level4/pull/8[#8])"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"*** Maintained the issue tracker"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"** Enhancements to existing features:"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":"*** Added API for backing up storage in the future (https://github.com/CS2103JAN2018-W14-B3/main/pull/11[#11])"},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"** Documentation:"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":"*** Updated User Guide and Developer Guide (https://github.com/CS2103JAN2018-W14-B3/main/pull/3[#3], https://github.com/CS2103JAN2018-W14-B3/main/pull/19[#19], https://github.com/CS2103JAN2018-W14-B3/main/pull/52[#52], https://github.com/CS2103JAN2018-W14-B3/main/pull/61[#61], https://github.com/CS2103JAN2018-W14-B3/main/pull/79[#79], https://github.com/CS2103JAN2018-W14-B3/main/pull/118[#118])"},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"** Community:"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":"*** Reported bugs and suggestions for other projects (https://github.com/CS2103JAN2018-W10-B2/main/issues/81[#81], https://github.com/CS2103JAN2018-W10-B2/main/issues/74[#74], https://github.com/CS2103JAN2018-W10-B2/main/issues/71[#71], https://github.com/CS2103JAN2018-W10-B2/main/issues/70[#70])"},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"*** Participated in forum discussion (https://github.com/nus-cs2103-AY1718S2/forum/issues/7[#7], https://github.com/nus-cs2103-AY1718S2/forum/issues/12[#12])"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"*** Participated and assisted in queries on slack forum"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"-"},"content":"\u003d\u003d Contributions to the User Guide"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":"|\u003d\u003d\u003d"},{"lineNumber":48,"author":{"gitID":"-"},"content":"|_Given below are sections I contributed to the User Guide. They showcase my ability to write documentation targeting end-users._"},{"lineNumber":49,"author":{"gitID":"-"},"content":"|\u003d\u003d\u003d"},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":"include::../UserGuide.adoc[tag\u003dfind]"},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"include::../UserGuide.adoc[tag\u003dfuturefind]"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":55,"author":{"gitID":"-"},"content":"\u003d\u003d Contributions to the Developer Guide"},{"lineNumber":56,"author":{"gitID":"-"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":"|\u003d\u003d\u003d"},{"lineNumber":58,"author":{"gitID":"-"},"content":"|_Given below are sections I contributed to the Developer Guide. They showcase my ability to write technical documentation and the technical depth of my contributions to the project._"},{"lineNumber":59,"author":{"gitID":"-"},"content":"|\u003d\u003d\u003d"},{"lineNumber":60,"author":{"gitID":"-"},"content":""},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"include::../DeveloperGuide.adoc[tag\u003dfindcommand]"}],"authorContributionMap":{"mhq199657":9,"-":14,"tanhengyeow":38}},{"path":"src/test/java/systemtests/HelpCommandSystemTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertNotEquals;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.address.ui.testutil.GuiTestAssert.assertListMatching;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import guitests.GuiRobot;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import guitests.guihandles.HelpWindowHandle;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.HelpCommand;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.SelectCommand;"},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.ui.InfoPanel;"},{"lineNumber":18,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.ui.TitleBar;"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":21,"author":{"gitID":"-"},"content":" * A system test class for the help window, which contains interaction with other UI components."},{"lineNumber":22,"author":{"gitID":"-"},"content":" */"},{"lineNumber":23,"author":{"gitID":"-"},"content":"public class HelpCommandSystemTest extends AddressBookSystemTest {"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    private static final String ERROR_MESSAGE \u003d \"ATTENTION!!!! : On some computers, this test may fail when run on \""},{"lineNumber":25,"author":{"gitID":"-"},"content":"            + \"non-headless mode as FxRobot#clickOn(Node, MouseButton...) clicks on the wrong location. We suspect \""},{"lineNumber":26,"author":{"gitID":"-"},"content":"            + \"that this is a bug with TestFX library that we are using. If this test fails, you have to run your \""},{"lineNumber":27,"author":{"gitID":"-"},"content":"            + \"tests on headless mode. See UsingGradle.adoc on how to do so.\";"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    private final GuiRobot guiRobot \u003d new GuiRobot();"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    public void openHelpWindow() {"},{"lineNumber":33,"author":{"gitID":"-"},"content":"        //use accelerator"},{"lineNumber":34,"author":{"gitID":"-"},"content":"        getCommandBox().click();"},{"lineNumber":35,"author":{"gitID":"Ang-YC"},"content":"        getTitleBar().openHelpWindowUsingAccelerator();"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        assertHelpWindowOpen();"},{"lineNumber":37,"author":{"gitID":"-"},"content":""},{"lineNumber":38,"author":{"gitID":"-"},"content":"        getResultDisplay().click();"},{"lineNumber":39,"author":{"gitID":"Ang-YC"},"content":"        getTitleBar().openHelpWindowUsingAccelerator();"},{"lineNumber":40,"author":{"gitID":"-"},"content":"        assertHelpWindowOpen();"},{"lineNumber":41,"author":{"gitID":"-"},"content":""},{"lineNumber":42,"author":{"gitID":"-"},"content":"        getPersonListPanel().click();"},{"lineNumber":43,"author":{"gitID":"Ang-YC"},"content":"        getTitleBar().openHelpWindowUsingAccelerator();"},{"lineNumber":44,"author":{"gitID":"Ang-YC"},"content":"        assertHelpWindowNotOpen();"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"Ang-YC"},"content":"        getInfoPanel().click();"},{"lineNumber":47,"author":{"gitID":"Ang-YC"},"content":"        getTitleBar().openHelpWindowUsingAccelerator();"},{"lineNumber":48,"author":{"gitID":"Ang-YC"},"content":"        assertHelpWindowNotOpen();"},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"-"},"content":"        //use menu button"},{"lineNumber":51,"author":{"gitID":"Ang-YC"},"content":"        getTitleBar().openHelpWindowUsingControl();"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        assertHelpWindowOpen();"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"        //use command box"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        executeCommand(HelpCommand.COMMAND_WORD);"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        assertHelpWindowOpen();"},{"lineNumber":57,"author":{"gitID":"-"},"content":""},{"lineNumber":58,"author":{"gitID":"-"},"content":"        // open help window and give it focus"},{"lineNumber":59,"author":{"gitID":"-"},"content":"        executeCommand(HelpCommand.COMMAND_WORD);"},{"lineNumber":60,"author":{"gitID":"-"},"content":"        getMainWindowHandle().focus();"},{"lineNumber":61,"author":{"gitID":"-"},"content":""},{"lineNumber":62,"author":{"gitID":"-"},"content":"        // assert that while the help window is open the UI updates correctly for a command execution"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        executeCommand(SelectCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        assertEquals(\"\", getCommandBox().getInput());"},{"lineNumber":65,"author":{"gitID":"-"},"content":"        assertCommandBoxShowsDefaultStyle();"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        assertNotEquals(HelpCommand.SHOWING_HELP_MESSAGE, getResultDisplay().getText());"},{"lineNumber":67,"author":{"gitID":"Ang-YC"},"content":"        assertNotEquals(InfoPanel.DEFAULT_PERSON, getInfoPanel().getLoadedPerson());"},{"lineNumber":68,"author":{"gitID":"-"},"content":"        assertListMatching(getPersonListPanel(), getModel().getFilteredPersonList());"},{"lineNumber":69,"author":{"gitID":"-"},"content":""},{"lineNumber":70,"author":{"gitID":"-"},"content":"        // assert that the status bar too is updated correctly while the help window is open"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        // note: the select command tested above does not update the status bar"},{"lineNumber":72,"author":{"gitID":"-"},"content":"        executeCommand(DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());"},{"lineNumber":73,"author":{"gitID":"Ang-YC"},"content":"        assertNotEquals(TitleBar.SYNC_STATUS_INITIAL, getTitleBar().getSyncStatus());"},{"lineNumber":74,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitID":"-"},"content":""},{"lineNumber":76,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":77,"author":{"gitID":"-"},"content":"     * Asserts that the help window is open, and closes it after checking."},{"lineNumber":78,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":79,"author":{"gitID":"-"},"content":"    private void assertHelpWindowOpen() {"},{"lineNumber":80,"author":{"gitID":"-"},"content":"        assertTrue(ERROR_MESSAGE, HelpWindowHandle.isWindowPresent());"},{"lineNumber":81,"author":{"gitID":"-"},"content":"        guiRobot.pauseForHuman();"},{"lineNumber":82,"author":{"gitID":"-"},"content":""},{"lineNumber":83,"author":{"gitID":"-"},"content":"        new HelpWindowHandle(guiRobot.getStage(HelpWindowHandle.HELP_WINDOW_TITLE)).close();"},{"lineNumber":84,"author":{"gitID":"-"},"content":"        getMainWindowHandle().focus();"},{"lineNumber":85,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":86,"author":{"gitID":"-"},"content":""},{"lineNumber":87,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":88,"author":{"gitID":"-"},"content":"     * Asserts that the help window isn\u0027t open."},{"lineNumber":89,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":90,"author":{"gitID":"-"},"content":"    private void assertHelpWindowNotOpen() {"},{"lineNumber":91,"author":{"gitID":"-"},"content":"        assertFalse(ERROR_MESSAGE, HelpWindowHandle.isWindowPresent());"},{"lineNumber":92,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":93,"author":{"gitID":"-"},"content":""},{"lineNumber":94,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"-":82,"Ang-YC":12}},{"path":"src/test/java/systemtests/DeleteCommandSystemTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TestUtil.getLastIndex;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TestUtil.getMidIndex;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TestUtil.getPerson;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.KEYWORD_MATCHING_MEIER;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Messages;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.RedoCommand;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.UndoCommand;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"public class DeleteCommandSystemTest extends AddressBookSystemTest {"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"    private static final String MESSAGE_INVALID_DELETE_COMMAND_FORMAT \u003d"},{"lineNumber":27,"author":{"gitID":"-"},"content":"            String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE);"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    public void delete() {"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        /* ----------------- Performing delete operation while an unfiltered list is being shown -------------------- */"},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"-"},"content":"        /* Case: delete the first person in the list, command with leading spaces and trailing spaces -\u003e deleted */"},{"lineNumber":34,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":35,"author":{"gitID":"-"},"content":"        String command \u003d \"     \" + DeleteCommand.COMMAND_WORD + \"      \" + INDEX_FIRST_PERSON.getOneBased() + \"       \";"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        Person deletedPerson \u003d removePerson(expectedModel, INDEX_FIRST_PERSON);"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        String expectedResultMessage \u003d String.format(MESSAGE_DELETE_PERSON_SUCCESS, deletedPerson);"},{"lineNumber":38,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedModel, expectedResultMessage);"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"        /* Case: delete the last person in the list -\u003e deleted */"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        Model modelBeforeDeletingLast \u003d getModel();"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        Index lastPersonIndex \u003d getLastIndex(modelBeforeDeletingLast);"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        assertCommandSuccess(lastPersonIndex);"},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"-"},"content":"        /* Case: undo deleting the last person in the list -\u003e last person restored */"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        command \u003d UndoCommand.COMMAND_WORD;"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        expectedResultMessage \u003d UndoCommand.MESSAGE_SUCCESS;"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, modelBeforeDeletingLast, expectedResultMessage);"},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"-"},"content":"        /* Case: redo deleting the last person in the list -\u003e last person deleted again */"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        command \u003d RedoCommand.COMMAND_WORD;"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        removePerson(modelBeforeDeletingLast, lastPersonIndex);"},{"lineNumber":53,"author":{"gitID":"-"},"content":"        expectedResultMessage \u003d RedoCommand.MESSAGE_SUCCESS;"},{"lineNumber":54,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, modelBeforeDeletingLast, expectedResultMessage);"},{"lineNumber":55,"author":{"gitID":"-"},"content":""},{"lineNumber":56,"author":{"gitID":"-"},"content":"        /* Case: delete the middle person in the list -\u003e deleted */"},{"lineNumber":57,"author":{"gitID":"-"},"content":"        Index middlePersonIndex \u003d getMidIndex(getModel());"},{"lineNumber":58,"author":{"gitID":"-"},"content":"        assertCommandSuccess(middlePersonIndex);"},{"lineNumber":59,"author":{"gitID":"-"},"content":""},{"lineNumber":60,"author":{"gitID":"-"},"content":"        /* ------------------ Performing delete operation while a filtered list is being shown ---------------------- */"},{"lineNumber":61,"author":{"gitID":"-"},"content":""},{"lineNumber":62,"author":{"gitID":"-"},"content":"        /* Case: filtered person list, delete index within bounds of address book and person list -\u003e deleted */"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        showPersonsWithName(KEYWORD_MATCHING_MEIER);"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        Index index \u003d INDEX_FIRST_PERSON;"},{"lineNumber":65,"author":{"gitID":"-"},"content":"        assertTrue(index.getZeroBased() \u003c getModel().getFilteredPersonList().size());"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        assertCommandSuccess(index);"},{"lineNumber":67,"author":{"gitID":"-"},"content":""},{"lineNumber":68,"author":{"gitID":"-"},"content":"        /* Case: filtered person list, delete index within bounds of address book but out of bounds of person list"},{"lineNumber":69,"author":{"gitID":"-"},"content":"         * -\u003e rejected"},{"lineNumber":70,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        showPersonsWithName(KEYWORD_MATCHING_MEIER);"},{"lineNumber":72,"author":{"gitID":"-"},"content":"        int invalidIndex \u003d getModel().getAddressBook().getPersonList().size();"},{"lineNumber":73,"author":{"gitID":"-"},"content":"        command \u003d DeleteCommand.COMMAND_WORD + \" \" + invalidIndex;"},{"lineNumber":74,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"},{"lineNumber":75,"author":{"gitID":"-"},"content":""},{"lineNumber":76,"author":{"gitID":"-"},"content":"        /* --------------------- Performing delete operation while a person card is selected ------------------------ */"},{"lineNumber":77,"author":{"gitID":"-"},"content":""},{"lineNumber":78,"author":{"gitID":"-"},"content":"        /* Case: delete the selected person -\u003e person list panel selects the person before the deleted person */"},{"lineNumber":79,"author":{"gitID":"-"},"content":"        showAllPersons();"},{"lineNumber":80,"author":{"gitID":"-"},"content":"        expectedModel \u003d getModel();"},{"lineNumber":81,"author":{"gitID":"-"},"content":"        Index selectedIndex \u003d getLastIndex(expectedModel);"},{"lineNumber":82,"author":{"gitID":"Ang-YC"},"content":"        Index expectedIndex \u003d Index.fromZeroBased(Integer.MAX_VALUE);"},{"lineNumber":83,"author":{"gitID":"Ang-YC"},"content":"        // Max value is a flag for nothing is selected"},{"lineNumber":84,"author":{"gitID":"-"},"content":"        selectPerson(selectedIndex);"},{"lineNumber":85,"author":{"gitID":"-"},"content":"        command \u003d DeleteCommand.COMMAND_WORD + \" \" + selectedIndex.getOneBased();"},{"lineNumber":86,"author":{"gitID":"-"},"content":"        deletedPerson \u003d removePerson(expectedModel, selectedIndex);"},{"lineNumber":87,"author":{"gitID":"-"},"content":"        expectedResultMessage \u003d String.format(MESSAGE_DELETE_PERSON_SUCCESS, deletedPerson);"},{"lineNumber":88,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedModel, expectedResultMessage, expectedIndex);"},{"lineNumber":89,"author":{"gitID":"-"},"content":""},{"lineNumber":90,"author":{"gitID":"-"},"content":"        /* --------------------------------- Performing invalid delete operation ------------------------------------ */"},{"lineNumber":91,"author":{"gitID":"-"},"content":""},{"lineNumber":92,"author":{"gitID":"-"},"content":"        /* Case: invalid index (0) -\u003e rejected */"},{"lineNumber":93,"author":{"gitID":"-"},"content":"        command \u003d DeleteCommand.COMMAND_WORD + \" 0\";"},{"lineNumber":94,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, MESSAGE_INVALID_DELETE_COMMAND_FORMAT);"},{"lineNumber":95,"author":{"gitID":"-"},"content":""},{"lineNumber":96,"author":{"gitID":"-"},"content":"        /* Case: invalid index (-1) -\u003e rejected */"},{"lineNumber":97,"author":{"gitID":"-"},"content":"        command \u003d DeleteCommand.COMMAND_WORD + \" -1\";"},{"lineNumber":98,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, MESSAGE_INVALID_DELETE_COMMAND_FORMAT);"},{"lineNumber":99,"author":{"gitID":"-"},"content":""},{"lineNumber":100,"author":{"gitID":"-"},"content":"        /* Case: invalid index (size + 1) -\u003e rejected */"},{"lineNumber":101,"author":{"gitID":"-"},"content":"        Index outOfBoundsIndex \u003d Index.fromOneBased("},{"lineNumber":102,"author":{"gitID":"-"},"content":"                getModel().getAddressBook().getPersonList().size() + 1);"},{"lineNumber":103,"author":{"gitID":"-"},"content":"        command \u003d DeleteCommand.COMMAND_WORD + \" \" + outOfBoundsIndex.getOneBased();"},{"lineNumber":104,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"},{"lineNumber":105,"author":{"gitID":"-"},"content":""},{"lineNumber":106,"author":{"gitID":"-"},"content":"        /* Case: invalid arguments (alphabets) -\u003e rejected */"},{"lineNumber":107,"author":{"gitID":"-"},"content":"        assertCommandFailure(DeleteCommand.COMMAND_WORD + \" abc\", MESSAGE_INVALID_DELETE_COMMAND_FORMAT);"},{"lineNumber":108,"author":{"gitID":"-"},"content":""},{"lineNumber":109,"author":{"gitID":"-"},"content":"        /* Case: invalid arguments (extra argument) -\u003e rejected */"},{"lineNumber":110,"author":{"gitID":"-"},"content":"        assertCommandFailure(DeleteCommand.COMMAND_WORD + \" 1 abc\", MESSAGE_INVALID_DELETE_COMMAND_FORMAT);"},{"lineNumber":111,"author":{"gitID":"-"},"content":""},{"lineNumber":112,"author":{"gitID":"-"},"content":"        /* Case: mixed case command word -\u003e rejected */"},{"lineNumber":113,"author":{"gitID":"-"},"content":"        assertCommandFailure(\"DelETE 1\", MESSAGE_UNKNOWN_COMMAND);"},{"lineNumber":114,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":115,"author":{"gitID":"-"},"content":""},{"lineNumber":116,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":117,"author":{"gitID":"-"},"content":"     * Removes the {@code Person} at the specified {@code index} in {@code model}\u0027s address book."},{"lineNumber":118,"author":{"gitID":"-"},"content":"     * @return the removed person"},{"lineNumber":119,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":120,"author":{"gitID":"-"},"content":"    private Person removePerson(Model model, Index index) {"},{"lineNumber":121,"author":{"gitID":"-"},"content":"        Person targetPerson \u003d getPerson(model, index);"},{"lineNumber":122,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":123,"author":{"gitID":"-"},"content":"            model.deletePerson(targetPerson);"},{"lineNumber":124,"author":{"gitID":"-"},"content":"        } catch (PersonNotFoundException pnfe) {"},{"lineNumber":125,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"targetPerson is retrieved from model.\");"},{"lineNumber":126,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":127,"author":{"gitID":"-"},"content":"        return targetPerson;"},{"lineNumber":128,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":129,"author":{"gitID":"-"},"content":""},{"lineNumber":130,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":131,"author":{"gitID":"-"},"content":"     * Deletes the person at {@code toDelete} by creating a default {@code DeleteCommand} using {@code toDelete} and"},{"lineNumber":132,"author":{"gitID":"-"},"content":"     * performs the same verification as {@code assertCommandSuccess(String, Model, String)}."},{"lineNumber":133,"author":{"gitID":"-"},"content":"     * @see DeleteCommandSystemTest#assertCommandSuccess(String, Model, String)"},{"lineNumber":134,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":135,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(Index toDelete) {"},{"lineNumber":136,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":137,"author":{"gitID":"-"},"content":"        Person deletedPerson \u003d removePerson(expectedModel, toDelete);"},{"lineNumber":138,"author":{"gitID":"-"},"content":"        String expectedResultMessage \u003d String.format(MESSAGE_DELETE_PERSON_SUCCESS, deletedPerson);"},{"lineNumber":139,"author":{"gitID":"-"},"content":""},{"lineNumber":140,"author":{"gitID":"-"},"content":"        assertCommandSuccess("},{"lineNumber":141,"author":{"gitID":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + toDelete.getOneBased(), expectedModel, expectedResultMessage);"},{"lineNumber":142,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":143,"author":{"gitID":"-"},"content":""},{"lineNumber":144,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":145,"author":{"gitID":"-"},"content":"     * Executes {@code command} and in addition,\u003cbr\u003e"},{"lineNumber":146,"author":{"gitID":"-"},"content":"     * 1. Asserts that the command box displays an empty string.\u003cbr\u003e"},{"lineNumber":147,"author":{"gitID":"-"},"content":"     * 2. Asserts that the result display box displays {@code expectedResultMessage}.\u003cbr\u003e"},{"lineNumber":148,"author":{"gitID":"-"},"content":"     * 3. Asserts that the model related components equal to {@code expectedModel}.\u003cbr\u003e"},{"lineNumber":149,"author":{"gitID":"-"},"content":"     * 4. Asserts that the browser url and selected card remains unchanged.\u003cbr\u003e"},{"lineNumber":150,"author":{"gitID":"-"},"content":"     * 5. Asserts that the status bar\u0027s sync status changes.\u003cbr\u003e"},{"lineNumber":151,"author":{"gitID":"-"},"content":"     * 6. Asserts that the command box has the default style class.\u003cbr\u003e"},{"lineNumber":152,"author":{"gitID":"-"},"content":"     * Verifications 1 to 3 are performed by"},{"lineNumber":153,"author":{"gitID":"-"},"content":"     * {@code AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)}."},{"lineNumber":154,"author":{"gitID":"-"},"content":"     * @see AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":155,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":156,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(String command, Model expectedModel, String expectedResultMessage) {"},{"lineNumber":157,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedModel, expectedResultMessage, null);"},{"lineNumber":158,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":159,"author":{"gitID":"-"},"content":""},{"lineNumber":160,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":161,"author":{"gitID":"-"},"content":"     * Performs the same verification as {@code assertCommandSuccess(String, Model, String)} except that the browser url"},{"lineNumber":162,"author":{"gitID":"-"},"content":"     * and selected card are expected to update accordingly depending on the card at {@code expectedSelectedCardIndex}."},{"lineNumber":163,"author":{"gitID":"-"},"content":"     * @see DeleteCommandSystemTest#assertCommandSuccess(String, Model, String)"},{"lineNumber":164,"author":{"gitID":"-"},"content":"     * @see AddressBookSystemTest#assertSelectedCardChanged(Index)"},{"lineNumber":165,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":166,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(String command, Model expectedModel, String expectedResultMessage,"},{"lineNumber":167,"author":{"gitID":"-"},"content":"            Index expectedSelectedCardIndex) {"},{"lineNumber":168,"author":{"gitID":"-"},"content":"        executeCommand(command);"},{"lineNumber":169,"author":{"gitID":"-"},"content":"        assertApplicationDisplaysExpected(\"\", expectedResultMessage, expectedModel);"},{"lineNumber":170,"author":{"gitID":"-"},"content":""},{"lineNumber":171,"author":{"gitID":"-"},"content":"        if (expectedSelectedCardIndex !\u003d null) {"},{"lineNumber":172,"author":{"gitID":"-"},"content":"            assertSelectedCardChanged(expectedSelectedCardIndex);"},{"lineNumber":173,"author":{"gitID":"-"},"content":"        } else {"},{"lineNumber":174,"author":{"gitID":"-"},"content":"            assertSelectedCardUnchanged();"},{"lineNumber":175,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":176,"author":{"gitID":"-"},"content":""},{"lineNumber":177,"author":{"gitID":"-"},"content":"        assertCommandBoxShowsDefaultStyle();"},{"lineNumber":178,"author":{"gitID":"-"},"content":"        assertStatusBarUnchangedExceptSyncStatus();"},{"lineNumber":179,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":180,"author":{"gitID":"-"},"content":""},{"lineNumber":181,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":182,"author":{"gitID":"-"},"content":"     * Executes {@code command} and in addition,\u003cbr\u003e"},{"lineNumber":183,"author":{"gitID":"-"},"content":"     * 1. Asserts that the command box displays {@code command}.\u003cbr\u003e"},{"lineNumber":184,"author":{"gitID":"-"},"content":"     * 2. Asserts that result display box displays {@code expectedResultMessage}.\u003cbr\u003e"},{"lineNumber":185,"author":{"gitID":"-"},"content":"     * 3. Asserts that the model related components equal to the current model.\u003cbr\u003e"},{"lineNumber":186,"author":{"gitID":"-"},"content":"     * 4. Asserts that the browser url, selected card and status bar remain unchanged.\u003cbr\u003e"},{"lineNumber":187,"author":{"gitID":"-"},"content":"     * 5. Asserts that the command box has the error style.\u003cbr\u003e"},{"lineNumber":188,"author":{"gitID":"-"},"content":"     * Verifications 1 to 3 are performed by"},{"lineNumber":189,"author":{"gitID":"-"},"content":"     * {@code AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"},{"lineNumber":190,"author":{"gitID":"-"},"content":"     * @see AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":191,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":192,"author":{"gitID":"-"},"content":"    private void assertCommandFailure(String command, String expectedResultMessage) {"},{"lineNumber":193,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":194,"author":{"gitID":"-"},"content":""},{"lineNumber":195,"author":{"gitID":"-"},"content":"        executeCommand(command);"},{"lineNumber":196,"author":{"gitID":"-"},"content":"        assertApplicationDisplaysExpected(command, expectedResultMessage, expectedModel);"},{"lineNumber":197,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":198,"author":{"gitID":"-"},"content":"        assertCommandBoxShowsErrorStyle();"},{"lineNumber":199,"author":{"gitID":"-"},"content":"        assertStatusBarUnchanged();"},{"lineNumber":200,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":201,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"-":199,"Ang-YC":2}},{"path":"src/test/java/systemtests/ClockRule.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.time.Clock;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.time.Instant;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.junit.rules.TestRule;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.runner.Description;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import org.junit.runners.model.Statement;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.ui.TitleBar;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":14,"author":{"gitID":"-"},"content":" * This rule makes the time stamp in the status bar predictable during a test."},{"lineNumber":15,"author":{"gitID":"-"},"content":" * Before the test starts, the rule replaces the clock in the status bar with a fixed clock."},{"lineNumber":16,"author":{"gitID":"-"},"content":" * At the end of the test, the rule restores the original clock."},{"lineNumber":17,"author":{"gitID":"-"},"content":" * @see Clock#fixed(Instant, ZoneId)"},{"lineNumber":18,"author":{"gitID":"-"},"content":" */"},{"lineNumber":19,"author":{"gitID":"-"},"content":"public class ClockRule implements TestRule {"},{"lineNumber":20,"author":{"gitID":"-"},"content":"    private Clock injectedClock;"},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":"    private final Clock originalClock \u003d TitleBar.getClock();"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"-"},"content":"    protected void before() {"},{"lineNumber":24,"author":{"gitID":"-"},"content":"        setInjectedClockToCurrentTime();"},{"lineNumber":25,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":"    protected void after() {"},{"lineNumber":28,"author":{"gitID":"Ang-YC"},"content":"        TitleBar.setClock(originalClock);"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    public Statement apply(final Statement base, final Description description) {"},{"lineNumber":33,"author":{"gitID":"-"},"content":"        return new Statement() {"},{"lineNumber":34,"author":{"gitID":"-"},"content":"            @Override"},{"lineNumber":35,"author":{"gitID":"-"},"content":"            public void evaluate() throws Throwable {"},{"lineNumber":36,"author":{"gitID":"-"},"content":"                before();"},{"lineNumber":37,"author":{"gitID":"-"},"content":"                try {"},{"lineNumber":38,"author":{"gitID":"-"},"content":"                    base.evaluate();"},{"lineNumber":39,"author":{"gitID":"-"},"content":"                } finally {"},{"lineNumber":40,"author":{"gitID":"-"},"content":"                    after();"},{"lineNumber":41,"author":{"gitID":"-"},"content":"                }"},{"lineNumber":42,"author":{"gitID":"-"},"content":"            }"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        };"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"    public Clock getInjectedClock() {"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        return injectedClock;"},{"lineNumber":48,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":51,"author":{"gitID":"-"},"content":"     * Replaces the clock in the status bar with a fixed clock having the current time as its instance."},{"lineNumber":52,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":53,"author":{"gitID":"-"},"content":"    public void setInjectedClockToCurrentTime() {"},{"lineNumber":54,"author":{"gitID":"-"},"content":"        injectedClock \u003d Clock.fixed(Instant.now(), ZoneId.systemDefault());"},{"lineNumber":55,"author":{"gitID":"Ang-YC"},"content":"        TitleBar.setClock(injectedClock);"},{"lineNumber":56,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"-":53,"Ang-YC":4}},{"path":"src/test/java/systemtests/AddCommandSystemTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.AddCommand.MESSAGE_DUPLICATE_PERSON;"},{"lineNumber":5,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;"},{"lineNumber":6,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;"},{"lineNumber":7,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMMENT_DESC_AMY;"},{"lineNumber":8,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMMENT_DESC_BOB;"},{"lineNumber":9,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;"},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;"},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EXPECTED_GRADUATION_YEAR_DESC_AMY;"},{"lineNumber":12,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EXPECTED_GRADUATION_YEAR_DESC_BOB;"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GRADE_POINT_AVERAGE_DESC_AMY;"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GRADE_POINT_AVERAGE_DESC_BOB;"},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;"},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;"},{"lineNumber":17,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EXPECTED_GRADUATION_YEAR_DESC;"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GRADE_POINT_AVERAGE_DESC;"},{"lineNumber":19,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_JOB_APPLIED_DESC;"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MAJOR_DESC;"},{"lineNumber":21,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;"},{"lineNumber":22,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;"},{"lineNumber":23,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PROFILE_IMAGE_DESC;"},{"lineNumber":24,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_RESUME_DESC;"},{"lineNumber":25,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;"},{"lineNumber":26,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_UNIVERSITY_DESC;"},{"lineNumber":27,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.JOB_APPLIED_DESC_AMY;"},{"lineNumber":28,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.JOB_APPLIED_DESC_BOB;"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MAJOR_DESC_AMY;"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MAJOR_DESC_BOB;"},{"lineNumber":31,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;"},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;"},{"lineNumber":33,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;"},{"lineNumber":34,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;"},{"lineNumber":35,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PROFILE_IMAGE_DESC_AMY;"},{"lineNumber":36,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PROFILE_IMAGE_DESC_BOB;"},{"lineNumber":37,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RESUME_DESC_AMY;"},{"lineNumber":38,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;"},{"lineNumber":39,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;"},{"lineNumber":40,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.UNIVERSITY_DESC_AMY;"},{"lineNumber":41,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.UNIVERSITY_DESC_BOB;"},{"lineNumber":42,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;"},{"lineNumber":43,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;"},{"lineNumber":44,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMMENT_AMY;"},{"lineNumber":45,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMMENT_BOB;"},{"lineNumber":46,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;"},{"lineNumber":47,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;"},{"lineNumber":48,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXPECTED_GRADUATION_YEAR_AMY;"},{"lineNumber":49,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXPECTED_GRADUATION_YEAR_BOB;"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GRADE_POINT_AVERAGE_AMY;"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GRADE_POINT_AVERAGE_BOB;"},{"lineNumber":52,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JOB_APPLIED_AMY;"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MAJOR_AMY;"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MAJOR_BOB;"},{"lineNumber":55,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;"},{"lineNumber":56,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;"},{"lineNumber":57,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;"},{"lineNumber":58,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;"},{"lineNumber":59,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PROFILE_IMAGE_AMY;"},{"lineNumber":60,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RESUME_AMY;"},{"lineNumber":61,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;"},{"lineNumber":62,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UNIVERSITY_AMY;"},{"lineNumber":63,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UNIVERSITY_BOB;"},{"lineNumber":64,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RESUME;"},{"lineNumber":65,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"},{"lineNumber":66,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;"},{"lineNumber":67,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;"},{"lineNumber":68,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;"},{"lineNumber":69,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;"},{"lineNumber":70,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;"},{"lineNumber":71,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;"},{"lineNumber":72,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.KEYWORD_MATCHING_MEIER;"},{"lineNumber":73,"author":{"gitID":"-"},"content":""},{"lineNumber":74,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":75,"author":{"gitID":"-"},"content":""},{"lineNumber":76,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Messages;"},{"lineNumber":77,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":78,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.AddCommand;"},{"lineNumber":79,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.RedoCommand;"},{"lineNumber":80,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.UndoCommand;"},{"lineNumber":81,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":82,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Address;"},{"lineNumber":83,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Email;"},{"lineNumber":84,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.ExpectedGraduationYear;"},{"lineNumber":85,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.person.GradePointAverage;"},{"lineNumber":86,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.JobApplied;"},{"lineNumber":87,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.person.Major;"},{"lineNumber":88,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Name;"},{"lineNumber":89,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":90,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Phone;"},{"lineNumber":91,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.model.person.ProfileImage;"},{"lineNumber":92,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Resume;"},{"lineNumber":93,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.University;"},{"lineNumber":94,"author":{"gitID":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;"},{"lineNumber":95,"author":{"gitID":"-"},"content":"import seedu.address.model.tag.Tag;"},{"lineNumber":96,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":97,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonUtil;"},{"lineNumber":98,"author":{"gitID":"-"},"content":""},{"lineNumber":99,"author":{"gitID":"-"},"content":"public class AddCommandSystemTest extends AddressBookSystemTest {"},{"lineNumber":100,"author":{"gitID":"-"},"content":""},{"lineNumber":101,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":102,"author":{"gitID":"-"},"content":"    public void add() throws Exception {"},{"lineNumber":103,"author":{"gitID":"-"},"content":"        Model model \u003d getModel();"},{"lineNumber":104,"author":{"gitID":"-"},"content":""},{"lineNumber":105,"author":{"gitID":"-"},"content":"        /* ------------------------ Perform add operations on the shown unfiltered list ----------------------------- */"},{"lineNumber":106,"author":{"gitID":"-"},"content":""},{"lineNumber":107,"author":{"gitID":"-"},"content":"        /* Case: add a person without tags to a non-empty address book, command with leading spaces and trailing spaces"},{"lineNumber":108,"author":{"gitID":"-"},"content":"         * -\u003e added"},{"lineNumber":109,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":110,"author":{"gitID":"Ang-YC"},"content":"        Person toAdd \u003d new PersonBuilder(AMY).withRating(\"-1\", \"-1\", \"-1\", \"-1\").build();"},{"lineNumber":111,"author":{"gitID":"-"},"content":"        String command \u003d \"   \" + AddCommand.COMMAND_WORD + \"  \" + NAME_DESC_AMY + \"  \" + PHONE_DESC_AMY + \" \""},{"lineNumber":112,"author":{"gitID":"kexiaowen"},"content":"                + EMAIL_DESC_AMY + \"   \" + ADDRESS_DESC_AMY + \"   \" + UNIVERSITY_DESC_AMY + \" \""},{"lineNumber":113,"author":{"gitID":"kexiaowen"},"content":"                + EXPECTED_GRADUATION_YEAR_DESC_AMY + \" \""},{"lineNumber":114,"author":{"gitID":"kexiaowen"},"content":"                + MAJOR_DESC_AMY + \" \" + GRADE_POINT_AVERAGE_DESC_AMY + \" \""},{"lineNumber":115,"author":{"gitID":"Ang-YC"},"content":"                + JOB_APPLIED_DESC_AMY + \" \" + RESUME_DESC_AMY + \" \" + PROFILE_IMAGE_DESC_AMY + \" \""},{"lineNumber":116,"author":{"gitID":"Ang-YC"},"content":"                + COMMENT_DESC_AMY + \" \" + TAG_DESC_FRIEND + \" \";"},{"lineNumber":117,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, toAdd);"},{"lineNumber":118,"author":{"gitID":"-"},"content":""},{"lineNumber":119,"author":{"gitID":"-"},"content":"        /* Case: undo adding Amy to the list -\u003e Amy deleted */"},{"lineNumber":120,"author":{"gitID":"-"},"content":"        command \u003d UndoCommand.COMMAND_WORD;"},{"lineNumber":121,"author":{"gitID":"-"},"content":"        String expectedResultMessage \u003d UndoCommand.MESSAGE_SUCCESS;"},{"lineNumber":122,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, model, expectedResultMessage);"},{"lineNumber":123,"author":{"gitID":"-"},"content":""},{"lineNumber":124,"author":{"gitID":"-"},"content":"        /* Case: redo adding Amy to the list -\u003e Amy added again */"},{"lineNumber":125,"author":{"gitID":"-"},"content":"        command \u003d RedoCommand.COMMAND_WORD;"},{"lineNumber":126,"author":{"gitID":"-"},"content":"        model.addPerson(toAdd);"},{"lineNumber":127,"author":{"gitID":"-"},"content":"        expectedResultMessage \u003d RedoCommand.MESSAGE_SUCCESS;"},{"lineNumber":128,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, model, expectedResultMessage);"},{"lineNumber":129,"author":{"gitID":"-"},"content":""},{"lineNumber":130,"author":{"gitID":"-"},"content":"        /* Case: add a person with all fields same as another person in the address book except name -\u003e added */"},{"lineNumber":131,"author":{"gitID":"-"},"content":"        toAdd \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)"},{"lineNumber":132,"author":{"gitID":"kexiaowen"},"content":"                .withAddress(VALID_ADDRESS_AMY).withUniversity(VALID_UNIVERSITY_AMY)"},{"lineNumber":133,"author":{"gitID":"kexiaowen"},"content":"                .withExpectedGraduationYear(VALID_EXPECTED_GRADUATION_YEAR_AMY)"},{"lineNumber":134,"author":{"gitID":"kexiaowen"},"content":"                .withMajor(VALID_MAJOR_AMY).withGradePointAverage(VALID_GRADE_POINT_AVERAGE_AMY)"},{"lineNumber":135,"author":{"gitID":"kexiaowen"},"content":"                .withJobApplied(VALID_JOB_APPLIED_AMY)"},{"lineNumber":136,"author":{"gitID":"Ang-YC"},"content":"                .withResume(VALID_RESUME_AMY).withProfileImage(VALID_PROFILE_IMAGE_AMY).withComment(VALID_COMMENT_AMY)"},{"lineNumber":137,"author":{"gitID":"Ang-YC"},"content":"                .withTags(VALID_TAG_FRIEND).build();"},{"lineNumber":138,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_BOB + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY"},{"lineNumber":139,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_AMY + EXPECTED_GRADUATION_YEAR_DESC_AMY + MAJOR_DESC_AMY"},{"lineNumber":140,"author":{"gitID":"Ang-YC"},"content":"                + GRADE_POINT_AVERAGE_DESC_AMY + JOB_APPLIED_DESC_AMY + RESUME_DESC_AMY"},{"lineNumber":141,"author":{"gitID":"Ang-YC"},"content":"                + PROFILE_IMAGE_DESC_AMY + COMMENT_DESC_AMY + TAG_DESC_FRIEND;"},{"lineNumber":142,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, toAdd);"},{"lineNumber":143,"author":{"gitID":"-"},"content":""},{"lineNumber":144,"author":{"gitID":"-"},"content":"        /* Case: add a person with all fields same as another person in the address book except phone -\u003e added */"},{"lineNumber":145,"author":{"gitID":"-"},"content":"        toAdd \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY)"},{"lineNumber":146,"author":{"gitID":"kexiaowen"},"content":"                .withAddress(VALID_ADDRESS_AMY).withUniversity(VALID_UNIVERSITY_AMY)"},{"lineNumber":147,"author":{"gitID":"kexiaowen"},"content":"                .withExpectedGraduationYear(VALID_EXPECTED_GRADUATION_YEAR_AMY)"},{"lineNumber":148,"author":{"gitID":"tanhengyeow"},"content":"                .withMajor(VALID_MAJOR_AMY)"},{"lineNumber":149,"author":{"gitID":"tanhengyeow"},"content":"                .withGradePointAverage(VALID_GRADE_POINT_AVERAGE_AMY)"},{"lineNumber":150,"author":{"gitID":"kexiaowen"},"content":"                .withJobApplied(VALID_JOB_APPLIED_AMY)"},{"lineNumber":151,"author":{"gitID":"Ang-YC"},"content":"                .withResume(VALID_RESUME_AMY).withProfileImage(VALID_PROFILE_IMAGE_AMY).withComment(VALID_COMMENT_AMY)"},{"lineNumber":152,"author":{"gitID":"Ang-YC"},"content":"                .withTags(VALID_TAG_FRIEND).build();"},{"lineNumber":153,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_AMY + ADDRESS_DESC_AMY"},{"lineNumber":154,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_AMY + EXPECTED_GRADUATION_YEAR_DESC_AMY + MAJOR_DESC_AMY"},{"lineNumber":155,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_AMY + JOB_APPLIED_DESC_AMY + RESUME_DESC_AMY + PROFILE_IMAGE_DESC_AMY"},{"lineNumber":156,"author":{"gitID":"kexiaowen"},"content":"                + COMMENT_DESC_AMY + TAG_DESC_FRIEND;"},{"lineNumber":157,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, toAdd);"},{"lineNumber":158,"author":{"gitID":"-"},"content":""},{"lineNumber":159,"author":{"gitID":"-"},"content":"        /* Case: add a person with all fields same as another person in the address book except email -\u003e added */"},{"lineNumber":160,"author":{"gitID":"-"},"content":"        toAdd \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_BOB)"},{"lineNumber":161,"author":{"gitID":"kexiaowen"},"content":"                .withAddress(VALID_ADDRESS_AMY).withUniversity(VALID_UNIVERSITY_AMY)"},{"lineNumber":162,"author":{"gitID":"kexiaowen"},"content":"                .withExpectedGraduationYear(VALID_EXPECTED_GRADUATION_YEAR_AMY)"},{"lineNumber":163,"author":{"gitID":"tanhengyeow"},"content":"                .withMajor(VALID_MAJOR_AMY)"},{"lineNumber":164,"author":{"gitID":"kexiaowen"},"content":"                .withGradePointAverage(VALID_GRADE_POINT_AVERAGE_AMY).withJobApplied(VALID_JOB_APPLIED_AMY)"},{"lineNumber":165,"author":{"gitID":"Ang-YC"},"content":"                .withResume(VALID_RESUME_AMY).withProfileImage(VALID_PROFILE_IMAGE_AMY).withComment(VALID_COMMENT_AMY)"},{"lineNumber":166,"author":{"gitID":"Ang-YC"},"content":"                .withTags(VALID_TAG_FRIEND).build();"},{"lineNumber":167,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_BOB + ADDRESS_DESC_AMY"},{"lineNumber":168,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_AMY + EXPECTED_GRADUATION_YEAR_DESC_AMY + MAJOR_DESC_AMY"},{"lineNumber":169,"author":{"gitID":"Ang-YC"},"content":"                + GRADE_POINT_AVERAGE_DESC_AMY + JOB_APPLIED_DESC_AMY + RESUME_DESC_AMY"},{"lineNumber":170,"author":{"gitID":"Ang-YC"},"content":"                + PROFILE_IMAGE_DESC_AMY + COMMENT_DESC_AMY + TAG_DESC_FRIEND;"},{"lineNumber":171,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, toAdd);"},{"lineNumber":172,"author":{"gitID":"-"},"content":""},{"lineNumber":173,"author":{"gitID":"-"},"content":"        /* Case: add a person with all fields same as another person in the address book except address -\u003e added */"},{"lineNumber":174,"author":{"gitID":"-"},"content":"        toAdd \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)"},{"lineNumber":175,"author":{"gitID":"kexiaowen"},"content":"                .withAddress(VALID_ADDRESS_BOB).withUniversity(VALID_UNIVERSITY_AMY)"},{"lineNumber":176,"author":{"gitID":"kexiaowen"},"content":"                .withExpectedGraduationYear(VALID_EXPECTED_GRADUATION_YEAR_AMY)"},{"lineNumber":177,"author":{"gitID":"kexiaowen"},"content":"                .withMajor(VALID_MAJOR_AMY).withGradePointAverage(VALID_GRADE_POINT_AVERAGE_AMY)"},{"lineNumber":178,"author":{"gitID":"kexiaowen"},"content":"                .withJobApplied(VALID_JOB_APPLIED_AMY)"},{"lineNumber":179,"author":{"gitID":"Ang-YC"},"content":"                .withResume(VALID_RESUME_AMY).withProfileImage(VALID_PROFILE_IMAGE_AMY).withComment(VALID_COMMENT_AMY)"},{"lineNumber":180,"author":{"gitID":"Ang-YC"},"content":"                .withTags(VALID_TAG_FRIEND).build();"},{"lineNumber":181,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_BOB"},{"lineNumber":182,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_AMY + EXPECTED_GRADUATION_YEAR_DESC_AMY + MAJOR_DESC_AMY"},{"lineNumber":183,"author":{"gitID":"Ang-YC"},"content":"                + GRADE_POINT_AVERAGE_DESC_AMY + JOB_APPLIED_DESC_AMY + RESUME_DESC_AMY"},{"lineNumber":184,"author":{"gitID":"Ang-YC"},"content":"                + PROFILE_IMAGE_DESC_AMY + COMMENT_DESC_AMY + TAG_DESC_FRIEND;"},{"lineNumber":185,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, toAdd);"},{"lineNumber":186,"author":{"gitID":"-"},"content":""},{"lineNumber":187,"author":{"gitID":"kexiaowen"},"content":"        /* Case: add a person with all fields same as another person in the address book except university -\u003e added */"},{"lineNumber":188,"author":{"gitID":"-"},"content":"        toAdd \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)"},{"lineNumber":189,"author":{"gitID":"kexiaowen"},"content":"                .withAddress(VALID_ADDRESS_AMY).withUniversity(VALID_UNIVERSITY_BOB)"},{"lineNumber":190,"author":{"gitID":"kexiaowen"},"content":"                .withExpectedGraduationYear(VALID_EXPECTED_GRADUATION_YEAR_AMY)"},{"lineNumber":191,"author":{"gitID":"kexiaowen"},"content":"                .withMajor(VALID_MAJOR_AMY).withGradePointAverage(VALID_GRADE_POINT_AVERAGE_AMY)"},{"lineNumber":192,"author":{"gitID":"kexiaowen"},"content":"                .withJobApplied(VALID_JOB_APPLIED_AMY)"},{"lineNumber":193,"author":{"gitID":"Ang-YC"},"content":"                .withResume(VALID_RESUME_AMY).withProfileImage(VALID_PROFILE_IMAGE_AMY).withComment(VALID_COMMENT_AMY)"},{"lineNumber":194,"author":{"gitID":"Ang-YC"},"content":"                .withTags(VALID_TAG_FRIEND).build();"},{"lineNumber":195,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY"},{"lineNumber":196,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_BOB + EXPECTED_GRADUATION_YEAR_DESC_AMY + MAJOR_DESC_AMY"},{"lineNumber":197,"author":{"gitID":"Ang-YC"},"content":"                + GRADE_POINT_AVERAGE_DESC_AMY + JOB_APPLIED_DESC_AMY + RESUME_DESC_AMY"},{"lineNumber":198,"author":{"gitID":"Ang-YC"},"content":"                + PROFILE_IMAGE_DESC_AMY + COMMENT_DESC_AMY + TAG_DESC_FRIEND;"},{"lineNumber":199,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, toAdd);"},{"lineNumber":200,"author":{"gitID":"-"},"content":""},{"lineNumber":201,"author":{"gitID":"mhq199657"},"content":"        /* Case: add a person with all fields same as another person in the address book"},{"lineNumber":202,"author":{"gitID":"mhq199657"},"content":"        except expected graduation year -\u003e added */"},{"lineNumber":203,"author":{"gitID":"-"},"content":"        toAdd \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)"},{"lineNumber":204,"author":{"gitID":"kexiaowen"},"content":"                .withAddress(VALID_ADDRESS_AMY).withUniversity(VALID_UNIVERSITY_AMY)"},{"lineNumber":205,"author":{"gitID":"mhq199657"},"content":"                .withExpectedGraduationYear(VALID_EXPECTED_GRADUATION_YEAR_BOB)"},{"lineNumber":206,"author":{"gitID":"kexiaowen"},"content":"                .withMajor(VALID_MAJOR_AMY).withGradePointAverage(VALID_GRADE_POINT_AVERAGE_AMY)"},{"lineNumber":207,"author":{"gitID":"kexiaowen"},"content":"                .withJobApplied(VALID_JOB_APPLIED_AMY)"},{"lineNumber":208,"author":{"gitID":"Ang-YC"},"content":"                .withResume(VALID_RESUME_AMY).withProfileImage(VALID_PROFILE_IMAGE_AMY).withComment(VALID_COMMENT_AMY)"},{"lineNumber":209,"author":{"gitID":"Ang-YC"},"content":"                .withTags(VALID_TAG_FRIEND).build();"},{"lineNumber":210,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY"},{"lineNumber":211,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_AMY + EXPECTED_GRADUATION_YEAR_DESC_BOB + MAJOR_DESC_AMY"},{"lineNumber":212,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_AMY + JOB_APPLIED_DESC_AMY + RESUME_DESC_AMY + PROFILE_IMAGE_DESC_AMY"},{"lineNumber":213,"author":{"gitID":"kexiaowen"},"content":"                + COMMENT_DESC_AMY + TAG_DESC_FRIEND;"},{"lineNumber":214,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, toAdd);"},{"lineNumber":215,"author":{"gitID":"-"},"content":""},{"lineNumber":216,"author":{"gitID":"mhq199657"},"content":"        /* Case: add a person with all fields same as another person in the address book"},{"lineNumber":217,"author":{"gitID":"tanhengyeow"},"content":"        except major -\u003e added */"},{"lineNumber":218,"author":{"gitID":"-"},"content":"        toAdd \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)"},{"lineNumber":219,"author":{"gitID":"kexiaowen"},"content":"                .withAddress(VALID_ADDRESS_AMY).withUniversity(VALID_UNIVERSITY_AMY)"},{"lineNumber":220,"author":{"gitID":"kexiaowen"},"content":"                .withExpectedGraduationYear(VALID_EXPECTED_GRADUATION_YEAR_AMY)"},{"lineNumber":221,"author":{"gitID":"kexiaowen"},"content":"                .withMajor(VALID_MAJOR_BOB).withGradePointAverage(VALID_GRADE_POINT_AVERAGE_AMY)"},{"lineNumber":222,"author":{"gitID":"kexiaowen"},"content":"                .withJobApplied(VALID_JOB_APPLIED_AMY)"},{"lineNumber":223,"author":{"gitID":"Ang-YC"},"content":"                .withResume(VALID_RESUME_AMY).withProfileImage(VALID_PROFILE_IMAGE_AMY).withComment(VALID_COMMENT_AMY)"},{"lineNumber":224,"author":{"gitID":"Ang-YC"},"content":"                .withTags(VALID_TAG_FRIEND).build();"},{"lineNumber":225,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY"},{"lineNumber":226,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_AMY + EXPECTED_GRADUATION_YEAR_DESC_AMY + MAJOR_DESC_BOB"},{"lineNumber":227,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_AMY + JOB_APPLIED_DESC_AMY + RESUME_DESC_AMY + PROFILE_IMAGE_DESC_AMY"},{"lineNumber":228,"author":{"gitID":"kexiaowen"},"content":"                + COMMENT_DESC_AMY + TAG_DESC_FRIEND;"},{"lineNumber":229,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, toAdd);"},{"lineNumber":230,"author":{"gitID":"-"},"content":""},{"lineNumber":231,"author":{"gitID":"mhq199657"},"content":"        /* Case: add a person with all fields same as another person in the address book"},{"lineNumber":232,"author":{"gitID":"tanhengyeow"},"content":"        except gradePointAverage -\u003e added */"},{"lineNumber":233,"author":{"gitID":"-"},"content":"        toAdd \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)"},{"lineNumber":234,"author":{"gitID":"kexiaowen"},"content":"                .withAddress(VALID_ADDRESS_AMY).withUniversity(VALID_UNIVERSITY_AMY)"},{"lineNumber":235,"author":{"gitID":"kexiaowen"},"content":"                .withExpectedGraduationYear(VALID_EXPECTED_GRADUATION_YEAR_AMY)"},{"lineNumber":236,"author":{"gitID":"tanhengyeow"},"content":"                .withMajor(VALID_MAJOR_AMY)"},{"lineNumber":237,"author":{"gitID":"tanhengyeow"},"content":"                .withGradePointAverage(VALID_GRADE_POINT_AVERAGE_BOB)"},{"lineNumber":238,"author":{"gitID":"Ang-YC"},"content":"                .withResume(VALID_RESUME_AMY).withProfileImage(VALID_PROFILE_IMAGE_AMY).withComment(VALID_COMMENT_AMY)"},{"lineNumber":239,"author":{"gitID":"Ang-YC"},"content":"                .withTags(VALID_TAG_FRIEND).build();"},{"lineNumber":240,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY"},{"lineNumber":241,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_AMY + EXPECTED_GRADUATION_YEAR_DESC_AMY + MAJOR_DESC_AMY"},{"lineNumber":242,"author":{"gitID":"Ang-YC"},"content":"                + GRADE_POINT_AVERAGE_DESC_BOB + JOB_APPLIED_DESC_AMY + RESUME_DESC_AMY"},{"lineNumber":243,"author":{"gitID":"Ang-YC"},"content":"                + PROFILE_IMAGE_DESC_AMY + COMMENT_DESC_AMY + TAG_DESC_FRIEND;"},{"lineNumber":244,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, toAdd);"},{"lineNumber":245,"author":{"gitID":"-"},"content":""},{"lineNumber":246,"author":{"gitID":"Ang-YC"},"content":"        /* Case: add a person with all fields same as another person in the address book except comment -\u003e added */"},{"lineNumber":247,"author":{"gitID":"-"},"content":"        toAdd \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)"},{"lineNumber":248,"author":{"gitID":"kexiaowen"},"content":"                .withAddress(VALID_ADDRESS_AMY).withUniversity(VALID_UNIVERSITY_AMY)"},{"lineNumber":249,"author":{"gitID":"kexiaowen"},"content":"                .withExpectedGraduationYear(VALID_EXPECTED_GRADUATION_YEAR_AMY)"},{"lineNumber":250,"author":{"gitID":"tanhengyeow"},"content":"                .withMajor(VALID_MAJOR_AMY)"},{"lineNumber":251,"author":{"gitID":"tanhengyeow"},"content":"                .withGradePointAverage(VALID_GRADE_POINT_AVERAGE_AMY)"},{"lineNumber":252,"author":{"gitID":"Ang-YC"},"content":"                .withResume(VALID_RESUME_AMY).withProfileImage(VALID_PROFILE_IMAGE_AMY).withComment(VALID_COMMENT_BOB)"},{"lineNumber":253,"author":{"gitID":"Ang-YC"},"content":"                .withTags(VALID_TAG_FRIEND).build();"},{"lineNumber":254,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY"},{"lineNumber":255,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_AMY + EXPECTED_GRADUATION_YEAR_DESC_AMY + MAJOR_DESC_AMY"},{"lineNumber":256,"author":{"gitID":"Ang-YC"},"content":"                + GRADE_POINT_AVERAGE_DESC_AMY + JOB_APPLIED_DESC_AMY + RESUME_DESC_AMY"},{"lineNumber":257,"author":{"gitID":"Ang-YC"},"content":"                + PROFILE_IMAGE_DESC_AMY + COMMENT_DESC_BOB + TAG_DESC_FRIEND;"},{"lineNumber":258,"author":{"gitID":"mhq199657"},"content":"        assertCommandFailure(command, MESSAGE_DUPLICATE_PERSON);"},{"lineNumber":259,"author":{"gitID":"-"},"content":""},{"lineNumber":260,"author":{"gitID":"-"},"content":"        /* Case: add to empty address book -\u003e added */"},{"lineNumber":261,"author":{"gitID":"-"},"content":"        deleteAllPersons();"},{"lineNumber":262,"author":{"gitID":"Ang-YC"},"content":"        assertCommandSuccess(new PersonBuilder(ALICE).withRating(\"-1\", \"-1\", \"-1\", \"-1\").build());"},{"lineNumber":263,"author":{"gitID":"-"},"content":""},{"lineNumber":264,"author":{"gitID":"mhq199657"},"content":"        /* Case: add a person with resume, command with parameters in random order -\u003e added */"},{"lineNumber":265,"author":{"gitID":"Ang-YC"},"content":"        toAdd \u003d new PersonBuilder(AMY).withRating(\"-1\", \"-1\", \"-1\", \"-1\").build();;"},{"lineNumber":266,"author":{"gitID":"mhq199657"},"content":"        command \u003d AddCommand.COMMAND_WORD + RESUME_DESC_AMY + PHONE_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY"},{"lineNumber":267,"author":{"gitID":"Ang-YC"},"content":"                + TAG_DESC_FRIEND + EMAIL_DESC_AMY + PROFILE_IMAGE_DESC_AMY + COMMENT_DESC_AMY"},{"lineNumber":268,"author":{"gitID":"kexiaowen"},"content":"                + EXPECTED_GRADUATION_YEAR_DESC_AMY + MAJOR_DESC_AMY + UNIVERSITY_DESC_AMY"},{"lineNumber":269,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_AMY + JOB_APPLIED_DESC_AMY;"},{"lineNumber":270,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, toAdd);"},{"lineNumber":271,"author":{"gitID":"-"},"content":""},{"lineNumber":272,"author":{"gitID":"mhq199657"},"content":"        /* Case: add a person, missing resume -\u003e added */"},{"lineNumber":273,"author":{"gitID":"Ang-YC"},"content":"        assertCommandSuccess(new PersonBuilder(BOB).withRating(\"-1\", \"-1\", \"-1\", \"-1\").build());"},{"lineNumber":274,"author":{"gitID":"mhq199657"},"content":"        deleteAllPersons();"},{"lineNumber":275,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":276,"author":{"gitID":"-"},"content":"        /* Case: add a person with tags, command with parameters in random order -\u003e added */"},{"lineNumber":277,"author":{"gitID":"Ang-YC"},"content":"        toAdd \u003d new PersonBuilder(BOB).withRating(\"-1\", \"-1\", \"-1\", \"-1\").build();"},{"lineNumber":278,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + TAG_DESC_FRIEND + PHONE_DESC_BOB + ADDRESS_DESC_BOB + NAME_DESC_BOB"},{"lineNumber":279,"author":{"gitID":"Ang-YC"},"content":"                + TAG_DESC_HUSBAND + EMAIL_DESC_BOB + PROFILE_IMAGE_DESC_BOB + COMMENT_DESC_BOB"},{"lineNumber":280,"author":{"gitID":"Ang-YC"},"content":"                + EXPECTED_GRADUATION_YEAR_DESC_BOB + UNIVERSITY_DESC_BOB"},{"lineNumber":281,"author":{"gitID":"kexiaowen"},"content":"                + MAJOR_DESC_BOB + GRADE_POINT_AVERAGE_DESC_BOB + JOB_APPLIED_DESC_BOB;"},{"lineNumber":282,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, toAdd);"},{"lineNumber":283,"author":{"gitID":"-"},"content":""},{"lineNumber":284,"author":{"gitID":"-"},"content":"        /* Case: add a person, missing tags -\u003e added */"},{"lineNumber":285,"author":{"gitID":"Ang-YC"},"content":"        assertCommandSuccess(new PersonBuilder(HOON).withRating(\"-1\", \"-1\", \"-1\", \"-1\").build());"},{"lineNumber":286,"author":{"gitID":"-"},"content":""},{"lineNumber":287,"author":{"gitID":"-"},"content":"        /* -------------------------- Perform add operation on the shown filtered list ------------------------------ */"},{"lineNumber":288,"author":{"gitID":"-"},"content":""},{"lineNumber":289,"author":{"gitID":"-"},"content":"        /* Case: filters the person list before adding -\u003e added */"},{"lineNumber":290,"author":{"gitID":"-"},"content":"        showPersonsWithName(KEYWORD_MATCHING_MEIER);"},{"lineNumber":291,"author":{"gitID":"Ang-YC"},"content":"        assertCommandSuccess(new PersonBuilder(IDA).withRating(\"-1\", \"-1\", \"-1\", \"-1\").build());"},{"lineNumber":292,"author":{"gitID":"-"},"content":""},{"lineNumber":293,"author":{"gitID":"-"},"content":"        /* ------------------------ Perform add operation while a person card is selected --------------------------- */"},{"lineNumber":294,"author":{"gitID":"-"},"content":""},{"lineNumber":295,"author":{"gitID":"-"},"content":"        /* Case: selects first card in the person list, add a person -\u003e added, card selection remains unchanged */"},{"lineNumber":296,"author":{"gitID":"-"},"content":"        selectPerson(Index.fromOneBased(1));"},{"lineNumber":297,"author":{"gitID":"Ang-YC"},"content":"        assertCommandSuccess(new PersonBuilder(CARL).withRating(\"-1\", \"-1\", \"-1\", \"-1\").build());"},{"lineNumber":298,"author":{"gitID":"-"},"content":""},{"lineNumber":299,"author":{"gitID":"-"},"content":"        /* ----------------------------------- Perform invalid add operations --------------------------------------- */"},{"lineNumber":300,"author":{"gitID":"-"},"content":""},{"lineNumber":301,"author":{"gitID":"-"},"content":"        /* Case: add a duplicate person -\u003e rejected */"},{"lineNumber":302,"author":{"gitID":"-"},"content":"        command \u003d PersonUtil.getAddCommand(HOON);"},{"lineNumber":303,"author":{"gitID":"mhq199657"},"content":"        assertCommandFailure(command, MESSAGE_DUPLICATE_PERSON);"},{"lineNumber":304,"author":{"gitID":"-"},"content":""},{"lineNumber":305,"author":{"gitID":"-"},"content":"        /* Case: add a duplicate person except with different tags -\u003e rejected */"},{"lineNumber":306,"author":{"gitID":"-"},"content":"        // \"friends\" is an existing tag used in the default model, see TypicalPersons#ALICE"},{"lineNumber":307,"author":{"gitID":"-"},"content":"        // This test will fail if a new tag that is not in the model is used, see the bug documented in"},{"lineNumber":308,"author":{"gitID":"-"},"content":"        // AddressBook#addPerson(Person)"},{"lineNumber":309,"author":{"gitID":"-"},"content":"        command \u003d PersonUtil.getAddCommand(HOON) + \" \" + PREFIX_TAG.getPrefix() + \"friends\";"},{"lineNumber":310,"author":{"gitID":"mhq199657"},"content":"        assertCommandFailure(command, MESSAGE_DUPLICATE_PERSON);"},{"lineNumber":311,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":312,"author":{"gitID":"mhq199657"},"content":"        command \u003d PersonUtil.getAddCommand(HOON) + \" \" + PREFIX_RESUME.getPrefix()"},{"lineNumber":313,"author":{"gitID":"mhq199657"},"content":"                + \"src/test/resources/resume/amy.pdf\";"},{"lineNumber":314,"author":{"gitID":"mhq199657"},"content":"        assertCommandFailure(command, MESSAGE_DUPLICATE_PERSON);"},{"lineNumber":315,"author":{"gitID":"-"},"content":""},{"lineNumber":316,"author":{"gitID":"-"},"content":"        /* Case: missing name -\u003e rejected */"},{"lineNumber":317,"author":{"gitID":"kexiaowen"},"content":"        command \u003d AddCommand.COMMAND_WORD + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + UNIVERSITY_DESC_AMY"},{"lineNumber":318,"author":{"gitID":"tanhengyeow"},"content":"                + EXPECTED_GRADUATION_YEAR_DESC_AMY + MAJOR_DESC_AMY"},{"lineNumber":319,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_AMY + JOB_APPLIED_DESC_AMY;"},{"lineNumber":320,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"},{"lineNumber":321,"author":{"gitID":"-"},"content":""},{"lineNumber":322,"author":{"gitID":"-"},"content":"        /* Case: missing phone -\u003e rejected */"},{"lineNumber":323,"author":{"gitID":"kexiaowen"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + UNIVERSITY_DESC_AMY"},{"lineNumber":324,"author":{"gitID":"tanhengyeow"},"content":"                + EXPECTED_GRADUATION_YEAR_DESC_AMY + MAJOR_DESC_AMY"},{"lineNumber":325,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_AMY + JOB_APPLIED_DESC_AMY;"},{"lineNumber":326,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"},{"lineNumber":327,"author":{"gitID":"-"},"content":""},{"lineNumber":328,"author":{"gitID":"-"},"content":"        /* Case: missing email -\u003e rejected */"},{"lineNumber":329,"author":{"gitID":"kexiaowen"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + ADDRESS_DESC_AMY + UNIVERSITY_DESC_AMY"},{"lineNumber":330,"author":{"gitID":"tanhengyeow"},"content":"                + EXPECTED_GRADUATION_YEAR_DESC_AMY + MAJOR_DESC_AMY"},{"lineNumber":331,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_AMY + JOB_APPLIED_DESC_AMY;"},{"lineNumber":332,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"},{"lineNumber":333,"author":{"gitID":"-"},"content":""},{"lineNumber":334,"author":{"gitID":"-"},"content":"        /* Case: missing address -\u003e rejected */"},{"lineNumber":335,"author":{"gitID":"kexiaowen"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + UNIVERSITY_DESC_AMY"},{"lineNumber":336,"author":{"gitID":"tanhengyeow"},"content":"                + EXPECTED_GRADUATION_YEAR_DESC_AMY + MAJOR_DESC_AMY"},{"lineNumber":337,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_AMY + JOB_APPLIED_DESC_AMY;"},{"lineNumber":338,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"},{"lineNumber":339,"author":{"gitID":"-"},"content":""},{"lineNumber":340,"author":{"gitID":"kexiaowen"},"content":"        /* Case: missing university -\u003e rejected */"},{"lineNumber":341,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY"},{"lineNumber":342,"author":{"gitID":"tanhengyeow"},"content":"                + EXPECTED_GRADUATION_YEAR_DESC_AMY + MAJOR_DESC_AMY"},{"lineNumber":343,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_AMY + JOB_APPLIED_DESC_AMY;"},{"lineNumber":344,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"},{"lineNumber":345,"author":{"gitID":"-"},"content":""},{"lineNumber":346,"author":{"gitID":"mhq199657"},"content":"        /* Case: missing expected graduation year -\u003e rejected */"},{"lineNumber":347,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY"},{"lineNumber":348,"author":{"gitID":"kexiaowen"},"content":"                + ADDRESS_DESC_AMY + MAJOR_DESC_AMY + GRADE_POINT_AVERAGE_DESC_AMY + JOB_APPLIED_DESC_AMY;"},{"lineNumber":349,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"},{"lineNumber":350,"author":{"gitID":"-"},"content":""},{"lineNumber":351,"author":{"gitID":"tanhengyeow"},"content":"        /* Case: missing major -\u003e rejected */"},{"lineNumber":352,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY"},{"lineNumber":353,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_AMY + EXPECTED_GRADUATION_YEAR_DESC_AMY + GRADE_POINT_AVERAGE_DESC_AMY"},{"lineNumber":354,"author":{"gitID":"kexiaowen"},"content":"                + JOB_APPLIED_DESC_AMY;"},{"lineNumber":355,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"},{"lineNumber":356,"author":{"gitID":"-"},"content":""},{"lineNumber":357,"author":{"gitID":"kexiaowen"},"content":"        /* Case: missing job applied -\u003e rejected */"},{"lineNumber":358,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY"},{"lineNumber":359,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_AMY + EXPECTED_GRADUATION_YEAR_DESC_AMY + MAJOR_DESC_AMY"},{"lineNumber":360,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_AMY;"},{"lineNumber":361,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"},{"lineNumber":362,"author":{"gitID":"-"},"content":""},{"lineNumber":363,"author":{"gitID":"tanhengyeow"},"content":"        /* Case: missing gradePointAverage -\u003e rejected */"},{"lineNumber":364,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY"},{"lineNumber":365,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_AMY + EXPECTED_GRADUATION_YEAR_DESC_AMY + MAJOR_DESC_AMY + JOB_APPLIED_DESC_AMY;"},{"lineNumber":366,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"},{"lineNumber":367,"author":{"gitID":"-"},"content":""},{"lineNumber":368,"author":{"gitID":"-"},"content":"        /* Case: invalid keyword -\u003e rejected */"},{"lineNumber":369,"author":{"gitID":"-"},"content":"        command \u003d \"adds \" + PersonUtil.getPersonDetails(toAdd);"},{"lineNumber":370,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, Messages.MESSAGE_UNKNOWN_COMMAND);"},{"lineNumber":371,"author":{"gitID":"-"},"content":""},{"lineNumber":372,"author":{"gitID":"-"},"content":"        /* Case: invalid name -\u003e rejected */"},{"lineNumber":373,"author":{"gitID":"mhq199657"},"content":"        command \u003d AddCommand.COMMAND_WORD + INVALID_NAME_DESC + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY"},{"lineNumber":374,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_AMY + EXPECTED_GRADUATION_YEAR_DESC_AMY + MAJOR_DESC_AMY"},{"lineNumber":375,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_AMY + JOB_APPLIED_DESC_AMY;"},{"lineNumber":376,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, Name.MESSAGE_NAME_CONSTRAINTS);"},{"lineNumber":377,"author":{"gitID":"-"},"content":""},{"lineNumber":378,"author":{"gitID":"-"},"content":"        /* Case: invalid phone -\u003e rejected */"},{"lineNumber":379,"author":{"gitID":"mhq199657"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + INVALID_PHONE_DESC + EMAIL_DESC_AMY + ADDRESS_DESC_AMY"},{"lineNumber":380,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_AMY + EXPECTED_GRADUATION_YEAR_DESC_AMY + MAJOR_DESC_AMY"},{"lineNumber":381,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_AMY + JOB_APPLIED_DESC_AMY;"},{"lineNumber":382,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, Phone.MESSAGE_PHONE_CONSTRAINTS);"},{"lineNumber":383,"author":{"gitID":"-"},"content":""},{"lineNumber":384,"author":{"gitID":"-"},"content":"        /* Case: invalid email -\u003e rejected */"},{"lineNumber":385,"author":{"gitID":"mhq199657"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + INVALID_EMAIL_DESC + ADDRESS_DESC_AMY"},{"lineNumber":386,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_AMY + EXPECTED_GRADUATION_YEAR_DESC_AMY + MAJOR_DESC_AMY"},{"lineNumber":387,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_AMY + JOB_APPLIED_DESC_AMY;"},{"lineNumber":388,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, Email.MESSAGE_EMAIL_CONSTRAINTS);"},{"lineNumber":389,"author":{"gitID":"-"},"content":""},{"lineNumber":390,"author":{"gitID":"-"},"content":"        /* Case: invalid address -\u003e rejected */"},{"lineNumber":391,"author":{"gitID":"mhq199657"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + INVALID_ADDRESS_DESC"},{"lineNumber":392,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_AMY + EXPECTED_GRADUATION_YEAR_DESC_AMY + MAJOR_DESC_AMY"},{"lineNumber":393,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_AMY + JOB_APPLIED_DESC_AMY;"},{"lineNumber":394,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, Address.MESSAGE_ADDRESS_CONSTRAINTS);"},{"lineNumber":395,"author":{"gitID":"-"},"content":""},{"lineNumber":396,"author":{"gitID":"kexiaowen"},"content":"        /* Case: invalid university -\u003e rejected */"},{"lineNumber":397,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY"},{"lineNumber":398,"author":{"gitID":"kexiaowen"},"content":"                + INVALID_UNIVERSITY_DESC + EXPECTED_GRADUATION_YEAR_DESC_AMY + MAJOR_DESC_AMY"},{"lineNumber":399,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_AMY + JOB_APPLIED_DESC_AMY;"},{"lineNumber":400,"author":{"gitID":"kexiaowen"},"content":"        assertCommandFailure(command, University.MESSAGE_UNIVERSITY_CONSTRAINTS);"},{"lineNumber":401,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":402,"author":{"gitID":"mhq199657"},"content":"        /* Case: invalid expected graduation year -\u003e rejected */"},{"lineNumber":403,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY"},{"lineNumber":404,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_AMY + INVALID_EXPECTED_GRADUATION_YEAR_DESC + MAJOR_DESC_AMY"},{"lineNumber":405,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_AMY + JOB_APPLIED_DESC_AMY;"},{"lineNumber":406,"author":{"gitID":"mhq199657"},"content":"        assertCommandFailure(command, ExpectedGraduationYear.MESSAGE_EXPECTED_GRADUATION_YEAR_CONSTRAINTS);"},{"lineNumber":407,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":408,"author":{"gitID":"tanhengyeow"},"content":"        /* Case: invalid major -\u003e rejected */"},{"lineNumber":409,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY"},{"lineNumber":410,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_AMY + EXPECTED_GRADUATION_YEAR_DESC_AMY + INVALID_MAJOR_DESC"},{"lineNumber":411,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_AMY + JOB_APPLIED_DESC_AMY;"},{"lineNumber":412,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandFailure(command, Major.MESSAGE_MAJOR_CONSTRAINTS);"},{"lineNumber":413,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":414,"author":{"gitID":"tanhengyeow"},"content":"        /* Case: invalid gradePointAverage -\u003e rejected */"},{"lineNumber":415,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY"},{"lineNumber":416,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_AMY + EXPECTED_GRADUATION_YEAR_DESC_AMY + MAJOR_DESC_AMY"},{"lineNumber":417,"author":{"gitID":"kexiaowen"},"content":"                + INVALID_GRADE_POINT_AVERAGE_DESC + JOB_APPLIED_DESC_AMY;"},{"lineNumber":418,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandFailure(command, GradePointAverage.MESSAGE_GRADE_POINT_AVERAGE_CONSTRAINTS);"},{"lineNumber":419,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":420,"author":{"gitID":"kexiaowen"},"content":"        /* Case: invalid job applied -\u003e rejected */"},{"lineNumber":421,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY"},{"lineNumber":422,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_AMY + EXPECTED_GRADUATION_YEAR_DESC_AMY + MAJOR_DESC_AMY"},{"lineNumber":423,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_AMY + INVALID_JOB_APPLIED_DESC;"},{"lineNumber":424,"author":{"gitID":"kexiaowen"},"content":"        assertCommandFailure(command, JobApplied.MESSAGE_JOB_APPLIED_CONSTRAINTS);"},{"lineNumber":425,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":426,"author":{"gitID":"mhq199657"},"content":"        /* Case: invalid resume -\u003e rejected */"},{"lineNumber":427,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY"},{"lineNumber":428,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_AMY + EXPECTED_GRADUATION_YEAR_DESC_AMY + MAJOR_DESC_AMY"},{"lineNumber":429,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_AMY + JOB_APPLIED_DESC_AMY + INVALID_RESUME_DESC;"},{"lineNumber":430,"author":{"gitID":"mhq199657"},"content":"        assertCommandFailure(command, Resume.MESSAGE_RESUME_CONSTRAINTS);"},{"lineNumber":431,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":432,"author":{"gitID":"Ang-YC"},"content":"        /* Case: invalid profile image -\u003e rejected */"},{"lineNumber":433,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY"},{"lineNumber":434,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_AMY + EXPECTED_GRADUATION_YEAR_DESC_AMY + MAJOR_DESC_AMY"},{"lineNumber":435,"author":{"gitID":"Ang-YC"},"content":"                + GRADE_POINT_AVERAGE_DESC_AMY + JOB_APPLIED_DESC_AMY + INVALID_PROFILE_IMAGE_DESC;"},{"lineNumber":436,"author":{"gitID":"Ang-YC"},"content":"        assertCommandFailure(command, ProfileImage.MESSAGE_IMAGE_CONSTRAINTS);"},{"lineNumber":437,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":438,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":439,"author":{"gitID":"-"},"content":"        /* Case: invalid tag -\u003e rejected */"},{"lineNumber":440,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY"},{"lineNumber":441,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_AMY + EXPECTED_GRADUATION_YEAR_DESC_AMY + MAJOR_DESC_AMY"},{"lineNumber":442,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_AMY + JOB_APPLIED_DESC_AMY + INVALID_TAG_DESC;"},{"lineNumber":443,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, Tag.MESSAGE_TAG_CONSTRAINTS);"},{"lineNumber":444,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":445,"author":{"gitID":"mhq199657"},"content":"        /* Case: blank resume -\u003e rejected */"},{"lineNumber":446,"author":{"gitID":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY"},{"lineNumber":447,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_AMY + EXPECTED_GRADUATION_YEAR_DESC_AMY + MAJOR_DESC_AMY"},{"lineNumber":448,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_AMY + JOB_APPLIED_DESC_AMY + \" \" + PREFIX_RESUME;"},{"lineNumber":449,"author":{"gitID":"mhq199657"},"content":"        assertCommandFailure(command, Resume.MESSAGE_RESUME_CONSTRAINTS);"},{"lineNumber":450,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":451,"author":{"gitID":"-"},"content":""},{"lineNumber":452,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":453,"author":{"gitID":"-"},"content":"     * Executes the {@code AddCommand} that adds {@code toAdd} to the model and asserts that the,\u003cbr\u003e"},{"lineNumber":454,"author":{"gitID":"-"},"content":"     * 1. Command box displays an empty string.\u003cbr\u003e"},{"lineNumber":455,"author":{"gitID":"-"},"content":"     * 2. Command box has the default style class.\u003cbr\u003e"},{"lineNumber":456,"author":{"gitID":"-"},"content":"     * 3. Result display box displays the success message of executing {@code AddCommand} with the details of"},{"lineNumber":457,"author":{"gitID":"-"},"content":"     * {@code toAdd}.\u003cbr\u003e"},{"lineNumber":458,"author":{"gitID":"-"},"content":"     * 4. {@code Model}, {@code Storage} and {@code PersonListPanel} equal to the corresponding components in"},{"lineNumber":459,"author":{"gitID":"-"},"content":"     * the current model added with {@code toAdd}.\u003cbr\u003e"},{"lineNumber":460,"author":{"gitID":"-"},"content":"     * 5. Browser url and selected card remain unchanged.\u003cbr\u003e"},{"lineNumber":461,"author":{"gitID":"-"},"content":"     * 6. Status bar\u0027s sync status changes.\u003cbr\u003e"},{"lineNumber":462,"author":{"gitID":"-"},"content":"     * Verifications 1, 3 and 4 are performed by"},{"lineNumber":463,"author":{"gitID":"-"},"content":"     * {@code AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"},{"lineNumber":464,"author":{"gitID":"-"},"content":"     * @see AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":465,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":466,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(Person toAdd) {"},{"lineNumber":467,"author":{"gitID":"-"},"content":"        assertCommandSuccess(PersonUtil.getAddCommand(toAdd), toAdd);"},{"lineNumber":468,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":469,"author":{"gitID":"-"},"content":""},{"lineNumber":470,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":471,"author":{"gitID":"-"},"content":"     * Performs the same verification as {@code assertCommandSuccess(Person)}. Executes {@code command}"},{"lineNumber":472,"author":{"gitID":"-"},"content":"     * instead."},{"lineNumber":473,"author":{"gitID":"-"},"content":"     * @see AddCommandSystemTest#assertCommandSuccess(Person)"},{"lineNumber":474,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":475,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(String command, Person toAdd) {"},{"lineNumber":476,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":477,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":478,"author":{"gitID":"-"},"content":"            expectedModel.addPerson(toAdd);"},{"lineNumber":479,"author":{"gitID":"-"},"content":"        } catch (DuplicatePersonException dpe) {"},{"lineNumber":480,"author":{"gitID":"-"},"content":"            throw new IllegalArgumentException(\"toAdd already exists in the model.\");"},{"lineNumber":481,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":482,"author":{"gitID":"-"},"content":"        String expectedResultMessage \u003d String.format(AddCommand.MESSAGE_SUCCESS, toAdd);"},{"lineNumber":483,"author":{"gitID":"-"},"content":""},{"lineNumber":484,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedModel, expectedResultMessage);"},{"lineNumber":485,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":486,"author":{"gitID":"-"},"content":""},{"lineNumber":487,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":488,"author":{"gitID":"-"},"content":"     * Performs the same verification as {@code assertCommandSuccess(String, Person)} except asserts that"},{"lineNumber":489,"author":{"gitID":"-"},"content":"     * the,\u003cbr\u003e"},{"lineNumber":490,"author":{"gitID":"-"},"content":"     * 1. Result display box displays {@code expectedResultMessage}.\u003cbr\u003e"},{"lineNumber":491,"author":{"gitID":"-"},"content":"     * 2. {@code Model}, {@code Storage} and {@code PersonListPanel} equal to the corresponding components in"},{"lineNumber":492,"author":{"gitID":"-"},"content":"     * {@code expectedModel}.\u003cbr\u003e"},{"lineNumber":493,"author":{"gitID":"-"},"content":"     * @see AddCommandSystemTest#assertCommandSuccess(String, Person)"},{"lineNumber":494,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":495,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(String command, Model expectedModel, String expectedResultMessage) {"},{"lineNumber":496,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":497,"author":{"gitID":"-"},"content":"        executeCommand(command);"},{"lineNumber":498,"author":{"gitID":"-"},"content":"        assertApplicationDisplaysExpected(\"\", expectedResultMessage, expectedModel);"},{"lineNumber":499,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":500,"author":{"gitID":"-"},"content":"        assertCommandBoxShowsDefaultStyle();"},{"lineNumber":501,"author":{"gitID":"-"},"content":"        assertStatusBarUnchangedExceptSyncStatus();"},{"lineNumber":502,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":503,"author":{"gitID":"-"},"content":""},{"lineNumber":504,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":505,"author":{"gitID":"-"},"content":"     * Executes {@code command} and asserts that the,\u003cbr\u003e"},{"lineNumber":506,"author":{"gitID":"-"},"content":"     * 1. Command box displays {@code command}.\u003cbr\u003e"},{"lineNumber":507,"author":{"gitID":"-"},"content":"     * 2. Command box has the error style class.\u003cbr\u003e"},{"lineNumber":508,"author":{"gitID":"-"},"content":"     * 3. Result display box displays {@code expectedResultMessage}.\u003cbr\u003e"},{"lineNumber":509,"author":{"gitID":"-"},"content":"     * 4. {@code Model}, {@code Storage} and {@code PersonListPanel} remain unchanged.\u003cbr\u003e"},{"lineNumber":510,"author":{"gitID":"-"},"content":"     * 5. Browser url, selected card and status bar remain unchanged.\u003cbr\u003e"},{"lineNumber":511,"author":{"gitID":"-"},"content":"     * Verifications 1, 3 and 4 are performed by"},{"lineNumber":512,"author":{"gitID":"-"},"content":"     * {@code AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"},{"lineNumber":513,"author":{"gitID":"-"},"content":"     * @see AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":514,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":515,"author":{"gitID":"-"},"content":"    private void assertCommandFailure(String command, String expectedResultMessage) {"},{"lineNumber":516,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":517,"author":{"gitID":"-"},"content":""},{"lineNumber":518,"author":{"gitID":"-"},"content":"        executeCommand(command);"},{"lineNumber":519,"author":{"gitID":"-"},"content":"        assertApplicationDisplaysExpected(command, expectedResultMessage, expectedModel);"},{"lineNumber":520,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":521,"author":{"gitID":"-"},"content":"        assertCommandBoxShowsErrorStyle();"},{"lineNumber":522,"author":{"gitID":"-"},"content":"        assertStatusBarUnchanged();"},{"lineNumber":523,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":524,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"kexiaowen":110,"mhq199657":59,"-":263,"Ang-YC":58,"tanhengyeow":34}},{"path":"src/test/java/systemtests/AddressBookSystemTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"Ang-YC"},"content":"import static guitests.guihandles.InfoPanelUtil.waitUntilInfoPanelLoaded;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":7,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.ui.TitleBar.SYNC_STATUS_INITIAL;"},{"lineNumber":8,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.ui.TitleBar.SYNC_STATUS_UPDATED;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import static seedu.address.ui.testutil.GuiTestAssert.assertListMatching;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import java.util.Date;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"import org.junit.After;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import org.junit.BeforeClass;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import org.junit.ClassRule;"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":"import guitests.guihandles.CommandBoxHandle;"},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":"import guitests.guihandles.InfoPanelHandle;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import guitests.guihandles.MainWindowHandle;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import guitests.guihandles.PersonCardHandle;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import guitests.guihandles.PersonListPanelHandle;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import guitests.guihandles.ResultDisplayHandle;"},{"lineNumber":26,"author":{"gitID":"Ang-YC"},"content":"import guitests.guihandles.TitleBarHandle;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"import seedu.address.TestApp;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.EventsCenter;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":30,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.ClearCommand;"},{"lineNumber":31,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.FindCommand;"},{"lineNumber":32,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.ListCommand;"},{"lineNumber":33,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.SelectCommand;"},{"lineNumber":34,"author":{"gitID":"-"},"content":"import seedu.address.model.AddressBook;"},{"lineNumber":35,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":36,"author":{"gitID":"-"},"content":"import seedu.address.testutil.TypicalPersons;"},{"lineNumber":37,"author":{"gitID":"-"},"content":"import seedu.address.ui.CommandBox;"},{"lineNumber":38,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.ui.InfoPanel;"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":41,"author":{"gitID":"-"},"content":" * A system test class for AddressBook, which provides access to handles of GUI components and helper methods"},{"lineNumber":42,"author":{"gitID":"-"},"content":" * for test verification."},{"lineNumber":43,"author":{"gitID":"-"},"content":" */"},{"lineNumber":44,"author":{"gitID":"-"},"content":"public abstract class AddressBookSystemTest {"},{"lineNumber":45,"author":{"gitID":"-"},"content":"    @ClassRule"},{"lineNumber":46,"author":{"gitID":"-"},"content":"    public static ClockRule clockRule \u003d new ClockRule();"},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":"    private static final List\u003cString\u003e COMMAND_BOX_DEFAULT_STYLE \u003d Arrays.asList(\"text-input\", \"text-field\");"},{"lineNumber":49,"author":{"gitID":"-"},"content":"    private static final List\u003cString\u003e COMMAND_BOX_ERROR_STYLE \u003d"},{"lineNumber":50,"author":{"gitID":"-"},"content":"            Arrays.asList(\"text-input\", \"text-field\", CommandBox.ERROR_STYLE_CLASS);"},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"-"},"content":"    private MainWindowHandle mainWindowHandle;"},{"lineNumber":53,"author":{"gitID":"-"},"content":"    private TestApp testApp;"},{"lineNumber":54,"author":{"gitID":"-"},"content":"    private SystemTestSetupHelper setupHelper;"},{"lineNumber":55,"author":{"gitID":"-"},"content":""},{"lineNumber":56,"author":{"gitID":"-"},"content":"    @BeforeClass"},{"lineNumber":57,"author":{"gitID":"-"},"content":"    public static void setupBeforeClass() {"},{"lineNumber":58,"author":{"gitID":"-"},"content":"        SystemTestSetupHelper.initialize();"},{"lineNumber":59,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":60,"author":{"gitID":"-"},"content":""},{"lineNumber":61,"author":{"gitID":"-"},"content":"    @Before"},{"lineNumber":62,"author":{"gitID":"-"},"content":"    public void setUp() {"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        setupHelper \u003d new SystemTestSetupHelper();"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        testApp \u003d setupHelper.setupApplication(this::getInitialData, getDataFileLocation());"},{"lineNumber":65,"author":{"gitID":"-"},"content":"        mainWindowHandle \u003d setupHelper.setupMainWindowHandle();"},{"lineNumber":66,"author":{"gitID":"-"},"content":""},{"lineNumber":67,"author":{"gitID":"-"},"content":"        assertApplicationStartingStateIsCorrect();"},{"lineNumber":68,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitID":"-"},"content":""},{"lineNumber":70,"author":{"gitID":"-"},"content":"    @After"},{"lineNumber":71,"author":{"gitID":"-"},"content":"    public void tearDown() throws Exception {"},{"lineNumber":72,"author":{"gitID":"-"},"content":"        setupHelper.tearDownStage();"},{"lineNumber":73,"author":{"gitID":"-"},"content":"        EventsCenter.clearSubscribers();"},{"lineNumber":74,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitID":"-"},"content":""},{"lineNumber":76,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":77,"author":{"gitID":"-"},"content":"     * Returns the data to be loaded into the file in {@link #getDataFileLocation()}."},{"lineNumber":78,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":79,"author":{"gitID":"-"},"content":"    protected AddressBook getInitialData() {"},{"lineNumber":80,"author":{"gitID":"-"},"content":"        return TypicalPersons.getTypicalAddressBook();"},{"lineNumber":81,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":82,"author":{"gitID":"-"},"content":""},{"lineNumber":83,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":84,"author":{"gitID":"-"},"content":"     * Returns the directory of the data file."},{"lineNumber":85,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":86,"author":{"gitID":"-"},"content":"    protected String getDataFileLocation() {"},{"lineNumber":87,"author":{"gitID":"-"},"content":"        return TestApp.SAVE_LOCATION_FOR_TESTING;"},{"lineNumber":88,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":89,"author":{"gitID":"-"},"content":""},{"lineNumber":90,"author":{"gitID":"-"},"content":"    public MainWindowHandle getMainWindowHandle() {"},{"lineNumber":91,"author":{"gitID":"-"},"content":"        return mainWindowHandle;"},{"lineNumber":92,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":93,"author":{"gitID":"-"},"content":""},{"lineNumber":94,"author":{"gitID":"-"},"content":"    public CommandBoxHandle getCommandBox() {"},{"lineNumber":95,"author":{"gitID":"-"},"content":"        return mainWindowHandle.getCommandBox();"},{"lineNumber":96,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":97,"author":{"gitID":"-"},"content":""},{"lineNumber":98,"author":{"gitID":"-"},"content":"    public PersonListPanelHandle getPersonListPanel() {"},{"lineNumber":99,"author":{"gitID":"-"},"content":"        return mainWindowHandle.getPersonListPanel();"},{"lineNumber":100,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":101,"author":{"gitID":"-"},"content":""},{"lineNumber":102,"author":{"gitID":"Ang-YC"},"content":"    public InfoPanelHandle getInfoPanel() {"},{"lineNumber":103,"author":{"gitID":"Ang-YC"},"content":"        return mainWindowHandle.getInfoPanel();"},{"lineNumber":104,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":105,"author":{"gitID":"-"},"content":""},{"lineNumber":106,"author":{"gitID":"Ang-YC"},"content":"    public TitleBarHandle getTitleBar() {"},{"lineNumber":107,"author":{"gitID":"Ang-YC"},"content":"        return mainWindowHandle.getTitleBar();"},{"lineNumber":108,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":109,"author":{"gitID":"-"},"content":""},{"lineNumber":110,"author":{"gitID":"-"},"content":"    public ResultDisplayHandle getResultDisplay() {"},{"lineNumber":111,"author":{"gitID":"-"},"content":"        return mainWindowHandle.getResultDisplay();"},{"lineNumber":112,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":113,"author":{"gitID":"-"},"content":""},{"lineNumber":114,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":115,"author":{"gitID":"-"},"content":"     * Executes {@code command} in the application\u0027s {@code CommandBox}."},{"lineNumber":116,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":117,"author":{"gitID":"-"},"content":"    protected void executeCommand(String command) {"},{"lineNumber":118,"author":{"gitID":"-"},"content":"        rememberStates();"},{"lineNumber":119,"author":{"gitID":"-"},"content":"        // Injects a fixed clock before executing a command so that the time stamp shown in the status bar"},{"lineNumber":120,"author":{"gitID":"-"},"content":"        // after each command is predictable and also different from the previous command."},{"lineNumber":121,"author":{"gitID":"-"},"content":"        clockRule.setInjectedClockToCurrentTime();"},{"lineNumber":122,"author":{"gitID":"-"},"content":""},{"lineNumber":123,"author":{"gitID":"-"},"content":"        mainWindowHandle.getCommandBox().run(command);"},{"lineNumber":124,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":125,"author":{"gitID":"-"},"content":""},{"lineNumber":126,"author":{"gitID":"Ang-YC"},"content":"    //@@author Ang-YC"},{"lineNumber":127,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":128,"author":{"gitID":"Ang-YC"},"content":"     * Executes {@code command} in the application\u0027s {@code CommandBox}."},{"lineNumber":129,"author":{"gitID":"Ang-YC"},"content":"     * Method returns after UI components have been updated."},{"lineNumber":130,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":131,"author":{"gitID":"Ang-YC"},"content":"    protected void executeCommandWaitForUi(String command) {"},{"lineNumber":132,"author":{"gitID":"Ang-YC"},"content":"        getInfoPanel().resetLoadedStatus();"},{"lineNumber":133,"author":{"gitID":"Ang-YC"},"content":"        executeCommand(command);"},{"lineNumber":134,"author":{"gitID":"Ang-YC"},"content":"        waitUntilInfoPanelLoaded(getInfoPanel());"},{"lineNumber":135,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":136,"author":{"gitID":"Ang-YC"},"content":"    //@@author"},{"lineNumber":137,"author":{"gitID":"-"},"content":""},{"lineNumber":138,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":139,"author":{"gitID":"-"},"content":"     * Displays all persons in the address book."},{"lineNumber":140,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":141,"author":{"gitID":"-"},"content":"    protected void showAllPersons() {"},{"lineNumber":142,"author":{"gitID":"-"},"content":"        executeCommand(ListCommand.COMMAND_WORD);"},{"lineNumber":143,"author":{"gitID":"-"},"content":"        assertEquals(getModel().getAddressBook().getPersonList().size(), getModel().getFilteredPersonList().size());"},{"lineNumber":144,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":145,"author":{"gitID":"-"},"content":""},{"lineNumber":146,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":147,"author":{"gitID":"-"},"content":"     * Displays all persons with any parts of their names matching {@code keyword} (case-insensitive)."},{"lineNumber":148,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":149,"author":{"gitID":"-"},"content":"    protected void showPersonsWithName(String keyword) {"},{"lineNumber":150,"author":{"gitID":"-"},"content":"        executeCommand(FindCommand.COMMAND_WORD + \" \" + keyword);"},{"lineNumber":151,"author":{"gitID":"-"},"content":"        assertTrue(getModel().getFilteredPersonList().size() \u003c getModel().getAddressBook().getPersonList().size());"},{"lineNumber":152,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":153,"author":{"gitID":"-"},"content":""},{"lineNumber":154,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":155,"author":{"gitID":"-"},"content":"     * Selects the person at {@code index} of the displayed list."},{"lineNumber":156,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":157,"author":{"gitID":"-"},"content":"    protected void selectPerson(Index index) {"},{"lineNumber":158,"author":{"gitID":"-"},"content":"        executeCommand(SelectCommand.COMMAND_WORD + \" \" + index.getOneBased());"},{"lineNumber":159,"author":{"gitID":"-"},"content":"        assertEquals(index.getZeroBased(), getPersonListPanel().getSelectedCardIndex());"},{"lineNumber":160,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":161,"author":{"gitID":"-"},"content":""},{"lineNumber":162,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":163,"author":{"gitID":"-"},"content":"     * Deletes all persons in the address book."},{"lineNumber":164,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":165,"author":{"gitID":"-"},"content":"    protected void deleteAllPersons() {"},{"lineNumber":166,"author":{"gitID":"-"},"content":"        executeCommand(ClearCommand.COMMAND_WORD);"},{"lineNumber":167,"author":{"gitID":"-"},"content":"        assertEquals(0, getModel().getAddressBook().getPersonList().size());"},{"lineNumber":168,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":169,"author":{"gitID":"-"},"content":""},{"lineNumber":170,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":171,"author":{"gitID":"-"},"content":"     * Asserts that the {@code CommandBox} displays {@code expectedCommandInput}, the {@code ResultDisplay} displays"},{"lineNumber":172,"author":{"gitID":"-"},"content":"     * {@code expectedResultMessage}, the model and storage contains the same person objects as {@code expectedModel}"},{"lineNumber":173,"author":{"gitID":"-"},"content":"     * and the person list panel displays the persons in the model correctly."},{"lineNumber":174,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":175,"author":{"gitID":"-"},"content":"    protected void assertApplicationDisplaysExpected(String expectedCommandInput, String expectedResultMessage,"},{"lineNumber":176,"author":{"gitID":"-"},"content":"            Model expectedModel) {"},{"lineNumber":177,"author":{"gitID":"-"},"content":"        assertEquals(expectedCommandInput, getCommandBox().getInput());"},{"lineNumber":178,"author":{"gitID":"-"},"content":"        assertEquals(expectedResultMessage, getResultDisplay().getText());"},{"lineNumber":179,"author":{"gitID":"-"},"content":"        assertEquals(expectedModel, getModel());"},{"lineNumber":180,"author":{"gitID":"-"},"content":"        assertEquals(expectedModel.getAddressBook(), testApp.readStorageAddressBook());"},{"lineNumber":181,"author":{"gitID":"-"},"content":"        assertListMatching(getPersonListPanel(), expectedModel.getFilteredPersonList());"},{"lineNumber":182,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":183,"author":{"gitID":"-"},"content":""},{"lineNumber":184,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":185,"author":{"gitID":"Ang-YC"},"content":"     * Calls {@code InfoPanelHandle}, {@code PersonListPanelHandle} and {@code TitleBarHandle} to remember"},{"lineNumber":186,"author":{"gitID":"-"},"content":"     * their current state."},{"lineNumber":187,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":188,"author":{"gitID":"-"},"content":"    private void rememberStates() {"},{"lineNumber":189,"author":{"gitID":"Ang-YC"},"content":"        TitleBarHandle titleBarHandle \u003d getTitleBar();"},{"lineNumber":190,"author":{"gitID":"Ang-YC"},"content":"        getInfoPanel().rememberPerson();"},{"lineNumber":191,"author":{"gitID":"Ang-YC"},"content":"        titleBarHandle.rememberSaveLocation();"},{"lineNumber":192,"author":{"gitID":"Ang-YC"},"content":"        titleBarHandle.rememberSyncStatus();"},{"lineNumber":193,"author":{"gitID":"-"},"content":"        getPersonListPanel().rememberSelectedPersonCard();"},{"lineNumber":194,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":195,"author":{"gitID":"-"},"content":""},{"lineNumber":196,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":197,"author":{"gitID":"-"},"content":"     * Asserts that the previously selected card is now deselected and the browser\u0027s url remains displaying the details"},{"lineNumber":198,"author":{"gitID":"-"},"content":"     * of the previously selected person."},{"lineNumber":199,"author":{"gitID":"Ang-YC"},"content":"     * @see InfoPanelHandle#isPersonChanged()"},{"lineNumber":200,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":201,"author":{"gitID":"-"},"content":"    protected void assertSelectedCardDeselected() {"},{"lineNumber":202,"author":{"gitID":"Ang-YC"},"content":"        assertFalse(getInfoPanel().isPersonChanged());"},{"lineNumber":203,"author":{"gitID":"-"},"content":"        assertFalse(getPersonListPanel().isAnyCardSelected());"},{"lineNumber":204,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":205,"author":{"gitID":"-"},"content":""},{"lineNumber":206,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":207,"author":{"gitID":"-"},"content":"     * Asserts that the browser\u0027s url is changed to display the details of the person in the person list panel at"},{"lineNumber":208,"author":{"gitID":"-"},"content":"     * {@code expectedSelectedCardIndex}, and only the card at {@code expectedSelectedCardIndex} is selected."},{"lineNumber":209,"author":{"gitID":"Ang-YC"},"content":"     * @see InfoPanelHandle#isPersonChanged()"},{"lineNumber":210,"author":{"gitID":"-"},"content":"     * @see PersonListPanelHandle#isSelectedPersonCardChanged()"},{"lineNumber":211,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":212,"author":{"gitID":"-"},"content":"    protected void assertSelectedCardChanged(Index expectedSelectedCardIndex) {"},{"lineNumber":213,"author":{"gitID":"Ang-YC"},"content":"        PersonCardHandle personCardHandle \u003d getPersonListPanel().getHandleToSelectedCard();"},{"lineNumber":214,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":215,"author":{"gitID":"Ang-YC"},"content":"        // Max value is a flag for nothing is selected"},{"lineNumber":216,"author":{"gitID":"Ang-YC"},"content":"        if (expectedSelectedCardIndex.getZeroBased() !\u003d Integer.MAX_VALUE) {"},{"lineNumber":217,"author":{"gitID":"Ang-YC"},"content":"            String selectedCardName \u003d personCardHandle.getName();"},{"lineNumber":218,"author":{"gitID":"-"},"content":""},{"lineNumber":219,"author":{"gitID":"Ang-YC"},"content":"            // TODO: Match Person instead of just Name"},{"lineNumber":220,"author":{"gitID":"Ang-YC"},"content":"            assertEquals(selectedCardName, getInfoPanel().getLoadedPerson().getName().toString());"},{"lineNumber":221,"author":{"gitID":"-"},"content":"            assertEquals(expectedSelectedCardIndex.getZeroBased(), getPersonListPanel().getSelectedCardIndex());"},{"lineNumber":222,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":223,"author":{"gitID":"Ang-YC"},"content":"        } else { // Nothing is selected"},{"lineNumber":224,"author":{"gitID":"Ang-YC"},"content":"            assertTrue(personCardHandle \u003d\u003d null);"},{"lineNumber":225,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":226,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":227,"author":{"gitID":"-"},"content":""},{"lineNumber":228,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":229,"author":{"gitID":"-"},"content":"     * Asserts that the browser\u0027s url and the selected card in the person list panel remain unchanged."},{"lineNumber":230,"author":{"gitID":"Ang-YC"},"content":"     * @see InfoPanelHandle#isPersonChanged()"},{"lineNumber":231,"author":{"gitID":"-"},"content":"     * @see PersonListPanelHandle#isSelectedPersonCardChanged()"},{"lineNumber":232,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":233,"author":{"gitID":"-"},"content":"    protected void assertSelectedCardUnchanged() {"},{"lineNumber":234,"author":{"gitID":"Ang-YC"},"content":"        assertFalse(getInfoPanel().isPersonChanged());"},{"lineNumber":235,"author":{"gitID":"-"},"content":"        assertFalse(getPersonListPanel().isSelectedPersonCardChanged());"},{"lineNumber":236,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":237,"author":{"gitID":"-"},"content":""},{"lineNumber":238,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":239,"author":{"gitID":"-"},"content":"     * Asserts that the command box\u0027s shows the default style."},{"lineNumber":240,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":241,"author":{"gitID":"-"},"content":"    protected void assertCommandBoxShowsDefaultStyle() {"},{"lineNumber":242,"author":{"gitID":"-"},"content":"        assertEquals(COMMAND_BOX_DEFAULT_STYLE, getCommandBox().getStyleClass());"},{"lineNumber":243,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":244,"author":{"gitID":"-"},"content":""},{"lineNumber":245,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":246,"author":{"gitID":"-"},"content":"     * Asserts that the command box\u0027s shows the error style."},{"lineNumber":247,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":248,"author":{"gitID":"-"},"content":"    protected void assertCommandBoxShowsErrorStyle() {"},{"lineNumber":249,"author":{"gitID":"-"},"content":"        assertEquals(COMMAND_BOX_ERROR_STYLE, getCommandBox().getStyleClass());"},{"lineNumber":250,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":251,"author":{"gitID":"-"},"content":""},{"lineNumber":252,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":253,"author":{"gitID":"-"},"content":"     * Asserts that the entire status bar remains the same."},{"lineNumber":254,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":255,"author":{"gitID":"-"},"content":"    protected void assertStatusBarUnchanged() {"},{"lineNumber":256,"author":{"gitID":"Ang-YC"},"content":"        TitleBarHandle handle \u003d getTitleBar();"},{"lineNumber":257,"author":{"gitID":"-"},"content":"        assertFalse(handle.isSaveLocationChanged());"},{"lineNumber":258,"author":{"gitID":"-"},"content":"        assertFalse(handle.isSyncStatusChanged());"},{"lineNumber":259,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":260,"author":{"gitID":"-"},"content":""},{"lineNumber":261,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":262,"author":{"gitID":"-"},"content":"     * Asserts that only the sync status in the status bar was changed to the timing of"},{"lineNumber":263,"author":{"gitID":"-"},"content":"     * {@code ClockRule#getInjectedClock()}, while the save location remains the same."},{"lineNumber":264,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":265,"author":{"gitID":"-"},"content":"    protected void assertStatusBarUnchangedExceptSyncStatus() {"},{"lineNumber":266,"author":{"gitID":"Ang-YC"},"content":"        TitleBarHandle handle \u003d getTitleBar();"},{"lineNumber":267,"author":{"gitID":"-"},"content":"        String timestamp \u003d new Date(clockRule.getInjectedClock().millis()).toString();"},{"lineNumber":268,"author":{"gitID":"-"},"content":"        String expectedSyncStatus \u003d String.format(SYNC_STATUS_UPDATED, timestamp);"},{"lineNumber":269,"author":{"gitID":"-"},"content":"        assertEquals(expectedSyncStatus, handle.getSyncStatus());"},{"lineNumber":270,"author":{"gitID":"-"},"content":"        assertFalse(handle.isSaveLocationChanged());"},{"lineNumber":271,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":272,"author":{"gitID":"-"},"content":""},{"lineNumber":273,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":274,"author":{"gitID":"-"},"content":"     * Asserts that the starting state of the application is correct."},{"lineNumber":275,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":276,"author":{"gitID":"-"},"content":"    private void assertApplicationStartingStateIsCorrect() {"},{"lineNumber":277,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":278,"author":{"gitID":"-"},"content":"            assertEquals(\"\", getCommandBox().getInput());"},{"lineNumber":279,"author":{"gitID":"-"},"content":"            assertEquals(\"\", getResultDisplay().getText());"},{"lineNumber":280,"author":{"gitID":"-"},"content":"            assertListMatching(getPersonListPanel(), getModel().getFilteredPersonList());"},{"lineNumber":281,"author":{"gitID":"Ang-YC"},"content":"            assertEquals(InfoPanel.DEFAULT_PERSON, getInfoPanel().getLoadedPerson());"},{"lineNumber":282,"author":{"gitID":"Ang-YC"},"content":"            assertEquals(\"./\" + testApp.getStorageSaveLocation(), getTitleBar().getSaveLocation());"},{"lineNumber":283,"author":{"gitID":"Ang-YC"},"content":"            assertEquals(SYNC_STATUS_INITIAL, getTitleBar().getSyncStatus());"},{"lineNumber":284,"author":{"gitID":"-"},"content":"        } catch (Exception e) {"},{"lineNumber":285,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"Starting state is wrong.\", e);"},{"lineNumber":286,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":287,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":288,"author":{"gitID":"-"},"content":""},{"lineNumber":289,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":290,"author":{"gitID":"-"},"content":"     * Returns a defensive copy of the current model."},{"lineNumber":291,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":292,"author":{"gitID":"-"},"content":"    protected Model getModel() {"},{"lineNumber":293,"author":{"gitID":"-"},"content":"        return testApp.getModel();"},{"lineNumber":294,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":295,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"-":247,"Ang-YC":48}},{"path":"src/test/java/systemtests/WindowGuiTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import guitests.GuiRobot;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import guitests.guihandles.MainWindowHandle;"},{"lineNumber":9,"author":{"gitID":"Ang-YC"},"content":"import javafx.geometry.Point2D;"},{"lineNumber":10,"author":{"gitID":"Ang-YC"},"content":"import javafx.geometry.Rectangle2D;"},{"lineNumber":11,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.input.MouseButton;"},{"lineNumber":12,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.commons.events.ui.MaximizeAppRequestEvent;"},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.commons.events.ui.MinimizeAppRequestEvent;"},{"lineNumber":14,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.testutil.EventsUtil;"},{"lineNumber":15,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":16,"author":{"gitID":"Ang-YC"},"content":"//@@author Ang-YC"},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":"public class WindowGuiTest extends AddressBookSystemTest {"},{"lineNumber":18,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":19,"author":{"gitID":"Ang-YC"},"content":"    private final GuiRobot guiRobot \u003d new GuiRobot();"},{"lineNumber":20,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":22,"author":{"gitID":"Ang-YC"},"content":"    public void testDraggableTitleBar() {"},{"lineNumber":23,"author":{"gitID":"Ang-YC"},"content":"        MainWindowHandle mainWindowHandle \u003d getMainWindowHandle();"},{"lineNumber":24,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":25,"author":{"gitID":"Ang-YC"},"content":"        Point2D originalPosition \u003d mainWindowHandle.getWindowPosition();"},{"lineNumber":26,"author":{"gitID":"Ang-YC"},"content":"        Point2D expectedDelta \u003d new Point2D(50, 50);"},{"lineNumber":27,"author":{"gitID":"Ang-YC"},"content":"        Point2D dragFrom \u003d mainWindowHandle.getTitleBarPosition();"},{"lineNumber":28,"author":{"gitID":"Ang-YC"},"content":"        Point2D dragTo \u003d dragFrom.add(expectedDelta);"},{"lineNumber":29,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":30,"author":{"gitID":"Ang-YC"},"content":"        // Drag it!"},{"lineNumber":31,"author":{"gitID":"Ang-YC"},"content":"        guiRobot.moveTo(dragFrom);"},{"lineNumber":32,"author":{"gitID":"Ang-YC"},"content":"        guiRobot.press(MouseButton.PRIMARY);"},{"lineNumber":33,"author":{"gitID":"Ang-YC"},"content":"        guiRobot.drag(dragTo);"},{"lineNumber":34,"author":{"gitID":"Ang-YC"},"content":"        guiRobot.release(MouseButton.PRIMARY);"},{"lineNumber":35,"author":{"gitID":"Ang-YC"},"content":"        guiRobot.pauseForHuman();"},{"lineNumber":36,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":37,"author":{"gitID":"Ang-YC"},"content":"        Point2D newPosition \u003d mainWindowHandle.getWindowPosition();"},{"lineNumber":38,"author":{"gitID":"Ang-YC"},"content":"        Point2D delta \u003d newPosition.subtract(originalPosition);"},{"lineNumber":39,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":40,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(delta.equals(expectedDelta));"},{"lineNumber":41,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":42,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":43,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":44,"author":{"gitID":"Ang-YC"},"content":"    public void testDoubleClickMaximize() {"},{"lineNumber":45,"author":{"gitID":"Ang-YC"},"content":"        MainWindowHandle mainWindowHandle \u003d getMainWindowHandle();"},{"lineNumber":46,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":47,"author":{"gitID":"Ang-YC"},"content":"        Point2D clickPosition \u003d mainWindowHandle.getTitleBarPosition();"},{"lineNumber":48,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":49,"author":{"gitID":"Ang-YC"},"content":"        // Double click it"},{"lineNumber":50,"author":{"gitID":"Ang-YC"},"content":"        guiRobot.doubleClickOn(clickPosition, MouseButton.PRIMARY);"},{"lineNumber":51,"author":{"gitID":"Ang-YC"},"content":"        guiRobot.pauseForHuman();"},{"lineNumber":52,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":53,"author":{"gitID":"Ang-YC"},"content":"        assertWindowMaximized();"},{"lineNumber":54,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":55,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":56,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":57,"author":{"gitID":"Ang-YC"},"content":"    public void testUnMaximize() {"},{"lineNumber":58,"author":{"gitID":"Ang-YC"},"content":"        MainWindowHandle mainWindowHandle \u003d getMainWindowHandle();"},{"lineNumber":59,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":60,"author":{"gitID":"Ang-YC"},"content":"        Rectangle2D originalBound \u003d mainWindowHandle.getWindowBound();"},{"lineNumber":61,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":62,"author":{"gitID":"Ang-YC"},"content":"        // Maximize"},{"lineNumber":63,"author":{"gitID":"Ang-YC"},"content":"        EventsUtil.postNow(new MaximizeAppRequestEvent());"},{"lineNumber":64,"author":{"gitID":"Ang-YC"},"content":"        assertWindowMaximized();"},{"lineNumber":65,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":66,"author":{"gitID":"Ang-YC"},"content":"        // UnMaximize"},{"lineNumber":67,"author":{"gitID":"Ang-YC"},"content":"        EventsUtil.postNow(new MaximizeAppRequestEvent());"},{"lineNumber":68,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":69,"author":{"gitID":"Ang-YC"},"content":"        Rectangle2D newBound \u003d mainWindowHandle.getWindowBound();"},{"lineNumber":70,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(originalBound.equals(newBound));"},{"lineNumber":71,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":72,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":73,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":74,"author":{"gitID":"Ang-YC"},"content":"    public void testMinimize() {"},{"lineNumber":75,"author":{"gitID":"Ang-YC"},"content":"        MainWindowHandle mainWindowHandle \u003d getMainWindowHandle();"},{"lineNumber":76,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":77,"author":{"gitID":"Ang-YC"},"content":"        // Minimize"},{"lineNumber":78,"author":{"gitID":"Ang-YC"},"content":"        EventsUtil.postNow(new MinimizeAppRequestEvent());"},{"lineNumber":79,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(mainWindowHandle.isMinimized());"},{"lineNumber":80,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":81,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":82,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":83,"author":{"gitID":"Ang-YC"},"content":"    public void testResizableWindow() {"},{"lineNumber":84,"author":{"gitID":"Ang-YC"},"content":"        MainWindowHandle mainWindowHandle \u003d getMainWindowHandle();"},{"lineNumber":85,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":86,"author":{"gitID":"Ang-YC"},"content":"        Rectangle2D originalBound \u003d mainWindowHandle.getWindowBound();"},{"lineNumber":87,"author":{"gitID":"Ang-YC"},"content":"        Point2D expectedDelta \u003d new Point2D(50, 50);"},{"lineNumber":88,"author":{"gitID":"Ang-YC"},"content":"        Point2D dragFrom \u003d mainWindowHandle.getResizablePosition();"},{"lineNumber":89,"author":{"gitID":"Ang-YC"},"content":"        Point2D dragTo \u003d dragFrom.add(expectedDelta);"},{"lineNumber":90,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":91,"author":{"gitID":"Ang-YC"},"content":"        guiRobot.moveTo(dragFrom);"},{"lineNumber":92,"author":{"gitID":"Ang-YC"},"content":"        guiRobot.press(MouseButton.PRIMARY);"},{"lineNumber":93,"author":{"gitID":"Ang-YC"},"content":"        guiRobot.drag(dragTo);"},{"lineNumber":94,"author":{"gitID":"Ang-YC"},"content":"        guiRobot.release(MouseButton.PRIMARY);"},{"lineNumber":95,"author":{"gitID":"Ang-YC"},"content":"        guiRobot.pauseForHuman();"},{"lineNumber":96,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":97,"author":{"gitID":"Ang-YC"},"content":"        Rectangle2D newBound \u003d mainWindowHandle.getWindowBound();"},{"lineNumber":98,"author":{"gitID":"Ang-YC"},"content":"        Point2D delta \u003d new Point2D(newBound.getWidth() - originalBound.getWidth(),"},{"lineNumber":99,"author":{"gitID":"Ang-YC"},"content":"                newBound.getHeight() - originalBound.getHeight());"},{"lineNumber":100,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":101,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(delta.equals(expectedDelta));"},{"lineNumber":102,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":103,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":104,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":105,"author":{"gitID":"Ang-YC"},"content":"    public void testSplitPaneResponsive() {"},{"lineNumber":106,"author":{"gitID":"Ang-YC"},"content":"        MainWindowHandle mainWindowHandle \u003d getMainWindowHandle();"},{"lineNumber":107,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":108,"author":{"gitID":"Ang-YC"},"content":"        double originalWidth \u003d mainWindowHandle.getListPaneWidth();"},{"lineNumber":109,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":110,"author":{"gitID":"Ang-YC"},"content":"        // Maximize"},{"lineNumber":111,"author":{"gitID":"Ang-YC"},"content":"        EventsUtil.postNow(new MaximizeAppRequestEvent());"},{"lineNumber":112,"author":{"gitID":"Ang-YC"},"content":"        assertWindowMaximized();"},{"lineNumber":113,"author":{"gitID":"Ang-YC"},"content":"        guiRobot.pauseForHuman();"},{"lineNumber":114,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":115,"author":{"gitID":"Ang-YC"},"content":"        // Allow floating point error"},{"lineNumber":116,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(Math.abs(mainWindowHandle.getListPaneWidth() - originalWidth) \u003c\u003d 1);"},{"lineNumber":117,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":118,"author":{"gitID":"Ang-YC"},"content":"        // Reset size and position"},{"lineNumber":119,"author":{"gitID":"Ang-YC"},"content":"        mainWindowHandle.setWindowDefaultPositionAndSize();"},{"lineNumber":120,"author":{"gitID":"Ang-YC"},"content":"        guiRobot.pauseForHuman();"},{"lineNumber":121,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":122,"author":{"gitID":"Ang-YC"},"content":"        // Allow floating point error"},{"lineNumber":123,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(Math.abs(mainWindowHandle.getListPaneWidth() - originalWidth) \u003c\u003d 1);"},{"lineNumber":124,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":125,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":126,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":127,"author":{"gitID":"Ang-YC"},"content":"     * Asserts that the window is maximized"},{"lineNumber":128,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":129,"author":{"gitID":"Ang-YC"},"content":"    private void assertWindowMaximized() {"},{"lineNumber":130,"author":{"gitID":"Ang-YC"},"content":"        MainWindowHandle mainWindowHandle \u003d getMainWindowHandle();"},{"lineNumber":131,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":132,"author":{"gitID":"Ang-YC"},"content":"        Rectangle2D windowBound \u003d mainWindowHandle.getWindowBound();"},{"lineNumber":133,"author":{"gitID":"Ang-YC"},"content":"        Rectangle2D screenBound \u003d mainWindowHandle.getSceenBound();"},{"lineNumber":134,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":135,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(windowBound.equals(screenBound));"},{"lineNumber":136,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":137,"author":{"gitID":"Ang-YC"},"content":"}"}],"authorContributionMap":{"-":8,"Ang-YC":129}},{"path":"docs/DeveloperGuide.adoc","lines":[{"lineNumber":1,"author":{"gitID":"tanhengyeow"},"content":"\u003d HR+ Developer Guide"},{"lineNumber":2,"author":{"gitID":"-"},"content":":toc:"},{"lineNumber":3,"author":{"gitID":"-"},"content":":toc-title:"},{"lineNumber":4,"author":{"gitID":"-"},"content":":toc-placement: preamble"},{"lineNumber":5,"author":{"gitID":"-"},"content":":sectnums:"},{"lineNumber":6,"author":{"gitID":"-"},"content":":imagesDir: images"},{"lineNumber":7,"author":{"gitID":"-"},"content":":stylesDir: stylesheets"},{"lineNumber":8,"author":{"gitID":"-"},"content":":xrefstyle: full"},{"lineNumber":9,"author":{"gitID":"-"},"content":"ifdef::env-github[]"},{"lineNumber":10,"author":{"gitID":"-"},"content":":tip-caption: :bulb:"},{"lineNumber":11,"author":{"gitID":"-"},"content":":note-caption: :information_source:"},{"lineNumber":12,"author":{"gitID":"-"},"content":"endif::[]"},{"lineNumber":13,"author":{"gitID":"-"},"content":":repoURL: https://github.com/CS2103JAN2018-W14-B3/main/tree/master"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"By: `Team W14-B3`      Since: `Jan 2018`      Licence: `MIT`"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"\u003d\u003d Setting up"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":". *JDK `1.8.0_60`* or later"},{"lineNumber":21,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"+"},{"lineNumber":23,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":24,"author":{"gitID":"-"},"content":"Having any Java 8 version is not enough. +"},{"lineNumber":25,"author":{"gitID":"-"},"content":"This app will not work with earlier versions of Java 8."},{"lineNumber":26,"author":{"gitID":"-"},"content":"+"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":". *IntelliJ* IDE"},{"lineNumber":29,"author":{"gitID":"-"},"content":"+"},{"lineNumber":30,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":31,"author":{"gitID":"-"},"content":"IntelliJ by default has Gradle and JavaFx plugins installed. +"},{"lineNumber":32,"author":{"gitID":"-"},"content":"Do not disable them. If you have disabled them, go to `File` \u003e `Settings` \u003e `Plugins` to re-enable them."},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Setting up the project in your computer"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":". Fork this repo, and clone the fork to your computer"},{"lineNumber":38,"author":{"gitID":"-"},"content":". Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"},{"lineNumber":39,"author":{"gitID":"-"},"content":". Set up the correct JDK version for Gradle"},{"lineNumber":40,"author":{"gitID":"-"},"content":".. Click `Configure` \u003e `Project Defaults` \u003e `Project Structure`"},{"lineNumber":41,"author":{"gitID":"-"},"content":".. Click `New...` and find the directory of the JDK"},{"lineNumber":42,"author":{"gitID":"-"},"content":". Click `Import Project`"},{"lineNumber":43,"author":{"gitID":"-"},"content":". Locate the `build.gradle` file and select it. Click `OK`"},{"lineNumber":44,"author":{"gitID":"-"},"content":". Click `Open as Project`"},{"lineNumber":45,"author":{"gitID":"-"},"content":". Click `OK` to accept the default settings"},{"lineNumber":46,"author":{"gitID":"-"},"content":". Open a console and run the command `gradlew processResources` (Mac/Linux: `./gradlew processResources`). It should finish with the `BUILD SUCCESSFUL` message. +"},{"lineNumber":47,"author":{"gitID":"-"},"content":"This will generate all resources required by the application and tests."},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Verifying the setup"},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"-"},"content":". Run the `seedu.address.MainApp` and try a few commands"},{"lineNumber":52,"author":{"gitID":"-"},"content":". \u003c\u003cTesting,Run the tests\u003e\u003e to ensure they all pass."},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Configurations to do before writing code"},{"lineNumber":55,"author":{"gitID":"-"},"content":""},{"lineNumber":56,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Configuring the coding style"},{"lineNumber":57,"author":{"gitID":"-"},"content":""},{"lineNumber":58,"author":{"gitID":"-"},"content":"This project follows https://github.com/oss-generic/process/blob/master/docs/CodingStandards.adoc[oss-generic coding standards]. IntelliJ\u0027s default style is mostly compliant with ours but it uses a different import order from ours. To rectify,"},{"lineNumber":59,"author":{"gitID":"-"},"content":""},{"lineNumber":60,"author":{"gitID":"-"},"content":". Go to `File` \u003e `Settings...` (Windows/Linux), or `IntelliJ IDEA` \u003e `Preferences...` (macOS)"},{"lineNumber":61,"author":{"gitID":"-"},"content":". Select `Editor` \u003e `Code Style` \u003e `Java`"},{"lineNumber":62,"author":{"gitID":"-"},"content":". Click on the `Imports` tab to set the order"},{"lineNumber":63,"author":{"gitID":"-"},"content":""},{"lineNumber":64,"author":{"gitID":"-"},"content":"* For `Class count to use import with \u0027\\*\u0027` and `Names count to use static import with \u0027*\u0027`: Set to `999` to prevent IntelliJ from contracting the import statements"},{"lineNumber":65,"author":{"gitID":"-"},"content":"* For `Import Layout`: The order is `import static all other imports`, `import java.\\*`, `import javax.*`, `import org.\\*`, `import com.*`, `import all other imports`. Add a `\u003cblank line\u003e` between each `import`"},{"lineNumber":66,"author":{"gitID":"-"},"content":""},{"lineNumber":67,"author":{"gitID":"-"},"content":"Optionally, you can follow the \u003c\u003cUsingCheckstyle#, UsingCheckstyle.adoc\u003e\u003e document to configure Intellij to check style-compliance as you write code."},{"lineNumber":68,"author":{"gitID":"-"},"content":""},{"lineNumber":69,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Updating documentation to match your fork"},{"lineNumber":70,"author":{"gitID":"-"},"content":""},{"lineNumber":71,"author":{"gitID":"-"},"content":"After forking the repo, links in the documentation will still point to the `se-edu/addressbook-level4` repo. If you plan to develop this as a separate product (i.e. instead of contributing to the `se-edu/addressbook-level4`) , you should replace the URL in the variable `repoURL` in `DeveloperGuide.adoc` and `UserGuide.adoc` with the URL of your fork."},{"lineNumber":72,"author":{"gitID":"-"},"content":""},{"lineNumber":73,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Setting up CI"},{"lineNumber":74,"author":{"gitID":"-"},"content":""},{"lineNumber":75,"author":{"gitID":"-"},"content":"Set up Travis to perform Continuous Integration (CI) for your fork. See \u003c\u003cUsingTravis#, UsingTravis.adoc\u003e\u003e to learn how to set it up."},{"lineNumber":76,"author":{"gitID":"-"},"content":""},{"lineNumber":77,"author":{"gitID":"-"},"content":"After setting up Travis, you can optionally set up coverage reporting for your team fork (see \u003c\u003cUsingCoveralls#, UsingCoveralls.adoc\u003e\u003e)."},{"lineNumber":78,"author":{"gitID":"-"},"content":""},{"lineNumber":79,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":80,"author":{"gitID":"-"},"content":"Coverage reporting could be useful for a team repository that hosts the final version but it is not that useful for your personal fork."},{"lineNumber":81,"author":{"gitID":"-"},"content":""},{"lineNumber":82,"author":{"gitID":"-"},"content":"Optionally, you can set up AppVeyor as a second CI (see \u003c\u003cUsingAppVeyor#, UsingAppVeyor.adoc\u003e\u003e)."},{"lineNumber":83,"author":{"gitID":"-"},"content":""},{"lineNumber":84,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":85,"author":{"gitID":"-"},"content":"Having both Travis and AppVeyor ensures your App works on both Unix-based platforms and Windows-based platforms (Travis is Unix-based and AppVeyor is Windows-based)"},{"lineNumber":86,"author":{"gitID":"-"},"content":""},{"lineNumber":87,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Getting started with coding"},{"lineNumber":88,"author":{"gitID":"-"},"content":""},{"lineNumber":89,"author":{"gitID":"-"},"content":"When you are ready to start coding,"},{"lineNumber":90,"author":{"gitID":"-"},"content":""},{"lineNumber":91,"author":{"gitID":"-"},"content":"1. Get some sense of the overall design by reading \u003c\u003cDesign-Architecture\u003e\u003e."},{"lineNumber":92,"author":{"gitID":"-"},"content":"2. Take a look at \u003c\u003cGetStartedProgramming\u003e\u003e."},{"lineNumber":93,"author":{"gitID":"-"},"content":""},{"lineNumber":94,"author":{"gitID":"-"},"content":"\u003d\u003d Design"},{"lineNumber":95,"author":{"gitID":"-"},"content":""},{"lineNumber":96,"author":{"gitID":"-"},"content":"[[Design-Architecture]]"},{"lineNumber":97,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Architecture"},{"lineNumber":98,"author":{"gitID":"-"},"content":""},{"lineNumber":99,"author":{"gitID":"-"},"content":".Architecture Diagram"},{"lineNumber":100,"author":{"gitID":"-"},"content":"image::Architecture.png[width\u003d\"600\"]"},{"lineNumber":101,"author":{"gitID":"-"},"content":""},{"lineNumber":102,"author":{"gitID":"-"},"content":"The *_Architecture Diagram_* given above explains the high-level design of the App. Given below is a quick overview of each component."},{"lineNumber":103,"author":{"gitID":"-"},"content":""},{"lineNumber":104,"author":{"gitID":"-"},"content":"[TIP]"},{"lineNumber":105,"author":{"gitID":"-"},"content":"The `.pptx` files used to create diagrams in this document can be found in the link:{repoURL}/docs/diagrams/[diagrams] folder. To update a diagram, modify the diagram in the pptx file, select the objects of the diagram, and choose `Save as picture`."},{"lineNumber":106,"author":{"gitID":"-"},"content":""},{"lineNumber":107,"author":{"gitID":"-"},"content":"`Main` has only one class called link:{repoURL}/src/main/java/seedu/address/MainApp.java[`MainApp`]. It is responsible for,"},{"lineNumber":108,"author":{"gitID":"-"},"content":""},{"lineNumber":109,"author":{"gitID":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other."},{"lineNumber":110,"author":{"gitID":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup method where necessary."},{"lineNumber":111,"author":{"gitID":"-"},"content":""},{"lineNumber":112,"author":{"gitID":"-"},"content":"\u003c\u003cDesign-Commons,*`Commons`*\u003e\u003e represents a collection of classes used by multiple other components. Two of those classes play important roles at the architecture level."},{"lineNumber":113,"author":{"gitID":"-"},"content":""},{"lineNumber":114,"author":{"gitID":"-"},"content":"* `EventsCenter` : This class (written using https://github.com/google/guava/wiki/EventBusExplained[Google\u0027s Event Bus library]) is used by components to communicate with other components using events (i.e. a form of _Event Driven_ design)"},{"lineNumber":115,"author":{"gitID":"-"},"content":"* `LogsCenter` : Used by many classes to write log messages to the App\u0027s log file."},{"lineNumber":116,"author":{"gitID":"-"},"content":""},{"lineNumber":117,"author":{"gitID":"-"},"content":"The rest of the App consists of four components."},{"lineNumber":118,"author":{"gitID":"-"},"content":""},{"lineNumber":119,"author":{"gitID":"-"},"content":"* \u003c\u003cDesign-Ui,*`UI`*\u003e\u003e: The UI of the App."},{"lineNumber":120,"author":{"gitID":"-"},"content":"* \u003c\u003cDesign-Logic,*`Logic`*\u003e\u003e: The command executor."},{"lineNumber":121,"author":{"gitID":"-"},"content":"* \u003c\u003cDesign-Model,*`Model`*\u003e\u003e: Holds the data of the App in-memory."},{"lineNumber":122,"author":{"gitID":"-"},"content":"* \u003c\u003cDesign-Storage,*`Storage`*\u003e\u003e: Reads data from, and writes data to, the hard disk."},{"lineNumber":123,"author":{"gitID":"-"},"content":""},{"lineNumber":124,"author":{"gitID":"-"},"content":"Each of the four components"},{"lineNumber":125,"author":{"gitID":"-"},"content":""},{"lineNumber":126,"author":{"gitID":"-"},"content":"* Defines its _API_ in an `interface` with the same name as the Component."},{"lineNumber":127,"author":{"gitID":"-"},"content":"* Exposes its functionality using a `{Component Name}Manager` class."},{"lineNumber":128,"author":{"gitID":"-"},"content":""},{"lineNumber":129,"author":{"gitID":"-"},"content":"For example, the `Logic` component (see the class diagram given below) defines it\u0027s API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class."},{"lineNumber":130,"author":{"gitID":"-"},"content":""},{"lineNumber":131,"author":{"gitID":"-"},"content":".Class Diagram of the Logic Component"},{"lineNumber":132,"author":{"gitID":"-"},"content":"image::LogicClassDiagram.png[width\u003d\"800\"]"},{"lineNumber":133,"author":{"gitID":"-"},"content":""},{"lineNumber":134,"author":{"gitID":"-"},"content":"[discrete]"},{"lineNumber":135,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Events-Driven nature of the design"},{"lineNumber":136,"author":{"gitID":"-"},"content":""},{"lineNumber":137,"author":{"gitID":"-"},"content":"The _Sequence Diagram_ below shows how the components interact for the scenario where the user issues the command `delete 1`."},{"lineNumber":138,"author":{"gitID":"-"},"content":""},{"lineNumber":139,"author":{"gitID":"-"},"content":".Component interactions for `delete 1` command (part 1)"},{"lineNumber":140,"author":{"gitID":"-"},"content":"image::SDforDeletePerson.png[width\u003d\"800\"]"},{"lineNumber":141,"author":{"gitID":"-"},"content":""},{"lineNumber":142,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":143,"author":{"gitID":"-"},"content":"Note how the `Model` simply raises a `AddressBookChangedEvent` when the Address Book data are changed, instead of asking the `Storage` to save the updates to the hard disk."},{"lineNumber":144,"author":{"gitID":"-"},"content":""},{"lineNumber":145,"author":{"gitID":"-"},"content":"The diagram below shows how the `EventsCenter` reacts to that event, which eventually results in the updates being saved to the hard disk and the status bar of the UI being updated to reflect the \u0027Last Updated\u0027 time."},{"lineNumber":146,"author":{"gitID":"-"},"content":""},{"lineNumber":147,"author":{"gitID":"-"},"content":".Component interactions for `delete 1` command (part 2)"},{"lineNumber":148,"author":{"gitID":"-"},"content":"image::SDforDeletePersonEventHandling.png[width\u003d\"800\"]"},{"lineNumber":149,"author":{"gitID":"-"},"content":""},{"lineNumber":150,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":151,"author":{"gitID":"-"},"content":"Note how the event is propagated through the `EventsCenter` to the `Storage` and `UI` without `Model` having to be coupled to either of them. This is an example of how this Event Driven approach helps us reduce direct coupling between components."},{"lineNumber":152,"author":{"gitID":"-"},"content":""},{"lineNumber":153,"author":{"gitID":"-"},"content":"The sections below give more details of each component."},{"lineNumber":154,"author":{"gitID":"-"},"content":""},{"lineNumber":155,"author":{"gitID":"-"},"content":"[[Design-Ui]]"},{"lineNumber":156,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d UI component"},{"lineNumber":157,"author":{"gitID":"-"},"content":""},{"lineNumber":158,"author":{"gitID":"-"},"content":".Structure of the UI Component"},{"lineNumber":159,"author":{"gitID":"-"},"content":"image::UiClassDiagram.png[width\u003d\"800\"]"},{"lineNumber":160,"author":{"gitID":"-"},"content":""},{"lineNumber":161,"author":{"gitID":"-"},"content":"*API* : link:{repoURL}/src/main/java/seedu/address/ui/Ui.java[`Ui.java`]"},{"lineNumber":162,"author":{"gitID":"-"},"content":""},{"lineNumber":163,"author":{"gitID":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter`, `BrowserPanel` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class."},{"lineNumber":164,"author":{"gitID":"-"},"content":""},{"lineNumber":165,"author":{"gitID":"-"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the link:{repoURL}/src/main/java/seedu/address/ui/MainWindow.java[`MainWindow`] is specified in link:{repoURL}/src/main/resources/view/MainWindow.fxml[`MainWindow.fxml`]"},{"lineNumber":166,"author":{"gitID":"-"},"content":""},{"lineNumber":167,"author":{"gitID":"-"},"content":"The `UI` component,"},{"lineNumber":168,"author":{"gitID":"-"},"content":""},{"lineNumber":169,"author":{"gitID":"-"},"content":"* Executes user commands using the `Logic` component."},{"lineNumber":170,"author":{"gitID":"-"},"content":"* Binds itself to some data in the `Model` so that the UI can auto-update when data in the `Model` change."},{"lineNumber":171,"author":{"gitID":"-"},"content":"* Responds to events raised from various parts of the App and updates the UI accordingly."},{"lineNumber":172,"author":{"gitID":"-"},"content":""},{"lineNumber":173,"author":{"gitID":"-"},"content":"[[Design-Logic]]"},{"lineNumber":174,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Logic component"},{"lineNumber":175,"author":{"gitID":"-"},"content":""},{"lineNumber":176,"author":{"gitID":"-"},"content":"[[fig-LogicClassDiagram]]"},{"lineNumber":177,"author":{"gitID":"-"},"content":".Structure of the Logic Component"},{"lineNumber":178,"author":{"gitID":"-"},"content":"image::LogicClassDiagram.png[width\u003d\"800\"]"},{"lineNumber":179,"author":{"gitID":"-"},"content":""},{"lineNumber":180,"author":{"gitID":"-"},"content":".Structure of Commands in the Logic Component. This diagram shows finer details concerning `XYZCommand` and `Command` in \u003c\u003cfig-LogicClassDiagram\u003e\u003e"},{"lineNumber":181,"author":{"gitID":"-"},"content":"image::LogicCommandClassDiagram.png[width\u003d\"800\"]"},{"lineNumber":182,"author":{"gitID":"-"},"content":""},{"lineNumber":183,"author":{"gitID":"-"},"content":"*API* :"},{"lineNumber":184,"author":{"gitID":"-"},"content":"link:{repoURL}/src/main/java/seedu/address/logic/Logic.java[`Logic.java`]"},{"lineNumber":185,"author":{"gitID":"-"},"content":""},{"lineNumber":186,"author":{"gitID":"-"},"content":".  `Logic` uses the `AddressBookParser` class to parse the user command."},{"lineNumber":187,"author":{"gitID":"-"},"content":".  This results in a `Command` object which is executed by the `LogicManager`."},{"lineNumber":188,"author":{"gitID":"-"},"content":".  The command execution can affect the `Model` (e.g. adding a person) and/or raise events."},{"lineNumber":189,"author":{"gitID":"-"},"content":".  The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`."},{"lineNumber":190,"author":{"gitID":"-"},"content":""},{"lineNumber":191,"author":{"gitID":"-"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call."},{"lineNumber":192,"author":{"gitID":"-"},"content":""},{"lineNumber":193,"author":{"gitID":"-"},"content":".Interactions Inside the Logic Component for the `delete 1` Command"},{"lineNumber":194,"author":{"gitID":"-"},"content":"image::DeletePersonSdForLogic.png[width\u003d\"800\"]"},{"lineNumber":195,"author":{"gitID":"-"},"content":""},{"lineNumber":196,"author":{"gitID":"-"},"content":"[[Design-Model]]"},{"lineNumber":197,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Model component"},{"lineNumber":198,"author":{"gitID":"-"},"content":""},{"lineNumber":199,"author":{"gitID":"-"},"content":".Structure of the Model Component"},{"lineNumber":200,"author":{"gitID":"-"},"content":"image::ModelClassDiagram.png[width\u003d\"800\"]"},{"lineNumber":201,"author":{"gitID":"-"},"content":""},{"lineNumber":202,"author":{"gitID":"-"},"content":"*API* : link:{repoURL}/src/main/java/seedu/address/model/Model.java[`Model.java`]"},{"lineNumber":203,"author":{"gitID":"-"},"content":""},{"lineNumber":204,"author":{"gitID":"-"},"content":"The `Model`,"},{"lineNumber":205,"author":{"gitID":"-"},"content":""},{"lineNumber":206,"author":{"gitID":"-"},"content":"* stores a `UserPref` object that represents the user\u0027s preferences."},{"lineNumber":207,"author":{"gitID":"-"},"content":"* stores the Address Book data."},{"lineNumber":208,"author":{"gitID":"-"},"content":"* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change."},{"lineNumber":209,"author":{"gitID":"-"},"content":"* does not depend on any of the other three components."},{"lineNumber":210,"author":{"gitID":"-"},"content":""},{"lineNumber":211,"author":{"gitID":"-"},"content":"[[Design-Storage]]"},{"lineNumber":212,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Storage component"},{"lineNumber":213,"author":{"gitID":"-"},"content":""},{"lineNumber":214,"author":{"gitID":"-"},"content":".Structure of the Storage Component"},{"lineNumber":215,"author":{"gitID":"-"},"content":"image::StorageClassDiagram.png[width\u003d\"800\"]"},{"lineNumber":216,"author":{"gitID":"-"},"content":""},{"lineNumber":217,"author":{"gitID":"-"},"content":"*API* : link:{repoURL}/src/main/java/seedu/address/storage/Storage.java[`Storage.java`]"},{"lineNumber":218,"author":{"gitID":"-"},"content":""},{"lineNumber":219,"author":{"gitID":"-"},"content":"The `Storage` component,"},{"lineNumber":220,"author":{"gitID":"-"},"content":""},{"lineNumber":221,"author":{"gitID":"-"},"content":"* can save `UserPref` objects in json format and read it back."},{"lineNumber":222,"author":{"gitID":"-"},"content":"* can save the Address Book data in xml format and read it back."},{"lineNumber":223,"author":{"gitID":"-"},"content":""},{"lineNumber":224,"author":{"gitID":"-"},"content":"[[Design-Commons]]"},{"lineNumber":225,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Common classes"},{"lineNumber":226,"author":{"gitID":"-"},"content":""},{"lineNumber":227,"author":{"gitID":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package."},{"lineNumber":228,"author":{"gitID":"-"},"content":""},{"lineNumber":229,"author":{"gitID":"-"},"content":"\u003d\u003d Implementation"},{"lineNumber":230,"author":{"gitID":"-"},"content":""},{"lineNumber":231,"author":{"gitID":"-"},"content":"This section describes some noteworthy details on how certain features are implemented."},{"lineNumber":232,"author":{"gitID":"-"},"content":""},{"lineNumber":233,"author":{"gitID":"kexiaowen"},"content":"// tag::rate[]"},{"lineNumber":234,"author":{"gitID":"kexiaowen"},"content":"\u003d\u003d\u003d Rate Command"},{"lineNumber":235,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Current Implementation"},{"lineNumber":236,"author":{"gitID":"kexiaowen"},"content":"The `rate` command allows Talent Acquisition Specialists to evaluate candidates\u0027 performance in interviews against four specific criteria, namely technical skills, communication skills, problem solving skills and experience. The format of this command is `rate INDEX t/TECHNICAL SKILLS SCORE c/COMMUNICATINO SKILLS SCORE p/PROBLEM SOLVING SKILLS SCORE e/EXPERIENCE SCORE`."},{"lineNumber":237,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":238,"author":{"gitID":"kexiaowen"},"content":"In our current implementation, the `rate` command inherits from the `UndoableCommand` class. Two components, `Logic` and `Model`, are involved in the execution of this command. The `Logic` component is responsible for parsing user inputs while the `Model` component deals with updating of filtered person list."},{"lineNumber":239,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":240,"author":{"gitID":"kexiaowen"},"content":"Below is a sequence diagram that illustrates how these two components interact when the `rate` command is executed:"},{"lineNumber":241,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":242,"author":{"gitID":"kexiaowen"},"content":"image::RateCommandSequenceDiagram.png[width\u003d\"800\"]"},{"lineNumber":243,"author":{"gitID":"kexiaowen"},"content":"Figure 3.1.1.1 Sequence diagram to illustrate component interactions for the `rate` command"},{"lineNumber":244,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":245,"author":{"gitID":"kexiaowen"},"content":"As shown above, execution of the `rate` command comprises the following steps:"},{"lineNumber":246,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":247,"author":{"gitID":"kexiaowen"},"content":". `LogicManager` invokes `parseCommand` method of `AddressbookParser`, taking user inputs as arguments."},{"lineNumber":248,"author":{"gitID":"kexiaowen"},"content":". During the `parseCommand` method call, an instance of `RateCommandParser` will be created when the keyword \"rate\" is matched. `RateCommandParser` then extracts the remaining user inputs and a `RateCommand` instance `r` will be returned provided that the format of user\u0027s input is correct."},{"lineNumber":249,"author":{"gitID":"kexiaowen"},"content":". `LogicManager` then calls `executeUndoableCommand` of the `RateCommand`, `r`, instantiated in step 2. Another component, `Model`, will be involved as the `RateCommand` requests to update the rating scores of the person."},{"lineNumber":250,"author":{"gitID":"kexiaowen"},"content":". The `Model` component gets the filtered persons list and replaces `Person` p1 with `Person` p2 which is identical to p2 except rating scores. A `CommandResult` will be generated and returned to `LogicManager`."},{"lineNumber":251,"author":{"gitID":"-"},"content":""},{"lineNumber":252,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Design Considerations"},{"lineNumber":253,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":254,"author":{"gitID":"kexiaowen"},"content":"\u003d\u003d\u003d\u003d\u003d Aspect: Implementation of adding and editing rating scores"},{"lineNumber":255,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":256,"author":{"gitID":"kexiaowen"},"content":"* **Alternative 1 (current choice):** Implement a new command class `RateCommand` that supports adding rating scores and `RatingEditCommand` to handle editing of rating scores"},{"lineNumber":257,"author":{"gitID":"kexiaowen"},"content":"** Pros: Results in more customisable commands that can be easily modified to support more prefixes and additional rating criteria"},{"lineNumber":258,"author":{"gitID":"kexiaowen"},"content":"** Cons: Complicates the system as users need to familiarise themselves with more commands"},{"lineNumber":259,"author":{"gitID":"kexiaowen"},"content":"* **Alternative 2:** Extend the original `EditCommand` to allow it to add and modify rating scores of a student"},{"lineNumber":260,"author":{"gitID":"kexiaowen"},"content":"** Pros: Minimises the number of commands users have to remember to execute tasks, making the application more user-friendly"},{"lineNumber":261,"author":{"gitID":"kexiaowen"},"content":"** Cons: Requires substantial changes to `EditCommandParser` and hence harder to implement"},{"lineNumber":262,"author":{"gitID":"kexiaowen"},"content":"// end::rate[]"},{"lineNumber":263,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":264,"author":{"gitID":"kexiaowen"},"content":"// tag::sort[]"},{"lineNumber":265,"author":{"gitID":"kexiaowen"},"content":"\u003d\u003d\u003d Sort Command"},{"lineNumber":266,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Current Implementation"},{"lineNumber":267,"author":{"gitID":"kexiaowen"},"content":"The `sort` command supports the listing of students in HR+ based on GPA, name or overall rating in ascending or descending order as specified by the user. The format of this `sort` command is `sort FIELD o/SORT ORDER`."},{"lineNumber":268,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":269,"author":{"gitID":"kexiaowen"},"content":"As sorting is not undoable, this command inherits from the `Command` class instead of the `UndoableCommand` class. The sorting mechanism is mainly facilitated by `Logic` and `ModelManager`. `SortCommandParser` residing in `LogicManager` processes user inputs and creates a corresponding `SortCommand`. `ModelManager` will then invoke appropriate sorting methods in `UniquePersonList`."},{"lineNumber":270,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":271,"author":{"gitID":"kexiaowen"},"content":"The following sequence diagrams depict the interactions between `LogicManager` and `ModelManager` when a user issues a request for sorting:"},{"lineNumber":272,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":273,"author":{"gitID":"kexiaowen"},"content":"image::SortCommandSequenceDiagram1.png[width\u003d\"800\"]"},{"lineNumber":274,"author":{"gitID":"kexiaowen"},"content":"image::SortCommandSequenceDiagram2.png[width\u003d\"800\"]"},{"lineNumber":275,"author":{"gitID":"kexiaowen"},"content":"Figure 3.2.1.1 Sequence diagrams for execution of `sort` command"},{"lineNumber":276,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":277,"author":{"gitID":"kexiaowen"},"content":"As seen from the sequence diagram above, `LogicManager` and `ModelManager` interact in the following way:"},{"lineNumber":278,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":279,"author":{"gitID":"kexiaowen"},"content":". When a user keys in `sort gpa o/desc`, `LogicManager` calls method `parser` in `AddressBookParser`."},{"lineNumber":280,"author":{"gitID":"kexiaowen"},"content":". `SortCommandParser` is instantiated. If the user input is of the correct format, a `SortCommand` will be successfully created and returned back to `LogicManager`. Suppose the inputs are not valid or the format of the command is invalid, an exception will be thrown and users will see an error message."},{"lineNumber":281,"author":{"gitID":"kexiaowen"},"content":". `LogicManager` proceeds to invoke `execute` method of `SortCommand`."},{"lineNumber":282,"author":{"gitID":"kexiaowen"},"content":". `ModelManager` is in charge of sorting the list of persons through calling relevant methods provided in `AddressBook` and `UniquePersonList` according to the field to be sorted by."},{"lineNumber":283,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":284,"author":{"gitID":"kexiaowen"},"content":"Currently, HR+ only allows users to sort the list of students by selected fields in ascending or descending order. This is achieved by encapsulating acceptable sorting orders and fields into `SortOrder` and `SortField` of the type `enum` respectively."},{"lineNumber":285,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":286,"author":{"gitID":"kexiaowen"},"content":"In order to make Person objects comparable, additional methods need to be implemented in the `Person` class to compare different `Person` objects based on GPA, name and rating scores. The following code snippet demonstrates how these methods are implemented:"},{"lineNumber":287,"author":{"gitID":"kexiaowen"},"content":"[source,java]"},{"lineNumber":288,"author":{"gitID":"kexiaowen"},"content":"----"},{"lineNumber":289,"author":{"gitID":"kexiaowen"},"content":"/**"},{"lineNumber":290,"author":{"gitID":"kexiaowen"},"content":" * Compares the overall ratings of two {@code Person} objects."},{"lineNumber":291,"author":{"gitID":"kexiaowen"},"content":" * @param p1"},{"lineNumber":292,"author":{"gitID":"kexiaowen"},"content":" * @param p2"},{"lineNumber":293,"author":{"gitID":"kexiaowen"},"content":" * @return 1 if p1 has a higher overall rating, 0 if p1 and p2 have equal overall rating and -1 otherwise."},{"lineNumber":294,"author":{"gitID":"kexiaowen"},"content":" */"},{"lineNumber":295,"author":{"gitID":"kexiaowen"},"content":"public static int compareByOverallRating(Person p1, Person p2) {"},{"lineNumber":296,"author":{"gitID":"kexiaowen"},"content":"    return Double.compare(p1.getRating().getOverallScore(),"},{"lineNumber":297,"author":{"gitID":"kexiaowen"},"content":"            p2.getRating().getOverallScore());"},{"lineNumber":298,"author":{"gitID":"kexiaowen"},"content":"}"},{"lineNumber":299,"author":{"gitID":"kexiaowen"},"content":"----"},{"lineNumber":300,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":301,"author":{"gitID":"kexiaowen"},"content":"To sort the list based on a particular field, we used the `sort` method from Java\u0027s `Collections` library. An example usage is shown below:"},{"lineNumber":302,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":303,"author":{"gitID":"kexiaowen"},"content":"[source,java]"},{"lineNumber":304,"author":{"gitID":"kexiaowen"},"content":"----"},{"lineNumber":305,"author":{"gitID":"kexiaowen"},"content":"/**"},{"lineNumber":306,"author":{"gitID":"kexiaowen"},"content":" * Sorts the list based on GPA in ascending order"},{"lineNumber":307,"author":{"gitID":"kexiaowen"},"content":" */"},{"lineNumber":308,"author":{"gitID":"kexiaowen"},"content":"public void sortPersonsGradePointAverageAsc() {"},{"lineNumber":309,"author":{"gitID":"kexiaowen"},"content":"    Collections.sort(internalList, Person::compareByGradePointAverage);"},{"lineNumber":310,"author":{"gitID":"kexiaowen"},"content":"}"},{"lineNumber":311,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":312,"author":{"gitID":"kexiaowen"},"content":"/**"},{"lineNumber":313,"author":{"gitID":"kexiaowen"},"content":" * Sorts the list based on GPA in descending order"},{"lineNumber":314,"author":{"gitID":"kexiaowen"},"content":" */"},{"lineNumber":315,"author":{"gitID":"kexiaowen"},"content":"public void sortPersonsGradePointAverageDesc() {"},{"lineNumber":316,"author":{"gitID":"kexiaowen"},"content":"    Collections.sort(internalList, Person::compareByGradePointAverage);"},{"lineNumber":317,"author":{"gitID":"kexiaowen"},"content":"    Collections.reverse(internalList);"},{"lineNumber":318,"author":{"gitID":"kexiaowen"},"content":"}"},{"lineNumber":319,"author":{"gitID":"kexiaowen"},"content":"----"},{"lineNumber":320,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":321,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Design Considerations"},{"lineNumber":322,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":323,"author":{"gitID":"kexiaowen"},"content":"\u003d\u003d\u003d\u003d Aspect: Implementation of `SortCommand`"},{"lineNumber":324,"author":{"gitID":"kexiaowen"},"content":"* **Alternative 1 (current choice):** Implement a more generic `SortCommand` that sorts the list of students based on parameters supplied by the user"},{"lineNumber":325,"author":{"gitID":"kexiaowen"},"content":"** Pros: It is easier to modify `SortCommand` to support more fields to be sorted by."},{"lineNumber":326,"author":{"gitID":"kexiaowen"},"content":"** Cons: It restricts the format of sort command to be the same and is thus less flexible."},{"lineNumber":327,"author":{"gitID":"kexiaowen"},"content":"* **Alternative 2:** Use separate commands for each possible field, such as `gpa-sort`, `rating-sort` and `name-sort` commands"},{"lineNumber":328,"author":{"gitID":"kexiaowen"},"content":"** Pros: It allows developers to specify different command formats. For example, users might not need to specify the sorting order explicitly. `rating-sort` and `gpa-sort` can have default sorting order to be descending while results from `name-sort` can be in ascending order."},{"lineNumber":329,"author":{"gitID":"kexiaowen"},"content":"** Cons: It increases the number of commands in HR+ and might be less user-friendly as users need to familiarise themselves with more commands."},{"lineNumber":330,"author":{"gitID":"kexiaowen"},"content":"// end::sort[]"},{"lineNumber":331,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":332,"author":{"gitID":"-"},"content":"// tag::undoredo[]"},{"lineNumber":333,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Undo/Redo feature"},{"lineNumber":334,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Current Implementation"},{"lineNumber":335,"author":{"gitID":"-"},"content":""},{"lineNumber":336,"author":{"gitID":"-"},"content":"The undo/redo mechanism is facilitated by an `UndoRedoStack`, which resides inside `LogicManager`. It supports undoing and redoing of commands that modifies the state of the address book (e.g. `add`, `edit`). Such commands will inherit from `UndoableCommand`."},{"lineNumber":337,"author":{"gitID":"-"},"content":""},{"lineNumber":338,"author":{"gitID":"-"},"content":"`UndoRedoStack` only deals with `UndoableCommands`. Commands that cannot be undone will inherit from `Command` instead. The following diagram shows the inheritance diagram for commands:"},{"lineNumber":339,"author":{"gitID":"-"},"content":""},{"lineNumber":340,"author":{"gitID":"-"},"content":"image::LogicCommandClassDiagram.png[width\u003d\"800\"]"},{"lineNumber":341,"author":{"gitID":"-"},"content":""},{"lineNumber":342,"author":{"gitID":"-"},"content":"As you can see from the diagram, `UndoableCommand` adds an extra layer between the abstract `Command` class and concrete commands that can be undone, such as the `DeleteCommand`. Note that extra tasks need to be done when executing a command in an _undoable_ way, such as saving the state of the address book before execution. `UndoableCommand` contains the high-level algorithm for those extra tasks while the child classes implements the details of how to execute the specific command. Note that this technique of putting the high-level algorithm in the parent class and lower-level steps of the algorithm in child classes is also known as the https://www.tutorialspoint.com/design_pattern/template_pattern.htm[template pattern]."},{"lineNumber":343,"author":{"gitID":"-"},"content":""},{"lineNumber":344,"author":{"gitID":"-"},"content":"Commands that are not undoable are implemented this way:"},{"lineNumber":345,"author":{"gitID":"-"},"content":"[source,java]"},{"lineNumber":346,"author":{"gitID":"-"},"content":"----"},{"lineNumber":347,"author":{"gitID":"-"},"content":"public class ListCommand extends Command {"},{"lineNumber":348,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":349,"author":{"gitID":"-"},"content":"    public CommandResult execute() {"},{"lineNumber":350,"author":{"gitID":"-"},"content":"        // ... list logic ..."},{"lineNumber":351,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":352,"author":{"gitID":"-"},"content":"}"},{"lineNumber":353,"author":{"gitID":"-"},"content":"----"},{"lineNumber":354,"author":{"gitID":"-"},"content":""},{"lineNumber":355,"author":{"gitID":"-"},"content":"With the extra layer, the commands that are undoable are implemented this way:"},{"lineNumber":356,"author":{"gitID":"-"},"content":"[source,java]"},{"lineNumber":357,"author":{"gitID":"-"},"content":"----"},{"lineNumber":358,"author":{"gitID":"-"},"content":"public abstract class UndoableCommand extends Command {"},{"lineNumber":359,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":360,"author":{"gitID":"-"},"content":"    public CommandResult execute() {"},{"lineNumber":361,"author":{"gitID":"-"},"content":"        // ... undo logic ..."},{"lineNumber":362,"author":{"gitID":"-"},"content":""},{"lineNumber":363,"author":{"gitID":"-"},"content":"        executeUndoableCommand();"},{"lineNumber":364,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":365,"author":{"gitID":"-"},"content":"}"},{"lineNumber":366,"author":{"gitID":"-"},"content":""},{"lineNumber":367,"author":{"gitID":"-"},"content":"public class DeleteCommand extends UndoableCommand {"},{"lineNumber":368,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":369,"author":{"gitID":"-"},"content":"    public CommandResult executeUndoableCommand() {"},{"lineNumber":370,"author":{"gitID":"-"},"content":"        // ... delete logic ..."},{"lineNumber":371,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":372,"author":{"gitID":"-"},"content":"}"},{"lineNumber":373,"author":{"gitID":"-"},"content":"----"},{"lineNumber":374,"author":{"gitID":"-"},"content":""},{"lineNumber":375,"author":{"gitID":"-"},"content":"Suppose that the user has just launched the application. The `UndoRedoStack` will be empty at the beginning."},{"lineNumber":376,"author":{"gitID":"-"},"content":""},{"lineNumber":377,"author":{"gitID":"-"},"content":"The user executes a new `UndoableCommand`, `delete 5`, to delete the 5th person in the address book. The current state of the address book is saved before the `delete 5` command executes. The `delete 5` command will then be pushed onto the `undoStack` (the current state is saved together with the command)."},{"lineNumber":378,"author":{"gitID":"-"},"content":""},{"lineNumber":379,"author":{"gitID":"-"},"content":"image::UndoRedoStartingStackDiagram.png[width\u003d\"800\"]"},{"lineNumber":380,"author":{"gitID":"-"},"content":""},{"lineNumber":381,"author":{"gitID":"-"},"content":"As the user continues to use the program, more commands are added into the `undoStack`. For example, the user may execute `add n/David ...` to add a new person."},{"lineNumber":382,"author":{"gitID":"-"},"content":""},{"lineNumber":383,"author":{"gitID":"-"},"content":"image::UndoRedoNewCommand1StackDiagram.png[width\u003d\"800\"]"},{"lineNumber":384,"author":{"gitID":"-"},"content":""},{"lineNumber":385,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":386,"author":{"gitID":"-"},"content":"If a command fails its execution, it will not be pushed to the `UndoRedoStack` at all."},{"lineNumber":387,"author":{"gitID":"-"},"content":""},{"lineNumber":388,"author":{"gitID":"-"},"content":"The user now decides that adding the person was a mistake, and decides to undo that action using `undo`."},{"lineNumber":389,"author":{"gitID":"-"},"content":""},{"lineNumber":390,"author":{"gitID":"-"},"content":"We will pop the most recent command out of the `undoStack` and push it back to the `redoStack`. We will restore the address book to the state before the `add` command executed."},{"lineNumber":391,"author":{"gitID":"-"},"content":""},{"lineNumber":392,"author":{"gitID":"-"},"content":"image::UndoRedoExecuteUndoStackDiagram.png[width\u003d\"800\"]"},{"lineNumber":393,"author":{"gitID":"-"},"content":""},{"lineNumber":394,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":395,"author":{"gitID":"-"},"content":"If the `undoStack` is empty, then there are no other commands left to be undone, and an `Exception` will be thrown when popping the `undoStack`."},{"lineNumber":396,"author":{"gitID":"-"},"content":""},{"lineNumber":397,"author":{"gitID":"-"},"content":"The following sequence diagram shows how the undo operation works:"},{"lineNumber":398,"author":{"gitID":"-"},"content":""},{"lineNumber":399,"author":{"gitID":"-"},"content":"image::UndoRedoSequenceDiagram.png[width\u003d\"800\"]"},{"lineNumber":400,"author":{"gitID":"-"},"content":""},{"lineNumber":401,"author":{"gitID":"-"},"content":"The redo does the exact opposite (pops from `redoStack`, push to `undoStack`, and restores the address book to the state after the command is executed)."},{"lineNumber":402,"author":{"gitID":"-"},"content":""},{"lineNumber":403,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":404,"author":{"gitID":"-"},"content":"If the `redoStack` is empty, then there are no other commands left to be redone, and an `Exception` will be thrown when popping the `redoStack`."},{"lineNumber":405,"author":{"gitID":"-"},"content":""},{"lineNumber":406,"author":{"gitID":"-"},"content":"The user now decides to execute a new command, `clear`. As before, `clear` will be pushed into the `undoStack`. This time the `redoStack` is no longer empty. It will be purged as it no longer make sense to redo the `add n/David` command (this is the behavior that most modern desktop applications follow)."},{"lineNumber":407,"author":{"gitID":"-"},"content":""},{"lineNumber":408,"author":{"gitID":"-"},"content":"image::UndoRedoNewCommand2StackDiagram.png[width\u003d\"800\"]"},{"lineNumber":409,"author":{"gitID":"-"},"content":""},{"lineNumber":410,"author":{"gitID":"-"},"content":"Commands that are not undoable are not added into the `undoStack`. For example, `list`, which inherits from `Command` rather than `UndoableCommand`, will not be added after execution:"},{"lineNumber":411,"author":{"gitID":"-"},"content":""},{"lineNumber":412,"author":{"gitID":"-"},"content":"image::UndoRedoNewCommand3StackDiagram.png[width\u003d\"800\"]"},{"lineNumber":413,"author":{"gitID":"-"},"content":""},{"lineNumber":414,"author":{"gitID":"-"},"content":"The following activity diagram summarize what happens inside the `UndoRedoStack` when a user executes a new command:"},{"lineNumber":415,"author":{"gitID":"-"},"content":""},{"lineNumber":416,"author":{"gitID":"-"},"content":"image::UndoRedoActivityDiagram.png[width\u003d\"650\"]"},{"lineNumber":417,"author":{"gitID":"-"},"content":""},{"lineNumber":418,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Design Considerations"},{"lineNumber":419,"author":{"gitID":"-"},"content":""},{"lineNumber":420,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Aspect: Implementation of `UndoableCommand`"},{"lineNumber":421,"author":{"gitID":"-"},"content":""},{"lineNumber":422,"author":{"gitID":"-"},"content":"* **Alternative 1 (current choice):** Add a new abstract method `executeUndoableCommand()`"},{"lineNumber":423,"author":{"gitID":"-"},"content":"** Pros: We will not lose any undone/redone functionality as it is now part of the default behaviour. Classes that deal with `Command` do not have to know that `executeUndoableCommand()` exist."},{"lineNumber":424,"author":{"gitID":"-"},"content":"** Cons: Hard for new developers to understand the template pattern."},{"lineNumber":425,"author":{"gitID":"-"},"content":"* **Alternative 2:** Just override `execute()`"},{"lineNumber":426,"author":{"gitID":"-"},"content":"** Pros: Does not involve the template pattern, easier for new developers to understand."},{"lineNumber":427,"author":{"gitID":"-"},"content":"** Cons: Classes that inherit from `UndoableCommand` must remember to call `super.execute()`, or lose the ability to undo/redo."},{"lineNumber":428,"author":{"gitID":"-"},"content":""},{"lineNumber":429,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Aspect: How undo \u0026 redo executes"},{"lineNumber":430,"author":{"gitID":"-"},"content":""},{"lineNumber":431,"author":{"gitID":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book."},{"lineNumber":432,"author":{"gitID":"-"},"content":"** Pros: Easy to implement."},{"lineNumber":433,"author":{"gitID":"-"},"content":"** Cons: May have performance issues in terms of memory usage."},{"lineNumber":434,"author":{"gitID":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by itself."},{"lineNumber":435,"author":{"gitID":"-"},"content":"** Pros: Will use less memory (e.g. for `delete`, just save the person being deleted)."},{"lineNumber":436,"author":{"gitID":"-"},"content":"** Cons: We must ensure that the implementation of each individual command are correct."},{"lineNumber":437,"author":{"gitID":"-"},"content":""},{"lineNumber":438,"author":{"gitID":"-"},"content":""},{"lineNumber":439,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Aspect: Type of commands that can be undone/redone"},{"lineNumber":440,"author":{"gitID":"-"},"content":""},{"lineNumber":441,"author":{"gitID":"-"},"content":"* **Alternative 1 (current choice):** Only include commands that modifies the address book (`add`, `clear`, `edit`)."},{"lineNumber":442,"author":{"gitID":"-"},"content":"** Pros: We only revert changes that are hard to change back (the view can easily be re-modified as no data are * lost)."},{"lineNumber":443,"author":{"gitID":"-"},"content":"** Cons: User might think that undo also applies when the list is modified (undoing filtering for example), * only to realize that it does not do that, after executing `undo`."},{"lineNumber":444,"author":{"gitID":"-"},"content":"* **Alternative 2:** Include all commands."},{"lineNumber":445,"author":{"gitID":"-"},"content":"** Pros: Might be more intuitive for the user."},{"lineNumber":446,"author":{"gitID":"-"},"content":"** Cons: User have no way of skipping such commands if he or she just want to reset the state of the address * book and not the view."},{"lineNumber":447,"author":{"gitID":"-"},"content":"**Additional Info:** See our discussion  https://github.com/se-edu/addressbook-level4/issues/390#issuecomment-298936672[here]."},{"lineNumber":448,"author":{"gitID":"-"},"content":""},{"lineNumber":449,"author":{"gitID":"-"},"content":""},{"lineNumber":450,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Aspect: Data structure to support the undo/redo commands"},{"lineNumber":451,"author":{"gitID":"-"},"content":""},{"lineNumber":452,"author":{"gitID":"-"},"content":"* **Alternative 1 (current choice):** Use separate stack for undo and redo"},{"lineNumber":453,"author":{"gitID":"-"},"content":"** Pros: Easy to understand for new Computer Science student undergraduates to understand, who are likely to be * the new incoming developers of our project."},{"lineNumber":454,"author":{"gitID":"-"},"content":"** Cons: Logic is duplicated twice. For example, when a new command is executed, we must remember to update * both `HistoryManager` and `UndoRedoStack`."},{"lineNumber":455,"author":{"gitID":"-"},"content":"* **Alternative 2:** Use `HistoryManager` for undo/redo"},{"lineNumber":456,"author":{"gitID":"-"},"content":"** Pros: We do not need to maintain a separate stack, and just reuse what is already in the codebase."},{"lineNumber":457,"author":{"gitID":"-"},"content":"** Cons: Requires dealing with commands that have already been undone: We must remember to skip these commands. Violates Single Responsibility Principle and Separation of Concerns as `HistoryManager` now needs to do two * different things."},{"lineNumber":458,"author":{"gitID":"-"},"content":"// end::undoredo[]"},{"lineNumber":459,"author":{"gitID":"-"},"content":""},{"lineNumber":460,"author":{"gitID":"tanhengyeow"},"content":"//tag::findcommand[]"},{"lineNumber":461,"author":{"gitID":"tanhengyeow"},"content":"\u003d\u003d\u003d Find Command"},{"lineNumber":462,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":463,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Current Implementation"},{"lineNumber":464,"author":{"gitID":"-"},"content":""},{"lineNumber":465,"author":{"gitID":"tanhengyeow"},"content":"The `find` command is facilitated by an `AllPredicate` class, which composes of predicates that determine the fields that are supported. Each field has its own set of predicates that determine the types of search patterns the user can perform. Search results of the keywords are stored in `FindResults`, which is a singleton pattern class."},{"lineNumber":466,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":467,"author":{"gitID":"tanhengyeow"},"content":"The following diagram, Figure 3.4.1.1 shows the composition of the `AllPredicate` class and the relationship between `FindResults`:"},{"lineNumber":468,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":469,"author":{"gitID":"tanhengyeow"},"content":"image::AllPredicateComposition.png[width\u003d\"800\"]"},{"lineNumber":470,"author":{"gitID":"tanhengyeow"},"content":"Figure 3.4.1.1 Composition of `AllPredicate` class"},{"lineNumber":471,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":472,"author":{"gitID":"tanhengyeow"},"content":"The following code snippet shows an example of one type of predicate:"},{"lineNumber":473,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":474,"author":{"gitID":"tanhengyeow"},"content":"[source,java]"},{"lineNumber":475,"author":{"gitID":"tanhengyeow"},"content":"----"},{"lineNumber":476,"author":{"gitID":"tanhengyeow"},"content":"public boolean test(Person person) {"},{"lineNumber":477,"author":{"gitID":"tanhengyeow"},"content":"    return keywords.stream()"},{"lineNumber":478,"author":{"gitID":"tanhengyeow"},"content":"            .anyMatch(keyword -\u003e FindResults.getInstance()"},{"lineNumber":479,"author":{"gitID":"tanhengyeow"},"content":"                    .containsWordIgnoreCase(person.getName().fullName, keyword,"},{"lineNumber":480,"author":{"gitID":"tanhengyeow"},"content":"                    commandPrefix)"},{"lineNumber":481,"author":{"gitID":"tanhengyeow"},"content":"                || keywords.stream()"},{"lineNumber":482,"author":{"gitID":"tanhengyeow"},"content":"                    .anyMatch(fuzzyKeyword -\u003e"},{"lineNumber":483,"author":{"gitID":"tanhengyeow"},"content":"                    FindResults.getInstance().containsFuzzyMatchIgnoreCase("},{"lineNumber":484,"author":{"gitID":"tanhengyeow"},"content":"                            person.getName().fullName, fuzzyKeyword, commandPrefix,"},{"lineNumber":485,"author":{"gitID":"tanhengyeow"},"content":"                            FindCommand.LEVENSHTEIN_DISTANCE_THRESHOLD)));"},{"lineNumber":486,"author":{"gitID":"tanhengyeow"},"content":"}"},{"lineNumber":487,"author":{"gitID":"tanhengyeow"},"content":"----"},{"lineNumber":488,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":489,"author":{"gitID":"tanhengyeow"},"content":"The following sequence diagrams, Figure 3.4.1.2 and Figure 3.4.1.3 shows how the `find` command works:"},{"lineNumber":490,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":491,"author":{"gitID":"tanhengyeow"},"content":"image::FindCommandSequenceDiagram1.png[width\u003d\"800\"]"},{"lineNumber":492,"author":{"gitID":"tanhengyeow"},"content":"Figure 3.4.1.2 Sequence diagram of `find` command (1st part)"},{"lineNumber":493,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":494,"author":{"gitID":"tanhengyeow"},"content":"image::FindCommandSequenceDiagram2.png[width\u003d\"800\"]"},{"lineNumber":495,"author":{"gitID":"tanhengyeow"},"content":"Figure 3.4.1.3 Sequence diagram of `find` command (2nd part)"},{"lineNumber":496,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":497,"author":{"gitID":"tanhengyeow"},"content":"The execution of the find command comprises the following steps:"},{"lineNumber":498,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":499,"author":{"gitID":"tanhengyeow"},"content":"1. `LogicManager` invokes `parseCommand` method of `AddressbookParser`, taking user inputs as arguments."},{"lineNumber":500,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":501,"author":{"gitID":"tanhengyeow"},"content":"2. `AddressbookParser` calls the `parse` method of `FindCommandParser` to parse the arguments and return a `FindCommand` object."},{"lineNumber":502,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":503,"author":{"gitID":"tanhengyeow"},"content":"3. `FindCommandParser` calls the `parseFindArgs` method of `FindUtil` , which calls either the `parseAllPredicates` or `parseSelectedPredicates` method from `PredicateUtil` depending on whether the argument starts with a prefix."},{"lineNumber":504,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":505,"author":{"gitID":"tanhengyeow"},"content":"4. The `FindCommand` object is initialized with a combined `Predicate\u003cPerson\u003e` object."},{"lineNumber":506,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":507,"author":{"gitID":"tanhengyeow"},"content":"5. The `FindCommand` object calls the method `updateFilteredPersonList` with the `Predicate\u003cPerson\u003e` object."},{"lineNumber":508,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":509,"author":{"gitID":"tanhengyeow"},"content":"The following code snippets show how methods `formOrPredicate` and `formAndPredicate` are implemented:"},{"lineNumber":510,"author":{"gitID":"tanhengyeow"},"content":"[source,java]"},{"lineNumber":511,"author":{"gitID":"tanhengyeow"},"content":"----"},{"lineNumber":512,"author":{"gitID":"tanhengyeow"},"content":"public final Predicate\u003cPerson\u003e formOrPredicate(Predicate\u003cPerson\u003e... predicates) {"},{"lineNumber":513,"author":{"gitID":"tanhengyeow"},"content":"    return Stream.of(predicates).filter(Objects::nonNull)"},{"lineNumber":514,"author":{"gitID":"tanhengyeow"},"content":"            .reduce(condition -\u003e false, Predicate::or);"},{"lineNumber":515,"author":{"gitID":"tanhengyeow"},"content":"}"},{"lineNumber":516,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":517,"author":{"gitID":"tanhengyeow"},"content":"public final Predicate\u003cPerson\u003e formAndPredicate(Predicate\u003cPerson\u003e... predicates) {"},{"lineNumber":518,"author":{"gitID":"tanhengyeow"},"content":"    return Stream.of(predicates).filter(Objects::nonNull)"},{"lineNumber":519,"author":{"gitID":"tanhengyeow"},"content":"            .reduce(condition -\u003e true, Predicate::and);"},{"lineNumber":520,"author":{"gitID":"tanhengyeow"},"content":"}"},{"lineNumber":521,"author":{"gitID":"tanhengyeow"},"content":"----"},{"lineNumber":522,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":523,"author":{"gitID":"tanhengyeow"},"content":"The following sequence diagram, Figure 3.4.1.4, shows how the `Logic` component retrieves search results from `FindResults` without interference from the `Model` component:"},{"lineNumber":524,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":525,"author":{"gitID":"tanhengyeow"},"content":"image::FindCommandComponents.png[width\u003d\"800\"]"},{"lineNumber":526,"author":{"gitID":"tanhengyeow"},"content":"Figure 3.4.1.4 Component interactions for `find` command"},{"lineNumber":527,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":528,"author":{"gitID":"tanhengyeow"},"content":"[NOTE]"},{"lineNumber":529,"author":{"gitID":"tanhengyeow"},"content":"Note how results are retrieved from `FindResults`. It is important to have `FindResults` as a singleton pattern class as there should only be one instance of search results for every search performed by the `find` command."},{"lineNumber":530,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":531,"author":{"gitID":"tanhengyeow"},"content":"The following activity diagram, Figure 3.4.1.5 summarizes what happens when an user executes the `find` command:"},{"lineNumber":532,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":533,"author":{"gitID":"tanhengyeow"},"content":"image::FindCommandActivityDiagram.png[width\u003d\"800\"]"},{"lineNumber":534,"author":{"gitID":"tanhengyeow"},"content":"Figure 3.4.1.5 Activity diagram when user executes `find` command"},{"lineNumber":535,"author":{"gitID":"-"},"content":""},{"lineNumber":536,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Design Considerations"},{"lineNumber":537,"author":{"gitID":"-"},"content":""},{"lineNumber":538,"author":{"gitID":"tanhengyeow"},"content":"\u003d\u003d\u003d\u003d Aspect: Implementation of find command"},{"lineNumber":539,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":540,"author":{"gitID":"tanhengyeow"},"content":"* *Alternative 1 (current choice)*: Each field has its own field predicate composing of the predicates corresponding to the search pattern. The `AllPredicate` class is used to manage all these field predicates."},{"lineNumber":541,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":542,"author":{"gitID":"tanhengyeow"},"content":"** Pros: It is easy for new developers to understand. New developers can test each predicate easily, resulting in the debugging process to be smoother. They can also add or remove new predicates of each field easily as all predicates all grouped separately. This choice also adheres to Single Responsibility Principle (SRP) and Separation of Concerns (SoC)."},{"lineNumber":543,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":544,"author":{"gitID":"tanhengyeow"},"content":"** Cons: It results in a lot of classes to be created. Although there is increased cohesion, there is also increased coupling. Furthermore, this choice also violates Open-Closed Principle (OCP)."},{"lineNumber":545,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":546,"author":{"gitID":"tanhengyeow"},"content":"* *Alternative 2*: Merge all predicates into one class"},{"lineNumber":547,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":548,"author":{"gitID":"tanhengyeow"},"content":"** Pros: It is easy for new developers to manage this command. This choice also reduces the amount of code written significantly."},{"lineNumber":549,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":550,"author":{"gitID":"tanhengyeow"},"content":"** Cons: It is difficult to test existing and new predicates. This choice decreases cohesion although it decreases coupling."},{"lineNumber":551,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":552,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":553,"author":{"gitID":"tanhengyeow"},"content":"\u003d\u003d\u003d\u003d Aspect: Implementation of Levenshtein distance threshold"},{"lineNumber":554,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":555,"author":{"gitID":"tanhengyeow"},"content":"* *Alternative 1 (current choice)*: Set a private static constant"},{"lineNumber":556,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":557,"author":{"gitID":"tanhengyeow"},"content":"** Pros: It does not involve user intervention to set the threshold. It also decreases the chances of an increase in false positives should the user set a high threshold."},{"lineNumber":558,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":559,"author":{"gitID":"tanhengyeow"},"content":"** Cons: It does not allow users to set their desired threshold. Some users might need specific threshold to suit their needs"},{"lineNumber":560,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":561,"author":{"gitID":"tanhengyeow"},"content":"* *Alternative 2*: Allow users to set their own threshold"},{"lineNumber":562,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":563,"author":{"gitID":"tanhengyeow"},"content":"** Pros: It caters to more users with specific preferences."},{"lineNumber":564,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":565,"author":{"gitID":"tanhengyeow"},"content":"** Cons: It results in more implementation and tests to be written."},{"lineNumber":566,"author":{"gitID":"tanhengyeow"},"content":"//end::findcommand[]"},{"lineNumber":567,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":568,"author":{"gitID":"mhq199657"},"content":"//tag::filtercommand[]"},{"lineNumber":569,"author":{"gitID":"mhq199657"},"content":"\u003d\u003d\u003d Filter Command"},{"lineNumber":570,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":571,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Current Implementation"},{"lineNumber":572,"author":{"gitID":"-"},"content":""},{"lineNumber":573,"author":{"gitID":"mhq199657"},"content":"Filter Command is supported by an `FilterCommand` class. It supports the advanced filtering of multiple fields such as `ExpectedGraduationYear`. Filter commands can supports both filtering by keyword and filtering by range, if the field has natural ordering."},{"lineNumber":574,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":575,"author":{"gitID":"mhq199657"},"content":"Filter command currently only filters `ExpectedGraduationYear` but will support more fields in the subsequent weeks."},{"lineNumber":576,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":577,"author":{"gitID":"mhq199657"},"content":"Filter command interact with `Model` and `UI` in the following way:"},{"lineNumber":578,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":579,"author":{"gitID":"mhq199657"},"content":". `FilterCommandParser` parses the user inputs into a wholesome `Predicate\u003cPerson\u003e`."},{"lineNumber":580,"author":{"gitID":"mhq199657"},"content":". This predicate will be used to instantiate the `FilterCommand`"},{"lineNumber":581,"author":{"gitID":"mhq199657"},"content":". Upon execution of the filter command, the UI will be updated by imposing the new predicate to the `FilteredList` in the `ModelManager` class."},{"lineNumber":582,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":583,"author":{"gitID":"mhq199657"},"content":"Below is the sequence diagram of filter command."},{"lineNumber":584,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":585,"author":{"gitID":"mhq199657"},"content":"image::FilterCommandSequenceDiagram.png[width\u003d\"800\"]"},{"lineNumber":586,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Design Considerations"},{"lineNumber":587,"author":{"gitID":"mhq199657"},"content":"\u003d\u003d\u003d\u003d\u003d Aspect: Implementation of `FilterCommandParser`"},{"lineNumber":588,"author":{"gitID":"mhq199657"},"content":"* *Alternative 1 (current choice)*: `FilterCommandParser` breaks down user input according to prefix and pass to different methods in `FilterUtil` to generate respective `Predicate\u003cPerson\u003e`, after which it unions these `Predicate`."},{"lineNumber":589,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":590,"author":{"gitID":"mhq199657"},"content":"** Pros: This appoach breaks down the parsing process into multiple classes and each class is responsible for single duty. This makes debugging easier."},{"lineNumber":591,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":592,"author":{"gitID":"mhq199657"},"content":"** Cons: New developers may find it hard to understand the design pattern."},{"lineNumber":593,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":594,"author":{"gitID":"mhq199657"},"content":"* *Alternative 2*: Puts actual parsing in `FilterCommandParser` class."},{"lineNumber":595,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":596,"author":{"gitID":"mhq199657"},"content":"** Pros: It reduces number of classes used and is easier for new developers to understand."},{"lineNumber":597,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":598,"author":{"gitID":"mhq199657"},"content":"** Cons: It violates single responsibility principle. `FilterCommandParser` will have too many distinct functionalities such as"},{"lineNumber":599,"author":{"gitID":"mhq199657"},"content":"*** breaking down user input by prefix"},{"lineNumber":600,"author":{"gitID":"mhq199657"},"content":"*** breaking down user\u0027s predicate for each prefix"},{"lineNumber":601,"author":{"gitID":"mhq199657"},"content":"*** creating `FilterRange` objects to record down each range specified in the predicate"},{"lineNumber":602,"author":{"gitID":"mhq199657"},"content":"*** creating `Predicate` from `FilterRange`"},{"lineNumber":603,"author":{"gitID":"mhq199657"},"content":"*** unioning these `Predicate`"},{"lineNumber":604,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":605,"author":{"gitID":"mhq199657"},"content":"\u003d\u003d\u003d\u003d\u003d Aspect: Implementation of range tracker: `FilterRange\u003cE\u003e`"},{"lineNumber":606,"author":{"gitID":"mhq199657"},"content":"* *Alternative 1 (current choice)*: All user input will either be in form of `ToBeFilteredClassPrefix/singletonValue, lowerRange - higherRange`. Both singleton value and range will be parsed into a `FilterRange\u003cToBeFilteredClass\u003e`."},{"lineNumber":607,"author":{"gitID":"mhq199657"},"content":"** Pros: It ensures the user input is valid since `FilterRange\u003cE\u003e` can call `E.isValid()` to check. This ensures the integrity of `Predicate` later."},{"lineNumber":608,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":609,"author":{"gitID":"mhq199657"},"content":"** Cons: New developers may find it hard to understand the design pattern."},{"lineNumber":610,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":611,"author":{"gitID":"mhq199657"},"content":"* *Alternative 2 (current choice)*: All parsing of singleton or ranged values will be handled by some methods in `FilterUtil`."},{"lineNumber":612,"author":{"gitID":"mhq199657"},"content":"** Pros: New developers will find it easier to understand the design pattern."},{"lineNumber":613,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":614,"author":{"gitID":"mhq199657"},"content":"** Cons: It will be messy to handle both singletona dn ranged values in one method. It also adds the complexity of `FilterUtil` class."},{"lineNumber":615,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":616,"author":{"gitID":"mhq199657"},"content":"\u003d\u003d\u003d\u003d\u003d Aspect: `FilterCommand` behaviour"},{"lineNumber":617,"author":{"gitID":"mhq199657"},"content":"* *Alternative 1 (current choice)*: Predicates in the same field will be ORed together. Predicates in the different field will be ANDed together."},{"lineNumber":618,"author":{"gitID":"mhq199657"},"content":"** Pros: For the same field, the user can have more flexibility in selecting the desired values. For the different field, the predicates are in logical conjunction to make the filter more restrictive. This follows the natural way of human thinking."},{"lineNumber":619,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":620,"author":{"gitID":"mhq199657"},"content":"** Cons: The developers may be confused about the OR/AND rule at first."},{"lineNumber":621,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":622,"author":{"gitID":"mhq199657"},"content":"* *Alternative 2*: Everything will be ORed together."},{"lineNumber":623,"author":{"gitID":"mhq199657"},"content":"** Pros: It is an easier logical pattern for developers to understand."},{"lineNumber":624,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":625,"author":{"gitID":"mhq199657"},"content":"** Cons: It is user unfriendly. The only way for user to filter the persons who is in Computer Science, graduating in 2020 and has a GPA greater than 4.6 is to use 3 filter commands."},{"lineNumber":626,"author":{"gitID":"mhq199657"},"content":"//end::filtercommand[]"},{"lineNumber":627,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":628,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":629,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":630,"author":{"gitID":"Ang-YC"},"content":"// tag::interview[]"},{"lineNumber":631,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d Interview Command"},{"lineNumber":632,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":633,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Current Implementation"},{"lineNumber":634,"author":{"gitID":"-"},"content":""},{"lineNumber":635,"author":{"gitID":"Ang-YC"},"content":"The `interview` command allows Talent Acquisition Specialists to schedule an interview for candidates. The format of this command is `interview INDEX DATE_TIME_EXPRESSION`."},{"lineNumber":636,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":637,"author":{"gitID":"Ang-YC"},"content":"This command make use of Natty, a natural language date parser library written in Java. When given a date expression, it will apply standard language recognition and translation techniques to produce `LocalDateTime` which represents the result."},{"lineNumber":638,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":639,"author":{"gitID":"Ang-YC"},"content":"In our current implementation, the `interview` command inherits from the `UndoableCommand` class. Two components, `Logic` and `Model`, are involved in the execution of this command. The `Logic` component is responsible for parsing user inputs while the `Model` component deals with updating of filtered person list."},{"lineNumber":640,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":641,"author":{"gitID":"Ang-YC"},"content":"Below is a sequence diagram that illustrates how these two components interact when the `interview` command is executed:"},{"lineNumber":642,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":643,"author":{"gitID":"Ang-YC"},"content":"image::InterviewCommandSequenceDiagram.png[width\u003d\"800\"]"},{"lineNumber":644,"author":{"gitID":"Ang-YC"},"content":"Figure 3.6.1.1 Sequence diagram to illustrate component interactions for the `interview` command"},{"lineNumber":645,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":646,"author":{"gitID":"Ang-YC"},"content":"As shown above, execution of the `interview` command comprises the following steps:"},{"lineNumber":647,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":648,"author":{"gitID":"kexiaowen"},"content":". `LogicManager` invokes `parseCommand` method of `AddressbookParser`, taking user inputs as arguments."},{"lineNumber":649,"author":{"gitID":"Ang-YC"},"content":". During the `parseCommand` method call, an instance of `InterviewCommandParser` will be created when the keyword \"interview\" is matched. `InterviewCommandParser` then extracts the remaining user inputs and a `InterviewCommand` instance `i` will be returned provided that the format of user\u0027s input is correct."},{"lineNumber":650,"author":{"gitID":"Ang-YC"},"content":". `LogicManager` then calls `executeUndoableCommand` of the `InterviewCommand`, `i`, instantiated in step 2. Another component, `Model`, will be involved as the `InterviewCommand` requests to update the interview date of the person."},{"lineNumber":651,"author":{"gitID":"Ang-YC"},"content":". The `Model` component gets the filtered persons list and replaces `Person` p1 with `Person` p2 which is identical to p2 except interview date. A `CommandResult` will be generated and returned to `LogicManager`."},{"lineNumber":652,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":653,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Design Considerations"},{"lineNumber":654,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":655,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d\u003d Aspect: Usage of natural language parser"},{"lineNumber":656,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":657,"author":{"gitID":"Ang-YC"},"content":"* **Alternative 1 (current choice):** Use the natural language parser library by Natty to specify date and time"},{"lineNumber":658,"author":{"gitID":"Ang-YC"},"content":"** Pros: Users are able to enter the date and time in more natural tone without looking at calendar (For example, schedule an interview next Friday at 3pm)"},{"lineNumber":659,"author":{"gitID":"Ang-YC"},"content":"** Cons: Natural language parser doesn\u0027t have 100% reliability due to the complexity of human language"},{"lineNumber":660,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":661,"author":{"gitID":"Ang-YC"},"content":"* **Alternative 2:** Use the typical DD/MM/YYYY HH:MM format to specify date and time"},{"lineNumber":662,"author":{"gitID":"Ang-YC"},"content":"** Pros: Users are able to specify the date and time precisely"},{"lineNumber":663,"author":{"gitID":"Ang-YC"},"content":"** Cons: Users have to be certain on the date and time, which have to refer to the calendar at the same time"},{"lineNumber":664,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":665,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d\u003d Aspect: Implementation of scheduling and editing interview date"},{"lineNumber":666,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":667,"author":{"gitID":"Ang-YC"},"content":"* **Alternative 1 (current choice):** Implement a new command class `InterviewCommand` that supports both scheduling and editing of interview date."},{"lineNumber":668,"author":{"gitID":"Ang-YC"},"content":"** Pros: Results in more customisable and modular command that can be easily modified"},{"lineNumber":669,"author":{"gitID":"kexiaowen"},"content":"** Cons: Complicates the system as users need to familiarise themselves with more commands"},{"lineNumber":670,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":671,"author":{"gitID":"Ang-YC"},"content":"* **Alternative 2:** Extend the original `EditCommand` to allow it to schedule and modify interview date of a candidate"},{"lineNumber":672,"author":{"gitID":"kexiaowen"},"content":"** Pros: Minimises the number of commands users have to remember to execute tasks, making the application more user-friendly"},{"lineNumber":673,"author":{"gitID":"kexiaowen"},"content":"** Cons: Requires substantial changes to `EditCommandParser` and hence harder to implement"},{"lineNumber":674,"author":{"gitID":"Ang-YC"},"content":"// end::interview[]"},{"lineNumber":675,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":676,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":677,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":678,"author":{"gitID":"Ang-YC"},"content":"// tag::userinterface[]"},{"lineNumber":679,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d User Interface"},{"lineNumber":680,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":681,"author":{"gitID":"Ang-YC"},"content":"Our user interface is specially designed to maximise HR+’s usability and improve user experience. We take into account minor details and ensure that data is presented clearly so that it appeals to our users."},{"lineNumber":682,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":683,"author":{"gitID":"Ang-YC"},"content":"The following sections discuss the different aspects we have considered to make sure HR+ follows industry standards in user interface design. Our implementation follows https://material.io[Material Design] principles created by a leading technology company Google."},{"lineNumber":684,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":685,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d Responsive Design"},{"lineNumber":686,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":687,"author":{"gitID":"Ang-YC"},"content":"Responsive design is an approach to provide optimal viewing experience of an application regardless of the screen size of the user’s device. To incorporate responsive design into HR+, we use `AnchorPane` , a built-in JavaFX container component, to support relative positioning for all four directions (left, right, top and down) between parent and child components."},{"lineNumber":688,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":689,"author":{"gitID":"Ang-YC"},"content":"All UI components have a minimum size requirement. Therefore, every container component in HR+ has a `minWidth` property."},{"lineNumber":690,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":691,"author":{"gitID":"Ang-YC"},"content":"Besides `AnchorPane` , we also set a listener on the size of `InfoPanel` - a panel that displays detailed information about a student in HR+. The following code snippets illustrate how this listener is implemented:"},{"lineNumber":692,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":693,"author":{"gitID":"Ang-YC"},"content":"[source,java]"},{"lineNumber":694,"author":{"gitID":"Ang-YC"},"content":"----"},{"lineNumber":695,"author":{"gitID":"Ang-YC"},"content":"// SPLIT_MIN_WIDTH is a constant to define when to trigger the merge"},{"lineNumber":696,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":697,"author":{"gitID":"Ang-YC"},"content":"infoPaneWrapper.widthProperty().addListener((obs, old, newValue) -\u003e {"},{"lineNumber":698,"author":{"gitID":"Ang-YC"},"content":"    int width \u003d newValue.intValue();"},{"lineNumber":699,"author":{"gitID":"Ang-YC"},"content":"    if (width \u003e\u003d SPLIT_MIN_WIDTH) {"},{"lineNumber":700,"author":{"gitID":"Ang-YC"},"content":"        // Split into two parts"},{"lineNumber":701,"author":{"gitID":"Ang-YC"},"content":"    } else {"},{"lineNumber":702,"author":{"gitID":"Ang-YC"},"content":"        // Merge into one part"},{"lineNumber":703,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":704,"author":{"gitID":"Ang-YC"},"content":"});"},{"lineNumber":705,"author":{"gitID":"Ang-YC"},"content":"----"},{"lineNumber":706,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":707,"author":{"gitID":"Ang-YC"},"content":"When a user runs HR+ on a device with a bigger screen size, the `InfoPanel` will be split into two parts. The left panel will display student’s information while the right panel shows the student’s rating scores and a View resume button. The figure below (Figure 3.7.1.1) shows an example of our interface on devices with larger screens:"},{"lineNumber":708,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":709,"author":{"gitID":"Ang-YC"},"content":"image::userinterface/responsive_split.png[width\u003d\"500\"]"},{"lineNumber":710,"author":{"gitID":"Ang-YC"},"content":"Figure 3.7.1.1 InfoPanel on devices with larger screens"},{"lineNumber":711,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":712,"author":{"gitID":"Ang-YC"},"content":"On the other hand, if the device has a smaller screen size, the two components of `InfoPanel` will collapse into one. The student’s information is on top of the student’s ratings. `ScrollPane` in `InfoPanel` allows the user to scroll through the single merged panel. The figure below (Figure 3.7.1.2) shows our sample interface on devices with smaller screens:"},{"lineNumber":713,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":714,"author":{"gitID":"Ang-YC"},"content":"image::userinterface/responsive_merge.png[width\u003d\"300\"]"},{"lineNumber":715,"author":{"gitID":"Ang-YC"},"content":"Figure 3.7.1.2 InfoPanel on devices with smaller screens"},{"lineNumber":716,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":717,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d Consistency"},{"lineNumber":718,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":719,"author":{"gitID":"Ang-YC"},"content":"Consistency is another principle that is important in life and in design. Not only it brings up the professional feel and look, users will feel that the app is more reliable and robust. Besides that, it is easier for users to get started as the app follows a consistent pattern."},{"lineNumber":720,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":721,"author":{"gitID":"Ang-YC"},"content":"In order to follow this principle, we have used consistent color, layout and also fonts throughout the whole app. It will be discussed the in details below:"},{"lineNumber":722,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":723,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d\u003d Color"},{"lineNumber":724,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":725,"author":{"gitID":"Ang-YC"},"content":"The primary color in HR+ is blue, with 10 shades of blue in the figure illustrated below (Figure 3.7.2.1). Other than the primary color, different shades of grey are also being used to show the level of significance of an information. Besides that, the colors that are being used are harmonized such that it brings up an unified feeling while users are using the app."},{"lineNumber":726,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":727,"author":{"gitID":"Ang-YC"},"content":"image::userinterface/blue_shades.png[width\u003d\"300\"]"},{"lineNumber":728,"author":{"gitID":"Ang-YC"},"content":"Figure 3.7.2.1 10 shades of blue used in HR+"},{"lineNumber":729,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":730,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d\u003d Layout"},{"lineNumber":731,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":732,"author":{"gitID":"Ang-YC"},"content":"The spacing and layout inside HR+ is consistent and balanced. We make good use of spacing to achieve grouping of elements so that legibility is improved. This allow users to have a sense of which information are relevant to each other."},{"lineNumber":733,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":734,"author":{"gitID":"Ang-YC"},"content":"For example, it is easy to separate between the applicant\u0027s information, contact information and interview information at a glance without the need of boxes. Examples are shown in the figure below (Figure 3.7.2.2)"},{"lineNumber":735,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":736,"author":{"gitID":"Ang-YC"},"content":"image::userinterface/spacing_group.png[width\u003d\"300\"]"},{"lineNumber":737,"author":{"gitID":"Ang-YC"},"content":"Figure 3.7.2.2 Grouping with spacing"},{"lineNumber":738,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":739,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d\u003d Fonts"},{"lineNumber":740,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":741,"author":{"gitID":"Ang-YC"},"content":"The font family that is being used is Roboto. It follows a natural width that allows text to be read more fluently. Moreover, this font featured 6 different weights (thin, light, regular, medium, bold and black) which will allow text to be represented depending on the different level of importance. All different weights are shown in the figure below. (Figure 3.7.2.3)"},{"lineNumber":742,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":743,"author":{"gitID":"Ang-YC"},"content":"image::userinterface/roboto_weight.png[width\u003d\"300\"]"},{"lineNumber":744,"author":{"gitID":"Ang-YC"},"content":"Figure 3.7.2.3 Different weights of Roboto font"},{"lineNumber":745,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":746,"author":{"gitID":"Ang-YC"},"content":"Important information is usually shown with a higher weight whereas trivial information is shown with a lower weight. This allow users to skim through the information to process data easily. The fonts are stored in `resources/fonts` folder and embedded into the packaged app so that it can be loaded on all devices."},{"lineNumber":747,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":748,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d Familiarity"},{"lineNumber":749,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":750,"author":{"gitID":"Ang-YC"},"content":"Familiarity is another aspect that is useful when designing an app. It can reduce the cognitive load of a user so that users will not feel overwhelmed by the information that is being displayed."},{"lineNumber":751,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":752,"author":{"gitID":"Ang-YC"},"content":"In HR+, icons are used to represent some of the fields. For example, stars are used to represent average rating of an applicant in the PersonCard list on the left (Figure 3.7.3.1, pointed with red arrow)."},{"lineNumber":753,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":754,"author":{"gitID":"Ang-YC"},"content":"image::userinterface/familiar_star.png[width\u003d\"300\"]"},{"lineNumber":755,"author":{"gitID":"Ang-YC"},"content":"Figure 3.7.3.1 Rating icon in PersonCard"},{"lineNumber":756,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":757,"author":{"gitID":"Ang-YC"},"content":"Besides that, contact information fields such as e-mail, address and mobile phone number uses a familiar icon. (Figure 3.7.3.2)"},{"lineNumber":758,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":759,"author":{"gitID":"Ang-YC"},"content":"image::userinterface/familiar_icons.png[width\u003d\"300\"]"},{"lineNumber":760,"author":{"gitID":"Ang-YC"},"content":"Figure 3.7.3.2 Contact information icons in InfoPanel"},{"lineNumber":761,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":762,"author":{"gitID":"Ang-YC"},"content":"\u003d\u003d\u003d\u003d Visual Feedback"},{"lineNumber":763,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":764,"author":{"gitID":"Ang-YC"},"content":"Visual Feedback is also essential for users to identify the current state of the app. This is because user might get interrupted while using the app and have to resume the session at any time."},{"lineNumber":765,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":766,"author":{"gitID":"Ang-YC"},"content":"In HR+, when an applicant is selected in the PersonCard list on the left panel, it will be highlighted in blue border and shadow so that users know who they are currently selecting. (Figure 3.7.4.1)"},{"lineNumber":767,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":768,"author":{"gitID":"Ang-YC"},"content":"image::userinterface/list_active.png[width\u003d\"300\"]"},{"lineNumber":769,"author":{"gitID":"Ang-YC"},"content":"Figure 3.7.4.1 Highlighting of selected PersonCard"},{"lineNumber":770,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":771,"author":{"gitID":"Ang-YC"},"content":"Besides that, there is an indication when a panel is selected. This allows users to traverse between panel using keyboard only. (Figure 3.7.4.2)"},{"lineNumber":772,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":773,"author":{"gitID":"Ang-YC"},"content":"image::userinterface/panel_active.png[width\u003d\"500\"]"},{"lineNumber":774,"author":{"gitID":"Ang-YC"},"content":"Figure 3.7.4.2 Highlighting of selected Panel"},{"lineNumber":775,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":776,"author":{"gitID":"Ang-YC"},"content":"Moreover, when a command entered in `CommandBox` is invalid, the text color will be changed into red to indicate that there is an error in the command itself. (Figure 3.7.4.3)"},{"lineNumber":777,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":778,"author":{"gitID":"Ang-YC"},"content":"image::userinterface/feedback_error.png[width\u003d\"250\"]"},{"lineNumber":779,"author":{"gitID":"Ang-YC"},"content":"Figure 3.7.4.3 Invalid command indicator"},{"lineNumber":780,"author":{"gitID":"Ang-YC"},"content":"// end::userinterface[]"},{"lineNumber":781,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":782,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":783,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":784,"author":{"gitID":"-"},"content":"// tag::dataencryption[]"},{"lineNumber":785,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d [Proposed] Data Encryption"},{"lineNumber":786,"author":{"gitID":"-"},"content":""},{"lineNumber":787,"author":{"gitID":"-"},"content":"_{Explain here how the data encryption feature will be implemented}_"},{"lineNumber":788,"author":{"gitID":"-"},"content":""},{"lineNumber":789,"author":{"gitID":"-"},"content":"// end::dataencryption[]"},{"lineNumber":790,"author":{"gitID":"-"},"content":""},{"lineNumber":791,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Logging"},{"lineNumber":792,"author":{"gitID":"-"},"content":""},{"lineNumber":793,"author":{"gitID":"-"},"content":"We are using `java.util.logging` package for logging. The `LogsCenter` class is used to manage the logging levels and logging destinations."},{"lineNumber":794,"author":{"gitID":"-"},"content":""},{"lineNumber":795,"author":{"gitID":"-"},"content":"* The logging level can be controlled using the `logLevel` setting in the configuration file (See \u003c\u003cImplementation-Configuration\u003e\u003e)"},{"lineNumber":796,"author":{"gitID":"-"},"content":"* The `Logger` for a class can be obtained using `LogsCenter.getLogger(Class)` which will log messages according to the specified logging level"},{"lineNumber":797,"author":{"gitID":"-"},"content":"* Currently log messages are output through: `Console` and to a `.log` file."},{"lineNumber":798,"author":{"gitID":"-"},"content":""},{"lineNumber":799,"author":{"gitID":"-"},"content":"*Logging Levels*"},{"lineNumber":800,"author":{"gitID":"-"},"content":""},{"lineNumber":801,"author":{"gitID":"-"},"content":"* `SEVERE` : Critical problem detected which may possibly cause the termination of the application"},{"lineNumber":802,"author":{"gitID":"-"},"content":"* `WARNING` : Can continue, but with caution"},{"lineNumber":803,"author":{"gitID":"-"},"content":"* `INFO` : Information showing the noteworthy actions by the App"},{"lineNumber":804,"author":{"gitID":"-"},"content":"* `FINE` : Details that is not usually noteworthy but may be useful in debugging e.g. print the actual list instead of just its size"},{"lineNumber":805,"author":{"gitID":"-"},"content":""},{"lineNumber":806,"author":{"gitID":"-"},"content":"[[Implementation-Configuration]]"},{"lineNumber":807,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Configuration"},{"lineNumber":808,"author":{"gitID":"-"},"content":""},{"lineNumber":809,"author":{"gitID":"-"},"content":"Certain properties of the application can be controlled (e.g App name, logging level) through the configuration file (default: `config.json`)."},{"lineNumber":810,"author":{"gitID":"-"},"content":""},{"lineNumber":811,"author":{"gitID":"-"},"content":"\u003d\u003d Documentation"},{"lineNumber":812,"author":{"gitID":"-"},"content":""},{"lineNumber":813,"author":{"gitID":"-"},"content":"We use asciidoc for writing documentation."},{"lineNumber":814,"author":{"gitID":"-"},"content":""},{"lineNumber":815,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":816,"author":{"gitID":"-"},"content":"We chose asciidoc over Markdown because asciidoc, although a bit more complex than Markdown, provides more flexibility in formatting."},{"lineNumber":817,"author":{"gitID":"-"},"content":""},{"lineNumber":818,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Editing Documentation"},{"lineNumber":819,"author":{"gitID":"-"},"content":""},{"lineNumber":820,"author":{"gitID":"-"},"content":"See \u003c\u003cUsingGradle#rendering-asciidoc-files, UsingGradle.adoc\u003e\u003e to learn how to render `.adoc` files locally to preview the end result of your edits."},{"lineNumber":821,"author":{"gitID":"-"},"content":"Alternatively, you can download the AsciiDoc plugin for IntelliJ, which allows you to preview the changes you have made to your `.adoc` files in real-time."},{"lineNumber":822,"author":{"gitID":"-"},"content":""},{"lineNumber":823,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Publishing Documentation"},{"lineNumber":824,"author":{"gitID":"-"},"content":""},{"lineNumber":825,"author":{"gitID":"-"},"content":"See \u003c\u003cUsingTravis#deploying-github-pages, UsingTravis.adoc\u003e\u003e to learn how to deploy GitHub Pages using Travis."},{"lineNumber":826,"author":{"gitID":"-"},"content":""},{"lineNumber":827,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Converting Documentation to PDF format"},{"lineNumber":828,"author":{"gitID":"-"},"content":""},{"lineNumber":829,"author":{"gitID":"-"},"content":"We use https://www.google.com/chrome/browser/desktop/[Google Chrome] for converting documentation to PDF format, as Chrome\u0027s PDF engine preserves hyperlinks used in webpages."},{"lineNumber":830,"author":{"gitID":"-"},"content":""},{"lineNumber":831,"author":{"gitID":"-"},"content":"Here are the steps to convert the project documentation files to PDF format."},{"lineNumber":832,"author":{"gitID":"-"},"content":""},{"lineNumber":833,"author":{"gitID":"-"},"content":".  Follow the instructions in \u003c\u003cUsingGradle#rendering-asciidoc-files, UsingGradle.adoc\u003e\u003e to convert the AsciiDoc files in the `docs/` directory to HTML format."},{"lineNumber":834,"author":{"gitID":"-"},"content":".  Go to your generated HTML files in the `build/docs` folder, right click on them and select `Open with` -\u003e `Google Chrome`."},{"lineNumber":835,"author":{"gitID":"-"},"content":".  Within Chrome, click on the `Print` option in Chrome\u0027s menu."},{"lineNumber":836,"author":{"gitID":"-"},"content":".  Set the destination to `Save as PDF`, then click `Save` to save a copy of the file in PDF format. For best results, use the settings indicated in the screenshot below."},{"lineNumber":837,"author":{"gitID":"-"},"content":""},{"lineNumber":838,"author":{"gitID":"-"},"content":".Saving documentation as PDF files in Chrome"},{"lineNumber":839,"author":{"gitID":"-"},"content":"image::chrome_save_as_pdf.png[width\u003d\"300\"]"},{"lineNumber":840,"author":{"gitID":"-"},"content":""},{"lineNumber":841,"author":{"gitID":"-"},"content":"[[Testing]]"},{"lineNumber":842,"author":{"gitID":"-"},"content":"\u003d\u003d Testing"},{"lineNumber":843,"author":{"gitID":"-"},"content":""},{"lineNumber":844,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Running Tests"},{"lineNumber":845,"author":{"gitID":"-"},"content":""},{"lineNumber":846,"author":{"gitID":"-"},"content":"There are three ways to run tests."},{"lineNumber":847,"author":{"gitID":"-"},"content":""},{"lineNumber":848,"author":{"gitID":"-"},"content":"[TIP]"},{"lineNumber":849,"author":{"gitID":"-"},"content":"The most reliable way to run tests is the 3rd one. The first two methods might fail some GUI tests due to platform/resolution-specific idiosyncrasies."},{"lineNumber":850,"author":{"gitID":"-"},"content":""},{"lineNumber":851,"author":{"gitID":"-"},"content":"*Method 1: Using IntelliJ JUnit test runner*"},{"lineNumber":852,"author":{"gitID":"-"},"content":""},{"lineNumber":853,"author":{"gitID":"-"},"content":"* To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`"},{"lineNumber":854,"author":{"gitID":"-"},"content":"* To run a subset of tests, you can right-click on a test package, test class, or a test and choose `Run \u0027ABC\u0027`"},{"lineNumber":855,"author":{"gitID":"-"},"content":""},{"lineNumber":856,"author":{"gitID":"-"},"content":"*Method 2: Using Gradle*"},{"lineNumber":857,"author":{"gitID":"-"},"content":""},{"lineNumber":858,"author":{"gitID":"-"},"content":"* Open a console and run the command `gradlew clean allTests` (Mac/Linux: `./gradlew clean allTests`)"},{"lineNumber":859,"author":{"gitID":"-"},"content":""},{"lineNumber":860,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":861,"author":{"gitID":"-"},"content":"See \u003c\u003cUsingGradle#, UsingGradle.adoc\u003e\u003e for more info on how to run tests using Gradle."},{"lineNumber":862,"author":{"gitID":"-"},"content":""},{"lineNumber":863,"author":{"gitID":"-"},"content":"*Method 3: Using Gradle (headless)*"},{"lineNumber":864,"author":{"gitID":"-"},"content":""},{"lineNumber":865,"author":{"gitID":"-"},"content":"Thanks to the https://github.com/TestFX/TestFX[TestFX] library we use, our GUI tests can be run in the _headless_ mode. In the headless mode, GUI tests do not show up on the screen. That means the developer can do other things on the Computer while the tests are running."},{"lineNumber":866,"author":{"gitID":"-"},"content":""},{"lineNumber":867,"author":{"gitID":"-"},"content":"To run tests in headless mode, open a console and run the command `gradlew clean headless allTests` (Mac/Linux: `./gradlew clean headless allTests`)"},{"lineNumber":868,"author":{"gitID":"-"},"content":""},{"lineNumber":869,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Types of tests"},{"lineNumber":870,"author":{"gitID":"-"},"content":""},{"lineNumber":871,"author":{"gitID":"-"},"content":"We have two types of tests:"},{"lineNumber":872,"author":{"gitID":"-"},"content":""},{"lineNumber":873,"author":{"gitID":"-"},"content":".  *GUI Tests* - These are tests involving the GUI. They include,"},{"lineNumber":874,"author":{"gitID":"-"},"content":".. _System Tests_ that test the entire App by simulating user actions on the GUI. These are in the `systemtests` package."},{"lineNumber":875,"author":{"gitID":"-"},"content":".. _Unit tests_ that test the individual components. These are in `seedu.address.ui` package."},{"lineNumber":876,"author":{"gitID":"-"},"content":".  *Non-GUI Tests* - These are tests not involving the GUI. They include,"},{"lineNumber":877,"author":{"gitID":"-"},"content":"..  _Unit tests_ targeting the lowest level methods/classes. +"},{"lineNumber":878,"author":{"gitID":"-"},"content":"e.g. `seedu.address.commons.StringUtilTest`"},{"lineNumber":879,"author":{"gitID":"-"},"content":"..  _Integration tests_ that are checking the integration of multiple code units (those code units are assumed to be working). +"},{"lineNumber":880,"author":{"gitID":"-"},"content":"e.g. `seedu.address.storage.StorageManagerTest`"},{"lineNumber":881,"author":{"gitID":"-"},"content":"..  Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together. +"},{"lineNumber":882,"author":{"gitID":"-"},"content":"e.g. `seedu.address.logic.LogicManagerTest`"},{"lineNumber":883,"author":{"gitID":"-"},"content":""},{"lineNumber":884,"author":{"gitID":"-"},"content":""},{"lineNumber":885,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Troubleshooting Testing"},{"lineNumber":886,"author":{"gitID":"-"},"content":"**Problem: `HelpWindowTest` fails with a `NullPointerException`.**"},{"lineNumber":887,"author":{"gitID":"-"},"content":""},{"lineNumber":888,"author":{"gitID":"-"},"content":"* Reason: One of its dependencies, `UserGuide.html` in `src/main/resources/docs` is missing."},{"lineNumber":889,"author":{"gitID":"-"},"content":"* Solution: Execute Gradle task `processResources`."},{"lineNumber":890,"author":{"gitID":"-"},"content":""},{"lineNumber":891,"author":{"gitID":"-"},"content":"\u003d\u003d Dev Ops"},{"lineNumber":892,"author":{"gitID":"-"},"content":""},{"lineNumber":893,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Build Automation"},{"lineNumber":894,"author":{"gitID":"-"},"content":""},{"lineNumber":895,"author":{"gitID":"-"},"content":"See \u003c\u003cUsingGradle#, UsingGradle.adoc\u003e\u003e to learn how to use Gradle for build automation."},{"lineNumber":896,"author":{"gitID":"-"},"content":""},{"lineNumber":897,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Continuous Integration"},{"lineNumber":898,"author":{"gitID":"-"},"content":""},{"lineNumber":899,"author":{"gitID":"-"},"content":"We use https://travis-ci.org/[Travis CI] and https://www.appveyor.com/[AppVeyor] to perform _Continuous Integration_ on our projects. See \u003c\u003cUsingTravis#, UsingTravis.adoc\u003e\u003e and \u003c\u003cUsingAppVeyor#, UsingAppVeyor.adoc\u003e\u003e for more details."},{"lineNumber":900,"author":{"gitID":"-"},"content":""},{"lineNumber":901,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Coverage Reporting"},{"lineNumber":902,"author":{"gitID":"-"},"content":""},{"lineNumber":903,"author":{"gitID":"-"},"content":"We use https://coveralls.io/[Coveralls] to track the code coverage of our projects. See \u003c\u003cUsingCoveralls#, UsingCoveralls.adoc\u003e\u003e for more details."},{"lineNumber":904,"author":{"gitID":"-"},"content":""},{"lineNumber":905,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Documentation Previews"},{"lineNumber":906,"author":{"gitID":"-"},"content":"When a pull request has changes to asciidoc files, you can use https://www.netlify.com/[Netlify] to see a preview of how the HTML version of those asciidoc files will look like when the pull request is merged. See \u003c\u003cUsingNetlify#, UsingNetlify.adoc\u003e\u003e for more details."},{"lineNumber":907,"author":{"gitID":"-"},"content":""},{"lineNumber":908,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Making a Release"},{"lineNumber":909,"author":{"gitID":"-"},"content":""},{"lineNumber":910,"author":{"gitID":"-"},"content":"Here are the steps to create a new release."},{"lineNumber":911,"author":{"gitID":"-"},"content":""},{"lineNumber":912,"author":{"gitID":"-"},"content":".  Update the version number in link:{repoURL}/src/main/java/seedu/address/MainApp.java[`MainApp.java`]."},{"lineNumber":913,"author":{"gitID":"-"},"content":".  Generate a JAR file \u003c\u003cUsingGradle#creating-the-jar-file, using Gradle\u003e\u003e."},{"lineNumber":914,"author":{"gitID":"-"},"content":".  Tag the repo with the version number. e.g. `v0.1`"},{"lineNumber":915,"author":{"gitID":"-"},"content":".  https://help.github.com/articles/creating-releases/[Create a new release using GitHub] and upload the JAR file you created."},{"lineNumber":916,"author":{"gitID":"-"},"content":""},{"lineNumber":917,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Managing Dependencies"},{"lineNumber":918,"author":{"gitID":"-"},"content":""},{"lineNumber":919,"author":{"gitID":"-"},"content":"A project often depends on third-party libraries. For example, Address Book depends on the http://wiki.fasterxml.com/JacksonHome[Jackson library] for XML parsing. Managing these _dependencies_ can be automated using Gradle. For example, Gradle can download the dependencies automatically, which is better than these alternatives. +"},{"lineNumber":920,"author":{"gitID":"-"},"content":"a. Include those libraries in the repo (this bloats the repo size) +"},{"lineNumber":921,"author":{"gitID":"-"},"content":"b. Require developers to download those libraries manually (this creates extra work for developers)"},{"lineNumber":922,"author":{"gitID":"-"},"content":""},{"lineNumber":923,"author":{"gitID":"-"},"content":"[[GetStartedProgramming]]"},{"lineNumber":924,"author":{"gitID":"-"},"content":"[appendix]"},{"lineNumber":925,"author":{"gitID":"-"},"content":"\u003d\u003d Suggested Programming Tasks to Get Started"},{"lineNumber":926,"author":{"gitID":"-"},"content":""},{"lineNumber":927,"author":{"gitID":"-"},"content":"Suggested path for new programmers:"},{"lineNumber":928,"author":{"gitID":"-"},"content":""},{"lineNumber":929,"author":{"gitID":"-"},"content":"1. First, add small local-impact (i.e. the impact of the change does not go beyond the component) enhancements to one component at a time. Some suggestions are given in \u003c\u003cGetStartedProgramming-EachComponent\u003e\u003e."},{"lineNumber":930,"author":{"gitID":"-"},"content":""},{"lineNumber":931,"author":{"gitID":"-"},"content":"2. Next, add a feature that touches multiple components to learn how to implement an end-to-end feature across all components. \u003c\u003cGetStartedProgramming-RemarkCommand\u003e\u003e explains how to go about adding such a feature."},{"lineNumber":932,"author":{"gitID":"-"},"content":""},{"lineNumber":933,"author":{"gitID":"-"},"content":"[[GetStartedProgramming-EachComponent]]"},{"lineNumber":934,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Improving each component"},{"lineNumber":935,"author":{"gitID":"-"},"content":""},{"lineNumber":936,"author":{"gitID":"-"},"content":"Each individual exercise in this section is component-based (i.e. you would not need to modify the other components to get it to work)."},{"lineNumber":937,"author":{"gitID":"-"},"content":""},{"lineNumber":938,"author":{"gitID":"-"},"content":"[discrete]"},{"lineNumber":939,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d `Logic` component"},{"lineNumber":940,"author":{"gitID":"-"},"content":""},{"lineNumber":941,"author":{"gitID":"-"},"content":"*Scenario:* You are in charge of `logic`. During dog-fooding, your team realize that it is troublesome for the user to type the whole command in order to execute a command. Your team devise some strategies to help cut down the amount of typing necessary, and one of the suggestions was to implement aliases for the command words. Your job is to implement such aliases."},{"lineNumber":942,"author":{"gitID":"-"},"content":""},{"lineNumber":943,"author":{"gitID":"-"},"content":"[TIP]"},{"lineNumber":944,"author":{"gitID":"-"},"content":"Do take a look at \u003c\u003cDesign-Logic\u003e\u003e before attempting to modify the `Logic` component."},{"lineNumber":945,"author":{"gitID":"-"},"content":""},{"lineNumber":946,"author":{"gitID":"-"},"content":". Add a shorthand equivalent alias for each of the individual commands. For example, besides typing `clear`, the user can also type `c` to remove all persons in the list."},{"lineNumber":947,"author":{"gitID":"-"},"content":"+"},{"lineNumber":948,"author":{"gitID":"-"},"content":"****"},{"lineNumber":949,"author":{"gitID":"-"},"content":"* Hints"},{"lineNumber":950,"author":{"gitID":"-"},"content":"** Just like we store each individual command word constant `COMMAND_WORD` inside `*Command.java` (e.g.  link:{repoURL}/src/main/java/seedu/address/logic/commands/FindCommand.java[`FindCommand#COMMAND_WORD`], link:{repoURL}/src/main/java/seedu/address/logic/commands/DeleteCommand.java[`DeleteCommand#COMMAND_WORD`]), you need a new constant for aliases as well (e.g. `FindCommand#COMMAND_ALIAS`)."},{"lineNumber":951,"author":{"gitID":"-"},"content":"** link:{repoURL}/src/main/java/seedu/address/logic/parser/AddressBookParser.java[`AddressBookParser`] is responsible for analyzing command words."},{"lineNumber":952,"author":{"gitID":"-"},"content":"* Solution"},{"lineNumber":953,"author":{"gitID":"-"},"content":"** Modify the switch statement in link:{repoURL}/src/main/java/seedu/address/logic/parser/AddressBookParser.java[`AddressBookParser#parseCommand(String)`] such that both the proper command word and alias can be used to execute the same intended command."},{"lineNumber":954,"author":{"gitID":"-"},"content":"** Add new tests for each of the aliases that you have added."},{"lineNumber":955,"author":{"gitID":"-"},"content":"** Update the user guide to document the new aliases."},{"lineNumber":956,"author":{"gitID":"-"},"content":"** See this https://github.com/se-edu/addressbook-level4/pull/785[PR] for the full solution."},{"lineNumber":957,"author":{"gitID":"-"},"content":"****"},{"lineNumber":958,"author":{"gitID":"-"},"content":""},{"lineNumber":959,"author":{"gitID":"-"},"content":"[discrete]"},{"lineNumber":960,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d `Model` component"},{"lineNumber":961,"author":{"gitID":"-"},"content":""},{"lineNumber":962,"author":{"gitID":"-"},"content":"*Scenario:* You are in charge of `model`. One day, the `logic`-in-charge approaches you for help. He wants to implement a command such that the user is able to remove a particular tag from everyone in the address book, but the model API does not support such a functionality at the moment. Your job is to implement an API method, so that your teammate can use your API to implement his command."},{"lineNumber":963,"author":{"gitID":"-"},"content":""},{"lineNumber":964,"author":{"gitID":"-"},"content":"[TIP]"},{"lineNumber":965,"author":{"gitID":"-"},"content":"Do take a look at \u003c\u003cDesign-Model\u003e\u003e before attempting to modify the `Model` component."},{"lineNumber":966,"author":{"gitID":"-"},"content":""},{"lineNumber":967,"author":{"gitID":"-"},"content":". Add a `removeTag(Tag)` method. The specified tag will be removed from everyone in the address book."},{"lineNumber":968,"author":{"gitID":"-"},"content":"+"},{"lineNumber":969,"author":{"gitID":"-"},"content":"****"},{"lineNumber":970,"author":{"gitID":"-"},"content":"* Hints"},{"lineNumber":971,"author":{"gitID":"-"},"content":"** The link:{repoURL}/src/main/java/seedu/address/model/Model.java[`Model`] and the link:{repoURL}/src/main/java/seedu/address/model/AddressBook.java[`AddressBook`] API need to be updated."},{"lineNumber":972,"author":{"gitID":"-"},"content":"** Think about how you can use SLAP to design the method. Where should we place the main logic of deleting tags?"},{"lineNumber":973,"author":{"gitID":"-"},"content":"**  Find out which of the existing API methods in  link:{repoURL}/src/main/java/seedu/address/model/AddressBook.java[`AddressBook`] and link:{repoURL}/src/main/java/seedu/address/model/person/Person.java[`Person`] classes can be used to implement the tag removal logic. link:{repoURL}/src/main/java/seedu/address/model/AddressBook.java[`AddressBook`] allows you to update a person, and link:{repoURL}/src/main/java/seedu/address/model/person/Person.java[`Person`] allows you to update the tags."},{"lineNumber":974,"author":{"gitID":"-"},"content":"* Solution"},{"lineNumber":975,"author":{"gitID":"-"},"content":"** Implement a `removeTag(Tag)` method in link:{repoURL}/src/main/java/seedu/address/model/AddressBook.java[`AddressBook`]. Loop through each person, and remove the `tag` from each person."},{"lineNumber":976,"author":{"gitID":"-"},"content":"** Add a new API method `deleteTag(Tag)` in link:{repoURL}/src/main/java/seedu/address/model/ModelManager.java[`ModelManager`]. Your link:{repoURL}/src/main/java/seedu/address/model/ModelManager.java[`ModelManager`] should call `AddressBook#removeTag(Tag)`."},{"lineNumber":977,"author":{"gitID":"-"},"content":"** Add new tests for each of the new public methods that you have added."},{"lineNumber":978,"author":{"gitID":"-"},"content":"** See this https://github.com/se-edu/addressbook-level4/pull/790[PR] for the full solution."},{"lineNumber":979,"author":{"gitID":"-"},"content":"*** The current codebase has a flaw in tags management. Tags no longer in use by anyone may still exist on the link:{repoURL}/src/main/java/seedu/address/model/AddressBook.java[`AddressBook`]. This may cause some tests to fail. See issue  https://github.com/se-edu/addressbook-level4/issues/753[`#753`] for more information about this flaw."},{"lineNumber":980,"author":{"gitID":"-"},"content":"*** The solution PR has a temporary fix for the flaw mentioned above in its first commit."},{"lineNumber":981,"author":{"gitID":"-"},"content":"****"},{"lineNumber":982,"author":{"gitID":"-"},"content":""},{"lineNumber":983,"author":{"gitID":"-"},"content":"[discrete]"},{"lineNumber":984,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d `Ui` component"},{"lineNumber":985,"author":{"gitID":"-"},"content":""},{"lineNumber":986,"author":{"gitID":"-"},"content":"*Scenario:* You are in charge of `ui`. During a beta testing session, your team is observing how the users use your address book application. You realize that one of the users occasionally tries to delete non-existent tags from a contact, because the tags all look the same visually, and the user got confused. Another user made a typing mistake in his command, but did not realize he had done so because the error message wasn\u0027t prominent enough. A third user keeps scrolling down the list, because he keeps forgetting the index of the last person in the list. Your job is to implement improvements to the UI to solve all these problems."},{"lineNumber":987,"author":{"gitID":"-"},"content":""},{"lineNumber":988,"author":{"gitID":"-"},"content":"[TIP]"},{"lineNumber":989,"author":{"gitID":"-"},"content":"Do take a look at \u003c\u003cDesign-Ui\u003e\u003e before attempting to modify the `UI` component."},{"lineNumber":990,"author":{"gitID":"-"},"content":""},{"lineNumber":991,"author":{"gitID":"-"},"content":". Use different colors for different tags inside person cards. For example, `friends` tags can be all in brown, and `colleagues` tags can be all in yellow."},{"lineNumber":992,"author":{"gitID":"-"},"content":"+"},{"lineNumber":993,"author":{"gitID":"-"},"content":"**Before**"},{"lineNumber":994,"author":{"gitID":"-"},"content":"+"},{"lineNumber":995,"author":{"gitID":"-"},"content":"image::getting-started-ui-tag-before.png[width\u003d\"300\"]"},{"lineNumber":996,"author":{"gitID":"-"},"content":"+"},{"lineNumber":997,"author":{"gitID":"-"},"content":"**After**"},{"lineNumber":998,"author":{"gitID":"-"},"content":"+"},{"lineNumber":999,"author":{"gitID":"-"},"content":"image::getting-started-ui-tag-after.png[width\u003d\"300\"]"},{"lineNumber":1000,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1001,"author":{"gitID":"-"},"content":"****"},{"lineNumber":1002,"author":{"gitID":"-"},"content":"* Hints"},{"lineNumber":1003,"author":{"gitID":"-"},"content":"** The tag labels are created inside link:{repoURL}/src/main/java/seedu/address/ui/PersonCard.java[the `PersonCard` constructor] (`new Label(tag.tagName)`). https://docs.oracle.com/javase/8/javafx/api/javafx/scene/control/Label.html[JavaFX\u0027s `Label` class] allows you to modify the style of each Label, such as changing its color."},{"lineNumber":1004,"author":{"gitID":"-"},"content":"** Use the .css attribute `-fx-background-color` to add a color."},{"lineNumber":1005,"author":{"gitID":"-"},"content":"** You may wish to modify link:{repoURL}/src/main/resources/view/DarkTheme.css[`DarkTheme.css`] to include some pre-defined colors using css, especially if you have experience with web-based css."},{"lineNumber":1006,"author":{"gitID":"-"},"content":"* Solution"},{"lineNumber":1007,"author":{"gitID":"-"},"content":"** You can modify the existing test methods for `PersonCard` \u0027s to include testing the tag\u0027s color as well."},{"lineNumber":1008,"author":{"gitID":"-"},"content":"** See this https://github.com/se-edu/addressbook-level4/pull/798[PR] for the full solution."},{"lineNumber":1009,"author":{"gitID":"-"},"content":"*** The PR uses the hash code of the tag names to generate a color. This is deliberately designed to ensure consistent colors each time the application runs. You may wish to expand on this design to include additional features, such as allowing users to set their own tag colors, and directly saving the colors to storage, so that tags retain their colors even if the hash code algorithm changes."},{"lineNumber":1010,"author":{"gitID":"-"},"content":"****"},{"lineNumber":1011,"author":{"gitID":"-"},"content":""},{"lineNumber":1012,"author":{"gitID":"-"},"content":". Modify link:{repoURL}/src/main/java/seedu/address/commons/events/ui/NewResultAvailableEvent.java[`NewResultAvailableEvent`] such that link:{repoURL}/src/main/java/seedu/address/ui/ResultDisplay.java[`ResultDisplay`] can show a different style on error (currently it shows the same regardless of errors)."},{"lineNumber":1013,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1014,"author":{"gitID":"-"},"content":"**Before**"},{"lineNumber":1015,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1016,"author":{"gitID":"-"},"content":"image::getting-started-ui-result-before.png[width\u003d\"200\"]"},{"lineNumber":1017,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1018,"author":{"gitID":"-"},"content":"**After**"},{"lineNumber":1019,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1020,"author":{"gitID":"-"},"content":"image::getting-started-ui-result-after.png[width\u003d\"200\"]"},{"lineNumber":1021,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1022,"author":{"gitID":"-"},"content":"****"},{"lineNumber":1023,"author":{"gitID":"-"},"content":"* Hints"},{"lineNumber":1024,"author":{"gitID":"-"},"content":"** link:{repoURL}/src/main/java/seedu/address/commons/events/ui/NewResultAvailableEvent.java[`NewResultAvailableEvent`] is raised by link:{repoURL}/src/main/java/seedu/address/ui/CommandBox.java[`CommandBox`] which also knows whether the result is a success or failure, and is caught by link:{repoURL}/src/main/java/seedu/address/ui/ResultDisplay.java[`ResultDisplay`] which is where we want to change the style to."},{"lineNumber":1025,"author":{"gitID":"-"},"content":"** Refer to link:{repoURL}/src/main/java/seedu/address/ui/CommandBox.java[`CommandBox`] for an example on how to display an error."},{"lineNumber":1026,"author":{"gitID":"-"},"content":"* Solution"},{"lineNumber":1027,"author":{"gitID":"-"},"content":"** Modify link:{repoURL}/src/main/java/seedu/address/commons/events/ui/NewResultAvailableEvent.java[`NewResultAvailableEvent`] \u0027s constructor so that users of the event can indicate whether an error has occurred."},{"lineNumber":1028,"author":{"gitID":"-"},"content":"** Modify link:{repoURL}/src/main/java/seedu/address/ui/ResultDisplay.java[`ResultDisplay#handleNewResultAvailableEvent(NewResultAvailableEvent)`] to react to this event appropriately."},{"lineNumber":1029,"author":{"gitID":"-"},"content":"** You can write two different kinds of tests to ensure that the functionality works:"},{"lineNumber":1030,"author":{"gitID":"-"},"content":"*** The unit tests for `ResultDisplay` can be modified to include verification of the color."},{"lineNumber":1031,"author":{"gitID":"-"},"content":"*** The system tests link:{repoURL}/src/test/java/systemtests/AddressBookSystemTest.java[`AddressBookSystemTest#assertCommandBoxShowsDefaultStyle() and AddressBookSystemTest#assertCommandBoxShowsErrorStyle()`] to include verification for `ResultDisplay` as well."},{"lineNumber":1032,"author":{"gitID":"-"},"content":"** See this https://github.com/se-edu/addressbook-level4/pull/799[PR] for the full solution."},{"lineNumber":1033,"author":{"gitID":"-"},"content":"*** Do read the commits one at a time if you feel overwhelmed."},{"lineNumber":1034,"author":{"gitID":"-"},"content":"****"},{"lineNumber":1035,"author":{"gitID":"-"},"content":""},{"lineNumber":1036,"author":{"gitID":"-"},"content":". Modify the link:{repoURL}/src/main/java/seedu/address/ui/StatusBarFooter.java[`StatusBarFooter`] to show the total number of people in the address book."},{"lineNumber":1037,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1038,"author":{"gitID":"-"},"content":"**Before**"},{"lineNumber":1039,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1040,"author":{"gitID":"-"},"content":"image::getting-started-ui-status-before.png[width\u003d\"500\"]"},{"lineNumber":1041,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1042,"author":{"gitID":"-"},"content":"**After**"},{"lineNumber":1043,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1044,"author":{"gitID":"-"},"content":"image::getting-started-ui-status-after.png[width\u003d\"500\"]"},{"lineNumber":1045,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1046,"author":{"gitID":"-"},"content":"****"},{"lineNumber":1047,"author":{"gitID":"-"},"content":"* Hints"},{"lineNumber":1048,"author":{"gitID":"-"},"content":"** link:{repoURL}/src/main/resources/view/StatusBarFooter.fxml[`StatusBarFooter.fxml`] will need a new `StatusBar`. Be sure to set the `GridPane.columnIndex` properly for each `StatusBar` to avoid misalignment!"},{"lineNumber":1049,"author":{"gitID":"-"},"content":"** link:{repoURL}/src/main/java/seedu/address/ui/StatusBarFooter.java[`StatusBarFooter`] needs to initialize the status bar on application start, and to update it accordingly whenever the address book is updated."},{"lineNumber":1050,"author":{"gitID":"-"},"content":"* Solution"},{"lineNumber":1051,"author":{"gitID":"-"},"content":"** Modify the constructor of link:{repoURL}/src/main/java/seedu/address/ui/StatusBarFooter.java[`StatusBarFooter`] to take in the number of persons when the application just started."},{"lineNumber":1052,"author":{"gitID":"-"},"content":"** Use link:{repoURL}/src/main/java/seedu/address/ui/StatusBarFooter.java[`StatusBarFooter#handleAddressBookChangedEvent(AddressBookChangedEvent)`] to update the number of persons whenever there are new changes to the addressbook."},{"lineNumber":1053,"author":{"gitID":"-"},"content":"** For tests, modify link:{repoURL}/src/test/java/guitests/guihandles/StatusBarFooterHandle.java[`StatusBarFooterHandle`] by adding a state-saving functionality for the total number of people status, just like what we did for save location and sync status."},{"lineNumber":1054,"author":{"gitID":"-"},"content":"** For system tests, modify link:{repoURL}/src/test/java/systemtests/AddressBookSystemTest.java[`AddressBookSystemTest`] to also verify the new total number of persons status bar."},{"lineNumber":1055,"author":{"gitID":"-"},"content":"** See this https://github.com/se-edu/addressbook-level4/pull/803[PR] for the full solution."},{"lineNumber":1056,"author":{"gitID":"-"},"content":"****"},{"lineNumber":1057,"author":{"gitID":"-"},"content":""},{"lineNumber":1058,"author":{"gitID":"-"},"content":"[discrete]"},{"lineNumber":1059,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d `Storage` component"},{"lineNumber":1060,"author":{"gitID":"-"},"content":""},{"lineNumber":1061,"author":{"gitID":"-"},"content":"*Scenario:* You are in charge of `storage`. For your next project milestone, your team plans to implement a new feature of saving the address book to the cloud. However, the current implementation of the application constantly saves the address book after the execution of each command, which is not ideal if the user is working on limited internet connection. Your team decided that the application should instead save the changes to a temporary local backup file first, and only upload to the cloud after the user closes the application. Your job is to implement a backup API for the address book storage."},{"lineNumber":1062,"author":{"gitID":"-"},"content":""},{"lineNumber":1063,"author":{"gitID":"-"},"content":"[TIP]"},{"lineNumber":1064,"author":{"gitID":"-"},"content":"Do take a look at \u003c\u003cDesign-Storage\u003e\u003e before attempting to modify the `Storage` component."},{"lineNumber":1065,"author":{"gitID":"-"},"content":""},{"lineNumber":1066,"author":{"gitID":"-"},"content":". Add a new method `backupAddressBook(ReadOnlyAddressBook)`, so that the address book can be saved in a fixed temporary location."},{"lineNumber":1067,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1068,"author":{"gitID":"-"},"content":"****"},{"lineNumber":1069,"author":{"gitID":"-"},"content":"* Hint"},{"lineNumber":1070,"author":{"gitID":"-"},"content":"** Add the API method in link:{repoURL}/src/main/java/seedu/address/storage/AddressBookStorage.java[`AddressBookStorage`] interface."},{"lineNumber":1071,"author":{"gitID":"-"},"content":"** Implement the logic in link:{repoURL}/src/main/java/seedu/address/storage/StorageManager.java[`StorageManager`] and link:{repoURL}/src/main/java/seedu/address/storage/XmlAddressBookStorage.java[`XmlAddressBookStorage`] class."},{"lineNumber":1072,"author":{"gitID":"-"},"content":"* Solution"},{"lineNumber":1073,"author":{"gitID":"-"},"content":"** See this https://github.com/se-edu/addressbook-level4/pull/594[PR] for the full solution."},{"lineNumber":1074,"author":{"gitID":"-"},"content":"****"},{"lineNumber":1075,"author":{"gitID":"-"},"content":""},{"lineNumber":1076,"author":{"gitID":"-"},"content":"[[GetStartedProgramming-RemarkCommand]]"},{"lineNumber":1077,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Creating a new command: `remark`"},{"lineNumber":1078,"author":{"gitID":"-"},"content":""},{"lineNumber":1079,"author":{"gitID":"-"},"content":"By creating this command, you will get a chance to learn how to implement a feature end-to-end, touching all major components of the app."},{"lineNumber":1080,"author":{"gitID":"-"},"content":""},{"lineNumber":1081,"author":{"gitID":"-"},"content":"*Scenario:* You are a software maintainer for `addressbook`, as the former developer team has moved on to new projects. The current users of your application have a list of new feature requests that they hope the software will eventually have. The most popular request is to allow adding additional comments/notes about a particular contact, by providing a flexible `remark` field for each contact, rather than relying on tags alone. After designing the specification for the `remark` command, you are convinced that this feature is worth implementing. Your job is to implement the `remark` command."},{"lineNumber":1082,"author":{"gitID":"-"},"content":""},{"lineNumber":1083,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Description"},{"lineNumber":1084,"author":{"gitID":"-"},"content":"Edits the remark for a person specified in the `INDEX`. +"},{"lineNumber":1085,"author":{"gitID":"-"},"content":"Format: `remark INDEX r/[REMARK]`"},{"lineNumber":1086,"author":{"gitID":"-"},"content":""},{"lineNumber":1087,"author":{"gitID":"-"},"content":"Examples:"},{"lineNumber":1088,"author":{"gitID":"-"},"content":""},{"lineNumber":1089,"author":{"gitID":"-"},"content":"* `remark 1 r/Likes to drink coffee.` +"},{"lineNumber":1090,"author":{"gitID":"-"},"content":"Edits the remark for the first person to `Likes to drink coffee.`"},{"lineNumber":1091,"author":{"gitID":"-"},"content":"* `remark 1 r/` +"},{"lineNumber":1092,"author":{"gitID":"-"},"content":"Removes the remark for the first person."},{"lineNumber":1093,"author":{"gitID":"-"},"content":""},{"lineNumber":1094,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Step-by-step Instructions"},{"lineNumber":1095,"author":{"gitID":"-"},"content":""},{"lineNumber":1096,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d [Step 1] Logic: Teach the app to accept \u0027remark\u0027 which does nothing"},{"lineNumber":1097,"author":{"gitID":"-"},"content":"Let\u0027s start by teaching the application how to parse a `remark` command. We will add the logic of `remark` later."},{"lineNumber":1098,"author":{"gitID":"-"},"content":""},{"lineNumber":1099,"author":{"gitID":"-"},"content":"**Main:**"},{"lineNumber":1100,"author":{"gitID":"-"},"content":""},{"lineNumber":1101,"author":{"gitID":"-"},"content":". Add a `RemarkCommand` that extends link:{repoURL}/src/main/java/seedu/address/logic/commands/UndoableCommand.java[`UndoableCommand`]. Upon execution, it should just throw an `Exception`."},{"lineNumber":1102,"author":{"gitID":"-"},"content":". Modify link:{repoURL}/src/main/java/seedu/address/logic/parser/AddressBookParser.java[`AddressBookParser`] to accept a `RemarkCommand`."},{"lineNumber":1103,"author":{"gitID":"-"},"content":""},{"lineNumber":1104,"author":{"gitID":"-"},"content":"**Tests:**"},{"lineNumber":1105,"author":{"gitID":"-"},"content":""},{"lineNumber":1106,"author":{"gitID":"-"},"content":". Add `RemarkCommandTest` that tests that `executeUndoableCommand()` throws an Exception."},{"lineNumber":1107,"author":{"gitID":"-"},"content":". Add new test method to link:{repoURL}/src/test/java/seedu/address/logic/parser/AddressBookParserTest.java[`AddressBookParserTest`], which tests that typing \"remark\" returns an instance of `RemarkCommand`."},{"lineNumber":1108,"author":{"gitID":"-"},"content":""},{"lineNumber":1109,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d [Step 2] Logic: Teach the app to accept \u0027remark\u0027 arguments"},{"lineNumber":1110,"author":{"gitID":"-"},"content":"Let\u0027s teach the application to parse arguments that our `remark` command will accept. E.g. `1 r/Likes to drink coffee.`"},{"lineNumber":1111,"author":{"gitID":"-"},"content":""},{"lineNumber":1112,"author":{"gitID":"-"},"content":"**Main:**"},{"lineNumber":1113,"author":{"gitID":"-"},"content":""},{"lineNumber":1114,"author":{"gitID":"-"},"content":". Modify `RemarkCommand` to take in an `Index` and `String` and print those two parameters as the error message."},{"lineNumber":1115,"author":{"gitID":"-"},"content":". Add `RemarkCommandParser` that knows how to parse two arguments, one index and one with prefix \u0027r/\u0027."},{"lineNumber":1116,"author":{"gitID":"-"},"content":". Modify link:{repoURL}/src/main/java/seedu/address/logic/parser/AddressBookParser.java[`AddressBookParser`] to use the newly implemented `RemarkCommandParser`."},{"lineNumber":1117,"author":{"gitID":"-"},"content":""},{"lineNumber":1118,"author":{"gitID":"-"},"content":"**Tests:**"},{"lineNumber":1119,"author":{"gitID":"-"},"content":""},{"lineNumber":1120,"author":{"gitID":"-"},"content":". Modify `RemarkCommandTest` to test the `RemarkCommand#equals()` method."},{"lineNumber":1121,"author":{"gitID":"-"},"content":". Add `RemarkCommandParserTest` that tests different boundary values"},{"lineNumber":1122,"author":{"gitID":"-"},"content":"for `RemarkCommandParser`."},{"lineNumber":1123,"author":{"gitID":"-"},"content":". Modify link:{repoURL}/src/test/java/seedu/address/logic/parser/AddressBookParserTest.java[`AddressBookParserTest`] to test that the correct command is generated according to the user input."},{"lineNumber":1124,"author":{"gitID":"-"},"content":""},{"lineNumber":1125,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d [Step 3] Ui: Add a placeholder for remark in `PersonCard`"},{"lineNumber":1126,"author":{"gitID":"-"},"content":"Let\u0027s add a placeholder on all our link:{repoURL}/src/main/java/seedu/address/ui/PersonCard.java[`PersonCard`] s to display a remark for each person later."},{"lineNumber":1127,"author":{"gitID":"-"},"content":""},{"lineNumber":1128,"author":{"gitID":"-"},"content":"**Main:**"},{"lineNumber":1129,"author":{"gitID":"-"},"content":""},{"lineNumber":1130,"author":{"gitID":"-"},"content":". Add a `Label` with any random text inside link:{repoURL}/src/main/resources/view/PersonListCard.fxml[`PersonListCard.fxml`]."},{"lineNumber":1131,"author":{"gitID":"-"},"content":". Add FXML annotation in link:{repoURL}/src/main/java/seedu/address/ui/PersonCard.java[`PersonCard`] to tie the variable to the actual label."},{"lineNumber":1132,"author":{"gitID":"-"},"content":""},{"lineNumber":1133,"author":{"gitID":"-"},"content":"**Tests:**"},{"lineNumber":1134,"author":{"gitID":"-"},"content":""},{"lineNumber":1135,"author":{"gitID":"-"},"content":". Modify link:{repoURL}/src/test/java/guitests/guihandles/PersonCardHandle.java[`PersonCardHandle`] so that future tests can read the contents of the remark label."},{"lineNumber":1136,"author":{"gitID":"-"},"content":""},{"lineNumber":1137,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d [Step 4] Model: Add `Remark` class"},{"lineNumber":1138,"author":{"gitID":"-"},"content":"We have to properly encapsulate the remark in our link:{repoURL}/src/main/java/seedu/address/model/person/Person.java[`Person`] class. Instead of just using a `String`, let\u0027s follow the conventional class structure that the codebase already uses by adding a `Remark` class."},{"lineNumber":1139,"author":{"gitID":"-"},"content":""},{"lineNumber":1140,"author":{"gitID":"-"},"content":"**Main:**"},{"lineNumber":1141,"author":{"gitID":"-"},"content":""},{"lineNumber":1142,"author":{"gitID":"-"},"content":". Add `Remark` to model component (you can copy from link:{repoURL}/src/main/java/seedu/address/model/person/Address.java[`Address`], remove the regex and change the names accordingly)."},{"lineNumber":1143,"author":{"gitID":"-"},"content":". Modify `RemarkCommand` to now take in a `Remark` instead of a `String`."},{"lineNumber":1144,"author":{"gitID":"-"},"content":""},{"lineNumber":1145,"author":{"gitID":"-"},"content":"**Tests:**"},{"lineNumber":1146,"author":{"gitID":"-"},"content":""},{"lineNumber":1147,"author":{"gitID":"-"},"content":". Add test for `Remark`, to test the `Remark#equals()` method."},{"lineNumber":1148,"author":{"gitID":"-"},"content":""},{"lineNumber":1149,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d [Step 5] Model: Modify `Person` to support a `Remark` field"},{"lineNumber":1150,"author":{"gitID":"-"},"content":"Now we have the `Remark` class, we need to actually use it inside link:{repoURL}/src/main/java/seedu/address/model/person/Person.java[`Person`]."},{"lineNumber":1151,"author":{"gitID":"-"},"content":""},{"lineNumber":1152,"author":{"gitID":"-"},"content":"**Main:**"},{"lineNumber":1153,"author":{"gitID":"-"},"content":""},{"lineNumber":1154,"author":{"gitID":"-"},"content":". Add `getRemark()` in link:{repoURL}/src/main/java/seedu/address/model/person/Person.java[`Person`]."},{"lineNumber":1155,"author":{"gitID":"-"},"content":". You may assume that the user will not be able to use the `add` and `edit` commands to modify the remarks field (i.e. the person will be created without a remark)."},{"lineNumber":1156,"author":{"gitID":"-"},"content":". Modify link:{repoURL}/src/main/java/seedu/address/model/util/SampleDataUtil.java/[`SampleDataUtil`] to add remarks for the sample data (delete your `addressBook.xml` so that the application will load the sample data when you launch it.)"},{"lineNumber":1157,"author":{"gitID":"-"},"content":""},{"lineNumber":1158,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d [Step 6] Storage: Add `Remark` field to `XmlAdaptedPerson` class"},{"lineNumber":1159,"author":{"gitID":"-"},"content":"We now have `Remark` s for `Person` s, but they will be gone when we exit the application. Let\u0027s modify link:{repoURL}/src/main/java/seedu/address/storage/XmlAdaptedPerson.java[`XmlAdaptedPerson`] to include a `Remark` field so that it will be saved."},{"lineNumber":1160,"author":{"gitID":"-"},"content":""},{"lineNumber":1161,"author":{"gitID":"-"},"content":"**Main:**"},{"lineNumber":1162,"author":{"gitID":"-"},"content":""},{"lineNumber":1163,"author":{"gitID":"-"},"content":". Add a new Xml field for `Remark`."},{"lineNumber":1164,"author":{"gitID":"-"},"content":""},{"lineNumber":1165,"author":{"gitID":"-"},"content":"**Tests:**"},{"lineNumber":1166,"author":{"gitID":"-"},"content":""},{"lineNumber":1167,"author":{"gitID":"-"},"content":". Fix `invalidAndValidPersonAddressBook.xml`, `typicalPersonsAddressBook.xml`, `validAddressBook.xml` etc., such that the XML tests will not fail due to a missing `\u003cremark\u003e` element."},{"lineNumber":1168,"author":{"gitID":"-"},"content":""},{"lineNumber":1169,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d [Step 6b] Test: Add withRemark() for `PersonBuilder`"},{"lineNumber":1170,"author":{"gitID":"-"},"content":"Since `Person` can now have a `Remark`, we should add a helper method to link:{repoURL}/src/test/java/seedu/address/testutil/PersonBuilder.java[`PersonBuilder`], so that users are able to create remarks when building a link:{repoURL}/src/main/java/seedu/address/model/person/Person.java[`Person`]."},{"lineNumber":1171,"author":{"gitID":"-"},"content":""},{"lineNumber":1172,"author":{"gitID":"-"},"content":"**Tests:**"},{"lineNumber":1173,"author":{"gitID":"-"},"content":""},{"lineNumber":1174,"author":{"gitID":"-"},"content":". Add a new method `withRemark()` for link:{repoURL}/src/test/java/seedu/address/testutil/PersonBuilder.java[`PersonBuilder`]. This method will create a new `Remark` for the person that it is currently building."},{"lineNumber":1175,"author":{"gitID":"-"},"content":". Try and use the method on any sample `Person` in link:{repoURL}/src/test/java/seedu/address/testutil/TypicalPersons.java[`TypicalPersons`]."},{"lineNumber":1176,"author":{"gitID":"-"},"content":""},{"lineNumber":1177,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d [Step 7] Ui: Connect `Remark` field to `PersonCard`"},{"lineNumber":1178,"author":{"gitID":"-"},"content":"Our remark label in link:{repoURL}/src/main/java/seedu/address/ui/PersonCard.java[`PersonCard`] is still a placeholder. Let\u0027s bring it to life by binding it with the actual `remark` field."},{"lineNumber":1179,"author":{"gitID":"-"},"content":""},{"lineNumber":1180,"author":{"gitID":"-"},"content":"**Main:**"},{"lineNumber":1181,"author":{"gitID":"-"},"content":""},{"lineNumber":1182,"author":{"gitID":"-"},"content":". Modify link:{repoURL}/src/main/java/seedu/address/ui/PersonCard.java[`PersonCard`]\u0027s constructor to bind the `Remark` field to the `Person` \u0027s remark."},{"lineNumber":1183,"author":{"gitID":"-"},"content":""},{"lineNumber":1184,"author":{"gitID":"-"},"content":"**Tests:**"},{"lineNumber":1185,"author":{"gitID":"-"},"content":""},{"lineNumber":1186,"author":{"gitID":"-"},"content":". Modify link:{repoURL}/src/test/java/seedu/address/ui/testutil/GuiTestAssert.java[`GuiTestAssert#assertCardDisplaysPerson(...)`] so that it will compare the now-functioning remark label."},{"lineNumber":1187,"author":{"gitID":"-"},"content":""},{"lineNumber":1188,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d [Step 8] Logic: Implement `RemarkCommand#execute()` logic"},{"lineNumber":1189,"author":{"gitID":"-"},"content":"We now have everything set up... but we still can\u0027t modify the remarks. Let\u0027s finish it up by adding in actual logic for our `remark` command."},{"lineNumber":1190,"author":{"gitID":"-"},"content":""},{"lineNumber":1191,"author":{"gitID":"-"},"content":"**Main:**"},{"lineNumber":1192,"author":{"gitID":"-"},"content":""},{"lineNumber":1193,"author":{"gitID":"-"},"content":". Replace the logic in `RemarkCommand#execute()` (that currently just throws an `Exception`), with the actual logic to modify the remarks of a person."},{"lineNumber":1194,"author":{"gitID":"-"},"content":""},{"lineNumber":1195,"author":{"gitID":"-"},"content":"**Tests:**"},{"lineNumber":1196,"author":{"gitID":"-"},"content":""},{"lineNumber":1197,"author":{"gitID":"-"},"content":". Update `RemarkCommandTest` to test that the `execute()` logic works."},{"lineNumber":1198,"author":{"gitID":"-"},"content":""},{"lineNumber":1199,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Full Solution"},{"lineNumber":1200,"author":{"gitID":"-"},"content":""},{"lineNumber":1201,"author":{"gitID":"-"},"content":"See this https://github.com/se-edu/addressbook-level4/pull/599[PR] for the step-by-step solution."},{"lineNumber":1202,"author":{"gitID":"-"},"content":""},{"lineNumber":1203,"author":{"gitID":"-"},"content":"[appendix]"},{"lineNumber":1204,"author":{"gitID":"-"},"content":"\u003d\u003d Product Scope"},{"lineNumber":1205,"author":{"gitID":"-"},"content":""},{"lineNumber":1206,"author":{"gitID":"-"},"content":"*Target user profile*:"},{"lineNumber":1207,"author":{"gitID":"-"},"content":""},{"lineNumber":1208,"author":{"gitID":"-"},"content":"* campus recruiters that have a need to manage a significant number of student contacts"},{"lineNumber":1209,"author":{"gitID":"-"},"content":"* prefer desktop apps over other types"},{"lineNumber":1210,"author":{"gitID":"-"},"content":"* can type fast"},{"lineNumber":1211,"author":{"gitID":"-"},"content":"* prefers typing over mouse input"},{"lineNumber":1212,"author":{"gitID":"-"},"content":"* is reasonably comfortable using CLI apps"},{"lineNumber":1213,"author":{"gitID":"-"},"content":"* need to keep track of interviews scheduled"},{"lineNumber":1214,"author":{"gitID":"-"},"content":"* want to evaluate students\u0027 performance after interviews to decide who to hire"},{"lineNumber":1215,"author":{"gitID":"-"},"content":""},{"lineNumber":1216,"author":{"gitID":"-"},"content":"*Value proposition*: offers an open source solution to the recruiting process, enables campus recruiters to find the best-fitting candidates easily and allows them to manage student contacts faster than a typical mouse/GUI driven app."},{"lineNumber":1217,"author":{"gitID":"-"},"content":""},{"lineNumber":1218,"author":{"gitID":"kexiaowen"},"content":"*Feature contribution*:"},{"lineNumber":1219,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":1220,"author":{"gitID":"kexiaowen"},"content":"1. Ang Yee Chin"},{"lineNumber":1221,"author":{"gitID":"kexiaowen"},"content":"+"},{"lineNumber":1222,"author":{"gitID":"kexiaowen"},"content":"* Major Feature: UI Scheme"},{"lineNumber":1223,"author":{"gitID":"kexiaowen"},"content":"+"},{"lineNumber":1224,"author":{"gitID":"kexiaowen"},"content":"** Revamps the interface to make it more intuitive and clean"},{"lineNumber":1225,"author":{"gitID":"kexiaowen"},"content":"** Makes the design responsive so that the application page looks good on devices with any screen size"},{"lineNumber":1226,"author":{"gitID":"kexiaowen"},"content":"** Integrates a PDF viewer to display applicants\u0027 resumes"},{"lineNumber":1227,"author":{"gitID":"kexiaowen"},"content":"** Adds a calendar that displays scheduled interviews"},{"lineNumber":1228,"author":{"gitID":"kexiaowen"},"content":"+"},{"lineNumber":1229,"author":{"gitID":"kexiaowen"},"content":"* Minor Features:"},{"lineNumber":1230,"author":{"gitID":"kexiaowen"},"content":"+"},{"lineNumber":1231,"author":{"gitID":"kexiaowen"},"content":"** Adds a `comments` field that allows recruiters to provide additional information"},{"lineNumber":1232,"author":{"gitID":"kexiaowen"},"content":"** Creates radar graphs to help visualise applicants\u0027 performance in interviews"},{"lineNumber":1233,"author":{"gitID":"kexiaowen"},"content":"** Adds a `profile picture` field for applicants"},{"lineNumber":1234,"author":{"gitID":"kexiaowen"},"content":"+"},{"lineNumber":1235,"author":{"gitID":"kexiaowen"},"content":"2. Ke Xiaowen"},{"lineNumber":1236,"author":{"gitID":"kexiaowen"},"content":"+"},{"lineNumber":1237,"author":{"gitID":"kexiaowen"},"content":"* Major Feature: Rating"},{"lineNumber":1238,"author":{"gitID":"kexiaowen"},"content":"+"},{"lineNumber":1239,"author":{"gitID":"kexiaowen"},"content":"** Rates an applicant based on technical, communication, problem solving skills and experience after an interview"},{"lineNumber":1240,"author":{"gitID":"kexiaowen"},"content":"** Allows editing of rating scores"},{"lineNumber":1241,"author":{"gitID":"kexiaowen"},"content":"** Supports deletion of ratings"},{"lineNumber":1242,"author":{"gitID":"kexiaowen"},"content":"** Displays overall ratings for rated applicants"},{"lineNumber":1243,"author":{"gitID":"kexiaowen"},"content":"** Offers keyboard shortcuts to auto-fill prefixes"},{"lineNumber":1244,"author":{"gitID":"kexiaowen"},"content":"+"},{"lineNumber":1245,"author":{"gitID":"kexiaowen"},"content":"* Minor Features:"},{"lineNumber":1246,"author":{"gitID":"kexiaowen"},"content":"+"},{"lineNumber":1247,"author":{"gitID":"kexiaowen"},"content":"** Adds a `job applied` field for applicants"},{"lineNumber":1248,"author":{"gitID":"kexiaowen"},"content":"** Adds a `university` field for applicants"},{"lineNumber":1249,"author":{"gitID":"kexiaowen"},"content":"+"},{"lineNumber":1250,"author":{"gitID":"kexiaowen"},"content":"3. Ma Hongqiang"},{"lineNumber":1251,"author":{"gitID":"kexiaowen"},"content":"+"},{"lineNumber":1252,"author":{"gitID":"kexiaowen"},"content":"* Major Feature: Filter"},{"lineNumber":1253,"author":{"gitID":"kexiaowen"},"content":"+"},{"lineNumber":1254,"author":{"gitID":"kexiaowen"},"content":"** Supports filtering based on the current view of listed persons"},{"lineNumber":1255,"author":{"gitID":"kexiaowen"},"content":"** Allows users to filter fields whose values are either finite or have natural ordering"},{"lineNumber":1256,"author":{"gitID":"kexiaowen"},"content":"** Supports filtering multiple fields at the same time"},{"lineNumber":1257,"author":{"gitID":"kexiaowen"},"content":"+"},{"lineNumber":1258,"author":{"gitID":"kexiaowen"},"content":"* Minor Features:"},{"lineNumber":1259,"author":{"gitID":"kexiaowen"},"content":"+"},{"lineNumber":1260,"author":{"gitID":"kexiaowen"},"content":"** Adds a `expected graduation year` field for applicants"},{"lineNumber":1261,"author":{"gitID":"kexiaowen"},"content":"** Adds a `resume` field for applicants"},{"lineNumber":1262,"author":{"gitID":"kexiaowen"},"content":"+"},{"lineNumber":1263,"author":{"gitID":"kexiaowen"},"content":"4. Tan Heng Yeow"},{"lineNumber":1264,"author":{"gitID":"kexiaowen"},"content":"+"},{"lineNumber":1265,"author":{"gitID":"kexiaowen"},"content":"* Major Feature: Find"},{"lineNumber":1266,"author":{"gitID":"kexiaowen"},"content":"+"},{"lineNumber":1267,"author":{"gitID":"tanhengyeow"},"content":"** Allows users to find all fields that match the exact keyword input"},{"lineNumber":1268,"author":{"gitID":"tanhengyeow"},"content":"** Supports finding all fields that contains the keyword input"},{"lineNumber":1269,"author":{"gitID":"tanhengyeow"},"content":"** Supports finding all fields that start with the keyword input"},{"lineNumber":1270,"author":{"gitID":"tanhengyeow"},"content":"** Supports finding all fields that end with the keyword input"},{"lineNumber":1271,"author":{"gitID":"tanhengyeow"},"content":"** Adds a fuzzy find function that enables users to find all fields that are a fuzzy match of the keyword input"},{"lineNumber":1272,"author":{"gitID":"kexiaowen"},"content":"+"},{"lineNumber":1273,"author":{"gitID":"kexiaowen"},"content":"* Minor Features:"},{"lineNumber":1274,"author":{"gitID":"kexiaowen"},"content":"+"},{"lineNumber":1275,"author":{"gitID":"kexiaowen"},"content":"** Adds a `major` field for applicants"},{"lineNumber":1276,"author":{"gitID":"kexiaowen"},"content":"** Adds a `cGPA` field for applicants"},{"lineNumber":1277,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":1278,"author":{"gitID":"-"},"content":"[appendix]"},{"lineNumber":1279,"author":{"gitID":"-"},"content":"\u003d\u003d User Stories"},{"lineNumber":1280,"author":{"gitID":"-"},"content":""},{"lineNumber":1281,"author":{"gitID":"-"},"content":"Priorities: High (must have) - `* * \\*`, Medium (nice to have) - `* \\*`, Low (unlikely to have) - `*`"},{"lineNumber":1282,"author":{"gitID":"-"},"content":""},{"lineNumber":1283,"author":{"gitID":"-"},"content":"[width\u003d\"59%\",cols\u003d\"22%,\u003c23%,\u003c25%,\u003c30%\",options\u003d\"header\",]"},{"lineNumber":1284,"author":{"gitID":"-"},"content":"|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":1285,"author":{"gitID":"-"},"content":"|Priority |As a ... |I want to ... |So that I can..."},{"lineNumber":1286,"author":{"gitID":"-"},"content":"|`* * *` |new user |see usage instructions |refer to instructions when I forget how to use the App"},{"lineNumber":1287,"author":{"gitID":"-"},"content":""},{"lineNumber":1288,"author":{"gitID":"-"},"content":"|`* * *` |user |add a new student |manage details of students, schedule interviews and track job offers."},{"lineNumber":1289,"author":{"gitID":"-"},"content":""},{"lineNumber":1290,"author":{"gitID":"-"},"content":"|`* * *` |user |delete a student |remove entries that I no longer need"},{"lineNumber":1291,"author":{"gitID":"-"},"content":""},{"lineNumber":1292,"author":{"gitID":"-"},"content":"|`* * *` |user |find a student by name |locate details of students without having to go through the entire list"},{"lineNumber":1293,"author":{"gitID":"-"},"content":""},{"lineNumber":1294,"author":{"gitID":"-"},"content":"|`* * *` |user |find a student by some characters |locate details of students without having to remember his/her full name"},{"lineNumber":1295,"author":{"gitID":"-"},"content":""},{"lineNumber":1296,"author":{"gitID":"-"},"content":"|`* * *` |user |filter a student by \u003c\u003cfields,fields\u003e\u003e |locate details of students in a more optimized view"},{"lineNumber":1297,"author":{"gitID":"-"},"content":""},{"lineNumber":1298,"author":{"gitID":"-"},"content":"|`* * *` |user |add profile photo of a student |recognize the student easily"},{"lineNumber":1299,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":1300,"author":{"gitID":"-"},"content":"|`* * *` |user |add a student\u0027s expected graduation date |gauge how far along the student is in his/her degree"},{"lineNumber":1301,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":1302,"author":{"gitID":"-"},"content":"|`* * *` |user |add a student\u0027s interview date |keep track of interviews scheduled"},{"lineNumber":1303,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":1304,"author":{"gitID":"-"},"content":"|`* * *` |user |add a student\u0027s resume |view the competency of the student"},{"lineNumber":1305,"author":{"gitID":"-"},"content":""},{"lineNumber":1306,"author":{"gitID":"-"},"content":"|`* * *` |user |edit a student\u0027s \u003c\u003cstatus,status\u003e\u003e |indicate whether students are still being considered or rejected"},{"lineNumber":1307,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":1308,"author":{"gitID":"-"},"content":"|`* * *` |user |add a remark |update additional information about the student"},{"lineNumber":1309,"author":{"gitID":"-"},"content":""},{"lineNumber":1310,"author":{"gitID":"-"},"content":"|`* * *` |user |add a \u003c\u003crating,rating\u003e\u003e |evaluate the performance of the student after an interview"},{"lineNumber":1311,"author":{"gitID":"-"},"content":""},{"lineNumber":1312,"author":{"gitID":"-"},"content":"|`* * *` |user |sort students according to their interview performance |decide on the best-fitting students"},{"lineNumber":1313,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":1314,"author":{"gitID":"-"},"content":"|`* * *` |user |add tags for students |categorise the students better"},{"lineNumber":1315,"author":{"gitID":"-"},"content":""},{"lineNumber":1316,"author":{"gitID":"-"},"content":"|`* * *` |user |delete students with a particular tag |remove groups of student contacts that I no longer need"},{"lineNumber":1317,"author":{"gitID":"-"},"content":""},{"lineNumber":1318,"author":{"gitID":"-"},"content":"|`* * *` |user |undo my previous command |Restore the data to its previous state before the command was executed"},{"lineNumber":1319,"author":{"gitID":"-"},"content":""},{"lineNumber":1320,"author":{"gitID":"-"},"content":"|`* * *` |user |redo the previously undone command |Reverse the most recent undo command"},{"lineNumber":1321,"author":{"gitID":"-"},"content":""},{"lineNumber":1322,"author":{"gitID":"-"},"content":"|`* *` |user |view all interviews scheduled in a calendar |have a overview of all interviews arranged"},{"lineNumber":1323,"author":{"gitID":"-"},"content":""},{"lineNumber":1324,"author":{"gitID":"-"},"content":"|`* *` |user |send mass emails to successful/unsuccessful candidates |make recruitment easier"},{"lineNumber":1325,"author":{"gitID":"-"},"content":""},{"lineNumber":1326,"author":{"gitID":"-"},"content":"|`* *` |user |have syntax highlight for my commands |check my command easily and spot errors faster"},{"lineNumber":1327,"author":{"gitID":"-"},"content":""},{"lineNumber":1328,"author":{"gitID":"-"},"content":"|`* *` |user |change colour scheme of the interface |customise it according to my preferences"},{"lineNumber":1329,"author":{"gitID":"-"},"content":""},{"lineNumber":1330,"author":{"gitID":"-"},"content":"|`* *` |user who values efficiency |see a list of suggested commands when I key in the command |select the command I want without having to type out the entire command"},{"lineNumber":1331,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":1332,"author":{"gitID":"-"},"content":"|`* *` |user |hide \u003c\u003cprivate-contact-detail,private contact details\u003e\u003e by default |minimize chance of someone else seeing them by accident"},{"lineNumber":1333,"author":{"gitID":"-"},"content":""},{"lineNumber":1334,"author":{"gitID":"-"},"content":"|`*` |user |visualise a student\u0027s performance using a radar graph|easily understand his/her performance"},{"lineNumber":1335,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":1336,"author":{"gitID":"-"},"content":"|`*` |user with many persons in the address book |sort persons by name |locate a person easily"},{"lineNumber":1337,"author":{"gitID":"-"},"content":""},{"lineNumber":1338,"author":{"gitID":"-"},"content":"|`*` |careless user |auto-correct typos in my command |save time checking the command manually"},{"lineNumber":1339,"author":{"gitID":"-"},"content":""},{"lineNumber":1340,"author":{"gitID":"-"},"content":"|`*` |cautious user |encrypt student\u0027s data stored |ensure sensitive information will not leak out"},{"lineNumber":1341,"author":{"gitID":"-"},"content":""},{"lineNumber":1342,"author":{"gitID":"-"},"content":"|`*` |user |send and receive emails within the application |save time switching between different applications"},{"lineNumber":1343,"author":{"gitID":"-"},"content":"|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":1344,"author":{"gitID":"-"},"content":""},{"lineNumber":1345,"author":{"gitID":"-"},"content":"[appendix]"},{"lineNumber":1346,"author":{"gitID":"-"},"content":"\u003d\u003d Use Cases"},{"lineNumber":1347,"author":{"gitID":"-"},"content":""},{"lineNumber":1348,"author":{"gitID":"-"},"content":"(For all use cases below, the *System* is the `AddressBook` and the *Actor* is the `user`, unless specified otherwise)"},{"lineNumber":1349,"author":{"gitID":"-"},"content":""},{"lineNumber":1350,"author":{"gitID":"-"},"content":"[discrete]"},{"lineNumber":1351,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Use case: Delete person"},{"lineNumber":1352,"author":{"gitID":"-"},"content":""},{"lineNumber":1353,"author":{"gitID":"-"},"content":"*MSS*"},{"lineNumber":1354,"author":{"gitID":"-"},"content":""},{"lineNumber":1355,"author":{"gitID":"-"},"content":"1.  User requests to list persons"},{"lineNumber":1356,"author":{"gitID":"-"},"content":"2.  AddressBook shows a list of persons"},{"lineNumber":1357,"author":{"gitID":"-"},"content":"3.  User requests to delete a specific person in the list"},{"lineNumber":1358,"author":{"gitID":"-"},"content":"4.  AddressBook deletes the person"},{"lineNumber":1359,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1360,"author":{"gitID":"-"},"content":"Use case ends."},{"lineNumber":1361,"author":{"gitID":"-"},"content":""},{"lineNumber":1362,"author":{"gitID":"-"},"content":"*Extensions*"},{"lineNumber":1363,"author":{"gitID":"-"},"content":""},{"lineNumber":1364,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1365,"author":{"gitID":"-"},"content":"* 2a. The list is empty."},{"lineNumber":1366,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1367,"author":{"gitID":"-"},"content":"Use case ends."},{"lineNumber":1368,"author":{"gitID":"-"},"content":""},{"lineNumber":1369,"author":{"gitID":"-"},"content":"* 3a. The given index is invalid."},{"lineNumber":1370,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1371,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1372,"author":{"gitID":"-"},"content":"** 3a1. AddressBook shows an error message."},{"lineNumber":1373,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1374,"author":{"gitID":"-"},"content":"Use case resumes at step 2."},{"lineNumber":1375,"author":{"gitID":"-"},"content":""},{"lineNumber":1376,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Use case: Add person"},{"lineNumber":1377,"author":{"gitID":"-"},"content":""},{"lineNumber":1378,"author":{"gitID":"-"},"content":"*MSS*"},{"lineNumber":1379,"author":{"gitID":"-"},"content":""},{"lineNumber":1380,"author":{"gitID":"-"},"content":"1.  User requests to add a new person in the list"},{"lineNumber":1381,"author":{"gitID":"-"},"content":"2.  AddressBook adds the new person into the address book."},{"lineNumber":1382,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1383,"author":{"gitID":"-"},"content":"Use case ends."},{"lineNumber":1384,"author":{"gitID":"-"},"content":""},{"lineNumber":1385,"author":{"gitID":"-"},"content":"*Extensions*"},{"lineNumber":1386,"author":{"gitID":"-"},"content":""},{"lineNumber":1387,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1388,"author":{"gitID":"-"},"content":"* 1a. The command is invalid"},{"lineNumber":1389,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1390,"author":{"gitID":"-"},"content":"Use case ends."},{"lineNumber":1391,"author":{"gitID":"-"},"content":""},{"lineNumber":1392,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Use case: Find person by name"},{"lineNumber":1393,"author":{"gitID":"-"},"content":""},{"lineNumber":1394,"author":{"gitID":"-"},"content":"*MSS*"},{"lineNumber":1395,"author":{"gitID":"-"},"content":""},{"lineNumber":1396,"author":{"gitID":"-"},"content":"1.  User enters the command with the keyword as the name"},{"lineNumber":1397,"author":{"gitID":"-"},"content":"2.  AddressBook shows the list of persons with the keyword"},{"lineNumber":1398,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1399,"author":{"gitID":"-"},"content":"Use case ends."},{"lineNumber":1400,"author":{"gitID":"-"},"content":""},{"lineNumber":1401,"author":{"gitID":"-"},"content":"*Extensions*"},{"lineNumber":1402,"author":{"gitID":"-"},"content":""},{"lineNumber":1403,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1404,"author":{"gitID":"-"},"content":"* 1a. The keyword is not found in the list of persons"},{"lineNumber":1405,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1406,"author":{"gitID":"-"},"content":"Use case ends."},{"lineNumber":1407,"author":{"gitID":"-"},"content":""},{"lineNumber":1408,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Use case: Find person by some letters"},{"lineNumber":1409,"author":{"gitID":"-"},"content":""},{"lineNumber":1410,"author":{"gitID":"-"},"content":"*MSS*"},{"lineNumber":1411,"author":{"gitID":"-"},"content":""},{"lineNumber":1412,"author":{"gitID":"-"},"content":"1.  User enters the command with the some letters as the name"},{"lineNumber":1413,"author":{"gitID":"-"},"content":"2.  AddressBook shows the list of persons with fields containing the letters"},{"lineNumber":1414,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1415,"author":{"gitID":"-"},"content":"Use case ends."},{"lineNumber":1416,"author":{"gitID":"-"},"content":""},{"lineNumber":1417,"author":{"gitID":"-"},"content":"*Extensions*"},{"lineNumber":1418,"author":{"gitID":"-"},"content":""},{"lineNumber":1419,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1420,"author":{"gitID":"-"},"content":"* 1a. There is no such letter found in the list of persons."},{"lineNumber":1421,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1422,"author":{"gitID":"-"},"content":"Use case ends."},{"lineNumber":1423,"author":{"gitID":"-"},"content":""},{"lineNumber":1424,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Use case: Filter a person by field"},{"lineNumber":1425,"author":{"gitID":"-"},"content":""},{"lineNumber":1426,"author":{"gitID":"-"},"content":"*MSS*"},{"lineNumber":1427,"author":{"gitID":"-"},"content":""},{"lineNumber":1428,"author":{"gitID":"-"},"content":"1.  User requests to filter a list of persons that matches the filter"},{"lineNumber":1429,"author":{"gitID":"-"},"content":"2.  AddressBook shows the list of persons that matches the filter"},{"lineNumber":1430,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1431,"author":{"gitID":"-"},"content":"Use case ends."},{"lineNumber":1432,"author":{"gitID":"-"},"content":""},{"lineNumber":1433,"author":{"gitID":"-"},"content":"*Extensions*"},{"lineNumber":1434,"author":{"gitID":"-"},"content":""},{"lineNumber":1435,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1436,"author":{"gitID":"-"},"content":"* 1a. The filter condition is invalid"},{"lineNumber":1437,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1438,"author":{"gitID":"-"},"content":"Use case ends."},{"lineNumber":1439,"author":{"gitID":"-"},"content":""},{"lineNumber":1440,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Use case: Add resume"},{"lineNumber":1441,"author":{"gitID":"-"},"content":""},{"lineNumber":1442,"author":{"gitID":"-"},"content":"*MSS*"},{"lineNumber":1443,"author":{"gitID":"-"},"content":""},{"lineNumber":1444,"author":{"gitID":"-"},"content":"1.  User requests to list persons"},{"lineNumber":1445,"author":{"gitID":"-"},"content":"2.  AddressBook shows a list of persons"},{"lineNumber":1446,"author":{"gitID":"-"},"content":"3.  User requests to add a resume to the person in the list"},{"lineNumber":1447,"author":{"gitID":"-"},"content":"4.  AddressBook adds a resume to the person"},{"lineNumber":1448,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1449,"author":{"gitID":"-"},"content":"Use case ends."},{"lineNumber":1450,"author":{"gitID":"-"},"content":""},{"lineNumber":1451,"author":{"gitID":"-"},"content":"*Extensions*"},{"lineNumber":1452,"author":{"gitID":"-"},"content":""},{"lineNumber":1453,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1454,"author":{"gitID":"-"},"content":"* 2a. The list is empty."},{"lineNumber":1455,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1456,"author":{"gitID":"-"},"content":"Use case ends."},{"lineNumber":1457,"author":{"gitID":"-"},"content":""},{"lineNumber":1458,"author":{"gitID":"-"},"content":"* 3a. The given index is invalid."},{"lineNumber":1459,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1460,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1461,"author":{"gitID":"-"},"content":"** 3a1. AddressBook shows an error message."},{"lineNumber":1462,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1463,"author":{"gitID":"-"},"content":"Use case resumes at step 2."},{"lineNumber":1464,"author":{"gitID":"-"},"content":""},{"lineNumber":1465,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Use case: Add profile picture"},{"lineNumber":1466,"author":{"gitID":"-"},"content":""},{"lineNumber":1467,"author":{"gitID":"-"},"content":"*MSS*"},{"lineNumber":1468,"author":{"gitID":"-"},"content":""},{"lineNumber":1469,"author":{"gitID":"-"},"content":"1.  User requests to list persons"},{"lineNumber":1470,"author":{"gitID":"-"},"content":"2.  AddressBook shows a list of persons"},{"lineNumber":1471,"author":{"gitID":"-"},"content":"3.  User requests to add a profile picture to a specific person in the list"},{"lineNumber":1472,"author":{"gitID":"-"},"content":"4.  AddressBook adds a profile picture to the person in the list"},{"lineNumber":1473,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1474,"author":{"gitID":"-"},"content":"Use case ends."},{"lineNumber":1475,"author":{"gitID":"-"},"content":""},{"lineNumber":1476,"author":{"gitID":"-"},"content":"*Extensions*"},{"lineNumber":1477,"author":{"gitID":"-"},"content":""},{"lineNumber":1478,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1479,"author":{"gitID":"-"},"content":"* 2a. The list is empty."},{"lineNumber":1480,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1481,"author":{"gitID":"-"},"content":"Use case ends."},{"lineNumber":1482,"author":{"gitID":"-"},"content":""},{"lineNumber":1483,"author":{"gitID":"-"},"content":"* 3a. The given index is invalid."},{"lineNumber":1484,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1485,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1486,"author":{"gitID":"-"},"content":"** 3a1. AddressBook shows an error message."},{"lineNumber":1487,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1488,"author":{"gitID":"-"},"content":"Use case resumes at step 2."},{"lineNumber":1489,"author":{"gitID":"-"},"content":""},{"lineNumber":1490,"author":{"gitID":"-"},"content":"* 3b. The given path to the image is invalid."},{"lineNumber":1491,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1492,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1493,"author":{"gitID":"-"},"content":"** 3b1. AddressBook shows an error message."},{"lineNumber":1494,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1495,"author":{"gitID":"-"},"content":"Use case resumes at step 2."},{"lineNumber":1496,"author":{"gitID":"-"},"content":""},{"lineNumber":1497,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Use case: Add rating"},{"lineNumber":1498,"author":{"gitID":"-"},"content":""},{"lineNumber":1499,"author":{"gitID":"-"},"content":"*MSS*"},{"lineNumber":1500,"author":{"gitID":"-"},"content":""},{"lineNumber":1501,"author":{"gitID":"-"},"content":"1.  User requests to list persons"},{"lineNumber":1502,"author":{"gitID":"-"},"content":"2.  AddressBook shows a list of persons"},{"lineNumber":1503,"author":{"gitID":"-"},"content":"3.  User requests to add a rating to the specific person in the list"},{"lineNumber":1504,"author":{"gitID":"-"},"content":"4.  AddressBook adds a rating to the person"},{"lineNumber":1505,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1506,"author":{"gitID":"-"},"content":"Use case ends."},{"lineNumber":1507,"author":{"gitID":"-"},"content":""},{"lineNumber":1508,"author":{"gitID":"-"},"content":"*Extensions*"},{"lineNumber":1509,"author":{"gitID":"-"},"content":""},{"lineNumber":1510,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1511,"author":{"gitID":"-"},"content":"* 2a. The list is empty."},{"lineNumber":1512,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1513,"author":{"gitID":"-"},"content":"Use case ends."},{"lineNumber":1514,"author":{"gitID":"-"},"content":""},{"lineNumber":1515,"author":{"gitID":"-"},"content":"* 3a. The given index is invalid."},{"lineNumber":1516,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1517,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1518,"author":{"gitID":"-"},"content":"** 3a1. AddressBook shows an error message."},{"lineNumber":1519,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1520,"author":{"gitID":"-"},"content":"Use case resumes at step 2."},{"lineNumber":1521,"author":{"gitID":"-"},"content":""},{"lineNumber":1522,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Use case: Add remark"},{"lineNumber":1523,"author":{"gitID":"-"},"content":""},{"lineNumber":1524,"author":{"gitID":"-"},"content":"*MSS*"},{"lineNumber":1525,"author":{"gitID":"-"},"content":""},{"lineNumber":1526,"author":{"gitID":"-"},"content":"1.  User requests to list persons"},{"lineNumber":1527,"author":{"gitID":"-"},"content":"2.  AddressBook shows a list of persons"},{"lineNumber":1528,"author":{"gitID":"-"},"content":"3.  User requests to add a remark to the person in the list"},{"lineNumber":1529,"author":{"gitID":"-"},"content":"4.  AddressBook adds a remark to the person"},{"lineNumber":1530,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1531,"author":{"gitID":"-"},"content":"Use case ends."},{"lineNumber":1532,"author":{"gitID":"-"},"content":""},{"lineNumber":1533,"author":{"gitID":"-"},"content":"*Extensions*"},{"lineNumber":1534,"author":{"gitID":"-"},"content":""},{"lineNumber":1535,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1536,"author":{"gitID":"-"},"content":"* 2a. The list is empty."},{"lineNumber":1537,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1538,"author":{"gitID":"-"},"content":"Use case ends."},{"lineNumber":1539,"author":{"gitID":"-"},"content":""},{"lineNumber":1540,"author":{"gitID":"-"},"content":"* 3a. The given index is invalid."},{"lineNumber":1541,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1542,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1543,"author":{"gitID":"-"},"content":"** 3a1. AddressBook shows an error message."},{"lineNumber":1544,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1545,"author":{"gitID":"-"},"content":"Use case resumes at step 2."},{"lineNumber":1546,"author":{"gitID":"-"},"content":""},{"lineNumber":1547,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Use case: Add interview date"},{"lineNumber":1548,"author":{"gitID":"-"},"content":""},{"lineNumber":1549,"author":{"gitID":"-"},"content":"*MSS*"},{"lineNumber":1550,"author":{"gitID":"-"},"content":""},{"lineNumber":1551,"author":{"gitID":"-"},"content":"1.  User requests to list persons"},{"lineNumber":1552,"author":{"gitID":"-"},"content":"2.  AddressBook shows a list of persons"},{"lineNumber":1553,"author":{"gitID":"-"},"content":"3.  User requests to add an interview date to the person in the list"},{"lineNumber":1554,"author":{"gitID":"-"},"content":"4.  AddressBook adds an interview date to the person"},{"lineNumber":1555,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1556,"author":{"gitID":"-"},"content":"Use case ends."},{"lineNumber":1557,"author":{"gitID":"-"},"content":""},{"lineNumber":1558,"author":{"gitID":"-"},"content":"*Extensions*"},{"lineNumber":1559,"author":{"gitID":"-"},"content":""},{"lineNumber":1560,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1561,"author":{"gitID":"-"},"content":"* 2a. The list is empty."},{"lineNumber":1562,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1563,"author":{"gitID":"-"},"content":"Use case ends."},{"lineNumber":1564,"author":{"gitID":"-"},"content":""},{"lineNumber":1565,"author":{"gitID":"-"},"content":"* 3a. The given index is invalid."},{"lineNumber":1566,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1567,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1568,"author":{"gitID":"-"},"content":"** 3a1. AddressBook shows an error message."},{"lineNumber":1569,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1570,"author":{"gitID":"-"},"content":"Use case resumes at step 2."},{"lineNumber":1571,"author":{"gitID":"-"},"content":""},{"lineNumber":1572,"author":{"gitID":"-"},"content":"[appendix]"},{"lineNumber":1573,"author":{"gitID":"-"},"content":"\u003d\u003d Non Functional Requirements"},{"lineNumber":1574,"author":{"gitID":"-"},"content":""},{"lineNumber":1575,"author":{"gitID":"-"},"content":".  Should work on any \u003c\u003cmainstream-os,mainstream OS\u003e\u003e as long as it has Java `1.8.0_60` or higher installed."},{"lineNumber":1576,"author":{"gitID":"-"},"content":".  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage."},{"lineNumber":1577,"author":{"gitID":"-"},"content":".  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse."},{"lineNumber":1578,"author":{"gitID":"-"},"content":".  Should follow Java coding standards/styles."},{"lineNumber":1579,"author":{"gitID":"-"},"content":".  Should work on both 32-bit and 64-bit environments."},{"lineNumber":1580,"author":{"gitID":"-"},"content":".  Should work without access to the internet."},{"lineNumber":1581,"author":{"gitID":"-"},"content":".  Should work without external software."},{"lineNumber":1582,"author":{"gitID":"-"},"content":""},{"lineNumber":1583,"author":{"gitID":"-"},"content":"[appendix]"},{"lineNumber":1584,"author":{"gitID":"-"},"content":"\u003d\u003d Glossary"},{"lineNumber":1585,"author":{"gitID":"-"},"content":""},{"lineNumber":1586,"author":{"gitID":"-"},"content":"[[mainstream-os]] Mainstream OS::"},{"lineNumber":1587,"author":{"gitID":"-"},"content":"Windows, Linux, Unix, OS-X"},{"lineNumber":1588,"author":{"gitID":"-"},"content":""},{"lineNumber":1589,"author":{"gitID":"-"},"content":"[[private-contact-detail]] Private contact detail::"},{"lineNumber":1590,"author":{"gitID":"-"},"content":"A contact detail that is not meant to be shared with others"},{"lineNumber":1591,"author":{"gitID":"-"},"content":""},{"lineNumber":1592,"author":{"gitID":"-"},"content":"[[rating]] Rating::"},{"lineNumber":1593,"author":{"gitID":"-"},"content":"A score given to a student by interviewers based on areas such as technical competency, leadership quality, communication skills and ability to work well in a team"},{"lineNumber":1594,"author":{"gitID":"-"},"content":""},{"lineNumber":1595,"author":{"gitID":"-"},"content":"[[status]] Status::"},{"lineNumber":1596,"author":{"gitID":"-"},"content":"Indicates a student\u0027s current state within the hiring process - new, in-review, interview, offered, rejected or withdrawn"},{"lineNumber":1597,"author":{"gitID":"-"},"content":""},{"lineNumber":1598,"author":{"gitID":"-"},"content":"[[fields]] Fields::"},{"lineNumber":1599,"author":{"gitID":"-"},"content":"Refer to the student\u0027s attributes, including name, phone, address, email, expected graduation year, GPA, interview date, university, major, position applied, profile photo, salutation, status, rating and remark. Some of these fields are mandatory while optional fields can be updated later."},{"lineNumber":1600,"author":{"gitID":"-"},"content":""},{"lineNumber":1601,"author":{"gitID":"-"},"content":"[appendix]"},{"lineNumber":1602,"author":{"gitID":"-"},"content":"\u003d\u003d Product Survey"},{"lineNumber":1603,"author":{"gitID":"-"},"content":""},{"lineNumber":1604,"author":{"gitID":"-"},"content":"*Product Name*"},{"lineNumber":1605,"author":{"gitID":"-"},"content":""},{"lineNumber":1606,"author":{"gitID":"-"},"content":"Author: ..."},{"lineNumber":1607,"author":{"gitID":"-"},"content":""},{"lineNumber":1608,"author":{"gitID":"-"},"content":"Pros:"},{"lineNumber":1609,"author":{"gitID":"-"},"content":""},{"lineNumber":1610,"author":{"gitID":"-"},"content":"* ..."},{"lineNumber":1611,"author":{"gitID":"-"},"content":"* ..."},{"lineNumber":1612,"author":{"gitID":"-"},"content":""},{"lineNumber":1613,"author":{"gitID":"-"},"content":"Cons:"},{"lineNumber":1614,"author":{"gitID":"-"},"content":""},{"lineNumber":1615,"author":{"gitID":"-"},"content":"* ..."},{"lineNumber":1616,"author":{"gitID":"-"},"content":"* ..."},{"lineNumber":1617,"author":{"gitID":"-"},"content":""},{"lineNumber":1618,"author":{"gitID":"-"},"content":"[appendix]"},{"lineNumber":1619,"author":{"gitID":"-"},"content":"\u003d\u003d Instructions for Manual Testing"},{"lineNumber":1620,"author":{"gitID":"-"},"content":""},{"lineNumber":1621,"author":{"gitID":"-"},"content":"Given below are instructions to test the app manually."},{"lineNumber":1622,"author":{"gitID":"-"},"content":""},{"lineNumber":1623,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":1624,"author":{"gitID":"-"},"content":"These instructions only provide a starting point for testers to work on; testers are expected to do more _exploratory_ testing."},{"lineNumber":1625,"author":{"gitID":"-"},"content":""},{"lineNumber":1626,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Launch and Shutdown"},{"lineNumber":1627,"author":{"gitID":"-"},"content":""},{"lineNumber":1628,"author":{"gitID":"-"},"content":". Initial launch"},{"lineNumber":1629,"author":{"gitID":"-"},"content":""},{"lineNumber":1630,"author":{"gitID":"-"},"content":".. Download the jar file and copy into an empty folder"},{"lineNumber":1631,"author":{"gitID":"-"},"content":".. Double-click the jar file +"},{"lineNumber":1632,"author":{"gitID":"-"},"content":"   Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum."},{"lineNumber":1633,"author":{"gitID":"-"},"content":""},{"lineNumber":1634,"author":{"gitID":"-"},"content":". Saving window preferences"},{"lineNumber":1635,"author":{"gitID":"-"},"content":""},{"lineNumber":1636,"author":{"gitID":"-"},"content":".. Resize the window to an optimum size. Move the window to a different location. Close the window."},{"lineNumber":1637,"author":{"gitID":"-"},"content":".. Re-launch the app by double-clicking the jar file. +"},{"lineNumber":1638,"author":{"gitID":"-"},"content":"   Expected: The most recent window size and location is retained."},{"lineNumber":1639,"author":{"gitID":"-"},"content":""},{"lineNumber":1640,"author":{"gitID":"kexiaowen"},"content":"\u003d\u003d\u003d Adding a student"},{"lineNumber":1641,"author":{"gitID":"-"},"content":""},{"lineNumber":1642,"author":{"gitID":"kexiaowen"},"content":". Adding a student into HR+"},{"lineNumber":1643,"author":{"gitID":"-"},"content":""},{"lineNumber":1644,"author":{"gitID":"kexiaowen"},"content":".. Prerequisites: No student contact in HR+ has the same name, phone number, email, address, university, expected graduation year, major and grade point average as the student contacts to be added."},{"lineNumber":1645,"author":{"gitID":"kexiaowen"},"content":".. Command: `add n/Damith p/98765432 e/damith@nus.edu.sg a/311, Clementi Ave 2, #02-25 u/NUS y/2018 m/Computer Science g/2.74 j/Software Developer c/Extraordinary Regex skill` +"},{"lineNumber":1646,"author":{"gitID":"kexiaowen"},"content":"   Expected: A student named Damith with the above particulars will be added into HR+. The student will be shown in the persons list panel."},{"lineNumber":1647,"author":{"gitID":"kexiaowen"},"content":".. Add a resume pdf file named resume.pdf to the same folder as the jar file. It also must be valid PDF and smaller than 1MB. +"},{"lineNumber":1648,"author":{"gitID":"kexiaowen"},"content":"   Add an image named image.jpg to the same folder as the jar file. It also must be valid image file and smaller than 1MB. +"},{"lineNumber":1649,"author":{"gitID":"tanhengyeow"},"content":"   Command: `add n/Irene Bae p/83627133 e/irene@sm.com a/341, Woodlands Drive 20, #22-15 u/SNU y/2020 m/Computer Engineering g/4.87 j/Software Tester r/resume.pdf i/image.jpg` +"},{"lineNumber":1650,"author":{"gitID":"kexiaowen"},"content":"   Expected: A student named Irene is added with the above particulars. A resume and a profile image will be added."},{"lineNumber":1651,"author":{"gitID":"-"},"content":""},{"lineNumber":1652,"author":{"gitID":"kexiaowen"},"content":"\u003d\u003d\u003d Showing info panel or resume"},{"lineNumber":1653,"author":{"gitID":"-"},"content":""},{"lineNumber":1654,"author":{"gitID":"kexiaowen"},"content":". Showing either student info or resume in the right panel"},{"lineNumber":1655,"author":{"gitID":"-"},"content":""},{"lineNumber":1656,"author":{"gitID":"tanhengyeow"},"content":".. Prerequisites: A student is selected using the `select` command. The student selected has a resume added into HR+."},{"lineNumber":1657,"author":{"gitID":"kexiaowen"},"content":".. Command: `show resume` +"},{"lineNumber":1658,"author":{"gitID":"kexiaowen"},"content":"   Expected: The resume of the student is displayed when it is available."},{"lineNumber":1659,"author":{"gitID":"kexiaowen"},"content":"   Command: `show info` +"},{"lineNumber":1660,"author":{"gitID":"kexiaowen"},"content":"   Expected: The information of the student is displayed in the right panel."},{"lineNumber":1661,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":1662,"author":{"gitID":"kexiaowen"},"content":"\u003d\u003d\u003d Scheduling an interview"},{"lineNumber":1663,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":1664,"author":{"gitID":"Ang-YC"},"content":"Scheduling an interview for a student"},{"lineNumber":1665,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":1666,"author":{"gitID":"Ang-YC"},"content":".. Command: `interview 1 next Friday at 3pm` +"},{"lineNumber":1667,"author":{"gitID":"Ang-YC"},"content":"   Expected: The interview date of the 1st person will be scheduled on next Friday at 3pm."},{"lineNumber":1668,"author":{"gitID":"Ang-YC"},"content":".. Command: `interview 2 Mar 14 2pm` +"},{"lineNumber":1669,"author":{"gitID":"Ang-YC"},"content":"   Expected: The interview of the 2nd person will be scheduled on 14 March at 2pm."},{"lineNumber":1670,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":1671,"author":{"gitID":"kexiaowen"},"content":"\u003d\u003d\u003d Rating a student"},{"lineNumber":1672,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":1673,"author":{"gitID":"kexiaowen"},"content":". Adding rating scores to a student without ratings"},{"lineNumber":1674,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":1675,"author":{"gitID":"kexiaowen"},"content":".. Prerequisites: Student at index 2 must not have ratings yet."},{"lineNumber":1676,"author":{"gitID":"kexiaowen"},"content":".. Command: `rate 2 t/3.45 c/4.5 p/3.25 e/4` +"},{"lineNumber":1677,"author":{"gitID":"kexiaowen"},"content":"            `select 2` +"},{"lineNumber":1678,"author":{"gitID":"kexiaowen"},"content":"   Expected: Ratings of the second person updated to the above scores. Overall rating is updated to 3.8."},{"lineNumber":1679,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":1680,"author":{"gitID":"kexiaowen"},"content":"\u003d\u003d\u003d Editing a rating"},{"lineNumber":1681,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":1682,"author":{"gitID":"kexiaowen"},"content":". Editing rating scores assigned to a student whom you have already rated"},{"lineNumber":1683,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":1684,"author":{"gitID":"kexiaowen"},"content":".. Prerequisites: Student at index 2 must have rating scores assigned already."},{"lineNumber":1685,"author":{"gitID":"kexiaowen"},"content":".. Command: `rating-edit 2 t/4.2` +"},{"lineNumber":1686,"author":{"gitID":"kexiaowen"},"content":"            `select 2` +"},{"lineNumber":1687,"author":{"gitID":"kexiaowen"},"content":"   Expected: Technical skills score of the second student is updated to 4.2."},{"lineNumber":1688,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":1689,"author":{"gitID":"kexiaowen"},"content":"\u003d\u003d\u003d Deleting a rating"},{"lineNumber":1690,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":1691,"author":{"gitID":"kexiaowen"},"content":". Deleting rating scores assigned to a student whom you have already rated"},{"lineNumber":1692,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":1693,"author":{"gitID":"kexiaowen"},"content":".. Prerequisites: Student at index 2 must have rating scores assigned already."},{"lineNumber":1694,"author":{"gitID":"kexiaowen"},"content":".. Command: `rating-delete 2` +"},{"lineNumber":1695,"author":{"gitID":"kexiaowen"},"content":"   Expected: Rating scores of the second student is cleared."},{"lineNumber":1696,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":1697,"author":{"gitID":"kexiaowen"},"content":"\u003d\u003d\u003d Sorting the students list"},{"lineNumber":1698,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":1699,"author":{"gitID":"kexiaowen"},"content":". Sorting the list of students in the left panel according to some order"},{"lineNumber":1700,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":1701,"author":{"gitID":"kexiaowen"},"content":".. Command: `sort rating o/desc` +"},{"lineNumber":1702,"author":{"gitID":"kexiaowen"},"content":"   Expected: List of students in the left panel are arranged based on their overall rating in descending order."},{"lineNumber":1703,"author":{"gitID":"kexiaowen"},"content":".. Command: `sort name o/asc` +"},{"lineNumber":1704,"author":{"gitID":"kexiaowen"},"content":"   Expected: List of students in the left panel are listed in alphabetical order with cases ignored."},{"lineNumber":1705,"author":{"gitID":"-"},"content":""},{"lineNumber":1706,"author":{"gitID":"mhq199657"},"content":"\u003d\u003d\u003d Updating status of a student"},{"lineNumber":1707,"author":{"gitID":"-"},"content":""},{"lineNumber":1708,"author":{"gitID":"mhq199657"},"content":". Updating the status of a student from the list of status"},{"lineNumber":1709,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":1710,"author":{"gitID":"mhq199657"},"content":".. Command: `status 1 2` +"},{"lineNumber":1711,"author":{"gitID":"mhq199657"},"content":"   Expected: Student at index 2 has its status changed to 1st round interview."},{"lineNumber":1712,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":1713,"author":{"gitID":"mhq199657"},"content":"\u003d\u003d\u003d Filtering according to multiple fields"},{"lineNumber":1714,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":1715,"author":{"gitID":"mhq199657"},"content":". Filtering the list of students according to multiple fields"},{"lineNumber":1716,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":1717,"author":{"gitID":"mhq199657"},"content":".. Command: `filter y/2019 r/3.5-4.5` +"},{"lineNumber":1718,"author":{"gitID":"mhq199657"},"content":"   Expected: The student list now only contains students with 2019 as their expected graduation year and with overall rating score between 3.5 to 4.5, inclusive."},{"lineNumber":1719,"author":{"gitID":"-"},"content":""},{"lineNumber":1720,"author":{"gitID":"tanhengyeow"},"content":"\u003d\u003d\u003d Finding every field of the student"},{"lineNumber":1721,"author":{"gitID":"tanhengyeow"},"content":". Finding the list of students with **any** fields that match the search keyword according to the search support stated in the User Guide."},{"lineNumber":1722,"author":{"gitID":"tanhengyeow"},"content":".. Command `find bernice, charlot` +"},{"lineNumber":1723,"author":{"gitID":"tanhengyeow"},"content":"   Expected: The student list now displays students `Bernice Yu` and `Charlotte Oliveiro` with reference to the sample data provided."},{"lineNumber":1724,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":1725,"author":{"gitID":"tanhengyeow"},"content":"\u003d\u003d\u003d Finding specific field of the student"},{"lineNumber":1726,"author":{"gitID":"tanhengyeow"},"content":". Finding the list of students with **chosen** fields that match the search keyword according to the search support stated in the User Guide."},{"lineNumber":1727,"author":{"gitID":"tanhengyeow"},"content":".. Command `find e/alexyeoh@example.com, lidavxx@example.com j/Software p/87438807` +"},{"lineNumber":1728,"author":{"gitID":"tanhengyeow"},"content":"   Expected: The student list now displays student `Alex Yeoh` with reference to the sample data provided."}],"authorContributionMap":{"kexiaowen":206,"mhq199657":78,"-":1170,"tanhengyeow":120,"Ang-YC":154}},{"path":"src/test/java/systemtests/FindCommandSystemTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.KEYWORD_MATCHING_MEIER;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.FindCommand;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.RedoCommand;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.UndoCommand;"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.FindResults;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.address.model.tag.Tag;"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"public class FindCommandSystemTest extends AddressBookSystemTest {"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"    //@@author tanhengyeow"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"    public void find() {"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        /* Case: find multiple persons in address book, command with leading spaces and trailing spaces"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"         * -\u003e 2 persons found"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"         */"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":"        String command \u003d \"   \" + FindCommand.COMMAND_WORD + \" \" + KEYWORD_MATCHING_MEIER + \"   \";"},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        // first names of Benson and Daniel are \"Meier\", \"Meier\" fuzzy matched with \"Meyer\""},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":"        ModelHelper.setFilteredList(expectedModel, BENSON, DANIEL, ELLE);"},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        /* Case: repeat previous find command where person list is displaying the persons we are finding"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"         * -\u003e 2 persons found"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"         */"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" \" + KEYWORD_MATCHING_MEIER;"},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"        /* Case: find person where person list is not displaying the person we are finding -\u003e 1 person found */"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" Carl\";"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"        ModelHelper.setFilteredList(expectedModel, CARL);"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"        /* Case: find multiple persons in address book, 2 keywords -\u003e 2 persons found */"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" Benson, Daniel\";"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":"        ModelHelper.setFilteredList(expectedModel, BENSON, DANIEL);"},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"        /* Case: find multiple persons in address book, 2 keywords in reversed order -\u003e 2 persons found */"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" Daniel, Benson\";"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"        /* Case: find multiple persons in address book, 2 keywords with 1 repeat -\u003e 2 persons found */"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" Daniel, Benson, Daniel\";"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":69,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":70,"author":{"gitID":"tanhengyeow"},"content":"        /* Case: find multiple persons in address book, 2 matching keywords and 1 non-matching keyword"},{"lineNumber":71,"author":{"gitID":"tanhengyeow"},"content":"         * -\u003e 2 persons found"},{"lineNumber":72,"author":{"gitID":"tanhengyeow"},"content":"         */"},{"lineNumber":73,"author":{"gitID":"tanhengyeow"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" Daniel, Benson, NonMatchingKeyWord\";"},{"lineNumber":74,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":75,"author":{"gitID":"tanhengyeow"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":76,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":77,"author":{"gitID":"tanhengyeow"},"content":"        /* Case: undo previous find command -\u003e rejected */"},{"lineNumber":78,"author":{"gitID":"tanhengyeow"},"content":"        command \u003d UndoCommand.COMMAND_WORD;"},{"lineNumber":79,"author":{"gitID":"tanhengyeow"},"content":"        String expectedResultMessage \u003d UndoCommand.MESSAGE_FAILURE;"},{"lineNumber":80,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandFailure(command, expectedResultMessage);"},{"lineNumber":81,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":82,"author":{"gitID":"tanhengyeow"},"content":"        /* Case: redo previous find command -\u003e rejected */"},{"lineNumber":83,"author":{"gitID":"tanhengyeow"},"content":"        command \u003d RedoCommand.COMMAND_WORD;"},{"lineNumber":84,"author":{"gitID":"tanhengyeow"},"content":"        expectedResultMessage \u003d RedoCommand.MESSAGE_FAILURE;"},{"lineNumber":85,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandFailure(command, expectedResultMessage);"},{"lineNumber":86,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":87,"author":{"gitID":"tanhengyeow"},"content":"        /* Case: find same persons in address book after deleting 1 of them -\u003e 1 person found */"},{"lineNumber":88,"author":{"gitID":"tanhengyeow"},"content":"        executeCommand(DeleteCommand.COMMAND_WORD + \" 1\");"},{"lineNumber":89,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(getModel().getAddressBook().getPersonList().contains(BENSON));"},{"lineNumber":90,"author":{"gitID":"tanhengyeow"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" \" + KEYWORD_MATCHING_MEIER;"},{"lineNumber":91,"author":{"gitID":"tanhengyeow"},"content":"        expectedModel \u003d getModel();"},{"lineNumber":92,"author":{"gitID":"tanhengyeow"},"content":"        ModelHelper.setFilteredList(expectedModel, DANIEL, ELLE);"},{"lineNumber":93,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":94,"author":{"gitID":"tanhengyeow"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":95,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":96,"author":{"gitID":"tanhengyeow"},"content":"        /* Case: find person in address book, keyword is same as name but of different case -\u003e 1 person found */"},{"lineNumber":97,"author":{"gitID":"tanhengyeow"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" MeIeR\";"},{"lineNumber":98,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":99,"author":{"gitID":"tanhengyeow"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":100,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":101,"author":{"gitID":"tanhengyeow"},"content":"        /* Case: find person in address book, keyword is substring of name -\u003e 1 persons found */"},{"lineNumber":102,"author":{"gitID":"tanhengyeow"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" Mei\";"},{"lineNumber":103,"author":{"gitID":"tanhengyeow"},"content":"        ModelHelper.setFilteredList(expectedModel, DANIEL); // fuzzy match to \"Meier\""},{"lineNumber":104,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":105,"author":{"gitID":"tanhengyeow"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":106,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":107,"author":{"gitID":"tanhengyeow"},"content":"        /* Case: find person in address book, name is substring of keyword -\u003e 2 persons found */"},{"lineNumber":108,"author":{"gitID":"tanhengyeow"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" Meiers\";"},{"lineNumber":109,"author":{"gitID":"tanhengyeow"},"content":"        ModelHelper.setFilteredList(expectedModel, DANIEL, ELLE); // fuzzy match to \"Meier\" and \"Meyer\""},{"lineNumber":110,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":111,"author":{"gitID":"tanhengyeow"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":112,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":113,"author":{"gitID":"tanhengyeow"},"content":"        /* Case: find person not in address book -\u003e 1 persons found */"},{"lineNumber":114,"author":{"gitID":"tanhengyeow"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" Mark\";"},{"lineNumber":115,"author":{"gitID":"tanhengyeow"},"content":"        ModelHelper.setFilteredList(expectedModel, CARL); // fuzzy match to Carl"},{"lineNumber":116,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":117,"author":{"gitID":"tanhengyeow"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":118,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":119,"author":{"gitID":"tanhengyeow"},"content":"        /* Case: find person with n/ prefix (only 1 name) -\u003e 1 persons found */"},{"lineNumber":120,"author":{"gitID":"tanhengyeow"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" n/\" + \"\\\"\" + DANIEL.getName() + \"\\\"\";"},{"lineNumber":121,"author":{"gitID":"tanhengyeow"},"content":"        ModelHelper.setFilteredList(expectedModel, DANIEL);"},{"lineNumber":122,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":123,"author":{"gitID":"tanhengyeow"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":124,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":125,"author":{"gitID":"tanhengyeow"},"content":"        /* Case: find person with n/ prefix (\u003e\u003d2 names) -\u003e 3 persons found */"},{"lineNumber":126,"author":{"gitID":"tanhengyeow"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" n/\" + \"\\\"\" + DANIEL.getName() + \"\\\"\" + \",\""},{"lineNumber":127,"author":{"gitID":"tanhengyeow"},"content":"                + \"\\\"\" + BENSON.getName() + \"\\\"\" + \",\" + \"\\\"\" + ELLE.getName() + \"\\\"\";"},{"lineNumber":128,"author":{"gitID":"tanhengyeow"},"content":"        ModelHelper.setFilteredList(expectedModel, DANIEL, BENSON, ELLE);"},{"lineNumber":129,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":130,"author":{"gitID":"tanhengyeow"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":131,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":132,"author":{"gitID":"tanhengyeow"},"content":"        /* Case: find person with n/ + p/ prefix (only 1 name) -\u003e 1 persons found */"},{"lineNumber":133,"author":{"gitID":"tanhengyeow"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" n/\" + \"\\\"\" + DANIEL.getName() + \"\\\"\" + \" p/\" + DANIEL.getPhone().value;"},{"lineNumber":134,"author":{"gitID":"tanhengyeow"},"content":"        ModelHelper.setFilteredList(expectedModel, DANIEL);"},{"lineNumber":135,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":136,"author":{"gitID":"tanhengyeow"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":137,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":138,"author":{"gitID":"tanhengyeow"},"content":"        /* Case: find person with n/ + p/ prefix (\u003e\u003d 2 names and p/ matches 1 of the names) -\u003e 1 persons found */"},{"lineNumber":139,"author":{"gitID":"tanhengyeow"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" n/\" + \"\\\"\" + DANIEL.getName() + \"\\\"\" + \",\""},{"lineNumber":140,"author":{"gitID":"tanhengyeow"},"content":"                + \"\\\"\" + BENSON.getName() + \"\\\"\" + \",\" + \"\\\"\" + ELLE.getName() + \"\\\"\" + \" p/\" + DANIEL.getPhone().value;"},{"lineNumber":141,"author":{"gitID":"tanhengyeow"},"content":"        ModelHelper.setFilteredList(expectedModel, DANIEL);"},{"lineNumber":142,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":143,"author":{"gitID":"tanhengyeow"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":144,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":145,"author":{"gitID":"tanhengyeow"},"content":"        /* Case: find person with n/ + p/ prefix (\u003e\u003d 2 names and p/ does not match any names) -\u003e 0 persons found */"},{"lineNumber":146,"author":{"gitID":"tanhengyeow"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" n/\" + \"\\\"\" + DANIEL.getName() + \"\\\"\" + \",\""},{"lineNumber":147,"author":{"gitID":"tanhengyeow"},"content":"                + \"\\\"\" + BENSON.getName() + \"\\\"\" + \",\" + \"\\\"\" + ELLE.getName() + \"\\\"\""},{"lineNumber":148,"author":{"gitID":"tanhengyeow"},"content":"                + \" p/\" + GEORGE.getPhone().value;"},{"lineNumber":149,"author":{"gitID":"tanhengyeow"},"content":"        ModelHelper.setFilteredList(expectedModel);"},{"lineNumber":150,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":151,"author":{"gitID":"tanhengyeow"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":152,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":153,"author":{"gitID":"tanhengyeow"},"content":"        /* Case: find person with p/ + e/ + u/ prefix (1 value per field - all correct) -\u003e 1 persons found */"},{"lineNumber":154,"author":{"gitID":"tanhengyeow"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" p/\" + DANIEL.getPhone().value + \" \""},{"lineNumber":155,"author":{"gitID":"tanhengyeow"},"content":"                + \" e/\" + DANIEL.getEmail().value + \" \""},{"lineNumber":156,"author":{"gitID":"tanhengyeow"},"content":"                + \" u/\" + DANIEL.getUniversity().value;"},{"lineNumber":157,"author":{"gitID":"tanhengyeow"},"content":"        ModelHelper.setFilteredList(expectedModel, DANIEL);"},{"lineNumber":158,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":159,"author":{"gitID":"tanhengyeow"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":160,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":161,"author":{"gitID":"tanhengyeow"},"content":"        /* Case: find person with n/ + p/ + e/ a/ prefix (1 value per field - one incorrect) -\u003e 0 persons found */"},{"lineNumber":162,"author":{"gitID":"tanhengyeow"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" n/\" + DANIEL.getName() + \" \" + \" p/\" + DANIEL.getPhone().value"},{"lineNumber":163,"author":{"gitID":"tanhengyeow"},"content":"                + \" e/\" + GEORGE.getEmail().value + \" a/\" + DANIEL.getAddress().value;"},{"lineNumber":164,"author":{"gitID":"tanhengyeow"},"content":"        ModelHelper.setFilteredList(expectedModel);"},{"lineNumber":165,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":166,"author":{"gitID":"tanhengyeow"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":167,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":168,"author":{"gitID":"tanhengyeow"},"content":"        /* Case: find phone number of person in address book -\u003e 1 persons found */"},{"lineNumber":169,"author":{"gitID":"tanhengyeow"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" \" + DANIEL.getPhone().value;"},{"lineNumber":170,"author":{"gitID":"tanhengyeow"},"content":"        ModelHelper.setFilteredList(expectedModel, DANIEL);"},{"lineNumber":171,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":172,"author":{"gitID":"tanhengyeow"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":173,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":174,"author":{"gitID":"tanhengyeow"},"content":"        /* Case: find address of person in address book -\u003e 1 persons found */"},{"lineNumber":175,"author":{"gitID":"tanhengyeow"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" \" + \"\\\"\" + DANIEL.getAddress().value + \"\\\"\";"},{"lineNumber":176,"author":{"gitID":"tanhengyeow"},"content":"        ModelHelper.setFilteredList(expectedModel, DANIEL);"},{"lineNumber":177,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":178,"author":{"gitID":"tanhengyeow"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":179,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":180,"author":{"gitID":"tanhengyeow"},"content":"        /* Case: find email of person in address book -\u003e 1 persons found */"},{"lineNumber":181,"author":{"gitID":"tanhengyeow"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" \" + DANIEL.getEmail().value;"},{"lineNumber":182,"author":{"gitID":"tanhengyeow"},"content":"        ModelHelper.setFilteredList(expectedModel, DANIEL);"},{"lineNumber":183,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":184,"author":{"gitID":"tanhengyeow"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":185,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":186,"author":{"gitID":"tanhengyeow"},"content":"        /* Case: find tags of person in address book -\u003e 0 persons found */"},{"lineNumber":187,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cTag\u003e tags \u003d new ArrayList\u003c\u003e(DANIEL.getTags());"},{"lineNumber":188,"author":{"gitID":"tanhengyeow"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" \" + tags.get(0).tagName;"},{"lineNumber":189,"author":{"gitID":"tanhengyeow"},"content":"        ModelHelper.setFilteredList(expectedModel);"},{"lineNumber":190,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":191,"author":{"gitID":"tanhengyeow"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":192,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":193,"author":{"gitID":"tanhengyeow"},"content":"        /* Case: find while a person is selected -\u003e selected card deselected */"},{"lineNumber":194,"author":{"gitID":"tanhengyeow"},"content":"        showAllPersons();"},{"lineNumber":195,"author":{"gitID":"tanhengyeow"},"content":"        selectPerson(Index.fromOneBased(1));"},{"lineNumber":196,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(getPersonListPanel().getHandleToSelectedCard().getName().equals(DANIEL.getName().fullName));"},{"lineNumber":197,"author":{"gitID":"tanhengyeow"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" Daniel\";"},{"lineNumber":198,"author":{"gitID":"tanhengyeow"},"content":"        ModelHelper.setFilteredList(expectedModel, DANIEL);"},{"lineNumber":199,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":200,"author":{"gitID":"tanhengyeow"},"content":"        assertSelectedCardDeselected();"},{"lineNumber":201,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":202,"author":{"gitID":"tanhengyeow"},"content":"        /* Case: find person in empty address book -\u003e 0 persons found */"},{"lineNumber":203,"author":{"gitID":"tanhengyeow"},"content":"        deleteAllPersons();"},{"lineNumber":204,"author":{"gitID":"tanhengyeow"},"content":"        command \u003d FindCommand.COMMAND_WORD + \" \" + KEYWORD_MATCHING_MEIER;"},{"lineNumber":205,"author":{"gitID":"tanhengyeow"},"content":"        expectedModel \u003d getModel();"},{"lineNumber":206,"author":{"gitID":"tanhengyeow"},"content":"        ModelHelper.setFilteredList(expectedModel, DANIEL);"},{"lineNumber":207,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":208,"author":{"gitID":"tanhengyeow"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":209,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":210,"author":{"gitID":"tanhengyeow"},"content":"        /* Case: mixed case command word -\u003e rejected */"},{"lineNumber":211,"author":{"gitID":"tanhengyeow"},"content":"        command \u003d \"FiNd Meier\";"},{"lineNumber":212,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandFailure(command, MESSAGE_UNKNOWN_COMMAND);"},{"lineNumber":213,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":214,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":215,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":216,"author":{"gitID":"tanhengyeow"},"content":"     * Executes {@code command} and verifies that the command box displays an empty string, the result display"},{"lineNumber":217,"author":{"gitID":"tanhengyeow"},"content":"     * box displays {@code Messages#MESSAGE_PERSONS_LISTED_OVERVIEW} with the number of people in the filtered list,"},{"lineNumber":218,"author":{"gitID":"tanhengyeow"},"content":"     * and the model related components equal to {@code expectedModel}."},{"lineNumber":219,"author":{"gitID":"tanhengyeow"},"content":"     * These verifications are done by"},{"lineNumber":220,"author":{"gitID":"tanhengyeow"},"content":"     * {@code AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"},{"lineNumber":221,"author":{"gitID":"tanhengyeow"},"content":"     * Also verifies that the status bar remains unchanged, and the command box has the default style class, and the"},{"lineNumber":222,"author":{"gitID":"tanhengyeow"},"content":"     * selected card updated accordingly, depending on {@code cardStatus}."},{"lineNumber":223,"author":{"gitID":"tanhengyeow"},"content":"     * @see AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":224,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":225,"author":{"gitID":"tanhengyeow"},"content":"    private void assertCommandSuccess(String command, Model expectedModel) {"},{"lineNumber":226,"author":{"gitID":"tanhengyeow"},"content":"        executeCommand(command);"},{"lineNumber":227,"author":{"gitID":"tanhengyeow"},"content":"        String expectedResultMessage \u003d FindResults.getInstance().getTextResults();"},{"lineNumber":228,"author":{"gitID":"tanhengyeow"},"content":"        assertApplicationDisplaysExpected(\"\", expectedResultMessage, expectedModel);"},{"lineNumber":229,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandBoxShowsDefaultStyle();"},{"lineNumber":230,"author":{"gitID":"tanhengyeow"},"content":"        assertStatusBarUnchanged();"},{"lineNumber":231,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":232,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":233,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":234,"author":{"gitID":"tanhengyeow"},"content":"     * Executes {@code command} and verifies that the command box displays {@code command}, the result display"},{"lineNumber":235,"author":{"gitID":"tanhengyeow"},"content":"     * box displays {@code expectedResultMessage} and the model related components equal to the current model."},{"lineNumber":236,"author":{"gitID":"tanhengyeow"},"content":"     * These verifications are done by"},{"lineNumber":237,"author":{"gitID":"tanhengyeow"},"content":"     * {@code AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"},{"lineNumber":238,"author":{"gitID":"tanhengyeow"},"content":"     * Also verifies that the browser url, selected card and status bar remain unchanged, and the command box has the"},{"lineNumber":239,"author":{"gitID":"tanhengyeow"},"content":"     * error style."},{"lineNumber":240,"author":{"gitID":"tanhengyeow"},"content":"     * @see AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":241,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":242,"author":{"gitID":"tanhengyeow"},"content":"    private void assertCommandFailure(String command, String expectedResultMessage) {"},{"lineNumber":243,"author":{"gitID":"tanhengyeow"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":244,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":245,"author":{"gitID":"tanhengyeow"},"content":"        executeCommand(command);"},{"lineNumber":246,"author":{"gitID":"tanhengyeow"},"content":"        assertApplicationDisplaysExpected(command, expectedResultMessage, expectedModel);"},{"lineNumber":247,"author":{"gitID":"tanhengyeow"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":248,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandBoxShowsErrorStyle();"},{"lineNumber":249,"author":{"gitID":"tanhengyeow"},"content":"        assertStatusBarUnchanged();"},{"lineNumber":250,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":251,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":25,"tanhengyeow":226}},{"path":"src/test/java/systemtests/SelectCommandSystemTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.SelectCommand.MESSAGE_SELECT_PERSON_SUCCESS;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.KEYWORD_MATCHING_MEIER;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPersons;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.RedoCommand;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.SelectCommand;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.UndoCommand;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":"public class SelectCommandSystemTest extends AddressBookSystemTest {"},{"lineNumber":21,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":22,"author":{"gitID":"-"},"content":"    public void select() {"},{"lineNumber":23,"author":{"gitID":"-"},"content":"        /* ------------------------ Perform select operations on the shown unfiltered list -------------------------- */"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"        /* Case: select the first card in the person list, command with leading spaces and trailing spaces"},{"lineNumber":26,"author":{"gitID":"-"},"content":"         * -\u003e selected"},{"lineNumber":27,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":28,"author":{"gitID":"-"},"content":"        String command \u003d \"   \" + SelectCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + \"   \";"},{"lineNumber":29,"author":{"gitID":"Ang-YC"},"content":"        assertCommandSuccess(command, INDEX_FIRST_PERSON, true);"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"        /* Case: select the last card in the person list -\u003e selected */"},{"lineNumber":32,"author":{"gitID":"-"},"content":"        Index personCount \u003d Index.fromOneBased(getTypicalPersons().size());"},{"lineNumber":33,"author":{"gitID":"-"},"content":"        command \u003d SelectCommand.COMMAND_WORD + \" \" + personCount.getOneBased();"},{"lineNumber":34,"author":{"gitID":"Ang-YC"},"content":"        assertCommandSuccess(command, personCount, true);"},{"lineNumber":35,"author":{"gitID":"-"},"content":""},{"lineNumber":36,"author":{"gitID":"-"},"content":"        /* Case: undo previous selection -\u003e rejected */"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        command \u003d UndoCommand.COMMAND_WORD;"},{"lineNumber":38,"author":{"gitID":"-"},"content":"        String expectedResultMessage \u003d UndoCommand.MESSAGE_FAILURE;"},{"lineNumber":39,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, expectedResultMessage);"},{"lineNumber":40,"author":{"gitID":"-"},"content":""},{"lineNumber":41,"author":{"gitID":"-"},"content":"        /* Case: redo selecting last card in the list -\u003e rejected */"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        command \u003d RedoCommand.COMMAND_WORD;"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        expectedResultMessage \u003d RedoCommand.MESSAGE_FAILURE;"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, expectedResultMessage);"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"        /* Case: select the middle card in the person list -\u003e selected */"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        Index middleIndex \u003d Index.fromOneBased(personCount.getOneBased() / 2);"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        command \u003d SelectCommand.COMMAND_WORD + \" \" + middleIndex.getOneBased();"},{"lineNumber":49,"author":{"gitID":"Ang-YC"},"content":"        assertCommandSuccess(command, middleIndex, true);"},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"-"},"content":"        /* Case: select the current selected card -\u003e selected */"},{"lineNumber":52,"author":{"gitID":"Ang-YC"},"content":"        assertCommandSuccess(command, middleIndex, false);"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"        /* ------------------------ Perform select operations on the shown filtered list ---------------------------- */"},{"lineNumber":55,"author":{"gitID":"-"},"content":""},{"lineNumber":56,"author":{"gitID":"-"},"content":"        /* Case: filtered person list, select index within bounds of address book but out of bounds of person list"},{"lineNumber":57,"author":{"gitID":"-"},"content":"         * -\u003e rejected"},{"lineNumber":58,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":59,"author":{"gitID":"-"},"content":"        showPersonsWithName(KEYWORD_MATCHING_MEIER);"},{"lineNumber":60,"author":{"gitID":"-"},"content":"        int invalidIndex \u003d getModel().getAddressBook().getPersonList().size();"},{"lineNumber":61,"author":{"gitID":"-"},"content":"        assertCommandFailure(SelectCommand.COMMAND_WORD + \" \" + invalidIndex, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"},{"lineNumber":62,"author":{"gitID":"-"},"content":""},{"lineNumber":63,"author":{"gitID":"-"},"content":"        /* Case: filtered person list, select index within bounds of address book and person list -\u003e selected */"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        Index validIndex \u003d Index.fromOneBased(1);"},{"lineNumber":65,"author":{"gitID":"-"},"content":"        assertTrue(validIndex.getZeroBased() \u003c getModel().getFilteredPersonList().size());"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        command \u003d SelectCommand.COMMAND_WORD + \" \" + validIndex.getOneBased();"},{"lineNumber":67,"author":{"gitID":"Ang-YC"},"content":"        assertCommandSuccess(command, validIndex, true);"},{"lineNumber":68,"author":{"gitID":"-"},"content":""},{"lineNumber":69,"author":{"gitID":"-"},"content":"        /* ----------------------------------- Perform invalid select operations ------------------------------------ */"},{"lineNumber":70,"author":{"gitID":"-"},"content":""},{"lineNumber":71,"author":{"gitID":"-"},"content":"        /* Case: invalid index (0) -\u003e rejected */"},{"lineNumber":72,"author":{"gitID":"-"},"content":"        assertCommandFailure(SelectCommand.COMMAND_WORD + \" \" + 0,"},{"lineNumber":73,"author":{"gitID":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectCommand.MESSAGE_USAGE));"},{"lineNumber":74,"author":{"gitID":"-"},"content":""},{"lineNumber":75,"author":{"gitID":"-"},"content":"        /* Case: invalid index (-1) -\u003e rejected */"},{"lineNumber":76,"author":{"gitID":"-"},"content":"        assertCommandFailure(SelectCommand.COMMAND_WORD + \" \" + -1,"},{"lineNumber":77,"author":{"gitID":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectCommand.MESSAGE_USAGE));"},{"lineNumber":78,"author":{"gitID":"-"},"content":""},{"lineNumber":79,"author":{"gitID":"-"},"content":"        /* Case: invalid index (size + 1) -\u003e rejected */"},{"lineNumber":80,"author":{"gitID":"-"},"content":"        invalidIndex \u003d getModel().getFilteredPersonList().size() + 1;"},{"lineNumber":81,"author":{"gitID":"-"},"content":"        assertCommandFailure(SelectCommand.COMMAND_WORD + \" \" + invalidIndex, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"},{"lineNumber":82,"author":{"gitID":"-"},"content":""},{"lineNumber":83,"author":{"gitID":"-"},"content":"        /* Case: invalid arguments (alphabets) -\u003e rejected */"},{"lineNumber":84,"author":{"gitID":"-"},"content":"        assertCommandFailure(SelectCommand.COMMAND_WORD + \" abc\","},{"lineNumber":85,"author":{"gitID":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectCommand.MESSAGE_USAGE));"},{"lineNumber":86,"author":{"gitID":"-"},"content":""},{"lineNumber":87,"author":{"gitID":"-"},"content":"        /* Case: invalid arguments (extra argument) -\u003e rejected */"},{"lineNumber":88,"author":{"gitID":"-"},"content":"        assertCommandFailure(SelectCommand.COMMAND_WORD + \" 1 abc\","},{"lineNumber":89,"author":{"gitID":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectCommand.MESSAGE_USAGE));"},{"lineNumber":90,"author":{"gitID":"-"},"content":""},{"lineNumber":91,"author":{"gitID":"-"},"content":"        /* Case: mixed case command word -\u003e rejected */"},{"lineNumber":92,"author":{"gitID":"-"},"content":"        assertCommandFailure(\"SeLeCt 1\", MESSAGE_UNKNOWN_COMMAND);"},{"lineNumber":93,"author":{"gitID":"-"},"content":""},{"lineNumber":94,"author":{"gitID":"-"},"content":"        /* Case: select from empty address book -\u003e rejected */"},{"lineNumber":95,"author":{"gitID":"-"},"content":"        deleteAllPersons();"},{"lineNumber":96,"author":{"gitID":"-"},"content":"        assertCommandFailure(SelectCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased(),"},{"lineNumber":97,"author":{"gitID":"-"},"content":"                MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"},{"lineNumber":98,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":99,"author":{"gitID":"-"},"content":""},{"lineNumber":100,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":101,"author":{"gitID":"-"},"content":"     * Executes {@code command} and asserts that the,\u003cbr\u003e"},{"lineNumber":102,"author":{"gitID":"-"},"content":"     * 1. Command box displays an empty string.\u003cbr\u003e"},{"lineNumber":103,"author":{"gitID":"-"},"content":"     * 2. Command box has the default style class.\u003cbr\u003e"},{"lineNumber":104,"author":{"gitID":"-"},"content":"     * 3. Result display box displays the success message of executing select command with the"},{"lineNumber":105,"author":{"gitID":"-"},"content":"     * {@code expectedSelectedCardIndex} of the selected person.\u003cbr\u003e"},{"lineNumber":106,"author":{"gitID":"-"},"content":"     * 4. {@code Model}, {@code Storage} and {@code PersonListPanel} remain unchanged.\u003cbr\u003e"},{"lineNumber":107,"author":{"gitID":"-"},"content":"     * 5. Selected card is at {@code expectedSelectedCardIndex} and the browser url is updated accordingly.\u003cbr\u003e"},{"lineNumber":108,"author":{"gitID":"-"},"content":"     * 6. Status bar remains unchanged.\u003cbr\u003e"},{"lineNumber":109,"author":{"gitID":"-"},"content":"     * Verifications 1, 3 and 4 are performed by"},{"lineNumber":110,"author":{"gitID":"-"},"content":"     * {@code AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"},{"lineNumber":111,"author":{"gitID":"-"},"content":"     * @see AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":112,"author":{"gitID":"-"},"content":"     * @see AddressBookSystemTest#assertSelectedCardChanged(Index)"},{"lineNumber":113,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":114,"author":{"gitID":"Ang-YC"},"content":"    private void assertCommandSuccess(String command, Index expectedSelectedCardIndex, boolean expectChanges) {"},{"lineNumber":115,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":116,"author":{"gitID":"-"},"content":"        String expectedResultMessage \u003d String.format("},{"lineNumber":117,"author":{"gitID":"-"},"content":"                MESSAGE_SELECT_PERSON_SUCCESS, expectedSelectedCardIndex.getOneBased());"},{"lineNumber":118,"author":{"gitID":"-"},"content":"        int preExecutionSelectedCardIndex \u003d getPersonListPanel().getSelectedCardIndex();"},{"lineNumber":119,"author":{"gitID":"-"},"content":""},{"lineNumber":120,"author":{"gitID":"Ang-YC"},"content":"        if (expectChanges) {"},{"lineNumber":121,"author":{"gitID":"Ang-YC"},"content":"            executeCommandWaitForUi(command);"},{"lineNumber":122,"author":{"gitID":"Ang-YC"},"content":"        } else {"},{"lineNumber":123,"author":{"gitID":"-"},"content":"            executeCommand(command);"},{"lineNumber":124,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":125,"author":{"gitID":"-"},"content":"        assertApplicationDisplaysExpected(\"\", expectedResultMessage, expectedModel);"},{"lineNumber":126,"author":{"gitID":"-"},"content":""},{"lineNumber":127,"author":{"gitID":"-"},"content":"        if (preExecutionSelectedCardIndex \u003d\u003d expectedSelectedCardIndex.getZeroBased()) {"},{"lineNumber":128,"author":{"gitID":"-"},"content":"            assertSelectedCardUnchanged();"},{"lineNumber":129,"author":{"gitID":"-"},"content":"        } else {"},{"lineNumber":130,"author":{"gitID":"-"},"content":"            assertSelectedCardChanged(expectedSelectedCardIndex);"},{"lineNumber":131,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":132,"author":{"gitID":"-"},"content":""},{"lineNumber":133,"author":{"gitID":"-"},"content":"        assertCommandBoxShowsDefaultStyle();"},{"lineNumber":134,"author":{"gitID":"-"},"content":"        assertStatusBarUnchanged();"},{"lineNumber":135,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":136,"author":{"gitID":"-"},"content":""},{"lineNumber":137,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":138,"author":{"gitID":"-"},"content":"     * Executes {@code command} and asserts that the,\u003cbr\u003e"},{"lineNumber":139,"author":{"gitID":"-"},"content":"     * 1. Command box displays {@code command}.\u003cbr\u003e"},{"lineNumber":140,"author":{"gitID":"-"},"content":"     * 2. Command box has the error style class.\u003cbr\u003e"},{"lineNumber":141,"author":{"gitID":"-"},"content":"     * 3. Result display box displays {@code expectedResultMessage}.\u003cbr\u003e"},{"lineNumber":142,"author":{"gitID":"-"},"content":"     * 4. {@code Model}, {@code Storage} and {@code PersonListPanel} remain unchanged.\u003cbr\u003e"},{"lineNumber":143,"author":{"gitID":"-"},"content":"     * 5. Browser url, selected card and status bar remain unchanged.\u003cbr\u003e"},{"lineNumber":144,"author":{"gitID":"-"},"content":"     * Verifications 1, 3 and 4 are performed by"},{"lineNumber":145,"author":{"gitID":"-"},"content":"     * {@code AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"},{"lineNumber":146,"author":{"gitID":"-"},"content":"     * @see AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":147,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":148,"author":{"gitID":"-"},"content":"    private void assertCommandFailure(String command, String expectedResultMessage) {"},{"lineNumber":149,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":150,"author":{"gitID":"-"},"content":""},{"lineNumber":151,"author":{"gitID":"-"},"content":"        executeCommand(command);"},{"lineNumber":152,"author":{"gitID":"-"},"content":"        assertApplicationDisplaysExpected(command, expectedResultMessage, expectedModel);"},{"lineNumber":153,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":154,"author":{"gitID":"-"},"content":"        assertCommandBoxShowsErrorStyle();"},{"lineNumber":155,"author":{"gitID":"-"},"content":"        assertStatusBarUnchanged();"},{"lineNumber":156,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":157,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"-":147,"Ang-YC":10}},{"path":"src/test/java/systemtests/FilterCommandSystemTest.java","lines":[{"lineNumber":1,"author":{"gitID":"mhq199657"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":3,"author":{"gitID":"mhq199657"},"content":"import static junit.framework.TestCase.assertTrue;"},{"lineNumber":4,"author":{"gitID":"mhq199657"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;"},{"lineNumber":6,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"},{"lineNumber":7,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXPECTED_GRADUATION_YEAR;"},{"lineNumber":8,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GRADE_POINT_AVERAGE;"},{"lineNumber":9,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERVIEW_DATE;"},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RATING;"},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;"},{"lineNumber":12,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;"},{"lineNumber":13,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;"},{"lineNumber":14,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;"},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;"},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;"},{"lineNumber":17,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.testutil.TypicalPersons.KEYWORD_MATCHING_2019;"},{"lineNumber":18,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":"import org.junit.Test;"},{"lineNumber":20,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":21,"author":{"gitID":"mhq199657"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":22,"author":{"gitID":"mhq199657"},"content":"import seedu.address.logic.commands.DeleteCommand;"},{"lineNumber":23,"author":{"gitID":"mhq199657"},"content":"import seedu.address.logic.commands.FilterCommand;"},{"lineNumber":24,"author":{"gitID":"mhq199657"},"content":"import seedu.address.logic.commands.RedoCommand;"},{"lineNumber":25,"author":{"gitID":"mhq199657"},"content":"import seedu.address.logic.commands.UndoCommand;"},{"lineNumber":26,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.Model;"},{"lineNumber":27,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":28,"author":{"gitID":"mhq199657"},"content":"public class FilterCommandSystemTest extends AddressBookSystemTest {"},{"lineNumber":29,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":30,"author":{"gitID":"mhq199657"},"content":"    public void filter() {"},{"lineNumber":31,"author":{"gitID":"mhq199657"},"content":"        //Expected Graduation Year filtering"},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":"        /* Case: filters multiple persons in address book, command with leading spaces and trailing spaces"},{"lineNumber":33,"author":{"gitID":"mhq199657"},"content":"         * -\u003e 3 persons found"},{"lineNumber":34,"author":{"gitID":"mhq199657"},"content":"         */"},{"lineNumber":35,"author":{"gitID":"mhq199657"},"content":"        showAllPersons();"},{"lineNumber":36,"author":{"gitID":"mhq199657"},"content":"        String command \u003d \"   \" + FilterCommand.COMMAND_WORD + \" \""},{"lineNumber":37,"author":{"gitID":"mhq199657"},"content":"                + PREFIX_EXPECTED_GRADUATION_YEAR + KEYWORD_MATCHING_2019 + \"   \";"},{"lineNumber":38,"author":{"gitID":"mhq199657"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":39,"author":{"gitID":"mhq199657"},"content":"        ModelHelper.setFilteredList(expectedModel, CARL, FIONA); // their graduation year is before or equal 2019"},{"lineNumber":40,"author":{"gitID":"mhq199657"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":41,"author":{"gitID":"mhq199657"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":42,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":43,"author":{"gitID":"mhq199657"},"content":"        /* Case: repeat previous filter command where person list is displaying the persons satisfying the filter"},{"lineNumber":44,"author":{"gitID":"mhq199657"},"content":"         * -\u003e 2 persons found"},{"lineNumber":45,"author":{"gitID":"mhq199657"},"content":"         */"},{"lineNumber":46,"author":{"gitID":"mhq199657"},"content":"        showAllPersons();"},{"lineNumber":47,"author":{"gitID":"mhq199657"},"content":"        command \u003d FilterCommand.COMMAND_WORD + \" \" + PREFIX_EXPECTED_GRADUATION_YEAR + KEYWORD_MATCHING_2019;"},{"lineNumber":48,"author":{"gitID":"mhq199657"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":49,"author":{"gitID":"mhq199657"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":50,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":51,"author":{"gitID":"mhq199657"},"content":"        /* Case: filter person twice -\u003e 5 persons found and 2 persons found*/"},{"lineNumber":52,"author":{"gitID":"mhq199657"},"content":"        showAllPersons();"},{"lineNumber":53,"author":{"gitID":"mhq199657"},"content":"        command \u003d FilterCommand.COMMAND_WORD + \" \" + PREFIX_EXPECTED_GRADUATION_YEAR + \"2017-2020\";"},{"lineNumber":54,"author":{"gitID":"mhq199657"},"content":"        ModelHelper.setFilteredList(expectedModel, ALICE, CARL, DANIEL, ELLE, FIONA);"},{"lineNumber":55,"author":{"gitID":"mhq199657"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":56,"author":{"gitID":"mhq199657"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":57,"author":{"gitID":"mhq199657"},"content":"        command \u003d FilterCommand.COMMAND_WORD + \" \" + PREFIX_EXPECTED_GRADUATION_YEAR + \"2020-2022\";"},{"lineNumber":58,"author":{"gitID":"mhq199657"},"content":"        ModelHelper.setFilteredList(expectedModel, ALICE, DANIEL);"},{"lineNumber":59,"author":{"gitID":"mhq199657"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":60,"author":{"gitID":"mhq199657"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":61,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":62,"author":{"gitID":"mhq199657"},"content":"        /* Case: filter no person in address book, 2017 -\u003e 0 persons found */"},{"lineNumber":63,"author":{"gitID":"mhq199657"},"content":"        showAllPersons();"},{"lineNumber":64,"author":{"gitID":"mhq199657"},"content":"        command \u003d FilterCommand.COMMAND_WORD + \" \" + PREFIX_EXPECTED_GRADUATION_YEAR + \"2017\";"},{"lineNumber":65,"author":{"gitID":"mhq199657"},"content":"        ModelHelper.setFilteredList(expectedModel);"},{"lineNumber":66,"author":{"gitID":"mhq199657"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":67,"author":{"gitID":"mhq199657"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":68,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":69,"author":{"gitID":"mhq199657"},"content":"        /* Case: filter multiple persons in address book, 2 keywords -\u003e 3 persons found */"},{"lineNumber":70,"author":{"gitID":"mhq199657"},"content":"        showAllPersons();"},{"lineNumber":71,"author":{"gitID":"mhq199657"},"content":"        command \u003d FilterCommand.COMMAND_WORD + \" \" + PREFIX_EXPECTED_GRADUATION_YEAR + \"2018\" + \" \""},{"lineNumber":72,"author":{"gitID":"mhq199657"},"content":"                + PREFIX_EXPECTED_GRADUATION_YEAR + KEYWORD_MATCHING_2019;"},{"lineNumber":73,"author":{"gitID":"mhq199657"},"content":"        ModelHelper.setFilteredList(expectedModel, CARL, FIONA); //only last keyword effective"},{"lineNumber":74,"author":{"gitID":"mhq199657"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":75,"author":{"gitID":"mhq199657"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":76,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":77,"author":{"gitID":"mhq199657"},"content":"        //Rating filtering"},{"lineNumber":78,"author":{"gitID":"mhq199657"},"content":"        /* Case: filters multiple persons in address book, command with leading spaces and trailing spaces"},{"lineNumber":79,"author":{"gitID":"mhq199657"},"content":"         * -\u003e 2 persons found"},{"lineNumber":80,"author":{"gitID":"mhq199657"},"content":"         */"},{"lineNumber":81,"author":{"gitID":"mhq199657"},"content":"        showAllPersons();"},{"lineNumber":82,"author":{"gitID":"mhq199657"},"content":"        command \u003d \"   \" + FilterCommand.COMMAND_WORD + \" \""},{"lineNumber":83,"author":{"gitID":"mhq199657"},"content":"                + PREFIX_RATING + \"   3.75\" + \"   \";"},{"lineNumber":84,"author":{"gitID":"mhq199657"},"content":"        expectedModel \u003d getModel();"},{"lineNumber":85,"author":{"gitID":"mhq199657"},"content":"        ModelHelper.setFilteredList(expectedModel, BENSON); // their graduation year is before or equal 2019"},{"lineNumber":86,"author":{"gitID":"mhq199657"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":87,"author":{"gitID":"mhq199657"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":88,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":89,"author":{"gitID":"mhq199657"},"content":"        /* Case: repeat previous filter command where person list is displaying the persons satisfying the filter"},{"lineNumber":90,"author":{"gitID":"mhq199657"},"content":"         * -\u003e 2 persons found"},{"lineNumber":91,"author":{"gitID":"mhq199657"},"content":"         */"},{"lineNumber":92,"author":{"gitID":"mhq199657"},"content":"        command \u003d FilterCommand.COMMAND_WORD + \" \" + PREFIX_RATING + \"3.75\";"},{"lineNumber":93,"author":{"gitID":"mhq199657"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":94,"author":{"gitID":"mhq199657"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":95,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":96,"author":{"gitID":"mhq199657"},"content":"        /* Case: filter person twice -\u003e 5 persons found and 2 persons found*/"},{"lineNumber":97,"author":{"gitID":"mhq199657"},"content":"        showAllPersons();"},{"lineNumber":98,"author":{"gitID":"mhq199657"},"content":"        command \u003d FilterCommand.COMMAND_WORD + \" \" + PREFIX_RATING + \"2-5\";"},{"lineNumber":99,"author":{"gitID":"mhq199657"},"content":"        ModelHelper.setFilteredList(expectedModel, ALICE, BENSON);"},{"lineNumber":100,"author":{"gitID":"mhq199657"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":101,"author":{"gitID":"mhq199657"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":102,"author":{"gitID":"mhq199657"},"content":"        command \u003d FilterCommand.COMMAND_WORD + \" \" + PREFIX_RATING + \"3-5\";"},{"lineNumber":103,"author":{"gitID":"mhq199657"},"content":"        ModelHelper.setFilteredList(expectedModel, BENSON);"},{"lineNumber":104,"author":{"gitID":"mhq199657"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":105,"author":{"gitID":"mhq199657"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":106,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":107,"author":{"gitID":"mhq199657"},"content":"        /* Case: filter no person in address book, 2017 -\u003e 0 persons found */"},{"lineNumber":108,"author":{"gitID":"mhq199657"},"content":"        showAllPersons();"},{"lineNumber":109,"author":{"gitID":"mhq199657"},"content":"        command \u003d FilterCommand.COMMAND_WORD + \" \" + PREFIX_RATING + \"1.0\";"},{"lineNumber":110,"author":{"gitID":"mhq199657"},"content":"        ModelHelper.setFilteredList(expectedModel);"},{"lineNumber":111,"author":{"gitID":"mhq199657"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":112,"author":{"gitID":"mhq199657"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":113,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":114,"author":{"gitID":"mhq199657"},"content":"        /* Case: filter multiple persons in address book, 2 keywords -\u003e 3 persons found */"},{"lineNumber":115,"author":{"gitID":"mhq199657"},"content":"        showAllPersons();"},{"lineNumber":116,"author":{"gitID":"mhq199657"},"content":"        command \u003d FilterCommand.COMMAND_WORD + \" \" + PREFIX_RATING + \"1.0\" + \" \""},{"lineNumber":117,"author":{"gitID":"mhq199657"},"content":"                + PREFIX_RATING + \"3.75\";"},{"lineNumber":118,"author":{"gitID":"mhq199657"},"content":"        ModelHelper.setFilteredList(expectedModel, BENSON); //only last keyword effective"},{"lineNumber":119,"author":{"gitID":"mhq199657"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":120,"author":{"gitID":"mhq199657"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":121,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":122,"author":{"gitID":"mhq199657"},"content":"        //Mixed filtering - will update more after the larger test sample is generated"},{"lineNumber":123,"author":{"gitID":"mhq199657"},"content":"        showAllPersons();"},{"lineNumber":124,"author":{"gitID":"mhq199657"},"content":"        command \u003d \"   \" + FilterCommand.COMMAND_WORD + \" \" + PREFIX_RATING + \" 1-5\" + \" \""},{"lineNumber":125,"author":{"gitID":"mhq199657"},"content":"                + PREFIX_EXPECTED_GRADUATION_YEAR + \"2021\";"},{"lineNumber":126,"author":{"gitID":"mhq199657"},"content":"        expectedModel \u003d getModel();"},{"lineNumber":127,"author":{"gitID":"mhq199657"},"content":"        ModelHelper.setFilteredList(expectedModel, BENSON); // their graduation year is before or equal 2019"},{"lineNumber":128,"author":{"gitID":"mhq199657"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":129,"author":{"gitID":"mhq199657"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":130,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":131,"author":{"gitID":"mhq199657"},"content":"        //Grade Point Average filtering"},{"lineNumber":132,"author":{"gitID":"mhq199657"},"content":"        /* Case: filters multiple persons in address book, command with leading spaces and trailing spaces"},{"lineNumber":133,"author":{"gitID":"mhq199657"},"content":"         * -\u003e 2 persons found"},{"lineNumber":134,"author":{"gitID":"mhq199657"},"content":"         */"},{"lineNumber":135,"author":{"gitID":"mhq199657"},"content":"        showAllPersons();"},{"lineNumber":136,"author":{"gitID":"mhq199657"},"content":"        command \u003d \"   \" + FilterCommand.COMMAND_WORD + \" \""},{"lineNumber":137,"author":{"gitID":"mhq199657"},"content":"                + PREFIX_GRADE_POINT_AVERAGE + \"   4.84\" + \"   \";"},{"lineNumber":138,"author":{"gitID":"mhq199657"},"content":"        expectedModel \u003d getModel();"},{"lineNumber":139,"author":{"gitID":"mhq199657"},"content":"        ModelHelper.setFilteredList(expectedModel, ALICE); // their graduation year is before or equal 2019"},{"lineNumber":140,"author":{"gitID":"mhq199657"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":141,"author":{"gitID":"mhq199657"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":142,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":143,"author":{"gitID":"mhq199657"},"content":"        /* Case: repeat previous filter command where person list is displaying the persons satisfying the filter"},{"lineNumber":144,"author":{"gitID":"mhq199657"},"content":"         * -\u003e 2 persons found"},{"lineNumber":145,"author":{"gitID":"mhq199657"},"content":"         */"},{"lineNumber":146,"author":{"gitID":"mhq199657"},"content":"        command \u003d FilterCommand.COMMAND_WORD + \" \" + PREFIX_GRADE_POINT_AVERAGE + \"4.84\";"},{"lineNumber":147,"author":{"gitID":"mhq199657"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":148,"author":{"gitID":"mhq199657"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":149,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":150,"author":{"gitID":"mhq199657"},"content":"        /* Case: filter person twice -\u003e 5 persons found and 2 persons found*/"},{"lineNumber":151,"author":{"gitID":"mhq199657"},"content":"        showAllPersons();"},{"lineNumber":152,"author":{"gitID":"mhq199657"},"content":"        command \u003d FilterCommand.COMMAND_WORD + \" \" + PREFIX_GRADE_POINT_AVERAGE + \"4.70-4.90\";"},{"lineNumber":153,"author":{"gitID":"mhq199657"},"content":"        ModelHelper.setFilteredList(expectedModel, ALICE, BENSON, FIONA);"},{"lineNumber":154,"author":{"gitID":"mhq199657"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":155,"author":{"gitID":"mhq199657"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":156,"author":{"gitID":"mhq199657"},"content":"        command \u003d FilterCommand.COMMAND_WORD + \" \" + PREFIX_GRADE_POINT_AVERAGE + \"3.00-4.80\";"},{"lineNumber":157,"author":{"gitID":"mhq199657"},"content":"        ModelHelper.setFilteredList(expectedModel, BENSON, FIONA);"},{"lineNumber":158,"author":{"gitID":"mhq199657"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":159,"author":{"gitID":"mhq199657"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":160,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":161,"author":{"gitID":"mhq199657"},"content":"        /* Case: filter no person in address book, 2017 -\u003e 0 persons found */"},{"lineNumber":162,"author":{"gitID":"mhq199657"},"content":"        showAllPersons();"},{"lineNumber":163,"author":{"gitID":"mhq199657"},"content":"        command \u003d FilterCommand.COMMAND_WORD + \" \" + PREFIX_GRADE_POINT_AVERAGE + \"1.00\";"},{"lineNumber":164,"author":{"gitID":"mhq199657"},"content":"        ModelHelper.setFilteredList(expectedModel);"},{"lineNumber":165,"author":{"gitID":"mhq199657"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":166,"author":{"gitID":"mhq199657"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":167,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":168,"author":{"gitID":"mhq199657"},"content":"        /* Case: filter multiple persons in address book, 2 keywords -\u003e 3 persons found */"},{"lineNumber":169,"author":{"gitID":"mhq199657"},"content":"        showAllPersons();"},{"lineNumber":170,"author":{"gitID":"mhq199657"},"content":"        command \u003d FilterCommand.COMMAND_WORD + \" \" + PREFIX_GRADE_POINT_AVERAGE + \"1.00\" + \" \""},{"lineNumber":171,"author":{"gitID":"mhq199657"},"content":"                + PREFIX_GRADE_POINT_AVERAGE + \"4.84\";"},{"lineNumber":172,"author":{"gitID":"mhq199657"},"content":"        ModelHelper.setFilteredList(expectedModel, ALICE); //only last keyword effective"},{"lineNumber":173,"author":{"gitID":"mhq199657"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":174,"author":{"gitID":"mhq199657"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":175,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":176,"author":{"gitID":"mhq199657"},"content":"        //Grade Point Average filtering"},{"lineNumber":177,"author":{"gitID":"mhq199657"},"content":"        /* Case: filters multiple persons in address book, command with leading spaces and trailing spaces"},{"lineNumber":178,"author":{"gitID":"mhq199657"},"content":"         * -\u003e 2 persons found"},{"lineNumber":179,"author":{"gitID":"mhq199657"},"content":"         */"},{"lineNumber":180,"author":{"gitID":"mhq199657"},"content":"        showAllPersons();"},{"lineNumber":181,"author":{"gitID":"mhq199657"},"content":"        command \u003d \"   \" + FilterCommand.COMMAND_WORD + \" \""},{"lineNumber":182,"author":{"gitID":"mhq199657"},"content":"                + PREFIX_INTERVIEW_DATE + \"   20180402\" + \"   \";"},{"lineNumber":183,"author":{"gitID":"mhq199657"},"content":"        expectedModel \u003d getModel();"},{"lineNumber":184,"author":{"gitID":"mhq199657"},"content":"        ModelHelper.setFilteredList(expectedModel, ALICE); // their graduation year is before or equal 2019"},{"lineNumber":185,"author":{"gitID":"mhq199657"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":186,"author":{"gitID":"mhq199657"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":187,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":188,"author":{"gitID":"mhq199657"},"content":"        /* Case: repeat previous filter command where person list is displaying the persons satisfying the filter"},{"lineNumber":189,"author":{"gitID":"mhq199657"},"content":"         * -\u003e 2 persons found"},{"lineNumber":190,"author":{"gitID":"mhq199657"},"content":"         */"},{"lineNumber":191,"author":{"gitID":"mhq199657"},"content":"        command \u003d FilterCommand.COMMAND_WORD + \" \" + PREFIX_INTERVIEW_DATE + \"20180402\";"},{"lineNumber":192,"author":{"gitID":"mhq199657"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":193,"author":{"gitID":"mhq199657"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":194,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":195,"author":{"gitID":"mhq199657"},"content":"        /* Case: filter person twice -\u003e 5 persons found and 2 persons found*/"},{"lineNumber":196,"author":{"gitID":"mhq199657"},"content":"        showAllPersons();"},{"lineNumber":197,"author":{"gitID":"mhq199657"},"content":"        command \u003d FilterCommand.COMMAND_WORD + \" \" + PREFIX_INTERVIEW_DATE + \"20180402-20180408\";"},{"lineNumber":198,"author":{"gitID":"mhq199657"},"content":"        ModelHelper.setFilteredList(expectedModel, ALICE, BENSON);"},{"lineNumber":199,"author":{"gitID":"mhq199657"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":200,"author":{"gitID":"mhq199657"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":201,"author":{"gitID":"mhq199657"},"content":"        command \u003d FilterCommand.COMMAND_WORD + \" \" + PREFIX_INTERVIEW_DATE + \"20180331-20180404\";"},{"lineNumber":202,"author":{"gitID":"mhq199657"},"content":"        ModelHelper.setFilteredList(expectedModel, ALICE);"},{"lineNumber":203,"author":{"gitID":"mhq199657"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":204,"author":{"gitID":"mhq199657"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":205,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":206,"author":{"gitID":"mhq199657"},"content":"        /* Case: filter no person in address book, 2017 -\u003e 0 persons found */"},{"lineNumber":207,"author":{"gitID":"mhq199657"},"content":"        showAllPersons();"},{"lineNumber":208,"author":{"gitID":"mhq199657"},"content":"        command \u003d FilterCommand.COMMAND_WORD + \" \" + PREFIX_INTERVIEW_DATE + \"19990101\";"},{"lineNumber":209,"author":{"gitID":"mhq199657"},"content":"        ModelHelper.setFilteredList(expectedModel);"},{"lineNumber":210,"author":{"gitID":"mhq199657"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":211,"author":{"gitID":"mhq199657"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":212,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":213,"author":{"gitID":"mhq199657"},"content":"        /* Case: filter multiple persons in address book, 2 keywords -\u003e 3 persons found */"},{"lineNumber":214,"author":{"gitID":"mhq199657"},"content":"        showAllPersons();"},{"lineNumber":215,"author":{"gitID":"mhq199657"},"content":"        command \u003d FilterCommand.COMMAND_WORD + \" \" + PREFIX_INTERVIEW_DATE + \"20180402\" + \" \""},{"lineNumber":216,"author":{"gitID":"mhq199657"},"content":"                + PREFIX_INTERVIEW_DATE + \"20180406\";"},{"lineNumber":217,"author":{"gitID":"mhq199657"},"content":"        ModelHelper.setFilteredList(expectedModel, BENSON); //only last keyword effective"},{"lineNumber":218,"author":{"gitID":"mhq199657"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":219,"author":{"gitID":"mhq199657"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":220,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":221,"author":{"gitID":"mhq199657"},"content":"        // general cases"},{"lineNumber":222,"author":{"gitID":"mhq199657"},"content":"        //setup a filter"},{"lineNumber":223,"author":{"gitID":"mhq199657"},"content":"        showAllPersons();"},{"lineNumber":224,"author":{"gitID":"mhq199657"},"content":"        command \u003d FilterCommand.COMMAND_WORD + \" \" + PREFIX_EXPECTED_GRADUATION_YEAR + \"2018\" + \" \""},{"lineNumber":225,"author":{"gitID":"mhq199657"},"content":"                + PREFIX_EXPECTED_GRADUATION_YEAR + KEYWORD_MATCHING_2019;"},{"lineNumber":226,"author":{"gitID":"mhq199657"},"content":"        ModelHelper.setFilteredList(expectedModel, CARL, FIONA); //only last keyword effective"},{"lineNumber":227,"author":{"gitID":"mhq199657"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":228,"author":{"gitID":"mhq199657"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":229,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":230,"author":{"gitID":"mhq199657"},"content":"        /* Case: undo previous filter command -\u003e rejected */"},{"lineNumber":231,"author":{"gitID":"mhq199657"},"content":"        command \u003d UndoCommand.COMMAND_WORD;"},{"lineNumber":232,"author":{"gitID":"mhq199657"},"content":"        String expectedResultMessage \u003d UndoCommand.MESSAGE_FAILURE;"},{"lineNumber":233,"author":{"gitID":"mhq199657"},"content":"        assertCommandFailure(command, expectedResultMessage);"},{"lineNumber":234,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":235,"author":{"gitID":"mhq199657"},"content":"        /* Case: redo previous filter command -\u003e rejected */"},{"lineNumber":236,"author":{"gitID":"mhq199657"},"content":"        command \u003d RedoCommand.COMMAND_WORD;"},{"lineNumber":237,"author":{"gitID":"mhq199657"},"content":"        expectedResultMessage \u003d RedoCommand.MESSAGE_FAILURE;"},{"lineNumber":238,"author":{"gitID":"mhq199657"},"content":"        assertCommandFailure(command, expectedResultMessage);"},{"lineNumber":239,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":240,"author":{"gitID":"mhq199657"},"content":"        /* Case: filter same persons in address book after deleting 1 of them -\u003e 2 person found */"},{"lineNumber":241,"author":{"gitID":"mhq199657"},"content":"        executeCommand(DeleteCommand.COMMAND_WORD + \" 1\");"},{"lineNumber":242,"author":{"gitID":"mhq199657"},"content":"        assertFalse(getModel().getAddressBook().getPersonList().contains(CARL));"},{"lineNumber":243,"author":{"gitID":"mhq199657"},"content":"        showAllPersons();"},{"lineNumber":244,"author":{"gitID":"mhq199657"},"content":"        command \u003d FilterCommand.COMMAND_WORD + \" \" + PREFIX_EXPECTED_GRADUATION_YEAR + \"2017-2019\";"},{"lineNumber":245,"author":{"gitID":"mhq199657"},"content":"        expectedModel \u003d getModel();"},{"lineNumber":246,"author":{"gitID":"mhq199657"},"content":"        ModelHelper.setFilteredList(expectedModel, ELLE, FIONA);"},{"lineNumber":247,"author":{"gitID":"mhq199657"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":248,"author":{"gitID":"mhq199657"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":249,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":250,"author":{"gitID":"Ang-YC"},"content":"        /* Case: filter while a person is selected -\u003e selected card remains selected */"},{"lineNumber":251,"author":{"gitID":"mhq199657"},"content":"        showAllPersons();"},{"lineNumber":252,"author":{"gitID":"mhq199657"},"content":"        selectPerson(Index.fromOneBased(4));"},{"lineNumber":253,"author":{"gitID":"mhq199657"},"content":"        assertTrue(getPersonListPanel().getHandleToSelectedCard().getName().equals(ELLE.getName().fullName));"},{"lineNumber":254,"author":{"gitID":"mhq199657"},"content":"        command \u003d FilterCommand.COMMAND_WORD + \" \" + PREFIX_EXPECTED_GRADUATION_YEAR + \"2017-2019\";"},{"lineNumber":255,"author":{"gitID":"mhq199657"},"content":"        ModelHelper.setFilteredList(expectedModel, ELLE, FIONA);"},{"lineNumber":256,"author":{"gitID":"mhq199657"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":257,"author":{"gitID":"Ang-YC"},"content":"        assertSelectedCardChanged(Index.fromZeroBased(expectedModel.getFilteredPersonList().indexOf(ELLE)));"},{"lineNumber":258,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":259,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":260,"author":{"gitID":"mhq199657"},"content":"        /* Case: filter person in empty address book -\u003e 0 persons found */"},{"lineNumber":261,"author":{"gitID":"mhq199657"},"content":"        deleteAllPersons();"},{"lineNumber":262,"author":{"gitID":"mhq199657"},"content":"        command \u003d FilterCommand.COMMAND_WORD + \" \" + PREFIX_EXPECTED_GRADUATION_YEAR + KEYWORD_MATCHING_2019;"},{"lineNumber":263,"author":{"gitID":"mhq199657"},"content":"        expectedModel \u003d getModel();"},{"lineNumber":264,"author":{"gitID":"mhq199657"},"content":"        ModelHelper.setFilteredList(expectedModel);"},{"lineNumber":265,"author":{"gitID":"mhq199657"},"content":"        assertCommandSuccess(command, expectedModel);"},{"lineNumber":266,"author":{"gitID":"mhq199657"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":267,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":268,"author":{"gitID":"mhq199657"},"content":"        /* Case: mixed case command word -\u003e rejected */"},{"lineNumber":269,"author":{"gitID":"mhq199657"},"content":"        command \u003d \"fiLteR y/2020\";"},{"lineNumber":270,"author":{"gitID":"mhq199657"},"content":"        assertCommandFailure(command, MESSAGE_UNKNOWN_COMMAND);"},{"lineNumber":271,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":272,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":273,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":274,"author":{"gitID":"mhq199657"},"content":"     * Executes {@code command} and verifies that the command box displays an empty string, the result display"},{"lineNumber":275,"author":{"gitID":"mhq199657"},"content":"     * box displays {@code Messages#MESSAGE_PERSONS_LISTED_OVERVIEW} with the number of people in the filtered list,"},{"lineNumber":276,"author":{"gitID":"mhq199657"},"content":"     * and the model related components equal to {@code expectedModel}."},{"lineNumber":277,"author":{"gitID":"mhq199657"},"content":"     * These verifications are done by"},{"lineNumber":278,"author":{"gitID":"mhq199657"},"content":"     * {@code AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"},{"lineNumber":279,"author":{"gitID":"mhq199657"},"content":"     * Also verifies that the status bar remains unchanged, and the command box has the default style class, and the"},{"lineNumber":280,"author":{"gitID":"mhq199657"},"content":"     * selected card updated accordingly, depending on {@code cardStatus}."},{"lineNumber":281,"author":{"gitID":"mhq199657"},"content":"     * @see AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":282,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":283,"author":{"gitID":"mhq199657"},"content":"    private void assertCommandSuccess(String command, Model expectedModel) {"},{"lineNumber":284,"author":{"gitID":"mhq199657"},"content":"        String expectedResultMessage \u003d String.format("},{"lineNumber":285,"author":{"gitID":"mhq199657"},"content":"                MESSAGE_PERSONS_LISTED_OVERVIEW, expectedModel.getFilteredPersonList().size());"},{"lineNumber":286,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":287,"author":{"gitID":"mhq199657"},"content":"        executeCommand(command);"},{"lineNumber":288,"author":{"gitID":"mhq199657"},"content":"        assertApplicationDisplaysExpected(\"\", expectedResultMessage, expectedModel);"},{"lineNumber":289,"author":{"gitID":"mhq199657"},"content":"        assertCommandBoxShowsDefaultStyle();"},{"lineNumber":290,"author":{"gitID":"mhq199657"},"content":"        assertStatusBarUnchanged();"},{"lineNumber":291,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":292,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":293,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":294,"author":{"gitID":"mhq199657"},"content":"     * Executes {@code command} and verifies that the command box displays {@code command}, the result display"},{"lineNumber":295,"author":{"gitID":"mhq199657"},"content":"     * box displays {@code expectedResultMessage} and the model related components equal to the current model."},{"lineNumber":296,"author":{"gitID":"mhq199657"},"content":"     * These verifications are done by"},{"lineNumber":297,"author":{"gitID":"mhq199657"},"content":"     * {@code AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"},{"lineNumber":298,"author":{"gitID":"mhq199657"},"content":"     * Also verifies that the browser url, selected card and status bar remain unchanged, and the command box has the"},{"lineNumber":299,"author":{"gitID":"mhq199657"},"content":"     * error style."},{"lineNumber":300,"author":{"gitID":"mhq199657"},"content":"     * @see AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":301,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":302,"author":{"gitID":"mhq199657"},"content":"    private void assertCommandFailure(String command, String expectedResultMessage) {"},{"lineNumber":303,"author":{"gitID":"mhq199657"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":304,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":305,"author":{"gitID":"mhq199657"},"content":"        executeCommand(command);"},{"lineNumber":306,"author":{"gitID":"mhq199657"},"content":"        assertApplicationDisplaysExpected(command, expectedResultMessage, expectedModel);"},{"lineNumber":307,"author":{"gitID":"mhq199657"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":308,"author":{"gitID":"mhq199657"},"content":"        assertCommandBoxShowsErrorStyle();"},{"lineNumber":309,"author":{"gitID":"mhq199657"},"content":"        assertStatusBarUnchanged();"},{"lineNumber":310,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":311,"author":{"gitID":"mhq199657"},"content":"}"}],"authorContributionMap":{"mhq199657":309,"Ang-YC":2}},{"path":"src/test/java/seedu/address/ui/PersonListPanelTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.EventsUtil.postNow;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPersons;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.address.ui.testutil.GuiTestAssert.assertCardDisplaysPerson;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.address.ui.testutil.GuiTestAssert.assertCardEquals;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import guitests.guihandles.PersonCardHandle;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import guitests.guihandles.PersonListPanelHandle;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.ui.JumpToListRequestEvent;"},{"lineNumber":18,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.logic.Logic;"},{"lineNumber":19,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.logic.LogicManager;"},{"lineNumber":20,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.model.Model;"},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"public class PersonListPanelTest extends GuiUnitTest {"},{"lineNumber":25,"author":{"gitID":"-"},"content":"    private static final ObservableList\u003cPerson\u003e TYPICAL_PERSONS \u003d"},{"lineNumber":26,"author":{"gitID":"-"},"content":"            FXCollections.observableList(getTypicalPersons());"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    private static final JumpToListRequestEvent JUMP_TO_SECOND_EVENT \u003d new JumpToListRequestEvent(INDEX_SECOND_PERSON);"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"-"},"content":"    private PersonListPanelHandle personListPanelHandle;"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"    @Before"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    public void setUp() {"},{"lineNumber":34,"author":{"gitID":"Ang-YC"},"content":"        Model model \u003d new ModelManager();"},{"lineNumber":35,"author":{"gitID":"Ang-YC"},"content":"        Logic logic \u003d new LogicManager(model);"},{"lineNumber":36,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":37,"author":{"gitID":"Ang-YC"},"content":"        PersonListPanel personListPanel \u003d new PersonListPanel(TYPICAL_PERSONS, logic, false);"},{"lineNumber":38,"author":{"gitID":"-"},"content":"        uiPartRule.setUiPart(personListPanel);"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"        personListPanelHandle \u003d new PersonListPanelHandle(getChildNode(personListPanel.getRoot(),"},{"lineNumber":41,"author":{"gitID":"-"},"content":"                PersonListPanelHandle.PERSON_LIST_VIEW_ID));"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":45,"author":{"gitID":"-"},"content":"    public void display() {"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        for (int i \u003d 0; i \u003c TYPICAL_PERSONS.size(); i++) {"},{"lineNumber":47,"author":{"gitID":"-"},"content":"            personListPanelHandle.navigateToCard(TYPICAL_PERSONS.get(i));"},{"lineNumber":48,"author":{"gitID":"-"},"content":"            Person expectedPerson \u003d TYPICAL_PERSONS.get(i);"},{"lineNumber":49,"author":{"gitID":"-"},"content":"            PersonCardHandle actualCard \u003d personListPanelHandle.getPersonCardHandle(i);"},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"-"},"content":"            assertCardDisplaysPerson(expectedPerson, actualCard);"},{"lineNumber":52,"author":{"gitID":"Ang-YC"},"content":"            assertEquals(Integer.toString(i + 1), actualCard.getId());"},{"lineNumber":53,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":54,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":55,"author":{"gitID":"-"},"content":""},{"lineNumber":56,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":57,"author":{"gitID":"-"},"content":"    public void handleJumpToListRequestEvent() {"},{"lineNumber":58,"author":{"gitID":"-"},"content":"        postNow(JUMP_TO_SECOND_EVENT);"},{"lineNumber":59,"author":{"gitID":"-"},"content":"        guiRobot.pauseForHuman();"},{"lineNumber":60,"author":{"gitID":"-"},"content":""},{"lineNumber":61,"author":{"gitID":"-"},"content":"        PersonCardHandle expectedCard \u003d personListPanelHandle.getPersonCardHandle(INDEX_SECOND_PERSON.getZeroBased());"},{"lineNumber":62,"author":{"gitID":"-"},"content":"        PersonCardHandle selectedCard \u003d personListPanelHandle.getHandleToSelectedCard();"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        assertCardEquals(expectedCard, selectedCard);"},{"lineNumber":64,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"-":56,"Ang-YC":9}},{"path":"src/test/java/systemtests/EditCommandSystemTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"Ang-YC"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;"},{"lineNumber":6,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;"},{"lineNumber":7,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMMENT_DESC_AMY;"},{"lineNumber":8,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMMENT_DESC_BOB;"},{"lineNumber":9,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;"},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;"},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EXPECTED_GRADUATION_YEAR_DESC_AMY;"},{"lineNumber":12,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EXPECTED_GRADUATION_YEAR_DESC_BOB;"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GRADE_POINT_AVERAGE_DESC_AMY;"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GRADE_POINT_AVERAGE_DESC_BOB;"},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;"},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;"},{"lineNumber":17,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;"},{"lineNumber":18,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;"},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;"},{"lineNumber":20,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_UNIVERSITY_DESC;"},{"lineNumber":21,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.JOB_APPLIED_DESC_AMY;"},{"lineNumber":22,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.JOB_APPLIED_DESC_BOB;"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MAJOR_DESC_AMY;"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MAJOR_DESC_BOB;"},{"lineNumber":25,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;"},{"lineNumber":26,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;"},{"lineNumber":27,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;"},{"lineNumber":28,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;"},{"lineNumber":29,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PROFILE_IMAGE_DESC_AMY;"},{"lineNumber":30,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PROFILE_IMAGE_DESC_BOB;"},{"lineNumber":31,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RESUME_DESC_AMY;"},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RESUME_DESC_BOB;"},{"lineNumber":33,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;"},{"lineNumber":34,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;"},{"lineNumber":35,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.UNIVERSITY_DESC_AMY;"},{"lineNumber":36,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.UNIVERSITY_DESC_BOB;"},{"lineNumber":37,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;"},{"lineNumber":38,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMMENT_AMY;"},{"lineNumber":39,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;"},{"lineNumber":40,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXPECTED_GRADUATION_YEAR_AMY;"},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GRADE_POINT_AVERAGE_AMY;"},{"lineNumber":42,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JOB_APPLIED_AMY;"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MAJOR_AMY;"},{"lineNumber":44,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;"},{"lineNumber":45,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;"},{"lineNumber":46,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;"},{"lineNumber":47,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PROFILE_IMAGE_AMY;"},{"lineNumber":48,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RESUME_AMY;"},{"lineNumber":49,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;"},{"lineNumber":50,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UNIVERSITY_AMY;"},{"lineNumber":51,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMENT;"},{"lineNumber":52,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IMAGE;"},{"lineNumber":53,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RESUME;"},{"lineNumber":54,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"},{"lineNumber":55,"author":{"gitID":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;"},{"lineNumber":56,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"},{"lineNumber":57,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;"},{"lineNumber":58,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;"},{"lineNumber":59,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;"},{"lineNumber":60,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.KEYWORD_MATCHING_MEIER;"},{"lineNumber":61,"author":{"gitID":"-"},"content":""},{"lineNumber":62,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":63,"author":{"gitID":"-"},"content":""},{"lineNumber":64,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Messages;"},{"lineNumber":65,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":66,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.EditCommand;"},{"lineNumber":67,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.RedoCommand;"},{"lineNumber":68,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.UndoCommand;"},{"lineNumber":69,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":70,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Address;"},{"lineNumber":71,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Email;"},{"lineNumber":72,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Name;"},{"lineNumber":73,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":74,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Phone;"},{"lineNumber":75,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.University;"},{"lineNumber":76,"author":{"gitID":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;"},{"lineNumber":77,"author":{"gitID":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;"},{"lineNumber":78,"author":{"gitID":"-"},"content":"import seedu.address.model.tag.Tag;"},{"lineNumber":79,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":80,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.testutil.PersonUtil;"},{"lineNumber":81,"author":{"gitID":"-"},"content":""},{"lineNumber":82,"author":{"gitID":"-"},"content":"public class EditCommandSystemTest extends AddressBookSystemTest {"},{"lineNumber":83,"author":{"gitID":"-"},"content":""},{"lineNumber":84,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":85,"author":{"gitID":"-"},"content":"    public void edit() throws Exception {"},{"lineNumber":86,"author":{"gitID":"-"},"content":"        Model model \u003d getModel();"},{"lineNumber":87,"author":{"gitID":"-"},"content":""},{"lineNumber":88,"author":{"gitID":"-"},"content":"        /* ----------------- Performing edit operation while an unfiltered list is being shown ---------------------- */"},{"lineNumber":89,"author":{"gitID":"-"},"content":""},{"lineNumber":90,"author":{"gitID":"-"},"content":"        /* Case: edit all fields, command with leading spaces, trailing spaces and multiple spaces between each field"},{"lineNumber":91,"author":{"gitID":"-"},"content":"         * -\u003e edited"},{"lineNumber":92,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":93,"author":{"gitID":"-"},"content":"        Index index \u003d INDEX_FIRST_PERSON;"},{"lineNumber":94,"author":{"gitID":"mhq199657"},"content":"        String command \u003d \" \" + EditCommand.COMMAND_WORD + \"  \" + index.getOneBased() + \"  \" + NAME_DESC_AMY + \"  \""},{"lineNumber":95,"author":{"gitID":"kexiaowen"},"content":"                + PHONE_DESC_AMY + \" \" + EMAIL_DESC_AMY + \"  \" + ADDRESS_DESC_AMY + \" \" + UNIVERSITY_DESC_AMY + \" \""},{"lineNumber":96,"author":{"gitID":"tanhengyeow"},"content":"                + EXPECTED_GRADUATION_YEAR_DESC_AMY + \" \" + MAJOR_DESC_AMY + \" \""},{"lineNumber":97,"author":{"gitID":"Ang-YC"},"content":"                + GRADE_POINT_AVERAGE_DESC_AMY + \" \" + JOB_APPLIED_DESC_AMY + \" \""},{"lineNumber":98,"author":{"gitID":"Ang-YC"},"content":"                + RESUME_DESC_AMY + \" \" + PROFILE_IMAGE_DESC_AMY + \" \" + COMMENT_DESC_AMY + \" \" + TAG_DESC_FRIEND + \" \";"},{"lineNumber":99,"author":{"gitID":"mhq199657"},"content":"        Person editedPerson \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)"},{"lineNumber":100,"author":{"gitID":"kexiaowen"},"content":"                .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withUniversity(VALID_UNIVERSITY_AMY)"},{"lineNumber":101,"author":{"gitID":"kexiaowen"},"content":"                .withResume(VALID_RESUME_AMY)"},{"lineNumber":102,"author":{"gitID":"Ang-YC"},"content":"                .withProfileImage(VALID_PROFILE_IMAGE_AMY).withComment(VALID_COMMENT_AMY)"},{"lineNumber":103,"author":{"gitID":"tanhengyeow"},"content":"                .withExpectedGraduationYear(VALID_EXPECTED_GRADUATION_YEAR_AMY).withMajor(VALID_MAJOR_AMY)"},{"lineNumber":104,"author":{"gitID":"tanhengyeow"},"content":"                .withGradePointAverage(VALID_GRADE_POINT_AVERAGE_AMY)"},{"lineNumber":105,"author":{"gitID":"kexiaowen"},"content":"                .withJobApplied(VALID_JOB_APPLIED_AMY)"},{"lineNumber":106,"author":{"gitID":"tanhengyeow"},"content":"                .withTags(VALID_TAG_FRIEND).build();"},{"lineNumber":107,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, index, editedPerson);"},{"lineNumber":108,"author":{"gitID":"-"},"content":""},{"lineNumber":109,"author":{"gitID":"-"},"content":"        /* Case: undo editing the last person in the list -\u003e last person restored */"},{"lineNumber":110,"author":{"gitID":"-"},"content":"        command \u003d UndoCommand.COMMAND_WORD;"},{"lineNumber":111,"author":{"gitID":"-"},"content":"        String expectedResultMessage \u003d UndoCommand.MESSAGE_SUCCESS;"},{"lineNumber":112,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, model, expectedResultMessage);"},{"lineNumber":113,"author":{"gitID":"-"},"content":""},{"lineNumber":114,"author":{"gitID":"-"},"content":"        /* Case: redo editing the last person in the list -\u003e last person edited again */"},{"lineNumber":115,"author":{"gitID":"-"},"content":"        command \u003d RedoCommand.COMMAND_WORD;"},{"lineNumber":116,"author":{"gitID":"-"},"content":"        expectedResultMessage \u003d RedoCommand.MESSAGE_SUCCESS;"},{"lineNumber":117,"author":{"gitID":"-"},"content":"        model.updatePerson("},{"lineNumber":118,"author":{"gitID":"-"},"content":"                getModel().getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()), editedPerson);"},{"lineNumber":119,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, model, expectedResultMessage);"},{"lineNumber":120,"author":{"gitID":"-"},"content":""},{"lineNumber":121,"author":{"gitID":"-"},"content":"        /* Case: edit a person with new values same as existing values -\u003e edited */"},{"lineNumber":122,"author":{"gitID":"mhq199657"},"content":"        command \u003d EditCommand.COMMAND_WORD + \" \" + index.getOneBased() + NAME_DESC_AMY + PHONE_DESC_AMY"},{"lineNumber":123,"author":{"gitID":"kexiaowen"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + UNIVERSITY_DESC_AMY + EXPECTED_GRADUATION_YEAR_DESC_AMY"},{"lineNumber":124,"author":{"gitID":"kexiaowen"},"content":"                + MAJOR_DESC_AMY + GRADE_POINT_AVERAGE_DESC_AMY + JOB_APPLIED_DESC_AMY + RESUME_DESC_AMY"},{"lineNumber":125,"author":{"gitID":"Ang-YC"},"content":"                + PROFILE_IMAGE_DESC_AMY + COMMENT_DESC_AMY + TAG_DESC_FRIEND;"},{"lineNumber":126,"author":{"gitID":"mhq199657"},"content":"        assertCommandSuccess(command, index, AMY);"},{"lineNumber":127,"author":{"gitID":"-"},"content":""},{"lineNumber":128,"author":{"gitID":"-"},"content":"        /* Case: edit some fields -\u003e edited */"},{"lineNumber":129,"author":{"gitID":"-"},"content":"        index \u003d INDEX_FIRST_PERSON;"},{"lineNumber":130,"author":{"gitID":"-"},"content":"        command \u003d EditCommand.COMMAND_WORD + \" \" + index.getOneBased() + TAG_DESC_FRIEND;"},{"lineNumber":131,"author":{"gitID":"-"},"content":"        Person personToEdit \u003d getModel().getFilteredPersonList().get(index.getZeroBased());"},{"lineNumber":132,"author":{"gitID":"-"},"content":"        editedPerson \u003d new PersonBuilder(personToEdit).withTags(VALID_TAG_FRIEND).build();"},{"lineNumber":133,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, index, editedPerson);"},{"lineNumber":134,"author":{"gitID":"-"},"content":""},{"lineNumber":135,"author":{"gitID":"mhq199657"},"content":"        /* Case: clear resume -\u003e cleared */"},{"lineNumber":136,"author":{"gitID":"-"},"content":"        index \u003d INDEX_FIRST_PERSON;"},{"lineNumber":137,"author":{"gitID":"mhq199657"},"content":"        command \u003d EditCommand.COMMAND_WORD + \" \" + index.getOneBased() + \" \" + PREFIX_RESUME.getPrefix();"},{"lineNumber":138,"author":{"gitID":"mhq199657"},"content":"        editedPerson \u003d new PersonBuilder(personToEdit).withResume(null).build();"},{"lineNumber":139,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, index, editedPerson);"},{"lineNumber":140,"author":{"gitID":"-"},"content":""},{"lineNumber":141,"author":{"gitID":"Ang-YC"},"content":"        /* Case: clear profile image -\u003e cleared */"},{"lineNumber":142,"author":{"gitID":"-"},"content":"        index \u003d INDEX_FIRST_PERSON;"},{"lineNumber":143,"author":{"gitID":"Ang-YC"},"content":"        command \u003d EditCommand.COMMAND_WORD + \" \" + index.getOneBased() + \" \" + PREFIX_IMAGE.getPrefix();"},{"lineNumber":144,"author":{"gitID":"Ang-YC"},"content":"        editedPerson \u003d new PersonBuilder(personToEdit).withResume(null).withProfileImage(null).build();"},{"lineNumber":145,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, index, editedPerson);"},{"lineNumber":146,"author":{"gitID":"-"},"content":""},{"lineNumber":147,"author":{"gitID":"Ang-YC"},"content":"        /* Case: empty comment -\u003e emptied */"},{"lineNumber":148,"author":{"gitID":"-"},"content":"        index \u003d INDEX_FIRST_PERSON;"},{"lineNumber":149,"author":{"gitID":"Ang-YC"},"content":"        command \u003d EditCommand.COMMAND_WORD + \" \" + index.getOneBased() + \" \" + PREFIX_COMMENT.getPrefix();"},{"lineNumber":150,"author":{"gitID":"Ang-YC"},"content":"        editedPerson \u003d new PersonBuilder(personToEdit)"},{"lineNumber":151,"author":{"gitID":"Ang-YC"},"content":"                .withResume(null).withProfileImage(null).withComment(null).build();"},{"lineNumber":152,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, index, editedPerson);"},{"lineNumber":153,"author":{"gitID":"-"},"content":""},{"lineNumber":154,"author":{"gitID":"-"},"content":"        /* Case: clear tags -\u003e cleared */"},{"lineNumber":155,"author":{"gitID":"-"},"content":"        index \u003d INDEX_FIRST_PERSON;"},{"lineNumber":156,"author":{"gitID":"-"},"content":"        command \u003d EditCommand.COMMAND_WORD + \" \" + index.getOneBased() + \" \" + PREFIX_TAG.getPrefix();"},{"lineNumber":157,"author":{"gitID":"Ang-YC"},"content":"        editedPerson \u003d new PersonBuilder(personToEdit)"},{"lineNumber":158,"author":{"gitID":"Ang-YC"},"content":"                .withResume(null).withProfileImage(null).withComment(null).withTags().build();"},{"lineNumber":159,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, index, editedPerson);"},{"lineNumber":160,"author":{"gitID":"-"},"content":""},{"lineNumber":161,"author":{"gitID":"-"},"content":"        /* ------------------ Performing edit operation while a filtered list is being shown ------------------------ */"},{"lineNumber":162,"author":{"gitID":"-"},"content":""},{"lineNumber":163,"author":{"gitID":"-"},"content":"        /* Case: filtered person list, edit index within bounds of address book and person list -\u003e edited */"},{"lineNumber":164,"author":{"gitID":"-"},"content":"        showPersonsWithName(KEYWORD_MATCHING_MEIER);"},{"lineNumber":165,"author":{"gitID":"-"},"content":"        index \u003d INDEX_FIRST_PERSON;"},{"lineNumber":166,"author":{"gitID":"-"},"content":"        assertTrue(index.getZeroBased() \u003c getModel().getFilteredPersonList().size());"},{"lineNumber":167,"author":{"gitID":"-"},"content":"        command \u003d EditCommand.COMMAND_WORD + \" \" + index.getOneBased() + \" \" + NAME_DESC_BOB;"},{"lineNumber":168,"author":{"gitID":"-"},"content":"        personToEdit \u003d getModel().getFilteredPersonList().get(index.getZeroBased());"},{"lineNumber":169,"author":{"gitID":"-"},"content":"        editedPerson \u003d new PersonBuilder(personToEdit).withName(VALID_NAME_BOB).build();"},{"lineNumber":170,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, index, editedPerson);"},{"lineNumber":171,"author":{"gitID":"-"},"content":""},{"lineNumber":172,"author":{"gitID":"-"},"content":"        /* Case: filtered person list, edit index within bounds of address book but out of bounds of person list"},{"lineNumber":173,"author":{"gitID":"-"},"content":"         * -\u003e rejected"},{"lineNumber":174,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":175,"author":{"gitID":"-"},"content":"        showPersonsWithName(KEYWORD_MATCHING_MEIER);"},{"lineNumber":176,"author":{"gitID":"-"},"content":"        int invalidIndex \u003d getModel().getAddressBook().getPersonList().size();"},{"lineNumber":177,"author":{"gitID":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" \" + invalidIndex + NAME_DESC_BOB,"},{"lineNumber":178,"author":{"gitID":"-"},"content":"                Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"},{"lineNumber":179,"author":{"gitID":"-"},"content":""},{"lineNumber":180,"author":{"gitID":"-"},"content":"        /* --------------------- Performing edit operation while a person card is selected -------------------------- */"},{"lineNumber":181,"author":{"gitID":"-"},"content":""},{"lineNumber":182,"author":{"gitID":"-"},"content":"        /* Case: selects first card in the person list, edit a person -\u003e edited, card selection remains unchanged but"},{"lineNumber":183,"author":{"gitID":"-"},"content":"         * browser url changes"},{"lineNumber":184,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":185,"author":{"gitID":"-"},"content":"        showAllPersons();"},{"lineNumber":186,"author":{"gitID":"-"},"content":"        index \u003d INDEX_FIRST_PERSON;"},{"lineNumber":187,"author":{"gitID":"-"},"content":"        selectPerson(index);"},{"lineNumber":188,"author":{"gitID":"-"},"content":"        command \u003d EditCommand.COMMAND_WORD + \" \" + index.getOneBased() + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY"},{"lineNumber":189,"author":{"gitID":"kexiaowen"},"content":"                + ADDRESS_DESC_AMY + UNIVERSITY_DESC_AMY + EXPECTED_GRADUATION_YEAR_DESC_AMY + MAJOR_DESC_AMY"},{"lineNumber":190,"author":{"gitID":"Ang-YC"},"content":"                + GRADE_POINT_AVERAGE_DESC_AMY + JOB_APPLIED_DESC_AMY"},{"lineNumber":191,"author":{"gitID":"Ang-YC"},"content":"                + RESUME_DESC_AMY + PROFILE_IMAGE_DESC_AMY + COMMENT_DESC_AMY + TAG_DESC_FRIEND;"},{"lineNumber":192,"author":{"gitID":"-"},"content":"        // this can be misleading: card selection actually remains unchanged but the"},{"lineNumber":193,"author":{"gitID":"-"},"content":"        // browser\u0027s url is updated to reflect the new person\u0027s name"},{"lineNumber":194,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, index, AMY, index);"},{"lineNumber":195,"author":{"gitID":"-"},"content":""},{"lineNumber":196,"author":{"gitID":"-"},"content":"        /* --------------------------------- Performing invalid edit operation -------------------------------------- */"},{"lineNumber":197,"author":{"gitID":"-"},"content":""},{"lineNumber":198,"author":{"gitID":"-"},"content":"        /* Case: invalid index (0) -\u003e rejected */"},{"lineNumber":199,"author":{"gitID":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" 0\" + NAME_DESC_BOB,"},{"lineNumber":200,"author":{"gitID":"-"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));"},{"lineNumber":201,"author":{"gitID":"-"},"content":""},{"lineNumber":202,"author":{"gitID":"-"},"content":"        /* Case: invalid index (-1) -\u003e rejected */"},{"lineNumber":203,"author":{"gitID":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" -1\" + NAME_DESC_BOB,"},{"lineNumber":204,"author":{"gitID":"-"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));"},{"lineNumber":205,"author":{"gitID":"-"},"content":""},{"lineNumber":206,"author":{"gitID":"-"},"content":"        /* Case: invalid index (size + 1) -\u003e rejected */"},{"lineNumber":207,"author":{"gitID":"-"},"content":"        invalidIndex \u003d getModel().getFilteredPersonList().size() + 1;"},{"lineNumber":208,"author":{"gitID":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" \" + invalidIndex + NAME_DESC_BOB,"},{"lineNumber":209,"author":{"gitID":"-"},"content":"                Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"},{"lineNumber":210,"author":{"gitID":"-"},"content":""},{"lineNumber":211,"author":{"gitID":"-"},"content":"        /* Case: missing index -\u003e rejected */"},{"lineNumber":212,"author":{"gitID":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + NAME_DESC_BOB,"},{"lineNumber":213,"author":{"gitID":"-"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));"},{"lineNumber":214,"author":{"gitID":"-"},"content":""},{"lineNumber":215,"author":{"gitID":"-"},"content":"        /* Case: missing all fields -\u003e rejected */"},{"lineNumber":216,"author":{"gitID":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased(),"},{"lineNumber":217,"author":{"gitID":"-"},"content":"                EditCommand.MESSAGE_NOT_EDITED);"},{"lineNumber":218,"author":{"gitID":"-"},"content":""},{"lineNumber":219,"author":{"gitID":"-"},"content":"        /* Case: invalid name -\u003e rejected */"},{"lineNumber":220,"author":{"gitID":"mhq199657"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased()"},{"lineNumber":221,"author":{"gitID":"mhq199657"},"content":"                + INVALID_NAME_DESC, Name.MESSAGE_NAME_CONSTRAINTS);"},{"lineNumber":222,"author":{"gitID":"-"},"content":""},{"lineNumber":223,"author":{"gitID":"-"},"content":"        /* Case: invalid phone -\u003e rejected */"},{"lineNumber":224,"author":{"gitID":"mhq199657"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased()"},{"lineNumber":225,"author":{"gitID":"mhq199657"},"content":"                + INVALID_PHONE_DESC, Phone.MESSAGE_PHONE_CONSTRAINTS);"},{"lineNumber":226,"author":{"gitID":"-"},"content":""},{"lineNumber":227,"author":{"gitID":"-"},"content":"        /* Case: invalid email -\u003e rejected */"},{"lineNumber":228,"author":{"gitID":"mhq199657"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased()"},{"lineNumber":229,"author":{"gitID":"mhq199657"},"content":"                + INVALID_EMAIL_DESC, Email.MESSAGE_EMAIL_CONSTRAINTS);"},{"lineNumber":230,"author":{"gitID":"-"},"content":""},{"lineNumber":231,"author":{"gitID":"-"},"content":"        /* Case: invalid address -\u003e rejected */"},{"lineNumber":232,"author":{"gitID":"mhq199657"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased()"},{"lineNumber":233,"author":{"gitID":"mhq199657"},"content":"                + INVALID_ADDRESS_DESC, Address.MESSAGE_ADDRESS_CONSTRAINTS);"},{"lineNumber":234,"author":{"gitID":"-"},"content":""},{"lineNumber":235,"author":{"gitID":"kexiaowen"},"content":"        /* Case: invalid university -\u003e rejected */"},{"lineNumber":236,"author":{"gitID":"mhq199657"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased()"},{"lineNumber":237,"author":{"gitID":"kexiaowen"},"content":"                + INVALID_UNIVERSITY_DESC, University.MESSAGE_UNIVERSITY_CONSTRAINTS);"},{"lineNumber":238,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":239,"author":{"gitID":"-"},"content":"        /* Case: invalid tag -\u003e rejected */"},{"lineNumber":240,"author":{"gitID":"mhq199657"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased()"},{"lineNumber":241,"author":{"gitID":"mhq199657"},"content":"                + INVALID_TAG_DESC, Tag.MESSAGE_TAG_CONSTRAINTS);"},{"lineNumber":242,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":243,"author":{"gitID":"Ang-YC"},"content":"        /* Case: edit a person with new values same as another person\u0027s values -\u003e rejected */"},{"lineNumber":244,"author":{"gitID":"Ang-YC"},"content":"        executeCommand(PersonUtil.getAddCommand(BOB));"},{"lineNumber":245,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(getModel().getAddressBook().getPersonList().contains(BOB));"},{"lineNumber":246,"author":{"gitID":"-"},"content":"        index \u003d INDEX_FIRST_PERSON;"},{"lineNumber":247,"author":{"gitID":"Ang-YC"},"content":"        assertFalse(getModel().getFilteredPersonList().get(index.getZeroBased()).equals(BOB));"},{"lineNumber":248,"author":{"gitID":"Ang-YC"},"content":"        command \u003d EditCommand.COMMAND_WORD + \" \" + index.getOneBased() + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB"},{"lineNumber":249,"author":{"gitID":"kexiaowen"},"content":"                + ADDRESS_DESC_BOB + UNIVERSITY_DESC_BOB + EXPECTED_GRADUATION_YEAR_DESC_BOB + MAJOR_DESC_BOB"},{"lineNumber":250,"author":{"gitID":"Ang-YC"},"content":"                + GRADE_POINT_AVERAGE_DESC_BOB + JOB_APPLIED_DESC_BOB + RESUME_DESC_BOB + PROFILE_IMAGE_DESC_BOB"},{"lineNumber":251,"author":{"gitID":"Ang-YC"},"content":"                + COMMENT_DESC_BOB + TAG_DESC_FRIEND + TAG_DESC_HUSBAND;"},{"lineNumber":252,"author":{"gitID":"Ang-YC"},"content":"        assertCommandFailure(command, EditCommand.MESSAGE_DUPLICATE_PERSON);"},{"lineNumber":253,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":254,"author":{"gitID":"Ang-YC"},"content":"        /* Case: edit a person with new values same as another person\u0027s values but with different tags -\u003e rejected */"},{"lineNumber":255,"author":{"gitID":"mhq199657"},"content":"        index \u003d INDEX_THIRD_PERSON;"},{"lineNumber":256,"author":{"gitID":"Ang-YC"},"content":"        command \u003d EditCommand.COMMAND_WORD + \" \" + index.getOneBased() + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB"},{"lineNumber":257,"author":{"gitID":"kexiaowen"},"content":"                + ADDRESS_DESC_BOB + UNIVERSITY_DESC_BOB + EXPECTED_GRADUATION_YEAR_DESC_BOB + MAJOR_DESC_BOB"},{"lineNumber":258,"author":{"gitID":"Ang-YC"},"content":"                + GRADE_POINT_AVERAGE_DESC_BOB + JOB_APPLIED_DESC_BOB + RESUME_DESC_BOB + PROFILE_IMAGE_DESC_BOB"},{"lineNumber":259,"author":{"gitID":"Ang-YC"},"content":"                + COMMENT_DESC_BOB + TAG_DESC_HUSBAND;"},{"lineNumber":260,"author":{"gitID":"Ang-YC"},"content":"        assertCommandFailure(command, EditCommand.MESSAGE_DUPLICATE_PERSON);"},{"lineNumber":261,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":262,"author":{"gitID":"-"},"content":""},{"lineNumber":263,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":264,"author":{"gitID":"-"},"content":"     * Performs the same verification as {@code assertCommandSuccess(String, Index, Person, Index)} except that"},{"lineNumber":265,"author":{"gitID":"-"},"content":"     * the browser url and selected card remain unchanged."},{"lineNumber":266,"author":{"gitID":"-"},"content":"     * @param toEdit the index of the current model\u0027s filtered list"},{"lineNumber":267,"author":{"gitID":"-"},"content":"     * @see EditCommandSystemTest#assertCommandSuccess(String, Index, Person, Index)"},{"lineNumber":268,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":269,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(String command, Index toEdit, Person editedPerson) {"},{"lineNumber":270,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, toEdit, editedPerson, null);"},{"lineNumber":271,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":272,"author":{"gitID":"-"},"content":""},{"lineNumber":273,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":274,"author":{"gitID":"-"},"content":"     * Performs the same verification as {@code assertCommandSuccess(String, Model, String, Index)} and in addition,\u003cbr\u003e"},{"lineNumber":275,"author":{"gitID":"-"},"content":"     * 1. Asserts that result display box displays the success message of executing {@code EditCommand}.\u003cbr\u003e"},{"lineNumber":276,"author":{"gitID":"-"},"content":"     * 2. Asserts that the model related components are updated to reflect the person at index {@code toEdit} being"},{"lineNumber":277,"author":{"gitID":"-"},"content":"     * updated to values specified {@code editedPerson}.\u003cbr\u003e"},{"lineNumber":278,"author":{"gitID":"-"},"content":"     * @param toEdit the index of the current model\u0027s filtered list."},{"lineNumber":279,"author":{"gitID":"-"},"content":"     * @see EditCommandSystemTest#assertCommandSuccess(String, Model, String, Index)"},{"lineNumber":280,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":281,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(String command, Index toEdit, Person editedPerson,"},{"lineNumber":282,"author":{"gitID":"-"},"content":"            Index expectedSelectedCardIndex) {"},{"lineNumber":283,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":284,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":285,"author":{"gitID":"-"},"content":"            expectedModel.updatePerson("},{"lineNumber":286,"author":{"gitID":"-"},"content":"                    expectedModel.getFilteredPersonList().get(toEdit.getZeroBased()), editedPerson);"},{"lineNumber":287,"author":{"gitID":"-"},"content":"            expectedModel.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);"},{"lineNumber":288,"author":{"gitID":"-"},"content":"        } catch (DuplicatePersonException | PersonNotFoundException e) {"},{"lineNumber":289,"author":{"gitID":"-"},"content":"            throw new IllegalArgumentException("},{"lineNumber":290,"author":{"gitID":"-"},"content":"                    \"editedPerson is a duplicate in expectedModel, or it isn\u0027t found in the model.\");"},{"lineNumber":291,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":292,"author":{"gitID":"-"},"content":""},{"lineNumber":293,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedModel,"},{"lineNumber":294,"author":{"gitID":"-"},"content":"                String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson), expectedSelectedCardIndex);"},{"lineNumber":295,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":296,"author":{"gitID":"-"},"content":""},{"lineNumber":297,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":298,"author":{"gitID":"-"},"content":"     * Performs the same verification as {@code assertCommandSuccess(String, Model, String, Index)} except that the"},{"lineNumber":299,"author":{"gitID":"-"},"content":"     * browser url and selected card remain unchanged."},{"lineNumber":300,"author":{"gitID":"-"},"content":"     * @see EditCommandSystemTest#assertCommandSuccess(String, Model, String, Index)"},{"lineNumber":301,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":302,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(String command, Model expectedModel, String expectedResultMessage) {"},{"lineNumber":303,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedModel, expectedResultMessage, null);"},{"lineNumber":304,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":305,"author":{"gitID":"-"},"content":""},{"lineNumber":306,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":307,"author":{"gitID":"-"},"content":"     * Executes {@code command} and in addition,\u003cbr\u003e"},{"lineNumber":308,"author":{"gitID":"-"},"content":"     * 1. Asserts that the command box displays an empty string.\u003cbr\u003e"},{"lineNumber":309,"author":{"gitID":"-"},"content":"     * 2. Asserts that the result display box displays {@code expectedResultMessage}.\u003cbr\u003e"},{"lineNumber":310,"author":{"gitID":"-"},"content":"     * 3. Asserts that the model related components equal to {@code expectedModel}.\u003cbr\u003e"},{"lineNumber":311,"author":{"gitID":"-"},"content":"     * 4. Asserts that the browser url and selected card update accordingly depending on the card at"},{"lineNumber":312,"author":{"gitID":"-"},"content":"     * {@code expectedSelectedCardIndex}.\u003cbr\u003e"},{"lineNumber":313,"author":{"gitID":"-"},"content":"     * 5. Asserts that the status bar\u0027s sync status changes.\u003cbr\u003e"},{"lineNumber":314,"author":{"gitID":"-"},"content":"     * 6. Asserts that the command box has the default style class.\u003cbr\u003e"},{"lineNumber":315,"author":{"gitID":"-"},"content":"     * Verifications 1 to 3 are performed by"},{"lineNumber":316,"author":{"gitID":"-"},"content":"     * {@code AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"},{"lineNumber":317,"author":{"gitID":"-"},"content":"     * @see AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":318,"author":{"gitID":"-"},"content":"     * @see AddressBookSystemTest#assertSelectedCardChanged(Index)"},{"lineNumber":319,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":320,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(String command, Model expectedModel, String expectedResultMessage,"},{"lineNumber":321,"author":{"gitID":"-"},"content":"            Index expectedSelectedCardIndex) {"},{"lineNumber":322,"author":{"gitID":"-"},"content":"        executeCommand(command);"},{"lineNumber":323,"author":{"gitID":"-"},"content":"        expectedModel.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);"},{"lineNumber":324,"author":{"gitID":"-"},"content":"        assertApplicationDisplaysExpected(\"\", expectedResultMessage, expectedModel);"},{"lineNumber":325,"author":{"gitID":"-"},"content":"        assertCommandBoxShowsDefaultStyle();"},{"lineNumber":326,"author":{"gitID":"-"},"content":"        if (expectedSelectedCardIndex !\u003d null) {"},{"lineNumber":327,"author":{"gitID":"-"},"content":"            assertSelectedCardChanged(expectedSelectedCardIndex);"},{"lineNumber":328,"author":{"gitID":"-"},"content":"        } else {"},{"lineNumber":329,"author":{"gitID":"-"},"content":"            assertSelectedCardUnchanged();"},{"lineNumber":330,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":331,"author":{"gitID":"-"},"content":"        assertStatusBarUnchangedExceptSyncStatus();"},{"lineNumber":332,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":333,"author":{"gitID":"-"},"content":""},{"lineNumber":334,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":335,"author":{"gitID":"-"},"content":"     * Executes {@code command} and in addition,\u003cbr\u003e"},{"lineNumber":336,"author":{"gitID":"-"},"content":"     * 1. Asserts that the command box displays {@code command}.\u003cbr\u003e"},{"lineNumber":337,"author":{"gitID":"-"},"content":"     * 2. Asserts that result display box displays {@code expectedResultMessage}.\u003cbr\u003e"},{"lineNumber":338,"author":{"gitID":"-"},"content":"     * 3. Asserts that the model related components equal to the current model.\u003cbr\u003e"},{"lineNumber":339,"author":{"gitID":"-"},"content":"     * 4. Asserts that the browser url, selected card and status bar remain unchanged.\u003cbr\u003e"},{"lineNumber":340,"author":{"gitID":"-"},"content":"     * 5. Asserts that the command box has the error style.\u003cbr\u003e"},{"lineNumber":341,"author":{"gitID":"-"},"content":"     * Verifications 1 to 3 are performed by"},{"lineNumber":342,"author":{"gitID":"-"},"content":"     * {@code AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"},{"lineNumber":343,"author":{"gitID":"-"},"content":"     * @see AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":344,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":345,"author":{"gitID":"-"},"content":"    private void assertCommandFailure(String command, String expectedResultMessage) {"},{"lineNumber":346,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":347,"author":{"gitID":"-"},"content":""},{"lineNumber":348,"author":{"gitID":"-"},"content":"        executeCommand(command);"},{"lineNumber":349,"author":{"gitID":"-"},"content":"        assertApplicationDisplaysExpected(command, expectedResultMessage, expectedModel);"},{"lineNumber":350,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":351,"author":{"gitID":"-"},"content":"        assertCommandBoxShowsErrorStyle();"},{"lineNumber":352,"author":{"gitID":"-"},"content":"        assertStatusBarUnchanged();"},{"lineNumber":353,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":354,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"kexiaowen":20,"mhq199657":42,"-":242,"Ang-YC":40,"tanhengyeow":10}},{"path":"src/test/java/seedu/address/ui/CommandBoxTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import guitests.guihandles.CommandBoxHandle;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import javafx.scene.input.KeyCode;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.logic.Logic;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.logic.LogicManager;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.ListCommand;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"public class CommandBoxTest extends GuiUnitTest {"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":"    private static final String COMMAND_THAT_SUCCEEDS \u003d ListCommand.COMMAND_WORD;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"    private static final String COMMAND_THAT_FAILS \u003d \"invalid command\";"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"-"},"content":"    private ArrayList\u003cString\u003e defaultStyleOfCommandBox;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    private ArrayList\u003cString\u003e errorStyleOfCommandBox;"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"    private CommandBoxHandle commandBoxHandle;"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    @Before"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    public void setUp() {"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        Model model \u003d new ModelManager();"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        Logic logic \u003d new LogicManager(model);"},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"Ang-YC"},"content":"        CommandBox commandBox \u003d new CommandBox(logic, null, null, false);"},{"lineNumber":34,"author":{"gitID":"-"},"content":"        commandBoxHandle \u003d new CommandBoxHandle(getChildNode(commandBox.getRoot(),"},{"lineNumber":35,"author":{"gitID":"-"},"content":"                CommandBoxHandle.COMMAND_INPUT_FIELD_ID));"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        uiPartRule.setUiPart(commandBox);"},{"lineNumber":37,"author":{"gitID":"-"},"content":""},{"lineNumber":38,"author":{"gitID":"-"},"content":"        defaultStyleOfCommandBox \u003d new ArrayList\u003c\u003e(commandBoxHandle.getStyleClass());"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"        errorStyleOfCommandBox \u003d new ArrayList\u003c\u003e(defaultStyleOfCommandBox);"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        errorStyleOfCommandBox.add(CommandBox.ERROR_STYLE_CLASS);"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":45,"author":{"gitID":"-"},"content":"    public void commandBox_startingWithSuccessfulCommand() {"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        assertBehaviorForSuccessfulCommand();"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        assertBehaviorForFailedCommand();"},{"lineNumber":48,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":51,"author":{"gitID":"-"},"content":"    public void commandBox_startingWithFailedCommand() {"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        assertBehaviorForFailedCommand();"},{"lineNumber":53,"author":{"gitID":"-"},"content":"        assertBehaviorForSuccessfulCommand();"},{"lineNumber":54,"author":{"gitID":"-"},"content":""},{"lineNumber":55,"author":{"gitID":"-"},"content":"        // verify that style is changed correctly even after multiple consecutive failed commands"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        assertBehaviorForSuccessfulCommand();"},{"lineNumber":57,"author":{"gitID":"-"},"content":"        assertBehaviorForFailedCommand();"},{"lineNumber":58,"author":{"gitID":"-"},"content":"        assertBehaviorForFailedCommand();"},{"lineNumber":59,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":60,"author":{"gitID":"-"},"content":""},{"lineNumber":61,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":62,"author":{"gitID":"-"},"content":"    public void commandBox_handleKeyPress() {"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        commandBoxHandle.run(COMMAND_THAT_FAILS);"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        assertEquals(errorStyleOfCommandBox, commandBoxHandle.getStyleClass());"},{"lineNumber":65,"author":{"gitID":"-"},"content":"        guiRobot.push(KeyCode.ESCAPE);"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        assertEquals(errorStyleOfCommandBox, commandBoxHandle.getStyleClass());"},{"lineNumber":67,"author":{"gitID":"-"},"content":""},{"lineNumber":68,"author":{"gitID":"-"},"content":"        guiRobot.push(KeyCode.A);"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        assertEquals(defaultStyleOfCommandBox, commandBoxHandle.getStyleClass());"},{"lineNumber":70,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitID":"-"},"content":""},{"lineNumber":72,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":73,"author":{"gitID":"-"},"content":"    public void handleKeyPress_startingWithUp() {"},{"lineNumber":74,"author":{"gitID":"-"},"content":"        // empty history"},{"lineNumber":75,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.UP, \"\");"},{"lineNumber":76,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.DOWN, \"\");"},{"lineNumber":77,"author":{"gitID":"-"},"content":""},{"lineNumber":78,"author":{"gitID":"-"},"content":"        // one command"},{"lineNumber":79,"author":{"gitID":"-"},"content":"        commandBoxHandle.run(COMMAND_THAT_SUCCEEDS);"},{"lineNumber":80,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.UP, COMMAND_THAT_SUCCEEDS);"},{"lineNumber":81,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.DOWN, \"\");"},{"lineNumber":82,"author":{"gitID":"-"},"content":""},{"lineNumber":83,"author":{"gitID":"-"},"content":"        // two commands (latest command is failure)"},{"lineNumber":84,"author":{"gitID":"-"},"content":"        commandBoxHandle.run(COMMAND_THAT_FAILS);"},{"lineNumber":85,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.UP, COMMAND_THAT_SUCCEEDS);"},{"lineNumber":86,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.UP, COMMAND_THAT_SUCCEEDS);"},{"lineNumber":87,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.DOWN, COMMAND_THAT_FAILS);"},{"lineNumber":88,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.DOWN, \"\");"},{"lineNumber":89,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.DOWN, \"\");"},{"lineNumber":90,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.UP, COMMAND_THAT_FAILS);"},{"lineNumber":91,"author":{"gitID":"-"},"content":""},{"lineNumber":92,"author":{"gitID":"-"},"content":"        // insert command in the middle of retrieving previous commands"},{"lineNumber":93,"author":{"gitID":"-"},"content":"        guiRobot.push(KeyCode.UP);"},{"lineNumber":94,"author":{"gitID":"-"},"content":"        String thirdCommand \u003d \"list\";"},{"lineNumber":95,"author":{"gitID":"-"},"content":"        commandBoxHandle.run(thirdCommand);"},{"lineNumber":96,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.UP, thirdCommand);"},{"lineNumber":97,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.UP, COMMAND_THAT_FAILS);"},{"lineNumber":98,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.UP, COMMAND_THAT_SUCCEEDS);"},{"lineNumber":99,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.DOWN, COMMAND_THAT_FAILS);"},{"lineNumber":100,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.DOWN, thirdCommand);"},{"lineNumber":101,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.DOWN, \"\");"},{"lineNumber":102,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":103,"author":{"gitID":"-"},"content":""},{"lineNumber":104,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":105,"author":{"gitID":"-"},"content":"    public void handleKeyPress_startingWithDown() {"},{"lineNumber":106,"author":{"gitID":"-"},"content":"        // empty history"},{"lineNumber":107,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.DOWN, \"\");"},{"lineNumber":108,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.UP, \"\");"},{"lineNumber":109,"author":{"gitID":"-"},"content":""},{"lineNumber":110,"author":{"gitID":"-"},"content":"        // one command"},{"lineNumber":111,"author":{"gitID":"-"},"content":"        commandBoxHandle.run(COMMAND_THAT_SUCCEEDS);"},{"lineNumber":112,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.DOWN, \"\");"},{"lineNumber":113,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.UP, COMMAND_THAT_SUCCEEDS);"},{"lineNumber":114,"author":{"gitID":"-"},"content":""},{"lineNumber":115,"author":{"gitID":"-"},"content":"        // two commands"},{"lineNumber":116,"author":{"gitID":"-"},"content":"        commandBoxHandle.run(COMMAND_THAT_FAILS);"},{"lineNumber":117,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.DOWN, \"\");"},{"lineNumber":118,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.UP, COMMAND_THAT_FAILS);"},{"lineNumber":119,"author":{"gitID":"-"},"content":""},{"lineNumber":120,"author":{"gitID":"-"},"content":"        // insert command in the middle of retrieving previous commands"},{"lineNumber":121,"author":{"gitID":"-"},"content":"        guiRobot.push(KeyCode.UP);"},{"lineNumber":122,"author":{"gitID":"-"},"content":"        String thirdCommand \u003d \"list\";"},{"lineNumber":123,"author":{"gitID":"-"},"content":"        commandBoxHandle.run(thirdCommand);"},{"lineNumber":124,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.DOWN, \"\");"},{"lineNumber":125,"author":{"gitID":"-"},"content":"        assertInputHistory(KeyCode.UP, thirdCommand);"},{"lineNumber":126,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":127,"author":{"gitID":"-"},"content":""},{"lineNumber":128,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":129,"author":{"gitID":"-"},"content":"     * Runs a command that fails, then verifies that \u003cbr\u003e"},{"lineNumber":130,"author":{"gitID":"-"},"content":"     *      - the text remains \u003cbr\u003e"},{"lineNumber":131,"author":{"gitID":"-"},"content":"     *      - the command box\u0027s style is the same as {@code errorStyleOfCommandBox}."},{"lineNumber":132,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":133,"author":{"gitID":"-"},"content":"    private void assertBehaviorForFailedCommand() {"},{"lineNumber":134,"author":{"gitID":"-"},"content":"        commandBoxHandle.run(COMMAND_THAT_FAILS);"},{"lineNumber":135,"author":{"gitID":"-"},"content":"        assertEquals(COMMAND_THAT_FAILS, commandBoxHandle.getInput());"},{"lineNumber":136,"author":{"gitID":"-"},"content":"        assertEquals(errorStyleOfCommandBox, commandBoxHandle.getStyleClass());"},{"lineNumber":137,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":138,"author":{"gitID":"-"},"content":""},{"lineNumber":139,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":140,"author":{"gitID":"-"},"content":"     * Runs a command that succeeds, then verifies that \u003cbr\u003e"},{"lineNumber":141,"author":{"gitID":"-"},"content":"     *      - the text is cleared \u003cbr\u003e"},{"lineNumber":142,"author":{"gitID":"-"},"content":"     *      - the command box\u0027s style is the same as {@code defaultStyleOfCommandBox}."},{"lineNumber":143,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":144,"author":{"gitID":"-"},"content":"    private void assertBehaviorForSuccessfulCommand() {"},{"lineNumber":145,"author":{"gitID":"-"},"content":"        commandBoxHandle.run(COMMAND_THAT_SUCCEEDS);"},{"lineNumber":146,"author":{"gitID":"-"},"content":"        assertEquals(\"\", commandBoxHandle.getInput());"},{"lineNumber":147,"author":{"gitID":"-"},"content":"        assertEquals(defaultStyleOfCommandBox, commandBoxHandle.getStyleClass());"},{"lineNumber":148,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":149,"author":{"gitID":"-"},"content":""},{"lineNumber":150,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":151,"author":{"gitID":"-"},"content":"     * Pushes {@code keycode} and checks that the input in the {@code commandBox} equals to {@code expectedCommand}."},{"lineNumber":152,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":153,"author":{"gitID":"-"},"content":"    private void assertInputHistory(KeyCode keycode, String expectedCommand) {"},{"lineNumber":154,"author":{"gitID":"-"},"content":"        guiRobot.push(keycode);"},{"lineNumber":155,"author":{"gitID":"-"},"content":"        assertEquals(expectedCommand, commandBoxHandle.getInput());"},{"lineNumber":156,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":157,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"-":156,"Ang-YC":1}},{"path":"src/test/java/seedu/address/ui/PersonCardTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.address.ui.testutil.GuiTestAssert.assertCardDisplaysPerson;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import guitests.guihandles.PersonCardHandle;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"-"},"content":"public class PersonCardTest extends GuiUnitTest {"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":17,"author":{"gitID":"-"},"content":"    public void display() {"},{"lineNumber":18,"author":{"gitID":"-"},"content":"        // no tags"},{"lineNumber":19,"author":{"gitID":"-"},"content":"        Person personWithNoTags \u003d new PersonBuilder().withTags(new String[0]).build();"},{"lineNumber":20,"author":{"gitID":"-"},"content":"        PersonCard personCard \u003d new PersonCard(personWithNoTags, 1);"},{"lineNumber":21,"author":{"gitID":"-"},"content":"        uiPartRule.setUiPart(personCard);"},{"lineNumber":22,"author":{"gitID":"-"},"content":"        assertCardDisplay(personCard, personWithNoTags, 1);"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"        // with tags"},{"lineNumber":25,"author":{"gitID":"-"},"content":"        Person personWithTags \u003d new PersonBuilder().build();"},{"lineNumber":26,"author":{"gitID":"-"},"content":"        personCard \u003d new PersonCard(personWithTags, 2);"},{"lineNumber":27,"author":{"gitID":"-"},"content":"        uiPartRule.setUiPart(personCard);"},{"lineNumber":28,"author":{"gitID":"-"},"content":"        assertCardDisplay(personCard, personWithTags, 2);"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    public void equals() {"},{"lineNumber":33,"author":{"gitID":"-"},"content":"        Person person \u003d new PersonBuilder().build();"},{"lineNumber":34,"author":{"gitID":"-"},"content":"        PersonCard personCard \u003d new PersonCard(person, 0);"},{"lineNumber":35,"author":{"gitID":"-"},"content":""},{"lineNumber":36,"author":{"gitID":"-"},"content":"        // same person, same index -\u003e returns true"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        PersonCard copy \u003d new PersonCard(person, 0);"},{"lineNumber":38,"author":{"gitID":"-"},"content":"        assertTrue(personCard.equals(copy));"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"        // same object -\u003e returns true"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        assertTrue(personCard.equals(personCard));"},{"lineNumber":42,"author":{"gitID":"-"},"content":""},{"lineNumber":43,"author":{"gitID":"-"},"content":"        // null -\u003e returns false"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        assertFalse(personCard.equals(null));"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"        // different types -\u003e returns false"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        assertFalse(personCard.equals(0));"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"-"},"content":"        // different person, same index -\u003e returns false"},{"lineNumber":50,"author":{"gitID":"-"},"content":"        Person differentPerson \u003d new PersonBuilder().withName(\"differentName\").build();"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        assertFalse(personCard.equals(new PersonCard(differentPerson, 0)));"},{"lineNumber":52,"author":{"gitID":"-"},"content":""},{"lineNumber":53,"author":{"gitID":"-"},"content":"        // same person, different index -\u003e returns false"},{"lineNumber":54,"author":{"gitID":"-"},"content":"        assertFalse(personCard.equals(new PersonCard(person, 1)));"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"-"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":58,"author":{"gitID":"-"},"content":"     * Asserts that {@code personCard} displays the details of {@code expectedPerson} correctly and matches"},{"lineNumber":59,"author":{"gitID":"-"},"content":"     * {@code expectedId}."},{"lineNumber":60,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":61,"author":{"gitID":"-"},"content":"    private void assertCardDisplay(PersonCard personCard, Person expectedPerson, int expectedId) {"},{"lineNumber":62,"author":{"gitID":"-"},"content":"        guiRobot.pauseForHuman();"},{"lineNumber":63,"author":{"gitID":"-"},"content":""},{"lineNumber":64,"author":{"gitID":"-"},"content":"        PersonCardHandle personCardHandle \u003d new PersonCardHandle(personCard.getRoot());"},{"lineNumber":65,"author":{"gitID":"-"},"content":""},{"lineNumber":66,"author":{"gitID":"-"},"content":"        // verify id is displayed correctly"},{"lineNumber":67,"author":{"gitID":"Ang-YC"},"content":"        assertEquals(String.valueOf(expectedId), personCardHandle.getId());"},{"lineNumber":68,"author":{"gitID":"-"},"content":""},{"lineNumber":69,"author":{"gitID":"-"},"content":"        // verify person details are displayed correctly"},{"lineNumber":70,"author":{"gitID":"-"},"content":"        assertCardDisplaysPerson(expectedPerson, personCardHandle);"},{"lineNumber":71,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":72,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"-":71,"Ang-YC":1}},{"path":"src/test/java/seedu/address/ui/InfoPanelTest.java","lines":[{"lineNumber":1,"author":{"gitID":"Ang-YC"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"Ang-YC"},"content":"import static guitests.guihandles.InfoPanelUtil.waitUntilInfoPanelLoaded;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":5,"author":{"gitID":"mhq199657"},"content":"import static org.junit.Assert.assertNull;"},{"lineNumber":6,"author":{"gitID":"mhq199657"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.EventsUtil.postNow;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;"},{"lineNumber":9,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":10,"author":{"gitID":"Ang-YC"},"content":"import org.junit.Before;"},{"lineNumber":11,"author":{"gitID":"Ang-YC"},"content":"import org.junit.Test;"},{"lineNumber":12,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":"import guitests.guihandles.InfoPanelHandle;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.ui.PersonPanelSelectionChangedEvent;"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"Ang-YC"},"content":"//@@author Ang-YC"},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":"public class InfoPanelTest extends GuiUnitTest {"},{"lineNumber":18,"author":{"gitID":"Ang-YC"},"content":"    private PersonPanelSelectionChangedEvent selectionChangedEventStub;"},{"lineNumber":19,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":20,"author":{"gitID":"Ang-YC"},"content":"    private InfoPanel infoPanel;"},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":"    private InfoPanelHandle infoPanelHandle;"},{"lineNumber":22,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":23,"author":{"gitID":"Ang-YC"},"content":"    @Before"},{"lineNumber":24,"author":{"gitID":"Ang-YC"},"content":"    public void setUp() {"},{"lineNumber":25,"author":{"gitID":"Ang-YC"},"content":"        selectionChangedEventStub \u003d new PersonPanelSelectionChangedEvent(new PersonCard(ALICE, 0));"},{"lineNumber":26,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":27,"author":{"gitID":"Ang-YC"},"content":"        guiRobot.interact(() -\u003e infoPanel \u003d new InfoPanel(false));"},{"lineNumber":28,"author":{"gitID":"Ang-YC"},"content":"        uiPartRule.setUiPart(infoPanel);"},{"lineNumber":29,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":30,"author":{"gitID":"Ang-YC"},"content":"        infoPanelHandle \u003d new InfoPanelHandle(infoPanel.getRoot());"},{"lineNumber":31,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":32,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":33,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":34,"author":{"gitID":"Ang-YC"},"content":"    public void display() {"},{"lineNumber":35,"author":{"gitID":"Ang-YC"},"content":"        // Default selected person is null"},{"lineNumber":36,"author":{"gitID":"Ang-YC"},"content":"        assertNull(infoPanelHandle.getLoadedPerson());"},{"lineNumber":37,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":38,"author":{"gitID":"Ang-YC"},"content":"        // Post changed event"},{"lineNumber":39,"author":{"gitID":"Ang-YC"},"content":"        postNow(selectionChangedEventStub);"},{"lineNumber":40,"author":{"gitID":"Ang-YC"},"content":"        waitUntilInfoPanelLoaded(infoPanelHandle);"},{"lineNumber":41,"author":{"gitID":"Ang-YC"},"content":"        assertEquals(ALICE, infoPanelHandle.getLoadedPerson());"},{"lineNumber":42,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":43,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":44,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":45,"author":{"gitID":"Ang-YC"},"content":"    public void responsive() {"},{"lineNumber":46,"author":{"gitID":"Ang-YC"},"content":"        // Select someone first"},{"lineNumber":47,"author":{"gitID":"Ang-YC"},"content":"        postNow(selectionChangedEventStub);"},{"lineNumber":48,"author":{"gitID":"Ang-YC"},"content":"        waitUntilInfoPanelLoaded(infoPanelHandle);"},{"lineNumber":49,"author":{"gitID":"Ang-YC"},"content":"        assertEquals(ALICE, infoPanelHandle.getLoadedPerson());"},{"lineNumber":50,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":51,"author":{"gitID":"Ang-YC"},"content":"        // Test responsiveness"},{"lineNumber":52,"author":{"gitID":"Ang-YC"},"content":"        infoPanelHandle.setWidthAndWait(InfoPanel.SPLIT_MIN_WIDTH - 100);"},{"lineNumber":53,"author":{"gitID":"Ang-YC"},"content":"        guiRobot.pauseForHuman();"},{"lineNumber":54,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(infoPanelHandle.isResponsiveSingle());"},{"lineNumber":55,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":56,"author":{"gitID":"Ang-YC"},"content":"        infoPanelHandle.setWidthAndWait(InfoPanel.SPLIT_MIN_WIDTH + 100);"},{"lineNumber":57,"author":{"gitID":"Ang-YC"},"content":"        guiRobot.pauseForHuman();"},{"lineNumber":58,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(infoPanelHandle.isResponsiveSplit());"},{"lineNumber":59,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":60,"author":{"gitID":"Ang-YC"},"content":"}"}],"authorContributionMap":{"mhq199657":2,"-":6,"Ang-YC":52}},{"path":"src/test/java/seedu/address/ui/testutil/GuiTestAssert.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui.testutil;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import guitests.guihandles.PersonCardHandle;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import guitests.guihandles.PersonListPanelHandle;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import guitests.guihandles.ResultDisplayHandle;"},{"lineNumber":10,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.commons.util.UiUtil;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":14,"author":{"gitID":"-"},"content":" * A set of assertion methods useful for writing GUI tests."},{"lineNumber":15,"author":{"gitID":"-"},"content":" */"},{"lineNumber":16,"author":{"gitID":"-"},"content":"public class GuiTestAssert {"},{"lineNumber":17,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":18,"author":{"gitID":"-"},"content":"     * Asserts that {@code actualCard} displays the same values as {@code expectedCard}."},{"lineNumber":19,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":20,"author":{"gitID":"-"},"content":"    public static void assertCardEquals(PersonCardHandle expectedCard, PersonCardHandle actualCard) {"},{"lineNumber":21,"author":{"gitID":"-"},"content":"        assertEquals(expectedCard.getName(), actualCard.getName());"},{"lineNumber":22,"author":{"gitID":"Ang-YC"},"content":"        assertEquals(expectedCard.getUniversity(), actualCard.getUniversity());"},{"lineNumber":23,"author":{"gitID":"-"},"content":"        assertEquals(expectedCard.getEmail(), actualCard.getEmail());"},{"lineNumber":24,"author":{"gitID":"-"},"content":"        assertEquals(expectedCard.getPhone(), actualCard.getPhone());"},{"lineNumber":25,"author":{"gitID":"Ang-YC"},"content":"        assertEquals(expectedCard.getRating(), actualCard.getRating());"},{"lineNumber":26,"author":{"gitID":"Ang-YC"},"content":"        assertEquals(expectedCard.getStatus(), actualCard.getStatus());"},{"lineNumber":27,"author":{"gitID":"-"},"content":"        assertEquals(expectedCard.getId(), actualCard.getId());"},{"lineNumber":28,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":31,"author":{"gitID":"-"},"content":"     * Asserts that {@code actualCard} displays the details of {@code expectedPerson}."},{"lineNumber":32,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    public static void assertCardDisplaysPerson(Person expectedPerson, PersonCardHandle actualCard) {"},{"lineNumber":34,"author":{"gitID":"-"},"content":"        assertEquals(expectedPerson.getName().fullName, actualCard.getName());"},{"lineNumber":35,"author":{"gitID":"Ang-YC"},"content":"        assertEquals(expectedPerson.getUniversity().value, actualCard.getUniversity());"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        assertEquals(expectedPerson.getEmail().value, actualCard.getEmail());"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        assertEquals(expectedPerson.getPhone().value, actualCard.getPhone());"},{"lineNumber":38,"author":{"gitID":"Ang-YC"},"content":"        assertEquals(expectedPerson.getStatus().value, actualCard.getStatus());"},{"lineNumber":39,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":40,"author":{"gitID":"Ang-YC"},"content":"        // TODO: Fix all floating point issues"},{"lineNumber":41,"author":{"gitID":"Ang-YC"},"content":"        /* double personRating \u003d expectedPerson.getRating().overallScore;"},{"lineNumber":42,"author":{"gitID":"Ang-YC"},"content":"        String rating \u003d (personRating \u003c 1e-3) ? \"\" : UiUtil.toFixed(personRating, 2);"},{"lineNumber":43,"author":{"gitID":"Ang-YC"},"content":"        assertEquals(rating, actualCard.getRating()); */"},{"lineNumber":44,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":45,"author":{"gitID":"Ang-YC"},"content":"        assertEquals(UiUtil.colorToHex(expectedPerson.getStatus().color), actualCard.getStatusColor());"},{"lineNumber":46,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":49,"author":{"gitID":"-"},"content":"     * Asserts that the list in {@code personListPanelHandle} displays the details of {@code persons} correctly and"},{"lineNumber":50,"author":{"gitID":"-"},"content":"     * in the correct order."},{"lineNumber":51,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    public static void assertListMatching(PersonListPanelHandle personListPanelHandle, Person... persons) {"},{"lineNumber":53,"author":{"gitID":"-"},"content":"        for (int i \u003d 0; i \u003c persons.length; i++) {"},{"lineNumber":54,"author":{"gitID":"-"},"content":"            assertCardDisplaysPerson(persons[i], personListPanelHandle.getPersonCardHandle(i));"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":56,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"-"},"content":""},{"lineNumber":58,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":59,"author":{"gitID":"-"},"content":"     * Asserts that the list in {@code personListPanelHandle} displays the details of {@code persons} correctly and"},{"lineNumber":60,"author":{"gitID":"-"},"content":"     * in the correct order."},{"lineNumber":61,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":62,"author":{"gitID":"-"},"content":"    public static void assertListMatching(PersonListPanelHandle personListPanelHandle, List\u003cPerson\u003e persons) {"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        assertListMatching(personListPanelHandle, persons.toArray(new Person[0]));"},{"lineNumber":64,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitID":"-"},"content":""},{"lineNumber":66,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":67,"author":{"gitID":"-"},"content":"     * Asserts the size of the list in {@code personListPanelHandle} equals to {@code size}."},{"lineNumber":68,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":69,"author":{"gitID":"-"},"content":"    public static void assertListSize(PersonListPanelHandle personListPanelHandle, int size) {"},{"lineNumber":70,"author":{"gitID":"-"},"content":"        int numberOfPeople \u003d personListPanelHandle.getListSize();"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        assertEquals(size, numberOfPeople);"},{"lineNumber":72,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"-"},"content":""},{"lineNumber":74,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":75,"author":{"gitID":"-"},"content":"     * Asserts the message shown in {@code resultDisplayHandle} equals to {@code expected}."},{"lineNumber":76,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":77,"author":{"gitID":"-"},"content":"    public static void assertResultMessage(ResultDisplayHandle resultDisplayHandle, String expected) {"},{"lineNumber":78,"author":{"gitID":"-"},"content":"        assertEquals(expected, resultDisplayHandle.getText());"},{"lineNumber":79,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":80,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"-":67,"Ang-YC":13}},{"path":"src/test/java/seedu/address/ui/TitleBarTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"Ang-YC"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.EventsUtil.postNow;"},{"lineNumber":6,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.ui.TitleBar.SYNC_STATUS_INITIAL;"},{"lineNumber":7,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.ui.TitleBar.SYNC_STATUS_UPDATED;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.time.Clock;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import java.time.Instant;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import java.util.Date;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"-"},"content":"import org.junit.AfterClass;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import org.junit.BeforeClass;"},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":"import org.junit.Rule;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":"import guitests.guihandles.HelpWindowHandle;"},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":"import guitests.guihandles.TitleBarHandle;"},{"lineNumber":22,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.model.AddressBookChangedEvent;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.ui.ExitAppRequestEvent;"},{"lineNumber":25,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.commons.events.ui.MaximizeAppRequestEvent;"},{"lineNumber":26,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.commons.events.ui.MinimizeAppRequestEvent;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"import seedu.address.model.AddressBook;"},{"lineNumber":28,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.ui.testutil.EventsCollectorRule;"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"Ang-YC"},"content":"public class TitleBarTest extends GuiUnitTest {"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"    private static final String STUB_SAVE_LOCATION \u003d \"Stub\";"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    private static final String RELATIVE_PATH \u003d \"./\";"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"    private static final AddressBookChangedEvent EVENT_STUB \u003d new AddressBookChangedEvent(new AddressBook());"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"Ang-YC"},"content":"    private static final Clock originalClock \u003d TitleBar.getClock();"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    private static final Clock injectedClock \u003d Clock.fixed(Instant.now(), ZoneId.systemDefault());"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"Ang-YC"},"content":"    @Rule"},{"lineNumber":41,"author":{"gitID":"Ang-YC"},"content":"    public final EventsCollectorRule eventsCollectorRule \u003d new EventsCollectorRule();"},{"lineNumber":42,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":43,"author":{"gitID":"Ang-YC"},"content":"    private TitleBarHandle titleBarHandle;"},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"-"},"content":"    @BeforeClass"},{"lineNumber":46,"author":{"gitID":"-"},"content":"    public static void setUpBeforeClass() {"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        // inject fixed clock"},{"lineNumber":48,"author":{"gitID":"Ang-YC"},"content":"        TitleBar.setClock(injectedClock);"},{"lineNumber":49,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"-"},"content":"    @AfterClass"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    public static void tearDownAfterClass() {"},{"lineNumber":53,"author":{"gitID":"-"},"content":"        // restore original clock"},{"lineNumber":54,"author":{"gitID":"Ang-YC"},"content":"        TitleBar.setClock(originalClock);"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"-"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":"    @Before"},{"lineNumber":58,"author":{"gitID":"-"},"content":"    public void setUp() {"},{"lineNumber":59,"author":{"gitID":"Ang-YC"},"content":"        TitleBar titleBar \u003d new TitleBar(STUB_SAVE_LOCATION);"},{"lineNumber":60,"author":{"gitID":"Ang-YC"},"content":"        uiPartRule.setUiPart(titleBar);"},{"lineNumber":61,"author":{"gitID":"-"},"content":""},{"lineNumber":62,"author":{"gitID":"Ang-YC"},"content":"        titleBarHandle \u003d new TitleBarHandle(titleBar.getRoot());"},{"lineNumber":63,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"-"},"content":""},{"lineNumber":65,"author":{"gitID":"Ang-YC"},"content":"    //@@author Ang-YC"},{"lineNumber":66,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":67,"author":{"gitID":"Ang-YC"},"content":"    public void controlHelp() {"},{"lineNumber":68,"author":{"gitID":"Ang-YC"},"content":"        titleBarHandle.openHelpWindowUsingControl();"},{"lineNumber":69,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(HelpWindowHandle.isWindowPresent());"},{"lineNumber":70,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":71,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":72,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":73,"author":{"gitID":"Ang-YC"},"content":"    public void controlMinimize() {"},{"lineNumber":74,"author":{"gitID":"Ang-YC"},"content":"        titleBarHandle.minimizeWindow();"},{"lineNumber":75,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(eventsCollectorRule.eventsCollector.getMostRecent() instanceof MinimizeAppRequestEvent);"},{"lineNumber":76,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(eventsCollectorRule.eventsCollector.getSize() \u003d\u003d 1);"},{"lineNumber":77,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":78,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":79,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":80,"author":{"gitID":"Ang-YC"},"content":"    public void controlMaximize() {"},{"lineNumber":81,"author":{"gitID":"Ang-YC"},"content":"        titleBarHandle.maximizeWindow();"},{"lineNumber":82,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(eventsCollectorRule.eventsCollector.getMostRecent() instanceof MaximizeAppRequestEvent);"},{"lineNumber":83,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(eventsCollectorRule.eventsCollector.getSize() \u003d\u003d 1);"},{"lineNumber":84,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":85,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":86,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":87,"author":{"gitID":"Ang-YC"},"content":"    public void controlClose() {"},{"lineNumber":88,"author":{"gitID":"Ang-YC"},"content":"        titleBarHandle.closeWindow();"},{"lineNumber":89,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(eventsCollectorRule.eventsCollector.getMostRecent() instanceof ExitAppRequestEvent);"},{"lineNumber":90,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(eventsCollectorRule.eventsCollector.getSize() \u003d\u003d 1);"},{"lineNumber":91,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":92,"author":{"gitID":"Ang-YC"},"content":"    //@@author"},{"lineNumber":93,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":94,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":95,"author":{"gitID":"-"},"content":"    public void display() {"},{"lineNumber":96,"author":{"gitID":"-"},"content":"        // initial state"},{"lineNumber":97,"author":{"gitID":"-"},"content":"        assertStatusBarContent(RELATIVE_PATH + STUB_SAVE_LOCATION, SYNC_STATUS_INITIAL);"},{"lineNumber":98,"author":{"gitID":"-"},"content":""},{"lineNumber":99,"author":{"gitID":"-"},"content":"        // after address book is updated"},{"lineNumber":100,"author":{"gitID":"-"},"content":"        postNow(EVENT_STUB);"},{"lineNumber":101,"author":{"gitID":"-"},"content":"        assertStatusBarContent(RELATIVE_PATH + STUB_SAVE_LOCATION,"},{"lineNumber":102,"author":{"gitID":"-"},"content":"                String.format(SYNC_STATUS_UPDATED, new Date(injectedClock.millis()).toString()));"},{"lineNumber":103,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":104,"author":{"gitID":"-"},"content":""},{"lineNumber":105,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":106,"author":{"gitID":"-"},"content":"     * Asserts that the save location matches that of {@code expectedSaveLocation}, and the"},{"lineNumber":107,"author":{"gitID":"-"},"content":"     * sync status matches that of {@code expectedSyncStatus}."},{"lineNumber":108,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":109,"author":{"gitID":"-"},"content":"    private void assertStatusBarContent(String expectedSaveLocation, String expectedSyncStatus) {"},{"lineNumber":110,"author":{"gitID":"Ang-YC"},"content":"        assertEquals(expectedSaveLocation, titleBarHandle.getSaveLocation());"},{"lineNumber":111,"author":{"gitID":"Ang-YC"},"content":"        assertEquals(expectedSyncStatus, titleBarHandle.getSyncStatus());"},{"lineNumber":112,"author":{"gitID":"-"},"content":"        guiRobot.pauseForHuman();"},{"lineNumber":113,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":114,"author":{"gitID":"-"},"content":""},{"lineNumber":115,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"-":64,"Ang-YC":51}},{"path":"src/test/java/seedu/address/ui/testutil/UiPartRule.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui.testutil;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.concurrent.TimeoutException;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import org.testfx.api.FxToolkit;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import javafx.scene.Parent;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import javafx.scene.Scene;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.address.ui.UiPart;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitID":"-"},"content":" * Provides an isolated stage to test an individual {@code UiPart}."},{"lineNumber":13,"author":{"gitID":"-"},"content":" */"},{"lineNumber":14,"author":{"gitID":"-"},"content":"public class UiPartRule extends StageRule {"},{"lineNumber":15,"author":{"gitID":"Ang-YC"},"content":"    private static final String[] CSS_FILES \u003d {\"view/HRTheme.css\"};"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"    public void setUiPart(final UiPart\u003c? extends Parent\u003e uiPart) {"},{"lineNumber":18,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":19,"author":{"gitID":"-"},"content":"            FxToolkit.setupScene(() -\u003e {"},{"lineNumber":20,"author":{"gitID":"-"},"content":"                Scene scene \u003d new Scene(uiPart.getRoot());"},{"lineNumber":21,"author":{"gitID":"-"},"content":"                scene.getStylesheets().setAll(CSS_FILES);"},{"lineNumber":22,"author":{"gitID":"-"},"content":"                return scene;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"            });"},{"lineNumber":24,"author":{"gitID":"-"},"content":"            FxToolkit.showStage();"},{"lineNumber":25,"author":{"gitID":"-"},"content":"        } catch (TimeoutException te) {"},{"lineNumber":26,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"Timeout should not happen.\", te);"},{"lineNumber":27,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":28,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"-":28,"Ang-YC":1}},{"path":"src/test/java/seedu/address/TestApp.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.function.Supplier;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import javafx.stage.Screen;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import javafx.stage.Stage;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Config;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.GuiSettings;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.FileUtil;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.XmlUtil;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.model.AddressBook;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.storage.UserPrefsStorage;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.storage.XmlSerializableAddressBook;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.address.testutil.TestUtil;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import systemtests.ModelHelper;"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":25,"author":{"gitID":"-"},"content":" * This class is meant to override some properties of MainApp so that it will be suited for"},{"lineNumber":26,"author":{"gitID":"-"},"content":" * testing"},{"lineNumber":27,"author":{"gitID":"-"},"content":" */"},{"lineNumber":28,"author":{"gitID":"-"},"content":"public class TestApp extends MainApp {"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"-"},"content":"    public static final String SAVE_LOCATION_FOR_TESTING \u003d TestUtil.getFilePathInSandboxFolder(\"sampleData.xml\");"},{"lineNumber":31,"author":{"gitID":"-"},"content":"    public static final String APP_TITLE \u003d \"Test App\";"},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"-"},"content":"    protected static final String DEFAULT_PREF_FILE_LOCATION_FOR_TESTING \u003d"},{"lineNumber":34,"author":{"gitID":"-"},"content":"            TestUtil.getFilePathInSandboxFolder(\"pref_testing.json\");"},{"lineNumber":35,"author":{"gitID":"-"},"content":"    protected static final String ADDRESS_BOOK_NAME \u003d \"Test\";"},{"lineNumber":36,"author":{"gitID":"-"},"content":"    protected Supplier\u003cReadOnlyAddressBook\u003e initialDataSupplier \u003d () -\u003e null;"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    protected String saveFileLocation \u003d SAVE_LOCATION_FOR_TESTING;"},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"-"},"content":"    public TestApp() {"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":41,"author":{"gitID":"-"},"content":""},{"lineNumber":42,"author":{"gitID":"-"},"content":"    public TestApp(Supplier\u003cReadOnlyAddressBook\u003e initialDataSupplier, String saveFileLocation) {"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        super();"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        this.initialDataSupplier \u003d initialDataSupplier;"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        this.saveFileLocation \u003d saveFileLocation;"},{"lineNumber":46,"author":{"gitID":"-"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":"        // If some initial local data has been provided, write those to the file"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        if (initialDataSupplier.get() !\u003d null) {"},{"lineNumber":49,"author":{"gitID":"-"},"content":"            createDataFileWithData(new XmlSerializableAddressBook(this.initialDataSupplier.get()),"},{"lineNumber":50,"author":{"gitID":"-"},"content":"                    this.saveFileLocation);"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    protected Config initConfig(String configFilePath) {"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        Config config \u003d super.initConfig(configFilePath);"},{"lineNumber":57,"author":{"gitID":"-"},"content":"        config.setAppTitle(APP_TITLE);"},{"lineNumber":58,"author":{"gitID":"-"},"content":"        config.setUserPrefsFilePath(DEFAULT_PREF_FILE_LOCATION_FOR_TESTING);"},{"lineNumber":59,"author":{"gitID":"-"},"content":"        return config;"},{"lineNumber":60,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":61,"author":{"gitID":"-"},"content":""},{"lineNumber":62,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":63,"author":{"gitID":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        UserPrefs userPrefs \u003d super.initPrefs(storage);"},{"lineNumber":65,"author":{"gitID":"-"},"content":"        double x \u003d Screen.getPrimary().getVisualBounds().getMinX();"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        double y \u003d Screen.getPrimary().getVisualBounds().getMinY();"},{"lineNumber":67,"author":{"gitID":"Ang-YC"},"content":"        userPrefs.updateLastUsedGuiSetting(new GuiSettings(800.0, 600.0, (int) x, (int) y));"},{"lineNumber":68,"author":{"gitID":"-"},"content":"        userPrefs.setAddressBookFilePath(saveFileLocation);"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        userPrefs.setAddressBookName(ADDRESS_BOOK_NAME);"},{"lineNumber":70,"author":{"gitID":"Ang-YC"},"content":"        userPrefs.setAnimated(false);"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        return userPrefs;"},{"lineNumber":72,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"-"},"content":""},{"lineNumber":74,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":75,"author":{"gitID":"-"},"content":"     * Returns a defensive copy of the address book data stored inside the storage file."},{"lineNumber":76,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":77,"author":{"gitID":"-"},"content":"    public AddressBook readStorageAddressBook() {"},{"lineNumber":78,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":79,"author":{"gitID":"-"},"content":"            return new AddressBook(storage.readAddressBook().get());"},{"lineNumber":80,"author":{"gitID":"-"},"content":"        } catch (DataConversionException dce) {"},{"lineNumber":81,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"Data is not in the AddressBook format.\");"},{"lineNumber":82,"author":{"gitID":"-"},"content":"        } catch (IOException ioe) {"},{"lineNumber":83,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"Storage file cannot be found.\");"},{"lineNumber":84,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":85,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":86,"author":{"gitID":"-"},"content":""},{"lineNumber":87,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":88,"author":{"gitID":"-"},"content":"     * Returns the file path of the storage file."},{"lineNumber":89,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":90,"author":{"gitID":"-"},"content":"    public String getStorageSaveLocation() {"},{"lineNumber":91,"author":{"gitID":"-"},"content":"        return storage.getAddressBookFilePath();"},{"lineNumber":92,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":93,"author":{"gitID":"-"},"content":""},{"lineNumber":94,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":95,"author":{"gitID":"-"},"content":"     * Returns a defensive copy of the model."},{"lineNumber":96,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":97,"author":{"gitID":"-"},"content":"    public Model getModel() {"},{"lineNumber":98,"author":{"gitID":"-"},"content":"        Model copy \u003d new ModelManager((model.getAddressBook()), new UserPrefs());"},{"lineNumber":99,"author":{"gitID":"-"},"content":"        ModelHelper.setFilteredList(copy, model.getFilteredPersonList());"},{"lineNumber":100,"author":{"gitID":"-"},"content":"        return copy;"},{"lineNumber":101,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":102,"author":{"gitID":"-"},"content":""},{"lineNumber":103,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":104,"author":{"gitID":"-"},"content":"    public void start(Stage primaryStage) {"},{"lineNumber":105,"author":{"gitID":"-"},"content":"        ui.start(primaryStage);"},{"lineNumber":106,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":107,"author":{"gitID":"-"},"content":""},{"lineNumber":108,"author":{"gitID":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":109,"author":{"gitID":"-"},"content":"        launch(args);"},{"lineNumber":110,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":111,"author":{"gitID":"-"},"content":""},{"lineNumber":112,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":113,"author":{"gitID":"-"},"content":"     * Creates an XML file at the {@code filePath} with the {@code data}."},{"lineNumber":114,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":115,"author":{"gitID":"-"},"content":"    private \u003cT\u003e void createDataFileWithData(T data, String filePath) {"},{"lineNumber":116,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":117,"author":{"gitID":"-"},"content":"            File saveFileForTesting \u003d new File(filePath);"},{"lineNumber":118,"author":{"gitID":"-"},"content":"            FileUtil.createIfMissing(saveFileForTesting);"},{"lineNumber":119,"author":{"gitID":"-"},"content":"            XmlUtil.saveDataToFile(saveFileForTesting, data);"},{"lineNumber":120,"author":{"gitID":"-"},"content":"        } catch (Exception e) {"},{"lineNumber":121,"author":{"gitID":"-"},"content":"            throw new RuntimeException(e);"},{"lineNumber":122,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":123,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":124,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"-":122,"Ang-YC":2}},{"path":"src/test/java/seedu/address/commons/core/ConfigTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.core;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertNotNull;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"public class ConfigTest {"},{"lineNumber":12,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":13,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":16,"author":{"gitID":"-"},"content":"    public void toString_defaultObject_stringReturned() {"},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":"        String defaultConfigAsString \u003d \"App title: HR+\\n\""},{"lineNumber":18,"author":{"gitID":"-"},"content":"                + \"Current log level: INFO\\n\""},{"lineNumber":19,"author":{"gitID":"-"},"content":"                + \"Preference file Location: preferences.json\";"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());"},{"lineNumber":22,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":25,"author":{"gitID":"-"},"content":"    public void equalsMethod() {"},{"lineNumber":26,"author":{"gitID":"-"},"content":"        Config defaultConfig \u003d new Config();"},{"lineNumber":27,"author":{"gitID":"-"},"content":"        assertNotNull(defaultConfig);"},{"lineNumber":28,"author":{"gitID":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"-":31,"Ang-YC":1}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.util;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertNotNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"public class AppUtilTest {"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":12,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":17,"author":{"gitID":"-"},"content":"    public void getImage_exitingImage() {"},{"lineNumber":18,"author":{"gitID":"Ang-YC"},"content":"        assertNotNull(AppUtil.getImage(\"/images/help_icon.png\"));"},{"lineNumber":19,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {"},{"lineNumber":24,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":25,"author":{"gitID":"-"},"content":"        AppUtil.getImage(null);"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    public void checkArgument_true_nothingHappens() {"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        AppUtil.checkArgument(true);"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        AppUtil.checkArgument(true, \"\");"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":35,"author":{"gitID":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        thrown.expect(IllegalArgumentException.class);"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        AppUtil.checkArgument(false);"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        String errorMessage \u003d \"error message\";"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        thrown.expect(IllegalArgumentException.class);"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        thrown.expectMessage(errorMessage);"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        AppUtil.checkArgument(false,  errorMessage);"},{"lineNumber":46,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"-":46,"Ang-YC":1}},{"path":"src/test/java/seedu/address/commons/util/XmlUtilTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.util;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import javax.xml.bind.JAXBException;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import javax.xml.bind.annotation.XmlRootElement;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.model.AddressBook;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.storage.XmlAdaptedPerson;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.storage.XmlAdaptedTag;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.storage.XmlSerializableAddressBook;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.address.testutil.TestUtil;"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"public class XmlUtilTest {"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":"    private static final String TEST_DATA_FOLDER \u003d FileUtil.getPath(\"src/test/data/XmlUtilTest/\");"},{"lineNumber":28,"author":{"gitID":"-"},"content":"    private static final File EMPTY_FILE \u003d new File(TEST_DATA_FOLDER + \"empty.xml\");"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    private static final File MISSING_FILE \u003d new File(TEST_DATA_FOLDER + \"missing.xml\");"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    private static final File VALID_FILE \u003d new File(TEST_DATA_FOLDER + \"validAddressBook.xml\");"},{"lineNumber":31,"author":{"gitID":"-"},"content":"    private static final File MISSING_PERSON_FIELD_FILE \u003d new File(TEST_DATA_FOLDER + \"missingPersonField.xml\");"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    private static final File INVALID_PERSON_FIELD_FILE \u003d new File(TEST_DATA_FOLDER + \"invalidPersonField.xml\");"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    private static final File VALID_PERSON_FILE \u003d new File(TEST_DATA_FOLDER + \"validPerson.xml\");"},{"lineNumber":34,"author":{"gitID":"-"},"content":"    private static final File TEMP_FILE \u003d new File(TestUtil.getFilePathInSandboxFolder(\"tempAddressBook.xml\"));"},{"lineNumber":35,"author":{"gitID":"-"},"content":""},{"lineNumber":36,"author":{"gitID":"-"},"content":"    private static final String INVALID_PHONE \u003d \"9482asf424\";"},{"lineNumber":37,"author":{"gitID":"-"},"content":""},{"lineNumber":38,"author":{"gitID":"-"},"content":"    private static final String VALID_NAME \u003d \"Hans Muster\";"},{"lineNumber":39,"author":{"gitID":"-"},"content":"    private static final String VALID_PHONE \u003d \"9482424\";"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    private static final String VALID_EMAIL \u003d \"hans@example\";"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"4th street\";"},{"lineNumber":42,"author":{"gitID":"kexiaowen"},"content":"    private static final String VALID_UNIVERSITY \u003d \"NUS\";"},{"lineNumber":43,"author":{"gitID":"mhq199657"},"content":"    private static final String VALID_EXPECTED_GRADUATION_YEAR \u003d \"2020\";"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":"    private static final String VALID_MAJOR \u003d \"Computer Science\";"},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"    private static final String VALID_GRADE_POINT_AVERAGE \u003d \"4.77\";"},{"lineNumber":46,"author":{"gitID":"kexiaowen"},"content":"    private static final String VALID_JOB_APPLIED \u003d \"Software Engineer\";"},{"lineNumber":47,"author":{"gitID":"kexiaowen"},"content":"    private static final String VALID_TECHNICAL_SKILLS_SCORE \u003d \"4\";"},{"lineNumber":48,"author":{"gitID":"kexiaowen"},"content":"    private static final String VALID_COMMUNICATION_SKILLS_SCORE \u003d \"3.5\";"},{"lineNumber":49,"author":{"gitID":"kexiaowen"},"content":"    private static final String VALID_PROBLEM_SOLVING_SKILLS_SCORE \u003d \"3\";"},{"lineNumber":50,"author":{"gitID":"kexiaowen"},"content":"    private static final String VALID_EXPERIENCE_SCORE \u003d \"2.5\";"},{"lineNumber":51,"author":{"gitID":"mhq199657"},"content":"    private static final String VALID_RESUME \u003d TEST_DATA_FOLDER + \"hans.pdf\";"},{"lineNumber":52,"author":{"gitID":"Ang-YC"},"content":"    private static final String VALID_PROFILE_IMAGE \u003d TEST_DATA_FOLDER + \"gates.jpg\";"},{"lineNumber":53,"author":{"gitID":"Ang-YC"},"content":"    private static final String VALID_COMMENT \u003d \"Competitive programmer\";"},{"lineNumber":54,"author":{"gitID":"Ang-YC"},"content":"    private static final String VALID_INTERVIEW_DATE \u003d \"1540814400\";"},{"lineNumber":55,"author":{"gitID":"mhq199657"},"content":"    private static final String VALID_STATUS \u003d \"offer accepted\";"},{"lineNumber":56,"author":{"gitID":"mhq199657"},"content":"    private static final List\u003cXmlAdaptedTag\u003e VALID_TAGS \u003d"},{"lineNumber":57,"author":{"gitID":"mhq199657"},"content":"            Collections.singletonList(new XmlAdaptedTag(\"friends\"));"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":60,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":61,"author":{"gitID":"-"},"content":""},{"lineNumber":62,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":63,"author":{"gitID":"-"},"content":"    public void getDataFromFile_nullFile_throwsNullPointerException() throws Exception {"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":65,"author":{"gitID":"-"},"content":"        XmlUtil.getDataFromFile(null, AddressBook.class);"},{"lineNumber":66,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":67,"author":{"gitID":"-"},"content":""},{"lineNumber":68,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":69,"author":{"gitID":"-"},"content":"    public void getDataFromFile_nullClass_throwsNullPointerException() throws Exception {"},{"lineNumber":70,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        XmlUtil.getDataFromFile(VALID_FILE, null);"},{"lineNumber":72,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"-"},"content":""},{"lineNumber":74,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":75,"author":{"gitID":"-"},"content":"    public void getDataFromFile_missingFile_fileNotFoundException() throws Exception {"},{"lineNumber":76,"author":{"gitID":"-"},"content":"        thrown.expect(FileNotFoundException.class);"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        XmlUtil.getDataFromFile(MISSING_FILE, AddressBook.class);"},{"lineNumber":78,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":79,"author":{"gitID":"-"},"content":""},{"lineNumber":80,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":81,"author":{"gitID":"-"},"content":"    public void getDataFromFile_emptyFile_dataFormatMismatchException() throws Exception {"},{"lineNumber":82,"author":{"gitID":"-"},"content":"        thrown.expect(JAXBException.class);"},{"lineNumber":83,"author":{"gitID":"-"},"content":"        XmlUtil.getDataFromFile(EMPTY_FILE, AddressBook.class);"},{"lineNumber":84,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":85,"author":{"gitID":"-"},"content":""},{"lineNumber":86,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":87,"author":{"gitID":"-"},"content":"    public void getDataFromFile_validFile_validResult() throws Exception {"},{"lineNumber":88,"author":{"gitID":"-"},"content":"        AddressBook dataFromFile \u003d XmlUtil.getDataFromFile(VALID_FILE, XmlSerializableAddressBook.class).toModelType();"},{"lineNumber":89,"author":{"gitID":"-"},"content":"        assertEquals(9, dataFromFile.getPersonList().size());"},{"lineNumber":90,"author":{"gitID":"-"},"content":"        assertEquals(0, dataFromFile.getTagList().size());"},{"lineNumber":91,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":92,"author":{"gitID":"-"},"content":""},{"lineNumber":93,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":94,"author":{"gitID":"-"},"content":"    public void xmlAdaptedPersonFromFile_fileWithMissingPersonField_validResult() throws Exception {"},{"lineNumber":95,"author":{"gitID":"-"},"content":"        XmlAdaptedPerson actualPerson \u003d XmlUtil.getDataFromFile("},{"lineNumber":96,"author":{"gitID":"-"},"content":"                MISSING_PERSON_FIELD_FILE, XmlAdaptedPersonWithRootElement.class);"},{"lineNumber":97,"author":{"gitID":"-"},"content":"        XmlAdaptedPerson expectedPerson \u003d new XmlAdaptedPerson("},{"lineNumber":98,"author":{"gitID":"kexiaowen"},"content":"                null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_UNIVERSITY, VALID_EXPECTED_GRADUATION_YEAR,"},{"lineNumber":99,"author":{"gitID":"kexiaowen"},"content":"                VALID_MAJOR, VALID_GRADE_POINT_AVERAGE, VALID_JOB_APPLIED,"},{"lineNumber":100,"author":{"gitID":"tanhengyeow"},"content":"                VALID_TECHNICAL_SKILLS_SCORE, VALID_COMMUNICATION_SKILLS_SCORE,"},{"lineNumber":101,"author":{"gitID":"Ang-YC"},"content":"                VALID_PROBLEM_SOLVING_SKILLS_SCORE, VALID_EXPERIENCE_SCORE, VALID_RESUME,"},{"lineNumber":102,"author":{"gitID":"Ang-YC"},"content":"                VALID_PROFILE_IMAGE, VALID_COMMENT,"},{"lineNumber":103,"author":{"gitID":"mhq199657"},"content":"                VALID_INTERVIEW_DATE, VALID_STATUS, VALID_TAGS);"},{"lineNumber":104,"author":{"gitID":"-"},"content":"        assertEquals(expectedPerson, actualPerson);"},{"lineNumber":105,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":106,"author":{"gitID":"-"},"content":""},{"lineNumber":107,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":108,"author":{"gitID":"-"},"content":"    public void xmlAdaptedPersonFromFile_fileWithInvalidPersonField_validResult() throws Exception {"},{"lineNumber":109,"author":{"gitID":"-"},"content":"        XmlAdaptedPerson actualPerson \u003d XmlUtil.getDataFromFile("},{"lineNumber":110,"author":{"gitID":"-"},"content":"                INVALID_PERSON_FIELD_FILE, XmlAdaptedPersonWithRootElement.class);"},{"lineNumber":111,"author":{"gitID":"-"},"content":"        XmlAdaptedPerson expectedPerson \u003d new XmlAdaptedPerson("},{"lineNumber":112,"author":{"gitID":"kexiaowen"},"content":"                VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_UNIVERSITY, VALID_EXPECTED_GRADUATION_YEAR,"},{"lineNumber":113,"author":{"gitID":"kexiaowen"},"content":"                VALID_MAJOR, VALID_GRADE_POINT_AVERAGE, VALID_JOB_APPLIED,"},{"lineNumber":114,"author":{"gitID":"tanhengyeow"},"content":"                VALID_TECHNICAL_SKILLS_SCORE, VALID_COMMUNICATION_SKILLS_SCORE,"},{"lineNumber":115,"author":{"gitID":"Ang-YC"},"content":"                VALID_PROBLEM_SOLVING_SKILLS_SCORE, VALID_EXPERIENCE_SCORE, VALID_RESUME,"},{"lineNumber":116,"author":{"gitID":"Ang-YC"},"content":"                VALID_PROFILE_IMAGE, VALID_COMMENT,"},{"lineNumber":117,"author":{"gitID":"mhq199657"},"content":"                VALID_INTERVIEW_DATE, VALID_STATUS, VALID_TAGS);"},{"lineNumber":118,"author":{"gitID":"-"},"content":"        assertEquals(expectedPerson, actualPerson);"},{"lineNumber":119,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":120,"author":{"gitID":"-"},"content":""},{"lineNumber":121,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":122,"author":{"gitID":"-"},"content":"    public void xmlAdaptedPersonFromFile_fileWithValidPerson_validResult() throws Exception {"},{"lineNumber":123,"author":{"gitID":"-"},"content":"        XmlAdaptedPerson actualPerson \u003d XmlUtil.getDataFromFile("},{"lineNumber":124,"author":{"gitID":"-"},"content":"                VALID_PERSON_FILE, XmlAdaptedPersonWithRootElement.class);"},{"lineNumber":125,"author":{"gitID":"-"},"content":"        XmlAdaptedPerson expectedPerson \u003d new XmlAdaptedPerson("},{"lineNumber":126,"author":{"gitID":"kexiaowen"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_UNIVERSITY, VALID_EXPECTED_GRADUATION_YEAR,"},{"lineNumber":127,"author":{"gitID":"kexiaowen"},"content":"                VALID_MAJOR, VALID_GRADE_POINT_AVERAGE, VALID_JOB_APPLIED,"},{"lineNumber":128,"author":{"gitID":"tanhengyeow"},"content":"                VALID_TECHNICAL_SKILLS_SCORE, VALID_COMMUNICATION_SKILLS_SCORE,"},{"lineNumber":129,"author":{"gitID":"Ang-YC"},"content":"                VALID_PROBLEM_SOLVING_SKILLS_SCORE, VALID_EXPERIENCE_SCORE, VALID_RESUME,"},{"lineNumber":130,"author":{"gitID":"Ang-YC"},"content":"                VALID_PROFILE_IMAGE, VALID_COMMENT,"},{"lineNumber":131,"author":{"gitID":"mhq199657"},"content":"                VALID_INTERVIEW_DATE, VALID_STATUS, VALID_TAGS);"},{"lineNumber":132,"author":{"gitID":"-"},"content":"        assertEquals(expectedPerson, actualPerson);"},{"lineNumber":133,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":134,"author":{"gitID":"-"},"content":""},{"lineNumber":135,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":136,"author":{"gitID":"-"},"content":"    public void saveDataToFile_nullFile_throwsNullPointerException() throws Exception {"},{"lineNumber":137,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":138,"author":{"gitID":"-"},"content":"        XmlUtil.saveDataToFile(null, new AddressBook());"},{"lineNumber":139,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":140,"author":{"gitID":"-"},"content":""},{"lineNumber":141,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":142,"author":{"gitID":"-"},"content":"    public void saveDataToFile_nullClass_throwsNullPointerException() throws Exception {"},{"lineNumber":143,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":144,"author":{"gitID":"-"},"content":"        XmlUtil.saveDataToFile(VALID_FILE, null);"},{"lineNumber":145,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":146,"author":{"gitID":"-"},"content":""},{"lineNumber":147,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":148,"author":{"gitID":"-"},"content":"    public void saveDataToFile_missingFile_fileNotFoundException() throws Exception {"},{"lineNumber":149,"author":{"gitID":"-"},"content":"        thrown.expect(FileNotFoundException.class);"},{"lineNumber":150,"author":{"gitID":"-"},"content":"        XmlUtil.saveDataToFile(MISSING_FILE, new AddressBook());"},{"lineNumber":151,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":152,"author":{"gitID":"-"},"content":""},{"lineNumber":153,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":154,"author":{"gitID":"-"},"content":"    public void saveDataToFile_validFile_dataSaved() throws Exception {"},{"lineNumber":155,"author":{"gitID":"-"},"content":"        TEMP_FILE.createNewFile();"},{"lineNumber":156,"author":{"gitID":"-"},"content":"        XmlSerializableAddressBook dataToWrite \u003d new XmlSerializableAddressBook(new AddressBook());"},{"lineNumber":157,"author":{"gitID":"-"},"content":"        XmlUtil.saveDataToFile(TEMP_FILE, dataToWrite);"},{"lineNumber":158,"author":{"gitID":"-"},"content":"        XmlSerializableAddressBook dataFromFile \u003d XmlUtil.getDataFromFile(TEMP_FILE, XmlSerializableAddressBook.class);"},{"lineNumber":159,"author":{"gitID":"-"},"content":"        assertEquals(dataToWrite, dataFromFile);"},{"lineNumber":160,"author":{"gitID":"-"},"content":""},{"lineNumber":161,"author":{"gitID":"-"},"content":"        AddressBookBuilder builder \u003d new AddressBookBuilder(new AddressBook());"},{"lineNumber":162,"author":{"gitID":"-"},"content":"        dataToWrite \u003d new XmlSerializableAddressBook("},{"lineNumber":163,"author":{"gitID":"-"},"content":"                builder.withPerson(new PersonBuilder().build()).withTag(\"Friends\").build());"},{"lineNumber":164,"author":{"gitID":"-"},"content":""},{"lineNumber":165,"author":{"gitID":"-"},"content":"        XmlUtil.saveDataToFile(TEMP_FILE, dataToWrite);"},{"lineNumber":166,"author":{"gitID":"-"},"content":"        dataFromFile \u003d XmlUtil.getDataFromFile(TEMP_FILE, XmlSerializableAddressBook.class);"},{"lineNumber":167,"author":{"gitID":"-"},"content":"        assertEquals(dataToWrite, dataFromFile);"},{"lineNumber":168,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":169,"author":{"gitID":"-"},"content":""},{"lineNumber":170,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":171,"author":{"gitID":"-"},"content":"     * Test class annotated with {@code XmlRootElement} to allow unmarshalling of .xml data to {@code XmlAdaptedPerson}"},{"lineNumber":172,"author":{"gitID":"-"},"content":"     * objects."},{"lineNumber":173,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":174,"author":{"gitID":"-"},"content":"    @XmlRootElement(name \u003d \"person\")"},{"lineNumber":175,"author":{"gitID":"-"},"content":"    private static class XmlAdaptedPersonWithRootElement extends XmlAdaptedPerson {}"},{"lineNumber":176,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"kexiaowen":12,"mhq199657":8,"-":142,"tanhengyeow":5,"Ang-YC":9}},{"path":"src/test/java/systemtests/ResumeGuiTest.java","lines":[{"lineNumber":1,"author":{"gitID":"Ang-YC"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"},{"lineNumber":5,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":6,"author":{"gitID":"Ang-YC"},"content":"import org.junit.Rule;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import guitests.GuiRobot;"},{"lineNumber":10,"author":{"gitID":"Ang-YC"},"content":"import javafx.geometry.VerticalDirection;"},{"lineNumber":11,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.control.Button;"},{"lineNumber":12,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.input.KeyCode;"},{"lineNumber":14,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.input.MouseButton;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.BaseEvent;"},{"lineNumber":16,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.commons.events.ui.MaximizeAppRequestEvent;"},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.commons.events.ui.ShowPanelRequestEvent;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.SelectCommand;"},{"lineNumber":19,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.testutil.EventsUtil;"},{"lineNumber":20,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.ui.InfoPanel;"},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.ui.PdfPanel;"},{"lineNumber":22,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.ui.testutil.EventsCollectorRule;"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"Ang-YC"},"content":"//@@author Ang-YC"},{"lineNumber":25,"author":{"gitID":"Ang-YC"},"content":"public class ResumeGuiTest extends AddressBookSystemTest {"},{"lineNumber":26,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":27,"author":{"gitID":"Ang-YC"},"content":"    @Rule"},{"lineNumber":28,"author":{"gitID":"Ang-YC"},"content":"    public final EventsCollectorRule eventsCollectorRule \u003d new EventsCollectorRule();"},{"lineNumber":29,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":30,"author":{"gitID":"Ang-YC"},"content":"    private final GuiRobot guiRobot \u003d new GuiRobot();"},{"lineNumber":31,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":32,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":33,"author":{"gitID":"Ang-YC"},"content":"    public void testResume() {"},{"lineNumber":34,"author":{"gitID":"Ang-YC"},"content":"        // Maximize first to show resume button"},{"lineNumber":35,"author":{"gitID":"Ang-YC"},"content":"        EventsUtil.postNow(new MaximizeAppRequestEvent());"},{"lineNumber":36,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":37,"author":{"gitID":"Ang-YC"},"content":"        // Select first person"},{"lineNumber":38,"author":{"gitID":"Ang-YC"},"content":"        String command \u003d SelectCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased();"},{"lineNumber":39,"author":{"gitID":"Ang-YC"},"content":"        executeCommandWaitForUi(command);"},{"lineNumber":40,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":41,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":42,"author":{"gitID":"Ang-YC"},"content":"        // \u003d\u003d\u003d\u003d\u003d Cancel resume loading \u003d\u003d\u003d\u003d\u003d"},{"lineNumber":43,"author":{"gitID":"Ang-YC"},"content":"        Button infoSideButtonResume \u003d guiRobot.lookup(\"#infoSideButtonResume\").query();"},{"lineNumber":44,"author":{"gitID":"Ang-YC"},"content":"        guiRobot.clickOn(infoSideButtonResume, MouseButton.PRIMARY);"},{"lineNumber":45,"author":{"gitID":"Ang-YC"},"content":"        validateShowPanel(PdfPanel.PANEL_NAME);"},{"lineNumber":46,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":47,"author":{"gitID":"Ang-YC"},"content":"        Button resumeCancelButton \u003d guiRobot.lookup(\"#resumeCancelButton\").query();"},{"lineNumber":48,"author":{"gitID":"Ang-YC"},"content":"        guiRobot.waitForEvent(resumeCancelButton::isVisible);"},{"lineNumber":49,"author":{"gitID":"Ang-YC"},"content":"        guiRobot.clickOn(resumeCancelButton, MouseButton.PRIMARY);"},{"lineNumber":50,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":51,"author":{"gitID":"Ang-YC"},"content":"        validateShowPanel(InfoPanel.PANEL_NAME);"},{"lineNumber":52,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":53,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":54,"author":{"gitID":"Ang-YC"},"content":"        // \u003d\u003d\u003d\u003d\u003d Let resume load + Scroll \u003d\u003d\u003d\u003d\u003d"},{"lineNumber":55,"author":{"gitID":"Ang-YC"},"content":"        guiRobot.clickOn(infoSideButtonResume, MouseButton.PRIMARY);"},{"lineNumber":56,"author":{"gitID":"Ang-YC"},"content":"        validateShowPanel(PdfPanel.PANEL_NAME);"},{"lineNumber":57,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":58,"author":{"gitID":"Ang-YC"},"content":"        ScrollPane resumePane \u003d guiRobot.lookup(\"#resumePane\").query();"},{"lineNumber":59,"author":{"gitID":"Ang-YC"},"content":"        guiRobot.waitForEvent(resumePane::isVisible);"},{"lineNumber":60,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":61,"author":{"gitID":"Ang-YC"},"content":"        guiRobot.clickOn(resumePane, MouseButton.PRIMARY);"},{"lineNumber":62,"author":{"gitID":"Ang-YC"},"content":"        guiRobot.scroll(VerticalDirection.UP);"},{"lineNumber":63,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":64,"author":{"gitID":"Ang-YC"},"content":"        // Unmaximize to trigger resize"},{"lineNumber":65,"author":{"gitID":"Ang-YC"},"content":"        EventsUtil.postNow(new MaximizeAppRequestEvent());"},{"lineNumber":66,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":67,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":68,"author":{"gitID":"Ang-YC"},"content":"        // \u003d\u003d\u003d\u003d\u003d Exit using ESC \u003d\u003d\u003d\u003d\u003d"},{"lineNumber":69,"author":{"gitID":"Ang-YC"},"content":"        guiRobot.push(KeyCode.ESCAPE);"},{"lineNumber":70,"author":{"gitID":"Ang-YC"},"content":"        validateShowPanel(InfoPanel.PANEL_NAME);"},{"lineNumber":71,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":72,"author":{"gitID":"Ang-YC"},"content":"        // What is Codacy doing, only know how to complaint but didn\u0027t analyze properly"},{"lineNumber":73,"author":{"gitID":"Ang-YC"},"content":"        // that I do have assert inside the validateShowPanel function, smh"},{"lineNumber":74,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(resumePane.isPannable());"},{"lineNumber":75,"author":{"gitID":"Ang-YC"},"content":"        // This line is written just for the sake of Codacy"},{"lineNumber":76,"author":{"gitID":"Ang-YC"},"content":"        // Why can\u0027t Codacy just do proper analysis so that I don\u0027t need to do extra work and keep pushing?"},{"lineNumber":77,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":78,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":79,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":80,"author":{"gitID":"Ang-YC"},"content":"     * Validate the event requested to show panel"},{"lineNumber":81,"author":{"gitID":"Ang-YC"},"content":"     * @param requestedPanel to be shown"},{"lineNumber":82,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":83,"author":{"gitID":"Ang-YC"},"content":"    private void validateShowPanel(String requestedPanel) {"},{"lineNumber":84,"author":{"gitID":"Ang-YC"},"content":"        BaseEvent baseEvent \u003d eventsCollectorRule.eventsCollector.getMostRecent();"},{"lineNumber":85,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(baseEvent instanceof ShowPanelRequestEvent);"},{"lineNumber":86,"author":{"gitID":"Ang-YC"},"content":"        ShowPanelRequestEvent showPanelRequestEvent \u003d (ShowPanelRequestEvent) baseEvent;"},{"lineNumber":87,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(showPanelRequestEvent.getRequestedPanel().equals(requestedPanel));"},{"lineNumber":88,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":89,"author":{"gitID":"Ang-YC"},"content":"}"}],"authorContributionMap":{"-":8,"Ang-YC":81}},{"path":"src/test/java/seedu/address/commons/util/DoubleUtilTest.java","lines":[{"lineNumber":1,"author":{"gitID":"kexiaowen"},"content":"package seedu.address.commons.util;"},{"lineNumber":2,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"kexiaowen"},"content":"//@@author kexiaowen"},{"lineNumber":8,"author":{"gitID":"kexiaowen"},"content":"public class DoubleUtilTest {"},{"lineNumber":9,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":10,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":11,"author":{"gitID":"kexiaowen"},"content":"    public void roundToTwoDecimalPlaces_inputDouble() {"},{"lineNumber":12,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(DoubleUtil.roundToTwoDecimalPlaces(1) \u003d\u003d 1.0);"},{"lineNumber":13,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(DoubleUtil.roundToTwoDecimalPlaces(1.3424323423424) \u003d\u003d 1.34);"},{"lineNumber":14,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(DoubleUtil.roundToTwoDecimalPlaces(4242.3351231231) \u003d\u003d 4242.34);"},{"lineNumber":15,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(DoubleUtil.roundToTwoDecimalPlaces("},{"lineNumber":16,"author":{"gitID":"kexiaowen"},"content":"                3.345331231234444444232322325898788765767645436658689797676547587698) \u003d\u003d 3.35);"},{"lineNumber":17,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":18,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":19,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":20,"author":{"gitID":"kexiaowen"},"content":"    public void roundToTwoDecimalPlaces_inputString() {"},{"lineNumber":21,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(DoubleUtil.roundToTwoDecimalPlaces(\"1\") \u003d\u003d 1.0);"},{"lineNumber":22,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(DoubleUtil.roundToTwoDecimalPlaces(\"1.3424323423424\") \u003d\u003d 1.34);"},{"lineNumber":23,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(DoubleUtil.roundToTwoDecimalPlaces(\"4242.3351231231\") \u003d\u003d 4242.34);"},{"lineNumber":24,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(DoubleUtil.roundToTwoDecimalPlaces("},{"lineNumber":25,"author":{"gitID":"kexiaowen"},"content":"                \"3.345331231234444444232322325898788765767645436658689797676547587698\") \u003d\u003d 3.35);"},{"lineNumber":26,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"kexiaowen"},"content":"}"}],"authorContributionMap":{"kexiaowen":23,"-":4}},{"path":"src/test/java/seedu/address/logic/parser/FilterCommandParserTest.java","lines":[{"lineNumber":1,"author":{"gitID":"mhq199657"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;"},{"lineNumber":5,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;"},{"lineNumber":6,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":7,"author":{"gitID":"mhq199657"},"content":"import org.junit.Test;"},{"lineNumber":8,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":9,"author":{"gitID":"mhq199657"},"content":"import seedu.address.logic.commands.FilterCommand;"},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.ExpectedGraduationYear;"},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.ExpectedGraduationYearInKeywordsRangePredicate;"},{"lineNumber":12,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.GradePointAverage;"},{"lineNumber":13,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.GradePointAverageInKeywordsRangePredicate;"},{"lineNumber":14,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Rating;"},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.RatingInKeywordsRangePredicate;"},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.util.InterviewDateUtil;"},{"lineNumber":17,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":18,"author":{"gitID":"mhq199657"},"content":"public class FilterCommandParserTest {"},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":"    private FilterCommandParser parser \u003d new FilterCommandParser();"},{"lineNumber":20,"author":{"gitID":"mhq199657"},"content":"    //@@author mhq199657"},{"lineNumber":21,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":22,"author":{"gitID":"mhq199657"},"content":"    public void parse_emptyArg_throwsParseException() {"},{"lineNumber":23,"author":{"gitID":"mhq199657"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));"},{"lineNumber":24,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":25,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":26,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":27,"author":{"gitID":"mhq199657"},"content":"    public void parse_validArg_returnsFilterCommand() {"},{"lineNumber":28,"author":{"gitID":"mhq199657"},"content":"        // no leading and trailing whitespaces"},{"lineNumber":29,"author":{"gitID":"mhq199657"},"content":"        FilterCommand expectedFilterCommand \u003d"},{"lineNumber":30,"author":{"gitID":"mhq199657"},"content":"                new FilterCommand(new ExpectedGraduationYearInKeywordsRangePredicate("},{"lineNumber":31,"author":{"gitID":"mhq199657"},"content":"                        new FilterRange\u003cExpectedGraduationYear\u003e("},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":"                                new ExpectedGraduationYear(\"2020\"), new ExpectedGraduationYear(\"2020\"))));"},{"lineNumber":33,"author":{"gitID":"mhq199657"},"content":"        assertParseSuccess(parser, \" y/2020\", expectedFilterCommand);"},{"lineNumber":34,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":35,"author":{"gitID":"mhq199657"},"content":"        expectedFilterCommand \u003d"},{"lineNumber":36,"author":{"gitID":"mhq199657"},"content":"                new FilterCommand(new ExpectedGraduationYearInKeywordsRangePredicate("},{"lineNumber":37,"author":{"gitID":"mhq199657"},"content":"                        new FilterRange\u003cExpectedGraduationYear\u003e("},{"lineNumber":38,"author":{"gitID":"mhq199657"},"content":"                                new ExpectedGraduationYear(\"2019\"), new ExpectedGraduationYear(\"2021\"))));"},{"lineNumber":39,"author":{"gitID":"mhq199657"},"content":"        assertParseSuccess(parser, \" y/2019-2021\", expectedFilterCommand);"},{"lineNumber":40,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":41,"author":{"gitID":"mhq199657"},"content":"        expectedFilterCommand \u003d"},{"lineNumber":42,"author":{"gitID":"mhq199657"},"content":"                new FilterCommand(new RatingInKeywordsRangePredicate("},{"lineNumber":43,"author":{"gitID":"mhq199657"},"content":"                        new FilterRange\u003c\u003e("},{"lineNumber":44,"author":{"gitID":"mhq199657"},"content":"                                new Rating(2.22, 2.22, 2.22, 2.22), new Rating(2.22, 2.22, 2.22, 2.22))));"},{"lineNumber":45,"author":{"gitID":"mhq199657"},"content":"        assertParseSuccess(parser, \" r/2.22\", expectedFilterCommand);"},{"lineNumber":46,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":47,"author":{"gitID":"mhq199657"},"content":"        expectedFilterCommand \u003d"},{"lineNumber":48,"author":{"gitID":"mhq199657"},"content":"                new FilterCommand(new RatingInKeywordsRangePredicate("},{"lineNumber":49,"author":{"gitID":"mhq199657"},"content":"                        new FilterRange\u003c\u003e("},{"lineNumber":50,"author":{"gitID":"mhq199657"},"content":"                                new Rating(1.22, 1.22, 1.22, 1.22), new Rating(3.22, 3.22, 3.22, 3.22))));"},{"lineNumber":51,"author":{"gitID":"mhq199657"},"content":"        assertParseSuccess(parser, \" r/1.22-3.22\", expectedFilterCommand);"},{"lineNumber":52,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":53,"author":{"gitID":"mhq199657"},"content":"        expectedFilterCommand \u003d"},{"lineNumber":54,"author":{"gitID":"mhq199657"},"content":"                new FilterCommand(new GradePointAverageInKeywordsRangePredicate("},{"lineNumber":55,"author":{"gitID":"mhq199657"},"content":"                        new FilterRange\u003cGradePointAverage\u003e("},{"lineNumber":56,"author":{"gitID":"mhq199657"},"content":"                                new GradePointAverage(\"4.00\"), new GradePointAverage(\"4.00\"))));"},{"lineNumber":57,"author":{"gitID":"mhq199657"},"content":"        assertParseSuccess(parser, \" g/4.00\", expectedFilterCommand);"},{"lineNumber":58,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":59,"author":{"gitID":"mhq199657"},"content":"        expectedFilterCommand \u003d"},{"lineNumber":60,"author":{"gitID":"mhq199657"},"content":"                new FilterCommand(new GradePointAverageInKeywordsRangePredicate("},{"lineNumber":61,"author":{"gitID":"mhq199657"},"content":"                        new FilterRange\u003cGradePointAverage\u003e("},{"lineNumber":62,"author":{"gitID":"mhq199657"},"content":"                                new GradePointAverage(\"3.01\"), new GradePointAverage(\"4.01\"))));"},{"lineNumber":63,"author":{"gitID":"mhq199657"},"content":"        assertParseSuccess(parser, \" g/3.01-4.01\", expectedFilterCommand);"},{"lineNumber":64,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":65,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":66,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":67,"author":{"gitID":"mhq199657"},"content":"    public void parse_invalidArg_throwsParseException() {"},{"lineNumber":68,"author":{"gitID":"mhq199657"},"content":"        //Missing input, invalid command format"},{"lineNumber":69,"author":{"gitID":"mhq199657"},"content":"        assertParseFailure(parser, \"y/\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));"},{"lineNumber":70,"author":{"gitID":"mhq199657"},"content":"        assertParseFailure(parser, \"r/\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));"},{"lineNumber":71,"author":{"gitID":"mhq199657"},"content":"        assertParseFailure(parser, \"g/\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));"},{"lineNumber":72,"author":{"gitID":"mhq199657"},"content":"        assertParseFailure(parser, \"d/\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));"},{"lineNumber":73,"author":{"gitID":"mhq199657"},"content":"        assertParseFailure(parser, \"x/\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));"},{"lineNumber":74,"author":{"gitID":"mhq199657"},"content":"        assertParseFailure(parser, \"   y/2025--2025\","},{"lineNumber":75,"author":{"gitID":"mhq199657"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));"},{"lineNumber":76,"author":{"gitID":"mhq199657"},"content":"        assertParseFailure(parser, \"   y/-\","},{"lineNumber":77,"author":{"gitID":"mhq199657"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));"},{"lineNumber":78,"author":{"gitID":"mhq199657"},"content":"        assertParseFailure(parser, \"   y/,\","},{"lineNumber":79,"author":{"gitID":"mhq199657"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));"},{"lineNumber":80,"author":{"gitID":"mhq199657"},"content":"        assertParseFailure(parser, \"   d/,,\","},{"lineNumber":81,"author":{"gitID":"mhq199657"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));"},{"lineNumber":82,"author":{"gitID":"mhq199657"},"content":"        assertParseFailure(parser, \" r/2.22 - \","},{"lineNumber":83,"author":{"gitID":"mhq199657"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));"},{"lineNumber":84,"author":{"gitID":"mhq199657"},"content":"        assertParseFailure(parser, \" g/2.2 - \","},{"lineNumber":85,"author":{"gitID":"mhq199657"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));"},{"lineNumber":86,"author":{"gitID":"mhq199657"},"content":"        //Correct command format but invalid field value"},{"lineNumber":87,"author":{"gitID":"mhq199657"},"content":"        assertParseFailure(parser, \"   y/2o2o\","},{"lineNumber":88,"author":{"gitID":"mhq199657"},"content":"                ExpectedGraduationYear.MESSAGE_EXPECTED_GRADUATION_YEAR_CONSTRAINTS);"},{"lineNumber":89,"author":{"gitID":"mhq199657"},"content":"        assertParseFailure(parser, \"   y/2025,,2025\","},{"lineNumber":90,"author":{"gitID":"mhq199657"},"content":"                ExpectedGraduationYear.MESSAGE_EXPECTED_GRADUATION_YEAR_CONSTRAINTS);"},{"lineNumber":91,"author":{"gitID":"mhq199657"},"content":"        assertParseFailure(parser, \"   y/2020 r/f\","},{"lineNumber":92,"author":{"gitID":"mhq199657"},"content":"                Rating.MESSAGE_RATING_CONSTRAINTS);"},{"lineNumber":93,"author":{"gitID":"mhq199657"},"content":"        assertParseFailure(parser, \" r/-3.45 \","},{"lineNumber":94,"author":{"gitID":"mhq199657"},"content":"                Rating.MESSAGE_RATING_CONSTRAINTS);"},{"lineNumber":95,"author":{"gitID":"mhq199657"},"content":"        assertParseFailure(parser, \" g/3.3-3.4 \","},{"lineNumber":96,"author":{"gitID":"mhq199657"},"content":"                GradePointAverage.MESSAGE_GRADE_POINT_AVERAGE_CONSTRAINTS);"},{"lineNumber":97,"author":{"gitID":"mhq199657"},"content":"        assertParseFailure(parser, \" g/3.3-+6.4 \","},{"lineNumber":98,"author":{"gitID":"mhq199657"},"content":"                GradePointAverage.MESSAGE_GRADE_POINT_AVERAGE_CONSTRAINTS);"},{"lineNumber":99,"author":{"gitID":"mhq199657"},"content":"        assertParseFailure(parser, \" d/20188888 \","},{"lineNumber":100,"author":{"gitID":"mhq199657"},"content":"                InterviewDateUtil.MESSAGE_INTERVIEW_DATE_CONSTRAINT);"},{"lineNumber":101,"author":{"gitID":"mhq199657"},"content":"        //Both mistakes occured, detect invalid command format first"},{"lineNumber":102,"author":{"gitID":"mhq199657"},"content":"        assertParseFailure(parser, \"   y/2025--2025,2o2o\","},{"lineNumber":103,"author":{"gitID":"mhq199657"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));"},{"lineNumber":104,"author":{"gitID":"mhq199657"},"content":"        assertParseFailure(parser, \"   y/2025 r/1--100\","},{"lineNumber":105,"author":{"gitID":"mhq199657"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));"},{"lineNumber":106,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":107,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":108,"author":{"gitID":"mhq199657"},"content":"}"}],"authorContributionMap":{"mhq199657":107,"-":1}},{"path":"src/test/java/seedu/address/commons/util/UiUtilTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.util;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":6,"author":{"gitID":"Ang-YC"},"content":"import java.time.LocalDateTime;"},{"lineNumber":7,"author":{"gitID":"Ang-YC"},"content":"import java.time.ZoneOffset;"},{"lineNumber":8,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":9,"author":{"gitID":"Ang-YC"},"content":"import org.junit.Before;"},{"lineNumber":10,"author":{"gitID":"Ang-YC"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":12,"author":{"gitID":"Ang-YC"},"content":"import javafx.animation.FadeTransition;"},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":"import javafx.animation.Interpolator;"},{"lineNumber":14,"author":{"gitID":"Ang-YC"},"content":"import javafx.event.ActionEvent;"},{"lineNumber":15,"author":{"gitID":"Ang-YC"},"content":"import javafx.event.EventHandler;"},{"lineNumber":16,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.layout.Pane;"},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":18,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":19,"author":{"gitID":"Ang-YC"},"content":"//@@author Ang-YC"},{"lineNumber":20,"author":{"gitID":"Ang-YC"},"content":"public class UiUtilTest {"},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":22,"author":{"gitID":"Ang-YC"},"content":"    private static final int MIN_DURATION \u003d 1;"},{"lineNumber":23,"author":{"gitID":"Ang-YC"},"content":"    private static final int MAX_DURATION \u003d 100;"},{"lineNumber":24,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":25,"author":{"gitID":"Ang-YC"},"content":"    private EventHandler\u003cActionEvent\u003e eventHandler \u003d (EventHandler\u003cActionEvent\u003e) event -\u003e { };"},{"lineNumber":26,"author":{"gitID":"Ang-YC"},"content":"    private Pane invisiblePane \u003d new Pane();"},{"lineNumber":27,"author":{"gitID":"Ang-YC"},"content":"    private Pane visiblePane \u003d new Pane();"},{"lineNumber":28,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":29,"author":{"gitID":"Ang-YC"},"content":"    @Before"},{"lineNumber":30,"author":{"gitID":"Ang-YC"},"content":"    public void setUp() {"},{"lineNumber":31,"author":{"gitID":"Ang-YC"},"content":"        invisiblePane.setOpacity(0);"},{"lineNumber":32,"author":{"gitID":"Ang-YC"},"content":"        visiblePane.setOpacity(1);"},{"lineNumber":33,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":35,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":36,"author":{"gitID":"Ang-YC"},"content":"    public void fadeNode_fadeOut() {"},{"lineNumber":37,"author":{"gitID":"Ang-YC"},"content":"        FadeTransition transition;"},{"lineNumber":38,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":39,"author":{"gitID":"Ang-YC"},"content":"        // From visible"},{"lineNumber":40,"author":{"gitID":"Ang-YC"},"content":"        transition \u003d (FadeTransition) UiUtil.fadeNode(visiblePane, false, MAX_DURATION, eventHandler);"},{"lineNumber":41,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(doubleEqual(transition.getFromValue(), visiblePane.getOpacity()));"},{"lineNumber":42,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(doubleEqual(transition.getDuration().toMillis(), MAX_DURATION));"},{"lineNumber":43,"author":{"gitID":"Ang-YC"},"content":"        assertOtherConstant(transition, false);"},{"lineNumber":44,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":45,"author":{"gitID":"Ang-YC"},"content":"        // From invisible"},{"lineNumber":46,"author":{"gitID":"Ang-YC"},"content":"        transition \u003d (FadeTransition) UiUtil.fadeNode(invisiblePane, false, MAX_DURATION, eventHandler);"},{"lineNumber":47,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(doubleEqual(transition.getFromValue(), invisiblePane.getOpacity()));"},{"lineNumber":48,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(doubleEqual(transition.getDuration().toMillis(), MIN_DURATION));"},{"lineNumber":49,"author":{"gitID":"Ang-YC"},"content":"        assertOtherConstant(transition, false);"},{"lineNumber":50,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":51,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":52,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":53,"author":{"gitID":"Ang-YC"},"content":"    public void fadeNode_fadeIn() {"},{"lineNumber":54,"author":{"gitID":"Ang-YC"},"content":"        FadeTransition transition;"},{"lineNumber":55,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":56,"author":{"gitID":"Ang-YC"},"content":"        // From visible"},{"lineNumber":57,"author":{"gitID":"Ang-YC"},"content":"        transition \u003d (FadeTransition) UiUtil.fadeNode(visiblePane, true, MAX_DURATION, eventHandler);"},{"lineNumber":58,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(doubleEqual(transition.getFromValue(), visiblePane.getOpacity()));"},{"lineNumber":59,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(doubleEqual(transition.getDuration().toMillis(), MIN_DURATION));"},{"lineNumber":60,"author":{"gitID":"Ang-YC"},"content":"        assertOtherConstant(transition, true);"},{"lineNumber":61,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":62,"author":{"gitID":"Ang-YC"},"content":"        // From invisible"},{"lineNumber":63,"author":{"gitID":"Ang-YC"},"content":"        transition \u003d (FadeTransition) UiUtil.fadeNode(invisiblePane, true, MAX_DURATION, eventHandler);"},{"lineNumber":64,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(doubleEqual(transition.getFromValue(), invisiblePane.getOpacity()));"},{"lineNumber":65,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(doubleEqual(transition.getDuration().toMillis(), MAX_DURATION));"},{"lineNumber":66,"author":{"gitID":"Ang-YC"},"content":"        assertOtherConstant(transition, true);"},{"lineNumber":67,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":69,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":70,"author":{"gitID":"Ang-YC"},"content":"    public void colorToHex() {"},{"lineNumber":71,"author":{"gitID":"Ang-YC"},"content":"        Color white \u003d new Color(1, 1, 1, 0);"},{"lineNumber":72,"author":{"gitID":"Ang-YC"},"content":"        String hex \u003d UiUtil.colorToHex(white);"},{"lineNumber":73,"author":{"gitID":"Ang-YC"},"content":"        String expectedWhite \u003d \"#FFFFFF\";"},{"lineNumber":74,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":75,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(hex.equals(expectedWhite));"},{"lineNumber":76,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":77,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":78,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":79,"author":{"gitID":"Ang-YC"},"content":"    public void toFixed() {"},{"lineNumber":80,"author":{"gitID":"Ang-YC"},"content":"        // From double"},{"lineNumber":81,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(UiUtil.toFixed(1.23, 5).equals(\"1.23000\"));"},{"lineNumber":82,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":83,"author":{"gitID":"Ang-YC"},"content":"        // Cut down"},{"lineNumber":84,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(UiUtil.toFixed(\"1.23456789\", 2).equals(\"1.23\"));"},{"lineNumber":85,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":86,"author":{"gitID":"Ang-YC"},"content":"        // Padding right"},{"lineNumber":87,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(UiUtil.toFixed(\"1.23\", 5).equals(\"1.23000\"));"},{"lineNumber":88,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":89,"author":{"gitID":"Ang-YC"},"content":"        // Padding left"},{"lineNumber":90,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(UiUtil.toFixed(\".01\", 2).equals(\"0.01\"));"},{"lineNumber":91,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":92,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":93,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":94,"author":{"gitID":"Ang-YC"},"content":"    public void formatDate() {"},{"lineNumber":95,"author":{"gitID":"Ang-YC"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.ofEpochSecond(1540814400L, 0, ZoneOffset.UTC);"},{"lineNumber":96,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(UiUtil.formatDate(dateTime).equals(\"29 Oct 2018 12:00:00pm\"));"},{"lineNumber":97,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":98,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":99,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":100,"author":{"gitID":"Ang-YC"},"content":"     * Assert other information"},{"lineNumber":101,"author":{"gitID":"Ang-YC"},"content":"     * @param transition to be assert"},{"lineNumber":102,"author":{"gitID":"Ang-YC"},"content":"     * @param fadeIn If set, fade in"},{"lineNumber":103,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":104,"author":{"gitID":"Ang-YC"},"content":"    private void assertOtherConstant(FadeTransition transition, boolean fadeIn) {"},{"lineNumber":105,"author":{"gitID":"Ang-YC"},"content":"        Interpolator interpolator \u003d fadeIn ? Interpolator.EASE_IN : Interpolator.EASE_OUT;"},{"lineNumber":106,"author":{"gitID":"Ang-YC"},"content":"        double toValue \u003d fadeIn ? 1 : 0;"},{"lineNumber":107,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":108,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(doubleEqual(transition.getToValue(), toValue));"},{"lineNumber":109,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(transition.getCycleCount() \u003d\u003d 1);"},{"lineNumber":110,"author":{"gitID":"Ang-YC"},"content":"        assertFalse(transition.isAutoReverse());"},{"lineNumber":111,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(transition.getInterpolator().equals(interpolator));"},{"lineNumber":112,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":113,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":114,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":115,"author":{"gitID":"Ang-YC"},"content":"     * Due to the floating point error, we use this method to compare double"},{"lineNumber":116,"author":{"gitID":"Ang-YC"},"content":"     * @param first double"},{"lineNumber":117,"author":{"gitID":"Ang-YC"},"content":"     * @param second double"},{"lineNumber":118,"author":{"gitID":"Ang-YC"},"content":"     * @return true if equal (different by 0.001)"},{"lineNumber":119,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":120,"author":{"gitID":"Ang-YC"},"content":"    private boolean doubleEqual(double first, double second) {"},{"lineNumber":121,"author":{"gitID":"Ang-YC"},"content":"        return (Math.abs(first - second) \u003c 1e-3);"},{"lineNumber":122,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":123,"author":{"gitID":"Ang-YC"},"content":"}"}],"authorContributionMap":{"-":4,"Ang-YC":119}},{"path":"src/test/java/seedu/address/ui/RealTimeParserTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":5,"author":{"gitID":"Ang-YC"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":7,"author":{"gitID":"Ang-YC"},"content":"import org.junit.Before;"},{"lineNumber":8,"author":{"gitID":"Ang-YC"},"content":"import org.junit.Test;"},{"lineNumber":9,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":10,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.commons.util.UiUtil;"},{"lineNumber":11,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.logic.Logic;"},{"lineNumber":12,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.logic.LogicManager;"},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.logic.commands.Command;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.ExitCommand;"},{"lineNumber":15,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.logic.commands.InterviewCommand;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"Ang-YC"},"content":"//@@author Ang-YC"},{"lineNumber":20,"author":{"gitID":"Ang-YC"},"content":"public class RealTimeParserTest {"},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":22,"author":{"gitID":"Ang-YC"},"content":"    private Logic logic;"},{"lineNumber":23,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":24,"author":{"gitID":"Ang-YC"},"content":"    @Before"},{"lineNumber":25,"author":{"gitID":"Ang-YC"},"content":"    public void setUp() {"},{"lineNumber":26,"author":{"gitID":"Ang-YC"},"content":"        Model model \u003d new ModelManager();"},{"lineNumber":27,"author":{"gitID":"Ang-YC"},"content":"        logic \u003d new LogicManager(model);"},{"lineNumber":28,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":29,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":30,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":31,"author":{"gitID":"Ang-YC"},"content":"    public void parseExit() {"},{"lineNumber":32,"author":{"gitID":"Ang-YC"},"content":"        Command command \u003d logic.parse(\"exit\");"},{"lineNumber":33,"author":{"gitID":"Ang-YC"},"content":"        assertEquals(command.getParsedResult(), ExitCommand.PARSED_RESULT);"},{"lineNumber":34,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":36,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":37,"author":{"gitID":"Ang-YC"},"content":"    public void parseInterview() {"},{"lineNumber":38,"author":{"gitID":"Ang-YC"},"content":"        String timeNow \u003d UiUtil.formatDate(LocalDateTime.now());"},{"lineNumber":39,"author":{"gitID":"Ang-YC"},"content":"        Command command \u003d logic.parse(\"interview 1 \" + timeNow);"},{"lineNumber":40,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":41,"author":{"gitID":"Ang-YC"},"content":"        String expectedResult \u003d String.format(InterviewCommand.PARSED_RESULT, timeNow);"},{"lineNumber":42,"author":{"gitID":"Ang-YC"},"content":"        assertEquals(command.getParsedResult(), expectedResult);"},{"lineNumber":43,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"Ang-YC"},"content":"}"}],"authorContributionMap":{"-":7,"Ang-YC":37}},{"path":"src/test/java/seedu/address/logic/parser/FilterUtilTest.java","lines":[{"lineNumber":1,"author":{"gitID":"mhq199657"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":3,"author":{"gitID":"mhq199657"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":8,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;"},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.ExpectedGraduationYear;"},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.ExpectedGraduationYearInKeywordsRangePredicate;"},{"lineNumber":12,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.GradePointAverage;"},{"lineNumber":13,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.GradePointAverageInKeywordsRangePredicate;"},{"lineNumber":14,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.InterviewDate;"},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.InterviewDateInKeywordsRangePredicate;"},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Rating;"},{"lineNumber":17,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.RatingInKeywordsRangePredicate;"},{"lineNumber":18,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.util.InterviewDateUtil;"},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":"//@@author mhq199657"},{"lineNumber":20,"author":{"gitID":"mhq199657"},"content":"public class FilterUtilTest {"},{"lineNumber":21,"author":{"gitID":"mhq199657"},"content":"    @Rule"},{"lineNumber":22,"author":{"gitID":"mhq199657"},"content":"    public final ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":23,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":24,"author":{"gitID":"mhq199657"},"content":"    public void parseExpectedGraduationYear_invalidCommandFormat_throwsIllegalValueException() throws Exception {"},{"lineNumber":25,"author":{"gitID":"mhq199657"},"content":"        thrown.expect(IllegalValueException.class);"},{"lineNumber":26,"author":{"gitID":"mhq199657"},"content":"        FilterUtil.parseExpectedGraduationYear(\"  \");"},{"lineNumber":27,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":28,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":29,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":30,"author":{"gitID":"mhq199657"},"content":"    public void parseExpectedGraduationYear_outOfRangeInput_throwsIllegalValueException() throws Exception {"},{"lineNumber":31,"author":{"gitID":"mhq199657"},"content":"        thrown.expect(IllegalValueException.class);"},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":"        FilterUtil.parseExpectedGraduationYear(\"3000\");"},{"lineNumber":33,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":35,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":36,"author":{"gitID":"mhq199657"},"content":"    public void parseExpectedGraduationYear_validInput_success() throws Exception {"},{"lineNumber":37,"author":{"gitID":"mhq199657"},"content":"        //Single value"},{"lineNumber":38,"author":{"gitID":"mhq199657"},"content":"        //No whitespaces"},{"lineNumber":39,"author":{"gitID":"mhq199657"},"content":"        assertEquals(new ExpectedGraduationYearInKeywordsRangePredicate("},{"lineNumber":40,"author":{"gitID":"mhq199657"},"content":"                new FilterRange\u003c\u003e(new ExpectedGraduationYear(\"2020\"))),"},{"lineNumber":41,"author":{"gitID":"mhq199657"},"content":"                FilterUtil.parseExpectedGraduationYear(\"2020\"));"},{"lineNumber":42,"author":{"gitID":"mhq199657"},"content":"        //With whitespaces"},{"lineNumber":43,"author":{"gitID":"mhq199657"},"content":"        assertEquals(new ExpectedGraduationYearInKeywordsRangePredicate("},{"lineNumber":44,"author":{"gitID":"mhq199657"},"content":"                        new FilterRange\u003c\u003e(new ExpectedGraduationYear(\"2020\"))),"},{"lineNumber":45,"author":{"gitID":"mhq199657"},"content":"                FilterUtil.parseExpectedGraduationYear(\"    2020     \"));"},{"lineNumber":46,"author":{"gitID":"mhq199657"},"content":"        //Multiple values with whitespaces"},{"lineNumber":47,"author":{"gitID":"mhq199657"},"content":"        assertEquals(new ExpectedGraduationYearInKeywordsRangePredicate("},{"lineNumber":48,"author":{"gitID":"mhq199657"},"content":"                        new FilterRange\u003c\u003e(new ExpectedGraduationYear(\"2020\"), new ExpectedGraduationYear(\"2024\"))),"},{"lineNumber":49,"author":{"gitID":"mhq199657"},"content":"                FilterUtil.parseExpectedGraduationYear(\"    2020    - 2024 \"));"},{"lineNumber":50,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":51,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":52,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":53,"author":{"gitID":"mhq199657"},"content":"    public void parseRating_invalidCommandFormat_throwsIllegalValueException() throws Exception {"},{"lineNumber":54,"author":{"gitID":"mhq199657"},"content":"        thrown.expect(IllegalValueException.class);"},{"lineNumber":55,"author":{"gitID":"mhq199657"},"content":"        FilterUtil.parseRating(\"  \");"},{"lineNumber":56,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":58,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":59,"author":{"gitID":"mhq199657"},"content":"    public void parseRating_outOfRangeInput_throwsIllegalValueException() throws Exception {"},{"lineNumber":60,"author":{"gitID":"mhq199657"},"content":"        thrown.expect(IllegalValueException.class);"},{"lineNumber":61,"author":{"gitID":"mhq199657"},"content":"        FilterUtil.parseRating(\"6\");"},{"lineNumber":62,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":64,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":65,"author":{"gitID":"mhq199657"},"content":"    public void parseGradePointAverage_validInput_success() throws Exception {"},{"lineNumber":66,"author":{"gitID":"mhq199657"},"content":"        //Single value"},{"lineNumber":67,"author":{"gitID":"mhq199657"},"content":"        //No whitespaces"},{"lineNumber":68,"author":{"gitID":"mhq199657"},"content":"        assertEquals(new GradePointAverageInKeywordsRangePredicate("},{"lineNumber":69,"author":{"gitID":"mhq199657"},"content":"                        new FilterRange\u003c\u003e(new GradePointAverage(\"2.20\"))),"},{"lineNumber":70,"author":{"gitID":"mhq199657"},"content":"                FilterUtil.parseGradePointAverage(\"2.20\"));"},{"lineNumber":71,"author":{"gitID":"mhq199657"},"content":"        //With whitespaces"},{"lineNumber":72,"author":{"gitID":"mhq199657"},"content":"        assertEquals(new GradePointAverageInKeywordsRangePredicate("},{"lineNumber":73,"author":{"gitID":"mhq199657"},"content":"                        new FilterRange\u003c\u003e(new GradePointAverage(\"2.99\"))),"},{"lineNumber":74,"author":{"gitID":"mhq199657"},"content":"                FilterUtil.parseGradePointAverage(\"    2.99     \"));"},{"lineNumber":75,"author":{"gitID":"mhq199657"},"content":"        //Multiple values with whitespaces"},{"lineNumber":76,"author":{"gitID":"mhq199657"},"content":"        assertEquals(new GradePointAverageInKeywordsRangePredicate("},{"lineNumber":77,"author":{"gitID":"mhq199657"},"content":"                        new FilterRange\u003c\u003e(new GradePointAverage(\"1.00\"), new GradePointAverage(\"5.00\"))),"},{"lineNumber":78,"author":{"gitID":"mhq199657"},"content":"                FilterUtil.parseGradePointAverage(\"    1.00  -   5.00   \"));"},{"lineNumber":79,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":80,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":81,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":82,"author":{"gitID":"mhq199657"},"content":"    public void parseGradePointAverage_invalidCommandFormat_throwsIllegalValueException() throws Exception {"},{"lineNumber":83,"author":{"gitID":"mhq199657"},"content":"        thrown.expect(IllegalValueException.class);"},{"lineNumber":84,"author":{"gitID":"mhq199657"},"content":"        FilterUtil.parseGradePointAverage(\"  \");"},{"lineNumber":85,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":86,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":87,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":88,"author":{"gitID":"mhq199657"},"content":"    public void parseGradePointAverage_outOfRangeInput_throwsIllegalValueException() throws Exception {"},{"lineNumber":89,"author":{"gitID":"mhq199657"},"content":"        thrown.expect(IllegalValueException.class);"},{"lineNumber":90,"author":{"gitID":"mhq199657"},"content":"        FilterUtil.parseGradePointAverage(\"5.01\");"},{"lineNumber":91,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":92,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":93,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":94,"author":{"gitID":"mhq199657"},"content":"    public void parseRating_validInput_success() throws Exception {"},{"lineNumber":95,"author":{"gitID":"mhq199657"},"content":"        //Single value"},{"lineNumber":96,"author":{"gitID":"mhq199657"},"content":"        //No whitespaces"},{"lineNumber":97,"author":{"gitID":"mhq199657"},"content":"        assertEquals(new RatingInKeywordsRangePredicate("},{"lineNumber":98,"author":{"gitID":"mhq199657"},"content":"                        new FilterRange\u003c\u003e(new Rating(2.2, 2.2, 2.2, 2.2))),"},{"lineNumber":99,"author":{"gitID":"mhq199657"},"content":"                FilterUtil.parseRating(\"2.2\"));"},{"lineNumber":100,"author":{"gitID":"mhq199657"},"content":"        //With whitespaces"},{"lineNumber":101,"author":{"gitID":"mhq199657"},"content":"        assertEquals(new RatingInKeywordsRangePredicate("},{"lineNumber":102,"author":{"gitID":"mhq199657"},"content":"                        new FilterRange\u003c\u003e(new Rating(2.9, 2.9, 2.9, 2.9))),"},{"lineNumber":103,"author":{"gitID":"mhq199657"},"content":"                FilterUtil.parseRating(\"    2.9     \"));"},{"lineNumber":104,"author":{"gitID":"mhq199657"},"content":"        //Multiple values with whitespaces"},{"lineNumber":105,"author":{"gitID":"mhq199657"},"content":"        assertEquals(new RatingInKeywordsRangePredicate("},{"lineNumber":106,"author":{"gitID":"mhq199657"},"content":"                        new FilterRange\u003c\u003e(new Rating(1.0, 1.0, 1.0, 1.0), new Rating(4.0, 4.0, 4.0, 4.0))),"},{"lineNumber":107,"author":{"gitID":"mhq199657"},"content":"                FilterUtil.parseRating(\"    1.001  -   4.001   \"));"},{"lineNumber":108,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":109,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":110,"author":{"gitID":"mhq199657"},"content":"    public void parseInterviewDate_validInput_success() throws Exception {"},{"lineNumber":111,"author":{"gitID":"mhq199657"},"content":"        //Single value"},{"lineNumber":112,"author":{"gitID":"mhq199657"},"content":"        //No whitespaces"},{"lineNumber":113,"author":{"gitID":"mhq199657"},"content":"        assertEquals(new InterviewDateInKeywordsRangePredicate("},{"lineNumber":114,"author":{"gitID":"mhq199657"},"content":"                        new FilterRange\u003c\u003e("},{"lineNumber":115,"author":{"gitID":"mhq199657"},"content":"                                new InterviewDate(InterviewDateUtil.formLowerInterviewDateTime(\"20180331\")),"},{"lineNumber":116,"author":{"gitID":"mhq199657"},"content":"                                new InterviewDate(InterviewDateUtil.formHigherInterviewDateTime(\"20180331\")))),"},{"lineNumber":117,"author":{"gitID":"mhq199657"},"content":"                FilterUtil.parseInterviewDate(\"20180331\"));"},{"lineNumber":118,"author":{"gitID":"mhq199657"},"content":"        //With whitespaces"},{"lineNumber":119,"author":{"gitID":"mhq199657"},"content":"        assertEquals(new InterviewDateInKeywordsRangePredicate("},{"lineNumber":120,"author":{"gitID":"mhq199657"},"content":"                        new FilterRange\u003c\u003e("},{"lineNumber":121,"author":{"gitID":"mhq199657"},"content":"                                new InterviewDate(InterviewDateUtil.formLowerInterviewDateTime(\"20180331\")),"},{"lineNumber":122,"author":{"gitID":"mhq199657"},"content":"                                new InterviewDate(InterviewDateUtil.formHigherInterviewDateTime(\"20180331\")))),"},{"lineNumber":123,"author":{"gitID":"mhq199657"},"content":"                FilterUtil.parseInterviewDate(\"  20180331     \"));"},{"lineNumber":124,"author":{"gitID":"mhq199657"},"content":"        //Ranged values with whitespaces"},{"lineNumber":125,"author":{"gitID":"mhq199657"},"content":"        assertEquals(new InterviewDateInKeywordsRangePredicate("},{"lineNumber":126,"author":{"gitID":"mhq199657"},"content":"                        new FilterRange\u003c\u003e("},{"lineNumber":127,"author":{"gitID":"mhq199657"},"content":"                                new InterviewDate(InterviewDateUtil.formLowerInterviewDateTime(\"20180331\")),"},{"lineNumber":128,"author":{"gitID":"mhq199657"},"content":"                                new InterviewDate(InterviewDateUtil.formHigherInterviewDateTime(\"20180401\")))),"},{"lineNumber":129,"author":{"gitID":"mhq199657"},"content":"                FilterUtil.parseInterviewDate(\"20180331   -  20180401\"));"},{"lineNumber":130,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":131,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":132,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":133,"author":{"gitID":"mhq199657"},"content":"    public void parseInterviewDate_invalidCommandFormat_throwsIllegalValueException() throws Exception {"},{"lineNumber":134,"author":{"gitID":"mhq199657"},"content":"        thrown.expect(IllegalValueException.class);"},{"lineNumber":135,"author":{"gitID":"mhq199657"},"content":"        FilterUtil.parseInterviewDate(\"  \");"},{"lineNumber":136,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":137,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":138,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":139,"author":{"gitID":"mhq199657"},"content":"    public void parseInterviewDate_invalidInput_throwsIllegalValueException() throws Exception {"},{"lineNumber":140,"author":{"gitID":"mhq199657"},"content":"        thrown.expect(IllegalValueException.class);"},{"lineNumber":141,"author":{"gitID":"mhq199657"},"content":"        FilterUtil.parseInterviewDate(\"20180100\");"},{"lineNumber":142,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":143,"author":{"gitID":"mhq199657"},"content":"}"}],"authorContributionMap":{"mhq199657":138,"-":5}},{"path":"src/test/java/seedu/address/logic/parser/ShowCommandParserTest.java","lines":[{"lineNumber":1,"author":{"gitID":"mhq199657"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;"},{"lineNumber":5,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;"},{"lineNumber":6,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":7,"author":{"gitID":"mhq199657"},"content":"import org.junit.Test;"},{"lineNumber":8,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":9,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.logic.commands.ShowCommand;"},{"lineNumber":10,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":11,"author":{"gitID":"Ang-YC"},"content":"//@@author Ang-YC"},{"lineNumber":12,"author":{"gitID":"Ang-YC"},"content":"public class ShowCommandParserTest {"},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":14,"author":{"gitID":"Ang-YC"},"content":"    private ShowCommandParser parser \u003d new ShowCommandParser();"},{"lineNumber":15,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":16,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":"    public void parse_validArgs_returnsShowCommand() {"},{"lineNumber":18,"author":{"gitID":"Ang-YC"},"content":"        assertParseSuccess(parser, \"info\", new ShowCommand(ShowCommand.Panel.INFO));"},{"lineNumber":19,"author":{"gitID":"Ang-YC"},"content":"        assertParseSuccess(parser, \"resume\", new ShowCommand(ShowCommand.Panel.RESUME));"},{"lineNumber":20,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":22,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":23,"author":{"gitID":"Ang-YC"},"content":"    public void parse_invalidArgs_throwsParseException() {"},{"lineNumber":24,"author":{"gitID":"Ang-YC"},"content":"        assertParseFailure(parser, \"unknownPanel\","},{"lineNumber":25,"author":{"gitID":"Ang-YC"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ShowCommand.MESSAGE_USAGE));"},{"lineNumber":26,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"Ang-YC"},"content":"}"}],"authorContributionMap":{"mhq199657":7,"-":1,"Ang-YC":19}},{"path":"src/test/java/seedu/address/logic/parser/RatingDeleteCommandParserTest.java","lines":[{"lineNumber":1,"author":{"gitID":"kexiaowen"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":3,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;"},{"lineNumber":5,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"},{"lineNumber":7,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":8,"author":{"gitID":"kexiaowen"},"content":"import org.junit.Test;"},{"lineNumber":9,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":10,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.logic.commands.RatingDeleteCommand;"},{"lineNumber":11,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":12,"author":{"gitID":"kexiaowen"},"content":"//@@author kexiaowen"},{"lineNumber":13,"author":{"gitID":"kexiaowen"},"content":"/**"},{"lineNumber":14,"author":{"gitID":"kexiaowen"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations"},{"lineNumber":15,"author":{"gitID":"kexiaowen"},"content":" * outside of the RatingDeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the"},{"lineNumber":16,"author":{"gitID":"kexiaowen"},"content":" * same path through the RatingDeleteCommand, and therefore we test only one of them."},{"lineNumber":17,"author":{"gitID":"kexiaowen"},"content":" * The path variation for those two cases occur inside the ParserUtil, and"},{"lineNumber":18,"author":{"gitID":"kexiaowen"},"content":" * therefore should be covered by the ParserUtilTest."},{"lineNumber":19,"author":{"gitID":"kexiaowen"},"content":" */"},{"lineNumber":20,"author":{"gitID":"kexiaowen"},"content":"public class RatingDeleteCommandParserTest {"},{"lineNumber":21,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":22,"author":{"gitID":"kexiaowen"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d"},{"lineNumber":23,"author":{"gitID":"kexiaowen"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, RatingDeleteCommand.MESSAGE_USAGE);"},{"lineNumber":24,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":25,"author":{"gitID":"kexiaowen"},"content":"    private RatingDeleteCommandParser parser \u003d new RatingDeleteCommandParser();"},{"lineNumber":26,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":27,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":28,"author":{"gitID":"kexiaowen"},"content":"    public void parse_validArgs_returnsDeleteRatingCommand() {"},{"lineNumber":29,"author":{"gitID":"kexiaowen"},"content":"        assertParseSuccess(parser, \"1\", new RatingDeleteCommand(INDEX_FIRST_PERSON));"},{"lineNumber":30,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":32,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":33,"author":{"gitID":"kexiaowen"},"content":"    public void parse_invalidArgs_throwsParseException() {"},{"lineNumber":34,"author":{"gitID":"kexiaowen"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);"},{"lineNumber":35,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":36,"author":{"gitID":"kexiaowen"},"content":"        assertParseFailure(parser, \"a\", MESSAGE_INVALID_FORMAT);"},{"lineNumber":37,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"kexiaowen"},"content":"}"}],"authorContributionMap":{"kexiaowen":37,"-":1}},{"path":"src/test/java/seedu/address/logic/parser/InterviewCommandParserTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;"},{"lineNumber":6,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":7,"author":{"gitID":"Ang-YC"},"content":"import java.time.LocalDateTime;"},{"lineNumber":8,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":9,"author":{"gitID":"Ang-YC"},"content":"import org.junit.Test;"},{"lineNumber":10,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":11,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":12,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.logic.commands.InterviewCommand;"},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":14,"author":{"gitID":"Ang-YC"},"content":"//@@author Ang-YC"},{"lineNumber":15,"author":{"gitID":"Ang-YC"},"content":"public class InterviewCommandParserTest {"},{"lineNumber":16,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d"},{"lineNumber":18,"author":{"gitID":"Ang-YC"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, InterviewCommand.MESSAGE_USAGE);"},{"lineNumber":19,"author":{"gitID":"Ang-YC"},"content":"    private static final String VALID_DATE \u003d \"14th Mar 2pm\";"},{"lineNumber":20,"author":{"gitID":"Ang-YC"},"content":"    private static final String INVALID_DATE \u003d \"My Birthday\";"},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":22,"author":{"gitID":"Ang-YC"},"content":"    private InterviewCommandParser parser \u003d new InterviewCommandParser();"},{"lineNumber":23,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":24,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":25,"author":{"gitID":"Ang-YC"},"content":"    public void parse_missingParts_failure() {"},{"lineNumber":26,"author":{"gitID":"Ang-YC"},"content":"        // No index specified"},{"lineNumber":27,"author":{"gitID":"Ang-YC"},"content":"        assertParseFailure(parser, VALID_DATE, MESSAGE_INVALID_FORMAT);"},{"lineNumber":28,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":29,"author":{"gitID":"Ang-YC"},"content":"        // No date specified"},{"lineNumber":30,"author":{"gitID":"Ang-YC"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);"},{"lineNumber":31,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":32,"author":{"gitID":"Ang-YC"},"content":"        // No index and no date specified"},{"lineNumber":33,"author":{"gitID":"Ang-YC"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);"},{"lineNumber":34,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":36,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":37,"author":{"gitID":"Ang-YC"},"content":"    public void parse_invalidValue_throwsParseException() {"},{"lineNumber":38,"author":{"gitID":"Ang-YC"},"content":"        assertParseFailure(parser, \"1 \" + INVALID_DATE,"},{"lineNumber":39,"author":{"gitID":"Ang-YC"},"content":"                String.format(InterviewCommandParser.MESSAGE_DATETIME_PARSE_FAIL, INVALID_DATE));"},{"lineNumber":40,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":41,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":42,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":43,"author":{"gitID":"Ang-YC"},"content":"    public void parse_validValue_returnsInterviewCommand() {"},{"lineNumber":44,"author":{"gitID":"Ang-YC"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2018, 3, 14, 14, 0, 0);"},{"lineNumber":45,"author":{"gitID":"Ang-YC"},"content":"        InterviewCommand expectedInterviewCommand \u003d"},{"lineNumber":46,"author":{"gitID":"Ang-YC"},"content":"                new InterviewCommand(Index.fromOneBased(2), dateTime);"},{"lineNumber":47,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":48,"author":{"gitID":"Ang-YC"},"content":"        assertParseSuccess(parser, \"2 \" + VALID_DATE, expectedInterviewCommand);"},{"lineNumber":49,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":51,"author":{"gitID":"Ang-YC"},"content":"}"}],"authorContributionMap":{"-":5,"Ang-YC":46}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.fail;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"},{"lineNumber":8,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.SortCommand.SORT_FIELD_NAME;"},{"lineNumber":9,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMUNICATION_SKILLS_SCORE;"},{"lineNumber":10,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXPERIENCE_SCORE;"},{"lineNumber":11,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PROBLEM_SOLVING_SKILLS_SCORE;"},{"lineNumber":12,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT_ORDER;"},{"lineNumber":13,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TECHNICAL_SKILLS_SCORE;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"Ang-YC"},"content":"import java.time.LocalDateTime;"},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":"import java.time.ZoneOffset;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.AddCommand;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.ClearCommand;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.EditCommand;"},{"lineNumber":30,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;"},{"lineNumber":31,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.ExitCommand;"},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":"import seedu.address.logic.commands.FilterCommand;"},{"lineNumber":33,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.FindCommand;"},{"lineNumber":34,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.HelpCommand;"},{"lineNumber":35,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.HistoryCommand;"},{"lineNumber":36,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.logic.commands.InterviewCommand;"},{"lineNumber":37,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.ListCommand;"},{"lineNumber":38,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.logic.commands.RateCommand;"},{"lineNumber":39,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.logic.commands.RatingDeleteCommand;"},{"lineNumber":40,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.RedoCommand;"},{"lineNumber":41,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.SelectCommand;"},{"lineNumber":42,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.logic.commands.SortCommand;"},{"lineNumber":43,"author":{"gitID":"mhq199657"},"content":"import seedu.address.logic.commands.StatusCommand;"},{"lineNumber":44,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.UndoCommand;"},{"lineNumber":45,"author":{"gitID":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;"},{"lineNumber":46,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.ExpectedGraduationYearInKeywordsRangePredicate;"},{"lineNumber":47,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":48,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.Rating;"},{"lineNumber":49,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Status;"},{"lineNumber":50,"author":{"gitID":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;"},{"lineNumber":51,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":52,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonUtil;"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"public class AddressBookParserTest {"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":56,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":57,"author":{"gitID":"-"},"content":""},{"lineNumber":58,"author":{"gitID":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();"},{"lineNumber":59,"author":{"gitID":"-"},"content":""},{"lineNumber":60,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":61,"author":{"gitID":"-"},"content":"    public void parseCommand_add() throws Exception {"},{"lineNumber":62,"author":{"gitID":"-"},"content":"        Person person \u003d new PersonBuilder().build();"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        assertEquals(new AddCommand(person), command);"},{"lineNumber":65,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitID":"-"},"content":""},{"lineNumber":67,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":68,"author":{"gitID":"-"},"content":"    public void parseCommand_clear() throws Exception {"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);"},{"lineNumber":70,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);"},{"lineNumber":71,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":72,"author":{"gitID":"-"},"content":""},{"lineNumber":73,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":74,"author":{"gitID":"-"},"content":"    public void parseCommand_delete() throws Exception {"},{"lineNumber":75,"author":{"gitID":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand("},{"lineNumber":76,"author":{"gitID":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);"},{"lineNumber":78,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":79,"author":{"gitID":"-"},"content":""},{"lineNumber":80,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":81,"author":{"gitID":"-"},"content":"    public void parseCommand_edit() throws Exception {"},{"lineNumber":82,"author":{"gitID":"-"},"content":"        Person person \u003d new PersonBuilder().build();"},{"lineNumber":83,"author":{"gitID":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();"},{"lineNumber":84,"author":{"gitID":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \""},{"lineNumber":85,"author":{"gitID":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getPersonDetails(person));"},{"lineNumber":86,"author":{"gitID":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);"},{"lineNumber":87,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":88,"author":{"gitID":"-"},"content":""},{"lineNumber":89,"author":{"gitID":"Ang-YC"},"content":"    //@@author Ang-YC"},{"lineNumber":90,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":91,"author":{"gitID":"Ang-YC"},"content":"    public void parseCommand_interview() throws Exception {"},{"lineNumber":92,"author":{"gitID":"Ang-YC"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.ofEpochSecond(1521036000, 0, ZoneOffset.UTC);"},{"lineNumber":93,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":94,"author":{"gitID":"Ang-YC"},"content":"        InterviewCommand command \u003d (InterviewCommand) parser.parseCommand(InterviewCommand.COMMAND_WORD + \" \""},{"lineNumber":95,"author":{"gitID":"Ang-YC"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" Mar 14 2018 2pm\");"},{"lineNumber":96,"author":{"gitID":"Ang-YC"},"content":"        assertEquals(new InterviewCommand(INDEX_FIRST_PERSON, dateTime), command);"},{"lineNumber":97,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":98,"author":{"gitID":"Ang-YC"},"content":"    //@@author"},{"lineNumber":99,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":100,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":101,"author":{"gitID":"-"},"content":"    public void parseCommand_exit() throws Exception {"},{"lineNumber":102,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);"},{"lineNumber":103,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);"},{"lineNumber":104,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":105,"author":{"gitID":"-"},"content":""},{"lineNumber":106,"author":{"gitID":"tanhengyeow"},"content":"    //@@author tanhengyeow"},{"lineNumber":107,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":108,"author":{"gitID":"tanhengyeow"},"content":"    public void parseCommand_find() throws Exception {"},{"lineNumber":109,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");"},{"lineNumber":110,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(parser.parseCommand("},{"lineNumber":111,"author":{"gitID":"tanhengyeow"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")))"},{"lineNumber":112,"author":{"gitID":"tanhengyeow"},"content":"                instanceof FindCommand);"},{"lineNumber":113,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(parser.parseCommand(FindCommand.COMMAND_WORD + \" n/foo\") instanceof FindCommand);"},{"lineNumber":114,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":115,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":116,"author":{"gitID":"tanhengyeow"},"content":"    //@@author"},{"lineNumber":117,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":118,"author":{"gitID":"mhq199657"},"content":"    public void parseCommand_filter() throws Exception {"},{"lineNumber":119,"author":{"gitID":"-"},"content":"        Person person \u003d new PersonBuilder().build();"},{"lineNumber":120,"author":{"gitID":"mhq199657"},"content":"        FilterCommand command \u003d (FilterCommand) parser.parseCommand("},{"lineNumber":121,"author":{"gitID":"mhq199657"},"content":"                PersonUtil.getFilterCommand(person));"},{"lineNumber":122,"author":{"gitID":"mhq199657"},"content":"        assertEquals(new FilterCommand(new ExpectedGraduationYearInKeywordsRangePredicate("},{"lineNumber":123,"author":{"gitID":"mhq199657"},"content":"                person.getExpectedGraduationYear(), person.getExpectedGraduationYear())), command);"},{"lineNumber":124,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":125,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":126,"author":{"gitID":"kexiaowen"},"content":"    //@@author kexiaowen"},{"lineNumber":127,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":128,"author":{"gitID":"kexiaowen"},"content":"    public void parseCommand_rate() throws Exception {"},{"lineNumber":129,"author":{"gitID":"kexiaowen"},"content":"        final Rating rating \u003d new Rating(4.5, 4,"},{"lineNumber":130,"author":{"gitID":"kexiaowen"},"content":"                3.5, 4);"},{"lineNumber":131,"author":{"gitID":"kexiaowen"},"content":"        RateCommand command \u003d (RateCommand) parser.parseCommand(RateCommand.COMMAND_WORD + \" \""},{"lineNumber":132,"author":{"gitID":"kexiaowen"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \""},{"lineNumber":133,"author":{"gitID":"kexiaowen"},"content":"                + PREFIX_TECHNICAL_SKILLS_SCORE + rating.technicalSkillsScore + \" \""},{"lineNumber":134,"author":{"gitID":"kexiaowen"},"content":"                + PREFIX_COMMUNICATION_SKILLS_SCORE + rating.communicationSkillsScore + \" \""},{"lineNumber":135,"author":{"gitID":"kexiaowen"},"content":"                + PREFIX_PROBLEM_SOLVING_SKILLS_SCORE + rating.problemSolvingSkillsScore + \" \""},{"lineNumber":136,"author":{"gitID":"kexiaowen"},"content":"                + PREFIX_EXPERIENCE_SCORE + rating.experienceScore);"},{"lineNumber":137,"author":{"gitID":"kexiaowen"},"content":"        assertEquals(new RateCommand(INDEX_FIRST_PERSON, rating), command);"},{"lineNumber":138,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":139,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":140,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":141,"author":{"gitID":"kexiaowen"},"content":"    public void parseCommand_deleteRating() throws Exception {"},{"lineNumber":142,"author":{"gitID":"kexiaowen"},"content":"        RatingDeleteCommand command \u003d (RatingDeleteCommand) parser.parseCommand("},{"lineNumber":143,"author":{"gitID":"kexiaowen"},"content":"                RatingDeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());"},{"lineNumber":144,"author":{"gitID":"kexiaowen"},"content":"        assertEquals(new RatingDeleteCommand(INDEX_FIRST_PERSON), command);"},{"lineNumber":145,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":146,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":147,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":148,"author":{"gitID":"kexiaowen"},"content":"    public void parseCommand_sort() throws Exception {"},{"lineNumber":149,"author":{"gitID":"kexiaowen"},"content":"        SortCommand command \u003d"},{"lineNumber":150,"author":{"gitID":"kexiaowen"},"content":"                (SortCommand) parser.parseCommand("},{"lineNumber":151,"author":{"gitID":"kexiaowen"},"content":"                        SortCommand.COMMAND_WORD + \" \" + SORT_FIELD_NAME + \" \" + PREFIX_SORT_ORDER"},{"lineNumber":152,"author":{"gitID":"kexiaowen"},"content":"                                + SortCommand.SORT_ORDER_ASC);"},{"lineNumber":153,"author":{"gitID":"kexiaowen"},"content":"        assertEquals(new SortCommand(SortCommand.SortOrder.ASC, SortCommand.SortField.NAME), command);"},{"lineNumber":154,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":155,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":156,"author":{"gitID":"kexiaowen"},"content":"    //@@author"},{"lineNumber":157,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":158,"author":{"gitID":"mhq199657"},"content":"    public void parseCommand_status() throws Exception {"},{"lineNumber":159,"author":{"gitID":"mhq199657"},"content":"        StatusCommand command \u003d (StatusCommand) parser.parseCommand("},{"lineNumber":160,"author":{"gitID":"mhq199657"},"content":"                StatusCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + \" \" + \"3\");"},{"lineNumber":161,"author":{"gitID":"mhq199657"},"content":"        assertEquals(new StatusCommand(INDEX_FIRST_PERSON, new Status(3)), command);"},{"lineNumber":162,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":163,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":164,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":165,"author":{"gitID":"-"},"content":"    public void parseCommand_help() throws Exception {"},{"lineNumber":166,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);"},{"lineNumber":167,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);"},{"lineNumber":168,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":169,"author":{"gitID":"-"},"content":""},{"lineNumber":170,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":171,"author":{"gitID":"-"},"content":"    public void parseCommand_history() throws Exception {"},{"lineNumber":172,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(HistoryCommand.COMMAND_WORD) instanceof HistoryCommand);"},{"lineNumber":173,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(HistoryCommand.COMMAND_WORD + \" 3\") instanceof HistoryCommand);"},{"lineNumber":174,"author":{"gitID":"-"},"content":""},{"lineNumber":175,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":176,"author":{"gitID":"-"},"content":"            parser.parseCommand(\"histories\");"},{"lineNumber":177,"author":{"gitID":"-"},"content":"            fail(\"The expected ParseException was not thrown.\");"},{"lineNumber":178,"author":{"gitID":"-"},"content":"        } catch (ParseException pe) {"},{"lineNumber":179,"author":{"gitID":"-"},"content":"            assertEquals(MESSAGE_UNKNOWN_COMMAND, pe.getMessage());"},{"lineNumber":180,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":181,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":182,"author":{"gitID":"-"},"content":""},{"lineNumber":183,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":184,"author":{"gitID":"-"},"content":"    public void parseCommand_list() throws Exception {"},{"lineNumber":185,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);"},{"lineNumber":186,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);"},{"lineNumber":187,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":188,"author":{"gitID":"-"},"content":""},{"lineNumber":189,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":190,"author":{"gitID":"-"},"content":"    public void parseCommand_select() throws Exception {"},{"lineNumber":191,"author":{"gitID":"-"},"content":"        SelectCommand command \u003d (SelectCommand) parser.parseCommand("},{"lineNumber":192,"author":{"gitID":"-"},"content":"                SelectCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());"},{"lineNumber":193,"author":{"gitID":"-"},"content":"        assertEquals(new SelectCommand(INDEX_FIRST_PERSON), command);"},{"lineNumber":194,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":195,"author":{"gitID":"-"},"content":""},{"lineNumber":196,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":197,"author":{"gitID":"-"},"content":"    public void parseCommand_redoCommandWord_returnsRedoCommand() throws Exception {"},{"lineNumber":198,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(RedoCommand.COMMAND_WORD) instanceof RedoCommand);"},{"lineNumber":199,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(\"redo 1\") instanceof RedoCommand);"},{"lineNumber":200,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":201,"author":{"gitID":"-"},"content":""},{"lineNumber":202,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":203,"author":{"gitID":"-"},"content":"    public void parseCommand_undoCommandWord_returnsUndoCommand() throws Exception {"},{"lineNumber":204,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(UndoCommand.COMMAND_WORD) instanceof UndoCommand);"},{"lineNumber":205,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(\"undo 3\") instanceof UndoCommand);"},{"lineNumber":206,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":207,"author":{"gitID":"-"},"content":""},{"lineNumber":208,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":209,"author":{"gitID":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() throws Exception {"},{"lineNumber":210,"author":{"gitID":"-"},"content":"        thrown.expect(ParseException.class);"},{"lineNumber":211,"author":{"gitID":"-"},"content":"        thrown.expectMessage(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));"},{"lineNumber":212,"author":{"gitID":"-"},"content":"        parser.parseCommand(\"\");"},{"lineNumber":213,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":214,"author":{"gitID":"-"},"content":""},{"lineNumber":215,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":216,"author":{"gitID":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() throws Exception {"},{"lineNumber":217,"author":{"gitID":"-"},"content":"        thrown.expect(ParseException.class);"},{"lineNumber":218,"author":{"gitID":"-"},"content":"        thrown.expectMessage(MESSAGE_UNKNOWN_COMMAND);"},{"lineNumber":219,"author":{"gitID":"-"},"content":"        parser.parseCommand(\"unknownCommand\");"},{"lineNumber":220,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":221,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"kexiaowen":41,"mhq199657":19,"-":136,"Ang-YC":14,"tanhengyeow":11}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;"},{"lineNumber":8,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EXPECTED_GRADUATION_YEAR_DESC_AMY;"},{"lineNumber":9,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EXPECTED_GRADUATION_YEAR_DESC_BOB;"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GRADE_POINT_AVERAGE_DESC_AMY;"},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GRADE_POINT_AVERAGE_DESC_BOB;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;"},{"lineNumber":14,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EXPECTED_GRADUATION_YEAR_DESC;"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GRADE_POINT_AVERAGE_DESC;"},{"lineNumber":16,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_JOB_APPLIED_DESC;"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MAJOR_DESC;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;"},{"lineNumber":21,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_UNIVERSITY_DESC;"},{"lineNumber":22,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.JOB_APPLIED_DESC_AMY;"},{"lineNumber":23,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.JOB_APPLIED_DESC_BOB;"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MAJOR_DESC_AMY;"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MAJOR_DESC_BOB;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;"},{"lineNumber":30,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;"},{"lineNumber":31,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.UNIVERSITY_DESC_AMY;"},{"lineNumber":32,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.UNIVERSITY_DESC_BOB;"},{"lineNumber":33,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;"},{"lineNumber":34,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;"},{"lineNumber":35,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;"},{"lineNumber":36,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;"},{"lineNumber":37,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXPECTED_GRADUATION_YEAR_AMY;"},{"lineNumber":38,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXPECTED_GRADUATION_YEAR_BOB;"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GRADE_POINT_AVERAGE_AMY;"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GRADE_POINT_AVERAGE_BOB;"},{"lineNumber":41,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JOB_APPLIED_AMY;"},{"lineNumber":42,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JOB_APPLIED_BOB;"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MAJOR_AMY;"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MAJOR_BOB;"},{"lineNumber":45,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;"},{"lineNumber":46,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;"},{"lineNumber":47,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;"},{"lineNumber":48,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;"},{"lineNumber":49,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;"},{"lineNumber":50,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UNIVERSITY_AMY;"},{"lineNumber":51,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UNIVERSITY_BOB;"},{"lineNumber":52,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"},{"lineNumber":53,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;"},{"lineNumber":54,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;"},{"lineNumber":55,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"},{"lineNumber":56,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;"},{"lineNumber":57,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":60,"author":{"gitID":"-"},"content":""},{"lineNumber":61,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":62,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.EditCommand;"},{"lineNumber":63,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;"},{"lineNumber":64,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Address;"},{"lineNumber":65,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Email;"},{"lineNumber":66,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.ExpectedGraduationYear;"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.person.GradePointAverage;"},{"lineNumber":68,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.JobApplied;"},{"lineNumber":69,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.person.Major;"},{"lineNumber":70,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Name;"},{"lineNumber":71,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Phone;"},{"lineNumber":72,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.University;"},{"lineNumber":73,"author":{"gitID":"-"},"content":"import seedu.address.model.tag.Tag;"},{"lineNumber":74,"author":{"gitID":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;"},{"lineNumber":75,"author":{"gitID":"-"},"content":""},{"lineNumber":76,"author":{"gitID":"-"},"content":"public class EditCommandParserTest {"},{"lineNumber":77,"author":{"gitID":"-"},"content":""},{"lineNumber":78,"author":{"gitID":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;"},{"lineNumber":79,"author":{"gitID":"-"},"content":""},{"lineNumber":80,"author":{"gitID":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d"},{"lineNumber":81,"author":{"gitID":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);"},{"lineNumber":82,"author":{"gitID":"-"},"content":""},{"lineNumber":83,"author":{"gitID":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();"},{"lineNumber":84,"author":{"gitID":"-"},"content":""},{"lineNumber":85,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":86,"author":{"gitID":"-"},"content":"    public void parse_missingParts_failure() {"},{"lineNumber":87,"author":{"gitID":"-"},"content":"        // no index specified"},{"lineNumber":88,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);"},{"lineNumber":89,"author":{"gitID":"-"},"content":""},{"lineNumber":90,"author":{"gitID":"-"},"content":"        // no field specified"},{"lineNumber":91,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);"},{"lineNumber":92,"author":{"gitID":"-"},"content":""},{"lineNumber":93,"author":{"gitID":"-"},"content":"        // no index and no field specified"},{"lineNumber":94,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);"},{"lineNumber":95,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":96,"author":{"gitID":"-"},"content":""},{"lineNumber":97,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":98,"author":{"gitID":"-"},"content":"    public void parse_invalidPreamble_failure() {"},{"lineNumber":99,"author":{"gitID":"-"},"content":"        // negative index"},{"lineNumber":100,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);"},{"lineNumber":101,"author":{"gitID":"-"},"content":""},{"lineNumber":102,"author":{"gitID":"-"},"content":"        // zero index"},{"lineNumber":103,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);"},{"lineNumber":104,"author":{"gitID":"-"},"content":""},{"lineNumber":105,"author":{"gitID":"-"},"content":"        // invalid arguments being parsed as preamble"},{"lineNumber":106,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);"},{"lineNumber":107,"author":{"gitID":"-"},"content":""},{"lineNumber":108,"author":{"gitID":"-"},"content":"        // invalid prefix being parsed as preamble"},{"lineNumber":109,"author":{"gitID":"Ang-YC"},"content":"        assertParseFailure(parser, \"1 x/ string\", MESSAGE_INVALID_FORMAT);"},{"lineNumber":110,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":111,"author":{"gitID":"-"},"content":""},{"lineNumber":112,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":113,"author":{"gitID":"-"},"content":"    public void parse_invalidValue_failure() {"},{"lineNumber":114,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_NAME_CONSTRAINTS); // invalid name"},{"lineNumber":115,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_PHONE_CONSTRAINTS); // invalid phone"},{"lineNumber":116,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_EMAIL_CONSTRAINTS); // invalid email"},{"lineNumber":117,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_ADDRESS_CONSTRAINTS); // invalid address"},{"lineNumber":118,"author":{"gitID":"kexiaowen"},"content":"        assertParseFailure(parser, \"1\" + INVALID_UNIVERSITY_DESC,"},{"lineNumber":119,"author":{"gitID":"kexiaowen"},"content":"                University.MESSAGE_UNIVERSITY_CONSTRAINTS); // invalid university"},{"lineNumber":120,"author":{"gitID":"mhq199657"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EXPECTED_GRADUATION_YEAR_DESC,"},{"lineNumber":121,"author":{"gitID":"tanhengyeow"},"content":"                ExpectedGraduationYear.MESSAGE_EXPECTED_GRADUATION_YEAR_CONSTRAINTS); // invalid expected grad year"},{"lineNumber":122,"author":{"gitID":"tanhengyeow"},"content":"        assertParseFailure(parser, \"1\" + INVALID_MAJOR_DESC, Major.MESSAGE_MAJOR_CONSTRAINTS); // invalid major"},{"lineNumber":123,"author":{"gitID":"tanhengyeow"},"content":"        assertParseFailure(parser, \"1\" + INVALID_GRADE_POINT_AVERAGE_DESC,"},{"lineNumber":124,"author":{"gitID":"tanhengyeow"},"content":"                GradePointAverage.MESSAGE_GRADE_POINT_AVERAGE_CONSTRAINTS); // invalid grade point average"},{"lineNumber":125,"author":{"gitID":"kexiaowen"},"content":"        assertParseFailure(parser, \"1\" + INVALID_JOB_APPLIED_DESC, JobApplied.MESSAGE_JOB_APPLIED_CONSTRAINTS);"},{"lineNumber":126,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_TAG_CONSTRAINTS); // invalid tag"},{"lineNumber":127,"author":{"gitID":"-"},"content":"        // invalid phone followed by valid email"},{"lineNumber":128,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_PHONE_CONSTRAINTS);"},{"lineNumber":129,"author":{"gitID":"-"},"content":""},{"lineNumber":130,"author":{"gitID":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone"},{"lineNumber":131,"author":{"gitID":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}"},{"lineNumber":132,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_PHONE_CONSTRAINTS);"},{"lineNumber":133,"author":{"gitID":"-"},"content":""},{"lineNumber":134,"author":{"gitID":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,"},{"lineNumber":135,"author":{"gitID":"-"},"content":"        // parsing it together with a valid tag results in error"},{"lineNumber":136,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_TAG_CONSTRAINTS);"},{"lineNumber":137,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_TAG_CONSTRAINTS);"},{"lineNumber":138,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_TAG_CONSTRAINTS);"},{"lineNumber":139,"author":{"gitID":"-"},"content":""},{"lineNumber":140,"author":{"gitID":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured"},{"lineNumber":141,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,"},{"lineNumber":142,"author":{"gitID":"-"},"content":"                Name.MESSAGE_NAME_CONSTRAINTS);"},{"lineNumber":143,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":144,"author":{"gitID":"-"},"content":""},{"lineNumber":145,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":146,"author":{"gitID":"-"},"content":"    public void parse_allFieldsSpecified_success() {"},{"lineNumber":147,"author":{"gitID":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;"},{"lineNumber":148,"author":{"gitID":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND"},{"lineNumber":149,"author":{"gitID":"mhq199657"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND"},{"lineNumber":150,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_AMY"},{"lineNumber":151,"author":{"gitID":"tanhengyeow"},"content":"                + EXPECTED_GRADUATION_YEAR_DESC_AMY + MAJOR_DESC_AMY"},{"lineNumber":152,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_AMY + JOB_APPLIED_DESC_AMY;"},{"lineNumber":153,"author":{"gitID":"-"},"content":""},{"lineNumber":154,"author":{"gitID":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)"},{"lineNumber":155,"author":{"gitID":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)"},{"lineNumber":156,"author":{"gitID":"kexiaowen"},"content":"                .withUniversity(VALID_UNIVERSITY_AMY)"},{"lineNumber":157,"author":{"gitID":"mhq199657"},"content":"                .withExpectedGraduationYear(VALID_EXPECTED_GRADUATION_YEAR_AMY)"},{"lineNumber":158,"author":{"gitID":"tanhengyeow"},"content":"                .withMajor(VALID_MAJOR_AMY)"},{"lineNumber":159,"author":{"gitID":"tanhengyeow"},"content":"                .withGradePointAverage(VALID_GRADE_POINT_AVERAGE_AMY)"},{"lineNumber":160,"author":{"gitID":"kexiaowen"},"content":"                .withJobApplied(VALID_JOB_APPLIED_AMY)"},{"lineNumber":161,"author":{"gitID":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();"},{"lineNumber":162,"author":{"gitID":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);"},{"lineNumber":163,"author":{"gitID":"-"},"content":""},{"lineNumber":164,"author":{"gitID":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);"},{"lineNumber":165,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":166,"author":{"gitID":"-"},"content":""},{"lineNumber":167,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":168,"author":{"gitID":"-"},"content":"    public void parse_someFieldsSpecified_success() {"},{"lineNumber":169,"author":{"gitID":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;"},{"lineNumber":170,"author":{"gitID":"mhq199657"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY"},{"lineNumber":171,"author":{"gitID":"mhq199657"},"content":"                + EXPECTED_GRADUATION_YEAR_DESC_AMY;"},{"lineNumber":172,"author":{"gitID":"-"},"content":""},{"lineNumber":173,"author":{"gitID":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)"},{"lineNumber":174,"author":{"gitID":"mhq199657"},"content":"                .withEmail(VALID_EMAIL_AMY).withExpectedGraduationYear(VALID_EXPECTED_GRADUATION_YEAR_AMY).build();"},{"lineNumber":175,"author":{"gitID":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);"},{"lineNumber":176,"author":{"gitID":"-"},"content":""},{"lineNumber":177,"author":{"gitID":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);"},{"lineNumber":178,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":179,"author":{"gitID":"-"},"content":""},{"lineNumber":180,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":181,"author":{"gitID":"-"},"content":"    public void parse_oneFieldSpecified_success() {"},{"lineNumber":182,"author":{"gitID":"-"},"content":"        // name"},{"lineNumber":183,"author":{"gitID":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;"},{"lineNumber":184,"author":{"gitID":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;"},{"lineNumber":185,"author":{"gitID":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();"},{"lineNumber":186,"author":{"gitID":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);"},{"lineNumber":187,"author":{"gitID":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);"},{"lineNumber":188,"author":{"gitID":"-"},"content":""},{"lineNumber":189,"author":{"gitID":"-"},"content":"        // phone"},{"lineNumber":190,"author":{"gitID":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;"},{"lineNumber":191,"author":{"gitID":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();"},{"lineNumber":192,"author":{"gitID":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);"},{"lineNumber":193,"author":{"gitID":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);"},{"lineNumber":194,"author":{"gitID":"-"},"content":""},{"lineNumber":195,"author":{"gitID":"-"},"content":"        // email"},{"lineNumber":196,"author":{"gitID":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;"},{"lineNumber":197,"author":{"gitID":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();"},{"lineNumber":198,"author":{"gitID":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);"},{"lineNumber":199,"author":{"gitID":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);"},{"lineNumber":200,"author":{"gitID":"-"},"content":""},{"lineNumber":201,"author":{"gitID":"-"},"content":"        // address"},{"lineNumber":202,"author":{"gitID":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;"},{"lineNumber":203,"author":{"gitID":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();"},{"lineNumber":204,"author":{"gitID":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);"},{"lineNumber":205,"author":{"gitID":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);"},{"lineNumber":206,"author":{"gitID":"-"},"content":""},{"lineNumber":207,"author":{"gitID":"kexiaowen"},"content":"        // university"},{"lineNumber":208,"author":{"gitID":"kexiaowen"},"content":"        userInput \u003d targetIndex.getOneBased() + UNIVERSITY_DESC_AMY;"},{"lineNumber":209,"author":{"gitID":"kexiaowen"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withUniversity(VALID_UNIVERSITY_AMY).build();"},{"lineNumber":210,"author":{"gitID":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);"},{"lineNumber":211,"author":{"gitID":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);"},{"lineNumber":212,"author":{"gitID":"-"},"content":""},{"lineNumber":213,"author":{"gitID":"mhq199657"},"content":"        // expectedGraduationYear"},{"lineNumber":214,"author":{"gitID":"mhq199657"},"content":"        userInput \u003d targetIndex.getOneBased() + EXPECTED_GRADUATION_YEAR_DESC_AMY;"},{"lineNumber":215,"author":{"gitID":"mhq199657"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder()"},{"lineNumber":216,"author":{"gitID":"mhq199657"},"content":"                .withExpectedGraduationYear(VALID_EXPECTED_GRADUATION_YEAR_AMY).build();"},{"lineNumber":217,"author":{"gitID":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);"},{"lineNumber":218,"author":{"gitID":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);"},{"lineNumber":219,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":220,"author":{"gitID":"tanhengyeow"},"content":"        // major"},{"lineNumber":221,"author":{"gitID":"tanhengyeow"},"content":"        userInput \u003d targetIndex.getOneBased() + MAJOR_DESC_AMY;"},{"lineNumber":222,"author":{"gitID":"mhq199657"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder()"},{"lineNumber":223,"author":{"gitID":"tanhengyeow"},"content":"                .withMajor(VALID_MAJOR_AMY).build();"},{"lineNumber":224,"author":{"gitID":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);"},{"lineNumber":225,"author":{"gitID":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);"},{"lineNumber":226,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":227,"author":{"gitID":"tanhengyeow"},"content":"        // gradePointAverage"},{"lineNumber":228,"author":{"gitID":"tanhengyeow"},"content":"        userInput \u003d targetIndex.getOneBased() + GRADE_POINT_AVERAGE_DESC_AMY;"},{"lineNumber":229,"author":{"gitID":"mhq199657"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder()"},{"lineNumber":230,"author":{"gitID":"tanhengyeow"},"content":"                .withGradePointAverage(VALID_GRADE_POINT_AVERAGE_AMY).build();"},{"lineNumber":231,"author":{"gitID":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);"},{"lineNumber":232,"author":{"gitID":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);"},{"lineNumber":233,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":234,"author":{"gitID":"kexiaowen"},"content":"        // jobApplied"},{"lineNumber":235,"author":{"gitID":"kexiaowen"},"content":"        userInput \u003d targetIndex.getOneBased() + JOB_APPLIED_DESC_AMY;"},{"lineNumber":236,"author":{"gitID":"mhq199657"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder()"},{"lineNumber":237,"author":{"gitID":"kexiaowen"},"content":"                .withJobApplied(VALID_JOB_APPLIED_AMY).build();"},{"lineNumber":238,"author":{"gitID":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);"},{"lineNumber":239,"author":{"gitID":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);"},{"lineNumber":240,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":241,"author":{"gitID":"-"},"content":"        // tags"},{"lineNumber":242,"author":{"gitID":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;"},{"lineNumber":243,"author":{"gitID":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();"},{"lineNumber":244,"author":{"gitID":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);"},{"lineNumber":245,"author":{"gitID":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);"},{"lineNumber":246,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":247,"author":{"gitID":"-"},"content":""},{"lineNumber":248,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":249,"author":{"gitID":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {"},{"lineNumber":250,"author":{"gitID":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;"},{"lineNumber":251,"author":{"gitID":"mhq199657"},"content":"        String userInput \u003d targetIndex.getOneBased()  + PHONE_DESC_AMY + ADDRESS_DESC_AMY"},{"lineNumber":252,"author":{"gitID":"tanhengyeow"},"content":"                + EXPECTED_GRADUATION_YEAR_DESC_AMY + MAJOR_DESC_AMY + GRADE_POINT_AVERAGE_DESC_AMY"},{"lineNumber":253,"author":{"gitID":"tanhengyeow"},"content":"                + EMAIL_DESC_AMY + TAG_DESC_FRIEND + PHONE_DESC_AMY"},{"lineNumber":254,"author":{"gitID":"mhq199657"},"content":"                + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND + EXPECTED_GRADUATION_YEAR_DESC_BOB"},{"lineNumber":255,"author":{"gitID":"tanhengyeow"},"content":"                + MAJOR_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB"},{"lineNumber":256,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_AMY + UNIVERSITY_DESC_BOB"},{"lineNumber":257,"author":{"gitID":"tanhengyeow"},"content":"                + EMAIL_DESC_BOB + EXPECTED_GRADUATION_YEAR_DESC_AMY + MAJOR_DESC_AMY"},{"lineNumber":258,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_AMY"},{"lineNumber":259,"author":{"gitID":"kexiaowen"},"content":"                + JOB_APPLIED_DESC_AMY + JOB_APPLIED_DESC_BOB"},{"lineNumber":260,"author":{"gitID":"mhq199657"},"content":"                + TAG_DESC_HUSBAND;"},{"lineNumber":261,"author":{"gitID":"-"},"content":""},{"lineNumber":262,"author":{"gitID":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)"},{"lineNumber":263,"author":{"gitID":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)"},{"lineNumber":264,"author":{"gitID":"kexiaowen"},"content":"                .withUniversity(VALID_UNIVERSITY_BOB)"},{"lineNumber":265,"author":{"gitID":"mhq199657"},"content":"                .withExpectedGraduationYear(VALID_EXPECTED_GRADUATION_YEAR_AMY)"},{"lineNumber":266,"author":{"gitID":"tanhengyeow"},"content":"                .withMajor(VALID_MAJOR_AMY)"},{"lineNumber":267,"author":{"gitID":"tanhengyeow"},"content":"                .withGradePointAverage(VALID_GRADE_POINT_AVERAGE_AMY)"},{"lineNumber":268,"author":{"gitID":"kexiaowen"},"content":"                .withJobApplied(VALID_JOB_APPLIED_BOB)"},{"lineNumber":269,"author":{"gitID":"mhq199657"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)"},{"lineNumber":270,"author":{"gitID":"-"},"content":"                .build();"},{"lineNumber":271,"author":{"gitID":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);"},{"lineNumber":272,"author":{"gitID":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);"},{"lineNumber":273,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":274,"author":{"gitID":"-"},"content":""},{"lineNumber":275,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":276,"author":{"gitID":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {"},{"lineNumber":277,"author":{"gitID":"-"},"content":"        // no other valid values specified"},{"lineNumber":278,"author":{"gitID":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;"},{"lineNumber":279,"author":{"gitID":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;"},{"lineNumber":280,"author":{"gitID":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();"},{"lineNumber":281,"author":{"gitID":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);"},{"lineNumber":282,"author":{"gitID":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);"},{"lineNumber":283,"author":{"gitID":"-"},"content":""},{"lineNumber":284,"author":{"gitID":"-"},"content":"        // other valid values specified"},{"lineNumber":285,"author":{"gitID":"mhq199657"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC"},{"lineNumber":286,"author":{"gitID":"mhq199657"},"content":"                + INVALID_EXPECTED_GRADUATION_YEAR_DESC + ADDRESS_DESC_BOB + PHONE_DESC_BOB"},{"lineNumber":287,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_BOB"},{"lineNumber":288,"author":{"gitID":"tanhengyeow"},"content":"                + EXPECTED_GRADUATION_YEAR_DESC_BOB + MAJOR_DESC_BOB"},{"lineNumber":289,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_BOB + JOB_APPLIED_DESC_BOB;"},{"lineNumber":290,"author":{"gitID":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)"},{"lineNumber":291,"author":{"gitID":"kexiaowen"},"content":"                .withAddress(VALID_ADDRESS_BOB).withUniversity(VALID_UNIVERSITY_BOB)"},{"lineNumber":292,"author":{"gitID":"mhq199657"},"content":"                .withExpectedGraduationYear(VALID_EXPECTED_GRADUATION_YEAR_BOB)"},{"lineNumber":293,"author":{"gitID":"kexiaowen"},"content":"                .withMajor(VALID_MAJOR_BOB).withGradePointAverage(VALID_GRADE_POINT_AVERAGE_BOB)"},{"lineNumber":294,"author":{"gitID":"kexiaowen"},"content":"                .withJobApplied(VALID_JOB_APPLIED_BOB).build();"},{"lineNumber":295,"author":{"gitID":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);"},{"lineNumber":296,"author":{"gitID":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);"},{"lineNumber":297,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":298,"author":{"gitID":"-"},"content":""},{"lineNumber":299,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":300,"author":{"gitID":"-"},"content":"    public void parse_resetTags_success() {"},{"lineNumber":301,"author":{"gitID":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;"},{"lineNumber":302,"author":{"gitID":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;"},{"lineNumber":303,"author":{"gitID":"-"},"content":""},{"lineNumber":304,"author":{"gitID":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();"},{"lineNumber":305,"author":{"gitID":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);"},{"lineNumber":306,"author":{"gitID":"-"},"content":""},{"lineNumber":307,"author":{"gitID":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);"},{"lineNumber":308,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":309,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"kexiaowen":35,"mhq199657":28,"-":210,"tanhengyeow":35,"Ang-YC":1}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import java.util.HashSet;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import java.util.Set;"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;"},{"lineNumber":21,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.logic.commands.SortCommand;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Address;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Email;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Name;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Phone;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import seedu.address.model.tag.Tag;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"import seedu.address.testutil.Assert;"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"public class ParserUtilTest {"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";"},{"lineNumber":31,"author":{"gitID":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";"},{"lineNumber":34,"author":{"gitID":"kexiaowen"},"content":"    private static final String INVALID_SORT_ORDER \u003d \"a\";"},{"lineNumber":35,"author":{"gitID":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";"},{"lineNumber":39,"author":{"gitID":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";"},{"lineNumber":41,"author":{"gitID":"kexiaowen"},"content":"    private static final String VALID_SORT_ORDER \u003d \"asc\";"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";"},{"lineNumber":43,"author":{"gitID":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";"},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";"},{"lineNumber":46,"author":{"gitID":"-"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":48,"author":{"gitID":"-"},"content":"    public final ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":51,"author":{"gitID":"-"},"content":"    public void parseIndex_invalidInput_throwsIllegalValueException() throws Exception {"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        thrown.expect(IllegalValueException.class);"},{"lineNumber":53,"author":{"gitID":"-"},"content":"        ParserUtil.parseIndex(\"10 a\");"},{"lineNumber":54,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":55,"author":{"gitID":"-"},"content":""},{"lineNumber":56,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":57,"author":{"gitID":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsIllegalValueException() throws Exception {"},{"lineNumber":58,"author":{"gitID":"-"},"content":"        thrown.expect(IllegalValueException.class);"},{"lineNumber":59,"author":{"gitID":"-"},"content":"        thrown.expectMessage(MESSAGE_INVALID_INDEX);"},{"lineNumber":60,"author":{"gitID":"-"},"content":"        ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1));"},{"lineNumber":61,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":62,"author":{"gitID":"-"},"content":""},{"lineNumber":63,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":64,"author":{"gitID":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {"},{"lineNumber":65,"author":{"gitID":"-"},"content":"        // No whitespaces"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));"},{"lineNumber":67,"author":{"gitID":"-"},"content":""},{"lineNumber":68,"author":{"gitID":"-"},"content":"        // Leading and trailing whitespaces"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));"},{"lineNumber":70,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitID":"-"},"content":""},{"lineNumber":72,"author":{"gitID":"kexiaowen"},"content":"    //@@author kexiaowen"},{"lineNumber":73,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":74,"author":{"gitID":"kexiaowen"},"content":"    public void parseSortField_invalidInput_throwsIllegalValueException() throws Exception {"},{"lineNumber":75,"author":{"gitID":"kexiaowen"},"content":"        thrown.expect(IllegalValueException.class);"},{"lineNumber":76,"author":{"gitID":"kexiaowen"},"content":"        ParserUtil.parseSortField(\"gpa name\");"},{"lineNumber":77,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":78,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":79,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":80,"author":{"gitID":"kexiaowen"},"content":"    public void parseSortField_validInput_success() throws Exception {"},{"lineNumber":81,"author":{"gitID":"kexiaowen"},"content":"        // No whitespaces"},{"lineNumber":82,"author":{"gitID":"kexiaowen"},"content":"        assertEquals(SortCommand.SortField.GPA, ParserUtil.parseSortField(\"gpa\"));"},{"lineNumber":83,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":84,"author":{"gitID":"kexiaowen"},"content":"        // Leading and trailing whitespaces"},{"lineNumber":85,"author":{"gitID":"kexiaowen"},"content":"        assertEquals(SortCommand.SortField.RATING, ParserUtil.parseSortField(\"   rating   \"));"},{"lineNumber":86,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":87,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":88,"author":{"gitID":"kexiaowen"},"content":"    //@@author"},{"lineNumber":89,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":90,"author":{"gitID":"-"},"content":"    public void parseName_null_throwsNullPointerException() {"},{"lineNumber":91,"author":{"gitID":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));"},{"lineNumber":92,"author":{"gitID":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((Optional\u003cString\u003e) null));"},{"lineNumber":93,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":94,"author":{"gitID":"-"},"content":""},{"lineNumber":95,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":96,"author":{"gitID":"-"},"content":"    public void parseName_invalidValue_throwsIllegalValueException() {"},{"lineNumber":97,"author":{"gitID":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));"},{"lineNumber":98,"author":{"gitID":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, () -\u003e ParserUtil.parseName(Optional.of(INVALID_NAME)));"},{"lineNumber":99,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":100,"author":{"gitID":"-"},"content":""},{"lineNumber":101,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":102,"author":{"gitID":"-"},"content":"    public void parseName_optionalEmpty_returnsOptionalEmpty() throws Exception {"},{"lineNumber":103,"author":{"gitID":"-"},"content":"        assertFalse(ParserUtil.parseName(Optional.empty()).isPresent());"},{"lineNumber":104,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":105,"author":{"gitID":"-"},"content":""},{"lineNumber":106,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":107,"author":{"gitID":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {"},{"lineNumber":108,"author":{"gitID":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);"},{"lineNumber":109,"author":{"gitID":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));"},{"lineNumber":110,"author":{"gitID":"-"},"content":"        assertEquals(Optional.of(expectedName), ParserUtil.parseName(Optional.of(VALID_NAME)));"},{"lineNumber":111,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":112,"author":{"gitID":"-"},"content":""},{"lineNumber":113,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":114,"author":{"gitID":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {"},{"lineNumber":115,"author":{"gitID":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;"},{"lineNumber":116,"author":{"gitID":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);"},{"lineNumber":117,"author":{"gitID":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));"},{"lineNumber":118,"author":{"gitID":"-"},"content":"        assertEquals(Optional.of(expectedName), ParserUtil.parseName(Optional.of(nameWithWhitespace)));"},{"lineNumber":119,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":120,"author":{"gitID":"-"},"content":""},{"lineNumber":121,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":122,"author":{"gitID":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {"},{"lineNumber":123,"author":{"gitID":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));"},{"lineNumber":124,"author":{"gitID":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((Optional\u003cString\u003e) null));"},{"lineNumber":125,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":126,"author":{"gitID":"-"},"content":""},{"lineNumber":127,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":128,"author":{"gitID":"-"},"content":"    public void parsePhone_invalidValue_throwsIllegalValueException() {"},{"lineNumber":129,"author":{"gitID":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));"},{"lineNumber":130,"author":{"gitID":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, () -\u003e ParserUtil.parsePhone(Optional.of(INVALID_PHONE)));"},{"lineNumber":131,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":132,"author":{"gitID":"-"},"content":""},{"lineNumber":133,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":134,"author":{"gitID":"-"},"content":"    public void parsePhone_optionalEmpty_returnsOptionalEmpty() throws Exception {"},{"lineNumber":135,"author":{"gitID":"-"},"content":"        assertFalse(ParserUtil.parsePhone(Optional.empty()).isPresent());"},{"lineNumber":136,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":137,"author":{"gitID":"-"},"content":""},{"lineNumber":138,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":139,"author":{"gitID":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {"},{"lineNumber":140,"author":{"gitID":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);"},{"lineNumber":141,"author":{"gitID":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));"},{"lineNumber":142,"author":{"gitID":"-"},"content":"        assertEquals(Optional.of(expectedPhone), ParserUtil.parsePhone(Optional.of(VALID_PHONE)));"},{"lineNumber":143,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":144,"author":{"gitID":"-"},"content":""},{"lineNumber":145,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":146,"author":{"gitID":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {"},{"lineNumber":147,"author":{"gitID":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;"},{"lineNumber":148,"author":{"gitID":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);"},{"lineNumber":149,"author":{"gitID":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));"},{"lineNumber":150,"author":{"gitID":"-"},"content":"        assertEquals(Optional.of(expectedPhone), ParserUtil.parsePhone(Optional.of(phoneWithWhitespace)));"},{"lineNumber":151,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":152,"author":{"gitID":"-"},"content":""},{"lineNumber":153,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":154,"author":{"gitID":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {"},{"lineNumber":155,"author":{"gitID":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));"},{"lineNumber":156,"author":{"gitID":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((Optional\u003cString\u003e) null));"},{"lineNumber":157,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":158,"author":{"gitID":"-"},"content":""},{"lineNumber":159,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":160,"author":{"gitID":"-"},"content":"    public void parseAddress_invalidValue_throwsIllegalValueException() {"},{"lineNumber":161,"author":{"gitID":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));"},{"lineNumber":162,"author":{"gitID":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, () -\u003e ParserUtil.parseAddress(Optional.of(INVALID_ADDRESS)));"},{"lineNumber":163,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":164,"author":{"gitID":"-"},"content":""},{"lineNumber":165,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":166,"author":{"gitID":"-"},"content":"    public void parseAddress_optionalEmpty_returnsOptionalEmpty() throws Exception {"},{"lineNumber":167,"author":{"gitID":"-"},"content":"        assertFalse(ParserUtil.parseAddress(Optional.empty()).isPresent());"},{"lineNumber":168,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":169,"author":{"gitID":"-"},"content":""},{"lineNumber":170,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":171,"author":{"gitID":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {"},{"lineNumber":172,"author":{"gitID":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);"},{"lineNumber":173,"author":{"gitID":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));"},{"lineNumber":174,"author":{"gitID":"-"},"content":"        assertEquals(Optional.of(expectedAddress), ParserUtil.parseAddress(Optional.of(VALID_ADDRESS)));"},{"lineNumber":175,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":176,"author":{"gitID":"-"},"content":""},{"lineNumber":177,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":178,"author":{"gitID":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {"},{"lineNumber":179,"author":{"gitID":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;"},{"lineNumber":180,"author":{"gitID":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);"},{"lineNumber":181,"author":{"gitID":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));"},{"lineNumber":182,"author":{"gitID":"-"},"content":"        assertEquals(Optional.of(expectedAddress), ParserUtil.parseAddress(Optional.of(addressWithWhitespace)));"},{"lineNumber":183,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":184,"author":{"gitID":"-"},"content":""},{"lineNumber":185,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":186,"author":{"gitID":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {"},{"lineNumber":187,"author":{"gitID":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));"},{"lineNumber":188,"author":{"gitID":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((Optional\u003cString\u003e) null));"},{"lineNumber":189,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":190,"author":{"gitID":"-"},"content":""},{"lineNumber":191,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":192,"author":{"gitID":"-"},"content":"    public void parseEmail_invalidValue_throwsIllegalValueException() {"},{"lineNumber":193,"author":{"gitID":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));"},{"lineNumber":194,"author":{"gitID":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, () -\u003e ParserUtil.parseEmail(Optional.of(INVALID_EMAIL)));"},{"lineNumber":195,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":196,"author":{"gitID":"-"},"content":""},{"lineNumber":197,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":198,"author":{"gitID":"-"},"content":"    public void parseEmail_optionalEmpty_returnsOptionalEmpty() throws Exception {"},{"lineNumber":199,"author":{"gitID":"-"},"content":"        assertFalse(ParserUtil.parseEmail(Optional.empty()).isPresent());"},{"lineNumber":200,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":201,"author":{"gitID":"-"},"content":""},{"lineNumber":202,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":203,"author":{"gitID":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {"},{"lineNumber":204,"author":{"gitID":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);"},{"lineNumber":205,"author":{"gitID":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));"},{"lineNumber":206,"author":{"gitID":"-"},"content":"        assertEquals(Optional.of(expectedEmail), ParserUtil.parseEmail(Optional.of(VALID_EMAIL)));"},{"lineNumber":207,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":208,"author":{"gitID":"-"},"content":""},{"lineNumber":209,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":210,"author":{"gitID":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {"},{"lineNumber":211,"author":{"gitID":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;"},{"lineNumber":212,"author":{"gitID":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);"},{"lineNumber":213,"author":{"gitID":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));"},{"lineNumber":214,"author":{"gitID":"-"},"content":"        assertEquals(Optional.of(expectedEmail), ParserUtil.parseEmail(Optional.of(emailWithWhitespace)));"},{"lineNumber":215,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":216,"author":{"gitID":"-"},"content":""},{"lineNumber":217,"author":{"gitID":"kexiaowen"},"content":"    //@@author kexiaowen"},{"lineNumber":218,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":219,"author":{"gitID":"kexiaowen"},"content":"    public void parseSortOrder_null_throwsNullPointerException() {"},{"lineNumber":220,"author":{"gitID":"kexiaowen"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseSortOrder((String) null));"},{"lineNumber":221,"author":{"gitID":"kexiaowen"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((Optional\u003cString\u003e) null));"},{"lineNumber":222,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":223,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":224,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":225,"author":{"gitID":"kexiaowen"},"content":"    public void parseSortOrder_invalidValue_throwsIllegalValueException() {"},{"lineNumber":226,"author":{"gitID":"kexiaowen"},"content":"        Assert.assertThrows("},{"lineNumber":227,"author":{"gitID":"kexiaowen"},"content":"            IllegalValueException.class, () -\u003e ParserUtil.parseSortOrder(INVALID_SORT_ORDER));"},{"lineNumber":228,"author":{"gitID":"kexiaowen"},"content":"        Assert.assertThrows("},{"lineNumber":229,"author":{"gitID":"kexiaowen"},"content":"            IllegalValueException.class, () -\u003e ParserUtil.parseSortOrder(Optional.of(INVALID_SORT_ORDER)));"},{"lineNumber":230,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":231,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":232,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":233,"author":{"gitID":"kexiaowen"},"content":"    public void parseSortOrder_validValueWithoutWhitespace_returnsSortOrder() throws Exception {"},{"lineNumber":234,"author":{"gitID":"kexiaowen"},"content":"        SortCommand.SortOrder expectedSortOrder \u003d SortCommand.SortOrder.ASC;"},{"lineNumber":235,"author":{"gitID":"kexiaowen"},"content":"        assertEquals(expectedSortOrder, ParserUtil.parseSortOrder(VALID_SORT_ORDER));"},{"lineNumber":236,"author":{"gitID":"kexiaowen"},"content":"        assertEquals(Optional.of(expectedSortOrder), ParserUtil.parseSortOrder(Optional.of(VALID_SORT_ORDER)));"},{"lineNumber":237,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":238,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":239,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":240,"author":{"gitID":"kexiaowen"},"content":"    public void parseSortOrder_validValueWithWhitespace_returnsSortOrder() throws Exception {"},{"lineNumber":241,"author":{"gitID":"kexiaowen"},"content":"        SortCommand.SortOrder expectedSortOrder \u003d SortCommand.SortOrder.ASC;"},{"lineNumber":242,"author":{"gitID":"kexiaowen"},"content":"        String sortOrderWithWhitespace \u003d WHITESPACE + VALID_SORT_ORDER + WHITESPACE;"},{"lineNumber":243,"author":{"gitID":"kexiaowen"},"content":"        assertEquals(expectedSortOrder, ParserUtil.parseSortOrder(sortOrderWithWhitespace));"},{"lineNumber":244,"author":{"gitID":"kexiaowen"},"content":"        assertEquals(Optional.of(expectedSortOrder), ParserUtil.parseSortOrder(Optional.of(sortOrderWithWhitespace)));"},{"lineNumber":245,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":246,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":247,"author":{"gitID":"kexiaowen"},"content":"    //@@author"},{"lineNumber":248,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":249,"author":{"gitID":"-"},"content":"    public void parseTag_null_throwsNullPointerException() throws Exception {"},{"lineNumber":250,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":251,"author":{"gitID":"-"},"content":"        ParserUtil.parseTag(null);"},{"lineNumber":252,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":253,"author":{"gitID":"-"},"content":""},{"lineNumber":254,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":255,"author":{"gitID":"-"},"content":"    public void parseTag_invalidValue_throwsIllegalValueException() throws Exception {"},{"lineNumber":256,"author":{"gitID":"-"},"content":"        thrown.expect(IllegalValueException.class);"},{"lineNumber":257,"author":{"gitID":"-"},"content":"        ParserUtil.parseTag(INVALID_TAG);"},{"lineNumber":258,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":259,"author":{"gitID":"-"},"content":""},{"lineNumber":260,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":261,"author":{"gitID":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {"},{"lineNumber":262,"author":{"gitID":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);"},{"lineNumber":263,"author":{"gitID":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));"},{"lineNumber":264,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":265,"author":{"gitID":"-"},"content":""},{"lineNumber":266,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":267,"author":{"gitID":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {"},{"lineNumber":268,"author":{"gitID":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;"},{"lineNumber":269,"author":{"gitID":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);"},{"lineNumber":270,"author":{"gitID":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));"},{"lineNumber":271,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":272,"author":{"gitID":"-"},"content":""},{"lineNumber":273,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":274,"author":{"gitID":"-"},"content":"    public void parseTags_null_throwsNullPointerException() throws Exception {"},{"lineNumber":275,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":276,"author":{"gitID":"-"},"content":"        ParserUtil.parseTags(null);"},{"lineNumber":277,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":278,"author":{"gitID":"-"},"content":""},{"lineNumber":279,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":280,"author":{"gitID":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsIllegalValueException() throws Exception {"},{"lineNumber":281,"author":{"gitID":"-"},"content":"        thrown.expect(IllegalValueException.class);"},{"lineNumber":282,"author":{"gitID":"-"},"content":"        ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG));"},{"lineNumber":283,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":284,"author":{"gitID":"-"},"content":""},{"lineNumber":285,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":286,"author":{"gitID":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {"},{"lineNumber":287,"author":{"gitID":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());"},{"lineNumber":288,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":289,"author":{"gitID":"-"},"content":""},{"lineNumber":290,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":291,"author":{"gitID":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {"},{"lineNumber":292,"author":{"gitID":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));"},{"lineNumber":293,"author":{"gitID":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));"},{"lineNumber":294,"author":{"gitID":"-"},"content":""},{"lineNumber":295,"author":{"gitID":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);"},{"lineNumber":296,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":297,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"kexiaowen":51,"-":246}},{"path":"src/test/java/seedu/address/logic/parser/StatusCommandParserTest.java","lines":[{"lineNumber":1,"author":{"gitID":"mhq199657"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":3,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;"},{"lineNumber":4,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;"},{"lineNumber":5,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":6,"author":{"gitID":"mhq199657"},"content":"import org.junit.Test;"},{"lineNumber":7,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":8,"author":{"gitID":"mhq199657"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":9,"author":{"gitID":"mhq199657"},"content":"import seedu.address.logic.commands.StatusCommand;"},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Status;"},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":"//@@author mhq199657"},{"lineNumber":12,"author":{"gitID":"mhq199657"},"content":"public class StatusCommandParserTest {"},{"lineNumber":13,"author":{"gitID":"mhq199657"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d"},{"lineNumber":14,"author":{"gitID":"mhq199657"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, StatusCommand.MESSAGE_USAGE);"},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":"    private StatusCommandParser parser \u003d new StatusCommandParser();"},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":17,"author":{"gitID":"mhq199657"},"content":"    public void parse_missingParts_failure() {"},{"lineNumber":18,"author":{"gitID":"mhq199657"},"content":"        // No status index specified"},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);"},{"lineNumber":20,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":21,"author":{"gitID":"mhq199657"},"content":"        // No index and no status index specified"},{"lineNumber":22,"author":{"gitID":"mhq199657"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);"},{"lineNumber":23,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":24,"author":{"gitID":"mhq199657"},"content":"        // Too many arguments specified"},{"lineNumber":25,"author":{"gitID":"mhq199657"},"content":"        assertParseFailure(parser, \"1 2 3\", MESSAGE_INVALID_FORMAT);"},{"lineNumber":26,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":28,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":29,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":30,"author":{"gitID":"mhq199657"},"content":"    public void parse_validValue_returnsStatusCommand() {"},{"lineNumber":31,"author":{"gitID":"mhq199657"},"content":"        StatusCommand expectedInterviewCommand \u003d"},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":"                new StatusCommand(Index.fromOneBased(2), new Status(5));"},{"lineNumber":33,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":34,"author":{"gitID":"mhq199657"},"content":"        assertParseSuccess(parser, \"2 \" + \"5\", expectedInterviewCommand);"},{"lineNumber":35,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":36,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":37,"author":{"gitID":"mhq199657"},"content":"}"}],"authorContributionMap":{"mhq199657":36,"-":1}},{"path":"src/test/java/seedu/address/logic/parser/RatingEditCommandParserTest.java","lines":[{"lineNumber":1,"author":{"gitID":"kexiaowen"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_RATING_DESC;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;"},{"lineNumber":6,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMUNICATION_SKILLS_SCORE;"},{"lineNumber":7,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PROBLEM_SOLVING_SKILLS_SCORE;"},{"lineNumber":8,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TECHNICAL_SKILLS_SCORE;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;"},{"lineNumber":10,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":11,"author":{"gitID":"kexiaowen"},"content":"import org.junit.Test;"},{"lineNumber":12,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":13,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.logic.commands.RatingEditCommand;"},{"lineNumber":14,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.Rating;"},{"lineNumber":15,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":16,"author":{"gitID":"kexiaowen"},"content":"//@@author kexiaowen"},{"lineNumber":17,"author":{"gitID":"kexiaowen"},"content":"public class RatingEditCommandParserTest {"},{"lineNumber":18,"author":{"gitID":"kexiaowen"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d"},{"lineNumber":19,"author":{"gitID":"kexiaowen"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, RatingEditCommand.MESSAGE_USAGE);"},{"lineNumber":20,"author":{"gitID":"kexiaowen"},"content":"    private static final String MESSAGE_MISSING_INDEX \u003d"},{"lineNumber":21,"author":{"gitID":"kexiaowen"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, RatingEditCommand.MESSAGE_MISSING_INDEX);"},{"lineNumber":22,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":23,"author":{"gitID":"kexiaowen"},"content":"    private RatingEditCommandParser parser \u003d new RatingEditCommandParser();"},{"lineNumber":24,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":25,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":26,"author":{"gitID":"kexiaowen"},"content":"    public void parse_missingParts_failure() {"},{"lineNumber":27,"author":{"gitID":"kexiaowen"},"content":"        // no index and no field specified"},{"lineNumber":28,"author":{"gitID":"kexiaowen"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);"},{"lineNumber":29,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":30,"author":{"gitID":"kexiaowen"},"content":"        // no index specified"},{"lineNumber":31,"author":{"gitID":"kexiaowen"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_MISSING_INDEX);"},{"lineNumber":32,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":33,"author":{"gitID":"kexiaowen"},"content":"        // no field specified"},{"lineNumber":34,"author":{"gitID":"kexiaowen"},"content":"        assertParseFailure(parser, \"1\", RatingEditCommand.MESSAGE_NOT_EDITED);"},{"lineNumber":35,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":36,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":37,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":38,"author":{"gitID":"kexiaowen"},"content":"    public void parse_invalidValue_failure() {"},{"lineNumber":39,"author":{"gitID":"kexiaowen"},"content":"        assertParseFailure(parser, \"1\" + INVALID_RATING_DESC, Rating.MESSAGE_RATING_CONSTRAINTS);"},{"lineNumber":40,"author":{"gitID":"kexiaowen"},"content":"        assertParseFailure(parser, \"1\" + \" \" + PREFIX_TECHNICAL_SKILLS_SCORE"},{"lineNumber":41,"author":{"gitID":"kexiaowen"},"content":"                + \" \" + PREFIX_COMMUNICATION_SKILLS_SCORE"},{"lineNumber":42,"author":{"gitID":"kexiaowen"},"content":"                + \" \" + PREFIX_PROBLEM_SOLVING_SKILLS_SCORE, RatingEditCommand.MESSAGE_EMPTY_SCORE);"},{"lineNumber":43,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":45,"author":{"gitID":"kexiaowen"},"content":"}"}],"authorContributionMap":{"kexiaowen":42,"-":3}},{"path":"src/test/java/seedu/address/logic/parser/PredicateUtilTest.java","lines":[{"lineNumber":1,"author":{"gitID":"tanhengyeow"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;"},{"lineNumber":3,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMENT;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;"},{"lineNumber":5,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB_APPLIED;"},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MAJOR;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNIVERSITY;"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"public class PredicateUtilTest {"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"    @Rule"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"    public final ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"    private PredicateUtil testAllPredicate \u003d new PredicateUtil();"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"    public void parseKeywordsArray_validInput_success() {"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":"        String[] globalKeywords \u003d {\"Alex\", \"\\\"example.com\\\"\", \"9012*\", \"*Science\"};"},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        String[] prefixKeywords \u003d {\"n/Alex, Bernice\", \"e/\\\"example.com\\\"\","},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"            \"p/9012*, 8121*\", \"m/*Science, *Engineering\"};"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        try {"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"            testAllPredicate.parseAllPredicates(globalKeywords);"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"            testAllPredicate.parseAllPredicates(prefixKeywords);"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"        } catch (ParseException pe) {"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"            pe.printStackTrace();"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"    public void parseKeywordsArray_emptyWordParameterForGlobalSearch_throwsParseException() {"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        String[] globalKeywords \u003d {};"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        thrown.expect(ArrayIndexOutOfBoundsException.class);"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        try {"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"            testAllPredicate.parseAllPredicates(globalKeywords);"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":"        } catch (ParseException pe) {"},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"            pe.printStackTrace();"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"    public void parseKeywordsArray_emptyWordParameterForPrefixSearch_throwsParseException() {"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":"        String testArgs \u003d \"n/\";"},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"        ArgumentMultimap testArgMultiMap \u003d ArgumentTokenizer.tokenize(testArgs,"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"                PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"                PREFIX_ADDRESS, PREFIX_UNIVERSITY, PREFIX_MAJOR,"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"                PREFIX_JOB_APPLIED, PREFIX_COMMENT);"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"        try {"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"            testAllPredicate.parseSelectedPredicates(testArgMultiMap);"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":"        } catch (ParseException pe) {"},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"            thrown.expect(ParseException.class);"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"    public void parseKeywordsArray_invalidWildcardForPrefixSearch_throwsParseException() {"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"        String testArgs \u003d \"n/\\\"\";"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"        ArgumentMultimap testArgMultiMap \u003d ArgumentTokenizer.tokenize(testArgs,"},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":"                PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,"},{"lineNumber":69,"author":{"gitID":"tanhengyeow"},"content":"                PREFIX_ADDRESS, PREFIX_UNIVERSITY, PREFIX_MAJOR,"},{"lineNumber":70,"author":{"gitID":"tanhengyeow"},"content":"                PREFIX_JOB_APPLIED, PREFIX_COMMENT);"},{"lineNumber":71,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":72,"author":{"gitID":"tanhengyeow"},"content":"        try {"},{"lineNumber":73,"author":{"gitID":"tanhengyeow"},"content":"            testAllPredicate.parseSelectedPredicates(testArgMultiMap);"},{"lineNumber":74,"author":{"gitID":"tanhengyeow"},"content":"        } catch (ParseException pe) {"},{"lineNumber":75,"author":{"gitID":"tanhengyeow"},"content":"            thrown.expect(ParseException.class);"},{"lineNumber":76,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":77,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":78,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":79,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":80,"author":{"gitID":"tanhengyeow"},"content":"    public void parseKeywordsArray_emptySubstringParameterForPrefixSearch_throwsParseException() {"},{"lineNumber":81,"author":{"gitID":"tanhengyeow"},"content":"        String testArgs \u003d \"n/\\\"\\\"\";"},{"lineNumber":82,"author":{"gitID":"tanhengyeow"},"content":"        ArgumentMultimap testArgMultiMap \u003d ArgumentTokenizer.tokenize(testArgs,"},{"lineNumber":83,"author":{"gitID":"tanhengyeow"},"content":"                PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,"},{"lineNumber":84,"author":{"gitID":"tanhengyeow"},"content":"                PREFIX_ADDRESS, PREFIX_UNIVERSITY, PREFIX_MAJOR,"},{"lineNumber":85,"author":{"gitID":"tanhengyeow"},"content":"                PREFIX_JOB_APPLIED, PREFIX_COMMENT);"},{"lineNumber":86,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":87,"author":{"gitID":"tanhengyeow"},"content":"        try {"},{"lineNumber":88,"author":{"gitID":"tanhengyeow"},"content":"            testAllPredicate.parseSelectedPredicates(testArgMultiMap);"},{"lineNumber":89,"author":{"gitID":"tanhengyeow"},"content":"        } catch (ParseException pe) {"},{"lineNumber":90,"author":{"gitID":"tanhengyeow"},"content":"            thrown.expect(ParseException.class);"},{"lineNumber":91,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":92,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":93,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":9,"tanhengyeow":84}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":5,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;"},{"lineNumber":6,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;"},{"lineNumber":7,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMMENT_DESC_AMY;"},{"lineNumber":8,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMMENT_DESC_BOB;"},{"lineNumber":9,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;"},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;"},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EXPECTED_GRADUATION_YEAR_DESC_AMY;"},{"lineNumber":12,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EXPECTED_GRADUATION_YEAR_DESC_BOB;"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GRADE_POINT_AVERAGE_DESC_AMY;"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GRADE_POINT_AVERAGE_DESC_BOB;"},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;"},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;"},{"lineNumber":17,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EXPECTED_GRADUATION_YEAR_DESC;"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GRADE_POINT_AVERAGE_DESC;"},{"lineNumber":19,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_JOB_APPLIED_DESC;"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MAJOR_DESC;"},{"lineNumber":21,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;"},{"lineNumber":22,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;"},{"lineNumber":23,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PROFILE_IMAGE_DESC;"},{"lineNumber":24,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_RESUME_DESC;"},{"lineNumber":25,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;"},{"lineNumber":26,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_UNIVERSITY_DESC;"},{"lineNumber":27,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.JOB_APPLIED_DESC_AMY;"},{"lineNumber":28,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.JOB_APPLIED_DESC_BOB;"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MAJOR_DESC_AMY;"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MAJOR_DESC_BOB;"},{"lineNumber":31,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;"},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;"},{"lineNumber":33,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;"},{"lineNumber":34,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;"},{"lineNumber":35,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;"},{"lineNumber":36,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;"},{"lineNumber":37,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PROFILE_IMAGE_DESC_AMY;"},{"lineNumber":38,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PROFILE_IMAGE_DESC_BOB;"},{"lineNumber":39,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RESUME_DESC_AMY;"},{"lineNumber":40,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RESUME_DESC_BOB;"},{"lineNumber":41,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;"},{"lineNumber":42,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;"},{"lineNumber":43,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.UNIVERSITY_DESC_AMY;"},{"lineNumber":44,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.UNIVERSITY_DESC_BOB;"},{"lineNumber":45,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;"},{"lineNumber":46,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;"},{"lineNumber":47,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMMENT_AMY;"},{"lineNumber":48,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMMENT_BOB;"},{"lineNumber":49,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;"},{"lineNumber":50,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;"},{"lineNumber":51,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXPECTED_GRADUATION_YEAR_AMY;"},{"lineNumber":52,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXPECTED_GRADUATION_YEAR_BOB;"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GRADE_POINT_AVERAGE_AMY;"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GRADE_POINT_AVERAGE_BOB;"},{"lineNumber":55,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JOB_APPLIED_AMY;"},{"lineNumber":56,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JOB_APPLIED_BOB;"},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MAJOR_AMY;"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MAJOR_BOB;"},{"lineNumber":59,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;"},{"lineNumber":60,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;"},{"lineNumber":61,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;"},{"lineNumber":62,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;"},{"lineNumber":63,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PROFILE_IMAGE_AMY;"},{"lineNumber":64,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PROFILE_IMAGE_BOB;"},{"lineNumber":65,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RESUME_AMY;"},{"lineNumber":66,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RESUME_BOB;"},{"lineNumber":67,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;"},{"lineNumber":68,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;"},{"lineNumber":69,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UNIVERSITY_AMY;"},{"lineNumber":70,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UNIVERSITY_BOB;"},{"lineNumber":71,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;"},{"lineNumber":72,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;"},{"lineNumber":73,"author":{"gitID":"-"},"content":""},{"lineNumber":74,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":75,"author":{"gitID":"-"},"content":""},{"lineNumber":76,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.AddCommand;"},{"lineNumber":77,"author":{"gitID":"mhq199657"},"content":"import seedu.address.logic.commands.CommandTestUtil;"},{"lineNumber":78,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Address;"},{"lineNumber":79,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Email;"},{"lineNumber":80,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.ExpectedGraduationYear;"},{"lineNumber":81,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.person.GradePointAverage;"},{"lineNumber":82,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.JobApplied;"},{"lineNumber":83,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.person.Major;"},{"lineNumber":84,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Name;"},{"lineNumber":85,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":86,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Phone;"},{"lineNumber":87,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.model.person.ProfileImage;"},{"lineNumber":88,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Resume;"},{"lineNumber":89,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.University;"},{"lineNumber":90,"author":{"gitID":"-"},"content":"import seedu.address.model.tag.Tag;"},{"lineNumber":91,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":92,"author":{"gitID":"-"},"content":""},{"lineNumber":93,"author":{"gitID":"-"},"content":"public class AddCommandParserTest {"},{"lineNumber":94,"author":{"gitID":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();"},{"lineNumber":95,"author":{"gitID":"-"},"content":""},{"lineNumber":96,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":97,"author":{"gitID":"-"},"content":"    public void parse_allFieldsPresent_success() {"},{"lineNumber":98,"author":{"gitID":"mhq199657"},"content":"        Person expectedPerson \u003d new PersonBuilder().withName(CommandTestUtil.VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)"},{"lineNumber":99,"author":{"gitID":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)"},{"lineNumber":100,"author":{"gitID":"kexiaowen"},"content":"                .withUniversity(VALID_UNIVERSITY_BOB)"},{"lineNumber":101,"author":{"gitID":"tanhengyeow"},"content":"                .withExpectedGraduationYear(VALID_EXPECTED_GRADUATION_YEAR_BOB).withMajor(VALID_MAJOR_BOB)"},{"lineNumber":102,"author":{"gitID":"tanhengyeow"},"content":"                .withGradePointAverage(VALID_GRADE_POINT_AVERAGE_BOB)"},{"lineNumber":103,"author":{"gitID":"Ang-YC"},"content":"                .withJobApplied(VALID_JOB_APPLIED_BOB).withResume(VALID_RESUME_BOB)"},{"lineNumber":104,"author":{"gitID":"Ang-YC"},"content":"                .withProfileImage(VALID_PROFILE_IMAGE_BOB).withComment(VALID_COMMENT_BOB)"},{"lineNumber":105,"author":{"gitID":"mhq199657"},"content":"                .withTags(VALID_TAG_FRIEND).build();"},{"lineNumber":106,"author":{"gitID":"-"},"content":""},{"lineNumber":107,"author":{"gitID":"-"},"content":"        // whitespace only preamble"},{"lineNumber":108,"author":{"gitID":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB"},{"lineNumber":109,"author":{"gitID":"kexiaowen"},"content":"                + ADDRESS_DESC_BOB + UNIVERSITY_DESC_BOB + EXPECTED_GRADUATION_YEAR_DESC_BOB + MAJOR_DESC_BOB"},{"lineNumber":110,"author":{"gitID":"Ang-YC"},"content":"                + GRADE_POINT_AVERAGE_DESC_BOB + JOB_APPLIED_DESC_BOB + RESUME_DESC_BOB"},{"lineNumber":111,"author":{"gitID":"Ang-YC"},"content":"                + PROFILE_IMAGE_DESC_BOB + COMMENT_DESC_BOB + TAG_DESC_FRIEND,"},{"lineNumber":112,"author":{"gitID":"-"},"content":"                new AddCommand(expectedPerson));"},{"lineNumber":113,"author":{"gitID":"-"},"content":""},{"lineNumber":114,"author":{"gitID":"-"},"content":"        // multiple names - last name accepted"},{"lineNumber":115,"author":{"gitID":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB"},{"lineNumber":116,"author":{"gitID":"kexiaowen"},"content":"                + ADDRESS_DESC_BOB + UNIVERSITY_DESC_BOB + EXPECTED_GRADUATION_YEAR_DESC_BOB + MAJOR_DESC_BOB"},{"lineNumber":117,"author":{"gitID":"Ang-YC"},"content":"                + GRADE_POINT_AVERAGE_DESC_BOB + JOB_APPLIED_DESC_BOB + RESUME_DESC_BOB"},{"lineNumber":118,"author":{"gitID":"Ang-YC"},"content":"                + PROFILE_IMAGE_DESC_BOB + COMMENT_DESC_BOB + TAG_DESC_FRIEND,"},{"lineNumber":119,"author":{"gitID":"-"},"content":"                new AddCommand(expectedPerson));"},{"lineNumber":120,"author":{"gitID":"-"},"content":""},{"lineNumber":121,"author":{"gitID":"-"},"content":"        // multiple phones - last phone accepted"},{"lineNumber":122,"author":{"gitID":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB"},{"lineNumber":123,"author":{"gitID":"kexiaowen"},"content":"                + ADDRESS_DESC_BOB + UNIVERSITY_DESC_BOB + EXPECTED_GRADUATION_YEAR_DESC_BOB + MAJOR_DESC_BOB"},{"lineNumber":124,"author":{"gitID":"Ang-YC"},"content":"                + GRADE_POINT_AVERAGE_DESC_BOB + JOB_APPLIED_DESC_BOB + RESUME_DESC_BOB"},{"lineNumber":125,"author":{"gitID":"Ang-YC"},"content":"                + PROFILE_IMAGE_DESC_BOB + COMMENT_DESC_BOB + TAG_DESC_FRIEND,"},{"lineNumber":126,"author":{"gitID":"-"},"content":"                new AddCommand(expectedPerson));"},{"lineNumber":127,"author":{"gitID":"-"},"content":""},{"lineNumber":128,"author":{"gitID":"-"},"content":"        // multiple emails - last email accepted"},{"lineNumber":129,"author":{"gitID":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB"},{"lineNumber":130,"author":{"gitID":"kexiaowen"},"content":"                + ADDRESS_DESC_BOB + UNIVERSITY_DESC_BOB + EXPECTED_GRADUATION_YEAR_DESC_BOB + MAJOR_DESC_BOB"},{"lineNumber":131,"author":{"gitID":"Ang-YC"},"content":"                + GRADE_POINT_AVERAGE_DESC_BOB + JOB_APPLIED_DESC_BOB + RESUME_DESC_BOB"},{"lineNumber":132,"author":{"gitID":"Ang-YC"},"content":"                + PROFILE_IMAGE_DESC_BOB + COMMENT_DESC_BOB + TAG_DESC_FRIEND,"},{"lineNumber":133,"author":{"gitID":"-"},"content":"                new AddCommand(expectedPerson));"},{"lineNumber":134,"author":{"gitID":"-"},"content":""},{"lineNumber":135,"author":{"gitID":"-"},"content":"        // multiple addresses - last address accepted"},{"lineNumber":136,"author":{"gitID":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY"},{"lineNumber":137,"author":{"gitID":"kexiaowen"},"content":"                + ADDRESS_DESC_BOB + UNIVERSITY_DESC_BOB + EXPECTED_GRADUATION_YEAR_DESC_BOB + MAJOR_DESC_BOB"},{"lineNumber":138,"author":{"gitID":"Ang-YC"},"content":"                + GRADE_POINT_AVERAGE_DESC_BOB + JOB_APPLIED_DESC_BOB + RESUME_DESC_BOB"},{"lineNumber":139,"author":{"gitID":"Ang-YC"},"content":"                + PROFILE_IMAGE_DESC_BOB + COMMENT_DESC_BOB + TAG_DESC_FRIEND,"},{"lineNumber":140,"author":{"gitID":"-"},"content":"                new AddCommand(expectedPerson));"},{"lineNumber":141,"author":{"gitID":"-"},"content":""},{"lineNumber":142,"author":{"gitID":"kexiaowen"},"content":"        // multiple universities - last university accepted"},{"lineNumber":143,"author":{"gitID":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB"},{"lineNumber":144,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_AMY + UNIVERSITY_DESC_BOB + EXPECTED_GRADUATION_YEAR_DESC_BOB + MAJOR_DESC_BOB"},{"lineNumber":145,"author":{"gitID":"Ang-YC"},"content":"                + GRADE_POINT_AVERAGE_DESC_BOB + JOB_APPLIED_DESC_BOB + RESUME_DESC_BOB"},{"lineNumber":146,"author":{"gitID":"Ang-YC"},"content":"                + PROFILE_IMAGE_DESC_BOB + COMMENT_DESC_BOB + TAG_DESC_FRIEND,"},{"lineNumber":147,"author":{"gitID":"-"},"content":"                new AddCommand(expectedPerson));"},{"lineNumber":148,"author":{"gitID":"-"},"content":""},{"lineNumber":149,"author":{"gitID":"mhq199657"},"content":"        // multiple expectedGraduationYear - last expectedGraduationYear accepted"},{"lineNumber":150,"author":{"gitID":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB"},{"lineNumber":151,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_BOB + EXPECTED_GRADUATION_YEAR_DESC_AMY + EXPECTED_GRADUATION_YEAR_DESC_BOB"},{"lineNumber":152,"author":{"gitID":"kexiaowen"},"content":"                + MAJOR_DESC_BOB + GRADE_POINT_AVERAGE_DESC_BOB + JOB_APPLIED_DESC_BOB + RESUME_DESC_BOB"},{"lineNumber":153,"author":{"gitID":"Ang-YC"},"content":"                + PROFILE_IMAGE_DESC_BOB + COMMENT_DESC_BOB + TAG_DESC_FRIEND,"},{"lineNumber":154,"author":{"gitID":"-"},"content":"                new AddCommand(expectedPerson));"},{"lineNumber":155,"author":{"gitID":"-"},"content":""},{"lineNumber":156,"author":{"gitID":"tanhengyeow"},"content":"        // multiple major - last major accepted"},{"lineNumber":157,"author":{"gitID":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB"},{"lineNumber":158,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_BOB + EXPECTED_GRADUATION_YEAR_DESC_BOB"},{"lineNumber":159,"author":{"gitID":"tanhengyeow"},"content":"                + MAJOR_DESC_AMY + MAJOR_DESC_BOB + GRADE_POINT_AVERAGE_DESC_BOB"},{"lineNumber":160,"author":{"gitID":"kexiaowen"},"content":"                + JOB_APPLIED_DESC_BOB + RESUME_DESC_BOB"},{"lineNumber":161,"author":{"gitID":"Ang-YC"},"content":"                + PROFILE_IMAGE_DESC_BOB + COMMENT_DESC_BOB + TAG_DESC_FRIEND,"},{"lineNumber":162,"author":{"gitID":"-"},"content":"                new AddCommand(expectedPerson));"},{"lineNumber":163,"author":{"gitID":"-"},"content":""},{"lineNumber":164,"author":{"gitID":"tanhengyeow"},"content":"        // multiple gradePointAverage - last gradePointAverage accepted"},{"lineNumber":165,"author":{"gitID":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB"},{"lineNumber":166,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_BOB + EXPECTED_GRADUATION_YEAR_DESC_BOB"},{"lineNumber":167,"author":{"gitID":"tanhengyeow"},"content":"                + MAJOR_DESC_BOB + GRADE_POINT_AVERAGE_DESC_AMY + GRADE_POINT_AVERAGE_DESC_BOB"},{"lineNumber":168,"author":{"gitID":"kexiaowen"},"content":"                + JOB_APPLIED_DESC_BOB + RESUME_DESC_BOB"},{"lineNumber":169,"author":{"gitID":"Ang-YC"},"content":"                + PROFILE_IMAGE_DESC_BOB + COMMENT_DESC_BOB + TAG_DESC_FRIEND,"},{"lineNumber":170,"author":{"gitID":"-"},"content":"                new AddCommand(expectedPerson));"},{"lineNumber":171,"author":{"gitID":"-"},"content":""},{"lineNumber":172,"author":{"gitID":"kexiaowen"},"content":"        // multiple job applied - last job applied accepted"},{"lineNumber":173,"author":{"gitID":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB"},{"lineNumber":174,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_BOB + EXPECTED_GRADUATION_YEAR_DESC_BOB + MAJOR_DESC_BOB"},{"lineNumber":175,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_BOB + JOB_APPLIED_DESC_AMY + JOB_APPLIED_DESC_BOB + RESUME_DESC_BOB"},{"lineNumber":176,"author":{"gitID":"Ang-YC"},"content":"                + PROFILE_IMAGE_DESC_BOB + COMMENT_DESC_BOB + TAG_DESC_FRIEND,"},{"lineNumber":177,"author":{"gitID":"-"},"content":"                new AddCommand(expectedPerson));"},{"lineNumber":178,"author":{"gitID":"-"},"content":""},{"lineNumber":179,"author":{"gitID":"Ang-YC"},"content":"        // multiple resume - last resume accepted"},{"lineNumber":180,"author":{"gitID":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB"},{"lineNumber":181,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_BOB + EXPECTED_GRADUATION_YEAR_DESC_BOB + MAJOR_DESC_BOB"},{"lineNumber":182,"author":{"gitID":"Ang-YC"},"content":"                + GRADE_POINT_AVERAGE_DESC_BOB + JOB_APPLIED_DESC_BOB + RESUME_DESC_AMY + RESUME_DESC_BOB"},{"lineNumber":183,"author":{"gitID":"Ang-YC"},"content":"                + PROFILE_IMAGE_DESC_BOB + COMMENT_DESC_BOB + TAG_DESC_FRIEND,"},{"lineNumber":184,"author":{"gitID":"-"},"content":"                new AddCommand(expectedPerson));"},{"lineNumber":185,"author":{"gitID":"-"},"content":""},{"lineNumber":186,"author":{"gitID":"Ang-YC"},"content":"        // multiple profile image - last profile image accepted"},{"lineNumber":187,"author":{"gitID":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB"},{"lineNumber":188,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_BOB + EXPECTED_GRADUATION_YEAR_DESC_BOB + MAJOR_DESC_BOB"},{"lineNumber":189,"author":{"gitID":"Ang-YC"},"content":"                + GRADE_POINT_AVERAGE_DESC_BOB + JOB_APPLIED_DESC_BOB + RESUME_DESC_BOB"},{"lineNumber":190,"author":{"gitID":"Ang-YC"},"content":"                + PROFILE_IMAGE_DESC_AMY + PROFILE_IMAGE_DESC_BOB + COMMENT_DESC_BOB + TAG_DESC_FRIEND,"},{"lineNumber":191,"author":{"gitID":"-"},"content":"                new AddCommand(expectedPerson));"},{"lineNumber":192,"author":{"gitID":"-"},"content":""},{"lineNumber":193,"author":{"gitID":"Ang-YC"},"content":"        // multiple comment - last comment accepted"},{"lineNumber":194,"author":{"gitID":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB"},{"lineNumber":195,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_BOB + EXPECTED_GRADUATION_YEAR_DESC_BOB + MAJOR_DESC_BOB"},{"lineNumber":196,"author":{"gitID":"Ang-YC"},"content":"                + GRADE_POINT_AVERAGE_DESC_BOB + JOB_APPLIED_DESC_BOB + RESUME_DESC_BOB"},{"lineNumber":197,"author":{"gitID":"Ang-YC"},"content":"                + PROFILE_IMAGE_DESC_BOB + COMMENT_DESC_AMY + COMMENT_DESC_BOB + TAG_DESC_FRIEND,"},{"lineNumber":198,"author":{"gitID":"-"},"content":"                new AddCommand(expectedPerson));"},{"lineNumber":199,"author":{"gitID":"-"},"content":""},{"lineNumber":200,"author":{"gitID":"-"},"content":"        // multiple tags - all accepted"},{"lineNumber":201,"author":{"gitID":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)"},{"lineNumber":202,"author":{"gitID":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)"},{"lineNumber":203,"author":{"gitID":"kexiaowen"},"content":"                .withUniversity(VALID_UNIVERSITY_BOB)"},{"lineNumber":204,"author":{"gitID":"mhq199657"},"content":"                .withExpectedGraduationYear(VALID_EXPECTED_GRADUATION_YEAR_BOB)"},{"lineNumber":205,"author":{"gitID":"tanhengyeow"},"content":"                .withMajor(VALID_MAJOR_BOB)"},{"lineNumber":206,"author":{"gitID":"tanhengyeow"},"content":"                .withGradePointAverage(VALID_GRADE_POINT_AVERAGE_BOB)"},{"lineNumber":207,"author":{"gitID":"kexiaowen"},"content":"                .withJobApplied(VALID_JOB_APPLIED_BOB)"},{"lineNumber":208,"author":{"gitID":"Ang-YC"},"content":"                .withProfileImage(VALID_PROFILE_IMAGE_BOB)"},{"lineNumber":209,"author":{"gitID":"Ang-YC"},"content":"                .withComment(VALID_COMMENT_BOB)"},{"lineNumber":210,"author":{"gitID":"-"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND).build();"},{"lineNumber":211,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":212,"author":{"gitID":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB"},{"lineNumber":213,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_BOB + EXPECTED_GRADUATION_YEAR_DESC_BOB + MAJOR_DESC_BOB"},{"lineNumber":214,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_BOB + JOB_APPLIED_DESC_BOB + PROFILE_IMAGE_DESC_BOB + COMMENT_DESC_BOB"},{"lineNumber":215,"author":{"gitID":"tanhengyeow"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,"},{"lineNumber":216,"author":{"gitID":"mhq199657"},"content":"                new AddCommand(expectedPersonMultipleTags));"},{"lineNumber":217,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":218,"author":{"gitID":"-"},"content":""},{"lineNumber":219,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":220,"author":{"gitID":"-"},"content":"    public void parse_optionalFieldsMissing_success() {"},{"lineNumber":221,"author":{"gitID":"Ang-YC"},"content":"        // No resume"},{"lineNumber":222,"author":{"gitID":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)"},{"lineNumber":223,"author":{"gitID":"mhq199657"},"content":"                .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)"},{"lineNumber":224,"author":{"gitID":"kexiaowen"},"content":"                .withUniversity(VALID_UNIVERSITY_AMY)"},{"lineNumber":225,"author":{"gitID":"mhq199657"},"content":"                .withExpectedGraduationYear(VALID_EXPECTED_GRADUATION_YEAR_AMY)"},{"lineNumber":226,"author":{"gitID":"tanhengyeow"},"content":"                .withMajor(VALID_MAJOR_AMY)"},{"lineNumber":227,"author":{"gitID":"tanhengyeow"},"content":"                .withGradePointAverage(VALID_GRADE_POINT_AVERAGE_AMY)"},{"lineNumber":228,"author":{"gitID":"kexiaowen"},"content":"                .withJobApplied(VALID_JOB_APPLIED_AMY).withStatus(1)"},{"lineNumber":229,"author":{"gitID":"Ang-YC"},"content":"                .withProfileImage(VALID_PROFILE_IMAGE_AMY)"},{"lineNumber":230,"author":{"gitID":"Ang-YC"},"content":"                .withComment(VALID_COMMENT_AMY)"},{"lineNumber":231,"author":{"gitID":"-"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND).build();"},{"lineNumber":232,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":233,"author":{"gitID":"mhq199657"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY"},{"lineNumber":234,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_AMY + EXPECTED_GRADUATION_YEAR_DESC_AMY + MAJOR_DESC_AMY"},{"lineNumber":235,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_AMY + JOB_APPLIED_DESC_AMY + PROFILE_IMAGE_DESC_AMY"},{"lineNumber":236,"author":{"gitID":"kexiaowen"},"content":"                + COMMENT_DESC_AMY + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,"},{"lineNumber":237,"author":{"gitID":"-"},"content":"                new AddCommand(expectedPerson));"},{"lineNumber":238,"author":{"gitID":"-"},"content":""},{"lineNumber":239,"author":{"gitID":"Ang-YC"},"content":"        // No profile image"},{"lineNumber":240,"author":{"gitID":"mhq199657"},"content":"        expectedPerson \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)"},{"lineNumber":241,"author":{"gitID":"mhq199657"},"content":"                .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)"},{"lineNumber":242,"author":{"gitID":"kexiaowen"},"content":"                .withUniversity(VALID_UNIVERSITY_AMY)"},{"lineNumber":243,"author":{"gitID":"mhq199657"},"content":"                .withExpectedGraduationYear(VALID_EXPECTED_GRADUATION_YEAR_AMY)"},{"lineNumber":244,"author":{"gitID":"tanhengyeow"},"content":"                .withMajor(VALID_MAJOR_AMY)"},{"lineNumber":245,"author":{"gitID":"tanhengyeow"},"content":"                .withGradePointAverage(VALID_GRADE_POINT_AVERAGE_AMY)"},{"lineNumber":246,"author":{"gitID":"kexiaowen"},"content":"                .withJobApplied(VALID_JOB_APPLIED_AMY).withStatus(1)"},{"lineNumber":247,"author":{"gitID":"Ang-YC"},"content":"                .withProfileImage(null).withComment(VALID_COMMENT_AMY)"},{"lineNumber":248,"author":{"gitID":"-"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND).build();"},{"lineNumber":249,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":250,"author":{"gitID":"mhq199657"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY"},{"lineNumber":251,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_AMY + EXPECTED_GRADUATION_YEAR_DESC_AMY + MAJOR_DESC_AMY"},{"lineNumber":252,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_AMY"},{"lineNumber":253,"author":{"gitID":"Ang-YC"},"content":"                + JOB_APPLIED_DESC_AMY + COMMENT_DESC_AMY"},{"lineNumber":254,"author":{"gitID":"tanhengyeow"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,"},{"lineNumber":255,"author":{"gitID":"-"},"content":"                new AddCommand(expectedPerson));"},{"lineNumber":256,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":257,"author":{"gitID":"Ang-YC"},"content":"        // No comment"},{"lineNumber":258,"author":{"gitID":"mhq199657"},"content":"        expectedPerson \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)"},{"lineNumber":259,"author":{"gitID":"mhq199657"},"content":"                .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)"},{"lineNumber":260,"author":{"gitID":"mhq199657"},"content":"                .withExpectedGraduationYear(VALID_EXPECTED_GRADUATION_YEAR_AMY)"},{"lineNumber":261,"author":{"gitID":"tanhengyeow"},"content":"                .withMajor(VALID_MAJOR_AMY)"},{"lineNumber":262,"author":{"gitID":"tanhengyeow"},"content":"                .withGradePointAverage(VALID_GRADE_POINT_AVERAGE_AMY)"},{"lineNumber":263,"author":{"gitID":"kexiaowen"},"content":"                .withJobApplied(VALID_JOB_APPLIED_AMY).withStatus(1)"},{"lineNumber":264,"author":{"gitID":"Ang-YC"},"content":"                .withProfileImage(VALID_PROFILE_IMAGE_AMY).withComment(null)"},{"lineNumber":265,"author":{"gitID":"-"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND).build();"},{"lineNumber":266,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":267,"author":{"gitID":"mhq199657"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY"},{"lineNumber":268,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_AMY + EXPECTED_GRADUATION_YEAR_DESC_AMY + MAJOR_DESC_AMY"},{"lineNumber":269,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_AMY + JOB_APPLIED_DESC_AMY + PROFILE_IMAGE_DESC_AMY"},{"lineNumber":270,"author":{"gitID":"tanhengyeow"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,"},{"lineNumber":271,"author":{"gitID":"-"},"content":"                new AddCommand(expectedPerson));"},{"lineNumber":272,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":273,"author":{"gitID":"Ang-YC"},"content":"        // Zero tags"},{"lineNumber":274,"author":{"gitID":"mhq199657"},"content":"        expectedPerson \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)"},{"lineNumber":275,"author":{"gitID":"mhq199657"},"content":"                .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)"},{"lineNumber":276,"author":{"gitID":"kexiaowen"},"content":"                .withUniversity(VALID_UNIVERSITY_AMY)"},{"lineNumber":277,"author":{"gitID":"mhq199657"},"content":"                .withExpectedGraduationYear(VALID_EXPECTED_GRADUATION_YEAR_AMY)"},{"lineNumber":278,"author":{"gitID":"tanhengyeow"},"content":"                .withMajor(VALID_MAJOR_AMY)"},{"lineNumber":279,"author":{"gitID":"tanhengyeow"},"content":"                .withGradePointAverage(VALID_GRADE_POINT_AVERAGE_AMY)"},{"lineNumber":280,"author":{"gitID":"kexiaowen"},"content":"                .withJobApplied(VALID_JOB_APPLIED_AMY)"},{"lineNumber":281,"author":{"gitID":"tanhengyeow"},"content":"                .withResume(VALID_RESUME_AMY)"},{"lineNumber":282,"author":{"gitID":"Ang-YC"},"content":"                .withProfileImage(VALID_PROFILE_IMAGE_AMY)"},{"lineNumber":283,"author":{"gitID":"Ang-YC"},"content":"                .withComment(VALID_COMMENT_AMY)"},{"lineNumber":284,"author":{"gitID":"mhq199657"},"content":"                .withTags().build();"},{"lineNumber":285,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":286,"author":{"gitID":"mhq199657"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY"},{"lineNumber":287,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_AMY + EXPECTED_GRADUATION_YEAR_DESC_AMY + MAJOR_DESC_AMY"},{"lineNumber":288,"author":{"gitID":"Ang-YC"},"content":"                + GRADE_POINT_AVERAGE_DESC_AMY + JOB_APPLIED_DESC_AMY + RESUME_DESC_AMY"},{"lineNumber":289,"author":{"gitID":"Ang-YC"},"content":"                + PROFILE_IMAGE_DESC_AMY + COMMENT_DESC_AMY,"},{"lineNumber":290,"author":{"gitID":"-"},"content":"                new AddCommand(expectedPerson));"},{"lineNumber":291,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":292,"author":{"gitID":"-"},"content":""},{"lineNumber":293,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":294,"author":{"gitID":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {"},{"lineNumber":295,"author":{"gitID":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);"},{"lineNumber":296,"author":{"gitID":"-"},"content":""},{"lineNumber":297,"author":{"gitID":"-"},"content":"        // missing name prefix"},{"lineNumber":298,"author":{"gitID":"mhq199657"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB"},{"lineNumber":299,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_BOB + EXPECTED_GRADUATION_YEAR_DESC_BOB + MAJOR_DESC_BOB"},{"lineNumber":300,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_BOB + JOB_APPLIED_DESC_BOB,"},{"lineNumber":301,"author":{"gitID":"-"},"content":"                expectedMessage);"},{"lineNumber":302,"author":{"gitID":"-"},"content":""},{"lineNumber":303,"author":{"gitID":"-"},"content":"        // missing phone prefix"},{"lineNumber":304,"author":{"gitID":"mhq199657"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB"},{"lineNumber":305,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_BOB + EXPECTED_GRADUATION_YEAR_DESC_BOB + MAJOR_DESC_BOB"},{"lineNumber":306,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_BOB + JOB_APPLIED_DESC_BOB,"},{"lineNumber":307,"author":{"gitID":"-"},"content":"                expectedMessage);"},{"lineNumber":308,"author":{"gitID":"-"},"content":""},{"lineNumber":309,"author":{"gitID":"-"},"content":"        // missing email prefix"},{"lineNumber":310,"author":{"gitID":"mhq199657"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB"},{"lineNumber":311,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_BOB + EXPECTED_GRADUATION_YEAR_DESC_BOB + MAJOR_DESC_BOB"},{"lineNumber":312,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_BOB + JOB_APPLIED_DESC_BOB,"},{"lineNumber":313,"author":{"gitID":"-"},"content":"                expectedMessage);"},{"lineNumber":314,"author":{"gitID":"-"},"content":""},{"lineNumber":315,"author":{"gitID":"-"},"content":"        // missing address prefix"},{"lineNumber":316,"author":{"gitID":"mhq199657"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB"},{"lineNumber":317,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_BOB + EXPECTED_GRADUATION_YEAR_DESC_BOB + MAJOR_DESC_BOB"},{"lineNumber":318,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_BOB + JOB_APPLIED_DESC_BOB,"},{"lineNumber":319,"author":{"gitID":"kexiaowen"},"content":"                expectedMessage);"},{"lineNumber":320,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":321,"author":{"gitID":"kexiaowen"},"content":"        // missing university prefix"},{"lineNumber":322,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB"},{"lineNumber":323,"author":{"gitID":"kexiaowen"},"content":"                + VALID_UNIVERSITY_BOB + EXPECTED_GRADUATION_YEAR_DESC_BOB + MAJOR_DESC_BOB"},{"lineNumber":324,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_BOB + JOB_APPLIED_DESC_BOB,"},{"lineNumber":325,"author":{"gitID":"mhq199657"},"content":"                expectedMessage);"},{"lineNumber":326,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":327,"author":{"gitID":"mhq199657"},"content":"        //missing expectedGraduationYear prefix"},{"lineNumber":328,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB"},{"lineNumber":329,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_BOB + VALID_EXPECTED_GRADUATION_YEAR_BOB + MAJOR_DESC_BOB"},{"lineNumber":330,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_BOB + JOB_APPLIED_DESC_BOB,"},{"lineNumber":331,"author":{"gitID":"tanhengyeow"},"content":"                expectedMessage);"},{"lineNumber":332,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":333,"author":{"gitID":"tanhengyeow"},"content":"        //missing major prefix"},{"lineNumber":334,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB"},{"lineNumber":335,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_BOB + EXPECTED_GRADUATION_YEAR_DESC_BOB + VALID_MAJOR_BOB"},{"lineNumber":336,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_BOB + JOB_APPLIED_DESC_BOB,"},{"lineNumber":337,"author":{"gitID":"tanhengyeow"},"content":"                expectedMessage);"},{"lineNumber":338,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":339,"author":{"gitID":"tanhengyeow"},"content":"        //missing gradePointAverage prefix"},{"lineNumber":340,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB"},{"lineNumber":341,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_BOB + EXPECTED_GRADUATION_YEAR_DESC_BOB + MAJOR_DESC_BOB"},{"lineNumber":342,"author":{"gitID":"kexiaowen"},"content":"                + VALID_GRADE_POINT_AVERAGE_BOB + JOB_APPLIED_DESC_BOB,"},{"lineNumber":343,"author":{"gitID":"kexiaowen"},"content":"                expectedMessage);"},{"lineNumber":344,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":345,"author":{"gitID":"kexiaowen"},"content":"        //missing job applied prefix"},{"lineNumber":346,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB"},{"lineNumber":347,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_BOB + EXPECTED_GRADUATION_YEAR_DESC_BOB + MAJOR_DESC_BOB"},{"lineNumber":348,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_BOB"},{"lineNumber":349,"author":{"gitID":"kexiaowen"},"content":"                + VALID_JOB_APPLIED_BOB,"},{"lineNumber":350,"author":{"gitID":"-"},"content":"                expectedMessage);"},{"lineNumber":351,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":352,"author":{"gitID":"-"},"content":"        // all prefixes missing"},{"lineNumber":353,"author":{"gitID":"mhq199657"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB"},{"lineNumber":354,"author":{"gitID":"kexiaowen"},"content":"                + VALID_UNIVERSITY_BOB + VALID_EXPECTED_GRADUATION_YEAR_BOB + VALID_MAJOR_BOB"},{"lineNumber":355,"author":{"gitID":"kexiaowen"},"content":"                + VALID_GRADE_POINT_AVERAGE_BOB + VALID_JOB_APPLIED_BOB + VALID_RESUME_AMY,"},{"lineNumber":356,"author":{"gitID":"-"},"content":"                expectedMessage);"},{"lineNumber":357,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":358,"author":{"gitID":"-"},"content":""},{"lineNumber":359,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":360,"author":{"gitID":"-"},"content":"    public void parse_invalidValue_failure() {"},{"lineNumber":361,"author":{"gitID":"-"},"content":"        // invalid name"},{"lineNumber":362,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB"},{"lineNumber":363,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_BOB + EXPECTED_GRADUATION_YEAR_DESC_BOB + MAJOR_DESC_BOB"},{"lineNumber":364,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_BOB"},{"lineNumber":365,"author":{"gitID":"kexiaowen"},"content":"                + JOB_APPLIED_DESC_BOB"},{"lineNumber":366,"author":{"gitID":"tanhengyeow"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,"},{"lineNumber":367,"author":{"gitID":"mhq199657"},"content":"                Name.MESSAGE_NAME_CONSTRAINTS);"},{"lineNumber":368,"author":{"gitID":"-"},"content":""},{"lineNumber":369,"author":{"gitID":"-"},"content":"        // invalid phone"},{"lineNumber":370,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB"},{"lineNumber":371,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_BOB + EXPECTED_GRADUATION_YEAR_DESC_BOB + MAJOR_DESC_BOB"},{"lineNumber":372,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_BOB"},{"lineNumber":373,"author":{"gitID":"kexiaowen"},"content":"                + JOB_APPLIED_DESC_BOB"},{"lineNumber":374,"author":{"gitID":"tanhengyeow"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,"},{"lineNumber":375,"author":{"gitID":"mhq199657"},"content":"                Phone.MESSAGE_PHONE_CONSTRAINTS);"},{"lineNumber":376,"author":{"gitID":"-"},"content":""},{"lineNumber":377,"author":{"gitID":"-"},"content":"        // invalid email"},{"lineNumber":378,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB"},{"lineNumber":379,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_BOB + EXPECTED_GRADUATION_YEAR_DESC_BOB + MAJOR_DESC_BOB"},{"lineNumber":380,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_BOB"},{"lineNumber":381,"author":{"gitID":"kexiaowen"},"content":"                + JOB_APPLIED_DESC_BOB"},{"lineNumber":382,"author":{"gitID":"tanhengyeow"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,"},{"lineNumber":383,"author":{"gitID":"mhq199657"},"content":"                Email.MESSAGE_EMAIL_CONSTRAINTS);"},{"lineNumber":384,"author":{"gitID":"-"},"content":""},{"lineNumber":385,"author":{"gitID":"-"},"content":"        // invalid address"},{"lineNumber":386,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC"},{"lineNumber":387,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_BOB + EXPECTED_GRADUATION_YEAR_DESC_BOB + MAJOR_DESC_BOB"},{"lineNumber":388,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_BOB"},{"lineNumber":389,"author":{"gitID":"kexiaowen"},"content":"                + JOB_APPLIED_DESC_BOB"},{"lineNumber":390,"author":{"gitID":"tanhengyeow"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,"},{"lineNumber":391,"author":{"gitID":"mhq199657"},"content":"                Address.MESSAGE_ADDRESS_CONSTRAINTS);"},{"lineNumber":392,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":393,"author":{"gitID":"kexiaowen"},"content":"        // invalid university"},{"lineNumber":394,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB"},{"lineNumber":395,"author":{"gitID":"kexiaowen"},"content":"                + INVALID_UNIVERSITY_DESC + EXPECTED_GRADUATION_YEAR_DESC_BOB + MAJOR_DESC_BOB"},{"lineNumber":396,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_BOB"},{"lineNumber":397,"author":{"gitID":"kexiaowen"},"content":"                + JOB_APPLIED_DESC_BOB"},{"lineNumber":398,"author":{"gitID":"tanhengyeow"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,"},{"lineNumber":399,"author":{"gitID":"kexiaowen"},"content":"                University.MESSAGE_UNIVERSITY_CONSTRAINTS);"},{"lineNumber":400,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":401,"author":{"gitID":"mhq199657"},"content":"        //invalid expectedGraduationYear"},{"lineNumber":402,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB"},{"lineNumber":403,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_BOB + INVALID_EXPECTED_GRADUATION_YEAR_DESC + MAJOR_DESC_BOB"},{"lineNumber":404,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_BOB"},{"lineNumber":405,"author":{"gitID":"kexiaowen"},"content":"                + JOB_APPLIED_DESC_BOB"},{"lineNumber":406,"author":{"gitID":"tanhengyeow"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,"},{"lineNumber":407,"author":{"gitID":"mhq199657"},"content":"                ExpectedGraduationYear.MESSAGE_EXPECTED_GRADUATION_YEAR_CONSTRAINTS);"},{"lineNumber":408,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":409,"author":{"gitID":"tanhengyeow"},"content":"        //invalid major"},{"lineNumber":410,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB"},{"lineNumber":411,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_BOB + EXPECTED_GRADUATION_YEAR_DESC_BOB + INVALID_MAJOR_DESC"},{"lineNumber":412,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_BOB"},{"lineNumber":413,"author":{"gitID":"kexiaowen"},"content":"                + JOB_APPLIED_DESC_BOB"},{"lineNumber":414,"author":{"gitID":"tanhengyeow"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,"},{"lineNumber":415,"author":{"gitID":"tanhengyeow"},"content":"                Major.MESSAGE_MAJOR_CONSTRAINTS);"},{"lineNumber":416,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":417,"author":{"gitID":"tanhengyeow"},"content":"        //invalid gradePointAverage"},{"lineNumber":418,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB"},{"lineNumber":419,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_BOB + EXPECTED_GRADUATION_YEAR_DESC_BOB + MAJOR_DESC_BOB"},{"lineNumber":420,"author":{"gitID":"kexiaowen"},"content":"                + INVALID_GRADE_POINT_AVERAGE_DESC"},{"lineNumber":421,"author":{"gitID":"kexiaowen"},"content":"                + JOB_APPLIED_DESC_BOB"},{"lineNumber":422,"author":{"gitID":"tanhengyeow"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,"},{"lineNumber":423,"author":{"gitID":"tanhengyeow"},"content":"                GradePointAverage.MESSAGE_GRADE_POINT_AVERAGE_CONSTRAINTS);"},{"lineNumber":424,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":425,"author":{"gitID":"kexiaowen"},"content":"        //invalid job applied"},{"lineNumber":426,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB"},{"lineNumber":427,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_BOB + EXPECTED_GRADUATION_YEAR_DESC_BOB + MAJOR_DESC_BOB"},{"lineNumber":428,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_BOB"},{"lineNumber":429,"author":{"gitID":"kexiaowen"},"content":"                + INVALID_JOB_APPLIED_DESC"},{"lineNumber":430,"author":{"gitID":"tanhengyeow"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,"},{"lineNumber":431,"author":{"gitID":"kexiaowen"},"content":"                JobApplied.MESSAGE_JOB_APPLIED_CONSTRAINTS);"},{"lineNumber":432,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":433,"author":{"gitID":"mhq199657"},"content":"        // invalid resume"},{"lineNumber":434,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB"},{"lineNumber":435,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_BOB + EXPECTED_GRADUATION_YEAR_DESC_BOB + MAJOR_DESC_BOB"},{"lineNumber":436,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_BOB"},{"lineNumber":437,"author":{"gitID":"kexiaowen"},"content":"                + JOB_APPLIED_DESC_BOB"},{"lineNumber":438,"author":{"gitID":"tanhengyeow"},"content":"                + INVALID_RESUME_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,"},{"lineNumber":439,"author":{"gitID":"mhq199657"},"content":"                Resume.MESSAGE_RESUME_CONSTRAINTS);"},{"lineNumber":440,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":441,"author":{"gitID":"Ang-YC"},"content":"        // invalid profile image"},{"lineNumber":442,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB"},{"lineNumber":443,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_BOB + EXPECTED_GRADUATION_YEAR_DESC_BOB + MAJOR_DESC_BOB"},{"lineNumber":444,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_BOB"},{"lineNumber":445,"author":{"gitID":"Ang-YC"},"content":"                + JOB_APPLIED_DESC_BOB + INVALID_PROFILE_IMAGE_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,"},{"lineNumber":446,"author":{"gitID":"Ang-YC"},"content":"                ProfileImage.MESSAGE_IMAGE_CONSTRAINTS);"},{"lineNumber":447,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":448,"author":{"gitID":"-"},"content":"        // invalid tag"},{"lineNumber":449,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB"},{"lineNumber":450,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_BOB + EXPECTED_GRADUATION_YEAR_DESC_BOB + MAJOR_DESC_BOB"},{"lineNumber":451,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_BOB"},{"lineNumber":452,"author":{"gitID":"kexiaowen"},"content":"                + JOB_APPLIED_DESC_BOB"},{"lineNumber":453,"author":{"gitID":"kexiaowen"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND,"},{"lineNumber":454,"author":{"gitID":"mhq199657"},"content":"                Tag.MESSAGE_TAG_CONSTRAINTS);"},{"lineNumber":455,"author":{"gitID":"-"},"content":""},{"lineNumber":456,"author":{"gitID":"-"},"content":"        // two invalid values, only first invalid value reported"},{"lineNumber":457,"author":{"gitID":"mhq199657"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC"},{"lineNumber":458,"author":{"gitID":"kexiaowen"},"content":"                + UNIVERSITY_DESC_BOB + EXPECTED_GRADUATION_YEAR_DESC_BOB + MAJOR_DESC_BOB"},{"lineNumber":459,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_BOB"},{"lineNumber":460,"author":{"gitID":"kexiaowen"},"content":"                + JOB_APPLIED_DESC_BOB,"},{"lineNumber":461,"author":{"gitID":"mhq199657"},"content":"                Name.MESSAGE_NAME_CONSTRAINTS);"},{"lineNumber":462,"author":{"gitID":"-"},"content":""},{"lineNumber":463,"author":{"gitID":"-"},"content":"        // non-empty preamble"},{"lineNumber":464,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB"},{"lineNumber":465,"author":{"gitID":"kexiaowen"},"content":"                + ADDRESS_DESC_BOB + UNIVERSITY_DESC_BOB + EXPECTED_GRADUATION_YEAR_DESC_BOB + MAJOR_DESC_BOB"},{"lineNumber":466,"author":{"gitID":"kexiaowen"},"content":"                + GRADE_POINT_AVERAGE_DESC_BOB"},{"lineNumber":467,"author":{"gitID":"kexiaowen"},"content":"                + JOB_APPLIED_DESC_BOB"},{"lineNumber":468,"author":{"gitID":"tanhengyeow"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,"},{"lineNumber":469,"author":{"gitID":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"},{"lineNumber":470,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":471,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"kexiaowen":126,"mhq199657":74,"-":152,"Ang-YC":63,"tanhengyeow":56}},{"path":"src/test/java/seedu/address/logic/parser/RateCommandParserTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_RATING_DESC;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;"},{"lineNumber":6,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMUNICATION_SKILLS_SCORE;"},{"lineNumber":7,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXPERIENCE_SCORE;"},{"lineNumber":8,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PROBLEM_SOLVING_SKILLS_SCORE;"},{"lineNumber":9,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TECHNICAL_SKILLS_SCORE;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;"},{"lineNumber":11,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":12,"author":{"gitID":"kexiaowen"},"content":"import org.junit.Test;"},{"lineNumber":13,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":14,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.logic.commands.RateCommand;"},{"lineNumber":15,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.logic.commands.RatingEditCommand;"},{"lineNumber":16,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.Rating;"},{"lineNumber":17,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":18,"author":{"gitID":"kexiaowen"},"content":"//@@author kexiaowen"},{"lineNumber":19,"author":{"gitID":"kexiaowen"},"content":"public class RateCommandParserTest {"},{"lineNumber":20,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":21,"author":{"gitID":"kexiaowen"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d"},{"lineNumber":22,"author":{"gitID":"kexiaowen"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, RateCommand.MESSAGE_USAGE);"},{"lineNumber":23,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":24,"author":{"gitID":"kexiaowen"},"content":"    private RateCommandParser parser \u003d new RateCommandParser();"},{"lineNumber":25,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":26,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":27,"author":{"gitID":"kexiaowen"},"content":"    public void parse_missingParts_failure() {"},{"lineNumber":28,"author":{"gitID":"kexiaowen"},"content":"        // no index specified"},{"lineNumber":29,"author":{"gitID":"kexiaowen"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);"},{"lineNumber":30,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":31,"author":{"gitID":"kexiaowen"},"content":"        // no field specified"},{"lineNumber":32,"author":{"gitID":"kexiaowen"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);"},{"lineNumber":33,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":34,"author":{"gitID":"kexiaowen"},"content":"        // no index and no field specified"},{"lineNumber":35,"author":{"gitID":"kexiaowen"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);"},{"lineNumber":36,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":37,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":38,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":39,"author":{"gitID":"kexiaowen"},"content":"    public void parse_invalidValue_failure() {"},{"lineNumber":40,"author":{"gitID":"kexiaowen"},"content":"        assertParseFailure(parser, \"1\" + INVALID_RATING_DESC, Rating.MESSAGE_RATING_CONSTRAINTS);"},{"lineNumber":41,"author":{"gitID":"kexiaowen"},"content":"        assertParseFailure(parser, \"1\" + \" \" + PREFIX_TECHNICAL_SKILLS_SCORE"},{"lineNumber":42,"author":{"gitID":"kexiaowen"},"content":"                + \" \" + PREFIX_COMMUNICATION_SKILLS_SCORE"},{"lineNumber":43,"author":{"gitID":"kexiaowen"},"content":"                + \" \" + PREFIX_PROBLEM_SOLVING_SKILLS_SCORE"},{"lineNumber":44,"author":{"gitID":"kexiaowen"},"content":"                + \" \" + PREFIX_EXPERIENCE_SCORE, RatingEditCommand.MESSAGE_EMPTY_SCORE);"},{"lineNumber":45,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":47,"author":{"gitID":"kexiaowen"},"content":"}"}],"authorContributionMap":{"kexiaowen":42,"-":5}},{"path":"src/test/java/seedu/address/logic/parser/FindUtilTest.java","lines":[{"lineNumber":1,"author":{"gitID":"tanhengyeow"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;"},{"lineNumber":4,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMENT;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;"},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB_APPLIED;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MAJOR;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNIVERSITY;"},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"public class FindUtilTest {"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"    @Rule"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"    public final ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"    private FindUtil testFindUtil \u003d new FindUtil();"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"    public void parseFindArgs_validInput_success() {"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        String testGlobalArgs \u003d \"test\";"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        String testPrefixArgs \u003d \"m/\";"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        ArgumentMultimap testGlobalArgMultiMap \u003d"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"                ArgumentTokenizer.tokenize(testGlobalArgs, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                        PREFIX_ADDRESS, PREFIX_UNIVERSITY, PREFIX_MAJOR,"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"                        PREFIX_JOB_APPLIED, PREFIX_COMMENT); // more fields to be added if necessary"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        ArgumentMultimap testPrefixArgMultiMap \u003d"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"                ArgumentTokenizer.tokenize(testPrefixArgs, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":"                        PREFIX_ADDRESS, PREFIX_UNIVERSITY, PREFIX_MAJOR,"},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"                        PREFIX_JOB_APPLIED, PREFIX_COMMENT); // more fields to be added if necessary"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":"        try {"},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"            testFindUtil.parseFindArgs(testGlobalArgs, testGlobalArgMultiMap);"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"            testFindUtil.parseFindArgs(testPrefixArgs, testPrefixArgMultiMap);"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"        } catch (ParseException pe) {"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":"            pe.printStackTrace();"},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":9,"tanhengyeow":38}},{"path":"src/test/java/seedu/address/logic/commands/RateCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"kexiaowen"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":3,"author":{"gitID":"kexiaowen"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"kexiaowen"},"content":"import static org.junit.Assert.assertNotEquals;"},{"lineNumber":5,"author":{"gitID":"kexiaowen"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;"},{"lineNumber":7,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"},{"lineNumber":8,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.prepareRedoCommand;"},{"lineNumber":9,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.prepareUndoCommand;"},{"lineNumber":10,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"},{"lineNumber":12,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;"},{"lineNumber":13,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;"},{"lineNumber":14,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;"},{"lineNumber":15,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":16,"author":{"gitID":"kexiaowen"},"content":"import org.junit.Test;"},{"lineNumber":17,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":18,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.commons.core.Messages;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.logic.CommandHistory;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.address.logic.UndoRedoStack;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.address.model.AddressBook;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":24,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":25,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":26,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":27,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.Rating;"},{"lineNumber":28,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":29,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":30,"author":{"gitID":"kexiaowen"},"content":"//@@author kexiaowen"},{"lineNumber":31,"author":{"gitID":"kexiaowen"},"content":"/**"},{"lineNumber":32,"author":{"gitID":"kexiaowen"},"content":"  * Contains integration tests (interaction with the Model) and unit tests for RateCommand."},{"lineNumber":33,"author":{"gitID":"kexiaowen"},"content":"  */"},{"lineNumber":34,"author":{"gitID":"kexiaowen"},"content":"public class RateCommandTest {"},{"lineNumber":35,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":36,"author":{"gitID":"kexiaowen"},"content":"    public static final String TECHNICAL_SKILLS_SCORE \u003d \"4\";"},{"lineNumber":37,"author":{"gitID":"kexiaowen"},"content":"    public static final String COMMUNICATION_SKILLS_SCORE \u003d \"4.5\";"},{"lineNumber":38,"author":{"gitID":"kexiaowen"},"content":"    public static final String PROBLEM_SOLVING_SKILLS_SCORE \u003d \"3\";"},{"lineNumber":39,"author":{"gitID":"kexiaowen"},"content":"    public static final String EXPERIENCE_SCORE \u003d \"3.5\";"},{"lineNumber":40,"author":{"gitID":"kexiaowen"},"content":"    public static final Rating VALID_RATING \u003d new Rating(4, 4.5,"},{"lineNumber":41,"author":{"gitID":"kexiaowen"},"content":"            3, 3.5);"},{"lineNumber":42,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":43,"author":{"gitID":"kexiaowen"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());"},{"lineNumber":44,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":45,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"kexiaowen"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() throws Exception {"},{"lineNumber":47,"author":{"gitID":"kexiaowen"},"content":"        showPersonAtIndex(model, INDEX_THIRD_PERSON);"},{"lineNumber":48,"author":{"gitID":"kexiaowen"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());"},{"lineNumber":49,"author":{"gitID":"kexiaowen"},"content":"        Person ratedPerson \u003d new PersonBuilder(firstPerson).withRating(TECHNICAL_SKILLS_SCORE,"},{"lineNumber":50,"author":{"gitID":"kexiaowen"},"content":"                COMMUNICATION_SKILLS_SCORE, PROBLEM_SOLVING_SKILLS_SCORE, EXPERIENCE_SCORE).build();"},{"lineNumber":51,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":52,"author":{"gitID":"kexiaowen"},"content":"        RateCommand rateCommand \u003d prepareCommand(INDEX_FIRST_PERSON, ratedPerson.getRating());"},{"lineNumber":53,"author":{"gitID":"kexiaowen"},"content":"        String expectedMessage \u003d String.format(RateCommand.MESSAGE_RATE_PERSON_SUCCESS,"},{"lineNumber":54,"author":{"gitID":"kexiaowen"},"content":"                ratedPerson.getName(), ratedPerson.getRating().getTechnicalSkillsScore(),"},{"lineNumber":55,"author":{"gitID":"kexiaowen"},"content":"                ratedPerson.getRating().getCommunicationSkillsScore(),"},{"lineNumber":56,"author":{"gitID":"kexiaowen"},"content":"                ratedPerson.getRating().getProblemSolvingSkillsScore(),"},{"lineNumber":57,"author":{"gitID":"kexiaowen"},"content":"                ratedPerson.getRating().getExperienceScore(),"},{"lineNumber":58,"author":{"gitID":"kexiaowen"},"content":"                ratedPerson.getRating().getOverallScore());"},{"lineNumber":59,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":60,"author":{"gitID":"kexiaowen"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());"},{"lineNumber":61,"author":{"gitID":"kexiaowen"},"content":"        expectedModel.updatePerson(firstPerson, ratedPerson);"},{"lineNumber":62,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":63,"author":{"gitID":"kexiaowen"},"content":"        assertCommandSuccess(rateCommand, model, expectedMessage, expectedModel);"},{"lineNumber":64,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":65,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":66,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":67,"author":{"gitID":"kexiaowen"},"content":"    public void execute_allFieldsSpecifiedFilteredList_success() throws Exception {"},{"lineNumber":68,"author":{"gitID":"kexiaowen"},"content":"        showPersonAtIndex(model, INDEX_THIRD_PERSON);"},{"lineNumber":69,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":70,"author":{"gitID":"kexiaowen"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());"},{"lineNumber":71,"author":{"gitID":"kexiaowen"},"content":"        Person ratedPerson \u003d new PersonBuilder(firstPerson).withRating(TECHNICAL_SKILLS_SCORE,"},{"lineNumber":72,"author":{"gitID":"kexiaowen"},"content":"                COMMUNICATION_SKILLS_SCORE, PROBLEM_SOLVING_SKILLS_SCORE, EXPERIENCE_SCORE).build();"},{"lineNumber":73,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":74,"author":{"gitID":"kexiaowen"},"content":"        RateCommand rateCommand \u003d prepareCommand(INDEX_FIRST_PERSON, ratedPerson.getRating());"},{"lineNumber":75,"author":{"gitID":"kexiaowen"},"content":"        String expectedMessage \u003d String.format(RateCommand.MESSAGE_RATE_PERSON_SUCCESS,"},{"lineNumber":76,"author":{"gitID":"kexiaowen"},"content":"                ratedPerson.getName(),"},{"lineNumber":77,"author":{"gitID":"kexiaowen"},"content":"                ratedPerson.getRating().getTechnicalSkillsScore(),"},{"lineNumber":78,"author":{"gitID":"kexiaowen"},"content":"                ratedPerson.getRating().getCommunicationSkillsScore(),"},{"lineNumber":79,"author":{"gitID":"kexiaowen"},"content":"                ratedPerson.getRating().getProblemSolvingSkillsScore(),"},{"lineNumber":80,"author":{"gitID":"kexiaowen"},"content":"                ratedPerson.getRating().getExperienceScore(),"},{"lineNumber":81,"author":{"gitID":"kexiaowen"},"content":"                ratedPerson.getRating().getOverallScore());"},{"lineNumber":82,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":83,"author":{"gitID":"kexiaowen"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());"},{"lineNumber":84,"author":{"gitID":"kexiaowen"},"content":"        expectedModel.updatePerson(firstPerson, ratedPerson);"},{"lineNumber":85,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":86,"author":{"gitID":"kexiaowen"},"content":"        assertCommandSuccess(rateCommand, model, expectedMessage, expectedModel);"},{"lineNumber":87,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":88,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":89,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":90,"author":{"gitID":"kexiaowen"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() throws Exception {"},{"lineNumber":91,"author":{"gitID":"kexiaowen"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);"},{"lineNumber":92,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":93,"author":{"gitID":"kexiaowen"},"content":"        RateCommand rateCommand \u003d prepareCommand(outOfBoundIndex, VALID_RATING);"},{"lineNumber":94,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":95,"author":{"gitID":"kexiaowen"},"content":"        assertCommandFailure(rateCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"},{"lineNumber":96,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":97,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":98,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":99,"author":{"gitID":"kexiaowen"},"content":"     * Edit filtered list where index is larger than size of filtered list,"},{"lineNumber":100,"author":{"gitID":"kexiaowen"},"content":"     * but smaller than size of address book"},{"lineNumber":101,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":102,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":103,"author":{"gitID":"kexiaowen"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() throws Exception {"},{"lineNumber":104,"author":{"gitID":"kexiaowen"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);"},{"lineNumber":105,"author":{"gitID":"kexiaowen"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;"},{"lineNumber":106,"author":{"gitID":"kexiaowen"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list"},{"lineNumber":107,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());"},{"lineNumber":108,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":109,"author":{"gitID":"kexiaowen"},"content":"        RateCommand rateCommand \u003d prepareCommand(outOfBoundIndex, VALID_RATING);"},{"lineNumber":110,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":111,"author":{"gitID":"kexiaowen"},"content":"        assertCommandFailure(rateCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"},{"lineNumber":112,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":113,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":114,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":115,"author":{"gitID":"kexiaowen"},"content":"    public void executeUndoRedo_validIndexUnfilteredList_success() throws Exception {"},{"lineNumber":116,"author":{"gitID":"kexiaowen"},"content":"        showPersonAtIndex(model, INDEX_THIRD_PERSON);"},{"lineNumber":117,"author":{"gitID":"kexiaowen"},"content":"        UndoRedoStack undoRedoStack \u003d new UndoRedoStack();"},{"lineNumber":118,"author":{"gitID":"kexiaowen"},"content":"        UndoCommand undoCommand \u003d prepareUndoCommand(model, undoRedoStack);"},{"lineNumber":119,"author":{"gitID":"kexiaowen"},"content":"        RedoCommand redoCommand \u003d prepareRedoCommand(model, undoRedoStack);"},{"lineNumber":120,"author":{"gitID":"kexiaowen"},"content":"        Person personToModify \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());"},{"lineNumber":121,"author":{"gitID":"kexiaowen"},"content":"        Person modifiedPerson \u003d new PersonBuilder(personToModify).withRating(TECHNICAL_SKILLS_SCORE,"},{"lineNumber":122,"author":{"gitID":"kexiaowen"},"content":"                COMMUNICATION_SKILLS_SCORE, PROBLEM_SOLVING_SKILLS_SCORE, EXPERIENCE_SCORE).build();"},{"lineNumber":123,"author":{"gitID":"kexiaowen"},"content":"        RateCommand rateCommand \u003d prepareCommand(INDEX_FIRST_PERSON, VALID_RATING);"},{"lineNumber":124,"author":{"gitID":"kexiaowen"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());"},{"lineNumber":125,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":126,"author":{"gitID":"kexiaowen"},"content":"        // rate -\u003e first person rating changed"},{"lineNumber":127,"author":{"gitID":"kexiaowen"},"content":"        rateCommand.execute();"},{"lineNumber":128,"author":{"gitID":"kexiaowen"},"content":"        undoRedoStack.push(rateCommand);"},{"lineNumber":129,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":130,"author":{"gitID":"kexiaowen"},"content":"        // undo -\u003e reverts addressbook back to previous state and filtered person list to show all persons"},{"lineNumber":131,"author":{"gitID":"kexiaowen"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":132,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":133,"author":{"gitID":"kexiaowen"},"content":"        // redo -\u003e same first person modified again"},{"lineNumber":134,"author":{"gitID":"kexiaowen"},"content":"        expectedModel.updatePerson(personToModify, modifiedPerson);"},{"lineNumber":135,"author":{"gitID":"kexiaowen"},"content":"        assertCommandSuccess(redoCommand, model, RedoCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":136,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":137,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":138,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":139,"author":{"gitID":"kexiaowen"},"content":"    public void executeUndoRedo_invalidIndexUnfilteredList_failure() {"},{"lineNumber":140,"author":{"gitID":"kexiaowen"},"content":"        UndoRedoStack undoRedoStack \u003d new UndoRedoStack();"},{"lineNumber":141,"author":{"gitID":"kexiaowen"},"content":"        UndoCommand undoCommand \u003d prepareUndoCommand(model, undoRedoStack);"},{"lineNumber":142,"author":{"gitID":"kexiaowen"},"content":"        RedoCommand redoCommand \u003d prepareRedoCommand(model, undoRedoStack);"},{"lineNumber":143,"author":{"gitID":"kexiaowen"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);"},{"lineNumber":144,"author":{"gitID":"kexiaowen"},"content":"        RateCommand rateCommand \u003d prepareCommand(outOfBoundIndex, VALID_RATING);"},{"lineNumber":145,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":146,"author":{"gitID":"kexiaowen"},"content":"        // execution failed -\u003e rateCommand not pushed into undoRedoStack"},{"lineNumber":147,"author":{"gitID":"kexiaowen"},"content":"        assertCommandFailure(rateCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"},{"lineNumber":148,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":149,"author":{"gitID":"kexiaowen"},"content":"        // no commands in undoRedoStack -\u003e undoCommand and redoCommand fail"},{"lineNumber":150,"author":{"gitID":"kexiaowen"},"content":"        assertCommandFailure(undoCommand, model, UndoCommand.MESSAGE_FAILURE);"},{"lineNumber":151,"author":{"gitID":"kexiaowen"},"content":"        assertCommandFailure(redoCommand, model, RedoCommand.MESSAGE_FAILURE);"},{"lineNumber":152,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":153,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":154,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":155,"author":{"gitID":"kexiaowen"},"content":"     * 1. Modifies {@code Person#remark} from a filtered list."},{"lineNumber":156,"author":{"gitID":"kexiaowen"},"content":"     * 2. Undo the modification."},{"lineNumber":157,"author":{"gitID":"kexiaowen"},"content":"     * 3. The unfiltered list should be shown now. Verify that the index of the previously modified person in the"},{"lineNumber":158,"author":{"gitID":"kexiaowen"},"content":"     * unfiltered list is different from the index at the filtered list."},{"lineNumber":159,"author":{"gitID":"kexiaowen"},"content":"     * 4. Redo the modification. This ensures {@code RedoCommand} modifies the person object regardless of indexing."},{"lineNumber":160,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":161,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":162,"author":{"gitID":"kexiaowen"},"content":"    public void executeUndoRedo_validIndexFilteredList_samePersonRated() throws Exception {"},{"lineNumber":163,"author":{"gitID":"kexiaowen"},"content":"        UndoRedoStack undoRedoStack \u003d new UndoRedoStack();"},{"lineNumber":164,"author":{"gitID":"kexiaowen"},"content":"        UndoCommand undoCommand \u003d prepareUndoCommand(model, undoRedoStack);"},{"lineNumber":165,"author":{"gitID":"kexiaowen"},"content":"        RedoCommand redoCommand \u003d prepareRedoCommand(model, undoRedoStack);"},{"lineNumber":166,"author":{"gitID":"kexiaowen"},"content":"        RateCommand rateCommand \u003d prepareCommand(INDEX_FIRST_PERSON, VALID_RATING);"},{"lineNumber":167,"author":{"gitID":"kexiaowen"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());"},{"lineNumber":168,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":169,"author":{"gitID":"kexiaowen"},"content":"        showPersonAtIndex(model, INDEX_THIRD_PERSON);"},{"lineNumber":170,"author":{"gitID":"kexiaowen"},"content":"        Person personToModify \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());"},{"lineNumber":171,"author":{"gitID":"kexiaowen"},"content":"        Person modifiedPerson \u003d new PersonBuilder(personToModify).withRating(TECHNICAL_SKILLS_SCORE,"},{"lineNumber":172,"author":{"gitID":"kexiaowen"},"content":"                COMMUNICATION_SKILLS_SCORE, PROBLEM_SOLVING_SKILLS_SCORE, EXPERIENCE_SCORE).build();"},{"lineNumber":173,"author":{"gitID":"kexiaowen"},"content":"        // rate -\u003e modifies second person in unfiltered person list / first person in filtered person list"},{"lineNumber":174,"author":{"gitID":"kexiaowen"},"content":"        rateCommand.execute();"},{"lineNumber":175,"author":{"gitID":"kexiaowen"},"content":"        undoRedoStack.push(rateCommand);"},{"lineNumber":176,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":177,"author":{"gitID":"kexiaowen"},"content":"        // undo -\u003e reverts addressbook back to previous state and filtered person list to show all persons"},{"lineNumber":178,"author":{"gitID":"kexiaowen"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":179,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":180,"author":{"gitID":"kexiaowen"},"content":"        expectedModel.updatePerson(personToModify, modifiedPerson);"},{"lineNumber":181,"author":{"gitID":"kexiaowen"},"content":"        assertNotEquals(personToModify, model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()));"},{"lineNumber":182,"author":{"gitID":"kexiaowen"},"content":"        // redo -\u003e modifies same second person in unfiltered person list"},{"lineNumber":183,"author":{"gitID":"kexiaowen"},"content":"        assertCommandSuccess(redoCommand, model, RedoCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":184,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":185,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":186,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":187,"author":{"gitID":"kexiaowen"},"content":"    public void equals() {"},{"lineNumber":188,"author":{"gitID":"kexiaowen"},"content":"        final RateCommand standardCommand \u003d new RateCommand(INDEX_FIRST_PERSON, VALID_RATING);"},{"lineNumber":189,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":190,"author":{"gitID":"kexiaowen"},"content":"        // same values -\u003e returns true"},{"lineNumber":191,"author":{"gitID":"kexiaowen"},"content":"        RateCommand commandWithSameValues \u003d new RateCommand(INDEX_FIRST_PERSON, VALID_RATING);"},{"lineNumber":192,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));"},{"lineNumber":193,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":194,"author":{"gitID":"kexiaowen"},"content":"        // same object -\u003e returns true"},{"lineNumber":195,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(standardCommand.equals(standardCommand));"},{"lineNumber":196,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":197,"author":{"gitID":"kexiaowen"},"content":"        // null -\u003e returns false"},{"lineNumber":198,"author":{"gitID":"kexiaowen"},"content":"        assertFalse(standardCommand.equals(null));"},{"lineNumber":199,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":200,"author":{"gitID":"kexiaowen"},"content":"        // different types -\u003e returns false"},{"lineNumber":201,"author":{"gitID":"kexiaowen"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));"},{"lineNumber":202,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":203,"author":{"gitID":"kexiaowen"},"content":"        // different index -\u003e returns false"},{"lineNumber":204,"author":{"gitID":"kexiaowen"},"content":"        assertFalse(standardCommand.equals(new RateCommand(INDEX_SECOND_PERSON,"},{"lineNumber":205,"author":{"gitID":"kexiaowen"},"content":"                VALID_RATING)));"},{"lineNumber":206,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":207,"author":{"gitID":"kexiaowen"},"content":"        // different rating -\u003e returns false"},{"lineNumber":208,"author":{"gitID":"kexiaowen"},"content":"        assertFalse(standardCommand.equals(new RateCommand(INDEX_FIRST_PERSON,"},{"lineNumber":209,"author":{"gitID":"kexiaowen"},"content":"                new Rating(1, 1,"},{"lineNumber":210,"author":{"gitID":"kexiaowen"},"content":"                        1, 1))));"},{"lineNumber":211,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":212,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":213,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":214,"author":{"gitID":"kexiaowen"},"content":"      * Returns a {@code RateCommand}."},{"lineNumber":215,"author":{"gitID":"kexiaowen"},"content":"      */"},{"lineNumber":216,"author":{"gitID":"kexiaowen"},"content":"    private RateCommand prepareCommand(Index index, Rating rating) {"},{"lineNumber":217,"author":{"gitID":"kexiaowen"},"content":"        RateCommand rateCommand \u003d new RateCommand(index, rating);"},{"lineNumber":218,"author":{"gitID":"kexiaowen"},"content":"        rateCommand.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":219,"author":{"gitID":"kexiaowen"},"content":"        return rateCommand;"},{"lineNumber":220,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":221,"author":{"gitID":"kexiaowen"},"content":"}"}],"authorContributionMap":{"kexiaowen":215,"-":6}},{"path":"src/test/java/seedu/address/logic/parser/ResumeUtilTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.io.File;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.nio.file.Files;"},{"lineNumber":9,"author":{"gitID":"mhq199657"},"content":"import java.security.MessageDigest;"},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":"import java.security.NoSuchAlgorithmException;"},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":"import java.util.Arrays;"},{"lineNumber":12,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":13,"author":{"gitID":"mhq199657"},"content":"import javax.xml.bind.DatatypeConverter;"},{"lineNumber":14,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":"import org.junit.Test;"},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":17,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Resume;"},{"lineNumber":18,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":"public class ResumeUtilTest {"},{"lineNumber":20,"author":{"gitID":"mhq199657"},"content":"    private static final String TEST_DATA_FOLDER \u003d \"src/test/data/ResumeTest/\";"},{"lineNumber":21,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":22,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":23,"author":{"gitID":"mhq199657"},"content":"    public void process_validResume_fileCopied() {"},{"lineNumber":24,"author":{"gitID":"mhq199657"},"content":"        Resume resume \u003d new Resume(formFilePath(\"1 2.pdf\"));"},{"lineNumber":25,"author":{"gitID":"mhq199657"},"content":"        Resume processed \u003d null;"},{"lineNumber":26,"author":{"gitID":"mhq199657"},"content":"        try {"},{"lineNumber":27,"author":{"gitID":"mhq199657"},"content":"            processed \u003d ResumeUtil.process(resume);"},{"lineNumber":28,"author":{"gitID":"mhq199657"},"content":"        } catch (IOException ioe) {"},{"lineNumber":29,"author":{"gitID":"mhq199657"},"content":"            throw new AssertionError(\"This should not be reachable.\");"},{"lineNumber":30,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":31,"author":{"gitID":"mhq199657"},"content":"        File resumeFile \u003d new File(System.getProperty(\"user.dir\") + File.separator + resume.value);"},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":"        File processedFile \u003d new File(System.getProperty(\"user.dir\") + File.separator + processed.value);"},{"lineNumber":33,"author":{"gitID":"mhq199657"},"content":"        assert(resumeFile.exists());"},{"lineNumber":34,"author":{"gitID":"mhq199657"},"content":"        assert(processedFile.exists());"},{"lineNumber":35,"author":{"gitID":"mhq199657"},"content":"        byte[] f1 \u003d null;"},{"lineNumber":36,"author":{"gitID":"mhq199657"},"content":"        byte[] f2 \u003d null;"},{"lineNumber":37,"author":{"gitID":"mhq199657"},"content":"        try {"},{"lineNumber":38,"author":{"gitID":"mhq199657"},"content":"            f1 \u003d Files.readAllBytes(resumeFile.toPath());"},{"lineNumber":39,"author":{"gitID":"mhq199657"},"content":"            f2 \u003d Files.readAllBytes(processedFile.toPath());"},{"lineNumber":40,"author":{"gitID":"mhq199657"},"content":"        } catch (IOException ioe) {"},{"lineNumber":41,"author":{"gitID":"mhq199657"},"content":"            throw new AssertionError(\"This should not be reachable.\");"},{"lineNumber":42,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":43,"author":{"gitID":"mhq199657"},"content":"        assertTrue(Arrays.equals(f1, f2));"},{"lineNumber":44,"author":{"gitID":"mhq199657"},"content":"        MessageDigest md \u003d null;"},{"lineNumber":45,"author":{"gitID":"mhq199657"},"content":"        try {"},{"lineNumber":46,"author":{"gitID":"mhq199657"},"content":"            md \u003d MessageDigest.getInstance(\"MD5\");"},{"lineNumber":47,"author":{"gitID":"mhq199657"},"content":"        } catch (NoSuchAlgorithmException nsae) {"},{"lineNumber":48,"author":{"gitID":"mhq199657"},"content":"            throw new AssertionError(\"This should never happen.\");"},{"lineNumber":49,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":50,"author":{"gitID":"mhq199657"},"content":"        assert(md !\u003d null);"},{"lineNumber":51,"author":{"gitID":"mhq199657"},"content":"        md.update(f2);"},{"lineNumber":52,"author":{"gitID":"mhq199657"},"content":"        byte[] digest \u003d md.digest();"},{"lineNumber":53,"author":{"gitID":"mhq199657"},"content":"        String hash \u003d DatatypeConverter.printHexBinary(digest).toUpperCase();"},{"lineNumber":54,"author":{"gitID":"mhq199657"},"content":"        assertEquals(hash, processed.value.split(\"_\")[1]);"},{"lineNumber":55,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":57,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":58,"author":{"gitID":"mhq199657"},"content":"    public void process_differentResumes_differentHash() {"},{"lineNumber":59,"author":{"gitID":"mhq199657"},"content":"        Resume resume1 \u003d new Resume(formFilePath(\"1 2.pdf\"));"},{"lineNumber":60,"author":{"gitID":"mhq199657"},"content":"        Resume resume2 \u003d new Resume(formFilePath(\"alice.pdf\"));"},{"lineNumber":61,"author":{"gitID":"mhq199657"},"content":"        Resume processed1 \u003d null;"},{"lineNumber":62,"author":{"gitID":"mhq199657"},"content":"        Resume processed2 \u003d null;"},{"lineNumber":63,"author":{"gitID":"mhq199657"},"content":"        try {"},{"lineNumber":64,"author":{"gitID":"mhq199657"},"content":"            processed1 \u003d ResumeUtil.process(resume1);"},{"lineNumber":65,"author":{"gitID":"mhq199657"},"content":"            processed2 \u003d ResumeUtil.process(resume2);"},{"lineNumber":66,"author":{"gitID":"mhq199657"},"content":"        } catch (IOException ioe) {"},{"lineNumber":67,"author":{"gitID":"mhq199657"},"content":"            throw new AssertionError(\"This should not be reachable.\");"},{"lineNumber":68,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":69,"author":{"gitID":"mhq199657"},"content":"        assertTrue(processed1.value.split(\"_\")[1] !\u003d processed2.value.split(\"_\")[1]);"},{"lineNumber":70,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":71,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":72,"author":{"gitID":"mhq199657"},"content":"    private String formFilePath(String fileName) {"},{"lineNumber":73,"author":{"gitID":"mhq199657"},"content":"        return TEST_DATA_FOLDER + fileName;"},{"lineNumber":74,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":75,"author":{"gitID":"mhq199657"},"content":"}"}],"authorContributionMap":{"mhq199657":67,"-":8}},{"path":"src/test/java/seedu/address/logic/commands/SortCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.SortCommand.MESSAGE_SORT_SUCCESS;"},{"lineNumber":7,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;"},{"lineNumber":8,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;"},{"lineNumber":9,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;"},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;"},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;"},{"lineNumber":12,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":17,"author":{"gitID":"kexiaowen"},"content":"import java.util.List;"},{"lineNumber":18,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.address.logic.CommandHistory;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.address.logic.UndoRedoStack;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":27,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":28,"author":{"gitID":"kexiaowen"},"content":"//@@author kexiaowen"},{"lineNumber":29,"author":{"gitID":"kexiaowen"},"content":"public class SortCommandTest {"},{"lineNumber":30,"author":{"gitID":"kexiaowen"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());"},{"lineNumber":31,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":32,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":33,"author":{"gitID":"kexiaowen"},"content":"    public void execute_sortByName_sortSuccessful() throws Exception {"},{"lineNumber":34,"author":{"gitID":"kexiaowen"},"content":"        SortCommand command \u003d prepareCommand(SortCommand.SortOrder.DESC, SortCommand.SortField.NAME);"},{"lineNumber":35,"author":{"gitID":"kexiaowen"},"content":"        String expectedMessage \u003d String.format(MESSAGE_SORT_SUCCESS, \"name\", \"descending\");"},{"lineNumber":36,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":37,"author":{"gitID":"kexiaowen"},"content":"        assertCommandSuccess(command, expectedMessage, Arrays.asList("},{"lineNumber":38,"author":{"gitID":"kexiaowen"},"content":"                GEORGE, FIONA, ELLE, DANIEL, CARL, BENSON, ALICE));"},{"lineNumber":39,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":41,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":42,"author":{"gitID":"kexiaowen"},"content":"    public void execute_sortByRating_sortSuccessful() throws Exception {"},{"lineNumber":43,"author":{"gitID":"kexiaowen"},"content":"        SortCommand command \u003d prepareCommand(SortCommand.SortOrder.DESC, SortCommand.SortField.RATING);"},{"lineNumber":44,"author":{"gitID":"kexiaowen"},"content":"        String expectedMessage \u003d String.format(MESSAGE_SORT_SUCCESS, \"rating\", \"descending\");"},{"lineNumber":45,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":46,"author":{"gitID":"kexiaowen"},"content":"        assertCommandSuccess(command, expectedMessage, Arrays.asList("},{"lineNumber":47,"author":{"gitID":"kexiaowen"},"content":"                BENSON, ALICE, CARL, DANIEL, ELLE, FIONA, GEORGE));"},{"lineNumber":48,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":49,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":50,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":51,"author":{"gitID":"kexiaowen"},"content":"    public void execute_sortByGradePointAverage_sortSuccessful() throws Exception {"},{"lineNumber":52,"author":{"gitID":"kexiaowen"},"content":"        SortCommand command \u003d prepareCommand(SortCommand.SortOrder.ASC, SortCommand.SortField.GPA);"},{"lineNumber":53,"author":{"gitID":"kexiaowen"},"content":"        String expectedMessage \u003d String.format(MESSAGE_SORT_SUCCESS, \"gpa\", \"ascending\");"},{"lineNumber":54,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":55,"author":{"gitID":"kexiaowen"},"content":"        assertCommandSuccess(command, expectedMessage, Arrays.asList("},{"lineNumber":56,"author":{"gitID":"kexiaowen"},"content":"                GEORGE, DANIEL, ELLE, BENSON, FIONA, ALICE, CARL));"},{"lineNumber":57,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":58,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":59,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":60,"author":{"gitID":"kexiaowen"},"content":"    public void isValidSortOrder() {"},{"lineNumber":61,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(SortCommand.isValidSortOrder(\"asc\"));"},{"lineNumber":62,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(SortCommand.isValidSortOrder(\"desc\"));"},{"lineNumber":63,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":64,"author":{"gitID":"kexiaowen"},"content":"        assertFalse(SortCommand.isValidSortOrder(\"\"));"},{"lineNumber":65,"author":{"gitID":"kexiaowen"},"content":"        assertFalse(SortCommand.isValidSortOrder(\"ascc\"));"},{"lineNumber":66,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":67,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":69,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":70,"author":{"gitID":"kexiaowen"},"content":"    public void isValidSortField() {"},{"lineNumber":71,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(SortCommand.isValidSortField(\"gpa\"));"},{"lineNumber":72,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(SortCommand.isValidSortField(\"name\"));"},{"lineNumber":73,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(SortCommand.isValidSortField(\"rating\"));"},{"lineNumber":74,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":75,"author":{"gitID":"kexiaowen"},"content":"        assertFalse(SortCommand.isValidSortField(\"\"));"},{"lineNumber":76,"author":{"gitID":"kexiaowen"},"content":"        assertFalse(SortCommand.isValidSortField(\"gpaaaa\"));"},{"lineNumber":77,"author":{"gitID":"kexiaowen"},"content":"        assertFalse(SortCommand.isValidSortField(\"ratings\"));"},{"lineNumber":78,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":79,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":80,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":81,"author":{"gitID":"kexiaowen"},"content":"    public void equals() {"},{"lineNumber":82,"author":{"gitID":"kexiaowen"},"content":"        final SortCommand standardCommand \u003d prepareCommand(SortCommand.SortOrder.DESC, SortCommand.SortField.GPA);"},{"lineNumber":83,"author":{"gitID":"kexiaowen"},"content":"        // same values -\u003e returns true"},{"lineNumber":84,"author":{"gitID":"kexiaowen"},"content":"        SortCommand commandWithSameValues \u003d prepareCommand(SortCommand.SortOrder.DESC, SortCommand.SortField.GPA);"},{"lineNumber":85,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));"},{"lineNumber":86,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":87,"author":{"gitID":"kexiaowen"},"content":"        // same object -\u003e returns true"},{"lineNumber":88,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(standardCommand.equals(standardCommand));"},{"lineNumber":89,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":90,"author":{"gitID":"kexiaowen"},"content":"        // different types -\u003e returns false"},{"lineNumber":91,"author":{"gitID":"kexiaowen"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));"},{"lineNumber":92,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":93,"author":{"gitID":"kexiaowen"},"content":"        // different sort order -\u003e returns false"},{"lineNumber":94,"author":{"gitID":"kexiaowen"},"content":"        assertFalse(standardCommand.equals(prepareCommand(SortCommand.SortOrder.ASC, SortCommand.SortField.GPA)));"},{"lineNumber":95,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":96,"author":{"gitID":"kexiaowen"},"content":"        // different sort field -\u003e returns false"},{"lineNumber":97,"author":{"gitID":"kexiaowen"},"content":"        assertFalse(standardCommand.equals(prepareCommand(SortCommand.SortOrder.DESC, SortCommand.SortField.NAME)));"},{"lineNumber":98,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":99,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":100,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":101,"author":{"gitID":"kexiaowen"},"content":"     * Returns a {@code SortCommand}."},{"lineNumber":102,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":103,"author":{"gitID":"kexiaowen"},"content":"    private SortCommand prepareCommand(SortCommand.SortOrder sortOrder, SortCommand.SortField sortField) {"},{"lineNumber":104,"author":{"gitID":"kexiaowen"},"content":"        SortCommand sortCommand \u003d new SortCommand(sortOrder, sortField);"},{"lineNumber":105,"author":{"gitID":"kexiaowen"},"content":"        sortCommand.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":106,"author":{"gitID":"kexiaowen"},"content":"        return sortCommand;"},{"lineNumber":107,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":108,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":109,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":110,"author":{"gitID":"kexiaowen"},"content":"     * Asserts that {@code command} is successfully executed, and\u003cbr\u003e"},{"lineNumber":111,"author":{"gitID":"kexiaowen"},"content":"     *     - the command feedback is equal to {@code expectedMessage}\u003cbr\u003e"},{"lineNumber":112,"author":{"gitID":"kexiaowen"},"content":"     *     - the {@code FilteredList\u003cPerson\u003e} is equal to {@code expectedList}\u003cbr\u003e"},{"lineNumber":113,"author":{"gitID":"kexiaowen"},"content":"     *     - the {@code AddressBook} in model remains the same after executing the {@code command}"},{"lineNumber":114,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":115,"author":{"gitID":"kexiaowen"},"content":"    private void assertCommandSuccess(SortCommand command, String expectedMessage, List\u003cPerson\u003e expectedList)"},{"lineNumber":116,"author":{"gitID":"kexiaowen"},"content":"            throws Exception {"},{"lineNumber":117,"author":{"gitID":"kexiaowen"},"content":"        CommandResult commandResult \u003d command.execute();"},{"lineNumber":118,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":119,"author":{"gitID":"kexiaowen"},"content":"        assertEquals(expectedMessage, commandResult.feedbackToUser);"},{"lineNumber":120,"author":{"gitID":"kexiaowen"},"content":"        assertEquals(expectedList, model.getFilteredPersonList());"},{"lineNumber":121,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":122,"author":{"gitID":"kexiaowen"},"content":"}"}],"authorContributionMap":{"kexiaowen":99,"mhq199657":6,"-":16,"tanhengyeow":1}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.logic.CommandHistory;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.logic.UndoRedoStack;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":19,"author":{"gitID":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}."},{"lineNumber":20,"author":{"gitID":"-"},"content":" */"},{"lineNumber":21,"author":{"gitID":"-"},"content":"public class AddCommandIntegrationTest {"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"-"},"content":"    private Model model;"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"    @Before"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    public void setUp() {"},{"lineNumber":27,"author":{"gitID":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());"},{"lineNumber":28,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":31,"author":{"gitID":"-"},"content":"    public void execute_newPerson_success() throws Exception {"},{"lineNumber":32,"author":{"gitID":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());"},{"lineNumber":35,"author":{"gitID":"-"},"content":"        expectedModel.addPerson(validPerson);"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"        assertCommandSuccess(prepareCommand(validPerson, model), model,"},{"lineNumber":38,"author":{"gitID":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);"},{"lineNumber":39,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"-"},"content":""},{"lineNumber":41,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        assertCommandFailure(prepareCommand(personInList, model), model, AddCommand.MESSAGE_DUPLICATE_PERSON);"},{"lineNumber":45,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":49,"author":{"gitID":"-"},"content":"     * Generates a new {@code AddCommand} which upon execution, adds {@code person} into the {@code model}."},{"lineNumber":50,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":51,"author":{"gitID":"-"},"content":"    private AddCommand prepareCommand(Person person, Model model) {"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        AddCommand command \u003d new AddCommand(person);"},{"lineNumber":53,"author":{"gitID":"-"},"content":"        command.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":54,"author":{"gitID":"-"},"content":"        return command;"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"mhq199657":1,"-":55}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.fail;"},{"lineNumber":6,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;"},{"lineNumber":8,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMENT;"},{"lineNumber":9,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMUNICATION_SKILLS_SCORE;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;"},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXPECTED_GRADUATION_YEAR;"},{"lineNumber":12,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXPERIENCE_SCORE;"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GRADE_POINT_AVERAGE;"},{"lineNumber":14,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IMAGE;"},{"lineNumber":15,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB_APPLIED;"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MAJOR;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;"},{"lineNumber":19,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PROBLEM_SOLVING_SKILLS_SCORE;"},{"lineNumber":20,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RESUME;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"},{"lineNumber":22,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TECHNICAL_SKILLS_SCORE;"},{"lineNumber":23,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNIVERSITY;"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":30,"author":{"gitID":"-"},"content":"import seedu.address.logic.CommandHistory;"},{"lineNumber":31,"author":{"gitID":"-"},"content":"import seedu.address.logic.UndoRedoStack;"},{"lineNumber":32,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":33,"author":{"gitID":"-"},"content":"import seedu.address.model.AddressBook;"},{"lineNumber":34,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":35,"author":{"gitID":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;"},{"lineNumber":36,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":37,"author":{"gitID":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;"},{"lineNumber":38,"author":{"gitID":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":41,"author":{"gitID":"-"},"content":" * Contains helper methods for testing commands."},{"lineNumber":42,"author":{"gitID":"-"},"content":" */"},{"lineNumber":43,"author":{"gitID":"-"},"content":"public class CommandTestUtil {"},{"lineNumber":44,"author":{"gitID":"mhq199657"},"content":"    public static final String RESUME_PATH \u003d \"src/test/resources/resume/\";"},{"lineNumber":45,"author":{"gitID":"Ang-YC"},"content":"    public static final String IMAGE_PATH \u003d \"src/test/resources/photos/\";"},{"lineNumber":46,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";"},{"lineNumber":48,"author":{"gitID":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";"},{"lineNumber":49,"author":{"gitID":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";"},{"lineNumber":50,"author":{"gitID":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";"},{"lineNumber":51,"author":{"gitID":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";"},{"lineNumber":53,"author":{"gitID":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";"},{"lineNumber":54,"author":{"gitID":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";"},{"lineNumber":55,"author":{"gitID":"kexiaowen"},"content":"    public static final String VALID_UNIVERSITY_AMY \u003d \"NUS\";"},{"lineNumber":56,"author":{"gitID":"kexiaowen"},"content":"    public static final String VALID_UNIVERSITY_BOB \u003d \"NTU\";"},{"lineNumber":57,"author":{"gitID":"mhq199657"},"content":"    public static final String VALID_EXPECTED_GRADUATION_YEAR_AMY \u003d \"2018\";"},{"lineNumber":58,"author":{"gitID":"mhq199657"},"content":"    public static final String VALID_EXPECTED_GRADUATION_YEAR_BOB \u003d \"2020\";"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":"    public static final String VALID_GRADE_POINT_AVERAGE_AMY \u003d \"4.75\";"},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"    public static final String VALID_GRADE_POINT_AVERAGE_BOB \u003d \"4.93\";"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"    public static final String VALID_MAJOR_AMY \u003d \"Computer Science\";"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"    public static final String VALID_MAJOR_BOB \u003d \"Information Security\";"},{"lineNumber":63,"author":{"gitID":"kexiaowen"},"content":"    public static final String VALID_JOB_APPLIED_AMY \u003d \"Software Engineer\";"},{"lineNumber":64,"author":{"gitID":"kexiaowen"},"content":"    public static final String VALID_JOB_APPLIED_BOB \u003d \"Web Security Analyst\";"},{"lineNumber":65,"author":{"gitID":"kexiaowen"},"content":"    public static final String VALID_TECHNICAL_SKILLS_SCORE_AMY \u003d \"4\";"},{"lineNumber":66,"author":{"gitID":"kexiaowen"},"content":"    public static final String VALID_TECHNICAL_SKILLS_SCORE_BOB \u003d \"4.5\";"},{"lineNumber":67,"author":{"gitID":"kexiaowen"},"content":"    public static final String VALID_COMMUNICATION_SKILLS_SCORE_AMY \u003d \"3\";"},{"lineNumber":68,"author":{"gitID":"kexiaowen"},"content":"    public static final String VALID_COMMUNICATION_SKILLS_SCORE_BOB \u003d \"4\";"},{"lineNumber":69,"author":{"gitID":"kexiaowen"},"content":"    public static final String VALID_PROBLEM_SOLVING_SKILLS_SCORE_AMY \u003d \"2\";"},{"lineNumber":70,"author":{"gitID":"kexiaowen"},"content":"    public static final String VALID_PROBLEM_SOLVING_SKILLS_SCORE_BOB \u003d \"4\";"},{"lineNumber":71,"author":{"gitID":"kexiaowen"},"content":"    public static final String VALID_EXPERIENCE_SCORE_AMY \u003d \"3\";"},{"lineNumber":72,"author":{"gitID":"kexiaowen"},"content":"    public static final String VALID_EXPERIENCE_SCORE_BOB \u003d \"4.5\";"},{"lineNumber":73,"author":{"gitID":"mhq199657"},"content":"    public static final String VALID_RESUME_AMY \u003d RESUME_PATH + \"amy.pdf\";"},{"lineNumber":74,"author":{"gitID":"mhq199657"},"content":"    public static final String VALID_RESUME_BOB \u003d null;"},{"lineNumber":75,"author":{"gitID":"Ang-YC"},"content":"    public static final String VALID_PROFILE_IMAGE_AMY \u003d IMAGE_PATH + \"jobs.jpg\";"},{"lineNumber":76,"author":{"gitID":"Ang-YC"},"content":"    public static final String VALID_PROFILE_IMAGE_BOB \u003d IMAGE_PATH + \"gates.jpg\";"},{"lineNumber":77,"author":{"gitID":"Ang-YC"},"content":"    public static final String VALID_COMMENT_AMY \u003d \"Good interaction skill\";"},{"lineNumber":78,"author":{"gitID":"Ang-YC"},"content":"    public static final String VALID_COMMENT_BOB \u003d \"Great team player\";"},{"lineNumber":79,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":80,"author":{"gitID":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";"},{"lineNumber":81,"author":{"gitID":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";"},{"lineNumber":82,"author":{"gitID":"-"},"content":""},{"lineNumber":83,"author":{"gitID":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;"},{"lineNumber":84,"author":{"gitID":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;"},{"lineNumber":85,"author":{"gitID":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;"},{"lineNumber":86,"author":{"gitID":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;"},{"lineNumber":87,"author":{"gitID":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;"},{"lineNumber":88,"author":{"gitID":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;"},{"lineNumber":89,"author":{"gitID":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;"},{"lineNumber":90,"author":{"gitID":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;"},{"lineNumber":91,"author":{"gitID":"kexiaowen"},"content":"    public static final String UNIVERSITY_DESC_AMY \u003d \" \" + PREFIX_UNIVERSITY + VALID_UNIVERSITY_AMY;"},{"lineNumber":92,"author":{"gitID":"kexiaowen"},"content":"    public static final String UNIVERSITY_DESC_BOB \u003d \" \" + PREFIX_UNIVERSITY + VALID_UNIVERSITY_BOB;"},{"lineNumber":93,"author":{"gitID":"mhq199657"},"content":"    public static final String EXPECTED_GRADUATION_YEAR_DESC_AMY \u003d \" \" + PREFIX_EXPECTED_GRADUATION_YEAR"},{"lineNumber":94,"author":{"gitID":"mhq199657"},"content":"            + VALID_EXPECTED_GRADUATION_YEAR_AMY;"},{"lineNumber":95,"author":{"gitID":"mhq199657"},"content":"    public static final String EXPECTED_GRADUATION_YEAR_DESC_BOB \u003d \" \" + PREFIX_EXPECTED_GRADUATION_YEAR"},{"lineNumber":96,"author":{"gitID":"mhq199657"},"content":"            + VALID_EXPECTED_GRADUATION_YEAR_BOB;"},{"lineNumber":97,"author":{"gitID":"tanhengyeow"},"content":"    public static final String GRADE_POINT_AVERAGE_DESC_AMY \u003d \" \" + PREFIX_GRADE_POINT_AVERAGE"},{"lineNumber":98,"author":{"gitID":"tanhengyeow"},"content":"            + VALID_GRADE_POINT_AVERAGE_AMY;"},{"lineNumber":99,"author":{"gitID":"tanhengyeow"},"content":"    public static final String GRADE_POINT_AVERAGE_DESC_BOB \u003d \" \" + PREFIX_GRADE_POINT_AVERAGE"},{"lineNumber":100,"author":{"gitID":"tanhengyeow"},"content":"            + VALID_GRADE_POINT_AVERAGE_BOB;"},{"lineNumber":101,"author":{"gitID":"tanhengyeow"},"content":"    public static final String MAJOR_DESC_AMY \u003d \" \" + PREFIX_MAJOR + VALID_MAJOR_AMY;"},{"lineNumber":102,"author":{"gitID":"tanhengyeow"},"content":"    public static final String MAJOR_DESC_BOB \u003d \" \" + PREFIX_MAJOR + VALID_MAJOR_BOB;"},{"lineNumber":103,"author":{"gitID":"kexiaowen"},"content":"    public static final String JOB_APPLIED_DESC_AMY \u003d \" \" + PREFIX_JOB_APPLIED + VALID_JOB_APPLIED_AMY;"},{"lineNumber":104,"author":{"gitID":"kexiaowen"},"content":"    public static final String JOB_APPLIED_DESC_BOB \u003d \" \" + PREFIX_JOB_APPLIED + VALID_JOB_APPLIED_BOB;"},{"lineNumber":105,"author":{"gitID":"mhq199657"},"content":"    public static final String RESUME_DESC_AMY \u003d \" \" + PREFIX_RESUME + VALID_RESUME_AMY;"},{"lineNumber":106,"author":{"gitID":"mhq199657"},"content":"    public static final String RESUME_DESC_BOB \u003d \"\";"},{"lineNumber":107,"author":{"gitID":"Ang-YC"},"content":"    public static final String PROFILE_IMAGE_DESC_AMY \u003d \" \" + PREFIX_IMAGE + VALID_PROFILE_IMAGE_AMY;"},{"lineNumber":108,"author":{"gitID":"Ang-YC"},"content":"    public static final String PROFILE_IMAGE_DESC_BOB \u003d \" \" + PREFIX_IMAGE + VALID_PROFILE_IMAGE_BOB;"},{"lineNumber":109,"author":{"gitID":"Ang-YC"},"content":"    public static final String COMMENT_DESC_AMY \u003d \" \" + PREFIX_COMMENT + VALID_COMMENT_AMY;"},{"lineNumber":110,"author":{"gitID":"Ang-YC"},"content":"    public static final String COMMENT_DESC_BOB \u003d \" \" + PREFIX_COMMENT + VALID_COMMENT_BOB;"},{"lineNumber":111,"author":{"gitID":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;"},{"lineNumber":112,"author":{"gitID":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;"},{"lineNumber":113,"author":{"gitID":"-"},"content":""},{"lineNumber":114,"author":{"gitID":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names"},{"lineNumber":115,"author":{"gitID":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones"},{"lineNumber":116,"author":{"gitID":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol"},{"lineNumber":117,"author":{"gitID":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses"},{"lineNumber":118,"author":{"gitID":"kexiaowen"},"content":"    public static final String INVALID_UNIVERSITY_DESC \u003d"},{"lineNumber":119,"author":{"gitID":"kexiaowen"},"content":"            \" \" + PREFIX_UNIVERSITY + \"NU!S\"; // \u0027!\u0027 not allowed for addresses"},{"lineNumber":120,"author":{"gitID":"mhq199657"},"content":"    public static final String INVALID_EXPECTED_GRADUATION_YEAR_DESC \u003d \" \" + PREFIX_EXPECTED_GRADUATION_YEAR"},{"lineNumber":121,"author":{"gitID":"mhq199657"},"content":"            + \"2o20\";"},{"lineNumber":122,"author":{"gitID":"tanhengyeow"},"content":"    public static final String INVALID_GRADE_POINT_AVERAGE_DESC \u003d \" \" + PREFIX_GRADE_POINT_AVERAGE"},{"lineNumber":123,"author":{"gitID":"tanhengyeow"},"content":"            + \"5.1\"; // not in range"},{"lineNumber":124,"author":{"gitID":"tanhengyeow"},"content":"    public static final String INVALID_MAJOR_DESC \u003d \" \" + PREFIX_MAJOR + \"\u0026Computer\"; // \u0027\u0026\u0027 not allowed in major"},{"lineNumber":125,"author":{"gitID":"kexiaowen"},"content":"    public static final String INVALID_JOB_APPLIED_DESC \u003d"},{"lineNumber":126,"author":{"gitID":"kexiaowen"},"content":"            \" \" + PREFIX_JOB_APPLIED + \" \"; // empty string not allowed in job applied"},{"lineNumber":127,"author":{"gitID":"kexiaowen"},"content":"    public static final String INVALID_RATING_DESC \u003d \" \" + PREFIX_TECHNICAL_SKILLS_SCORE + \"-10\""},{"lineNumber":128,"author":{"gitID":"kexiaowen"},"content":"            + \" \" + PREFIX_COMMUNICATION_SKILLS_SCORE + \"0\""},{"lineNumber":129,"author":{"gitID":"kexiaowen"},"content":"            + \" \" + PREFIX_PROBLEM_SOLVING_SKILLS_SCORE + \"7.5\""},{"lineNumber":130,"author":{"gitID":"kexiaowen"},"content":"            + \" \" + PREFIX_EXPERIENCE_SCORE + \"0.5\"; // scores should be between 1 and 5 or equal to default value -1"},{"lineNumber":131,"author":{"gitID":"mhq199657"},"content":"    public static final String INVALID_RESUME_DESC \u003d \" \" + PREFIX_RESUME + \"fileDoesNot.exist\";"},{"lineNumber":132,"author":{"gitID":"Ang-YC"},"content":"    public static final String INVALID_PROFILE_IMAGE_DESC \u003d \" \" + PREFIX_IMAGE + \"fileNotFound.jpg\";"},{"lineNumber":133,"author":{"gitID":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags"},{"lineNumber":134,"author":{"gitID":"-"},"content":""},{"lineNumber":135,"author":{"gitID":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";"},{"lineNumber":136,"author":{"gitID":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";"},{"lineNumber":137,"author":{"gitID":"-"},"content":""},{"lineNumber":138,"author":{"gitID":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;"},{"lineNumber":139,"author":{"gitID":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;"},{"lineNumber":140,"author":{"gitID":"-"},"content":""},{"lineNumber":141,"author":{"gitID":"-"},"content":"    static {"},{"lineNumber":142,"author":{"gitID":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)"},{"lineNumber":143,"author":{"gitID":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)"},{"lineNumber":144,"author":{"gitID":"kexiaowen"},"content":"                .withUniversity(VALID_UNIVERSITY_AMY)"},{"lineNumber":145,"author":{"gitID":"kexiaowen"},"content":"                .withJobApplied(VALID_JOB_APPLIED_AMY)"},{"lineNumber":146,"author":{"gitID":"Ang-YC"},"content":"                .withResume(VALID_RESUME_AMY).withProfileImage(VALID_PROFILE_IMAGE_AMY)"},{"lineNumber":147,"author":{"gitID":"Ang-YC"},"content":"                .withComment(VALID_COMMENT_AMY).withTags(VALID_TAG_FRIEND).build();"},{"lineNumber":148,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":149,"author":{"gitID":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)"},{"lineNumber":150,"author":{"gitID":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)"},{"lineNumber":151,"author":{"gitID":"kexiaowen"},"content":"                .withUniversity(VALID_UNIVERSITY_BOB)"},{"lineNumber":152,"author":{"gitID":"kexiaowen"},"content":"                .withJobApplied(VALID_JOB_APPLIED_BOB)"},{"lineNumber":153,"author":{"gitID":"Ang-YC"},"content":"                .withResume(VALID_RESUME_BOB).withProfileImage(VALID_PROFILE_IMAGE_BOB)"},{"lineNumber":154,"author":{"gitID":"Ang-YC"},"content":"                .withComment(VALID_COMMENT_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();"},{"lineNumber":155,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":156,"author":{"gitID":"-"},"content":""},{"lineNumber":157,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":158,"author":{"gitID":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e"},{"lineNumber":159,"author":{"gitID":"-"},"content":"     * - the result message matches {@code expectedMessage} \u003cbr\u003e"},{"lineNumber":160,"author":{"gitID":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}"},{"lineNumber":161,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":162,"author":{"gitID":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,"},{"lineNumber":163,"author":{"gitID":"-"},"content":"            Model expectedModel) {"},{"lineNumber":164,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":165,"author":{"gitID":"-"},"content":"            CommandResult result \u003d command.execute();"},{"lineNumber":166,"author":{"gitID":"-"},"content":"            assertEquals(expectedMessage, result.feedbackToUser);"},{"lineNumber":167,"author":{"gitID":"-"},"content":"            assertEquals(expectedModel, actualModel);"},{"lineNumber":168,"author":{"gitID":"-"},"content":"        } catch (CommandException ce) {"},{"lineNumber":169,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);"},{"lineNumber":170,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":171,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":172,"author":{"gitID":"-"},"content":""},{"lineNumber":173,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":174,"author":{"gitID":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e"},{"lineNumber":175,"author":{"gitID":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e"},{"lineNumber":176,"author":{"gitID":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e"},{"lineNumber":177,"author":{"gitID":"-"},"content":"     * - the address book and the filtered person list in the {@code actualModel} remain unchanged"},{"lineNumber":178,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":179,"author":{"gitID":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {"},{"lineNumber":180,"author":{"gitID":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can"},{"lineNumber":181,"author":{"gitID":"-"},"content":"        // only do so by copying its components."},{"lineNumber":182,"author":{"gitID":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());"},{"lineNumber":183,"author":{"gitID":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());"},{"lineNumber":184,"author":{"gitID":"-"},"content":""},{"lineNumber":185,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":186,"author":{"gitID":"-"},"content":"            command.execute();"},{"lineNumber":187,"author":{"gitID":"-"},"content":"            fail(\"The expected CommandException was not thrown.\");"},{"lineNumber":188,"author":{"gitID":"-"},"content":"        } catch (CommandException e) {"},{"lineNumber":189,"author":{"gitID":"-"},"content":"            assertEquals(expectedMessage, e.getMessage());"},{"lineNumber":190,"author":{"gitID":"-"},"content":"            assertEquals(expectedAddressBook, actualModel.getAddressBook());"},{"lineNumber":191,"author":{"gitID":"-"},"content":"            assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());"},{"lineNumber":192,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":193,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":194,"author":{"gitID":"-"},"content":""},{"lineNumber":195,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":196,"author":{"gitID":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the"},{"lineNumber":197,"author":{"gitID":"-"},"content":"     * {@code model}\u0027s address book."},{"lineNumber":198,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":199,"author":{"gitID":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {"},{"lineNumber":200,"author":{"gitID":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());"},{"lineNumber":201,"author":{"gitID":"-"},"content":""},{"lineNumber":202,"author":{"gitID":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());"},{"lineNumber":203,"author":{"gitID":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");"},{"lineNumber":204,"author":{"gitID":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));"},{"lineNumber":205,"author":{"gitID":"-"},"content":""},{"lineNumber":206,"author":{"gitID":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());"},{"lineNumber":207,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":208,"author":{"gitID":"-"},"content":""},{"lineNumber":209,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":210,"author":{"gitID":"-"},"content":"     * Deletes the first person in {@code model}\u0027s filtered list from {@code model}\u0027s address book."},{"lineNumber":211,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":212,"author":{"gitID":"-"},"content":"    public static void deleteFirstPerson(Model model) {"},{"lineNumber":213,"author":{"gitID":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(0);"},{"lineNumber":214,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":215,"author":{"gitID":"-"},"content":"            model.deletePerson(firstPerson);"},{"lineNumber":216,"author":{"gitID":"-"},"content":"        } catch (PersonNotFoundException pnfe) {"},{"lineNumber":217,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"Person in filtered list must exist in model.\", pnfe);"},{"lineNumber":218,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":219,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":220,"author":{"gitID":"-"},"content":""},{"lineNumber":221,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":222,"author":{"gitID":"-"},"content":"     * Returns an {@code UndoCommand} with the given {@code model} and {@code undoRedoStack} set."},{"lineNumber":223,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":224,"author":{"gitID":"-"},"content":"    public static UndoCommand prepareUndoCommand(Model model, UndoRedoStack undoRedoStack) {"},{"lineNumber":225,"author":{"gitID":"-"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();"},{"lineNumber":226,"author":{"gitID":"-"},"content":"        undoCommand.setData(model, new CommandHistory(), undoRedoStack);"},{"lineNumber":227,"author":{"gitID":"-"},"content":"        return undoCommand;"},{"lineNumber":228,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":229,"author":{"gitID":"-"},"content":""},{"lineNumber":230,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":231,"author":{"gitID":"-"},"content":"     * Returns a {@code RedoCommand} with the given {@code model} and {@code undoRedoStack} set."},{"lineNumber":232,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":233,"author":{"gitID":"-"},"content":"    public static RedoCommand prepareRedoCommand(Model model, UndoRedoStack undoRedoStack) {"},{"lineNumber":234,"author":{"gitID":"-"},"content":"        RedoCommand redoCommand \u003d new RedoCommand();"},{"lineNumber":235,"author":{"gitID":"-"},"content":"        redoCommand.setData(model, new CommandHistory(), undoRedoStack);"},{"lineNumber":236,"author":{"gitID":"-"},"content":"        return redoCommand;"},{"lineNumber":237,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":238,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"kexiaowen":34,"mhq199657":18,"-":153,"Ang-YC":18,"tanhengyeow":15}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.logic.CommandHistory;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.logic.UndoRedoStack;"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.logic.parser.FindCommandParser;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.model.AddressBook;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}."},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"public class FindCommandTest {"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"    public void execute_noKeywords_invalidCommandFormat() {"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE);"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":"        FindCommand command;"},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        try {"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":"            command \u003d prepareCommand(\" \");"},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"            assertCommandSuccess(command, Collections.emptyList());"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        } catch (ParseException pve) {"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"            if (!pve.getMessage().equals(expectedMessage)) {"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":"                pve.printStackTrace();"},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"            }"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() throws ParseException {"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":"        FindCommand command \u003d prepareCommand(\" Developer, lydia@example.com\");"},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandSuccess(command, Arrays.asList(CARL, FIONA));"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":"    public void execute_singlePrefixWithSingleKeyword_onePersonsFound() throws ParseException {"},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"        FindCommand command \u003d prepareCommand(\" n/Kurz\");"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandSuccess(command, Arrays.asList(CARL, FIONA)); // due to fuzzy search"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"    public void execute_singlePrefixWithMultipleKeywords_multiplePersonsFound() throws ParseException {"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":"        FindCommand command \u003d prepareCommand(\" n/Kurz, Elle, Kunz\");"},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandSuccess(command, Arrays.asList(CARL, ELLE, FIONA));"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":"    public void execute_multiplePrefixesWithSingleKeyword_onePersonsFound() throws ParseException {"},{"lineNumber":69,"author":{"gitID":"tanhengyeow"},"content":"        FindCommand command \u003d prepareCommand(\" n/\\\"arl Kurz\\\" p/95352563\");"},{"lineNumber":70,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandSuccess(command, Arrays.asList(CARL));"},{"lineNumber":71,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":72,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":73,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":74,"author":{"gitID":"tanhengyeow"},"content":"    public void execute_multiplePrefixesWithMultipleKeywords_zeroPersonsFound() throws ParseException {"},{"lineNumber":75,"author":{"gitID":"tanhengyeow"},"content":"        FindCommand command \u003d prepareCommand(\" n/Kurz, Elle, Kunz p/999, 555, \""},{"lineNumber":76,"author":{"gitID":"tanhengyeow"},"content":"                + \"000 e/heinz@example.com a/wall street y/2019\");"},{"lineNumber":77,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandSuccess(command, Arrays.asList());"},{"lineNumber":78,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":79,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":80,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":81,"author":{"gitID":"tanhengyeow"},"content":"    public void execute_allSupportedPrefixesWithSingleKeyword_onePersonsFound() throws ParseException {"},{"lineNumber":82,"author":{"gitID":"tanhengyeow"},"content":"        FindCommand command \u003d prepareCommand(\" n/\\\"arl Kurz\\\" p/95352563 \""},{"lineNumber":83,"author":{"gitID":"tanhengyeow"},"content":"                + \"e/heinz@example.com a/\\\"wall street\\\" u/\\\"SMU\\\" m/Computer* j/*Developer\");"},{"lineNumber":84,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandSuccess(command, Arrays.asList(CARL));"},{"lineNumber":85,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":86,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":87,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":88,"author":{"gitID":"tanhengyeow"},"content":"    public void execute_allSupportedPrefixesWithMultipleKeyword_twoPersonsFound() throws ParseException {"},{"lineNumber":89,"author":{"gitID":"tanhengyeow"},"content":"        FindCommand command \u003d prepareCommand(\" n/\\\"arl Kurz\\\", \\\"Elle\\\" p/95352563, 9482224 \""},{"lineNumber":90,"author":{"gitID":"tanhengyeow"},"content":"                + \"e/heinz@example.com, werner@example.com a/\\\"wall street\\\", michegan\""},{"lineNumber":91,"author":{"gitID":"tanhengyeow"},"content":"                + \" u/\\\"SMU\\\", \\\"NUS\\\" m/Computer*, *Analytics j/*Developer, Big*\");"},{"lineNumber":92,"author":{"gitID":"tanhengyeow"},"content":"        assertCommandSuccess(command, Arrays.asList(CARL, ELLE));"},{"lineNumber":93,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":94,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":95,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":96,"author":{"gitID":"tanhengyeow"},"content":"     * Parses {@code userInput} into a {@code FindCommand}."},{"lineNumber":97,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":98,"author":{"gitID":"tanhengyeow"},"content":"    private FindCommand prepareCommand(String userInput) throws ParseException {"},{"lineNumber":99,"author":{"gitID":"tanhengyeow"},"content":"        FindCommand command \u003d parser.parse(userInput);"},{"lineNumber":100,"author":{"gitID":"tanhengyeow"},"content":"        command.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":101,"author":{"gitID":"tanhengyeow"},"content":"        return command;"},{"lineNumber":102,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":103,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":104,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":105,"author":{"gitID":"tanhengyeow"},"content":"     * Asserts that {@code command} is successfully executed, and\u003cbr\u003e"},{"lineNumber":106,"author":{"gitID":"tanhengyeow"},"content":"     *     - the {@code FilteredList\u003cPerson\u003e} is equal to {@code expectedList}\u003cbr\u003e"},{"lineNumber":107,"author":{"gitID":"tanhengyeow"},"content":"     *     - the {@code AddressBook} in model remains the same after executing the {@code command}"},{"lineNumber":108,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":109,"author":{"gitID":"tanhengyeow"},"content":"    private void assertCommandSuccess(FindCommand command, List\u003cPerson\u003e expectedList) {"},{"lineNumber":110,"author":{"gitID":"tanhengyeow"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(model.getAddressBook());"},{"lineNumber":111,"author":{"gitID":"tanhengyeow"},"content":"        command.execute();"},{"lineNumber":112,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":113,"author":{"gitID":"tanhengyeow"},"content":"        assertEquals(expectedList, model.getFilteredPersonList());"},{"lineNumber":114,"author":{"gitID":"tanhengyeow"},"content":"        assertEquals(expectedAddressBook, model.getAddressBook());"},{"lineNumber":115,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":116,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":24,"tanhengyeow":92}},{"path":"src/test/java/seedu/address/logic/commands/FilterCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"mhq199657"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":3,"author":{"gitID":"mhq199657"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"mhq199657"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"mhq199657"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;"},{"lineNumber":7,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;"},{"lineNumber":8,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;"},{"lineNumber":9,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;"},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;"},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;"},{"lineNumber":12,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;"},{"lineNumber":13,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":14,"author":{"gitID":"mhq199657"},"content":"import java.util.Arrays;"},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":"import java.util.Collections;"},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":"import java.util.List;"},{"lineNumber":17,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":18,"author":{"gitID":"mhq199657"},"content":"import org.junit.Test;"},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;"},{"lineNumber":21,"author":{"gitID":"mhq199657"},"content":"import seedu.address.logic.CommandHistory;"},{"lineNumber":22,"author":{"gitID":"mhq199657"},"content":"import seedu.address.logic.UndoRedoStack;"},{"lineNumber":23,"author":{"gitID":"mhq199657"},"content":"import seedu.address.logic.parser.FilterUtil;"},{"lineNumber":24,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.AddressBook;"},{"lineNumber":25,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.Model;"},{"lineNumber":26,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":27,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":28,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.ExpectedGraduationYear;"},{"lineNumber":29,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.ExpectedGraduationYearInKeywordsRangePredicate;"},{"lineNumber":30,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":31,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":"public class FilterCommandTest {"},{"lineNumber":33,"author":{"gitID":"mhq199657"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());"},{"lineNumber":34,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":35,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":36,"author":{"gitID":"mhq199657"},"content":"    public void equals() {"},{"lineNumber":37,"author":{"gitID":"mhq199657"},"content":"        ExpectedGraduationYearInKeywordsRangePredicate firstPredicate \u003d"},{"lineNumber":38,"author":{"gitID":"mhq199657"},"content":"                new ExpectedGraduationYearInKeywordsRangePredicate("},{"lineNumber":39,"author":{"gitID":"mhq199657"},"content":"                        new ExpectedGraduationYear(\"2018\"), new ExpectedGraduationYear(\"2020\"));"},{"lineNumber":40,"author":{"gitID":"mhq199657"},"content":"        ExpectedGraduationYearInKeywordsRangePredicate secondPredicate \u003d"},{"lineNumber":41,"author":{"gitID":"mhq199657"},"content":"                new ExpectedGraduationYearInKeywordsRangePredicate("},{"lineNumber":42,"author":{"gitID":"mhq199657"},"content":"                        new ExpectedGraduationYear(\"2019\"), new ExpectedGraduationYear(\"2019\"));"},{"lineNumber":43,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":44,"author":{"gitID":"mhq199657"},"content":"        FilterCommand filterFirstCommand \u003d new FilterCommand(firstPredicate);"},{"lineNumber":45,"author":{"gitID":"mhq199657"},"content":"        FilterCommand filterSecondCommand \u003d new FilterCommand(secondPredicate);"},{"lineNumber":46,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":47,"author":{"gitID":"mhq199657"},"content":"        // same object -\u003e returns true"},{"lineNumber":48,"author":{"gitID":"mhq199657"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommand));"},{"lineNumber":49,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":50,"author":{"gitID":"mhq199657"},"content":"        // same values -\u003e returns true"},{"lineNumber":51,"author":{"gitID":"mhq199657"},"content":"        FilterCommand findFirstCommandCopy \u003d new FilterCommand(firstPredicate);"},{"lineNumber":52,"author":{"gitID":"mhq199657"},"content":"        assertTrue(filterFirstCommand.equals(findFirstCommandCopy));"},{"lineNumber":53,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":54,"author":{"gitID":"mhq199657"},"content":"        // different types -\u003e returns false"},{"lineNumber":55,"author":{"gitID":"mhq199657"},"content":"        assertFalse(filterFirstCommand.equals(2020));"},{"lineNumber":56,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":57,"author":{"gitID":"mhq199657"},"content":"        // null -\u003e returns false"},{"lineNumber":58,"author":{"gitID":"mhq199657"},"content":"        assertFalse(filterFirstCommand \u003d\u003d null);"},{"lineNumber":59,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":60,"author":{"gitID":"mhq199657"},"content":"        // different filter command -\u003e returns false"},{"lineNumber":61,"author":{"gitID":"mhq199657"},"content":"        assertFalse(filterFirstCommand.equals(filterSecondCommand));"},{"lineNumber":62,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":64,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":65,"author":{"gitID":"mhq199657"},"content":"    public void execute_noPersonsGraduationYear_noPersonFound() {"},{"lineNumber":66,"author":{"gitID":"mhq199657"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);"},{"lineNumber":67,"author":{"gitID":"mhq199657"},"content":"        FilterCommand command \u003d prepareCommandForExpectedGraduationYearPredicate(\"2017\");"},{"lineNumber":68,"author":{"gitID":"mhq199657"},"content":"        assertCommandSuccess(command, expectedMessage, Collections.emptyList());"},{"lineNumber":69,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":70,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":71,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":72,"author":{"gitID":"mhq199657"},"content":"    public void execute_moderateGraduationYear_somePersonsFound() {"},{"lineNumber":73,"author":{"gitID":"mhq199657"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 4);"},{"lineNumber":74,"author":{"gitID":"mhq199657"},"content":"        FilterCommand command \u003d prepareCommandForExpectedGraduationYearPredicate(\"2019-2020\");"},{"lineNumber":75,"author":{"gitID":"mhq199657"},"content":"        assertCommandSuccess(command, expectedMessage, Arrays.asList(ALICE, CARL, DANIEL,  FIONA));"},{"lineNumber":76,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":77,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":78,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":79,"author":{"gitID":"mhq199657"},"content":"    public void execute_noRating_noPersonFound() {"},{"lineNumber":80,"author":{"gitID":"mhq199657"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);"},{"lineNumber":81,"author":{"gitID":"mhq199657"},"content":"        FilterCommand command \u003d prepareCommandForRatingPredicate(\"1.0\");"},{"lineNumber":82,"author":{"gitID":"mhq199657"},"content":"        assertCommandSuccess(command, expectedMessage, Collections.emptyList());"},{"lineNumber":83,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":84,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":85,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":86,"author":{"gitID":"mhq199657"},"content":"    public void execute_moderateRating_somePersonsFound() {"},{"lineNumber":87,"author":{"gitID":"mhq199657"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);"},{"lineNumber":88,"author":{"gitID":"mhq199657"},"content":"        FilterCommand command \u003d prepareCommandForRatingPredicate(\"2.0-5.0\");"},{"lineNumber":89,"author":{"gitID":"mhq199657"},"content":"        assertCommandSuccess(command, expectedMessage, Arrays.asList(ALICE, BENSON));"},{"lineNumber":90,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":91,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":92,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":93,"author":{"gitID":"mhq199657"},"content":"     * Parses {@code userInput} used for expected graduation year into a {@code FindCommand}."},{"lineNumber":94,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":95,"author":{"gitID":"mhq199657"},"content":"    private FilterCommand prepareCommandForExpectedGraduationYearPredicate(String userInput) {"},{"lineNumber":96,"author":{"gitID":"mhq199657"},"content":"        try {"},{"lineNumber":97,"author":{"gitID":"mhq199657"},"content":"            FilterCommand command \u003d"},{"lineNumber":98,"author":{"gitID":"mhq199657"},"content":"                    new FilterCommand(FilterUtil.parseExpectedGraduationYear(userInput));"},{"lineNumber":99,"author":{"gitID":"mhq199657"},"content":"            command.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":100,"author":{"gitID":"mhq199657"},"content":"            return command;"},{"lineNumber":101,"author":{"gitID":"mhq199657"},"content":"        } catch (IllegalValueException ive) {"},{"lineNumber":102,"author":{"gitID":"mhq199657"},"content":"            throw new AssertionError(\"This should not be reachable.\");"},{"lineNumber":103,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":104,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":105,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":106,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":107,"author":{"gitID":"mhq199657"},"content":"     * Parses {@code userInput} for rating into a {@code FindCommand}."},{"lineNumber":108,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":109,"author":{"gitID":"mhq199657"},"content":"    private FilterCommand prepareCommandForRatingPredicate(String userInput) {"},{"lineNumber":110,"author":{"gitID":"mhq199657"},"content":"        try {"},{"lineNumber":111,"author":{"gitID":"mhq199657"},"content":"            FilterCommand command \u003d"},{"lineNumber":112,"author":{"gitID":"mhq199657"},"content":"                    new FilterCommand(FilterUtil.parseRating(userInput));"},{"lineNumber":113,"author":{"gitID":"mhq199657"},"content":"            command.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":114,"author":{"gitID":"mhq199657"},"content":"            return command;"},{"lineNumber":115,"author":{"gitID":"mhq199657"},"content":"        } catch (IllegalValueException ive) {"},{"lineNumber":116,"author":{"gitID":"mhq199657"},"content":"            throw new AssertionError(\"This should not be reachable.\");"},{"lineNumber":117,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":118,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":119,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":120,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":121,"author":{"gitID":"mhq199657"},"content":"     * Asserts that {@code command} is successfully executed, and\u003cbr\u003e"},{"lineNumber":122,"author":{"gitID":"mhq199657"},"content":"     *     - the command feedback is equal to {@code expectedMessage}\u003cbr\u003e"},{"lineNumber":123,"author":{"gitID":"mhq199657"},"content":"     *     - the {@code FilteredList\u003cPerson\u003e} is equal to {@code expectedList}\u003cbr\u003e"},{"lineNumber":124,"author":{"gitID":"mhq199657"},"content":"     *     - the {@code AddressBook} in model remains the same after executing the {@code command}"},{"lineNumber":125,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":126,"author":{"gitID":"mhq199657"},"content":"    private void assertCommandSuccess(FilterCommand command, String expectedMessage, List\u003cPerson\u003e expectedList) {"},{"lineNumber":127,"author":{"gitID":"mhq199657"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(model.getAddressBook());"},{"lineNumber":128,"author":{"gitID":"mhq199657"},"content":"        CommandResult commandResult \u003d command.execute();"},{"lineNumber":129,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":130,"author":{"gitID":"mhq199657"},"content":"        assertEquals(expectedMessage, commandResult.feedbackToUser);"},{"lineNumber":131,"author":{"gitID":"mhq199657"},"content":"        assertEquals(expectedList, model.getFilteredPersonList());"},{"lineNumber":132,"author":{"gitID":"mhq199657"},"content":"        assertEquals(expectedAddressBook, model.getAddressBook());"},{"lineNumber":133,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":134,"author":{"gitID":"mhq199657"},"content":"}"}],"authorContributionMap":{"mhq199657":133,"-":1}},{"path":"src/test/java/seedu/address/logic/commands/RatingEditCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"kexiaowen"},"content":"import org.junit.Test;"},{"lineNumber":9,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.logic.CommandHistory;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.logic.UndoRedoStack;"},{"lineNumber":13,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.logic.commands.RatingEditCommand.EditRatingDescriptor;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.model.AddressBook;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":16,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":17,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":18,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":19,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.Rating;"},{"lineNumber":20,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.testutil.EditRatingDescriptorBuilder;"},{"lineNumber":21,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":22,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":23,"author":{"gitID":"kexiaowen"},"content":"//@@author kexiaowen"},{"lineNumber":24,"author":{"gitID":"kexiaowen"},"content":"/**"},{"lineNumber":25,"author":{"gitID":"kexiaowen"},"content":" * Contains integration tests (interaction with the Model) and unit tests for RatingEditCommand."},{"lineNumber":26,"author":{"gitID":"kexiaowen"},"content":" */"},{"lineNumber":27,"author":{"gitID":"kexiaowen"},"content":"public class RatingEditCommandTest {"},{"lineNumber":28,"author":{"gitID":"kexiaowen"},"content":"    public static final double TECHNICAL_SKILLS_SCORE \u003d 4;"},{"lineNumber":29,"author":{"gitID":"kexiaowen"},"content":"    public static final double COMMUNICATION_SKILLS_SCORE \u003d 4.5;"},{"lineNumber":30,"author":{"gitID":"kexiaowen"},"content":"    public static final double PROBLEM_SOLVING_SKILLS_SCORE \u003d 3;"},{"lineNumber":31,"author":{"gitID":"kexiaowen"},"content":"    public static final double EXPERIENCE_SCORE \u003d 3.2;"},{"lineNumber":32,"author":{"gitID":"kexiaowen"},"content":"    public static final String TECHNICAL_SKILLS_SCORE_STRING \u003d \"4\";"},{"lineNumber":33,"author":{"gitID":"kexiaowen"},"content":"    public static final String COMMUNICATION_SKILLS_SCORE_STRING \u003d \"4.5\";"},{"lineNumber":34,"author":{"gitID":"kexiaowen"},"content":"    public static final String PROBLEM_SOLVING_SKILLS_SCORE_STRING \u003d \"3\";"},{"lineNumber":35,"author":{"gitID":"kexiaowen"},"content":"    public static final String EXPERIENCE_SCORE_STRING \u003d \"3.2\";"},{"lineNumber":36,"author":{"gitID":"kexiaowen"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());"},{"lineNumber":37,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":38,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":39,"author":{"gitID":"kexiaowen"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() throws Exception {"},{"lineNumber":40,"author":{"gitID":"kexiaowen"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);"},{"lineNumber":41,"author":{"gitID":"kexiaowen"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());"},{"lineNumber":42,"author":{"gitID":"kexiaowen"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withRating(TECHNICAL_SKILLS_SCORE_STRING,"},{"lineNumber":43,"author":{"gitID":"kexiaowen"},"content":"                COMMUNICATION_SKILLS_SCORE_STRING, PROBLEM_SOLVING_SKILLS_SCORE_STRING,"},{"lineNumber":44,"author":{"gitID":"kexiaowen"},"content":"                EXPERIENCE_SCORE_STRING).build();"},{"lineNumber":45,"author":{"gitID":"kexiaowen"},"content":"        Rating rating \u003d new Rating(TECHNICAL_SKILLS_SCORE, COMMUNICATION_SKILLS_SCORE,"},{"lineNumber":46,"author":{"gitID":"kexiaowen"},"content":"                PROBLEM_SOLVING_SKILLS_SCORE, EXPERIENCE_SCORE);"},{"lineNumber":47,"author":{"gitID":"kexiaowen"},"content":"        EditRatingDescriptor descriptor \u003d new EditRatingDescriptorBuilder(rating).build();"},{"lineNumber":48,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":49,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":50,"author":{"gitID":"kexiaowen"},"content":"        RatingEditCommand ratingEditCommand \u003d prepareCommand(INDEX_FIRST_PERSON, descriptor);"},{"lineNumber":51,"author":{"gitID":"kexiaowen"},"content":"        String expectedMessage \u003d String.format(RatingEditCommand.MESSAGE_EDIT_RATING_SUCCESS,"},{"lineNumber":52,"author":{"gitID":"kexiaowen"},"content":"                editedPerson.getName(), editedPerson.getRating().getTechnicalSkillsScore(),"},{"lineNumber":53,"author":{"gitID":"kexiaowen"},"content":"                editedPerson.getRating().getCommunicationSkillsScore(),"},{"lineNumber":54,"author":{"gitID":"kexiaowen"},"content":"                editedPerson.getRating().getProblemSolvingSkillsScore(),"},{"lineNumber":55,"author":{"gitID":"kexiaowen"},"content":"                editedPerson.getRating().getExperienceScore(),"},{"lineNumber":56,"author":{"gitID":"kexiaowen"},"content":"                editedPerson.getRating().getOverallScore());"},{"lineNumber":57,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":58,"author":{"gitID":"kexiaowen"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());"},{"lineNumber":59,"author":{"gitID":"kexiaowen"},"content":"        expectedModel.updatePerson(firstPerson, editedPerson);"},{"lineNumber":60,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":61,"author":{"gitID":"kexiaowen"},"content":"        assertCommandSuccess(ratingEditCommand, model, expectedMessage, expectedModel);"},{"lineNumber":62,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":64,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":65,"author":{"gitID":"kexiaowen"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() throws Exception {"},{"lineNumber":66,"author":{"gitID":"kexiaowen"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());"},{"lineNumber":67,"author":{"gitID":"kexiaowen"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withRating(TECHNICAL_SKILLS_SCORE_STRING,"},{"lineNumber":68,"author":{"gitID":"kexiaowen"},"content":"                COMMUNICATION_SKILLS_SCORE_STRING, PROBLEM_SOLVING_SKILLS_SCORE_STRING,"},{"lineNumber":69,"author":{"gitID":"kexiaowen"},"content":"                Double.toString(firstPerson.getRating().experienceScore)).build();"},{"lineNumber":70,"author":{"gitID":"kexiaowen"},"content":"        Rating rating \u003d new Rating(TECHNICAL_SKILLS_SCORE, COMMUNICATION_SKILLS_SCORE,"},{"lineNumber":71,"author":{"gitID":"kexiaowen"},"content":"                PROBLEM_SOLVING_SKILLS_SCORE, firstPerson.getRating().experienceScore);"},{"lineNumber":72,"author":{"gitID":"kexiaowen"},"content":"        EditRatingDescriptor descriptor \u003d new EditRatingDescriptorBuilder(rating).build();"},{"lineNumber":73,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":74,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":75,"author":{"gitID":"kexiaowen"},"content":"        RatingEditCommand ratingEditCommand \u003d prepareCommand(INDEX_FIRST_PERSON, descriptor);"},{"lineNumber":76,"author":{"gitID":"kexiaowen"},"content":"        String expectedMessage \u003d String.format(RatingEditCommand.MESSAGE_EDIT_RATING_SUCCESS,"},{"lineNumber":77,"author":{"gitID":"kexiaowen"},"content":"                editedPerson.getName(), editedPerson.getRating().getTechnicalSkillsScore(),"},{"lineNumber":78,"author":{"gitID":"kexiaowen"},"content":"                editedPerson.getRating().getCommunicationSkillsScore(),"},{"lineNumber":79,"author":{"gitID":"kexiaowen"},"content":"                editedPerson.getRating().getProblemSolvingSkillsScore(),"},{"lineNumber":80,"author":{"gitID":"kexiaowen"},"content":"                editedPerson.getRating().getExperienceScore(),"},{"lineNumber":81,"author":{"gitID":"kexiaowen"},"content":"                editedPerson.getRating().getOverallScore());"},{"lineNumber":82,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":83,"author":{"gitID":"kexiaowen"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());"},{"lineNumber":84,"author":{"gitID":"kexiaowen"},"content":"        expectedModel.updatePerson(firstPerson, editedPerson);"},{"lineNumber":85,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":86,"author":{"gitID":"kexiaowen"},"content":"        assertCommandSuccess(ratingEditCommand, model, expectedMessage, expectedModel);"},{"lineNumber":87,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":88,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":89,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":90,"author":{"gitID":"kexiaowen"},"content":"     * Returns a {@code RateCommand}."},{"lineNumber":91,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":92,"author":{"gitID":"kexiaowen"},"content":"    private RatingEditCommand prepareCommand(Index index, EditRatingDescriptor editRatingDescriptor) {"},{"lineNumber":93,"author":{"gitID":"kexiaowen"},"content":"        RatingEditCommand ratingEditCommand \u003d new RatingEditCommand(index, editRatingDescriptor);"},{"lineNumber":94,"author":{"gitID":"kexiaowen"},"content":"        ratingEditCommand.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":95,"author":{"gitID":"kexiaowen"},"content":"        return ratingEditCommand;"},{"lineNumber":96,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":97,"author":{"gitID":"kexiaowen"},"content":"}"},{"lineNumber":98,"author":{"gitID":"kexiaowen"},"content":""}],"authorContributionMap":{"kexiaowen":86,"-":12}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static org.junit.Assert.fail;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.logic.CommandHistory;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.logic.UndoRedoStack;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.address.model.AddressBook;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"import seedu.address.model.tag.Tag;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"import seedu.address.model.tag.exceptions.TagNotFoundException;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"public class AddCommandTest {"},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":34,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":35,"author":{"gitID":"-"},"content":""},{"lineNumber":36,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {"},{"lineNumber":38,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":39,"author":{"gitID":"-"},"content":"        new AddCommand(null);"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":41,"author":{"gitID":"-"},"content":""},{"lineNumber":42,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":43,"author":{"gitID":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();"},{"lineNumber":46,"author":{"gitID":"-"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":"        CommandResult commandResult \u003d getAddCommandForPerson(validPerson, modelStub).execute();"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.feedbackToUser);"},{"lineNumber":50,"author":{"gitID":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);"},{"lineNumber":51,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"-"},"content":""},{"lineNumber":53,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":54,"author":{"gitID":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() throws Exception {"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        ModelStub modelStub \u003d new ModelStubThrowingDuplicatePersonException();"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();"},{"lineNumber":57,"author":{"gitID":"-"},"content":""},{"lineNumber":58,"author":{"gitID":"-"},"content":"        thrown.expect(CommandException.class);"},{"lineNumber":59,"author":{"gitID":"-"},"content":"        thrown.expectMessage(AddCommand.MESSAGE_DUPLICATE_PERSON);"},{"lineNumber":60,"author":{"gitID":"-"},"content":""},{"lineNumber":61,"author":{"gitID":"-"},"content":"        getAddCommandForPerson(validPerson, modelStub).execute();"},{"lineNumber":62,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"-"},"content":""},{"lineNumber":64,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":65,"author":{"gitID":"-"},"content":"    public void equals() {"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();"},{"lineNumber":67,"author":{"gitID":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();"},{"lineNumber":68,"author":{"gitID":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);"},{"lineNumber":70,"author":{"gitID":"-"},"content":""},{"lineNumber":71,"author":{"gitID":"-"},"content":"        // same object -\u003e returns true"},{"lineNumber":72,"author":{"gitID":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));"},{"lineNumber":73,"author":{"gitID":"-"},"content":""},{"lineNumber":74,"author":{"gitID":"-"},"content":"        // same values -\u003e returns true"},{"lineNumber":75,"author":{"gitID":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);"},{"lineNumber":76,"author":{"gitID":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));"},{"lineNumber":77,"author":{"gitID":"-"},"content":""},{"lineNumber":78,"author":{"gitID":"-"},"content":"        // different types -\u003e returns false"},{"lineNumber":79,"author":{"gitID":"-"},"content":"        assertFalse(addAliceCommand.equals(1));"},{"lineNumber":80,"author":{"gitID":"-"},"content":""},{"lineNumber":81,"author":{"gitID":"-"},"content":"        // null -\u003e returns false"},{"lineNumber":82,"author":{"gitID":"-"},"content":"        assertFalse(addAliceCommand.equals(null));"},{"lineNumber":83,"author":{"gitID":"-"},"content":""},{"lineNumber":84,"author":{"gitID":"-"},"content":"        // different person -\u003e returns false"},{"lineNumber":85,"author":{"gitID":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));"},{"lineNumber":86,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":87,"author":{"gitID":"-"},"content":""},{"lineNumber":88,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":89,"author":{"gitID":"-"},"content":"     * Generates a new AddCommand with the details of the given person."},{"lineNumber":90,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":91,"author":{"gitID":"-"},"content":"    private AddCommand getAddCommandForPerson(Person person, Model model) {"},{"lineNumber":92,"author":{"gitID":"-"},"content":"        AddCommand command \u003d new AddCommand(person);"},{"lineNumber":93,"author":{"gitID":"-"},"content":"        command.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":94,"author":{"gitID":"-"},"content":"        return command;"},{"lineNumber":95,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":96,"author":{"gitID":"-"},"content":""},{"lineNumber":97,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":98,"author":{"gitID":"-"},"content":"     * A default model stub that have all of the methods failing."},{"lineNumber":99,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":100,"author":{"gitID":"-"},"content":"    private class ModelStub implements Model {"},{"lineNumber":101,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":102,"author":{"gitID":"-"},"content":"        public void addPerson(Person person) throws DuplicatePersonException {"},{"lineNumber":103,"author":{"gitID":"-"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":104,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":105,"author":{"gitID":"-"},"content":""},{"lineNumber":106,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":107,"author":{"gitID":"-"},"content":"        public void resetData(ReadOnlyAddressBook newData) {"},{"lineNumber":108,"author":{"gitID":"-"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":109,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":110,"author":{"gitID":"-"},"content":""},{"lineNumber":111,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":112,"author":{"gitID":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {"},{"lineNumber":113,"author":{"gitID":"-"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":114,"author":{"gitID":"-"},"content":"            return null;"},{"lineNumber":115,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":116,"author":{"gitID":"-"},"content":""},{"lineNumber":117,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":118,"author":{"gitID":"-"},"content":"        public void deletePerson(Person target) throws PersonNotFoundException {"},{"lineNumber":119,"author":{"gitID":"-"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":120,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":121,"author":{"gitID":"-"},"content":""},{"lineNumber":122,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":123,"author":{"gitID":"-"},"content":"        public void updatePerson(Person target, Person editedPerson)"},{"lineNumber":124,"author":{"gitID":"-"},"content":"                throws DuplicatePersonException {"},{"lineNumber":125,"author":{"gitID":"-"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":126,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":127,"author":{"gitID":"-"},"content":""},{"lineNumber":128,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":129,"author":{"gitID":"-"},"content":"        public void deleteTag(Tag tag) throws TagNotFoundException {"},{"lineNumber":130,"author":{"gitID":"-"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":131,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":132,"author":{"gitID":"-"},"content":""},{"lineNumber":133,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":134,"author":{"gitID":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {"},{"lineNumber":135,"author":{"gitID":"-"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":136,"author":{"gitID":"-"},"content":"            return null;"},{"lineNumber":137,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":138,"author":{"gitID":"-"},"content":""},{"lineNumber":139,"author":{"gitID":"kexiaowen"},"content":"        //@@author kexiaowen"},{"lineNumber":140,"author":{"gitID":"kexiaowen"},"content":"        @Override"},{"lineNumber":141,"author":{"gitID":"kexiaowen"},"content":"        public ObservableList\u003cPerson\u003e getActivePersonList() {"},{"lineNumber":142,"author":{"gitID":"kexiaowen"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":143,"author":{"gitID":"kexiaowen"},"content":"            return null;"},{"lineNumber":144,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":145,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":146,"author":{"gitID":"kexiaowen"},"content":"        @Override"},{"lineNumber":147,"author":{"gitID":"kexiaowen"},"content":"        public void setSelectedPerson(Person selectedPerson) {"},{"lineNumber":148,"author":{"gitID":"kexiaowen"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":149,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":150,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":151,"author":{"gitID":"kexiaowen"},"content":"        @Override"},{"lineNumber":152,"author":{"gitID":"kexiaowen"},"content":"        public Person getSelectedPerson() {"},{"lineNumber":153,"author":{"gitID":"kexiaowen"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":154,"author":{"gitID":"kexiaowen"},"content":"            return null;"},{"lineNumber":155,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":156,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":157,"author":{"gitID":"kexiaowen"},"content":"        @Override"},{"lineNumber":158,"author":{"gitID":"kexiaowen"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {"},{"lineNumber":159,"author":{"gitID":"kexiaowen"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":160,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":161,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":162,"author":{"gitID":"kexiaowen"},"content":"        @Override"},{"lineNumber":163,"author":{"gitID":"kexiaowen"},"content":"        public void filterFilteredPersonList(Predicate\u003cPerson\u003e predicate) {"},{"lineNumber":164,"author":{"gitID":"kexiaowen"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":165,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":166,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":167,"author":{"gitID":"kexiaowen"},"content":"        @Override"},{"lineNumber":168,"author":{"gitID":"kexiaowen"},"content":"        public void sortPersonListAscOrder(SortCommand.SortField sortField) {"},{"lineNumber":169,"author":{"gitID":"kexiaowen"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":170,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":171,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":172,"author":{"gitID":"kexiaowen"},"content":"        @Override"},{"lineNumber":173,"author":{"gitID":"kexiaowen"},"content":"        public void sortPersonListDescOrder(SortCommand.SortField sortField) {"},{"lineNumber":174,"author":{"gitID":"kexiaowen"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":175,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":176,"author":{"gitID":"kexiaowen"},"content":"        //@@author"},{"lineNumber":177,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":178,"author":{"gitID":"-"},"content":""},{"lineNumber":179,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":180,"author":{"gitID":"-"},"content":"     * A Model stub that always throw a DuplicatePersonException when trying to add a person."},{"lineNumber":181,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":182,"author":{"gitID":"-"},"content":"    private class ModelStubThrowingDuplicatePersonException extends ModelStub {"},{"lineNumber":183,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":184,"author":{"gitID":"-"},"content":"        public void addPerson(Person person) throws DuplicatePersonException {"},{"lineNumber":185,"author":{"gitID":"-"},"content":"            throw new DuplicatePersonException();"},{"lineNumber":186,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":187,"author":{"gitID":"-"},"content":""},{"lineNumber":188,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":189,"author":{"gitID":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {"},{"lineNumber":190,"author":{"gitID":"-"},"content":"            return new AddressBook();"},{"lineNumber":191,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":192,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":193,"author":{"gitID":"-"},"content":""},{"lineNumber":194,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":195,"author":{"gitID":"-"},"content":"     * A Model stub that always accept the person being added."},{"lineNumber":196,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":197,"author":{"gitID":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {"},{"lineNumber":198,"author":{"gitID":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();"},{"lineNumber":199,"author":{"gitID":"-"},"content":""},{"lineNumber":200,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":201,"author":{"gitID":"-"},"content":"        public void addPerson(Person person) throws DuplicatePersonException {"},{"lineNumber":202,"author":{"gitID":"-"},"content":"            requireNonNull(person);"},{"lineNumber":203,"author":{"gitID":"-"},"content":"            personsAdded.add(person);"},{"lineNumber":204,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":205,"author":{"gitID":"-"},"content":""},{"lineNumber":206,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":207,"author":{"gitID":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {"},{"lineNumber":208,"author":{"gitID":"-"},"content":"            return new AddressBook();"},{"lineNumber":209,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":210,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":211,"author":{"gitID":"-"},"content":""},{"lineNumber":212,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"kexiaowen":38,"-":174}},{"path":"src/test/java/seedu/address/storage/XmlAdaptedPersonTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"Ang-YC"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"Ang-YC"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.address.storage.XmlAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;"},{"lineNumber":7,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Address;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Email;"},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.ExpectedGraduationYear;"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.person.GradePointAverage;"},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.model.person.InterviewDate;"},{"lineNumber":22,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.JobApplied;"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.person.Major;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Name;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Phone;"},{"lineNumber":26,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.Rating;"},{"lineNumber":27,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Status;"},{"lineNumber":28,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.University;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"import seedu.address.testutil.Assert;"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"public class XmlAdaptedPersonTest {"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";"},{"lineNumber":34,"author":{"gitID":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";"},{"lineNumber":35,"author":{"gitID":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";"},{"lineNumber":36,"author":{"gitID":"kexiaowen"},"content":"    private static final String INVALID_UNIVERSITY \u003d \"N{}S\";"},{"lineNumber":37,"author":{"gitID":"mhq199657"},"content":"    private static final String INVALID_EXPECTED_GRADUATION_YEAR \u003d \"2o1o\";"},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"    private static final String INVALID_MAJOR \u003d \"C[]mputer Science\";"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"    private static final String INVALID_GRADE_POINT_AVERAGE \u003d \"4.X\";"},{"lineNumber":40,"author":{"gitID":"kexiaowen"},"content":"    private static final String INVALID_JOB_APPLIED \u003d \" \";"},{"lineNumber":41,"author":{"gitID":"kexiaowen"},"content":"    private static final String INVALID_TECHNICAL_SKILLS_SCORE \u003d \"10\";"},{"lineNumber":42,"author":{"gitID":"kexiaowen"},"content":"    private static final String INVALID_COMMUNICATION_SKILLS_SCORE \u003d \"-1.5\";"},{"lineNumber":43,"author":{"gitID":"kexiaowen"},"content":"    private static final String INVALID_PROBLEM_SOLVING_SKILLS_SCORE \u003d \"0\";"},{"lineNumber":44,"author":{"gitID":"kexiaowen"},"content":"    private static final String INVALID_EXPERIENCE_SCORE \u003d \"5.5\";"},{"lineNumber":45,"author":{"gitID":"Ang-YC"},"content":"    private static final String INVALID_INTERVIEW_DATE \u003d \"Tomorrow\";"},{"lineNumber":46,"author":{"gitID":"mhq199657"},"content":"    private static final String INVALID_STATUS \u003d \"dead\";"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();"},{"lineNumber":50,"author":{"gitID":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();"},{"lineNumber":51,"author":{"gitID":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();"},{"lineNumber":53,"author":{"gitID":"kexiaowen"},"content":"    private static final String VALID_UNIVERSITY \u003d BENSON.getUniversity().toString();"},{"lineNumber":54,"author":{"gitID":"mhq199657"},"content":"    private static final String VALID_EXPECTED_GRADUATION_YEAR \u003d BENSON.getExpectedGraduationYear().toString();"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"    private static final String VALID_MAJOR \u003d BENSON.getMajor().toString();"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":"    private static final String VALID_GRADE_POINT_AVERAGE \u003d BENSON.getGradePointAverage().toString();"},{"lineNumber":57,"author":{"gitID":"kexiaowen"},"content":"    private static final String VALID_JOB_APPLIED \u003d BENSON.getJobApplied().toString();"},{"lineNumber":58,"author":{"gitID":"kexiaowen"},"content":"    private static final String VALID_TECHNICAL_SKILLS_SCORE \u003d Double.toString("},{"lineNumber":59,"author":{"gitID":"kexiaowen"},"content":"            BENSON.getRating().getTechnicalSkillsScore());"},{"lineNumber":60,"author":{"gitID":"kexiaowen"},"content":"    private static final String VALID_COMMUNICATION_SKILLS_SCORE \u003d Double.toString("},{"lineNumber":61,"author":{"gitID":"kexiaowen"},"content":"            BENSON.getRating().getCommunicationSkillsScore());"},{"lineNumber":62,"author":{"gitID":"kexiaowen"},"content":"    private static final String VALID_PROBLEM_SOLVING_SKILLS_SCORE \u003d Double.toString("},{"lineNumber":63,"author":{"gitID":"kexiaowen"},"content":"            BENSON.getRating().getProblemSolvingSkillsScore());"},{"lineNumber":64,"author":{"gitID":"kexiaowen"},"content":"    private static final String VALID_EXPERIENCE_SCORE \u003d Double.toString("},{"lineNumber":65,"author":{"gitID":"kexiaowen"},"content":"            BENSON.getRating().getExperienceScore());"},{"lineNumber":66,"author":{"gitID":"mhq199657"},"content":"    private static final String VALID_RESUME \u003d BENSON.getResume().toString();"},{"lineNumber":67,"author":{"gitID":"Ang-YC"},"content":"    private static final String VALID_PROFILE_IMAGE \u003d BENSON.getProfileImage().toString();"},{"lineNumber":68,"author":{"gitID":"Ang-YC"},"content":"    private static final String VALID_COMMENT \u003d BENSON.getComment().toString();"},{"lineNumber":69,"author":{"gitID":"Ang-YC"},"content":"    private static final String VALID_INTERVIEW_DATE \u003d \"1540814400\";"},{"lineNumber":70,"author":{"gitID":"mhq199657"},"content":"    private static final String VALID_STATUS \u003d BENSON.getStatus().toString();"},{"lineNumber":71,"author":{"gitID":"-"},"content":"    private static final List\u003cXmlAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()"},{"lineNumber":72,"author":{"gitID":"-"},"content":"            .map(XmlAdaptedTag::new)"},{"lineNumber":73,"author":{"gitID":"-"},"content":"            .collect(Collectors.toList());"},{"lineNumber":74,"author":{"gitID":"-"},"content":""},{"lineNumber":75,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":76,"author":{"gitID":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        XmlAdaptedPerson person \u003d new XmlAdaptedPerson(BENSON);"},{"lineNumber":78,"author":{"gitID":"-"},"content":"        assertEquals(BENSON, person.toModelType());"},{"lineNumber":79,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":80,"author":{"gitID":"-"},"content":""},{"lineNumber":81,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":82,"author":{"gitID":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {"},{"lineNumber":83,"author":{"gitID":"-"},"content":"        XmlAdaptedPerson person \u003d"},{"lineNumber":84,"author":{"gitID":"kexiaowen"},"content":"                new XmlAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_UNIVERSITY,"},{"lineNumber":85,"author":{"gitID":"tanhengyeow"},"content":"                    VALID_EXPECTED_GRADUATION_YEAR, VALID_MAJOR,"},{"lineNumber":86,"author":{"gitID":"kexiaowen"},"content":"                    VALID_GRADE_POINT_AVERAGE, VALID_JOB_APPLIED,"},{"lineNumber":87,"author":{"gitID":"tanhengyeow"},"content":"                    VALID_TECHNICAL_SKILLS_SCORE,"},{"lineNumber":88,"author":{"gitID":"kexiaowen"},"content":"                    VALID_COMMUNICATION_SKILLS_SCORE, VALID_PROBLEM_SOLVING_SKILLS_SCORE,"},{"lineNumber":89,"author":{"gitID":"Ang-YC"},"content":"                    VALID_EXPERIENCE_SCORE, VALID_RESUME, VALID_PROFILE_IMAGE, VALID_COMMENT,"},{"lineNumber":90,"author":{"gitID":"kexiaowen"},"content":"                    VALID_INTERVIEW_DATE, VALID_STATUS, VALID_TAGS);"},{"lineNumber":91,"author":{"gitID":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_NAME_CONSTRAINTS;"},{"lineNumber":92,"author":{"gitID":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"},{"lineNumber":93,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":94,"author":{"gitID":"-"},"content":""},{"lineNumber":95,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":96,"author":{"gitID":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {"},{"lineNumber":97,"author":{"gitID":"mhq199657"},"content":"        XmlAdaptedPerson person \u003d new XmlAdaptedPerson(null, VALID_PHONE, VALID_EMAIL,"},{"lineNumber":98,"author":{"gitID":"kexiaowen"},"content":"            VALID_ADDRESS, VALID_UNIVERSITY, VALID_EXPECTED_GRADUATION_YEAR, VALID_MAJOR,"},{"lineNumber":99,"author":{"gitID":"kexiaowen"},"content":"            VALID_GRADE_POINT_AVERAGE, VALID_JOB_APPLIED,"},{"lineNumber":100,"author":{"gitID":"tanhengyeow"},"content":"            VALID_TECHNICAL_SKILLS_SCORE,"},{"lineNumber":101,"author":{"gitID":"kexiaowen"},"content":"            VALID_COMMUNICATION_SKILLS_SCORE, VALID_PROBLEM_SOLVING_SKILLS_SCORE,"},{"lineNumber":102,"author":{"gitID":"Ang-YC"},"content":"            VALID_EXPERIENCE_SCORE, VALID_RESUME, VALID_PROFILE_IMAGE, VALID_COMMENT,"},{"lineNumber":103,"author":{"gitID":"kexiaowen"},"content":"            VALID_INTERVIEW_DATE, VALID_STATUS, VALID_TAGS);"},{"lineNumber":104,"author":{"gitID":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());"},{"lineNumber":105,"author":{"gitID":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"},{"lineNumber":106,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":107,"author":{"gitID":"-"},"content":""},{"lineNumber":108,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":109,"author":{"gitID":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {"},{"lineNumber":110,"author":{"gitID":"-"},"content":"        XmlAdaptedPerson person \u003d"},{"lineNumber":111,"author":{"gitID":"kexiaowen"},"content":"            new XmlAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_UNIVERSITY,"},{"lineNumber":112,"author":{"gitID":"tanhengyeow"},"content":"                VALID_EXPECTED_GRADUATION_YEAR, VALID_MAJOR,"},{"lineNumber":113,"author":{"gitID":"kexiaowen"},"content":"                VALID_GRADE_POINT_AVERAGE, VALID_JOB_APPLIED,"},{"lineNumber":114,"author":{"gitID":"tanhengyeow"},"content":"                VALID_TECHNICAL_SKILLS_SCORE,"},{"lineNumber":115,"author":{"gitID":"kexiaowen"},"content":"                VALID_COMMUNICATION_SKILLS_SCORE, VALID_PROBLEM_SOLVING_SKILLS_SCORE,"},{"lineNumber":116,"author":{"gitID":"Ang-YC"},"content":"                VALID_EXPERIENCE_SCORE, VALID_RESUME, VALID_PROFILE_IMAGE, VALID_COMMENT,"},{"lineNumber":117,"author":{"gitID":"kexiaowen"},"content":"                VALID_INTERVIEW_DATE, VALID_STATUS, VALID_TAGS);"},{"lineNumber":118,"author":{"gitID":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_PHONE_CONSTRAINTS;"},{"lineNumber":119,"author":{"gitID":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"},{"lineNumber":120,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":121,"author":{"gitID":"-"},"content":""},{"lineNumber":122,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":123,"author":{"gitID":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {"},{"lineNumber":124,"author":{"gitID":"mhq199657"},"content":"        XmlAdaptedPerson person \u003d new XmlAdaptedPerson(VALID_NAME, null, VALID_EMAIL,"},{"lineNumber":125,"author":{"gitID":"kexiaowen"},"content":"            VALID_ADDRESS, VALID_UNIVERSITY, VALID_EXPECTED_GRADUATION_YEAR, VALID_MAJOR,"},{"lineNumber":126,"author":{"gitID":"kexiaowen"},"content":"            VALID_GRADE_POINT_AVERAGE,"},{"lineNumber":127,"author":{"gitID":"kexiaowen"},"content":"            VALID_JOB_APPLIED,"},{"lineNumber":128,"author":{"gitID":"tanhengyeow"},"content":"            VALID_TECHNICAL_SKILLS_SCORE,"},{"lineNumber":129,"author":{"gitID":"kexiaowen"},"content":"            VALID_COMMUNICATION_SKILLS_SCORE, VALID_PROBLEM_SOLVING_SKILLS_SCORE,"},{"lineNumber":130,"author":{"gitID":"Ang-YC"},"content":"            VALID_EXPERIENCE_SCORE, VALID_RESUME, VALID_PROFILE_IMAGE, VALID_COMMENT,"},{"lineNumber":131,"author":{"gitID":"kexiaowen"},"content":"            VALID_INTERVIEW_DATE, VALID_STATUS, VALID_TAGS);"},{"lineNumber":132,"author":{"gitID":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());"},{"lineNumber":133,"author":{"gitID":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"},{"lineNumber":134,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":135,"author":{"gitID":"-"},"content":""},{"lineNumber":136,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":137,"author":{"gitID":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {"},{"lineNumber":138,"author":{"gitID":"-"},"content":"        XmlAdaptedPerson person \u003d"},{"lineNumber":139,"author":{"gitID":"kexiaowen"},"content":"            new XmlAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_UNIVERSITY,"},{"lineNumber":140,"author":{"gitID":"tanhengyeow"},"content":"                VALID_EXPECTED_GRADUATION_YEAR, VALID_MAJOR,"},{"lineNumber":141,"author":{"gitID":"kexiaowen"},"content":"                VALID_GRADE_POINT_AVERAGE,"},{"lineNumber":142,"author":{"gitID":"kexiaowen"},"content":"                VALID_JOB_APPLIED,"},{"lineNumber":143,"author":{"gitID":"tanhengyeow"},"content":"                VALID_TECHNICAL_SKILLS_SCORE,"},{"lineNumber":144,"author":{"gitID":"kexiaowen"},"content":"                VALID_COMMUNICATION_SKILLS_SCORE, VALID_PROBLEM_SOLVING_SKILLS_SCORE,"},{"lineNumber":145,"author":{"gitID":"Ang-YC"},"content":"                VALID_EXPERIENCE_SCORE, VALID_RESUME, VALID_PROFILE_IMAGE, VALID_COMMENT,"},{"lineNumber":146,"author":{"gitID":"kexiaowen"},"content":"                VALID_INTERVIEW_DATE, VALID_STATUS, VALID_TAGS);"},{"lineNumber":147,"author":{"gitID":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_EMAIL_CONSTRAINTS;"},{"lineNumber":148,"author":{"gitID":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"},{"lineNumber":149,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":150,"author":{"gitID":"-"},"content":""},{"lineNumber":151,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":152,"author":{"gitID":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {"},{"lineNumber":153,"author":{"gitID":"mhq199657"},"content":"        XmlAdaptedPerson person \u003d new XmlAdaptedPerson(VALID_NAME, VALID_PHONE, null,"},{"lineNumber":154,"author":{"gitID":"kexiaowen"},"content":"            VALID_ADDRESS, VALID_UNIVERSITY, VALID_EXPECTED_GRADUATION_YEAR, VALID_MAJOR,"},{"lineNumber":155,"author":{"gitID":"kexiaowen"},"content":"            VALID_GRADE_POINT_AVERAGE, VALID_JOB_APPLIED,"},{"lineNumber":156,"author":{"gitID":"tanhengyeow"},"content":"            VALID_TECHNICAL_SKILLS_SCORE,"},{"lineNumber":157,"author":{"gitID":"kexiaowen"},"content":"            VALID_COMMUNICATION_SKILLS_SCORE, VALID_PROBLEM_SOLVING_SKILLS_SCORE,"},{"lineNumber":158,"author":{"gitID":"Ang-YC"},"content":"            VALID_EXPERIENCE_SCORE, VALID_RESUME, VALID_PROFILE_IMAGE, VALID_COMMENT,"},{"lineNumber":159,"author":{"gitID":"kexiaowen"},"content":"            VALID_INTERVIEW_DATE, VALID_STATUS, VALID_TAGS);"},{"lineNumber":160,"author":{"gitID":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());"},{"lineNumber":161,"author":{"gitID":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"},{"lineNumber":162,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":163,"author":{"gitID":"-"},"content":""},{"lineNumber":164,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":165,"author":{"gitID":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {"},{"lineNumber":166,"author":{"gitID":"-"},"content":"        XmlAdaptedPerson person \u003d"},{"lineNumber":167,"author":{"gitID":"mhq199657"},"content":"            new XmlAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,"},{"lineNumber":168,"author":{"gitID":"kexiaowen"},"content":"                VALID_UNIVERSITY, VALID_EXPECTED_GRADUATION_YEAR, VALID_MAJOR,"},{"lineNumber":169,"author":{"gitID":"kexiaowen"},"content":"                VALID_GRADE_POINT_AVERAGE, VALID_JOB_APPLIED,"},{"lineNumber":170,"author":{"gitID":"tanhengyeow"},"content":"                VALID_TECHNICAL_SKILLS_SCORE,"},{"lineNumber":171,"author":{"gitID":"kexiaowen"},"content":"                VALID_COMMUNICATION_SKILLS_SCORE, VALID_PROBLEM_SOLVING_SKILLS_SCORE,"},{"lineNumber":172,"author":{"gitID":"Ang-YC"},"content":"                VALID_EXPERIENCE_SCORE, VALID_RESUME, VALID_PROFILE_IMAGE, VALID_COMMENT,"},{"lineNumber":173,"author":{"gitID":"kexiaowen"},"content":"                VALID_INTERVIEW_DATE, VALID_STATUS, VALID_TAGS);"},{"lineNumber":174,"author":{"gitID":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_ADDRESS_CONSTRAINTS;"},{"lineNumber":175,"author":{"gitID":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"},{"lineNumber":176,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":177,"author":{"gitID":"-"},"content":""},{"lineNumber":178,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":179,"author":{"gitID":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {"},{"lineNumber":180,"author":{"gitID":"mhq199657"},"content":"        XmlAdaptedPerson person \u003d new XmlAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,"},{"lineNumber":181,"author":{"gitID":"kexiaowen"},"content":"            null, VALID_UNIVERSITY, VALID_EXPECTED_GRADUATION_YEAR, VALID_MAJOR,"},{"lineNumber":182,"author":{"gitID":"kexiaowen"},"content":"            VALID_GRADE_POINT_AVERAGE, VALID_JOB_APPLIED,"},{"lineNumber":183,"author":{"gitID":"tanhengyeow"},"content":"            VALID_TECHNICAL_SKILLS_SCORE,"},{"lineNumber":184,"author":{"gitID":"kexiaowen"},"content":"            VALID_COMMUNICATION_SKILLS_SCORE, VALID_PROBLEM_SOLVING_SKILLS_SCORE,"},{"lineNumber":185,"author":{"gitID":"Ang-YC"},"content":"            VALID_EXPERIENCE_SCORE, VALID_RESUME, VALID_PROFILE_IMAGE, VALID_COMMENT,"},{"lineNumber":186,"author":{"gitID":"kexiaowen"},"content":"            VALID_INTERVIEW_DATE, VALID_STATUS, VALID_TAGS);"},{"lineNumber":187,"author":{"gitID":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());"},{"lineNumber":188,"author":{"gitID":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"},{"lineNumber":189,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":190,"author":{"gitID":"-"},"content":""},{"lineNumber":191,"author":{"gitID":"kexiaowen"},"content":"    //@@author kexiaowen"},{"lineNumber":192,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":193,"author":{"gitID":"kexiaowen"},"content":"    public void toModelType_invalidUniversity_throwsIllegalValueException() {"},{"lineNumber":194,"author":{"gitID":"kexiaowen"},"content":"        XmlAdaptedPerson person \u003d new XmlAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,"},{"lineNumber":195,"author":{"gitID":"kexiaowen"},"content":"                INVALID_UNIVERSITY, VALID_EXPECTED_GRADUATION_YEAR, VALID_MAJOR,"},{"lineNumber":196,"author":{"gitID":"kexiaowen"},"content":"                VALID_GRADE_POINT_AVERAGE, VALID_JOB_APPLIED, VALID_TECHNICAL_SKILLS_SCORE,"},{"lineNumber":197,"author":{"gitID":"kexiaowen"},"content":"                VALID_COMMUNICATION_SKILLS_SCORE, VALID_PROBLEM_SOLVING_SKILLS_SCORE, VALID_EXPERIENCE_SCORE,"},{"lineNumber":198,"author":{"gitID":"kexiaowen"},"content":"                VALID_RESUME, VALID_PROFILE_IMAGE, VALID_COMMENT, VALID_INTERVIEW_DATE, VALID_STATUS,"},{"lineNumber":199,"author":{"gitID":"kexiaowen"},"content":"                VALID_TAGS);"},{"lineNumber":200,"author":{"gitID":"kexiaowen"},"content":"        String expectedMessage \u003d University.MESSAGE_UNIVERSITY_CONSTRAINTS;"},{"lineNumber":201,"author":{"gitID":"kexiaowen"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"},{"lineNumber":202,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":203,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":204,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":205,"author":{"gitID":"kexiaowen"},"content":"    public void toModelType_nullUniversity_throwsIllegalValueException() {"},{"lineNumber":206,"author":{"gitID":"kexiaowen"},"content":"        XmlAdaptedPerson person \u003d new XmlAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,"},{"lineNumber":207,"author":{"gitID":"kexiaowen"},"content":"                null, VALID_EXPECTED_GRADUATION_YEAR, VALID_MAJOR,"},{"lineNumber":208,"author":{"gitID":"kexiaowen"},"content":"                VALID_GRADE_POINT_AVERAGE, VALID_JOB_APPLIED, VALID_TECHNICAL_SKILLS_SCORE,"},{"lineNumber":209,"author":{"gitID":"kexiaowen"},"content":"                VALID_COMMUNICATION_SKILLS_SCORE, VALID_PROBLEM_SOLVING_SKILLS_SCORE, VALID_EXPERIENCE_SCORE,"},{"lineNumber":210,"author":{"gitID":"kexiaowen"},"content":"                VALID_RESUME, VALID_PROFILE_IMAGE, VALID_COMMENT, VALID_INTERVIEW_DATE, VALID_STATUS,"},{"lineNumber":211,"author":{"gitID":"kexiaowen"},"content":"                VALID_TAGS);"},{"lineNumber":212,"author":{"gitID":"kexiaowen"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT,"},{"lineNumber":213,"author":{"gitID":"kexiaowen"},"content":"                University.class.getSimpleName());"},{"lineNumber":214,"author":{"gitID":"kexiaowen"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"},{"lineNumber":215,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":216,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":217,"author":{"gitID":"kexiaowen"},"content":"    //@@author"},{"lineNumber":218,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":219,"author":{"gitID":"mhq199657"},"content":"    public void toModelType_invalidExpectedGraduationYear_throwsIllegalValueException() {"},{"lineNumber":220,"author":{"gitID":"-"},"content":"        XmlAdaptedPerson person \u003d"},{"lineNumber":221,"author":{"gitID":"mhq199657"},"content":"            new XmlAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,"},{"lineNumber":222,"author":{"gitID":"kexiaowen"},"content":"                VALID_UNIVERSITY, INVALID_EXPECTED_GRADUATION_YEAR, VALID_MAJOR, VALID_GRADE_POINT_AVERAGE,"},{"lineNumber":223,"author":{"gitID":"kexiaowen"},"content":"                VALID_JOB_APPLIED,"},{"lineNumber":224,"author":{"gitID":"tanhengyeow"},"content":"                VALID_TECHNICAL_SKILLS_SCORE,"},{"lineNumber":225,"author":{"gitID":"kexiaowen"},"content":"                VALID_COMMUNICATION_SKILLS_SCORE, VALID_PROBLEM_SOLVING_SKILLS_SCORE,"},{"lineNumber":226,"author":{"gitID":"Ang-YC"},"content":"                VALID_EXPERIENCE_SCORE, VALID_RESUME, VALID_PROFILE_IMAGE, VALID_COMMENT,"},{"lineNumber":227,"author":{"gitID":"kexiaowen"},"content":"                VALID_INTERVIEW_DATE, VALID_STATUS, VALID_TAGS);"},{"lineNumber":228,"author":{"gitID":"mhq199657"},"content":"        String expectedMessage \u003d ExpectedGraduationYear.MESSAGE_EXPECTED_GRADUATION_YEAR_CONSTRAINTS;"},{"lineNumber":229,"author":{"gitID":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"},{"lineNumber":230,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":231,"author":{"gitID":"-"},"content":""},{"lineNumber":232,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":233,"author":{"gitID":"mhq199657"},"content":"    public void toModelType_nullExpectedGraduationYear_throwsIllegalValueException() {"},{"lineNumber":234,"author":{"gitID":"mhq199657"},"content":"        XmlAdaptedPerson person \u003d new XmlAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,"},{"lineNumber":235,"author":{"gitID":"kexiaowen"},"content":"                VALID_ADDRESS, VALID_UNIVERSITY, null, VALID_MAJOR, VALID_GRADE_POINT_AVERAGE,"},{"lineNumber":236,"author":{"gitID":"kexiaowen"},"content":"                VALID_JOB_APPLIED, VALID_TECHNICAL_SKILLS_SCORE,"},{"lineNumber":237,"author":{"gitID":"kexiaowen"},"content":"                VALID_COMMUNICATION_SKILLS_SCORE, VALID_PROBLEM_SOLVING_SKILLS_SCORE,"},{"lineNumber":238,"author":{"gitID":"Ang-YC"},"content":"                VALID_EXPERIENCE_SCORE, VALID_RESUME, VALID_PROFILE_IMAGE, VALID_COMMENT,"},{"lineNumber":239,"author":{"gitID":"kexiaowen"},"content":"                VALID_INTERVIEW_DATE, VALID_STATUS, VALID_TAGS);"},{"lineNumber":240,"author":{"gitID":"mhq199657"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT,"},{"lineNumber":241,"author":{"gitID":"mhq199657"},"content":"                ExpectedGraduationYear.class.getSimpleName());"},{"lineNumber":242,"author":{"gitID":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"},{"lineNumber":243,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":244,"author":{"gitID":"-"},"content":""},{"lineNumber":245,"author":{"gitID":"tanhengyeow"},"content":"    //@@author tanhengyeow"},{"lineNumber":246,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":247,"author":{"gitID":"tanhengyeow"},"content":"    public void toModelType_invalidMajor_throwsIllegalValueException() {"},{"lineNumber":248,"author":{"gitID":"tanhengyeow"},"content":"        XmlAdaptedPerson person \u003d"},{"lineNumber":249,"author":{"gitID":"tanhengyeow"},"content":"                new XmlAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_UNIVERSITY,"},{"lineNumber":250,"author":{"gitID":"tanhengyeow"},"content":"                        VALID_EXPECTED_GRADUATION_YEAR, INVALID_MAJOR, VALID_GRADE_POINT_AVERAGE,"},{"lineNumber":251,"author":{"gitID":"tanhengyeow"},"content":"                        VALID_JOB_APPLIED, VALID_TECHNICAL_SKILLS_SCORE,"},{"lineNumber":252,"author":{"gitID":"tanhengyeow"},"content":"                        VALID_COMMUNICATION_SKILLS_SCORE, VALID_PROBLEM_SOLVING_SKILLS_SCORE,"},{"lineNumber":253,"author":{"gitID":"tanhengyeow"},"content":"                        VALID_EXPERIENCE_SCORE, VALID_RESUME, VALID_PROFILE_IMAGE, VALID_COMMENT,"},{"lineNumber":254,"author":{"gitID":"tanhengyeow"},"content":"                        VALID_INTERVIEW_DATE, VALID_STATUS, VALID_TAGS);"},{"lineNumber":255,"author":{"gitID":"tanhengyeow"},"content":"        String expectedMessage \u003d Major.MESSAGE_MAJOR_CONSTRAINTS;"},{"lineNumber":256,"author":{"gitID":"tanhengyeow"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"},{"lineNumber":257,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":258,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":259,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":260,"author":{"gitID":"tanhengyeow"},"content":"    public void toModelType_nullMajor_throwsIllegalValueException() {"},{"lineNumber":261,"author":{"gitID":"tanhengyeow"},"content":"        XmlAdaptedPerson person \u003d new XmlAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,"},{"lineNumber":262,"author":{"gitID":"tanhengyeow"},"content":"                VALID_ADDRESS, VALID_UNIVERSITY, VALID_EXPECTED_GRADUATION_YEAR, null,"},{"lineNumber":263,"author":{"gitID":"tanhengyeow"},"content":"                VALID_GRADE_POINT_AVERAGE, VALID_JOB_APPLIED, VALID_TECHNICAL_SKILLS_SCORE,"},{"lineNumber":264,"author":{"gitID":"tanhengyeow"},"content":"                VALID_COMMUNICATION_SKILLS_SCORE, VALID_PROBLEM_SOLVING_SKILLS_SCORE,"},{"lineNumber":265,"author":{"gitID":"tanhengyeow"},"content":"                VALID_EXPERIENCE_SCORE, VALID_RESUME, VALID_PROFILE_IMAGE, VALID_COMMENT,"},{"lineNumber":266,"author":{"gitID":"tanhengyeow"},"content":"                VALID_INTERVIEW_DATE, VALID_STATUS, VALID_TAGS);"},{"lineNumber":267,"author":{"gitID":"tanhengyeow"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT,"},{"lineNumber":268,"author":{"gitID":"tanhengyeow"},"content":"                Major.class.getSimpleName());"},{"lineNumber":269,"author":{"gitID":"tanhengyeow"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"},{"lineNumber":270,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":271,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":272,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":273,"author":{"gitID":"tanhengyeow"},"content":"    public void toModelType_invalidGradePointAverage_throwsIllegalValueException() {"},{"lineNumber":274,"author":{"gitID":"tanhengyeow"},"content":"        XmlAdaptedPerson person \u003d"},{"lineNumber":275,"author":{"gitID":"tanhengyeow"},"content":"                new XmlAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_UNIVERSITY,"},{"lineNumber":276,"author":{"gitID":"tanhengyeow"},"content":"                        VALID_EXPECTED_GRADUATION_YEAR, VALID_MAJOR,"},{"lineNumber":277,"author":{"gitID":"tanhengyeow"},"content":"                        INVALID_GRADE_POINT_AVERAGE, VALID_JOB_APPLIED, VALID_TECHNICAL_SKILLS_SCORE,"},{"lineNumber":278,"author":{"gitID":"tanhengyeow"},"content":"                        VALID_COMMUNICATION_SKILLS_SCORE, VALID_PROBLEM_SOLVING_SKILLS_SCORE,"},{"lineNumber":279,"author":{"gitID":"tanhengyeow"},"content":"                        VALID_EXPERIENCE_SCORE, VALID_RESUME, VALID_PROFILE_IMAGE, VALID_COMMENT,"},{"lineNumber":280,"author":{"gitID":"tanhengyeow"},"content":"                        VALID_INTERVIEW_DATE, VALID_STATUS, VALID_TAGS);"},{"lineNumber":281,"author":{"gitID":"tanhengyeow"},"content":"        String expectedMessage \u003d GradePointAverage.MESSAGE_GRADE_POINT_AVERAGE_CONSTRAINTS;"},{"lineNumber":282,"author":{"gitID":"tanhengyeow"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"},{"lineNumber":283,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":284,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":285,"author":{"gitID":"kexiaowen"},"content":"    //@@author kexiaowen"},{"lineNumber":286,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":287,"author":{"gitID":"kexiaowen"},"content":"    public void toModelType_invalidJobApplied_throwsIllegalValueException() {"},{"lineNumber":288,"author":{"gitID":"kexiaowen"},"content":"        XmlAdaptedPerson person \u003d new XmlAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,"},{"lineNumber":289,"author":{"gitID":"kexiaowen"},"content":"                VALID_ADDRESS, VALID_UNIVERSITY, VALID_EXPECTED_GRADUATION_YEAR, VALID_MAJOR, VALID_GRADE_POINT_AVERAGE,"},{"lineNumber":290,"author":{"gitID":"kexiaowen"},"content":"                INVALID_JOB_APPLIED, VALID_TECHNICAL_SKILLS_SCORE, VALID_COMMUNICATION_SKILLS_SCORE,"},{"lineNumber":291,"author":{"gitID":"kexiaowen"},"content":"                VALID_PROBLEM_SOLVING_SKILLS_SCORE, VALID_EXPERIENCE_SCORE, VALID_RESUME,"},{"lineNumber":292,"author":{"gitID":"kexiaowen"},"content":"                VALID_PROFILE_IMAGE, VALID_COMMENT,"},{"lineNumber":293,"author":{"gitID":"kexiaowen"},"content":"                VALID_INTERVIEW_DATE, VALID_STATUS, VALID_TAGS);"},{"lineNumber":294,"author":{"gitID":"kexiaowen"},"content":"        String expectedMessage \u003d JobApplied.MESSAGE_JOB_APPLIED_CONSTRAINTS;"},{"lineNumber":295,"author":{"gitID":"kexiaowen"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"},{"lineNumber":296,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":297,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":298,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":299,"author":{"gitID":"kexiaowen"},"content":"    public void toModelType_nullJobApplied_throwsIllegalValueException() {"},{"lineNumber":300,"author":{"gitID":"kexiaowen"},"content":"        XmlAdaptedPerson person \u003d new XmlAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,"},{"lineNumber":301,"author":{"gitID":"kexiaowen"},"content":"                VALID_ADDRESS, VALID_UNIVERSITY, VALID_EXPECTED_GRADUATION_YEAR, VALID_MAJOR, VALID_GRADE_POINT_AVERAGE,"},{"lineNumber":302,"author":{"gitID":"kexiaowen"},"content":"                null, VALID_TECHNICAL_SKILLS_SCORE, VALID_COMMUNICATION_SKILLS_SCORE,"},{"lineNumber":303,"author":{"gitID":"kexiaowen"},"content":"                VALID_PROBLEM_SOLVING_SKILLS_SCORE, VALID_EXPERIENCE_SCORE, VALID_RESUME,"},{"lineNumber":304,"author":{"gitID":"kexiaowen"},"content":"                VALID_PROFILE_IMAGE, VALID_COMMENT,"},{"lineNumber":305,"author":{"gitID":"kexiaowen"},"content":"                VALID_INTERVIEW_DATE, VALID_STATUS, VALID_TAGS);"},{"lineNumber":306,"author":{"gitID":"kexiaowen"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT,"},{"lineNumber":307,"author":{"gitID":"kexiaowen"},"content":"                JobApplied.class.getSimpleName());"},{"lineNumber":308,"author":{"gitID":"kexiaowen"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"},{"lineNumber":309,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":310,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":311,"author":{"gitID":"tanhengyeow"},"content":"    //@@author tanhengyeow"},{"lineNumber":312,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":313,"author":{"gitID":"tanhengyeow"},"content":"    public void toModelType_nullGradePointAverage_throwsIllegalValueException() {"},{"lineNumber":314,"author":{"gitID":"tanhengyeow"},"content":"        XmlAdaptedPerson person \u003d new XmlAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,"},{"lineNumber":315,"author":{"gitID":"tanhengyeow"},"content":"                VALID_ADDRESS, VALID_UNIVERSITY, VALID_EXPECTED_GRADUATION_YEAR, VALID_MAJOR,"},{"lineNumber":316,"author":{"gitID":"tanhengyeow"},"content":"                null, VALID_JOB_APPLIED, VALID_TECHNICAL_SKILLS_SCORE,"},{"lineNumber":317,"author":{"gitID":"tanhengyeow"},"content":"                VALID_COMMUNICATION_SKILLS_SCORE, VALID_PROBLEM_SOLVING_SKILLS_SCORE,"},{"lineNumber":318,"author":{"gitID":"tanhengyeow"},"content":"                VALID_EXPERIENCE_SCORE, VALID_RESUME, VALID_PROFILE_IMAGE, VALID_COMMENT,"},{"lineNumber":319,"author":{"gitID":"tanhengyeow"},"content":"                VALID_INTERVIEW_DATE, VALID_STATUS, VALID_TAGS);"},{"lineNumber":320,"author":{"gitID":"tanhengyeow"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT,"},{"lineNumber":321,"author":{"gitID":"tanhengyeow"},"content":"                GradePointAverage.class.getSimpleName());"},{"lineNumber":322,"author":{"gitID":"tanhengyeow"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"},{"lineNumber":323,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":324,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":325,"author":{"gitID":"kexiaowen"},"content":"    //@@author kexiaowen"},{"lineNumber":326,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":327,"author":{"gitID":"kexiaowen"},"content":"    public void toModelType_invalidRating_throwsIllegalValueException() {"},{"lineNumber":328,"author":{"gitID":"kexiaowen"},"content":"        XmlAdaptedPerson person \u003d new XmlAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,"},{"lineNumber":329,"author":{"gitID":"kexiaowen"},"content":"                VALID_ADDRESS, VALID_UNIVERSITY, VALID_EXPECTED_GRADUATION_YEAR, VALID_MAJOR, VALID_GRADE_POINT_AVERAGE,"},{"lineNumber":330,"author":{"gitID":"kexiaowen"},"content":"                VALID_JOB_APPLIED, INVALID_TECHNICAL_SKILLS_SCORE, INVALID_COMMUNICATION_SKILLS_SCORE,"},{"lineNumber":331,"author":{"gitID":"kexiaowen"},"content":"                INVALID_PROBLEM_SOLVING_SKILLS_SCORE, INVALID_EXPERIENCE_SCORE,"},{"lineNumber":332,"author":{"gitID":"kexiaowen"},"content":"                VALID_RESUME, VALID_PROFILE_IMAGE, VALID_COMMENT,"},{"lineNumber":333,"author":{"gitID":"kexiaowen"},"content":"                VALID_INTERVIEW_DATE, VALID_STATUS, VALID_TAGS);"},{"lineNumber":334,"author":{"gitID":"kexiaowen"},"content":"        String expectedMessage \u003d Rating.MESSAGE_RATING_CONSTRAINTS;"},{"lineNumber":335,"author":{"gitID":"kexiaowen"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"},{"lineNumber":336,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":337,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":338,"author":{"gitID":"Ang-YC"},"content":"    //@@author Ang-YC"},{"lineNumber":339,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":340,"author":{"gitID":"Ang-YC"},"content":"    public void toModelType_invalidInterviewDate_throwsIllegalValueException() {"},{"lineNumber":341,"author":{"gitID":"Ang-YC"},"content":"        XmlAdaptedPerson person \u003d"},{"lineNumber":342,"author":{"gitID":"Ang-YC"},"content":"                new XmlAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_UNIVERSITY,"},{"lineNumber":343,"author":{"gitID":"Ang-YC"},"content":"                        VALID_EXPECTED_GRADUATION_YEAR, VALID_MAJOR,"},{"lineNumber":344,"author":{"gitID":"Ang-YC"},"content":"                        VALID_GRADE_POINT_AVERAGE, VALID_JOB_APPLIED, VALID_TECHNICAL_SKILLS_SCORE,"},{"lineNumber":345,"author":{"gitID":"Ang-YC"},"content":"                        VALID_COMMUNICATION_SKILLS_SCORE, VALID_PROBLEM_SOLVING_SKILLS_SCORE,"},{"lineNumber":346,"author":{"gitID":"Ang-YC"},"content":"                        VALID_EXPERIENCE_SCORE, VALID_RESUME, VALID_PROFILE_IMAGE, VALID_COMMENT,"},{"lineNumber":347,"author":{"gitID":"Ang-YC"},"content":"                        INVALID_INTERVIEW_DATE, VALID_STATUS, VALID_TAGS);"},{"lineNumber":348,"author":{"gitID":"Ang-YC"},"content":"        String expectedMessage \u003d InterviewDate.MESSAGE_INTERVIEW_DATE_XML_ERROR;"},{"lineNumber":349,"author":{"gitID":"Ang-YC"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"},{"lineNumber":350,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":351,"author":{"gitID":"Ang-YC"},"content":"    //@@author"},{"lineNumber":352,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":353,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":354,"author":{"gitID":"mhq199657"},"content":"    public void toModelType_nullStatus_throwsIllegalValueException() {"},{"lineNumber":355,"author":{"gitID":"mhq199657"},"content":"        XmlAdaptedPerson person \u003d new XmlAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,"},{"lineNumber":356,"author":{"gitID":"kexiaowen"},"content":"                VALID_ADDRESS, VALID_UNIVERSITY, VALID_EXPECTED_GRADUATION_YEAR, VALID_MAJOR,"},{"lineNumber":357,"author":{"gitID":"kexiaowen"},"content":"                VALID_GRADE_POINT_AVERAGE, VALID_JOB_APPLIED, VALID_TECHNICAL_SKILLS_SCORE,"},{"lineNumber":358,"author":{"gitID":"kexiaowen"},"content":"                VALID_COMMUNICATION_SKILLS_SCORE, VALID_PROBLEM_SOLVING_SKILLS_SCORE,"},{"lineNumber":359,"author":{"gitID":"Ang-YC"},"content":"                VALID_EXPERIENCE_SCORE, VALID_RESUME, VALID_PROFILE_IMAGE, VALID_COMMENT,"},{"lineNumber":360,"author":{"gitID":"Ang-YC"},"content":"                VALID_INTERVIEW_DATE, null, VALID_TAGS);"},{"lineNumber":361,"author":{"gitID":"mhq199657"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT,"},{"lineNumber":362,"author":{"gitID":"mhq199657"},"content":"                Status.class.getSimpleName());"},{"lineNumber":363,"author":{"gitID":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"},{"lineNumber":364,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":365,"author":{"gitID":"-"},"content":""},{"lineNumber":366,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":367,"author":{"gitID":"mhq199657"},"content":"    public void toModelType_invalidStatus_throwsIllegalValueException() {"},{"lineNumber":368,"author":{"gitID":"-"},"content":"        XmlAdaptedPerson person \u003d"},{"lineNumber":369,"author":{"gitID":"kexiaowen"},"content":"                new XmlAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_UNIVERSITY,"},{"lineNumber":370,"author":{"gitID":"tanhengyeow"},"content":"                        VALID_EXPECTED_GRADUATION_YEAR, VALID_MAJOR, VALID_GRADE_POINT_AVERAGE,"},{"lineNumber":371,"author":{"gitID":"kexiaowen"},"content":"                        VALID_JOB_APPLIED, VALID_TECHNICAL_SKILLS_SCORE,"},{"lineNumber":372,"author":{"gitID":"kexiaowen"},"content":"                        VALID_COMMUNICATION_SKILLS_SCORE, VALID_PROBLEM_SOLVING_SKILLS_SCORE,"},{"lineNumber":373,"author":{"gitID":"Ang-YC"},"content":"                        VALID_EXPERIENCE_SCORE, VALID_RESUME, VALID_PROFILE_IMAGE, VALID_COMMENT,"},{"lineNumber":374,"author":{"gitID":"Ang-YC"},"content":"                        VALID_INTERVIEW_DATE, INVALID_STATUS, VALID_TAGS);"},{"lineNumber":375,"author":{"gitID":"mhq199657"},"content":"        String expectedMessage \u003d Status.MESSAGE_STATUS_CONSTRAINTS;"},{"lineNumber":376,"author":{"gitID":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"},{"lineNumber":377,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":378,"author":{"gitID":"-"},"content":""},{"lineNumber":379,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":380,"author":{"gitID":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {"},{"lineNumber":381,"author":{"gitID":"-"},"content":"        List\u003cXmlAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);"},{"lineNumber":382,"author":{"gitID":"-"},"content":"        invalidTags.add(new XmlAdaptedTag(INVALID_TAG));"},{"lineNumber":383,"author":{"gitID":"-"},"content":"        XmlAdaptedPerson person \u003d"},{"lineNumber":384,"author":{"gitID":"kexiaowen"},"content":"                new XmlAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_UNIVERSITY,"},{"lineNumber":385,"author":{"gitID":"tanhengyeow"},"content":"                        VALID_EXPECTED_GRADUATION_YEAR, VALID_MAJOR,"},{"lineNumber":386,"author":{"gitID":"kexiaowen"},"content":"                        VALID_GRADE_POINT_AVERAGE, VALID_JOB_APPLIED, VALID_TECHNICAL_SKILLS_SCORE,"},{"lineNumber":387,"author":{"gitID":"kexiaowen"},"content":"                        VALID_COMMUNICATION_SKILLS_SCORE, VALID_PROBLEM_SOLVING_SKILLS_SCORE,"},{"lineNumber":388,"author":{"gitID":"Ang-YC"},"content":"                        VALID_EXPERIENCE_SCORE, VALID_RESUME, VALID_PROFILE_IMAGE, VALID_COMMENT,"},{"lineNumber":389,"author":{"gitID":"Ang-YC"},"content":"                        VALID_INTERVIEW_DATE, VALID_STATUS, invalidTags);"},{"lineNumber":390,"author":{"gitID":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, person::toModelType);"},{"lineNumber":391,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":392,"author":{"gitID":"-"},"content":""},{"lineNumber":393,"author":{"gitID":"Ang-YC"},"content":"    //@@author Ang-YC"},{"lineNumber":394,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":395,"author":{"gitID":"Ang-YC"},"content":"    public void equals_sameObject_returnsTrue() {"},{"lineNumber":396,"author":{"gitID":"Ang-YC"},"content":"        XmlAdaptedPerson person \u003d new XmlAdaptedPerson(BENSON);"},{"lineNumber":397,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(person.equals(person));"},{"lineNumber":398,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":399,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":400,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":401,"author":{"gitID":"Ang-YC"},"content":"    public void equals_differentValues_returnsFalse() {"},{"lineNumber":402,"author":{"gitID":"Ang-YC"},"content":"        XmlAdaptedPerson alice \u003d new XmlAdaptedPerson(ALICE);"},{"lineNumber":403,"author":{"gitID":"Ang-YC"},"content":"        XmlAdaptedPerson benson \u003d new XmlAdaptedPerson(BENSON);"},{"lineNumber":404,"author":{"gitID":"Ang-YC"},"content":"        assertFalse(alice.equals(benson));"},{"lineNumber":405,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":406,"author":{"gitID":"Ang-YC"},"content":"    //@@author"},{"lineNumber":407,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"kexiaowen":136,"mhq199657":28,"-":116,"Ang-YC":53,"tanhengyeow":74}},{"path":"src/test/java/seedu/address/storage/XmlAddressBookStorageTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import org.junit.rules.TemporaryFolder;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.FileUtil;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.model.AddressBook;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"public class XmlAddressBookStorageTest {"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    private static final String TEST_DATA_FOLDER \u003d FileUtil.getPath(\"./src/test/data/XmlAddressBookStorageTest/\");"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    public TemporaryFolder testFolder \u003d new TemporaryFolder();"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() throws Exception {"},{"lineNumber":33,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":34,"author":{"gitID":"-"},"content":"        readAddressBook(null);"},{"lineNumber":35,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {"},{"lineNumber":38,"author":{"gitID":"-"},"content":"        return new XmlAddressBookStorage(filePath).readAddressBook(addToTestDataPathIfNotNull(filePath));"},{"lineNumber":39,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"-"},"content":""},{"lineNumber":41,"author":{"gitID":"-"},"content":"    private String addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null"},{"lineNumber":43,"author":{"gitID":"-"},"content":"                ? TEST_DATA_FOLDER + prefsFileInTestDataFolder"},{"lineNumber":44,"author":{"gitID":"-"},"content":"                : null;"},{"lineNumber":45,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"-"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":48,"author":{"gitID":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.xml\").isPresent());"},{"lineNumber":50,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":53,"author":{"gitID":"-"},"content":"    public void read_notXmlFormat_exceptionThrown() throws Exception {"},{"lineNumber":54,"author":{"gitID":"-"},"content":""},{"lineNumber":55,"author":{"gitID":"-"},"content":"        thrown.expect(DataConversionException.class);"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        readAddressBook(\"NotXmlFormatAddressBook.xml\");"},{"lineNumber":57,"author":{"gitID":"-"},"content":""},{"lineNumber":58,"author":{"gitID":"-"},"content":"        /* IMPORTANT: Any code below an exception-throwing line (like the one above) will be ignored."},{"lineNumber":59,"author":{"gitID":"-"},"content":"         * That means you should not have more than one exception test in one method"},{"lineNumber":60,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":61,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":62,"author":{"gitID":"-"},"content":""},{"lineNumber":63,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":64,"author":{"gitID":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() throws Exception {"},{"lineNumber":65,"author":{"gitID":"-"},"content":"        thrown.expect(DataConversionException.class);"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        readAddressBook(\"invalidPersonAddressBook.xml\");"},{"lineNumber":67,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"-"},"content":""},{"lineNumber":69,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":70,"author":{"gitID":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() throws Exception {"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        thrown.expect(DataConversionException.class);"},{"lineNumber":72,"author":{"gitID":"-"},"content":"        readAddressBook(\"invalidAndValidPersonAddressBook.xml\");"},{"lineNumber":73,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitID":"-"},"content":""},{"lineNumber":75,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":76,"author":{"gitID":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        String filePath \u003d testFolder.getRoot().getPath() + \"TempAddressBook.xml\";"},{"lineNumber":78,"author":{"gitID":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();"},{"lineNumber":79,"author":{"gitID":"-"},"content":"        XmlAddressBookStorage xmlAddressBookStorage \u003d new XmlAddressBookStorage(filePath);"},{"lineNumber":80,"author":{"gitID":"-"},"content":""},{"lineNumber":81,"author":{"gitID":"-"},"content":"        //Save in new file and read back"},{"lineNumber":82,"author":{"gitID":"-"},"content":"        xmlAddressBookStorage.saveAddressBook(original, filePath);"},{"lineNumber":83,"author":{"gitID":"-"},"content":"        ReadOnlyAddressBook readBack \u003d xmlAddressBookStorage.readAddressBook(filePath).get();"},{"lineNumber":84,"author":{"gitID":"-"},"content":"        assertEquals(original, new AddressBook(readBack));"},{"lineNumber":85,"author":{"gitID":"-"},"content":""},{"lineNumber":86,"author":{"gitID":"-"},"content":"        //Modify data, overwrite exiting file, and read back"},{"lineNumber":87,"author":{"gitID":"-"},"content":"        original.addPerson(HOON);"},{"lineNumber":88,"author":{"gitID":"-"},"content":"        original.removePerson(ALICE);"},{"lineNumber":89,"author":{"gitID":"-"},"content":"        xmlAddressBookStorage.saveAddressBook(original, filePath);"},{"lineNumber":90,"author":{"gitID":"-"},"content":"        readBack \u003d xmlAddressBookStorage.readAddressBook(filePath).get();"},{"lineNumber":91,"author":{"gitID":"-"},"content":"        assertEquals(original, new AddressBook(readBack));"},{"lineNumber":92,"author":{"gitID":"-"},"content":""},{"lineNumber":93,"author":{"gitID":"-"},"content":"        //Save and read without specifying file path"},{"lineNumber":94,"author":{"gitID":"-"},"content":"        original.addPerson(IDA);"},{"lineNumber":95,"author":{"gitID":"-"},"content":"        xmlAddressBookStorage.saveAddressBook(original); //file path not specified"},{"lineNumber":96,"author":{"gitID":"-"},"content":"        readBack \u003d xmlAddressBookStorage.readAddressBook().get(); //file path not specified"},{"lineNumber":97,"author":{"gitID":"-"},"content":"        assertEquals(original, new AddressBook(readBack));"},{"lineNumber":98,"author":{"gitID":"-"},"content":""},{"lineNumber":99,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":100,"author":{"gitID":"-"},"content":""},{"lineNumber":101,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":102,"author":{"gitID":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {"},{"lineNumber":103,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":104,"author":{"gitID":"-"},"content":"        saveAddressBook(null, \"SomeFile.xml\");"},{"lineNumber":105,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":106,"author":{"gitID":"-"},"content":""},{"lineNumber":107,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":108,"author":{"gitID":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}."},{"lineNumber":109,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":110,"author":{"gitID":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {"},{"lineNumber":111,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":112,"author":{"gitID":"-"},"content":"            new XmlAddressBookStorage(filePath).saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));"},{"lineNumber":113,"author":{"gitID":"-"},"content":"        } catch (IOException ioe) {"},{"lineNumber":114,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);"},{"lineNumber":115,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":116,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":117,"author":{"gitID":"-"},"content":""},{"lineNumber":118,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":119,"author":{"gitID":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() throws IOException {"},{"lineNumber":120,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":121,"author":{"gitID":"-"},"content":"        saveAddressBook(new AddressBook(), null);"},{"lineNumber":122,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":123,"author":{"gitID":"-"},"content":""},{"lineNumber":124,"author":{"gitID":"tanhengyeow"},"content":"    //@@author tanhengyeow"},{"lineNumber":125,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":126,"author":{"gitID":"tanhengyeow"},"content":"    public void backupAddressBook_nullAddressBook_throwsNullPointerException() {"},{"lineNumber":127,"author":{"gitID":"tanhengyeow"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":128,"author":{"gitID":"tanhengyeow"},"content":"        backupAddressBook(null, TEST_DATA_FOLDER + \"test.bak\");"},{"lineNumber":129,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":130,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":131,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":132,"author":{"gitID":"tanhengyeow"},"content":"     * Backups {@code addressBook} at the specified {@code filePath}."},{"lineNumber":133,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":134,"author":{"gitID":"tanhengyeow"},"content":"    private void backupAddressBook(ReadOnlyAddressBook addressBook, String filePath) {"},{"lineNumber":135,"author":{"gitID":"tanhengyeow"},"content":"        try {"},{"lineNumber":136,"author":{"gitID":"tanhengyeow"},"content":"            new XmlAddressBookStorage(filePath).backupAddressBook(addressBook);"},{"lineNumber":137,"author":{"gitID":"tanhengyeow"},"content":"        } catch (IOException ioe) {"},{"lineNumber":138,"author":{"gitID":"tanhengyeow"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);"},{"lineNumber":139,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":140,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":141,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":142,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":143,"author":{"gitID":"tanhengyeow"},"content":"    public void backupAddressBook_nullFilePath_throwsNullPointerException() throws IOException {"},{"lineNumber":144,"author":{"gitID":"tanhengyeow"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":145,"author":{"gitID":"tanhengyeow"},"content":"        backupAddressBook(new AddressBook(), null);"},{"lineNumber":146,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":147,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":148,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":149,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":123,"tanhengyeow":26}},{"path":"src/test/java/seedu/address/logic/commands/ShowCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"Ang-YC"},"content":"import org.junit.Rule;"},{"lineNumber":10,"author":{"gitID":"Ang-YC"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.BaseEvent;"},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.commons.events.ui.ShowPanelRequestEvent;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.logic.CommandHistory;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.logic.UndoRedoStack;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.address.testutil.TypicalPersons;"},{"lineNumber":22,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.ui.InfoPanel;"},{"lineNumber":23,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.ui.PdfPanel;"},{"lineNumber":24,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.ui.testutil.EventsCollectorRule;"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"Ang-YC"},"content":"//@@author Ang-YC"},{"lineNumber":27,"author":{"gitID":"Ang-YC"},"content":"public class ShowCommandTest {"},{"lineNumber":28,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":29,"author":{"gitID":"Ang-YC"},"content":"    @Rule"},{"lineNumber":30,"author":{"gitID":"Ang-YC"},"content":"    public final EventsCollectorRule eventsCollectorRule \u003d new EventsCollectorRule();"},{"lineNumber":31,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":32,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":33,"author":{"gitID":"Ang-YC"},"content":"    public void execute_resume_success() {"},{"lineNumber":34,"author":{"gitID":"Ang-YC"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());"},{"lineNumber":35,"author":{"gitID":"Ang-YC"},"content":"        model.setSelectedPerson(TypicalPersons.ALICE);"},{"lineNumber":36,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":37,"author":{"gitID":"Ang-YC"},"content":"        Command command \u003d new ShowCommand(ShowCommand.Panel.RESUME);"},{"lineNumber":38,"author":{"gitID":"Ang-YC"},"content":"        command.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":39,"author":{"gitID":"Ang-YC"},"content":"        assertCommandSuccess(command, model, ShowCommand.MESSAGE_SHOW_SUCCESS, model);"},{"lineNumber":40,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":41,"author":{"gitID":"Ang-YC"},"content":"        BaseEvent baseEvent \u003d eventsCollectorRule.eventsCollector.getMostRecent();"},{"lineNumber":42,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(baseEvent instanceof ShowPanelRequestEvent);"},{"lineNumber":43,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(eventsCollectorRule.eventsCollector.getSize() \u003d\u003d 1);"},{"lineNumber":44,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":45,"author":{"gitID":"Ang-YC"},"content":"        ShowPanelRequestEvent event \u003d (ShowPanelRequestEvent) baseEvent;"},{"lineNumber":46,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(event.getRequestedPanel().equals(PdfPanel.PANEL_NAME));"},{"lineNumber":47,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":48,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":49,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":50,"author":{"gitID":"Ang-YC"},"content":"    public void execute_info_success() {"},{"lineNumber":51,"author":{"gitID":"Ang-YC"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());"},{"lineNumber":52,"author":{"gitID":"Ang-YC"},"content":"        model.setSelectedPerson(TypicalPersons.ALICE);"},{"lineNumber":53,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":54,"author":{"gitID":"Ang-YC"},"content":"        Command command \u003d new ShowCommand(ShowCommand.Panel.INFO);"},{"lineNumber":55,"author":{"gitID":"Ang-YC"},"content":"        command.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":56,"author":{"gitID":"Ang-YC"},"content":"        assertCommandSuccess(command, model, ShowCommand.MESSAGE_SHOW_SUCCESS, model);"},{"lineNumber":57,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":58,"author":{"gitID":"Ang-YC"},"content":"        BaseEvent baseEvent \u003d eventsCollectorRule.eventsCollector.getMostRecent();"},{"lineNumber":59,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(baseEvent instanceof ShowPanelRequestEvent);"},{"lineNumber":60,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(eventsCollectorRule.eventsCollector.getSize() \u003d\u003d 1);"},{"lineNumber":61,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":62,"author":{"gitID":"Ang-YC"},"content":"        ShowPanelRequestEvent event \u003d (ShowPanelRequestEvent) baseEvent;"},{"lineNumber":63,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(event.getRequestedPanel().equals(InfoPanel.PANEL_NAME));"},{"lineNumber":64,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":65,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":66,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":67,"author":{"gitID":"Ang-YC"},"content":"    public void execute_noResume_throws() throws Exception {"},{"lineNumber":68,"author":{"gitID":"Ang-YC"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());"},{"lineNumber":69,"author":{"gitID":"Ang-YC"},"content":"        Person aliceWithoutResume \u003d new PersonBuilder(TypicalPersons.ALICE).withResumeLazy(null).build();"},{"lineNumber":70,"author":{"gitID":"Ang-YC"},"content":"        model.updatePerson(TypicalPersons.ALICE, aliceWithoutResume);"},{"lineNumber":71,"author":{"gitID":"Ang-YC"},"content":"        model.setSelectedPerson(aliceWithoutResume);"},{"lineNumber":72,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":73,"author":{"gitID":"Ang-YC"},"content":"        // Remove PersonChangedEvent"},{"lineNumber":74,"author":{"gitID":"Ang-YC"},"content":"        eventsCollectorRule.eventsCollector.reset();"},{"lineNumber":75,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":76,"author":{"gitID":"Ang-YC"},"content":"        Command command \u003d new ShowCommand(ShowCommand.Panel.RESUME);"},{"lineNumber":77,"author":{"gitID":"Ang-YC"},"content":"        command.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":78,"author":{"gitID":"Ang-YC"},"content":"        assertCommandFailure(command, model, ShowCommand.MESSAGE_RESUME_NA);"},{"lineNumber":79,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":80,"author":{"gitID":"Ang-YC"},"content":"        BaseEvent baseEvent \u003d eventsCollectorRule.eventsCollector.getMostRecent();"},{"lineNumber":81,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(baseEvent \u003d\u003d null);"},{"lineNumber":82,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(eventsCollectorRule.eventsCollector.getSize() \u003d\u003d 0);"},{"lineNumber":83,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":84,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":85,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":86,"author":{"gitID":"Ang-YC"},"content":"    public void execute_noSelected_throws() {"},{"lineNumber":87,"author":{"gitID":"Ang-YC"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());"},{"lineNumber":88,"author":{"gitID":"Ang-YC"},"content":"        model.setSelectedPerson(null);"},{"lineNumber":89,"author":{"gitID":"Ang-YC"},"content":"        // No one is selected"},{"lineNumber":90,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":91,"author":{"gitID":"Ang-YC"},"content":"        Command command \u003d new ShowCommand(ShowCommand.Panel.INFO);"},{"lineNumber":92,"author":{"gitID":"Ang-YC"},"content":"        command.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":93,"author":{"gitID":"Ang-YC"},"content":"        assertCommandFailure(command, model, ShowCommand.MESSAGE_NOT_SELECTED);"},{"lineNumber":94,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":95,"author":{"gitID":"Ang-YC"},"content":"        BaseEvent baseEvent \u003d eventsCollectorRule.eventsCollector.getMostRecent();"},{"lineNumber":96,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(baseEvent \u003d\u003d null);"},{"lineNumber":97,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(eventsCollectorRule.eventsCollector.getSize() \u003d\u003d 0);"},{"lineNumber":98,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":99,"author":{"gitID":"Ang-YC"},"content":"        command \u003d new ShowCommand(ShowCommand.Panel.RESUME);"},{"lineNumber":100,"author":{"gitID":"Ang-YC"},"content":"        command.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":101,"author":{"gitID":"Ang-YC"},"content":"        assertCommandFailure(command, model, ShowCommand.MESSAGE_NOT_SELECTED);"},{"lineNumber":102,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":103,"author":{"gitID":"Ang-YC"},"content":"        baseEvent \u003d eventsCollectorRule.eventsCollector.getMostRecent();"},{"lineNumber":104,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(baseEvent \u003d\u003d null);"},{"lineNumber":105,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(eventsCollectorRule.eventsCollector.getSize() \u003d\u003d 0);"},{"lineNumber":106,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":107,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":108,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":109,"author":{"gitID":"Ang-YC"},"content":"    public void equals() {"},{"lineNumber":110,"author":{"gitID":"Ang-YC"},"content":"        ShowCommand command \u003d new ShowCommand(ShowCommand.Panel.RESUME);"},{"lineNumber":111,"author":{"gitID":"Ang-YC"},"content":"        ShowCommand commandWithSameValues \u003d new ShowCommand(ShowCommand.Panel.RESUME);"},{"lineNumber":112,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":113,"author":{"gitID":"Ang-YC"},"content":"        // same values -\u003e returns true"},{"lineNumber":114,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(command.equals(commandWithSameValues));"},{"lineNumber":115,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":116,"author":{"gitID":"Ang-YC"},"content":"        // Same object -\u003e returns true"},{"lineNumber":117,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(command.equals(command));"},{"lineNumber":118,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":119,"author":{"gitID":"Ang-YC"},"content":"        // Null -\u003e returns false"},{"lineNumber":120,"author":{"gitID":"Ang-YC"},"content":"        assertFalse(command.equals(null));"},{"lineNumber":121,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":122,"author":{"gitID":"Ang-YC"},"content":"        // Different types -\u003e returns false"},{"lineNumber":123,"author":{"gitID":"Ang-YC"},"content":"        assertFalse(command.equals(new ClearCommand()));"},{"lineNumber":124,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":125,"author":{"gitID":"Ang-YC"},"content":"        // Different panel -\u003e returns false"},{"lineNumber":126,"author":{"gitID":"Ang-YC"},"content":"        assertFalse(command.equals(new ShowCommand(ShowCommand.Panel.INFO)));"},{"lineNumber":127,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":128,"author":{"gitID":"Ang-YC"},"content":"}"}],"authorContributionMap":{"-":18,"Ang-YC":110}},{"path":"src/test/java/seedu/address/logic/commands/RatingDeleteCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"kexiaowen"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":3,"author":{"gitID":"kexiaowen"},"content":"import static org.junit.Assert.assertNotEquals;"},{"lineNumber":4,"author":{"gitID":"kexiaowen"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;"},{"lineNumber":6,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"},{"lineNumber":7,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.prepareRedoCommand;"},{"lineNumber":8,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.prepareUndoCommand;"},{"lineNumber":9,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"},{"lineNumber":11,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;"},{"lineNumber":12,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;"},{"lineNumber":13,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;"},{"lineNumber":14,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":15,"author":{"gitID":"kexiaowen"},"content":"import org.junit.Test;"},{"lineNumber":16,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":17,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.commons.core.Messages;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.logic.CommandHistory;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.logic.UndoRedoStack;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.address.model.AddressBook;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":23,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":24,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":25,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":26,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":27,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":28,"author":{"gitID":"kexiaowen"},"content":"//@@author kexiaowen"},{"lineNumber":29,"author":{"gitID":"kexiaowen"},"content":"/**"},{"lineNumber":30,"author":{"gitID":"kexiaowen"},"content":" * Contains integration tests (interaction with the Model) and unit tests for RateCommand."},{"lineNumber":31,"author":{"gitID":"kexiaowen"},"content":" */"},{"lineNumber":32,"author":{"gitID":"kexiaowen"},"content":"public class RatingDeleteCommandTest {"},{"lineNumber":33,"author":{"gitID":"kexiaowen"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());"},{"lineNumber":34,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":35,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":36,"author":{"gitID":"kexiaowen"},"content":"    public void execute_validIndexUnfilteredList_success() throws Exception {"},{"lineNumber":37,"author":{"gitID":"kexiaowen"},"content":"        Person personToDeleteRating \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());"},{"lineNumber":38,"author":{"gitID":"kexiaowen"},"content":"        RatingDeleteCommand ratingDeleteCommand \u003d prepareCommand(INDEX_FIRST_PERSON);"},{"lineNumber":39,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":40,"author":{"gitID":"kexiaowen"},"content":"        PersonBuilder firstPerson \u003d new PersonBuilder(personToDeleteRating);"},{"lineNumber":41,"author":{"gitID":"kexiaowen"},"content":"        Person editedPerson \u003d firstPerson.withRating(\"-1\", \"-1\","},{"lineNumber":42,"author":{"gitID":"kexiaowen"},"content":"                \"-1\", \"-1\").build();"},{"lineNumber":43,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":44,"author":{"gitID":"kexiaowen"},"content":"        String expectedMessage \u003d String.format(RatingDeleteCommand.MESSAGE_DELETE_RATING_SUCCESS,"},{"lineNumber":45,"author":{"gitID":"kexiaowen"},"content":"                personToDeleteRating.getName());"},{"lineNumber":46,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":47,"author":{"gitID":"kexiaowen"},"content":"        ModelManager expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());"},{"lineNumber":48,"author":{"gitID":"kexiaowen"},"content":"        expectedModel.updatePerson(personToDeleteRating, editedPerson);"},{"lineNumber":49,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":50,"author":{"gitID":"kexiaowen"},"content":"        assertCommandSuccess(ratingDeleteCommand, model, expectedMessage, expectedModel);"},{"lineNumber":51,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":53,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":54,"author":{"gitID":"kexiaowen"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() throws Exception {"},{"lineNumber":55,"author":{"gitID":"kexiaowen"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);"},{"lineNumber":56,"author":{"gitID":"kexiaowen"},"content":"        RatingDeleteCommand ratingDeleteCommand \u003d prepareCommand(outOfBoundIndex);"},{"lineNumber":57,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":58,"author":{"gitID":"kexiaowen"},"content":"        assertCommandFailure(ratingDeleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"},{"lineNumber":59,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":60,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":61,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":62,"author":{"gitID":"kexiaowen"},"content":"    public void execute_validIndexFilteredList_success() throws Exception {"},{"lineNumber":63,"author":{"gitID":"kexiaowen"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);"},{"lineNumber":64,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":65,"author":{"gitID":"kexiaowen"},"content":"        Person personToDeleteRating \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());"},{"lineNumber":66,"author":{"gitID":"kexiaowen"},"content":"        RatingDeleteCommand ratingDeleteCommand \u003d prepareCommand(INDEX_FIRST_PERSON);"},{"lineNumber":67,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":68,"author":{"gitID":"kexiaowen"},"content":"        PersonBuilder firstPerson \u003d new PersonBuilder(personToDeleteRating);"},{"lineNumber":69,"author":{"gitID":"kexiaowen"},"content":"        Person editedPerson \u003d firstPerson.withRating(\"-1\", \"-1\","},{"lineNumber":70,"author":{"gitID":"kexiaowen"},"content":"                \"-1\", \"-1\").build();"},{"lineNumber":71,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":72,"author":{"gitID":"kexiaowen"},"content":"        String expectedMessage \u003d String.format(RatingDeleteCommand.MESSAGE_DELETE_RATING_SUCCESS,"},{"lineNumber":73,"author":{"gitID":"kexiaowen"},"content":"                personToDeleteRating.getName());"},{"lineNumber":74,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":75,"author":{"gitID":"kexiaowen"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());"},{"lineNumber":76,"author":{"gitID":"kexiaowen"},"content":"        expectedModel.updatePerson(personToDeleteRating, editedPerson);"},{"lineNumber":77,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":78,"author":{"gitID":"kexiaowen"},"content":"        assertCommandSuccess(ratingDeleteCommand, model, expectedMessage, expectedModel);"},{"lineNumber":79,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":80,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":81,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":82,"author":{"gitID":"kexiaowen"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {"},{"lineNumber":83,"author":{"gitID":"kexiaowen"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);"},{"lineNumber":84,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":85,"author":{"gitID":"kexiaowen"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;"},{"lineNumber":86,"author":{"gitID":"kexiaowen"},"content":"        // ensures that outOfBoundIndex is still in bounds of list of candidates"},{"lineNumber":87,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());"},{"lineNumber":88,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":89,"author":{"gitID":"kexiaowen"},"content":"        RatingDeleteCommand ratingDeleteCommand \u003d prepareCommand(outOfBoundIndex);"},{"lineNumber":90,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":91,"author":{"gitID":"kexiaowen"},"content":"        assertCommandFailure(ratingDeleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"},{"lineNumber":92,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":93,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":94,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":95,"author":{"gitID":"kexiaowen"},"content":"    public void execute_personNotRated_throwsCommandException() {"},{"lineNumber":96,"author":{"gitID":"kexiaowen"},"content":"        Person personNotRated \u003d model.getFilteredPersonList().get(INDEX_THIRD_PERSON.getZeroBased());"},{"lineNumber":97,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":98,"author":{"gitID":"kexiaowen"},"content":"        RatingDeleteCommand ratingDeleteCommand \u003d prepareCommand(INDEX_THIRD_PERSON);"},{"lineNumber":99,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":100,"author":{"gitID":"kexiaowen"},"content":"        String expectedMessage \u003d String.format(RatingDeleteCommand.MESSAGE_PERSON_NOT_RATED,"},{"lineNumber":101,"author":{"gitID":"kexiaowen"},"content":"                personNotRated.getName());"},{"lineNumber":102,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":103,"author":{"gitID":"kexiaowen"},"content":"        assertCommandFailure(ratingDeleteCommand, model, expectedMessage);"},{"lineNumber":104,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":105,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":106,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":107,"author":{"gitID":"kexiaowen"},"content":"    public void executeUndoRedo_validIndexUnfilteredList_success() throws Exception {"},{"lineNumber":108,"author":{"gitID":"kexiaowen"},"content":"        UndoRedoStack undoRedoStack \u003d new UndoRedoStack();"},{"lineNumber":109,"author":{"gitID":"kexiaowen"},"content":"        UndoCommand undoCommand \u003d prepareUndoCommand(model, undoRedoStack);"},{"lineNumber":110,"author":{"gitID":"kexiaowen"},"content":"        RedoCommand redoCommand \u003d prepareRedoCommand(model, undoRedoStack);"},{"lineNumber":111,"author":{"gitID":"kexiaowen"},"content":"        Person personToDeleteRating \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());"},{"lineNumber":112,"author":{"gitID":"kexiaowen"},"content":"        PersonBuilder firstPerson \u003d new PersonBuilder(personToDeleteRating);"},{"lineNumber":113,"author":{"gitID":"kexiaowen"},"content":"        Person editedPerson \u003d firstPerson.withRating(\"-1\", \"-1\","},{"lineNumber":114,"author":{"gitID":"kexiaowen"},"content":"                \"-1\", \"-1\").build();"},{"lineNumber":115,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":116,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":117,"author":{"gitID":"kexiaowen"},"content":"        RatingDeleteCommand ratingDeleteCommand \u003d prepareCommand(INDEX_FIRST_PERSON);"},{"lineNumber":118,"author":{"gitID":"kexiaowen"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());"},{"lineNumber":119,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":120,"author":{"gitID":"kexiaowen"},"content":"        // deleteRating -\u003e first person\u0027s rating deleted"},{"lineNumber":121,"author":{"gitID":"kexiaowen"},"content":"        ratingDeleteCommand.execute();"},{"lineNumber":122,"author":{"gitID":"kexiaowen"},"content":"        undoRedoStack.push(ratingDeleteCommand);"},{"lineNumber":123,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":124,"author":{"gitID":"kexiaowen"},"content":"        // undo -\u003e reverts HR+ back to previous state and filtered person list to show all persons"},{"lineNumber":125,"author":{"gitID":"kexiaowen"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":126,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":127,"author":{"gitID":"kexiaowen"},"content":"        // redo -\u003e same first person\u0027s rating deleted again"},{"lineNumber":128,"author":{"gitID":"kexiaowen"},"content":"        expectedModel.updatePerson(personToDeleteRating, editedPerson);"},{"lineNumber":129,"author":{"gitID":"kexiaowen"},"content":"        assertCommandSuccess(redoCommand, model, RedoCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":130,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":131,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":132,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":133,"author":{"gitID":"kexiaowen"},"content":"    public void executeUndoRedo_invalidIndexUnfilteredList_failure() {"},{"lineNumber":134,"author":{"gitID":"kexiaowen"},"content":"        UndoRedoStack undoRedoStack \u003d new UndoRedoStack();"},{"lineNumber":135,"author":{"gitID":"kexiaowen"},"content":"        UndoCommand undoCommand \u003d prepareUndoCommand(model, undoRedoStack);"},{"lineNumber":136,"author":{"gitID":"kexiaowen"},"content":"        RedoCommand redoCommand \u003d prepareRedoCommand(model, undoRedoStack);"},{"lineNumber":137,"author":{"gitID":"kexiaowen"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);"},{"lineNumber":138,"author":{"gitID":"kexiaowen"},"content":"        RatingDeleteCommand ratingDeleteCommand \u003d prepareCommand(outOfBoundIndex);"},{"lineNumber":139,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":140,"author":{"gitID":"kexiaowen"},"content":"        // execution failed -\u003e ratingDeleteCommand not pushed into undoRedoStack"},{"lineNumber":141,"author":{"gitID":"kexiaowen"},"content":"        assertCommandFailure(ratingDeleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"},{"lineNumber":142,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":143,"author":{"gitID":"kexiaowen"},"content":"        // no commands in undoRedoStack -\u003e undoCommand and redoCommand fail"},{"lineNumber":144,"author":{"gitID":"kexiaowen"},"content":"        assertCommandFailure(undoCommand, model, UndoCommand.MESSAGE_FAILURE);"},{"lineNumber":145,"author":{"gitID":"kexiaowen"},"content":"        assertCommandFailure(redoCommand, model, RedoCommand.MESSAGE_FAILURE);"},{"lineNumber":146,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":147,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":148,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":149,"author":{"gitID":"kexiaowen"},"content":"     * 1. Modifies {@code Person#remark} from a filtered list."},{"lineNumber":150,"author":{"gitID":"kexiaowen"},"content":"     * 2. Undo the modification."},{"lineNumber":151,"author":{"gitID":"kexiaowen"},"content":"     * 3. The unfiltered list should be shown now. Verify that the index of the previously modified person in the"},{"lineNumber":152,"author":{"gitID":"kexiaowen"},"content":"     * unfiltered list is different from the index at the filtered list."},{"lineNumber":153,"author":{"gitID":"kexiaowen"},"content":"     * 4. Redo the modification. This ensures {@code RedoCommand} modifies the person object regardless of indexing."},{"lineNumber":154,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":155,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":156,"author":{"gitID":"kexiaowen"},"content":"    public void executeUndoRedo_validIndexFilteredList_samePersonDeletedRating() throws Exception {"},{"lineNumber":157,"author":{"gitID":"kexiaowen"},"content":"        UndoRedoStack undoRedoStack \u003d new UndoRedoStack();"},{"lineNumber":158,"author":{"gitID":"kexiaowen"},"content":"        UndoCommand undoCommand \u003d prepareUndoCommand(model, undoRedoStack);"},{"lineNumber":159,"author":{"gitID":"kexiaowen"},"content":"        RedoCommand redoCommand \u003d prepareRedoCommand(model, undoRedoStack);"},{"lineNumber":160,"author":{"gitID":"kexiaowen"},"content":"        RatingDeleteCommand ratingDeleteCommand \u003d prepareCommand(INDEX_FIRST_PERSON);"},{"lineNumber":161,"author":{"gitID":"kexiaowen"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());"},{"lineNumber":162,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":163,"author":{"gitID":"kexiaowen"},"content":"        showPersonAtIndex(model, INDEX_SECOND_PERSON);"},{"lineNumber":164,"author":{"gitID":"kexiaowen"},"content":"        Person personToModify \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());"},{"lineNumber":165,"author":{"gitID":"kexiaowen"},"content":"        Person modifiedPerson \u003d new PersonBuilder(personToModify).withRating(\"-1\","},{"lineNumber":166,"author":{"gitID":"kexiaowen"},"content":"                \"-1\", \"-1\", \"-1\").build();"},{"lineNumber":167,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":168,"author":{"gitID":"kexiaowen"},"content":"        // deleteRating -\u003e modifies second person in unfiltered person list / first person in filtered person list"},{"lineNumber":169,"author":{"gitID":"kexiaowen"},"content":"        ratingDeleteCommand.execute();"},{"lineNumber":170,"author":{"gitID":"kexiaowen"},"content":"        undoRedoStack.push(ratingDeleteCommand);"},{"lineNumber":171,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":172,"author":{"gitID":"kexiaowen"},"content":"        // undo -\u003e reverts HR+ back to previous state and filtered person list to show all persons"},{"lineNumber":173,"author":{"gitID":"kexiaowen"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":174,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":175,"author":{"gitID":"kexiaowen"},"content":"        expectedModel.updatePerson(personToModify, modifiedPerson);"},{"lineNumber":176,"author":{"gitID":"kexiaowen"},"content":"        assertNotEquals(personToModify, model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()));"},{"lineNumber":177,"author":{"gitID":"kexiaowen"},"content":"        // redo -\u003e modifies same second person in unfiltered person list"},{"lineNumber":178,"author":{"gitID":"kexiaowen"},"content":"        assertCommandSuccess(redoCommand, model, RedoCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":179,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":180,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":181,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":182,"author":{"gitID":"kexiaowen"},"content":"     * Returns a {@code RatingDeleteCommand} with the parameter {@code index}."},{"lineNumber":183,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":184,"author":{"gitID":"kexiaowen"},"content":"    private RatingDeleteCommand prepareCommand(Index index) {"},{"lineNumber":185,"author":{"gitID":"kexiaowen"},"content":"        RatingDeleteCommand ratingDeleteCommand \u003d new RatingDeleteCommand(index);"},{"lineNumber":186,"author":{"gitID":"kexiaowen"},"content":"        ratingDeleteCommand.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":187,"author":{"gitID":"kexiaowen"},"content":"        return ratingDeleteCommand;"},{"lineNumber":188,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":189,"author":{"gitID":"kexiaowen"},"content":"}"}],"authorContributionMap":{"kexiaowen":183,"-":6}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","lines":[{"lineNumber":1,"author":{"gitID":"kexiaowen"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":3,"author":{"gitID":"Ang-YC"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"Ang-YC"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":6,"author":{"gitID":"kexiaowen"},"content":"import org.junit.Test;"},{"lineNumber":7,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":8,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.address.testutil.TypicalPersons;"},{"lineNumber":10,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":11,"author":{"gitID":"Ang-YC"},"content":"//@@author Ang-YC"},{"lineNumber":12,"author":{"gitID":"Ang-YC"},"content":"public class PersonTest {"},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":14,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":15,"author":{"gitID":"Ang-YC"},"content":"    public void infoEquals() {"},{"lineNumber":16,"author":{"gitID":"Ang-YC"},"content":"        Person alice \u003d TypicalPersons.ALICE;"},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":"        Person clone \u003d new PersonBuilder(alice).build();"},{"lineNumber":18,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":19,"author":{"gitID":"Ang-YC"},"content":"        // Same instance"},{"lineNumber":20,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(alice.infoEquals(alice));"},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":22,"author":{"gitID":"Ang-YC"},"content":"        // Clone"},{"lineNumber":23,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(alice.infoEquals(clone));"},{"lineNumber":24,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":25,"author":{"gitID":"Ang-YC"},"content":"        // Different people"},{"lineNumber":26,"author":{"gitID":"Ang-YC"},"content":"        assertFalse(alice.infoEquals(TypicalPersons.BOB));"},{"lineNumber":27,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":28,"author":{"gitID":"Ang-YC"},"content":"}"}],"authorContributionMap":{"kexiaowen":5,"-":1,"Ang-YC":22}},{"path":"src/test/java/seedu/address/logic/commands/StatusCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"kexiaowen"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":3,"author":{"gitID":"kexiaowen"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"kexiaowen"},"content":"import static org.junit.Assert.assertNotEquals;"},{"lineNumber":5,"author":{"gitID":"kexiaowen"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;"},{"lineNumber":7,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"},{"lineNumber":8,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.prepareRedoCommand;"},{"lineNumber":9,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.prepareUndoCommand;"},{"lineNumber":10,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;"},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.InterviewCommandTest.VALID_DATETIME;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"},{"lineNumber":13,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;"},{"lineNumber":14,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;"},{"lineNumber":15,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":16,"author":{"gitID":"kexiaowen"},"content":"import org.junit.Test;"},{"lineNumber":17,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":18,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.commons.core.Messages;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.logic.CommandHistory;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.address.logic.UndoRedoStack;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.address.model.AddressBook;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":24,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":25,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":26,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":27,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Status;"},{"lineNumber":28,"author":{"gitID":"mhq199657"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":29,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":30,"author":{"gitID":"mhq199657"},"content":"public class StatusCommandTest {"},{"lineNumber":31,"author":{"gitID":"mhq199657"},"content":"    public static final int VALID_STATUS_INDEX \u003d 7;"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":35,"author":{"gitID":"Ang-YC"},"content":"    public void execute_validDateUnfilteredList_success() throws Exception {"},{"lineNumber":36,"author":{"gitID":"Ang-YC"},"content":"        Person firstPerson \u003d model.getAddressBook().getPersonList().get(INDEX_FIRST_PERSON.getZeroBased());"},{"lineNumber":37,"author":{"gitID":"mhq199657"},"content":"        Person updatedPerson \u003d new PersonBuilder(firstPerson).withStatus(VALID_STATUS_INDEX).build();"},{"lineNumber":38,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":39,"author":{"gitID":"mhq199657"},"content":"        StatusCommand statusCommand \u003d prepareCommand(INDEX_FIRST_PERSON, VALID_STATUS_INDEX);"},{"lineNumber":40,"author":{"gitID":"mhq199657"},"content":"        String expectedMessage \u003d String.format(StatusCommand.MESSAGE_STATUS_SUCCESS,"},{"lineNumber":41,"author":{"gitID":"mhq199657"},"content":"                updatedPerson.getName(), updatedPerson.getStatus().value);"},{"lineNumber":42,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":43,"author":{"gitID":"kexiaowen"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());"},{"lineNumber":44,"author":{"gitID":"mhq199657"},"content":"        expectedModel.updatePerson(firstPerson, updatedPerson);"},{"lineNumber":45,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":46,"author":{"gitID":"mhq199657"},"content":"        assertCommandSuccess(statusCommand, model, expectedMessage, expectedModel);"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":50,"author":{"gitID":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);"},{"lineNumber":52,"author":{"gitID":"mhq199657"},"content":"        StatusCommand statusCommand \u003d prepareCommand(outOfBoundIndex, VALID_STATUS_INDEX);"},{"lineNumber":53,"author":{"gitID":"mhq199657"},"content":"        assertCommandFailure(statusCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"},{"lineNumber":54,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":55,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":56,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":57,"author":{"gitID":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {"},{"lineNumber":58,"author":{"gitID":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);"},{"lineNumber":59,"author":{"gitID":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;"},{"lineNumber":60,"author":{"gitID":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list"},{"lineNumber":61,"author":{"gitID":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());"},{"lineNumber":62,"author":{"gitID":"mhq199657"},"content":"        StatusCommand statusCommand \u003d prepareCommand(outOfBoundIndex, VALID_STATUS_INDEX);"},{"lineNumber":63,"author":{"gitID":"mhq199657"},"content":"        assertCommandFailure(statusCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"},{"lineNumber":64,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":65,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":66,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":67,"author":{"gitID":"kexiaowen"},"content":"    public void executeUndoRedo_validIndexUnfilteredList_success() throws Exception {"},{"lineNumber":68,"author":{"gitID":"kexiaowen"},"content":"        UndoRedoStack undoRedoStack \u003d new UndoRedoStack();"},{"lineNumber":69,"author":{"gitID":"kexiaowen"},"content":"        UndoCommand undoCommand \u003d prepareUndoCommand(model, undoRedoStack);"},{"lineNumber":70,"author":{"gitID":"kexiaowen"},"content":"        RedoCommand redoCommand \u003d prepareRedoCommand(model, undoRedoStack);"},{"lineNumber":71,"author":{"gitID":"mhq199657"},"content":"        Person personToUpdateStataus \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());"},{"lineNumber":72,"author":{"gitID":"mhq199657"},"content":"        Person scheduledPerson \u003d new PersonBuilder(personToUpdateStataus).withStatus(VALID_STATUS_INDEX).build();"},{"lineNumber":73,"author":{"gitID":"mhq199657"},"content":"        StatusCommand statusCommand \u003d prepareCommand(INDEX_FIRST_PERSON, VALID_STATUS_INDEX);"},{"lineNumber":74,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());"},{"lineNumber":75,"author":{"gitID":"-"},"content":""},{"lineNumber":76,"author":{"gitID":"Ang-YC"},"content":"        // interview -\u003e first person interview date scheduled"},{"lineNumber":77,"author":{"gitID":"mhq199657"},"content":"        statusCommand.execute();"},{"lineNumber":78,"author":{"gitID":"mhq199657"},"content":"        undoRedoStack.push(statusCommand);"},{"lineNumber":79,"author":{"gitID":"-"},"content":""},{"lineNumber":80,"author":{"gitID":"-"},"content":"        // undo -\u003e reverts addressbook back to previous state and filtered person list to show all persons"},{"lineNumber":81,"author":{"gitID":"-"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":82,"author":{"gitID":"-"},"content":""},{"lineNumber":83,"author":{"gitID":"Ang-YC"},"content":"        // redo -\u003e same first person scheduled again"},{"lineNumber":84,"author":{"gitID":"mhq199657"},"content":"        expectedModel.updatePerson(personToUpdateStataus, scheduledPerson);"},{"lineNumber":85,"author":{"gitID":"kexiaowen"},"content":"        assertCommandSuccess(redoCommand, model, RedoCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":86,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":87,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":88,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":89,"author":{"gitID":"kexiaowen"},"content":"    public void executeUndoRedo_invalidIndexUnfilteredList_failure() {"},{"lineNumber":90,"author":{"gitID":"kexiaowen"},"content":"        UndoRedoStack undoRedoStack \u003d new UndoRedoStack();"},{"lineNumber":91,"author":{"gitID":"kexiaowen"},"content":"        UndoCommand undoCommand \u003d prepareUndoCommand(model, undoRedoStack);"},{"lineNumber":92,"author":{"gitID":"kexiaowen"},"content":"        RedoCommand redoCommand \u003d prepareRedoCommand(model, undoRedoStack);"},{"lineNumber":93,"author":{"gitID":"kexiaowen"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);"},{"lineNumber":94,"author":{"gitID":"mhq199657"},"content":"        StatusCommand statusCommand \u003d prepareCommand(outOfBoundIndex, VALID_STATUS_INDEX);"},{"lineNumber":95,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":96,"author":{"gitID":"Ang-YC"},"content":"        // execution failed -\u003e interviewCommand not pushed into undoRedoStack"},{"lineNumber":97,"author":{"gitID":"mhq199657"},"content":"        assertCommandFailure(statusCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"},{"lineNumber":98,"author":{"gitID":"-"},"content":""},{"lineNumber":99,"author":{"gitID":"-"},"content":"        // no commands in undoRedoStack -\u003e undoCommand and redoCommand fail"},{"lineNumber":100,"author":{"gitID":"-"},"content":"        assertCommandFailure(undoCommand, model, UndoCommand.MESSAGE_FAILURE);"},{"lineNumber":101,"author":{"gitID":"-"},"content":"        assertCommandFailure(redoCommand, model, RedoCommand.MESSAGE_FAILURE);"},{"lineNumber":102,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":103,"author":{"gitID":"-"},"content":""},{"lineNumber":104,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":105,"author":{"gitID":"Ang-YC"},"content":"    public void executeUndoRedo_validIndexFilteredList_samePersonScheduled() throws Exception {"},{"lineNumber":106,"author":{"gitID":"-"},"content":"        UndoRedoStack undoRedoStack \u003d new UndoRedoStack();"},{"lineNumber":107,"author":{"gitID":"-"},"content":"        UndoCommand undoCommand \u003d prepareUndoCommand(model, undoRedoStack);"},{"lineNumber":108,"author":{"gitID":"-"},"content":"        RedoCommand redoCommand \u003d prepareRedoCommand(model, undoRedoStack);"},{"lineNumber":109,"author":{"gitID":"mhq199657"},"content":"        StatusCommand statusCommand \u003d prepareCommand(INDEX_FIRST_PERSON, VALID_STATUS_INDEX);"},{"lineNumber":110,"author":{"gitID":"kexiaowen"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());"},{"lineNumber":111,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":112,"author":{"gitID":"kexiaowen"},"content":"        showPersonAtIndex(model, INDEX_SECOND_PERSON);"},{"lineNumber":113,"author":{"gitID":"mhq199657"},"content":"        Person personToUpdateStatus \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());"},{"lineNumber":114,"author":{"gitID":"mhq199657"},"content":"        Person updatedPerson \u003d new PersonBuilder(personToUpdateStatus).withStatus(VALID_STATUS_INDEX).build();"},{"lineNumber":115,"author":{"gitID":"mhq199657"},"content":"        // status    -\u003e update status for second person in unfiltered person list /"},{"lineNumber":116,"author":{"gitID":"mhq199657"},"content":"        //              first person in filtered person list"},{"lineNumber":117,"author":{"gitID":"mhq199657"},"content":"        statusCommand.execute();"},{"lineNumber":118,"author":{"gitID":"mhq199657"},"content":"        undoRedoStack.push(statusCommand);"},{"lineNumber":119,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":120,"author":{"gitID":"kexiaowen"},"content":"        // undo -\u003e reverts addressbook back to previous state and filtered person list to show all persons"},{"lineNumber":121,"author":{"gitID":"kexiaowen"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":122,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":123,"author":{"gitID":"mhq199657"},"content":"        expectedModel.updatePerson(personToUpdateStatus, updatedPerson);"},{"lineNumber":124,"author":{"gitID":"mhq199657"},"content":"        assertNotEquals(personToUpdateStatus, model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()));"},{"lineNumber":125,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":126,"author":{"gitID":"Ang-YC"},"content":"        // redo -\u003e same second person scheduled again"},{"lineNumber":127,"author":{"gitID":"-"},"content":"        assertCommandSuccess(redoCommand, model, RedoCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":128,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":129,"author":{"gitID":"-"},"content":""},{"lineNumber":130,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":131,"author":{"gitID":"Ang-YC"},"content":"    public void equals() {"},{"lineNumber":132,"author":{"gitID":"mhq199657"},"content":"        final StatusCommand standardCommand \u003d new StatusCommand(INDEX_FIRST_PERSON, new Status(VALID_STATUS_INDEX));"},{"lineNumber":133,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":134,"author":{"gitID":"mhq199657"},"content":"        // same values -\u003e returns true"},{"lineNumber":135,"author":{"gitID":"mhq199657"},"content":"        StatusCommand commandWithSameValues \u003d new StatusCommand(INDEX_FIRST_PERSON, new Status(VALID_STATUS_INDEX));"},{"lineNumber":136,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));"},{"lineNumber":137,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":138,"author":{"gitID":"kexiaowen"},"content":"        // same object -\u003e returns true"},{"lineNumber":139,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(standardCommand.equals(standardCommand));"},{"lineNumber":140,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":141,"author":{"gitID":"kexiaowen"},"content":"        // null -\u003e returns false"},{"lineNumber":142,"author":{"gitID":"mhq199657"},"content":"        assertFalse(standardCommand \u003d\u003d null);"},{"lineNumber":143,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":144,"author":{"gitID":"mhq199657"},"content":"        // different types -\u003e returns false"},{"lineNumber":145,"author":{"gitID":"mhq199657"},"content":"        assertFalse(standardCommand.equals(new InterviewCommand(INDEX_FIRST_PERSON, VALID_DATETIME)));"},{"lineNumber":146,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":147,"author":{"gitID":"mhq199657"},"content":"        // different index -\u003e returns false"},{"lineNumber":148,"author":{"gitID":"mhq199657"},"content":"        assertFalse(standardCommand.equals(new StatusCommand(INDEX_SECOND_PERSON, new Status(VALID_STATUS_INDEX))));"},{"lineNumber":149,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":150,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":151,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":152,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":153,"author":{"gitID":"mhq199657"},"content":"     * Returns an {@code InterviewCommand}."},{"lineNumber":154,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":155,"author":{"gitID":"mhq199657"},"content":"    private StatusCommand prepareCommand(Index index, int statusIndex) {"},{"lineNumber":156,"author":{"gitID":"mhq199657"},"content":"        StatusCommand statusCommand \u003d new StatusCommand(index, new Status(statusIndex));"},{"lineNumber":157,"author":{"gitID":"mhq199657"},"content":"        statusCommand.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":158,"author":{"gitID":"mhq199657"},"content":"        return statusCommand;"},{"lineNumber":159,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":160,"author":{"gitID":"mhq199657"},"content":"}"}],"authorContributionMap":{"kexiaowen":49,"mhq199657":59,"-":39,"Ang-YC":13}},{"path":"src/test/java/seedu/address/model/util/InterviewDateUtilTest.java","lines":[{"lineNumber":1,"author":{"gitID":"mhq199657"},"content":"package seedu.address.model.util;"},{"lineNumber":2,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":7,"author":{"gitID":"mhq199657"},"content":"import java.time.LocalDateTime;"},{"lineNumber":8,"author":{"gitID":"mhq199657"},"content":"import java.time.Month;"},{"lineNumber":9,"author":{"gitID":"mhq199657"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":"import org.junit.Test;"},{"lineNumber":12,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":13,"author":{"gitID":"mhq199657"},"content":"import seedu.address.testutil.Assert;"},{"lineNumber":14,"author":{"gitID":"mhq199657"},"content":"//@@author mhq199657"},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":"public class InterviewDateUtilTest {"},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":17,"author":{"gitID":"mhq199657"},"content":"    public void parse_invalidDateTime_throwsDateTimeParseException() {"},{"lineNumber":18,"author":{"gitID":"mhq199657"},"content":"        String invalidDateTime1 \u003d \"20000000\";"},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":"        Assert.assertThrows("},{"lineNumber":20,"author":{"gitID":"mhq199657"},"content":"                DateTimeParseException.class, () -\u003e InterviewDateUtil.formHigherInterviewDateTime(invalidDateTime1));"},{"lineNumber":21,"author":{"gitID":"mhq199657"},"content":"        String invalidDateTime2 \u003d \"20180229\";"},{"lineNumber":22,"author":{"gitID":"mhq199657"},"content":"        Assert.assertThrows("},{"lineNumber":23,"author":{"gitID":"mhq199657"},"content":"                DateTimeParseException.class, () -\u003e InterviewDateUtil.formHigherInterviewDateTime(invalidDateTime2));"},{"lineNumber":24,"author":{"gitID":"mhq199657"},"content":"        String invalidDateTime3 \u003d \"20180631\";"},{"lineNumber":25,"author":{"gitID":"mhq199657"},"content":"        Assert.assertThrows("},{"lineNumber":26,"author":{"gitID":"mhq199657"},"content":"                DateTimeParseException.class, () -\u003e InterviewDateUtil.formHigherInterviewDateTime(invalidDateTime3));"},{"lineNumber":27,"author":{"gitID":"mhq199657"},"content":"        String invalidDateTime4 \u003d \"20181313\";"},{"lineNumber":28,"author":{"gitID":"mhq199657"},"content":"        Assert.assertThrows("},{"lineNumber":29,"author":{"gitID":"mhq199657"},"content":"                DateTimeParseException.class, () -\u003e InterviewDateUtil.formHigherInterviewDateTime(invalidDateTime4));"},{"lineNumber":30,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":33,"author":{"gitID":"mhq199657"},"content":"    public void parse_validDateTime_parseSuccess() {"},{"lineNumber":34,"author":{"gitID":"mhq199657"},"content":"        String validDateTime1 \u003d \"20180331\";"},{"lineNumber":35,"author":{"gitID":"mhq199657"},"content":"        String validDateTime2 \u003d \"20200229\";"},{"lineNumber":36,"author":{"gitID":"mhq199657"},"content":"        LocalDateTime expectedDateTime \u003d LocalDateTime.of(2018, Month.MARCH, 31, 0, 0, 0);"},{"lineNumber":37,"author":{"gitID":"mhq199657"},"content":"        assertEquals(expectedDateTime, InterviewDateUtil.formLowerInterviewDateTime(validDateTime1));"},{"lineNumber":38,"author":{"gitID":"mhq199657"},"content":"        expectedDateTime \u003d LocalDateTime.of(2020, Month.FEBRUARY, 29, 23, 59, 59);"},{"lineNumber":39,"author":{"gitID":"mhq199657"},"content":"        assertEquals(expectedDateTime, InterviewDateUtil.formHigherInterviewDateTime(validDateTime2));"},{"lineNumber":40,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":41,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":42,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":43,"author":{"gitID":"mhq199657"},"content":"    public void isValidDateTime() {"},{"lineNumber":44,"author":{"gitID":"mhq199657"},"content":"        // null date time"},{"lineNumber":45,"author":{"gitID":"mhq199657"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e"},{"lineNumber":46,"author":{"gitID":"mhq199657"},"content":"                InterviewDateUtil.isValidInterviewDate(null));"},{"lineNumber":47,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":48,"author":{"gitID":"mhq199657"},"content":"        // invalid date time"},{"lineNumber":49,"author":{"gitID":"mhq199657"},"content":"        assertFalse(InterviewDateUtil.isValidInterviewDate(\"\")); // empty string"},{"lineNumber":50,"author":{"gitID":"mhq199657"},"content":"        assertFalse(InterviewDateUtil.isValidInterviewDate(\" \")); // spaces only"},{"lineNumber":51,"author":{"gitID":"mhq199657"},"content":"        assertFalse(InterviewDateUtil.isValidInterviewDate(\"2018\")); // no month and date"},{"lineNumber":52,"author":{"gitID":"mhq199657"},"content":"        assertFalse(InterviewDateUtil.isValidInterviewDate(\"year20180101\")); // non-numeric"},{"lineNumber":53,"author":{"gitID":"mhq199657"},"content":"        assertFalse(InterviewDateUtil.isValidInterviewDate(\"-20180101\")); // negative symbol before digits"},{"lineNumber":54,"author":{"gitID":"mhq199657"},"content":"        assertFalse(InterviewDateUtil.isValidInterviewDate(\"201 80101\")); // spaces within digits"},{"lineNumber":55,"author":{"gitID":"mhq199657"},"content":"        assertFalse(InterviewDateUtil.isValidInterviewDate(\"2018.5.3\")); // year and month"},{"lineNumber":56,"author":{"gitID":"mhq199657"},"content":"        // valid expectedGraduationYear"},{"lineNumber":57,"author":{"gitID":"mhq199657"},"content":"        assertTrue(InterviewDateUtil.isValidInterviewDate(\"20180228\"));"},{"lineNumber":58,"author":{"gitID":"mhq199657"},"content":"        assertTrue(InterviewDateUtil.isValidInterviewDate(\"20240101\"));"},{"lineNumber":59,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":60,"author":{"gitID":"mhq199657"},"content":"}"}],"authorContributionMap":{"mhq199657":57,"-":3}},{"path":"src/test/java/seedu/address/logic/commands/InterviewCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertNotEquals;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.prepareRedoCommand;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.prepareUndoCommand;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"Ang-YC"},"content":"import java.time.LocalDateTime;"},{"lineNumber":16,"author":{"gitID":"Ang-YC"},"content":"import java.time.ZoneOffset;"},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Messages;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":22,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.commons.util.UiUtil;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.address.logic.CommandHistory;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.address.logic.UndoRedoStack;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.address.model.AddressBook;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":30,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"Ang-YC"},"content":"//@@author Ang-YC"},{"lineNumber":33,"author":{"gitID":"Ang-YC"},"content":"/**"},{"lineNumber":34,"author":{"gitID":"Ang-YC"},"content":" * Contains integration tests (interaction with the Model) and unit tests for InterviewCommand."},{"lineNumber":35,"author":{"gitID":"Ang-YC"},"content":" */"},{"lineNumber":36,"author":{"gitID":"Ang-YC"},"content":"public class InterviewCommandTest {"},{"lineNumber":37,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":38,"author":{"gitID":"Ang-YC"},"content":"    public static final LocalDateTime VALID_DATETIME \u003d"},{"lineNumber":39,"author":{"gitID":"Ang-YC"},"content":"            LocalDateTime.ofEpochSecond(1540814400, 0, ZoneOffset.UTC);"},{"lineNumber":40,"author":{"gitID":"Ang-YC"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());"},{"lineNumber":41,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":42,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":43,"author":{"gitID":"Ang-YC"},"content":"    public void execute_validDateUnfilteredList_success() throws Exception {"},{"lineNumber":44,"author":{"gitID":"Ang-YC"},"content":"        Person firstPerson \u003d model.getAddressBook().getPersonList().get(INDEX_FIRST_PERSON.getZeroBased());"},{"lineNumber":45,"author":{"gitID":"Ang-YC"},"content":"        Person scheduledPerson \u003d new PersonBuilder(firstPerson).withInterviewDate(VALID_DATETIME).build();"},{"lineNumber":46,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":47,"author":{"gitID":"Ang-YC"},"content":"        InterviewCommand interviewCommand \u003d prepareCommand(INDEX_FIRST_PERSON, VALID_DATETIME);"},{"lineNumber":48,"author":{"gitID":"Ang-YC"},"content":"        String expectedMessage \u003d String.format(InterviewCommand.MESSAGE_INTERVIEW_PERSON_SUCCESS,"},{"lineNumber":49,"author":{"gitID":"Ang-YC"},"content":"                scheduledPerson.getName(), UiUtil.formatDate(scheduledPerson.getInterviewDate().getDateTime()));"},{"lineNumber":50,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":51,"author":{"gitID":"Ang-YC"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());"},{"lineNumber":52,"author":{"gitID":"Ang-YC"},"content":"        expectedModel.updatePerson(firstPerson, scheduledPerson);"},{"lineNumber":53,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":54,"author":{"gitID":"Ang-YC"},"content":"        assertCommandSuccess(interviewCommand, model, expectedMessage, expectedModel);"},{"lineNumber":55,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":57,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":58,"author":{"gitID":"Ang-YC"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {"},{"lineNumber":59,"author":{"gitID":"Ang-YC"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);"},{"lineNumber":60,"author":{"gitID":"Ang-YC"},"content":"        InterviewCommand interviewCommand \u003d prepareCommand(outOfBoundIndex, VALID_DATETIME);"},{"lineNumber":61,"author":{"gitID":"Ang-YC"},"content":"        assertCommandFailure(interviewCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"},{"lineNumber":62,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":64,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":65,"author":{"gitID":"Ang-YC"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {"},{"lineNumber":66,"author":{"gitID":"Ang-YC"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);"},{"lineNumber":67,"author":{"gitID":"Ang-YC"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;"},{"lineNumber":68,"author":{"gitID":"Ang-YC"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list"},{"lineNumber":69,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());"},{"lineNumber":70,"author":{"gitID":"Ang-YC"},"content":"        InterviewCommand interviewCommand \u003d prepareCommand(outOfBoundIndex, VALID_DATETIME);"},{"lineNumber":71,"author":{"gitID":"Ang-YC"},"content":"        assertCommandFailure(interviewCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"},{"lineNumber":72,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":74,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":75,"author":{"gitID":"Ang-YC"},"content":"    public void executeUndoRedo_validIndexUnfilteredList_success() throws Exception {"},{"lineNumber":76,"author":{"gitID":"Ang-YC"},"content":"        UndoRedoStack undoRedoStack \u003d new UndoRedoStack();"},{"lineNumber":77,"author":{"gitID":"Ang-YC"},"content":"        UndoCommand undoCommand \u003d prepareUndoCommand(model, undoRedoStack);"},{"lineNumber":78,"author":{"gitID":"Ang-YC"},"content":"        RedoCommand redoCommand \u003d prepareRedoCommand(model, undoRedoStack);"},{"lineNumber":79,"author":{"gitID":"Ang-YC"},"content":"        Person personToInterview \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());"},{"lineNumber":80,"author":{"gitID":"Ang-YC"},"content":"        Person scheduledPerson \u003d new PersonBuilder(personToInterview).withInterviewDate(VALID_DATETIME).build();"},{"lineNumber":81,"author":{"gitID":"Ang-YC"},"content":"        InterviewCommand interviewCommand \u003d prepareCommand(INDEX_FIRST_PERSON, VALID_DATETIME);"},{"lineNumber":82,"author":{"gitID":"Ang-YC"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());"},{"lineNumber":83,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":84,"author":{"gitID":"Ang-YC"},"content":"        // interview -\u003e first person interview date scheduled"},{"lineNumber":85,"author":{"gitID":"Ang-YC"},"content":"        interviewCommand.execute();"},{"lineNumber":86,"author":{"gitID":"Ang-YC"},"content":"        undoRedoStack.push(interviewCommand);"},{"lineNumber":87,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":88,"author":{"gitID":"Ang-YC"},"content":"        // undo -\u003e reverts addressbook back to previous state and filtered person list to show all persons"},{"lineNumber":89,"author":{"gitID":"Ang-YC"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":90,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":91,"author":{"gitID":"Ang-YC"},"content":"        // redo -\u003e same first person scheduled again"},{"lineNumber":92,"author":{"gitID":"Ang-YC"},"content":"        expectedModel.updatePerson(personToInterview, scheduledPerson);"},{"lineNumber":93,"author":{"gitID":"Ang-YC"},"content":"        assertCommandSuccess(redoCommand, model, RedoCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":94,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":95,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":96,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":97,"author":{"gitID":"Ang-YC"},"content":"    public void executeUndoRedo_invalidIndexUnfilteredList_failure() {"},{"lineNumber":98,"author":{"gitID":"Ang-YC"},"content":"        UndoRedoStack undoRedoStack \u003d new UndoRedoStack();"},{"lineNumber":99,"author":{"gitID":"Ang-YC"},"content":"        UndoCommand undoCommand \u003d prepareUndoCommand(model, undoRedoStack);"},{"lineNumber":100,"author":{"gitID":"Ang-YC"},"content":"        RedoCommand redoCommand \u003d prepareRedoCommand(model, undoRedoStack);"},{"lineNumber":101,"author":{"gitID":"Ang-YC"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);"},{"lineNumber":102,"author":{"gitID":"Ang-YC"},"content":"        InterviewCommand interviewCommand \u003d prepareCommand(outOfBoundIndex, VALID_DATETIME);"},{"lineNumber":103,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":104,"author":{"gitID":"Ang-YC"},"content":"        // execution failed -\u003e interviewCommand not pushed into undoRedoStack"},{"lineNumber":105,"author":{"gitID":"Ang-YC"},"content":"        assertCommandFailure(interviewCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"},{"lineNumber":106,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":107,"author":{"gitID":"Ang-YC"},"content":"        // no commands in undoRedoStack -\u003e undoCommand and redoCommand fail"},{"lineNumber":108,"author":{"gitID":"Ang-YC"},"content":"        assertCommandFailure(undoCommand, model, UndoCommand.MESSAGE_FAILURE);"},{"lineNumber":109,"author":{"gitID":"Ang-YC"},"content":"        assertCommandFailure(redoCommand, model, RedoCommand.MESSAGE_FAILURE);"},{"lineNumber":110,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":111,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":112,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":113,"author":{"gitID":"Ang-YC"},"content":"    public void executeUndoRedo_validIndexFilteredList_samePersonScheduled() throws Exception {"},{"lineNumber":114,"author":{"gitID":"Ang-YC"},"content":"        UndoRedoStack undoRedoStack \u003d new UndoRedoStack();"},{"lineNumber":115,"author":{"gitID":"Ang-YC"},"content":"        UndoCommand undoCommand \u003d prepareUndoCommand(model, undoRedoStack);"},{"lineNumber":116,"author":{"gitID":"Ang-YC"},"content":"        RedoCommand redoCommand \u003d prepareRedoCommand(model, undoRedoStack);"},{"lineNumber":117,"author":{"gitID":"Ang-YC"},"content":"        InterviewCommand interviewCommand \u003d prepareCommand(INDEX_FIRST_PERSON, VALID_DATETIME);"},{"lineNumber":118,"author":{"gitID":"Ang-YC"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());"},{"lineNumber":119,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":120,"author":{"gitID":"Ang-YC"},"content":"        showPersonAtIndex(model, INDEX_SECOND_PERSON);"},{"lineNumber":121,"author":{"gitID":"Ang-YC"},"content":"        Person personToInterview \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());"},{"lineNumber":122,"author":{"gitID":"Ang-YC"},"content":"        Person scheduledPerson \u003d new PersonBuilder(personToInterview).withInterviewDate(VALID_DATETIME).build();"},{"lineNumber":123,"author":{"gitID":"Ang-YC"},"content":"        // interview -\u003e schedule interview for second person in unfiltered person list /"},{"lineNumber":124,"author":{"gitID":"Ang-YC"},"content":"        //              first person in filtered person list"},{"lineNumber":125,"author":{"gitID":"Ang-YC"},"content":"        interviewCommand.execute();"},{"lineNumber":126,"author":{"gitID":"Ang-YC"},"content":"        undoRedoStack.push(interviewCommand);"},{"lineNumber":127,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":128,"author":{"gitID":"Ang-YC"},"content":"        // undo -\u003e reverts addressbook back to previous state and filtered person list to show all persons"},{"lineNumber":129,"author":{"gitID":"Ang-YC"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":130,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":131,"author":{"gitID":"Ang-YC"},"content":"        expectedModel.updatePerson(personToInterview, scheduledPerson);"},{"lineNumber":132,"author":{"gitID":"Ang-YC"},"content":"        assertNotEquals(personToInterview, model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()));"},{"lineNumber":133,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":134,"author":{"gitID":"Ang-YC"},"content":"        // redo -\u003e same second person scheduled again"},{"lineNumber":135,"author":{"gitID":"Ang-YC"},"content":"        assertCommandSuccess(redoCommand, model, RedoCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":136,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":137,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":138,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":139,"author":{"gitID":"Ang-YC"},"content":"    public void equals() {"},{"lineNumber":140,"author":{"gitID":"Ang-YC"},"content":"        final InterviewCommand standardCommand \u003d new InterviewCommand(INDEX_FIRST_PERSON, VALID_DATETIME);"},{"lineNumber":141,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":142,"author":{"gitID":"Ang-YC"},"content":"        // same values -\u003e returns true"},{"lineNumber":143,"author":{"gitID":"Ang-YC"},"content":"        InterviewCommand commandWithSameValues \u003d new InterviewCommand(INDEX_FIRST_PERSON, VALID_DATETIME);"},{"lineNumber":144,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));"},{"lineNumber":145,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":146,"author":{"gitID":"Ang-YC"},"content":"        // same object -\u003e returns true"},{"lineNumber":147,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(standardCommand.equals(standardCommand));"},{"lineNumber":148,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":149,"author":{"gitID":"Ang-YC"},"content":"        // null -\u003e returns false"},{"lineNumber":150,"author":{"gitID":"Ang-YC"},"content":"        assertFalse(standardCommand.equals(null));"},{"lineNumber":151,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":152,"author":{"gitID":"Ang-YC"},"content":"        // different types -\u003e returns false"},{"lineNumber":153,"author":{"gitID":"Ang-YC"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));"},{"lineNumber":154,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":155,"author":{"gitID":"Ang-YC"},"content":"        // different index -\u003e returns false"},{"lineNumber":156,"author":{"gitID":"Ang-YC"},"content":"        assertFalse(standardCommand.equals(new InterviewCommand(INDEX_SECOND_PERSON, VALID_DATETIME)));"},{"lineNumber":157,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":158,"author":{"gitID":"Ang-YC"},"content":"        // different date time -\u003e returns false"},{"lineNumber":159,"author":{"gitID":"Ang-YC"},"content":"        assertFalse(standardCommand.equals(new InterviewCommand(INDEX_FIRST_PERSON, LocalDateTime.MIN)));"},{"lineNumber":160,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":161,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":162,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":163,"author":{"gitID":"Ang-YC"},"content":"     * Returns an {@code InterviewCommand}."},{"lineNumber":164,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":165,"author":{"gitID":"Ang-YC"},"content":"    private InterviewCommand prepareCommand(Index index, LocalDateTime dateTime) {"},{"lineNumber":166,"author":{"gitID":"Ang-YC"},"content":"        InterviewCommand interviewCommand \u003d new InterviewCommand(index, dateTime);"},{"lineNumber":167,"author":{"gitID":"Ang-YC"},"content":"        interviewCommand.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":168,"author":{"gitID":"Ang-YC"},"content":"        return interviewCommand;"},{"lineNumber":169,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":170,"author":{"gitID":"Ang-YC"},"content":"}"}],"authorContributionMap":{"-":27,"Ang-YC":143}},{"path":"src/test/java/seedu/address/model/person/ProfileImageTest.java","lines":[{"lineNumber":1,"author":{"gitID":"mhq199657"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"mhq199657"},"content":"import static org.junit.Assert.assertNull;"},{"lineNumber":6,"author":{"gitID":"mhq199657"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":7,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.testutil.Assert.assertThrows;"},{"lineNumber":8,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":9,"author":{"gitID":"Ang-YC"},"content":"import org.junit.Test;"},{"lineNumber":10,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":11,"author":{"gitID":"Ang-YC"},"content":"//@@author Ang-YC"},{"lineNumber":12,"author":{"gitID":"Ang-YC"},"content":"public class ProfileImageTest {"},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":"    private static final String TEST_DATA_FOLDER \u003d \"src/test/data/ProfileImageTest/\";"},{"lineNumber":14,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":15,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":16,"author":{"gitID":"Ang-YC"},"content":"    public void constructor_null_constructionSuccessValueEmptyString() {"},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":"        assertNull(new ProfileImage(null).value);"},{"lineNumber":18,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":20,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":"    public void constructor_invalidProfileImage_throwsIllegalArgumentException() {"},{"lineNumber":22,"author":{"gitID":"Ang-YC"},"content":"        String invalidProfileImage \u003d formFilePath(\"\");"},{"lineNumber":23,"author":{"gitID":"Ang-YC"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ProfileImage(invalidProfileImage));"},{"lineNumber":24,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":25,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":26,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":27,"author":{"gitID":"Ang-YC"},"content":"    public void constructor_validProfileImage_constructionSuccess() {"},{"lineNumber":28,"author":{"gitID":"Ang-YC"},"content":"        String validProfileImage \u003d formFilePath(\"gates.jpg\");"},{"lineNumber":29,"author":{"gitID":"Ang-YC"},"content":"        assertEquals(validProfileImage, new ProfileImage(validProfileImage).value);"},{"lineNumber":30,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":32,"author":{"gitID":"Ang-YC"},"content":"    private String formFilePath(String fileName) {"},{"lineNumber":33,"author":{"gitID":"Ang-YC"},"content":"        return TEST_DATA_FOLDER + fileName;"},{"lineNumber":34,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":36,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":37,"author":{"gitID":"Ang-YC"},"content":"    public void isValidFile() {"},{"lineNumber":38,"author":{"gitID":"Ang-YC"},"content":"        // Null profile image"},{"lineNumber":39,"author":{"gitID":"Ang-YC"},"content":"        assertThrows(NullPointerException.class, () -\u003e ProfileImage.isValidFile(null));"},{"lineNumber":40,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":41,"author":{"gitID":"Ang-YC"},"content":"        // Invalid image file name"},{"lineNumber":42,"author":{"gitID":"Ang-YC"},"content":"        assertFalse(ProfileImage.isValidFile(formFilePath(\"\"))); // empty string"},{"lineNumber":43,"author":{"gitID":"Ang-YC"},"content":"        assertFalse(ProfileImage.isValidFile(formFilePath(\" \"))); // spaces only"},{"lineNumber":44,"author":{"gitID":"Ang-YC"},"content":"        assertFalse(ProfileImage.isValidFile(formFilePath(\"fileNotFound.jpg\"))); // not a existing image"},{"lineNumber":45,"author":{"gitID":"Ang-YC"},"content":"        assertFalse(ProfileImage.isValidFile(formFilePath(\"largeDora.pdf\"))); // greater than 1MB"},{"lineNumber":46,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":47,"author":{"gitID":"Ang-YC"},"content":"        // Valid image file name"},{"lineNumber":48,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(ProfileImage.isValidFile(formFilePath(\"doraemon cute.jpg\"))); // spaces within fileName"},{"lineNumber":49,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(ProfileImage.isValidFile(formFilePath(\"elon.jpg\")));"},{"lineNumber":50,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(ProfileImage.isValidFile(formFilePath(\"gates.jpg\")));"},{"lineNumber":51,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(ProfileImage.isValidFile(formFilePath(\"jobs.jpg\")));"},{"lineNumber":52,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(ProfileImage.isValidFile(formFilePath(\"larry.jpg\")));"},{"lineNumber":53,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(ProfileImage.isValidFile(formFilePath(\"mark.jpg\")));"},{"lineNumber":54,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":55,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":57,"author":{"gitID":"Ang-YC"},"content":"}"}],"authorContributionMap":{"mhq199657":3,"-":3,"Ang-YC":51}},{"path":"src/test/java/seedu/address/model/person/ExpectedGraduationYearTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.address.testutil.Assert;"},{"lineNumber":9,"author":{"gitID":"mhq199657"},"content":"//@@author mhq199657"},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":"public class ExpectedGraduationYearTest {"},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":12,"author":{"gitID":"mhq199657"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":13,"author":{"gitID":"mhq199657"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new ExpectedGraduationYear(null));"},{"lineNumber":14,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":17,"author":{"gitID":"mhq199657"},"content":"    public void constructor_invalidExpectedGraduationYear_throwsIllegalArgumentException() {"},{"lineNumber":18,"author":{"gitID":"mhq199657"},"content":"        String invalidExpectedGraduationYear \u003d \"\";"},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidExpectedGraduationYear));"},{"lineNumber":20,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":22,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":23,"author":{"gitID":"mhq199657"},"content":"    public void isValidExpectedGraduationYear() {"},{"lineNumber":24,"author":{"gitID":"mhq199657"},"content":"        // null expectedGraduationYear"},{"lineNumber":25,"author":{"gitID":"mhq199657"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e"},{"lineNumber":26,"author":{"gitID":"mhq199657"},"content":"                ExpectedGraduationYear.isValidExpectedGraduationYear(null));"},{"lineNumber":27,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":28,"author":{"gitID":"mhq199657"},"content":"        // invalid expectedGraduationYear"},{"lineNumber":29,"author":{"gitID":"mhq199657"},"content":"        assertFalse(ExpectedGraduationYear.isValidExpectedGraduationYear(\"\")); // empty string"},{"lineNumber":30,"author":{"gitID":"mhq199657"},"content":"        assertFalse(ExpectedGraduationYear.isValidExpectedGraduationYear(\" \")); // spaces only"},{"lineNumber":31,"author":{"gitID":"mhq199657"},"content":"        assertFalse(ExpectedGraduationYear.isValidExpectedGraduationYear(\"91\")); // less than 4 numbers"},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":"        assertFalse(ExpectedGraduationYear.isValidExpectedGraduationYear(\"year2018\")); // non-numeric"},{"lineNumber":33,"author":{"gitID":"mhq199657"},"content":"        assertFalse(ExpectedGraduationYear.isValidExpectedGraduationYear(\"-2018\")); // negative symbol before digits"},{"lineNumber":34,"author":{"gitID":"mhq199657"},"content":"        assertFalse(ExpectedGraduationYear.isValidExpectedGraduationYear(\"201 8\")); // spaces within digits"},{"lineNumber":35,"author":{"gitID":"mhq199657"},"content":"        assertFalse(ExpectedGraduationYear.isValidExpectedGraduationYear(\"2018.5\")); // year and month"},{"lineNumber":36,"author":{"gitID":"mhq199657"},"content":"        // valid expectedGraduationYear"},{"lineNumber":37,"author":{"gitID":"mhq199657"},"content":"        assertTrue(ExpectedGraduationYear.isValidExpectedGraduationYear(\"2018\"));"},{"lineNumber":38,"author":{"gitID":"mhq199657"},"content":"        assertTrue(ExpectedGraduationYear.isValidExpectedGraduationYear(\"2025\"));"},{"lineNumber":39,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"mhq199657"},"content":"}"}],"authorContributionMap":{"mhq199657":32,"-":8}},{"path":"src/test/java/seedu/address/model/person/ResumeTest.java","lines":[{"lineNumber":1,"author":{"gitID":"mhq199657"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"mhq199657"},"content":"import static org.junit.Assert.assertNull;"},{"lineNumber":6,"author":{"gitID":"mhq199657"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":7,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":8,"author":{"gitID":"mhq199657"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":12,"author":{"gitID":"mhq199657"},"content":"import seedu.address.logic.parser.ResumeUtil;"},{"lineNumber":13,"author":{"gitID":"mhq199657"},"content":"import seedu.address.testutil.Assert;"},{"lineNumber":14,"author":{"gitID":"mhq199657"},"content":"//@@author mhq199657"},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":"public class ResumeTest {"},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":"    private static final String TEST_DATA_FOLDER \u003d \"src/test/data/ResumeTest/\";"},{"lineNumber":17,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"mhq199657"},"content":"    public void constructor_null_constructionSuccessValueNull() {"},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":"        assertNull(new Resume(null).value);"},{"lineNumber":20,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":22,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":23,"author":{"gitID":"mhq199657"},"content":"    public void constructor_invalidResume_throwsIllegalArgumentException() {"},{"lineNumber":24,"author":{"gitID":"mhq199657"},"content":"        String invalidResume \u003d formFilePath(\"\");"},{"lineNumber":25,"author":{"gitID":"mhq199657"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Resume(invalidResume));"},{"lineNumber":26,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":28,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":29,"author":{"gitID":"mhq199657"},"content":"    public void constructor_validResume_constructionSuccess() {"},{"lineNumber":30,"author":{"gitID":"mhq199657"},"content":"        String validResume \u003d formFilePath(\"valid.pdf\");"},{"lineNumber":31,"author":{"gitID":"mhq199657"},"content":"        assertEquals(validResume, new Resume(validResume).value);"},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":34,"author":{"gitID":"mhq199657"},"content":"    private String formFilePath(String fileName) {"},{"lineNumber":35,"author":{"gitID":"mhq199657"},"content":"        return TEST_DATA_FOLDER + fileName;"},{"lineNumber":36,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":37,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":38,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":39,"author":{"gitID":"mhq199657"},"content":"    public void isValidResume() {"},{"lineNumber":40,"author":{"gitID":"mhq199657"},"content":"        // null resume"},{"lineNumber":41,"author":{"gitID":"mhq199657"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Resume.isValidResume(null));"},{"lineNumber":42,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":43,"author":{"gitID":"mhq199657"},"content":"        // invalid resume file name"},{"lineNumber":44,"author":{"gitID":"mhq199657"},"content":"        assertFalse(Resume.isValidResume(formFilePath(\"\"))); // empty string"},{"lineNumber":45,"author":{"gitID":"mhq199657"},"content":"        assertFalse(Resume.isValidResume(formFilePath(\" \"))); // spaces only"},{"lineNumber":46,"author":{"gitID":"mhq199657"},"content":"        assertFalse(Resume.isValidResume(formFilePath(\"fileNot.exist\"))); // not a existing file name"},{"lineNumber":47,"author":{"gitID":"mhq199657"},"content":"        assertFalse(Resume.isValidResume(formFilePath(\"largeFile.pdf\"))); // greater than 1MB"},{"lineNumber":48,"author":{"gitID":"mhq199657"},"content":"        assertFalse(Resume.isValidResume(formFilePath(\"fake.pdf\"))); // a fake pdf"},{"lineNumber":49,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":50,"author":{"gitID":"mhq199657"},"content":"        // valid resume file name"},{"lineNumber":51,"author":{"gitID":"mhq199657"},"content":"        assertTrue(Resume.isValidResume(formFilePath(\"1 2.pdf\"))); // spaces within fileName"},{"lineNumber":52,"author":{"gitID":"mhq199657"},"content":"        assertTrue(Resume.isValidResume(formFilePath(\"valid.pdf\")));"},{"lineNumber":53,"author":{"gitID":"mhq199657"},"content":"        assertTrue(Resume.isValidResume(formFilePath(\"validPdf\")));"},{"lineNumber":54,"author":{"gitID":"mhq199657"},"content":"        assertTrue(Resume.isValidResume(formFilePath(\"alice.pdf\")));"},{"lineNumber":55,"author":{"gitID":"mhq199657"},"content":"        assertTrue(Resume.isValidResume(formFilePath(\"benson.pdf\")));"},{"lineNumber":56,"author":{"gitID":"mhq199657"},"content":"        assertTrue(Resume.isValidResume(formFilePath(\"bob.pdf\")));"},{"lineNumber":57,"author":{"gitID":"mhq199657"},"content":"        assertTrue(Resume.isValidResume(formFilePath(\"daniel.pdf\")));"},{"lineNumber":58,"author":{"gitID":"mhq199657"},"content":"        assertTrue(Resume.isValidResume(formFilePath(\"george.pdf\")));"},{"lineNumber":59,"author":{"gitID":"mhq199657"},"content":"        assertTrue(Resume.isValidResume(formFilePath(\"hoon.pdf\")));"},{"lineNumber":60,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":61,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":62,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":63,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":64,"author":{"gitID":"mhq199657"},"content":"    public void equals() {"},{"lineNumber":65,"author":{"gitID":"mhq199657"},"content":"        //neither hashed"},{"lineNumber":66,"author":{"gitID":"mhq199657"},"content":"        assertEquals(new Resume(formFilePath(\"1 2.pdf\")), new Resume(formFilePath(\"1 2.pdf\")));"},{"lineNumber":67,"author":{"gitID":"mhq199657"},"content":"        //one hashed"},{"lineNumber":68,"author":{"gitID":"mhq199657"},"content":"        Resume hashedResume \u003d null;"},{"lineNumber":69,"author":{"gitID":"mhq199657"},"content":"        try {"},{"lineNumber":70,"author":{"gitID":"mhq199657"},"content":"            hashedResume \u003d ResumeUtil.process(new Resume(formFilePath(\"1 2.pdf\")));"},{"lineNumber":71,"author":{"gitID":"mhq199657"},"content":"        } catch (IOException ioe) {"},{"lineNumber":72,"author":{"gitID":"mhq199657"},"content":"            throw new AssertionError(\"This should never happen.\");"},{"lineNumber":73,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":74,"author":{"gitID":"mhq199657"},"content":"        assert(hashedResume.value !\u003d null);"},{"lineNumber":75,"author":{"gitID":"mhq199657"},"content":"        assertEquals(new Resume(formFilePath(\"1 2.pdf\")), hashedResume);"},{"lineNumber":76,"author":{"gitID":"mhq199657"},"content":"        //both hashed"},{"lineNumber":77,"author":{"gitID":"mhq199657"},"content":"        Resume anotherhashedResume \u003d null;"},{"lineNumber":78,"author":{"gitID":"mhq199657"},"content":"        try {"},{"lineNumber":79,"author":{"gitID":"mhq199657"},"content":"            anotherhashedResume \u003d ResumeUtil.process(new Resume(formFilePath(\"1 2.pdf\")));"},{"lineNumber":80,"author":{"gitID":"mhq199657"},"content":"        } catch (IOException ioe) {"},{"lineNumber":81,"author":{"gitID":"mhq199657"},"content":"            throw new AssertionError(\"This should never happen.\");"},{"lineNumber":82,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":83,"author":{"gitID":"mhq199657"},"content":"        assertEquals(anotherhashedResume, hashedResume);"},{"lineNumber":84,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":85,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":86,"author":{"gitID":"mhq199657"},"content":"}"}],"authorContributionMap":{"mhq199657":83,"-":3}},{"path":"src/test/java/seedu/address/model/person/RatingTest.java","lines":[{"lineNumber":1,"author":{"gitID":"kexiaowen"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":3,"author":{"gitID":"kexiaowen"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"kexiaowen"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":6,"author":{"gitID":"kexiaowen"},"content":"import org.junit.Test;"},{"lineNumber":7,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":8,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.testutil.Assert;"},{"lineNumber":9,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":10,"author":{"gitID":"kexiaowen"},"content":"//@@author kexiaowen"},{"lineNumber":11,"author":{"gitID":"kexiaowen"},"content":"public class RatingTest {"},{"lineNumber":12,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":13,"author":{"gitID":"kexiaowen"},"content":"    private final Rating rating \u003d new Rating(3, 3,"},{"lineNumber":14,"author":{"gitID":"kexiaowen"},"content":"            4, 3.5);"},{"lineNumber":15,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":16,"author":{"gitID":"kexiaowen"},"content":"    public void isValidScore() {"},{"lineNumber":17,"author":{"gitID":"kexiaowen"},"content":"        // null phone number"},{"lineNumber":18,"author":{"gitID":"kexiaowen"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Rating.isValidScore(null));"},{"lineNumber":19,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":20,"author":{"gitID":"kexiaowen"},"content":"        // invalid scores"},{"lineNumber":21,"author":{"gitID":"kexiaowen"},"content":"        assertFalse(Rating.isValidScore((double) 0));"},{"lineNumber":22,"author":{"gitID":"kexiaowen"},"content":"        assertFalse(Rating.isValidScore(5.5));"},{"lineNumber":23,"author":{"gitID":"kexiaowen"},"content":"        assertFalse(Rating.isValidScore((double) -3));"},{"lineNumber":24,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":25,"author":{"gitID":"kexiaowen"},"content":"        // valid phone numbers"},{"lineNumber":26,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(Rating.isValidScore((double) 1));"},{"lineNumber":27,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(Rating.isValidScore(3.5));"},{"lineNumber":28,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(Rating.isValidScore((double) 5));"},{"lineNumber":29,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":30,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":31,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":32,"author":{"gitID":"kexiaowen"},"content":"    public void equals_sameObject_returnsTrue() {"},{"lineNumber":33,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(rating.equals(rating));"},{"lineNumber":34,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":36,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":37,"author":{"gitID":"kexiaowen"},"content":"    public void equals_sameValues_returnsTrue() {"},{"lineNumber":38,"author":{"gitID":"kexiaowen"},"content":"        Rating ratingCopy \u003d new Rating(rating.getTechnicalSkillsScore(), rating.communicationSkillsScore,"},{"lineNumber":39,"author":{"gitID":"kexiaowen"},"content":"                rating.getProblemSolvingSkillsScore(), rating.getExperienceScore());"},{"lineNumber":40,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(rating.equals(ratingCopy));"},{"lineNumber":41,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":42,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":43,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":44,"author":{"gitID":"kexiaowen"},"content":"    public void equals_differentTypes_returnsFalse() {"},{"lineNumber":45,"author":{"gitID":"kexiaowen"},"content":"        assertFalse(rating.equals(1));"},{"lineNumber":46,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":47,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":48,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":49,"author":{"gitID":"kexiaowen"},"content":"    public void equals_null_returnsFalse() {"},{"lineNumber":50,"author":{"gitID":"kexiaowen"},"content":"        assertFalse(rating.equals(null));"},{"lineNumber":51,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":53,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":54,"author":{"gitID":"kexiaowen"},"content":"    public void equals_differentValues_returnsFalse() {"},{"lineNumber":55,"author":{"gitID":"kexiaowen"},"content":"        Rating differentRating \u003d new Rating(1, 1,"},{"lineNumber":56,"author":{"gitID":"kexiaowen"},"content":"                1, 1);"},{"lineNumber":57,"author":{"gitID":"kexiaowen"},"content":"        assertFalse(rating.equals(differentRating));"},{"lineNumber":58,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":59,"author":{"gitID":"kexiaowen"},"content":"}"}],"authorContributionMap":{"kexiaowen":59}},{"path":"src/test/java/seedu/address/model/person/JobAppliedContainsSubstringsPredicateTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"public class JobAppliedContainsSubstringsPredicateTest {"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    public void equals() {"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"Software Engineer\");"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"Front-end Developer\", \"Data Analyst\");"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        JobAppliedContainsSubstringsPredicate firstPredicate \u003d"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                new JobAppliedContainsSubstringsPredicate(firstPredicateKeywordList);"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"        JobAppliedContainsSubstringsPredicate secondPredicate \u003d"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                new JobAppliedContainsSubstringsPredicate(secondPredicateKeywordList);"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        // same object -\u003e returns true"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        // same values -\u003e returns true"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        JobAppliedContainsSubstringsPredicate firstPredicateCopy \u003d"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                new JobAppliedContainsSubstringsPredicate(firstPredicateKeywordList);"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        // different types -\u003e returns false"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(1));"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        // null -\u003e returns false"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(null));"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        // different person -\u003e returns false"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"    public void test_jobAppliedContainsSubstrings_returnsTrue() {"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"        // One substring"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"        JobAppliedContainsSubstringsPredicate predicate \u003d"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"                new JobAppliedContainsSubstringsPredicate(Collections.singletonList(\"are Engin\"));"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withJobApplied(\"Software Engineer\").build()));"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"        // Mixed-case substring"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new JobAppliedContainsSubstringsPredicate(Arrays.asList(\"ArE EnGiNe\"));"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withJobApplied(\"Software Engineer\").build()));"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"    public void test_jobAppliedDoesNotContainSubstrings_returnsFalse() {"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":"        // Zero substring"},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"        JobAppliedContainsSubstringsPredicate predicate \u003d"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"                new JobAppliedContainsSubstringsPredicate(Collections.emptyList());"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withJobApplied(\"Software Engineer\").build()));"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"        // Non-matching substring"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new JobAppliedContainsSubstringsPredicate(Arrays.asList(\"are Dev\"));"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withJobApplied(\"Software Engineer\").build()));"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":13,"tanhengyeow":55}},{"path":"src/test/java/seedu/address/model/person/MajorTest.java","lines":[{"lineNumber":1,"author":{"gitID":"kexiaowen"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":3,"author":{"gitID":"kexiaowen"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"kexiaowen"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":6,"author":{"gitID":"kexiaowen"},"content":"import org.junit.Test;"},{"lineNumber":7,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":8,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.testutil.Assert;"},{"lineNumber":9,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":"public class MajorTest {"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Major(null));"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"    public void constructor_invalidMajor_throwsIllegalArgumentException() {"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"        String invalidMajor \u003d \"\";"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Major(invalidMajor));"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"    public void isValidMajor() {"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":"        // null major"},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Major.isValidMajor(null));"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        // invalid major"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(Major.isValidMajor(\"\")); // empty string"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(Major.isValidMajor(\" \")); // spaces only"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(Major.isValidMajor(\"^\")); // only non-alphanumeric characters"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(Major.isValidMajor(\"comp*\")); // contains non-alphanumeric characters"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        // valid major"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(Major.isValidMajor(\"computer science\")); // alphabets only"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(Major.isValidMajor(\"12345\")); // numbers only"},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(Major.isValidMajor(\"2nd major in Business\")); // alphanumeric characters"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(Major.isValidMajor(\"Computer Engineering\")); // with capital letters"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(Major.isValidMajor(\"Business Analytics and Information Security\")); // long names"},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"kexiaowen":9,"tanhengyeow":33}},{"path":"src/test/java/seedu/address/model/person/EmailContainsPrefixesPredicateTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"public class EmailContainsPrefixesPredicateTest {"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    public void equals() {"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"hy@example.com\");"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"hy@example.com\", \"yh@example.com\");"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        EmailContainsPrefixesPredicate firstPredicate \u003d"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                new EmailContainsPrefixesPredicate(firstPredicateKeywordList);"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"        EmailContainsPrefixesPredicate secondPredicate \u003d"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                new EmailContainsPrefixesPredicate(secondPredicateKeywordList);"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        // same object -\u003e returns true"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        // same values -\u003e returns true"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        EmailContainsPrefixesPredicate firstPredicateCopy \u003d"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                new EmailContainsPrefixesPredicate(firstPredicateKeywordList);"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        // different types -\u003e returns false"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(1));"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        // null -\u003e returns false"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(null));"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        // different person -\u003e returns false"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"    public void test_emailContainsPrefixes_returnsTrue() {"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"        // One prefix"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"        EmailContainsPrefixesPredicate predicate \u003d"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"                new EmailContainsPrefixesPredicate(Collections.singletonList(\"hy\"));"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"hy@example.com\").build()));"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"        // Mixed-case prefix"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new EmailContainsPrefixesPredicate(Arrays.asList(\"Hy\"));"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"hy@example.com\").build()));"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"    public void test_emailDoesNotContainPrefixes_returnsFalse() {"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":"        // Zero prefix"},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"        EmailContainsPrefixesPredicate predicate \u003d"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"                new EmailContainsPrefixesPredicate(Collections.emptyList());"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"hy@lol.com\").build()));"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"        // Non-matching prefix"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new EmailContainsPrefixesPredicate(Arrays.asList(\"yh\"));"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"hy@example.com\").build()));"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":13,"tanhengyeow":55}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"public class NameContainsKeywordsPredicateTest {"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    public void equals() {"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                new NameContainsKeywordsPredicate(firstPredicateKeywordList);"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                new NameContainsKeywordsPredicate(secondPredicateKeywordList);"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        // same object -\u003e returns true"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        // same values -\u003e returns true"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                new NameContainsKeywordsPredicate(firstPredicateKeywordList);"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        // different types -\u003e returns false"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(1));"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        // null -\u003e returns false"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(null));"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        // different person -\u003e returns false"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"    public void test_nameContainsKeywords_returnsTrue() {"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"        // One keyword"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"        NameContainsKeywordsPredicate predicate \u003d"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"        // Multiple keywords"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":"        // Only one matching keyword"},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"        // Mixed-case keywords"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"        // Zero keywords"},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());"},{"lineNumber":69,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));"},{"lineNumber":70,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":71,"author":{"gitID":"tanhengyeow"},"content":"        // Non-matching keyword"},{"lineNumber":72,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));"},{"lineNumber":73,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));"},{"lineNumber":74,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":75,"author":{"gitID":"tanhengyeow"},"content":"        // Keywords match phone, email, expected graduation year and address, but does not match name"},{"lineNumber":76,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new NameContainsKeywordsPredicate("},{"lineNumber":77,"author":{"gitID":"tanhengyeow"},"content":"                Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\", \"2020\"));"},{"lineNumber":78,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")"},{"lineNumber":79,"author":{"gitID":"tanhengyeow"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").withExpectedGraduationYear(\"2020\").build()));"},{"lineNumber":80,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":81,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":13,"tanhengyeow":68}},{"path":"src/test/java/seedu/address/model/person/NameContainsSubstringsPredicateTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"public class NameContainsSubstringsPredicateTest {"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    public void equals() {"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        NameContainsSubstringsPredicate firstPredicate \u003d"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                new NameContainsSubstringsPredicate(firstPredicateKeywordList);"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"        NameContainsSubstringsPredicate secondPredicate \u003d"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                new NameContainsSubstringsPredicate(secondPredicateKeywordList);"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        // same object -\u003e returns true"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        // same values -\u003e returns true"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        NameContainsSubstringsPredicate firstPredicateCopy \u003d"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                new NameContainsSubstringsPredicate(firstPredicateKeywordList);"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        // different types -\u003e returns false"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(1));"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        // null -\u003e returns false"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(null));"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        // different person -\u003e returns false"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"    public void test_nameContainsSubstrings_returnsTrue() {"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"        // One substring"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"        NameContainsSubstringsPredicate predicate \u003d"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"                new NameContainsSubstringsPredicate(Collections.singletonList(\"ce Bo\"));"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"        // Mixed-case substring"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new NameContainsSubstringsPredicate(Arrays.asList(\"Ce BO\"));"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"    public void test_nameDoesNotContainSubstrings_returnsFalse() {"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":"        // Zero substring"},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"        NameContainsSubstringsPredicate predicate \u003d new NameContainsSubstringsPredicate(Collections.emptyList());"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":"        // Non-matching substring"},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new NameContainsSubstringsPredicate(Arrays.asList(\"harle\"));"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":13,"tanhengyeow":54}},{"path":"src/test/java/seedu/address/model/person/PhoneContainsSubstringsPredicateTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"public class PhoneContainsSubstringsPredicateTest {"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    public void equals() {"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"999\");"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"999\", \"555\");"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        PhoneContainsSubstringsPredicate firstPredicate \u003d"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                new PhoneContainsSubstringsPredicate(firstPredicateKeywordList);"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"        PhoneContainsSubstringsPredicate secondPredicate \u003d"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                new PhoneContainsSubstringsPredicate(secondPredicateKeywordList);"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        // same object -\u003e returns true"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        // same values -\u003e returns true"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        PhoneContainsSubstringsPredicate firstPredicateCopy \u003d"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                new PhoneContainsSubstringsPredicate(firstPredicateKeywordList);"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        // different types -\u003e returns false"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(1));"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        // null -\u003e returns false"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(null));"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        // different person -\u003e returns false"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"    public void test_phoneContainsSubstrings_returnsTrue() {"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"        // One substring"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"        PhoneContainsSubstringsPredicate predicate \u003d"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"                new PhoneContainsSubstringsPredicate(Collections.singletonList(\"95\"));"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"999555\").build()));"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"    public void test_phoneDoesNotContainSubstrings_returnsFalse() {"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"        // Zero substring"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":"        PhoneContainsSubstringsPredicate predicate \u003d"},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"                new PhoneContainsSubstringsPredicate(Collections.emptyList());"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"999\").build()));"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"        // Non-matching substring"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new PhoneContainsSubstringsPredicate(Arrays.asList(\"555\"));"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"999111\").build()));"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":13,"tanhengyeow":51}},{"path":"src/test/java/seedu/address/model/person/MajorContainsSubstringsPredicateTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"public class MajorContainsSubstringsPredicateTest {"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    public void equals() {"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"Computer\");"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"Computer\", \"Science\");"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        MajorContainsSubstringsPredicate firstPredicate \u003d"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                new MajorContainsSubstringsPredicate(firstPredicateKeywordList);"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"        MajorContainsSubstringsPredicate secondPredicate \u003d"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                new MajorContainsSubstringsPredicate(secondPredicateKeywordList);"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        // same object -\u003e returns true"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        // same values -\u003e returns true"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        MajorContainsSubstringsPredicate firstPredicateCopy \u003d"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                new MajorContainsSubstringsPredicate(firstPredicateKeywordList);"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        // different types -\u003e returns false"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(1));"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        // null -\u003e returns false"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate \u003d\u003d null);"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        // different person -\u003e returns false"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"    public void test_majorContainsSubstrings_returnsTrue() {"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"        // One substring"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"        MajorContainsSubstringsPredicate predicate \u003d"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"                new MajorContainsSubstringsPredicate(Collections.singletonList(\"ter Sci\"));"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withMajor(\"Computer Science\").build()));"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"        // Mixed-case substring"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new MajorContainsSubstringsPredicate(Arrays.asList(\"TeR sCi\"));"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withMajor(\"Computer Science\").build()));"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"    public void test_majorDoesNotContainSubstrings_returnsFalse() {"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":"        // Zero substring"},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"        MajorContainsSubstringsPredicate predicate \u003d new MajorContainsSubstringsPredicate(Collections.emptyList());"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withMajor(\"Computer Science\").build()));"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":"        // Non-matching substring"},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new MajorContainsSubstringsPredicate(Arrays.asList(\"mation Secu\"));"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withMajor(\"Computer Science\").build()));"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":13,"tanhengyeow":54}},{"path":"src/test/java/seedu/address/model/person/NameContainsSuffixesPredicateTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"public class NameContainsSuffixesPredicateTest {"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    public void equals() {"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        NameContainsSuffixesPredicate firstPredicate \u003d"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                new NameContainsSuffixesPredicate(firstPredicateKeywordList);"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"        NameContainsSuffixesPredicate secondPredicate \u003d"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                new NameContainsSuffixesPredicate(secondPredicateKeywordList);"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        // same object -\u003e returns true"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        // same values -\u003e returns true"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        NameContainsSuffixesPredicate firstPredicateCopy \u003d"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                new NameContainsSuffixesPredicate(firstPredicateKeywordList);"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        // different types -\u003e returns false"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(1));"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        // null -\u003e returns false"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(null));"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        // different person -\u003e returns false"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"    public void test_nameContainsSuffixes_returnsTrue() {"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"        // One suffix"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"        NameContainsSuffixesPredicate predicate \u003d"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"                new NameContainsSuffixesPredicate(Collections.singletonList(\"ob\"));"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"        // Mixed-case suffix"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new NameContainsSuffixesPredicate(Arrays.asList(\"Ob\"));"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"    public void test_nameDoesNotContainSuffixes_returnsFalse() {"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":"        // Zero suffix"},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"        NameContainsSuffixesPredicate predicate \u003d new NameContainsSuffixesPredicate(Collections.emptyList());"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":"        // Non-matching suffix"},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new NameContainsSuffixesPredicate(Arrays.asList(\"les\"));"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":13,"tanhengyeow":54}},{"path":"src/test/java/seedu/address/model/person/PhoneContainsPrefixesPredicateTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"public class PhoneContainsPrefixesPredicateTest {"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    public void equals() {"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"999\");"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"999\", \"555\");"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        PhoneContainsPrefixesPredicate firstPredicate \u003d"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                new PhoneContainsPrefixesPredicate(firstPredicateKeywordList);"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"        PhoneContainsPrefixesPredicate secondPredicate \u003d"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                new PhoneContainsPrefixesPredicate(secondPredicateKeywordList);"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        // same object -\u003e returns true"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        // same values -\u003e returns true"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        PhoneContainsPrefixesPredicate firstPredicateCopy \u003d"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                new PhoneContainsPrefixesPredicate(firstPredicateKeywordList);"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        // different types -\u003e returns false"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(1));"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        // null -\u003e returns false"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(null));"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        // different person -\u003e returns false"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"    public void test_phoneContainsPrefixes_returnsTrue() {"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"        // One prefix"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"        PhoneContainsPrefixesPredicate predicate \u003d"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"                new PhoneContainsPrefixesPredicate(Collections.singletonList(\"99\"));"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"999555\").build()));"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"    public void test_phoneDoesNotContainPrefixes_returnsFalse() {"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"        // Zero prefix"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":"        PhoneContainsPrefixesPredicate predicate \u003d"},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"                new PhoneContainsPrefixesPredicate(Collections.emptyList());"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"999\").build()));"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"        // Non-matching prefix"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new PhoneContainsPrefixesPredicate(Arrays.asList(\"555\"));"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"999111\").build()));"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":13,"tanhengyeow":51}},{"path":"src/test/java/seedu/address/model/person/JobAppliedContainsSuffixesPredicateTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"public class JobAppliedContainsSuffixesPredicateTest {"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    public void equals() {"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"Software Engineer\");"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"Front-end Developer\", \"Data Analyst\");"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        JobAppliedContainsSuffixesPredicate firstPredicate \u003d"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                new JobAppliedContainsSuffixesPredicate(firstPredicateKeywordList);"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"        JobAppliedContainsSuffixesPredicate secondPredicate \u003d"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                new JobAppliedContainsSuffixesPredicate(secondPredicateKeywordList);"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        // same object -\u003e returns true"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        // same values -\u003e returns true"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        JobAppliedContainsSuffixesPredicate firstPredicateCopy \u003d"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                new JobAppliedContainsSuffixesPredicate(firstPredicateKeywordList);"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        // different types -\u003e returns false"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(1));"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        // null -\u003e returns false"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(null));"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        // different person -\u003e returns false"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"    public void test_jobAppliedContainsSuffixes_returnsTrue() {"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"        // One suffix"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"        JobAppliedContainsSuffixesPredicate predicate \u003d"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"                new JobAppliedContainsSuffixesPredicate(Collections.singletonList(\"eer\"));"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withJobApplied(\"Software Engineer\").build()));"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"        // Mixed-case suffix"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new JobAppliedContainsSuffixesPredicate(Arrays.asList(\"EEr\"));"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withJobApplied(\"Software Engineer\").build()));"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"    public void test_jobAppliedDoesNotContainSuffixes_returnsFalse() {"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":"        // Zero suffix"},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"        JobAppliedContainsSuffixesPredicate predicate \u003d"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"                new JobAppliedContainsSuffixesPredicate(Collections.emptyList());"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withJobApplied(\"Software Engineer\").build()));"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"        // Non-matching suffix"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new JobAppliedContainsSuffixesPredicate(Arrays.asList(\"loper\"));"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withJobApplied(\"Software Engineer\").build()));"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":13,"tanhengyeow":55}},{"path":"src/test/java/seedu/address/model/person/MajorContainsPrefixesPredicateTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"public class MajorContainsPrefixesPredicateTest {"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    public void equals() {"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"Computer\");"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"Computer\", \"Science\");"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        MajorContainsPrefixesPredicate firstPredicate \u003d"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                new MajorContainsPrefixesPredicate(firstPredicateKeywordList);"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"        MajorContainsPrefixesPredicate secondPredicate \u003d"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                new MajorContainsPrefixesPredicate(secondPredicateKeywordList);"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        // same object -\u003e returns true"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        // same values -\u003e returns true"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        MajorContainsPrefixesPredicate firstPredicateCopy \u003d"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                new MajorContainsPrefixesPredicate(firstPredicateKeywordList);"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        // different types -\u003e returns false"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(1));"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        // null -\u003e returns false"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate \u003d\u003d null);"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        // different person -\u003e returns false"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"    public void test_majorContainsPrefixes_returnsTrue() {"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"        // One prefix"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"        MajorContainsPrefixesPredicate predicate \u003d"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"                new MajorContainsPrefixesPredicate(Collections.singletonList(\"Com\"));"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withMajor(\"Computer Science\").build()));"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"        // Mixed-case prefix"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new MajorContainsPrefixesPredicate(Arrays.asList(\"CoM\"));"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withMajor(\"Computer Science\").build()));"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"    public void test_majorDoesNotContainPrefixes_returnsFalse() {"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":"        // Zero prefix"},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"        MajorContainsPrefixesPredicate predicate \u003d new MajorContainsPrefixesPredicate(Collections.emptyList());"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withMajor(\"Computer Science\").build()));"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":"        // Non-matching prefix"},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new MajorContainsPrefixesPredicate(Arrays.asList(\"Info\"));"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withMajor(\"Computer Science\").build()));"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":13,"tanhengyeow":54}},{"path":"src/test/java/seedu/address/model/person/JobAppliedContainsKeywordsPredicateTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"public class JobAppliedContainsKeywordsPredicateTest {"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    public void equals() {"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"Software Engineer\");"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"Front-end Developer\", \"Data Analyst\");"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        JobAppliedContainsKeywordsPredicate firstPredicate \u003d"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                new JobAppliedContainsKeywordsPredicate(firstPredicateKeywordList);"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"        JobAppliedContainsKeywordsPredicate secondPredicate \u003d"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                new JobAppliedContainsKeywordsPredicate(secondPredicateKeywordList);"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        // same object -\u003e returns true"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        // same values -\u003e returns true"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        JobAppliedContainsKeywordsPredicate firstPredicateCopy \u003d"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                new JobAppliedContainsKeywordsPredicate(firstPredicateKeywordList);"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        // different types -\u003e returns false"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(1));"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        // null -\u003e returns false"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(null));"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        // different person -\u003e returns false"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"    public void test_jobAppliedContainsKeywords_returnsTrue() {"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"        // One keyword"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"        JobAppliedContainsKeywordsPredicate predicate \u003d"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"                new JobAppliedContainsKeywordsPredicate(Collections.singletonList(\"Engineer\"));"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withJobApplied(\"Software Engineer\").build()));"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"        // Multiple keywords"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new JobAppliedContainsKeywordsPredicate(Arrays.asList(\"Software\", \"Engineer\"));"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withJobApplied(\"Software Engineer\").build()));"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":"        // Only one matching keyword"},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new JobAppliedContainsKeywordsPredicate(Arrays.asList(\"Front-end\", \"Developer\"));"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withJobApplied(\"Software Developer\").build()));"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"        // Mixed-case keywords"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new JobAppliedContainsKeywordsPredicate(Arrays.asList(\"soFtWaRe\", \"eNGIneeR\"));"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withJobApplied(\"Software Engineer\").build()));"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"    public void test_jobAppliedDoesNotContainKeywords_returnsFalse() {"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"        // Zero keywords"},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":"        JobAppliedContainsKeywordsPredicate predicate \u003d"},{"lineNumber":69,"author":{"gitID":"tanhengyeow"},"content":"                new JobAppliedContainsKeywordsPredicate(Collections.emptyList());"},{"lineNumber":70,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withJobApplied(\"Software Engineer\").build()));"},{"lineNumber":71,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":72,"author":{"gitID":"tanhengyeow"},"content":"        // Non-matching keyword"},{"lineNumber":73,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new JobAppliedContainsKeywordsPredicate(Arrays.asList(\"analyst\"));"},{"lineNumber":74,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withJobApplied(\"Software Engineer\").build()));"},{"lineNumber":75,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":76,"author":{"gitID":"tanhengyeow"},"content":"        // Keywords match phone, email, expected graduation year and name, but does not match job applied"},{"lineNumber":77,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new JobAppliedContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Alice\", \"2020\"));"},{"lineNumber":78,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")"},{"lineNumber":79,"author":{"gitID":"tanhengyeow"},"content":"                .withEmail(\"alice@email.com\").withJobApplied(\"Software Engineer\")"},{"lineNumber":80,"author":{"gitID":"tanhengyeow"},"content":"                .withExpectedGraduationYear(\"2020\").build()));"},{"lineNumber":81,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":82,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":13,"tanhengyeow":69}},{"path":"src/test/java/seedu/address/model/person/GradePointAverageInKeywordsRangePredicateTest.java","lines":[{"lineNumber":1,"author":{"gitID":"kexiaowen"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":3,"author":{"gitID":"kexiaowen"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"kexiaowen"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":6,"author":{"gitID":"kexiaowen"},"content":"import org.junit.Test;"},{"lineNumber":7,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":8,"author":{"gitID":"mhq199657"},"content":"import seedu.address.logic.parser.FilterRange;"},{"lineNumber":9,"author":{"gitID":"mhq199657"},"content":"import seedu.address.testutil.Assert;"},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":12,"author":{"gitID":"mhq199657"},"content":"public class GradePointAverageInKeywordsRangePredicateTest {"},{"lineNumber":13,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":14,"author":{"gitID":"-"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new GradePointAverageInKeywordsRangePredicate(null));"},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":17,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":18,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":"    public void equals() {"},{"lineNumber":20,"author":{"gitID":"mhq199657"},"content":"        FilterRange\u003cGradePointAverage\u003e firstPredicateFilterRange \u003d new FilterRange\u003c\u003e("},{"lineNumber":21,"author":{"gitID":"mhq199657"},"content":"                new GradePointAverage(\"3.20\"), new GradePointAverage(\"5.00\"));"},{"lineNumber":22,"author":{"gitID":"mhq199657"},"content":"        FilterRange\u003cGradePointAverage\u003e secondPredicateFilterRange \u003d new FilterRange\u003c\u003e("},{"lineNumber":23,"author":{"gitID":"mhq199657"},"content":"                new GradePointAverage(\"4.44\"));"},{"lineNumber":24,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":25,"author":{"gitID":"mhq199657"},"content":"        GradePointAverageInKeywordsRangePredicate firstPredicate \u003d"},{"lineNumber":26,"author":{"gitID":"mhq199657"},"content":"                new GradePointAverageInKeywordsRangePredicate(firstPredicateFilterRange);"},{"lineNumber":27,"author":{"gitID":"mhq199657"},"content":"        GradePointAverageInKeywordsRangePredicate secondPredicate \u003d"},{"lineNumber":28,"author":{"gitID":"mhq199657"},"content":"                new GradePointAverageInKeywordsRangePredicate(secondPredicateFilterRange);"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"-"},"content":"        // same object -\u003e returns true"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));"},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"-"},"content":"        // same values -\u003e returns true"},{"lineNumber":34,"author":{"gitID":"mhq199657"},"content":"        GradePointAverageInKeywordsRangePredicate firstPredicateCopy \u003d"},{"lineNumber":35,"author":{"gitID":"mhq199657"},"content":"                new GradePointAverageInKeywordsRangePredicate(firstPredicateFilterRange);"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));"},{"lineNumber":37,"author":{"gitID":"-"},"content":""},{"lineNumber":38,"author":{"gitID":"-"},"content":"        // different types -\u003e returns false"},{"lineNumber":39,"author":{"gitID":"-"},"content":"        assertFalse(firstPredicate.equals(1));"},{"lineNumber":40,"author":{"gitID":"-"},"content":""},{"lineNumber":41,"author":{"gitID":"-"},"content":"        // null -\u003e returns false"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate \u003d\u003d null);"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"-"},"content":"        // different person -\u003e returns false"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));"},{"lineNumber":46,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":49,"author":{"gitID":"mhq199657"},"content":"    public void test_gradePointAverageInKeywordsRange_returnsTrue() {"},{"lineNumber":50,"author":{"gitID":"mhq199657"},"content":"        // Single keyword"},{"lineNumber":51,"author":{"gitID":"mhq199657"},"content":"        GradePointAverageInKeywordsRangePredicate predicate \u003d"},{"lineNumber":52,"author":{"gitID":"mhq199657"},"content":"                new GradePointAverageInKeywordsRangePredicate("},{"lineNumber":53,"author":{"gitID":"mhq199657"},"content":"                        new FilterRange\u003cGradePointAverage\u003e(new GradePointAverage(\"4.43\")));"},{"lineNumber":54,"author":{"gitID":"mhq199657"},"content":"        assertTrue(predicate.test(new PersonBuilder().withGradePointAverage(\"4.43\").build()));"},{"lineNumber":55,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":56,"author":{"gitID":"mhq199657"},"content":"        // Ranged keyword"},{"lineNumber":57,"author":{"gitID":"mhq199657"},"content":"        predicate \u003d new GradePointAverageInKeywordsRangePredicate(new FilterRange\u003cGradePointAverage\u003e("},{"lineNumber":58,"author":{"gitID":"mhq199657"},"content":"                new GradePointAverage(\"2.00\"), new GradePointAverage(\"4.50\")));"},{"lineNumber":59,"author":{"gitID":"mhq199657"},"content":"        assertTrue(predicate.test(new PersonBuilder().withGradePointAverage(\"3.33\").build()));"},{"lineNumber":60,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":61,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":62,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":63,"author":{"gitID":"mhq199657"},"content":"    public void test_gradePointAverageNotInKeywordsRange_returnsFalse() {"},{"lineNumber":64,"author":{"gitID":"mhq199657"},"content":"        // Non-matching keyword for single predicate"},{"lineNumber":65,"author":{"gitID":"mhq199657"},"content":"        GradePointAverageInKeywordsRangePredicate predicate \u003d"},{"lineNumber":66,"author":{"gitID":"mhq199657"},"content":"                new GradePointAverageInKeywordsRangePredicate("},{"lineNumber":67,"author":{"gitID":"mhq199657"},"content":"                        new FilterRange\u003cGradePointAverage\u003e(new GradePointAverage(\"5.00\")));"},{"lineNumber":68,"author":{"gitID":"mhq199657"},"content":"        assertFalse(predicate.test(new PersonBuilder().withGradePointAverage(\"4.99\").build()));"},{"lineNumber":69,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":70,"author":{"gitID":"mhq199657"},"content":"        // Not-in-range keyword for ranged predicate"},{"lineNumber":71,"author":{"gitID":"mhq199657"},"content":"        predicate \u003d new GradePointAverageInKeywordsRangePredicate(new FilterRange\u003cGradePointAverage\u003e("},{"lineNumber":72,"author":{"gitID":"mhq199657"},"content":"                new GradePointAverage(\"1.00\"), new GradePointAverage(\"1.50\")));"},{"lineNumber":73,"author":{"gitID":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")"},{"lineNumber":74,"author":{"gitID":"mhq199657"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").withGradePointAverage(\"1.51\").build()));"},{"lineNumber":75,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":76,"author":{"gitID":"mhq199657"},"content":"}"}],"authorContributionMap":{"kexiaowen":6,"mhq199657":49,"-":20,"tanhengyeow":1}},{"path":"src/test/java/seedu/address/model/person/CommentContainsSuffixesPredicateTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"public class CommentContainsSuffixesPredicateTest {"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    public void equals() {"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"He is decent\");"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"He is decent\", \"She is decent\");"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        CommentContainsSuffixesPredicate firstPredicate \u003d"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                new CommentContainsSuffixesPredicate(firstPredicateKeywordList);"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"        CommentContainsSuffixesPredicate secondPredicate \u003d"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                new CommentContainsSuffixesPredicate(secondPredicateKeywordList);"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        // same object -\u003e returns true"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        // same values -\u003e returns true"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        CommentContainsSuffixesPredicate firstPredicateCopy \u003d"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                new CommentContainsSuffixesPredicate(firstPredicateKeywordList);"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        // different types -\u003e returns false"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(1));"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        // null -\u003e returns false"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(null));"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        // different person -\u003e returns false"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"    public void test_commentContainsSuffixes_returnsTrue() {"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"        // One suffix"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"        CommentContainsSuffixesPredicate predicate \u003d"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"                new CommentContainsSuffixesPredicate(Collections.singletonList(\"ent\"));"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withComment(\"He is decent\").build()));"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"        // Mixed-case suffix"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new CommentContainsSuffixesPredicate(Arrays.asList(\"CeNt\"));"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withComment(\"He is decent\").build()));"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"    public void test_commentDoesNotContainSuffixes_returnsFalse() {"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":"        // Zero suffix"},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"        CommentContainsSuffixesPredicate predicate \u003d"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"                new CommentContainsSuffixesPredicate(Collections.emptyList());"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withComment(\"He is decent\").build()));"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"        // Non-matching suffix"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new CommentContainsSuffixesPredicate(Arrays.asList(\"alright\"));"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withComment(\"He is decent\").build()));"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":13,"tanhengyeow":55}},{"path":"src/test/java/seedu/address/model/person/AddressContainsKeywordsPredicateTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"public class AddressContainsKeywordsPredicateTest {"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    public void equals() {"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"Kent Ridge Drive\");"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"Kent Ridge Drive\", \"Computing Drive\");"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        AddressContainsKeywordsPredicate firstPredicate \u003d"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                new AddressContainsKeywordsPredicate(firstPredicateKeywordList);"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"        AddressContainsKeywordsPredicate secondPredicate \u003d"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                new AddressContainsKeywordsPredicate(secondPredicateKeywordList);"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        // same object -\u003e returns true"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        // same values -\u003e returns true"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        AddressContainsKeywordsPredicate firstPredicateCopy \u003d"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                new AddressContainsKeywordsPredicate(firstPredicateKeywordList);"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        // different types -\u003e returns false"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(1));"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        // null -\u003e returns false"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(null));"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        // different person -\u003e returns false"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"    public void test_addressContainsKeywords_returnsTrue() {"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"        // One keyword"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"        AddressContainsKeywordsPredicate predicate \u003d"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"                new AddressContainsKeywordsPredicate(Collections.singletonList(\"Computing\"));"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Computing Drive\").build()));"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"        // Multiple keywords"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"Computing\", \"Drive\"));"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Kent Ridge Drive\").build()));"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":"        // Only one matching keyword"},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"Computing\", \"Test\"));"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Computing Drive\").build()));"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"        // Mixed-case keywords"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"comPuTing\", \"dRivE\"));"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Computing Drive\").build()));"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"    public void test_addressDoesNotContainKeywords_returnsFalse() {"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"        // Zero keywords"},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":"        AddressContainsKeywordsPredicate predicate \u003d"},{"lineNumber":69,"author":{"gitID":"tanhengyeow"},"content":"                new AddressContainsKeywordsPredicate(Collections.emptyList());"},{"lineNumber":70,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAddress(\"Computing Drive\").build()));"},{"lineNumber":71,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":72,"author":{"gitID":"tanhengyeow"},"content":"        // Non-matching keyword"},{"lineNumber":73,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"Com\"));"},{"lineNumber":74,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAddress(\"Computing Drive\").build()));"},{"lineNumber":75,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":76,"author":{"gitID":"tanhengyeow"},"content":"        // Keywords match phone, email, expected graduation year and name, but does not match address"},{"lineNumber":77,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Alice\", \"2020\"));"},{"lineNumber":78,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")"},{"lineNumber":79,"author":{"gitID":"tanhengyeow"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").withExpectedGraduationYear(\"2020\").build()));"},{"lineNumber":80,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":81,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":13,"tanhengyeow":68}},{"path":"src/test/java/seedu/address/model/person/CommentContainsKeywordsPredicateTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"public class CommentContainsKeywordsPredicateTest {"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    public void equals() {"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"He is decent\");"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"He is decent\", \"She is decent\");"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        CommentContainsKeywordsPredicate firstPredicate \u003d"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                new CommentContainsKeywordsPredicate(firstPredicateKeywordList);"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"        CommentContainsKeywordsPredicate secondPredicate \u003d"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                new CommentContainsKeywordsPredicate(secondPredicateKeywordList);"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        // same object -\u003e returns true"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        // same values -\u003e returns true"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        CommentContainsKeywordsPredicate firstPredicateCopy \u003d"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                new CommentContainsKeywordsPredicate(firstPredicateKeywordList);"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        // different types -\u003e returns false"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(1));"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        // null -\u003e returns false"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(null));"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        // different person -\u003e returns false"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"    public void test_commentContainsKeywords_returnsTrue() {"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"        // One keyword"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"        CommentContainsKeywordsPredicate predicate \u003d"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"                new CommentContainsKeywordsPredicate(Collections.singletonList(\"decent\"));"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withComment(\"He is decent\").build()));"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"        // Multiple keywords"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new CommentContainsKeywordsPredicate(Arrays.asList(\"is\", \"decent\"));"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withComment(\"He is decent\").build()));"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":"        // Only one matching keyword"},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new CommentContainsKeywordsPredicate(Arrays.asList(\"not\", \"decent\"));"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withComment(\"He is decent\").build()));"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"        // Mixed-case keywords"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new CommentContainsKeywordsPredicate(Arrays.asList(\"iS\", \"dEcEnt\"));"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withComment(\"He is decent\").build()));"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"    public void test_commentDoesNotContainKeywords_returnsFalse() {"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"        // Zero keywords"},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":"        CommentContainsKeywordsPredicate predicate \u003d"},{"lineNumber":69,"author":{"gitID":"tanhengyeow"},"content":"                new CommentContainsKeywordsPredicate(Collections.emptyList());"},{"lineNumber":70,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withComment(\"He is decent\").build()));"},{"lineNumber":71,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":72,"author":{"gitID":"tanhengyeow"},"content":"        // Non-matching keyword"},{"lineNumber":73,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new CommentContainsKeywordsPredicate(Arrays.asList(\"outstanding\"));"},{"lineNumber":74,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withComment(\"He is decent\").build()));"},{"lineNumber":75,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":76,"author":{"gitID":"tanhengyeow"},"content":"        // Keywords match phone, email, expected graduation year and name, but does not match comment"},{"lineNumber":77,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new CommentContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Alice\", \"2020\"));"},{"lineNumber":78,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")"},{"lineNumber":79,"author":{"gitID":"tanhengyeow"},"content":"                .withEmail(\"alice@email.com\").withComment(\"He is decent\").withExpectedGraduationYear(\"2020\").build()));"},{"lineNumber":80,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":81,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":13,"tanhengyeow":68}},{"path":"src/test/java/seedu/address/model/person/CommentTest.java","lines":[{"lineNumber":1,"author":{"gitID":"Ang-YC"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":3,"author":{"gitID":"mhq199657"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"mhq199657"},"content":"import static org.junit.Assert.assertNull;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.address.testutil.Assert;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"Ang-YC"},"content":"//@@author Ang-YC"},{"lineNumber":12,"author":{"gitID":"Ang-YC"},"content":"public class CommentTest {"},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":14,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":15,"author":{"gitID":"Ang-YC"},"content":"    public void constructor_null_constructionSuccessValueNull() {"},{"lineNumber":16,"author":{"gitID":"Ang-YC"},"content":"        assertNull(new Comment(null).value);"},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":18,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":19,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":20,"author":{"gitID":"Ang-YC"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {"},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":"        String invalidComment \u003d \"With\\nline\";"},{"lineNumber":22,"author":{"gitID":"Ang-YC"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Comment(invalidComment));"},{"lineNumber":23,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":24,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":25,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":26,"author":{"gitID":"Ang-YC"},"content":"    public void isValidComment() {"},{"lineNumber":27,"author":{"gitID":"Ang-YC"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Comment.isValidComment(null));"},{"lineNumber":28,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":29,"author":{"gitID":"Ang-YC"},"content":"        // All values are accepted"},{"lineNumber":30,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(Comment.isValidComment(\"\")); // Empty string"},{"lineNumber":31,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(Comment.isValidComment(\" \")); // Whitespace only"},{"lineNumber":32,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(Comment.isValidComment(\"He is cool!\")); // Normal string"},{"lineNumber":33,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":34,"author":{"gitID":"Ang-YC"},"content":"        // Except new line"},{"lineNumber":35,"author":{"gitID":"Ang-YC"},"content":"        assertFalse(Comment.isValidComment(\"\\n\")); // Disallow new line"},{"lineNumber":36,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":37,"author":{"gitID":"Ang-YC"},"content":"}"}],"authorContributionMap":{"mhq199657":2,"-":6,"Ang-YC":29}},{"path":"src/test/java/seedu/address/model/person/RatingInKeywordsRangePredicateTest.java","lines":[{"lineNumber":1,"author":{"gitID":"kexiaowen"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":3,"author":{"gitID":"kexiaowen"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"kexiaowen"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":6,"author":{"gitID":"kexiaowen"},"content":"import org.junit.Test;"},{"lineNumber":7,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":8,"author":{"gitID":"mhq199657"},"content":"import seedu.address.logic.parser.FilterRange;"},{"lineNumber":9,"author":{"gitID":"mhq199657"},"content":"import seedu.address.testutil.Assert;"},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":"//@@author mhq199657"},{"lineNumber":12,"author":{"gitID":"mhq199657"},"content":"public class RatingInKeywordsRangePredicateTest {"},{"lineNumber":13,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":14,"author":{"gitID":"mhq199657"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new RatingInKeywordsRangePredicate(null));"},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":17,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":18,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":"    public void equals() {"},{"lineNumber":20,"author":{"gitID":"mhq199657"},"content":"        FilterRange\u003cRating\u003e firstPredicateFilterRange \u003d new FilterRange\u003c\u003e("},{"lineNumber":21,"author":{"gitID":"mhq199657"},"content":"                new Rating(3.0, 3.0, 3.0, 3.0), new Rating(4.0, 4.0, 4.0, 4.0));"},{"lineNumber":22,"author":{"gitID":"mhq199657"},"content":"        FilterRange\u003cRating\u003e secondPredicateFilterRange \u003d new FilterRange\u003c\u003e("},{"lineNumber":23,"author":{"gitID":"mhq199657"},"content":"                new Rating(2.97, 2.97, 2.97, 2.97));"},{"lineNumber":24,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":25,"author":{"gitID":"mhq199657"},"content":"        RatingInKeywordsRangePredicate firstPredicate \u003d"},{"lineNumber":26,"author":{"gitID":"mhq199657"},"content":"                new RatingInKeywordsRangePredicate(firstPredicateFilterRange);"},{"lineNumber":27,"author":{"gitID":"mhq199657"},"content":"        RatingInKeywordsRangePredicate secondPredicate \u003d"},{"lineNumber":28,"author":{"gitID":"mhq199657"},"content":"                new RatingInKeywordsRangePredicate(secondPredicateFilterRange);"},{"lineNumber":29,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":30,"author":{"gitID":"mhq199657"},"content":"        // same object -\u003e returns true"},{"lineNumber":31,"author":{"gitID":"mhq199657"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));"},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":33,"author":{"gitID":"mhq199657"},"content":"        // same values -\u003e returns true"},{"lineNumber":34,"author":{"gitID":"mhq199657"},"content":"        RatingInKeywordsRangePredicate firstPredicateCopy \u003d"},{"lineNumber":35,"author":{"gitID":"mhq199657"},"content":"                new RatingInKeywordsRangePredicate(firstPredicateFilterRange);"},{"lineNumber":36,"author":{"gitID":"mhq199657"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));"},{"lineNumber":37,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":38,"author":{"gitID":"mhq199657"},"content":"        // different types -\u003e returns false"},{"lineNumber":39,"author":{"gitID":"mhq199657"},"content":"        assertFalse(firstPredicate.equals(1));"},{"lineNumber":40,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":41,"author":{"gitID":"mhq199657"},"content":"        // null -\u003e returns false"},{"lineNumber":42,"author":{"gitID":"mhq199657"},"content":"        assertFalse(firstPredicate \u003d\u003d null);"},{"lineNumber":43,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":44,"author":{"gitID":"mhq199657"},"content":"        // different person -\u003e returns false"},{"lineNumber":45,"author":{"gitID":"mhq199657"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));"},{"lineNumber":46,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":47,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":48,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":49,"author":{"gitID":"mhq199657"},"content":"    public void test_ratingInKeywordsRange_returnsTrue() {"},{"lineNumber":50,"author":{"gitID":"mhq199657"},"content":"        // Single keyword"},{"lineNumber":51,"author":{"gitID":"mhq199657"},"content":"        RatingInKeywordsRangePredicate predicate \u003d"},{"lineNumber":52,"author":{"gitID":"mhq199657"},"content":"                new RatingInKeywordsRangePredicate("},{"lineNumber":53,"author":{"gitID":"mhq199657"},"content":"                        new FilterRange\u003cRating\u003e(new Rating(2.97, 2.97, 2.97, 2.97)));"},{"lineNumber":54,"author":{"gitID":"mhq199657"},"content":"        assertTrue(predicate.test(new PersonBuilder().withRating(\"2.95\", \"2.99\", \"2.98\", \"2.96\").build()));"},{"lineNumber":55,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":56,"author":{"gitID":"mhq199657"},"content":"        // Ranged keyword"},{"lineNumber":57,"author":{"gitID":"mhq199657"},"content":"        predicate \u003d new RatingInKeywordsRangePredicate(new FilterRange\u003cRating\u003e("},{"lineNumber":58,"author":{"gitID":"mhq199657"},"content":"                new Rating(2.0, 2.0, 2.0, 2.0), new Rating(2.1, 2.1, 2.1, 2.1)));"},{"lineNumber":59,"author":{"gitID":"mhq199657"},"content":"        assertTrue(predicate.test(new PersonBuilder().withRating(\"2.3\", \"1.9\", \"2.0\", \"1.99\").build()));"},{"lineNumber":60,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":61,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":62,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":63,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":64,"author":{"gitID":"mhq199657"},"content":"    public void test_ratingNotInKeywordsRange_returnsFalse() {"},{"lineNumber":65,"author":{"gitID":"mhq199657"},"content":"        // Non-matching keyword for single predicate"},{"lineNumber":66,"author":{"gitID":"mhq199657"},"content":"        RatingInKeywordsRangePredicate predicate \u003d"},{"lineNumber":67,"author":{"gitID":"mhq199657"},"content":"                new RatingInKeywordsRangePredicate("},{"lineNumber":68,"author":{"gitID":"mhq199657"},"content":"                        new FilterRange\u003cRating\u003e(new Rating(2.97, 2.97, 2.97, 2.97)));"},{"lineNumber":69,"author":{"gitID":"mhq199657"},"content":"        assertFalse(predicate.test(new PersonBuilder().withRating(\"2.95\", \"3.1\", \"2.98\", \"2.96\").build()));"},{"lineNumber":70,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":71,"author":{"gitID":"mhq199657"},"content":"        // Not-in-range keyword for ranged predicate"},{"lineNumber":72,"author":{"gitID":"mhq199657"},"content":"        predicate \u003d new RatingInKeywordsRangePredicate(new FilterRange\u003cRating\u003e("},{"lineNumber":73,"author":{"gitID":"mhq199657"},"content":"                new Rating(2.0, 2.0, 2.0, 2.0), new Rating(2.1, 2.1, 2.1, 2.1)));"},{"lineNumber":74,"author":{"gitID":"mhq199657"},"content":"        assertFalse(predicate.test(new PersonBuilder().withRating(\"2.0\", \"2.2\", \"2.2\", \"2.2\").build()));"},{"lineNumber":75,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":76,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":77,"author":{"gitID":"mhq199657"},"content":"}"}],"authorContributionMap":{"kexiaowen":6,"mhq199657":71}},{"path":"src/test/java/seedu/address/model/person/JobAppliedTest.java","lines":[{"lineNumber":1,"author":{"gitID":"kexiaowen"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":6,"author":{"gitID":"kexiaowen"},"content":"import org.junit.Test;"},{"lineNumber":7,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":8,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.testutil.Assert;"},{"lineNumber":9,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":10,"author":{"gitID":"kexiaowen"},"content":"//@@author kexiaowen"},{"lineNumber":11,"author":{"gitID":"kexiaowen"},"content":"public class JobAppliedTest {"},{"lineNumber":12,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":13,"author":{"gitID":"kexiaowen"},"content":"    private final JobApplied jobApplied \u003d new JobApplied(\"Software Engineer\");"},{"lineNumber":14,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":15,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":16,"author":{"gitID":"kexiaowen"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":17,"author":{"gitID":"kexiaowen"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new JobApplied(null));"},{"lineNumber":18,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":20,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":21,"author":{"gitID":"kexiaowen"},"content":"    public void constructor_invalidJobApplied_throwsIllegalArgumentException() {"},{"lineNumber":22,"author":{"gitID":"kexiaowen"},"content":"        String invalidJobApplied \u003d \"\";"},{"lineNumber":23,"author":{"gitID":"kexiaowen"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new JobApplied(invalidJobApplied));"},{"lineNumber":24,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":25,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":26,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":27,"author":{"gitID":"kexiaowen"},"content":"    public void isValidJobApplied() {"},{"lineNumber":28,"author":{"gitID":"kexiaowen"},"content":"        // null jobApplied"},{"lineNumber":29,"author":{"gitID":"kexiaowen"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e JobApplied.isValidJobApplied(null));"},{"lineNumber":30,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":31,"author":{"gitID":"kexiaowen"},"content":"        // invalid jobApplied"},{"lineNumber":32,"author":{"gitID":"kexiaowen"},"content":"        assertFalse(JobApplied.isValidJobApplied(\"\")); // empty string"},{"lineNumber":33,"author":{"gitID":"kexiaowen"},"content":"        assertFalse(JobApplied.isValidJobApplied(\" \")); // spaces only"},{"lineNumber":34,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":35,"author":{"gitID":"kexiaowen"},"content":"        // valid jobApplied"},{"lineNumber":36,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(JobApplied.isValidJobApplied(\"software engineer\")); // alphabets only"},{"lineNumber":37,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(JobApplied.isValidJobApplied(\"12345\")); // numbers only"},{"lineNumber":38,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(JobApplied.isValidJobApplied(\"1 software engineer 2 DevOps\")); // alphanumeric characters"},{"lineNumber":39,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(JobApplied.isValidJobApplied(\"Software Engineer\")); // with capital letters"},{"lineNumber":40,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(JobApplied.isValidJobApplied(\"Software Engineer \u0026 Web Developer\")); // long names"},{"lineNumber":41,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":42,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":43,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":44,"author":{"gitID":"kexiaowen"},"content":"    public void equals_sameObject_returnsTrue() {"},{"lineNumber":45,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(jobApplied.equals(jobApplied));"},{"lineNumber":46,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":47,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":48,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":49,"author":{"gitID":"kexiaowen"},"content":"    public void equals_sameValues_returnsTrue() {"},{"lineNumber":50,"author":{"gitID":"kexiaowen"},"content":"        JobApplied jobAppliedCopy \u003d new JobApplied(\"Software Engineer\");"},{"lineNumber":51,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(jobApplied.equals(jobAppliedCopy));"},{"lineNumber":52,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":53,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":54,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":55,"author":{"gitID":"kexiaowen"},"content":"    public void equals_differentTypes_returnsFalse() {"},{"lineNumber":56,"author":{"gitID":"kexiaowen"},"content":"        assertFalse(jobApplied.equals(1));"},{"lineNumber":57,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":58,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":59,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":60,"author":{"gitID":"kexiaowen"},"content":"    public void equals_null_returnsFalse() {"},{"lineNumber":61,"author":{"gitID":"kexiaowen"},"content":"        assertFalse(jobApplied.equals(null));"},{"lineNumber":62,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":64,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":65,"author":{"gitID":"kexiaowen"},"content":"    public void equals_differentValues_returnsFalse() {"},{"lineNumber":66,"author":{"gitID":"kexiaowen"},"content":"        JobApplied differentJobApplied \u003d new JobApplied(\"Front-end Developer\");"},{"lineNumber":67,"author":{"gitID":"kexiaowen"},"content":"        assertFalse(jobApplied.equals(differentJobApplied));"},{"lineNumber":68,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":69,"author":{"gitID":"kexiaowen"},"content":"}"}],"authorContributionMap":{"kexiaowen":67,"-":2}},{"path":"src/test/java/seedu/address/model/person/UniversityContainsSuffixesPredicateTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"public class UniversityContainsSuffixesPredicateTest {"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    public void equals() {"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"NUS\");"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"NUS\", \"NTU\");"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        UniversityContainsSuffixesPredicate firstPredicate \u003d"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                new UniversityContainsSuffixesPredicate(firstPredicateKeywordList);"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"        UniversityContainsSuffixesPredicate secondPredicate \u003d"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                new UniversityContainsSuffixesPredicate(secondPredicateKeywordList);"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        // same object -\u003e returns true"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        // same values -\u003e returns true"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        UniversityContainsSuffixesPredicate firstPredicateCopy \u003d"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                new UniversityContainsSuffixesPredicate(firstPredicateKeywordList);"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        // different types -\u003e returns false"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(1));"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        // null -\u003e returns false"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(null));"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        // different person -\u003e returns false"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"    public void test_universityContainsSuffixes_returnsTrue() {"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"        // One suffix"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"        UniversityContainsSuffixesPredicate predicate \u003d"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"                new UniversityContainsSuffixesPredicate(Collections.singletonList(\"US\"));"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withUniversity(\"Yale NUS\").build()));"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"        // Mixed-case substring"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new UniversityContainsSuffixesPredicate(Arrays.asList(\"uS\"));"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withUniversity(\"Yale NUS\").build()));"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"    public void test_universityDoesNotContainSuffixes_returnsFalse() {"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":"        // Zero suffix"},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"        UniversityContainsSuffixesPredicate predicate \u003d"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"                new UniversityContainsSuffixesPredicate(Collections.emptyList());"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withUniversity(\"NUS\").build()));"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"        // Non-matching suffix"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new UniversityContainsSuffixesPredicate(Arrays.asList(\"yale\"));"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withUniversity(\"NUS\").build()));"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":13,"tanhengyeow":55}},{"path":"src/test/java/seedu/address/model/person/CommentContainsSubstringsPredicateTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"public class CommentContainsSubstringsPredicateTest {"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    public void equals() {"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"He is decent\");"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"He is decent\", \"She is decent\");"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        CommentContainsSubstringsPredicate firstPredicate \u003d"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                new CommentContainsSubstringsPredicate(firstPredicateKeywordList);"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"        CommentContainsSubstringsPredicate secondPredicate \u003d"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                new CommentContainsSubstringsPredicate(secondPredicateKeywordList);"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        // same object -\u003e returns true"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        // same values -\u003e returns true"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        CommentContainsSubstringsPredicate firstPredicateCopy \u003d"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                new CommentContainsSubstringsPredicate(firstPredicateKeywordList);"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        // different types -\u003e returns false"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(1));"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        // null -\u003e returns false"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(null));"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        // different person -\u003e returns false"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"    public void test_commentContainsSubstrings_returnsTrue() {"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"        // One substring"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"        CommentContainsSubstringsPredicate predicate \u003d"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"                new CommentContainsSubstringsPredicate(Collections.singletonList(\"dec\"));"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withComment(\"He is decent\").build()));"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"        // Mixed-case substring"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new CommentContainsSubstringsPredicate(Arrays.asList(\"s DecE\"));"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withComment(\"He is decent\").build()));"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"    public void test_commentDoesNotContainSubstrings_returnsFalse() {"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":"        // Zero substring"},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"        CommentContainsSubstringsPredicate predicate \u003d"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"                new CommentContainsSubstringsPredicate(Collections.emptyList());"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withComment(\"He is decent\").build()));"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"        // Non-matching substring"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new CommentContainsSubstringsPredicate(Arrays.asList(\"test\"));"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withComment(\"He is decent\").build()));"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":13,"tanhengyeow":55}},{"path":"src/test/java/seedu/address/model/person/AddressContainsSuffixesPredicateTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"public class AddressContainsSuffixesPredicateTest {"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    public void equals() {"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"Kent Ridge Drive\");"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"Kent Ridge Drive\", \"Computing Drive\");"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        AddressContainsSuffixesPredicate firstPredicate \u003d"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                new AddressContainsSuffixesPredicate(firstPredicateKeywordList);"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"        AddressContainsSuffixesPredicate secondPredicate \u003d"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                new AddressContainsSuffixesPredicate(secondPredicateKeywordList);"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        // same object -\u003e returns true"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        // same values -\u003e returns true"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        AddressContainsSuffixesPredicate firstPredicateCopy \u003d"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                new AddressContainsSuffixesPredicate(firstPredicateKeywordList);"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        // different types -\u003e returns false"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(1));"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        // null -\u003e returns false"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(null));"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        // different person -\u003e returns false"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"    public void test_addressContainsSuffixes_returnsTrue() {"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"        // One suffix"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"        AddressContainsSuffixesPredicate predicate \u003d"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"                new AddressContainsSuffixesPredicate(Collections.singletonList(\"ive\"));"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Computing Drive\").build()));"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"        // Mixed-case suffix"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new AddressContainsSuffixesPredicate(Arrays.asList(\"IvE\"));"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Computing Drive\").build()));"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"    public void test_addressDoesNotContainSuffixes_returnsFalse() {"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":"        // Zero suffix"},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"        AddressContainsSuffixesPredicate predicate \u003d"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"                new AddressContainsSuffixesPredicate(Collections.emptyList());"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAddress(\"Computing Drive\").build()));"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"        // Non-matching suffix"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new AddressContainsSuffixesPredicate(Arrays.asList(\"road\"));"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAddress(\"Computing Drive\").build()));"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":13,"tanhengyeow":55}},{"path":"src/test/java/seedu/address/model/person/UniversityContainsKeywordsPredicateTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"public class UniversityContainsKeywordsPredicateTest {"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    public void equals() {"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"NUS\");"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"NUS\", \"NTU\");"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        UniversityContainsKeywordsPredicate firstPredicate \u003d"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                new UniversityContainsKeywordsPredicate(firstPredicateKeywordList);"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"        UniversityContainsKeywordsPredicate secondPredicate \u003d"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                new UniversityContainsKeywordsPredicate(secondPredicateKeywordList);"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        // same object -\u003e returns true"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        // same values -\u003e returns true"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        UniversityContainsKeywordsPredicate firstPredicateCopy \u003d"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                new UniversityContainsKeywordsPredicate(firstPredicateKeywordList);"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        // different types -\u003e returns false"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(1));"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        // null -\u003e returns false"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(null));"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        // different person -\u003e returns false"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"    public void test_universityContainsKeywords_returnsTrue() {"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"        // One keyword"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"        UniversityContainsKeywordsPredicate predicate \u003d"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"                new UniversityContainsKeywordsPredicate(Collections.singletonList(\"NUS\"));"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withUniversity(\"NUS\").build()));"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"        // Multiple keywords"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new UniversityContainsKeywordsPredicate(Arrays.asList(\"Yale\", \"NUS\"));"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withUniversity(\"Yale NUS\").build()));"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":"        // Only one matching keyword"},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new UniversityContainsKeywordsPredicate(Arrays.asList(\"Cool\", \"NUS\"));"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withUniversity(\"Yale NUS\").build()));"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"        // Mixed-case keywords"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new UniversityContainsKeywordsPredicate(Arrays.asList(\"yaLe\", \"nUs\"));"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withUniversity(\"Yale NUS\").build()));"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"    public void test_universityDoesNotContainKeywords_returnsFalse() {"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"        // Zero keywords"},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":"        UniversityContainsKeywordsPredicate predicate \u003d"},{"lineNumber":69,"author":{"gitID":"tanhengyeow"},"content":"                new UniversityContainsKeywordsPredicate(Collections.emptyList());"},{"lineNumber":70,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withUniversity(\"NUS\").build()));"},{"lineNumber":71,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":72,"author":{"gitID":"tanhengyeow"},"content":"        // Non-matching keyword"},{"lineNumber":73,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new UniversityContainsKeywordsPredicate(Arrays.asList(\"SMU\"));"},{"lineNumber":74,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withUniversity(\"NUS\").build()));"},{"lineNumber":75,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":76,"author":{"gitID":"tanhengyeow"},"content":"        // Keywords match phone, email, expected graduation year and name, but does not match university"},{"lineNumber":77,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new UniversityContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Alice\", \"2020\"));"},{"lineNumber":78,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")"},{"lineNumber":79,"author":{"gitID":"tanhengyeow"},"content":"                .withEmail(\"alice@email.com\").withUniversity(\"NUS\").withExpectedGraduationYear(\"2020\").build()));"},{"lineNumber":80,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":81,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":13,"tanhengyeow":68}},{"path":"src/test/java/seedu/address/model/person/InterviewDateTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"Ang-YC"},"content":"import static org.junit.Assert.assertNotNull;"},{"lineNumber":5,"author":{"gitID":"Ang-YC"},"content":"import static org.junit.Assert.assertNull;"},{"lineNumber":6,"author":{"gitID":"Ang-YC"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":7,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":8,"author":{"gitID":"Ang-YC"},"content":"import java.time.LocalDateTime;"},{"lineNumber":9,"author":{"gitID":"Ang-YC"},"content":"import java.time.ZoneOffset;"},{"lineNumber":10,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":11,"author":{"gitID":"Ang-YC"},"content":"import org.junit.Test;"},{"lineNumber":12,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":"//@@author Ang-YC"},{"lineNumber":14,"author":{"gitID":"Ang-YC"},"content":"public class InterviewDateTest {"},{"lineNumber":15,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":16,"author":{"gitID":"Ang-YC"},"content":"    private LocalDateTime timeNow \u003d LocalDateTime.now().withNano(0);"},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":"    private long timeNowInEpoch \u003d timeNow.toEpochSecond(ZoneOffset.UTC);"},{"lineNumber":18,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":19,"author":{"gitID":"Ang-YC"},"content":"    private final InterviewDate validInterviewDate \u003d new InterviewDate(timeNow);"},{"lineNumber":20,"author":{"gitID":"Ang-YC"},"content":"    private final InterviewDate nullInterviewDate \u003d new InterviewDate();"},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":22,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":23,"author":{"gitID":"Ang-YC"},"content":"    public void setup_sameTimeNow_returnsTrue() {"},{"lineNumber":24,"author":{"gitID":"Ang-YC"},"content":"        LocalDateTime convertedTime \u003d LocalDateTime.ofEpochSecond(timeNowInEpoch, 0, ZoneOffset.UTC);"},{"lineNumber":25,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(convertedTime.equals(timeNow));"},{"lineNumber":26,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":28,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":29,"author":{"gitID":"Ang-YC"},"content":"    public void constructor_sameInterviewDate_returnsTrue() {"},{"lineNumber":30,"author":{"gitID":"Ang-YC"},"content":"        InterviewDate validInterviewDateInEpoch \u003d new InterviewDate(timeNowInEpoch);"},{"lineNumber":31,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(validInterviewDate.equals(validInterviewDateInEpoch));"},{"lineNumber":32,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":34,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":35,"author":{"gitID":"Ang-YC"},"content":"    public void constructor_unscheduledInterviewDate_returnsTrue() {"},{"lineNumber":36,"author":{"gitID":"Ang-YC"},"content":"        assertNotNull(nullInterviewDate);"},{"lineNumber":37,"author":{"gitID":"Ang-YC"},"content":"        assertNull(nullInterviewDate.getDateTime());"},{"lineNumber":38,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":40,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":41,"author":{"gitID":"Ang-YC"},"content":"    public void equals_sameObject_returnsTrue() {"},{"lineNumber":42,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(validInterviewDate.equals(validInterviewDate));"},{"lineNumber":43,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":45,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"Ang-YC"},"content":"    public void equals_sameValues_returnsTrue() {"},{"lineNumber":47,"author":{"gitID":"Ang-YC"},"content":"        InterviewDate validInterviewDateCopy \u003d new InterviewDate(validInterviewDate.getDateTime());"},{"lineNumber":48,"author":{"gitID":"Ang-YC"},"content":"        assertTrue(validInterviewDate.equals(validInterviewDateCopy));"},{"lineNumber":49,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":51,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":52,"author":{"gitID":"Ang-YC"},"content":"    public void equals_differentTypes_returnsFalse() {"},{"lineNumber":53,"author":{"gitID":"Ang-YC"},"content":"        assertFalse(validInterviewDate.equals(1));"},{"lineNumber":54,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":55,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":56,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":57,"author":{"gitID":"Ang-YC"},"content":"    public void equals_null_returnsFalse() {"},{"lineNumber":58,"author":{"gitID":"Ang-YC"},"content":"        assertFalse(validInterviewDate.equals(null));"},{"lineNumber":59,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":60,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":61,"author":{"gitID":"Ang-YC"},"content":"    @Test"},{"lineNumber":62,"author":{"gitID":"Ang-YC"},"content":"    public void equals_differentValues_returnsFalse() {"},{"lineNumber":63,"author":{"gitID":"Ang-YC"},"content":"        assertFalse(validInterviewDate.equals(nullInterviewDate));"},{"lineNumber":64,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":65,"author":{"gitID":"Ang-YC"},"content":"}"}],"authorContributionMap":{"-":3,"Ang-YC":62}},{"path":"src/test/java/seedu/address/model/person/GradePointAverageTest.java","lines":[{"lineNumber":1,"author":{"gitID":"kexiaowen"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":3,"author":{"gitID":"kexiaowen"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"kexiaowen"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":6,"author":{"gitID":"kexiaowen"},"content":"import org.junit.Test;"},{"lineNumber":7,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":8,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.testutil.Assert;"},{"lineNumber":9,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":"public class GradePointAverageTest {"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new GradePointAverage(null));"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    public void constructor_invalidGradePointAverage_throwsIllegalArgumentException() {"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"        String invalidGradePointAverage \u003d \"\";"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new GradePointAverage(invalidGradePointAverage));"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"    public void isValidGradePointAverage() {"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"        // null gradePointAverage"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e"},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"                GradePointAverage.isValidGradePointAverage(null));"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        // invalid gradePointAverage"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(GradePointAverage.isValidGradePointAverage(\" \")); // spaces only"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(GradePointAverage.isValidGradePointAverage(\"5.10\")); // not in range"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(GradePointAverage.isValidGradePointAverage(\"test\")); // non-numeric"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(GradePointAverage.isValidGradePointAverage(\"-4.00\")); // negative number"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        // valid gradePointAverage"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(GradePointAverage.isValidGradePointAverage(\"4.93\"));"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(GradePointAverage.isValidGradePointAverage(\"4.75\"));"},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"kexiaowen":9,"tanhengyeow":30}},{"path":"src/test/java/seedu/address/model/person/CommentContainsPrefixesPredicateTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"public class CommentContainsPrefixesPredicateTest {"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    public void equals() {"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"He is decent\");"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"He is decent\", \"She is decent\");"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        CommentContainsPrefixesPredicate firstPredicate \u003d"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                new CommentContainsPrefixesPredicate(firstPredicateKeywordList);"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"        CommentContainsPrefixesPredicate secondPredicate \u003d"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                new CommentContainsPrefixesPredicate(secondPredicateKeywordList);"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        // same object -\u003e returns true"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        // same values -\u003e returns true"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        CommentContainsPrefixesPredicate firstPredicateCopy \u003d"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                new CommentContainsPrefixesPredicate(firstPredicateKeywordList);"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        // different types -\u003e returns false"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(1));"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        // null -\u003e returns false"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(null));"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        // different person -\u003e returns false"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"    public void test_commentContainsPrefixes_returnsTrue() {"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"        // One prefix"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"        CommentContainsPrefixesPredicate predicate \u003d"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"                new CommentContainsPrefixesPredicate(Collections.singletonList(\"He\"));"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withComment(\"He is decent\").build()));"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"        // Mixed-case prefix"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new CommentContainsPrefixesPredicate(Arrays.asList(\"hE\"));"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withComment(\"He is decent\").build()));"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"    public void test_commentDoesNotContainPrefixes_returnsFalse() {"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":"        // Zero prefix"},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"        CommentContainsPrefixesPredicate predicate \u003d"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"                new CommentContainsPrefixesPredicate(Collections.emptyList());"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withComment(\"He is decent\").build()));"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"        // Non-matching prefix"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new CommentContainsPrefixesPredicate(Arrays.asList(\"She\"));"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withComment(\"He is decent\").build()));"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":13,"tanhengyeow":55}},{"path":"src/test/java/seedu/address/model/person/JobAppliedContainsPrefixesPredicateTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"public class JobAppliedContainsPrefixesPredicateTest {"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    public void equals() {"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"Software Engineer\");"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"Front-end Developer\", \"Data Analyst\");"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        JobAppliedContainsPrefixesPredicate firstPredicate \u003d"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                new JobAppliedContainsPrefixesPredicate(firstPredicateKeywordList);"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"        JobAppliedContainsPrefixesPredicate secondPredicate \u003d"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                new JobAppliedContainsPrefixesPredicate(secondPredicateKeywordList);"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        // same object -\u003e returns true"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        // same values -\u003e returns true"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        JobAppliedContainsPrefixesPredicate firstPredicateCopy \u003d"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                new JobAppliedContainsPrefixesPredicate(firstPredicateKeywordList);"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        // different types -\u003e returns false"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(1));"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        // null -\u003e returns false"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(null));"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        // different person -\u003e returns false"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"    public void test_jobAppliedContainsPrefixes_returnsTrue() {"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"        // One prefix"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"        JobAppliedContainsPrefixesPredicate predicate \u003d"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"                new JobAppliedContainsPrefixesPredicate(Collections.singletonList(\"Soft\"));"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withJobApplied(\"Software Engineer\").build()));"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"        // Mixed-case prefix"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new JobAppliedContainsPrefixesPredicate(Arrays.asList(\"sOfT\"));"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withJobApplied(\"Software Engineer\").build()));"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"    public void test_jobAppliedDoesNotContainPrefixes_returnsFalse() {"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":"        // Zero prefix"},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"        JobAppliedContainsPrefixesPredicate predicate \u003d"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"                new JobAppliedContainsPrefixesPredicate(Collections.emptyList());"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withJobApplied(\"Software Engineer\").build()));"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"        // Non-matching prefix"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new JobAppliedContainsPrefixesPredicate(Arrays.asList(\"Data\"));"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withJobApplied(\"Software Engineer\").build()));"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":13,"tanhengyeow":55}},{"path":"src/test/java/seedu/address/model/person/EmailContainsSubstringsPredicateTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"public class EmailContainsSubstringsPredicateTest {"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    public void equals() {"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"hy@example.com\");"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"hy@example.com\", \"yh@example.com\");"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        EmailContainsSubstringsPredicate firstPredicate \u003d"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                new EmailContainsSubstringsPredicate(firstPredicateKeywordList);"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"        EmailContainsSubstringsPredicate secondPredicate \u003d"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                new EmailContainsSubstringsPredicate(secondPredicateKeywordList);"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        // same object -\u003e returns true"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        // same values -\u003e returns true"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        EmailContainsSubstringsPredicate firstPredicateCopy \u003d"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                new EmailContainsSubstringsPredicate(firstPredicateKeywordList);"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        // different types -\u003e returns false"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(1));"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        // null -\u003e returns false"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(null));"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        // different person -\u003e returns false"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"    public void test_emailContainsSubstrings_returnsTrue() {"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"        // One substring"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"        EmailContainsSubstringsPredicate predicate \u003d"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"                new EmailContainsSubstringsPredicate(Collections.singletonList(\"y@exa\"));"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"hy@example.com\").build()));"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"        // Mixed-case substring"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new EmailContainsSubstringsPredicate(Arrays.asList(\"Y@eXa\"));"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"hy@example.com\").build()));"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"    public void test_emailDoesNotContainSubstrings_returnsFalse() {"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":"        // Zero substring"},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"        EmailContainsSubstringsPredicate predicate \u003d"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"                new EmailContainsSubstringsPredicate(Collections.emptyList());"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"hy@lol.com\").build()));"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"        // Non-matching substring"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new EmailContainsSubstringsPredicate(Arrays.asList(\"yh@e\"));"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"hy@example.com\").build()));"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":13,"tanhengyeow":55}},{"path":"src/test/java/seedu/address/model/person/AddressContainsPrefixesPredicateTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"public class AddressContainsPrefixesPredicateTest {"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    public void equals() {"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"Kent Ridge Drive\");"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"Kent Ridge Drive\", \"Computing Drive\");"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        AddressContainsPrefixesPredicate firstPredicate \u003d"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                new AddressContainsPrefixesPredicate(firstPredicateKeywordList);"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"        AddressContainsPrefixesPredicate secondPredicate \u003d"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                new AddressContainsPrefixesPredicate(secondPredicateKeywordList);"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        // same object -\u003e returns true"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        // same values -\u003e returns true"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        AddressContainsPrefixesPredicate firstPredicateCopy \u003d"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                new AddressContainsPrefixesPredicate(firstPredicateKeywordList);"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        // different types -\u003e returns false"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(1));"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        // null -\u003e returns false"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(null));"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        // different person -\u003e returns false"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"    public void test_addressContainsPrefixes_returnsTrue() {"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"        // One prefix"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"        AddressContainsPrefixesPredicate predicate \u003d"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"                new AddressContainsPrefixesPredicate(Collections.singletonList(\"Com\"));"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Computing Drive\").build()));"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"        // Mixed-case prefix"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new AddressContainsPrefixesPredicate(Arrays.asList(\"cOm\"));"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Computing Drive\").build()));"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"    public void test_addressDoesNotContainPrefixes_returnsFalse() {"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":"        // Zero prefix"},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"        AddressContainsPrefixesPredicate predicate \u003d"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"                new AddressContainsPrefixesPredicate(Collections.emptyList());"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAddress(\"Computing Drive\").build()));"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"        // Non-matching prefix"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new AddressContainsPrefixesPredicate(Arrays.asList(\"Sci\"));"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAddress(\"Computing Drive\").build()));"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":13,"tanhengyeow":55}},{"path":"src/test/java/seedu/address/model/person/PhoneContainsKeywordsPredicateTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"public class PhoneContainsKeywordsPredicateTest {"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    public void equals() {"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"999\");"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"999\", \"555\");"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        PhoneContainsKeywordsPredicate firstPredicate \u003d new PhoneContainsKeywordsPredicate(firstPredicateKeywordList);"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"        PhoneContainsKeywordsPredicate secondPredicate \u003d new PhoneContainsKeywordsPredicate(secondPredicateKeywordList);"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"        // same object -\u003e returns true"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));"},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        // same values -\u003e returns true"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        PhoneContainsKeywordsPredicate firstPredicateCopy \u003d"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"                new PhoneContainsKeywordsPredicate(firstPredicateKeywordList);"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        // different types -\u003e returns false"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(1));"},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        // null -\u003e returns false"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(null));"},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        // different person -\u003e returns false"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));"},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":"    public void test_phoneContainsKeywords_returnsTrue() {"},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"        // One keyword"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"        PhoneContainsKeywordsPredicate predicate \u003d"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"                new PhoneContainsKeywordsPredicate(Collections.singletonList(\"999555\"));"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"999555\").build()));"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"        // Multiple keywords"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(Arrays.asList(\"999555\", \"555999\"));"},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"999555\").build()));"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"        // Only one matching keyword"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(Arrays.asList(\"111222\", \"222111\"));"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"111222\").build()));"},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"    public void test_phoneDoesNotContainKeywords_returnsFalse() {"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"        // Zero keywords"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"        PhoneContainsKeywordsPredicate predicate \u003d new PhoneContainsKeywordsPredicate(Collections.emptyList());"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"999\").build()));"},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"        // Non-matching keyword"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(Arrays.asList(\"555\"));"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"999111\").build()));"},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":69,"author":{"gitID":"tanhengyeow"},"content":"        // Keywords match name, email, expected graduation year and address, but does not match phone"},{"lineNumber":70,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate("},{"lineNumber":71,"author":{"gitID":"tanhengyeow"},"content":"                Arrays.asList(\"Alice\", \"alice@email.com\", \"Main\", \"Street\", \"2020\"));"},{"lineNumber":72,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")"},{"lineNumber":73,"author":{"gitID":"tanhengyeow"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").withExpectedGraduationYear(\"2020\").build()));"},{"lineNumber":74,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":75,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":13,"tanhengyeow":62}},{"path":"src/test/java/seedu/address/model/person/InterviewDateInKeywordsRangePredicateTest.java","lines":[{"lineNumber":1,"author":{"gitID":"kexiaowen"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":3,"author":{"gitID":"kexiaowen"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"kexiaowen"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":6,"author":{"gitID":"mhq199657"},"content":"import java.time.LocalDateTime;"},{"lineNumber":7,"author":{"gitID":"mhq199657"},"content":"import java.time.Month;"},{"lineNumber":8,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":9,"author":{"gitID":"mhq199657"},"content":"import org.junit.Test;"},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":"import seedu.address.logic.parser.FilterRange;"},{"lineNumber":12,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.util.InterviewDateUtil;"},{"lineNumber":13,"author":{"gitID":"mhq199657"},"content":"import seedu.address.testutil.Assert;"},{"lineNumber":14,"author":{"gitID":"mhq199657"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":"//@@author mhq199657"},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":"public class InterviewDateInKeywordsRangePredicateTest {"},{"lineNumber":17,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"mhq199657"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new InterviewDateInKeywordsRangePredicate(null));"},{"lineNumber":20,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":22,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":23,"author":{"gitID":"mhq199657"},"content":"    public void equals() {"},{"lineNumber":24,"author":{"gitID":"mhq199657"},"content":"        String firstRangeLower \u003d \"20180404\";"},{"lineNumber":25,"author":{"gitID":"mhq199657"},"content":"        String firstRangeHigher \u003d \"20180411\";"},{"lineNumber":26,"author":{"gitID":"mhq199657"},"content":"        String secondRangeExact \u003d \"20180505\";"},{"lineNumber":27,"author":{"gitID":"mhq199657"},"content":"        FilterRange\u003cInterviewDate\u003e firstPredicateFilterRange \u003d new FilterRange\u003cInterviewDate\u003e("},{"lineNumber":28,"author":{"gitID":"mhq199657"},"content":"                new InterviewDate(InterviewDateUtil.formLowerInterviewDateTime(firstRangeLower)),"},{"lineNumber":29,"author":{"gitID":"mhq199657"},"content":"                new InterviewDate(InterviewDateUtil.formHigherInterviewDateTime(firstRangeHigher)));"},{"lineNumber":30,"author":{"gitID":"mhq199657"},"content":"        FilterRange\u003cInterviewDate\u003e secondPredicateFilterRange \u003d new FilterRange\u003cInterviewDate\u003e("},{"lineNumber":31,"author":{"gitID":"mhq199657"},"content":"                new InterviewDate(InterviewDateUtil.formLowerInterviewDateTime(secondRangeExact)),"},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":"                new InterviewDate(InterviewDateUtil.formHigherInterviewDateTime(secondRangeExact)));"},{"lineNumber":33,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":34,"author":{"gitID":"mhq199657"},"content":"        InterviewDateInKeywordsRangePredicate firstPredicate \u003d"},{"lineNumber":35,"author":{"gitID":"mhq199657"},"content":"                new InterviewDateInKeywordsRangePredicate(firstPredicateFilterRange);"},{"lineNumber":36,"author":{"gitID":"mhq199657"},"content":"        InterviewDateInKeywordsRangePredicate secondPredicate \u003d"},{"lineNumber":37,"author":{"gitID":"mhq199657"},"content":"                new InterviewDateInKeywordsRangePredicate(secondPredicateFilterRange);"},{"lineNumber":38,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":39,"author":{"gitID":"mhq199657"},"content":"        // same object -\u003e returns true"},{"lineNumber":40,"author":{"gitID":"mhq199657"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));"},{"lineNumber":41,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":42,"author":{"gitID":"mhq199657"},"content":"        // same values -\u003e returns true"},{"lineNumber":43,"author":{"gitID":"mhq199657"},"content":"        InterviewDateInKeywordsRangePredicate firstPredicateCopy \u003d"},{"lineNumber":44,"author":{"gitID":"mhq199657"},"content":"                new InterviewDateInKeywordsRangePredicate(firstPredicateFilterRange);"},{"lineNumber":45,"author":{"gitID":"mhq199657"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));"},{"lineNumber":46,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":47,"author":{"gitID":"mhq199657"},"content":"        // different types -\u003e returns false"},{"lineNumber":48,"author":{"gitID":"mhq199657"},"content":"        assertFalse(firstPredicate.equals(1));"},{"lineNumber":49,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":50,"author":{"gitID":"mhq199657"},"content":"        // null -\u003e returns false"},{"lineNumber":51,"author":{"gitID":"mhq199657"},"content":"        assertFalse(firstPredicate \u003d\u003d null);"},{"lineNumber":52,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":53,"author":{"gitID":"mhq199657"},"content":"        // different person -\u003e returns false"},{"lineNumber":54,"author":{"gitID":"mhq199657"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));"},{"lineNumber":55,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":57,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":58,"author":{"gitID":"mhq199657"},"content":"    public void test_interviewDateInKeywordsRange_returnsTrue() {"},{"lineNumber":59,"author":{"gitID":"mhq199657"},"content":"        // ranged keyword"},{"lineNumber":60,"author":{"gitID":"mhq199657"},"content":"        InterviewDateInKeywordsRangePredicate predicate \u003d"},{"lineNumber":61,"author":{"gitID":"mhq199657"},"content":"                new InterviewDateInKeywordsRangePredicate("},{"lineNumber":62,"author":{"gitID":"mhq199657"},"content":"                        new FilterRange\u003cInterviewDate\u003e("},{"lineNumber":63,"author":{"gitID":"mhq199657"},"content":"                                new InterviewDate(InterviewDateUtil.formLowerInterviewDateTime(\"20180404\")),"},{"lineNumber":64,"author":{"gitID":"mhq199657"},"content":"                                new InterviewDate(InterviewDateUtil.formHigherInterviewDateTime(\"20180406\"))));"},{"lineNumber":65,"author":{"gitID":"mhq199657"},"content":"        assertTrue(predicate.test(new PersonBuilder()"},{"lineNumber":66,"author":{"gitID":"mhq199657"},"content":"                .withInterviewDate(LocalDateTime.of(2018, Month.APRIL, 6, 14, 0, 0)).build()));"},{"lineNumber":67,"author":{"gitID":"mhq199657"},"content":"        // single keyword"},{"lineNumber":68,"author":{"gitID":"mhq199657"},"content":"        predicate \u003d"},{"lineNumber":69,"author":{"gitID":"mhq199657"},"content":"                new InterviewDateInKeywordsRangePredicate("},{"lineNumber":70,"author":{"gitID":"mhq199657"},"content":"                        new FilterRange\u003cInterviewDate\u003e("},{"lineNumber":71,"author":{"gitID":"mhq199657"},"content":"                                new InterviewDate(InterviewDateUtil.formLowerInterviewDateTime(\"20180404\")),"},{"lineNumber":72,"author":{"gitID":"mhq199657"},"content":"                                new InterviewDate(InterviewDateUtil.formHigherInterviewDateTime(\"20180404\"))));"},{"lineNumber":73,"author":{"gitID":"mhq199657"},"content":"        assertTrue(predicate.test(new PersonBuilder()"},{"lineNumber":74,"author":{"gitID":"mhq199657"},"content":"                .withInterviewDate(LocalDateTime.of(2018, Month.APRIL, 4, 23, 59, 59)).build()));"},{"lineNumber":75,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":76,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":77,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":78,"author":{"gitID":"mhq199657"},"content":"    public void test_interviewDateNotInKeywordsRange_returnsFalse() {"},{"lineNumber":79,"author":{"gitID":"mhq199657"},"content":"        // Non-matching keyword for range predicate"},{"lineNumber":80,"author":{"gitID":"mhq199657"},"content":"        InterviewDateInKeywordsRangePredicate predicate \u003d"},{"lineNumber":81,"author":{"gitID":"mhq199657"},"content":"                new InterviewDateInKeywordsRangePredicate("},{"lineNumber":82,"author":{"gitID":"mhq199657"},"content":"                        new FilterRange\u003cInterviewDate\u003e("},{"lineNumber":83,"author":{"gitID":"mhq199657"},"content":"                                new InterviewDate(InterviewDateUtil.formLowerInterviewDateTime(\"20180404\")),"},{"lineNumber":84,"author":{"gitID":"mhq199657"},"content":"                                new InterviewDate(InterviewDateUtil.formHigherInterviewDateTime(\"20180406\"))));"},{"lineNumber":85,"author":{"gitID":"mhq199657"},"content":"        assertFalse(predicate.test(new PersonBuilder()"},{"lineNumber":86,"author":{"gitID":"mhq199657"},"content":"                .withInterviewDate(LocalDateTime.of(2018, Month.APRIL, 3, 23, 59, 59)).build()));"},{"lineNumber":87,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":88,"author":{"gitID":"mhq199657"},"content":"        // Not-in-range keyword for ranged predicate"},{"lineNumber":89,"author":{"gitID":"mhq199657"},"content":"        predicate \u003d"},{"lineNumber":90,"author":{"gitID":"mhq199657"},"content":"                new InterviewDateInKeywordsRangePredicate("},{"lineNumber":91,"author":{"gitID":"mhq199657"},"content":"                        new FilterRange\u003cInterviewDate\u003e("},{"lineNumber":92,"author":{"gitID":"mhq199657"},"content":"                                new InterviewDate(InterviewDateUtil.formLowerInterviewDateTime(\"20180404\")),"},{"lineNumber":93,"author":{"gitID":"mhq199657"},"content":"                                new InterviewDate(InterviewDateUtil.formHigherInterviewDateTime(\"20180404\"))));"},{"lineNumber":94,"author":{"gitID":"mhq199657"},"content":"        assertFalse(predicate.test(new PersonBuilder()"},{"lineNumber":95,"author":{"gitID":"mhq199657"},"content":"                .withInterviewDate(LocalDateTime.of(2018, Month.APRIL, 5, 0, 0, 0)).build()));"},{"lineNumber":96,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":97,"author":{"gitID":"mhq199657"},"content":"}"}],"authorContributionMap":{"kexiaowen":5,"mhq199657":92}},{"path":"src/test/java/seedu/address/model/person/MajorContainsKeywordsPredicateTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"public class MajorContainsKeywordsPredicateTest {"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    public void equals() {"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"Computer\");"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"Computer\", \"Science\");"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        MajorContainsKeywordsPredicate firstPredicate \u003d"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                new MajorContainsKeywordsPredicate(firstPredicateKeywordList);"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"        MajorContainsKeywordsPredicate secondPredicate \u003d"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                new MajorContainsKeywordsPredicate(secondPredicateKeywordList);"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        // same object -\u003e returns true"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        // same values -\u003e returns true"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        MajorContainsKeywordsPredicate firstPredicateCopy \u003d"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                new MajorContainsKeywordsPredicate(firstPredicateKeywordList);"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        // different types -\u003e returns false"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(1));"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        // null -\u003e returns false"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate \u003d\u003d null);"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        // different person -\u003e returns false"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"    public void test_majorContainsKeywords_returnsTrue() {"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"        // One keyword"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"        MajorContainsKeywordsPredicate predicate \u003d"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"                new MajorContainsKeywordsPredicate(Collections.singletonList(\"Computer\"));"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withMajor(\"Computer Science\").build()));"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"        // Multiple keywords"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new MajorContainsKeywordsPredicate(Arrays.asList(\"Computer\", \"Science\"));"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withMajor(\"Computer Science\").build()));"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":"        // Only one matching keyword"},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new MajorContainsKeywordsPredicate(Arrays.asList(\"Computer\", \"Engineering\"));"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withMajor(\"Computer Science\").build()));"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"        // Mixed-case keywords"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new MajorContainsKeywordsPredicate(Arrays.asList(\"ComPutEr\", \"SciEncE\"));"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withMajor(\"Computer Science\").build()));"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"    public void test_majorDoesNotContainKeywords_returnsFalse() {"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"        // Zero keywords"},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":"        MajorContainsKeywordsPredicate predicate \u003d new MajorContainsKeywordsPredicate(Collections.emptyList());"},{"lineNumber":69,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withMajor(\"Computer Science\").build()));"},{"lineNumber":70,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":71,"author":{"gitID":"tanhengyeow"},"content":"        // Non-matching keyword"},{"lineNumber":72,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new MajorContainsKeywordsPredicate(Arrays.asList(\"Security\"));"},{"lineNumber":73,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withMajor(\"Computer Science\").build()));"},{"lineNumber":74,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":75,"author":{"gitID":"tanhengyeow"},"content":"        // Keywords match phone, email, expected graduation year and address, but does not match major"},{"lineNumber":76,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new MajorContainsKeywordsPredicate("},{"lineNumber":77,"author":{"gitID":"tanhengyeow"},"content":"                Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\", \"2020\", \"Information\", \"Security\"));"},{"lineNumber":78,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")"},{"lineNumber":79,"author":{"gitID":"tanhengyeow"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").withExpectedGraduationYear(\"2020\")"},{"lineNumber":80,"author":{"gitID":"tanhengyeow"},"content":"                .withMajor(\"Computer Science\").build()));"},{"lineNumber":81,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":82,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":13,"tanhengyeow":69}},{"path":"src/test/java/seedu/address/model/person/NameContainsPrefixesPredicateTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"public class NameContainsPrefixesPredicateTest {"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    public void equals() {"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        NameContainsPrefixesPredicate firstPredicate \u003d"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                new NameContainsPrefixesPredicate(firstPredicateKeywordList);"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"        NameContainsPrefixesPredicate secondPredicate \u003d"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                new NameContainsPrefixesPredicate(secondPredicateKeywordList);"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        // same object -\u003e returns true"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        // same values -\u003e returns true"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        NameContainsPrefixesPredicate firstPredicateCopy \u003d"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                new NameContainsPrefixesPredicate(firstPredicateKeywordList);"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        // different types -\u003e returns false"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(1));"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        // null -\u003e returns false"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(null));"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        // different person -\u003e returns false"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"    public void test_nameContainsPrefixes_returnsTrue() {"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"        // One prefix"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"        NameContainsPrefixesPredicate predicate \u003d"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"                new NameContainsPrefixesPredicate(Collections.singletonList(\"Ali\"));"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"        // Mixed-case prefix"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new NameContainsPrefixesPredicate(Arrays.asList(\"aLi\"));"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"    public void test_nameDoesNotContainPrefixes_returnsFalse() {"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":"        // Zero prefix"},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"        NameContainsPrefixesPredicate predicate \u003d new NameContainsPrefixesPredicate(Collections.emptyList());"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":"        // Non-matching prefix"},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new NameContainsPrefixesPredicate(Arrays.asList(\"Charl\"));"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":13,"tanhengyeow":54}},{"path":"src/test/java/seedu/address/model/person/PhoneContainsSuffixesPredicateTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"public class PhoneContainsSuffixesPredicateTest {"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    public void equals() {"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"999\");"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"999\", \"555\");"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        PhoneContainsSuffixesPredicate firstPredicate \u003d"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                new PhoneContainsSuffixesPredicate(firstPredicateKeywordList);"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"        PhoneContainsSuffixesPredicate secondPredicate \u003d"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                new PhoneContainsSuffixesPredicate(secondPredicateKeywordList);"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        // same object -\u003e returns true"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        // same values -\u003e returns true"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        PhoneContainsSuffixesPredicate firstPredicateCopy \u003d"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                new PhoneContainsSuffixesPredicate(firstPredicateKeywordList);"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        // different types -\u003e returns false"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(1));"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        // null -\u003e returns false"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(null));"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        // different person -\u003e returns false"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"    public void test_phoneContainsSuffixes_returnsTrue() {"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"        // One suffix"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"        PhoneContainsSuffixesPredicate predicate \u003d"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"                new PhoneContainsSuffixesPredicate(Collections.singletonList(\"55\"));"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"999555\").build()));"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"    public void test_phoneDoesNotContainSuffixes_returnsFalse() {"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"        // Zero suffix"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":"        PhoneContainsSuffixesPredicate predicate \u003d"},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"                new PhoneContainsSuffixesPredicate(Collections.emptyList());"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"999\").build()));"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"        // Non-matching suffix"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new PhoneContainsSuffixesPredicate(Arrays.asList(\"55\"));"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"999111\").build()));"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":13,"tanhengyeow":51}},{"path":"src/test/java/seedu/address/model/person/ExpectedGraduationYearInKeywordsRangePredicateTest.java","lines":[{"lineNumber":1,"author":{"gitID":"mhq199657"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":3,"author":{"gitID":"mhq199657"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"mhq199657"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":6,"author":{"gitID":"mhq199657"},"content":"import org.junit.Test;"},{"lineNumber":7,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":8,"author":{"gitID":"mhq199657"},"content":"import seedu.address.logic.parser.FilterRange;"},{"lineNumber":9,"author":{"gitID":"mhq199657"},"content":"import seedu.address.testutil.Assert;"},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":"//@@author mhq199657"},{"lineNumber":12,"author":{"gitID":"mhq199657"},"content":"public class ExpectedGraduationYearInKeywordsRangePredicateTest {"},{"lineNumber":13,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":14,"author":{"gitID":"mhq199657"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new ExpectedGraduationYearInKeywordsRangePredicate(null));"},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":17,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":18,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":"    public void equals() {"},{"lineNumber":20,"author":{"gitID":"mhq199657"},"content":"        FilterRange\u003cExpectedGraduationYear\u003e firstPredicateFilterRange \u003d new FilterRange\u003c\u003e("},{"lineNumber":21,"author":{"gitID":"mhq199657"},"content":"                new ExpectedGraduationYear(\"2018\"), new ExpectedGraduationYear(\"2020\"));"},{"lineNumber":22,"author":{"gitID":"mhq199657"},"content":"        FilterRange\u003cExpectedGraduationYear\u003e secondPredicateFilterRange \u003d new FilterRange\u003c\u003e("},{"lineNumber":23,"author":{"gitID":"mhq199657"},"content":"                new ExpectedGraduationYear(\"2021\"));"},{"lineNumber":24,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":25,"author":{"gitID":"mhq199657"},"content":"        ExpectedGraduationYearInKeywordsRangePredicate firstPredicate \u003d"},{"lineNumber":26,"author":{"gitID":"mhq199657"},"content":"                new ExpectedGraduationYearInKeywordsRangePredicate(firstPredicateFilterRange);"},{"lineNumber":27,"author":{"gitID":"mhq199657"},"content":"        ExpectedGraduationYearInKeywordsRangePredicate secondPredicate \u003d"},{"lineNumber":28,"author":{"gitID":"mhq199657"},"content":"                new ExpectedGraduationYearInKeywordsRangePredicate(secondPredicateFilterRange);"},{"lineNumber":29,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":30,"author":{"gitID":"mhq199657"},"content":"        // same object -\u003e returns true"},{"lineNumber":31,"author":{"gitID":"mhq199657"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));"},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":33,"author":{"gitID":"mhq199657"},"content":"        // same values -\u003e returns true"},{"lineNumber":34,"author":{"gitID":"mhq199657"},"content":"        ExpectedGraduationYearInKeywordsRangePredicate firstPredicateCopy \u003d"},{"lineNumber":35,"author":{"gitID":"mhq199657"},"content":"                new ExpectedGraduationYearInKeywordsRangePredicate(firstPredicateFilterRange);"},{"lineNumber":36,"author":{"gitID":"mhq199657"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));"},{"lineNumber":37,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":38,"author":{"gitID":"mhq199657"},"content":"        // different types -\u003e returns false"},{"lineNumber":39,"author":{"gitID":"mhq199657"},"content":"        assertFalse(firstPredicate.equals(1));"},{"lineNumber":40,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":41,"author":{"gitID":"mhq199657"},"content":"        // null -\u003e returns false"},{"lineNumber":42,"author":{"gitID":"mhq199657"},"content":"        assertFalse(firstPredicate \u003d\u003d null);"},{"lineNumber":43,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":44,"author":{"gitID":"mhq199657"},"content":"        // different person -\u003e returns false"},{"lineNumber":45,"author":{"gitID":"mhq199657"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));"},{"lineNumber":46,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":47,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":48,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":49,"author":{"gitID":"mhq199657"},"content":"    public void test_expectedGraduationYearInKeywordsRange_returnsTrue() {"},{"lineNumber":50,"author":{"gitID":"mhq199657"},"content":"        // Single keyword"},{"lineNumber":51,"author":{"gitID":"mhq199657"},"content":"        ExpectedGraduationYearInKeywordsRangePredicate predicate \u003d"},{"lineNumber":52,"author":{"gitID":"mhq199657"},"content":"                new ExpectedGraduationYearInKeywordsRangePredicate("},{"lineNumber":53,"author":{"gitID":"mhq199657"},"content":"                        new FilterRange\u003cExpectedGraduationYear\u003e(new ExpectedGraduationYear(\"2021\")));"},{"lineNumber":54,"author":{"gitID":"mhq199657"},"content":"        assertTrue(predicate.test(new PersonBuilder().withExpectedGraduationYear(\"2021\").build()));"},{"lineNumber":55,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":56,"author":{"gitID":"mhq199657"},"content":"        // Ranged keyword"},{"lineNumber":57,"author":{"gitID":"mhq199657"},"content":"        predicate \u003d new ExpectedGraduationYearInKeywordsRangePredicate(new FilterRange\u003cExpectedGraduationYear\u003e("},{"lineNumber":58,"author":{"gitID":"mhq199657"},"content":"                new ExpectedGraduationYear(\"2017\"), new ExpectedGraduationYear(\"2020\")));"},{"lineNumber":59,"author":{"gitID":"mhq199657"},"content":"        assertTrue(predicate.test(new PersonBuilder().withExpectedGraduationYear(\"2020\").build()));"},{"lineNumber":60,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":61,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":62,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":63,"author":{"gitID":"mhq199657"},"content":"    public void test_expectedGraduationYearNotInKeywordsRange_returnsFalse() {"},{"lineNumber":64,"author":{"gitID":"mhq199657"},"content":"        // Non-matching keyword for single predicate"},{"lineNumber":65,"author":{"gitID":"mhq199657"},"content":"        ExpectedGraduationYearInKeywordsRangePredicate predicate \u003d"},{"lineNumber":66,"author":{"gitID":"mhq199657"},"content":"                new ExpectedGraduationYearInKeywordsRangePredicate("},{"lineNumber":67,"author":{"gitID":"mhq199657"},"content":"                        new FilterRange\u003cExpectedGraduationYear\u003e(new ExpectedGraduationYear(\"2025\")));"},{"lineNumber":68,"author":{"gitID":"mhq199657"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"2020\").build()));"},{"lineNumber":69,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":70,"author":{"gitID":"mhq199657"},"content":"        // Not-in-range keyword for ranged predicate"},{"lineNumber":71,"author":{"gitID":"mhq199657"},"content":"        predicate \u003d new ExpectedGraduationYearInKeywordsRangePredicate(new FilterRange\u003cExpectedGraduationYear\u003e("},{"lineNumber":72,"author":{"gitID":"mhq199657"},"content":"                new ExpectedGraduationYear(\"2024\"), new ExpectedGraduationYear(\"2025\")));"},{"lineNumber":73,"author":{"gitID":"mhq199657"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")"},{"lineNumber":74,"author":{"gitID":"mhq199657"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").withExpectedGraduationYear(\"2020\").build()));"},{"lineNumber":75,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":76,"author":{"gitID":"mhq199657"},"content":"}"}],"authorContributionMap":{"mhq199657":76}},{"path":"src/test/java/seedu/address/model/person/UniversityContainsPrefixesPredicateTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"public class UniversityContainsPrefixesPredicateTest {"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    public void equals() {"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"NUS\");"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"NUS\", \"NTU\");"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        UniversityContainsPrefixesPredicate firstPredicate \u003d"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                new UniversityContainsPrefixesPredicate(firstPredicateKeywordList);"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"        UniversityContainsPrefixesPredicate secondPredicate \u003d"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                new UniversityContainsPrefixesPredicate(secondPredicateKeywordList);"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        // same object -\u003e returns true"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        // same values -\u003e returns true"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        UniversityContainsPrefixesPredicate firstPredicateCopy \u003d"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                new UniversityContainsPrefixesPredicate(firstPredicateKeywordList);"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        // different types -\u003e returns false"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(1));"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        // null -\u003e returns false"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(null));"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        // different person -\u003e returns false"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"    public void test_universityContainsPrefixes_returnsTrue() {"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"        // One prefix"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"        UniversityContainsSubstringsPredicate predicate \u003d"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"                new UniversityContainsSubstringsPredicate(Collections.singletonList(\"e NU\"));"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withUniversity(\"Yale NUS\").build()));"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"        // Mixed-case substring"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new UniversityContainsSubstringsPredicate(Arrays.asList(\"LE nu\"));"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withUniversity(\"Yale NUS\").build()));"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"    public void test_universityDoesNotContainSubstrings_returnsFalse() {"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":"        // Zero substring"},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"        UniversityContainsSubstringsPredicate predicate \u003d"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"                new UniversityContainsSubstringsPredicate(Collections.emptyList());"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withUniversity(\"NUS\").build()));"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"        // Non-matching substring"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new UniversityContainsSubstringsPredicate(Arrays.asList(\"sm\"));"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withUniversity(\"NUS\").build()));"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":13,"tanhengyeow":55}},{"path":"src/test/java/seedu/address/model/person/StatusTest.java","lines":[{"lineNumber":1,"author":{"gitID":"mhq199657"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":7,"author":{"gitID":"mhq199657"},"content":"import org.junit.Test;"},{"lineNumber":8,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":9,"author":{"gitID":"mhq199657"},"content":"import seedu.address.testutil.Assert;"},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":"public class StatusTest {"},{"lineNumber":12,"author":{"gitID":"mhq199657"},"content":"    //@@author mhq199657"},{"lineNumber":13,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":14,"author":{"gitID":"mhq199657"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Status(null));"},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":17,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":18,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":"    public void constructor_invalidStatusIndex_throwsIllegalArgumentException() {"},{"lineNumber":20,"author":{"gitID":"mhq199657"},"content":"        int invalidStatusIndex \u003d 0;"},{"lineNumber":21,"author":{"gitID":"mhq199657"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Status(invalidStatusIndex));"},{"lineNumber":22,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":23,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":24,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":25,"author":{"gitID":"mhq199657"},"content":"    public void isValidStatus() {"},{"lineNumber":26,"author":{"gitID":"mhq199657"},"content":"        // null"},{"lineNumber":27,"author":{"gitID":"mhq199657"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));"},{"lineNumber":28,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":29,"author":{"gitID":"mhq199657"},"content":"        //invalid status"},{"lineNumber":30,"author":{"gitID":"mhq199657"},"content":"        assertFalse(Status.isValidStatus(0)); //index out of range"},{"lineNumber":31,"author":{"gitID":"mhq199657"},"content":"        assertFalse(Status.isValidStatus(Status.STATUS_TYPE_CONUT + 1));"},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":"        // valid status"},{"lineNumber":33,"author":{"gitID":"mhq199657"},"content":"        assertTrue(Status.isValidStatus(Status.INDEX_STATUS_REJECTED));"},{"lineNumber":34,"author":{"gitID":"mhq199657"},"content":"        assertTrue(Status.isValidStatus(Status.INDEX_STATUS_INTERVIEW_SECOND_ROUND));"},{"lineNumber":35,"author":{"gitID":"mhq199657"},"content":"        assertTrue(Status.isValidStatus(Status.INDEX_STATUS_OFFERED));"},{"lineNumber":36,"author":{"gitID":"mhq199657"},"content":"        assertTrue(Status.isValidStatus(Status.INDEX_STATUS_WITHDRAWN));"},{"lineNumber":37,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":39,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":40,"author":{"gitID":"mhq199657"},"content":"    public void constructor_validStatus_rightColor() {"},{"lineNumber":41,"author":{"gitID":"mhq199657"},"content":"        Status s \u003d new Status(Status.INDEX_STATUS_INTERVIEW_FIRST_ROUND);"},{"lineNumber":42,"author":{"gitID":"mhq199657"},"content":"        assertEquals(Status.COLOR_INTERVIEW_FIRST_ROUND, s.color);"},{"lineNumber":43,"author":{"gitID":"mhq199657"},"content":"        s \u003d new Status(Status.INDEX_STATUS_WAITLIST);"},{"lineNumber":44,"author":{"gitID":"mhq199657"},"content":"        assertEquals(Status.COLOR_WAITLIST, s.color);"},{"lineNumber":45,"author":{"gitID":"mhq199657"},"content":"        s \u003d new Status(Status.INDEX_STATUS_ACCEPTED);"},{"lineNumber":46,"author":{"gitID":"mhq199657"},"content":"        assertEquals(Status.COLOR_ACCEPTED, s.color);"},{"lineNumber":47,"author":{"gitID":"mhq199657"},"content":"        s \u003d new Status();"},{"lineNumber":48,"author":{"gitID":"mhq199657"},"content":"        assertEquals(Status.COLOR_NEW, s.color);"},{"lineNumber":49,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":51,"author":{"gitID":"mhq199657"},"content":"    @Test"},{"lineNumber":52,"author":{"gitID":"mhq199657"},"content":"    public void equals() {"},{"lineNumber":53,"author":{"gitID":"mhq199657"},"content":"        Status status1 \u003d new Status();"},{"lineNumber":54,"author":{"gitID":"mhq199657"},"content":"        Status status2 \u003d new Status(Status.STATUS_NEW);"},{"lineNumber":55,"author":{"gitID":"mhq199657"},"content":"        assertEquals(status1, status2);"},{"lineNumber":56,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"mhq199657"},"content":"}"}],"authorContributionMap":{"mhq199657":54,"-":3}},{"path":"src/test/java/seedu/address/model/person/MajorContainsSuffixesPredicateTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"public class MajorContainsSuffixesPredicateTest {"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    public void equals() {"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"Computer\");"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"Computer\", \"Science\");"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        MajorContainsSuffixesPredicate firstPredicate \u003d"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                new MajorContainsSuffixesPredicate(firstPredicateKeywordList);"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"        MajorContainsSuffixesPredicate secondPredicate \u003d"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                new MajorContainsSuffixesPredicate(secondPredicateKeywordList);"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        // same object -\u003e returns true"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        // same values -\u003e returns true"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        MajorContainsSuffixesPredicate firstPredicateCopy \u003d"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                new MajorContainsSuffixesPredicate(firstPredicateKeywordList);"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        // different types -\u003e returns false"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(1));"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        // null -\u003e returns false"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate \u003d\u003d null);"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        // different person -\u003e returns false"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"    public void test_majorContainsSuffixes_returnsTrue() {"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"        // One suffix"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"        MajorContainsSuffixesPredicate predicate \u003d"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"                new MajorContainsSuffixesPredicate(Collections.singletonList(\"ence\"));"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withMajor(\"Computer Science\").build()));"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"        // Mixed-case suffix"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new MajorContainsSuffixesPredicate(Arrays.asList(\"EnCe\"));"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withMajor(\"Computer Science\").build()));"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"    public void test_majorDoesNotContainSuffixes_returnsFalse() {"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":"        // Zero suffix"},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"        MajorContainsSuffixesPredicate predicate \u003d new MajorContainsSuffixesPredicate(Collections.emptyList());"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withMajor(\"Computer Science\").build()));"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":"        // Non-matching suffix"},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new MajorContainsSuffixesPredicate(Arrays.asList(\"curity\"));"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withMajor(\"Computer Science\").build()));"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":13,"tanhengyeow":54}},{"path":"src/test/java/seedu/address/model/person/UniversityTest.java","lines":[{"lineNumber":1,"author":{"gitID":"kexiaowen"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":3,"author":{"gitID":"Ang-YC"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"Ang-YC"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":6,"author":{"gitID":"kexiaowen"},"content":"import org.junit.Test;"},{"lineNumber":7,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":8,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.testutil.Assert;"},{"lineNumber":9,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":10,"author":{"gitID":"kexiaowen"},"content":"//@@author kexiaowen"},{"lineNumber":11,"author":{"gitID":"kexiaowen"},"content":"public class UniversityTest {"},{"lineNumber":12,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":13,"author":{"gitID":"kexiaowen"},"content":"    private final University university \u003d new University(\"NUS\");"},{"lineNumber":14,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":15,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":16,"author":{"gitID":"kexiaowen"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":17,"author":{"gitID":"kexiaowen"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new University(null));"},{"lineNumber":18,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":20,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":21,"author":{"gitID":"kexiaowen"},"content":"    public void constructor_invalidUniversity_throwsIllegalArgumentException() {"},{"lineNumber":22,"author":{"gitID":"kexiaowen"},"content":"        String invalidUniversity \u003d \"\";"},{"lineNumber":23,"author":{"gitID":"kexiaowen"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new University(invalidUniversity));"},{"lineNumber":24,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":25,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":26,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":27,"author":{"gitID":"kexiaowen"},"content":"    public void isValidUniversity() {"},{"lineNumber":28,"author":{"gitID":"kexiaowen"},"content":"        // null university"},{"lineNumber":29,"author":{"gitID":"kexiaowen"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e University.isValidUniversity(null));"},{"lineNumber":30,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":31,"author":{"gitID":"kexiaowen"},"content":"        // invalid university"},{"lineNumber":32,"author":{"gitID":"kexiaowen"},"content":"        assertFalse(University.isValidUniversity(\"\")); // empty string"},{"lineNumber":33,"author":{"gitID":"kexiaowen"},"content":"        assertFalse(University.isValidUniversity(\" \")); // spaces only"},{"lineNumber":34,"author":{"gitID":"kexiaowen"},"content":"        assertFalse(University.isValidUniversity(\"^\")); // only non-alphanumeric characters"},{"lineNumber":35,"author":{"gitID":"kexiaowen"},"content":"        assertFalse(University.isValidUniversity(\"N*S\")); // contains non-alphanumeric characters"},{"lineNumber":36,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":37,"author":{"gitID":"kexiaowen"},"content":"        // valid name"},{"lineNumber":38,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(University.isValidUniversity(\"ntu\")); // alphabets only"},{"lineNumber":39,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(University.isValidUniversity(\"12345\")); // numbers only"},{"lineNumber":40,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(University.isValidUniversity(\"nus the 1st\")); // alphanumeric characters"},{"lineNumber":41,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(University.isValidUniversity(\"National University of Singapore\")); // with capital letters"},{"lineNumber":42,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(University.isValidUniversity(\"University of California Santa Barbara\")); // long names"},{"lineNumber":43,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":45,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"kexiaowen"},"content":"    public void equals_sameObject_returnsTrue() {"},{"lineNumber":47,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(university.equals(university));"},{"lineNumber":48,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":49,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":50,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":51,"author":{"gitID":"kexiaowen"},"content":"    public void equals_sameValues_returnsTrue() {"},{"lineNumber":52,"author":{"gitID":"kexiaowen"},"content":"        University universityCopy \u003d new University(\"NUS\");"},{"lineNumber":53,"author":{"gitID":"kexiaowen"},"content":"        assertTrue(university.equals(universityCopy));"},{"lineNumber":54,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":55,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":56,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":57,"author":{"gitID":"kexiaowen"},"content":"    public void equals_differentTypes_returnsFalse() {"},{"lineNumber":58,"author":{"gitID":"kexiaowen"},"content":"        assertFalse(university.equals(1));"},{"lineNumber":59,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":60,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":61,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":62,"author":{"gitID":"kexiaowen"},"content":"    public void equals_null_returnsFalse() {"},{"lineNumber":63,"author":{"gitID":"kexiaowen"},"content":"        assertFalse(university.equals(null));"},{"lineNumber":64,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":65,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":66,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":67,"author":{"gitID":"kexiaowen"},"content":"    public void equals_differentValues_returnsFalse() {"},{"lineNumber":68,"author":{"gitID":"kexiaowen"},"content":"        University differentUniversity \u003d new University(\"NTU\");"},{"lineNumber":69,"author":{"gitID":"kexiaowen"},"content":"        assertFalse(university.equals(differentUniversity));"},{"lineNumber":70,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":71,"author":{"gitID":"kexiaowen"},"content":"}"}],"authorContributionMap":{"kexiaowen":69,"Ang-YC":2}},{"path":"src/test/java/seedu/address/model/person/EmailContainsKeywordsPredicateTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"public class EmailContainsKeywordsPredicateTest {"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    public void equals() {"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"hy@example.com\");"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"hy@example.com\", \"yh@example.com\");"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        EmailContainsKeywordsPredicate firstPredicate \u003d"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                new EmailContainsKeywordsPredicate(firstPredicateKeywordList);"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"        EmailContainsKeywordsPredicate secondPredicate \u003d"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                new EmailContainsKeywordsPredicate(secondPredicateKeywordList);"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        // same object -\u003e returns true"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        // same values -\u003e returns true"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        EmailContainsKeywordsPredicate firstPredicateCopy \u003d"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                new EmailContainsKeywordsPredicate(firstPredicateKeywordList);"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        // different types -\u003e returns false"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(1));"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        // null -\u003e returns false"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(null));"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        // different person -\u003e returns false"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"    public void test_emailContainsKeywords_returnsTrue() {"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"        // One keyword"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"        EmailContainsKeywordsPredicate predicate \u003d"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"                new EmailContainsKeywordsPredicate(Collections.singletonList(\"hy@example.com\"));"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"hy@example.com\").build()));"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"        // Multiple keywords"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"hy@example.com\", \"yh@example.com\"));"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"hy@example.com\").build()));"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"    public void test_emailDoesNotContainKeywords_returnsFalse() {"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":"        // Zero keywords"},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"        EmailContainsKeywordsPredicate predicate \u003d"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"                new EmailContainsKeywordsPredicate(Collections.emptyList());"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"hy@lol.com\").build()));"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"        // Non-matching keyword"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"lol@lol.com\"));"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"hy@example.com\").build()));"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":"        // Keywords match phone, name, expected graduation year and address, but does not match email"},{"lineNumber":69,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate("},{"lineNumber":70,"author":{"gitID":"tanhengyeow"},"content":"                Arrays.asList(\"12345\", \"Alice\", \"Main\", \"Street\", \"2020\"));"},{"lineNumber":71,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")"},{"lineNumber":72,"author":{"gitID":"tanhengyeow"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").withExpectedGraduationYear(\"2020\").build()));"},{"lineNumber":73,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":74,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":13,"tanhengyeow":61}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE_WITHOUT_TAG;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON_WITH_FRIENDS_TAG_REMOVED;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL_WITHOUT_TAG;"},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;"},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;"},{"lineNumber":12,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import java.util.Collection;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":28,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.logic.commands.SortCommand;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":30,"author":{"gitID":"-"},"content":"import seedu.address.model.tag.Tag;"},{"lineNumber":31,"author":{"gitID":"-"},"content":"import seedu.address.model.tag.exceptions.TagNotFoundException;"},{"lineNumber":32,"author":{"gitID":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"public class AddressBookTest {"},{"lineNumber":35,"author":{"gitID":"-"},"content":""},{"lineNumber":36,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();"},{"lineNumber":40,"author":{"gitID":"-"},"content":""},{"lineNumber":41,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    public void constructor() {"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getTagList());"},{"lineNumber":45,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"-"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":48,"author":{"gitID":"-"},"content":"    public void resetData_null_throwsNullPointerException() {"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":50,"author":{"gitID":"-"},"content":"        addressBook.resetData(null);"},{"lineNumber":51,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"-"},"content":""},{"lineNumber":53,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":54,"author":{"gitID":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        addressBook.resetData(newData);"},{"lineNumber":57,"author":{"gitID":"-"},"content":"        assertEquals(newData, addressBook);"},{"lineNumber":58,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":59,"author":{"gitID":"-"},"content":""},{"lineNumber":60,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":61,"author":{"gitID":"-"},"content":"    public void resetData_withDuplicatePersons_throwsAssertionError() {"},{"lineNumber":62,"author":{"gitID":"-"},"content":"        // Repeat ALICE twice"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, ALICE);"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        List\u003cTag\u003e newTags \u003d new ArrayList\u003c\u003e(ALICE.getTags());"},{"lineNumber":65,"author":{"gitID":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons, newTags);"},{"lineNumber":66,"author":{"gitID":"-"},"content":""},{"lineNumber":67,"author":{"gitID":"-"},"content":"        thrown.expect(AssertionError.class);"},{"lineNumber":68,"author":{"gitID":"-"},"content":"        addressBook.resetData(newData);"},{"lineNumber":69,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":70,"author":{"gitID":"-"},"content":""},{"lineNumber":71,"author":{"gitID":"kexiaowen"},"content":"    //@@author kexiaowen"},{"lineNumber":72,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":73,"author":{"gitID":"kexiaowen"},"content":"    public void sortDesc_sortByRating_sortSuccessful() {"},{"lineNumber":74,"author":{"gitID":"kexiaowen"},"content":"        AddressBook newData \u003d getTypicalAddressBook();"},{"lineNumber":75,"author":{"gitID":"kexiaowen"},"content":"        newData.sortDesc(SortCommand.SortField.RATING);"},{"lineNumber":76,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":77,"author":{"gitID":"kexiaowen"},"content":"        AddressBook expectedAddressbook \u003d new AddressBookBuilder().withPerson(BENSON).withPerson(ALICE)"},{"lineNumber":78,"author":{"gitID":"kexiaowen"},"content":"                .withPerson(CARL).withPerson(DANIEL).withPerson(ELLE).withPerson(FIONA).withPerson(GEORGE).build();"},{"lineNumber":79,"author":{"gitID":"kexiaowen"},"content":"        assertEquals(expectedAddressbook.getPersonList(), newData.getPersonList());"},{"lineNumber":80,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":81,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":82,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":83,"author":{"gitID":"kexiaowen"},"content":"    public void sortAsc_sortByRating_sortSuccessful() {"},{"lineNumber":84,"author":{"gitID":"kexiaowen"},"content":"        AddressBook newData \u003d getTypicalAddressBook();"},{"lineNumber":85,"author":{"gitID":"kexiaowen"},"content":"        newData.sortAsc(SortCommand.SortField.RATING);"},{"lineNumber":86,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":87,"author":{"gitID":"kexiaowen"},"content":"        AddressBook expectedAddressbook \u003d new AddressBookBuilder().withPerson(CARL).withPerson(DANIEL)"},{"lineNumber":88,"author":{"gitID":"kexiaowen"},"content":"                .withPerson(ELLE).withPerson(FIONA).withPerson(GEORGE).withPerson(ALICE).withPerson(BENSON).build();"},{"lineNumber":89,"author":{"gitID":"kexiaowen"},"content":"        assertEquals(expectedAddressbook.getPersonList(), newData.getPersonList());"},{"lineNumber":90,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":91,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":92,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":93,"author":{"gitID":"kexiaowen"},"content":"    public void sortDesc_sortByGradePointAverage_sortSuccessful() {"},{"lineNumber":94,"author":{"gitID":"kexiaowen"},"content":"        AddressBook newData \u003d getTypicalAddressBook();"},{"lineNumber":95,"author":{"gitID":"kexiaowen"},"content":"        newData.sortDesc(SortCommand.SortField.GPA);"},{"lineNumber":96,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":97,"author":{"gitID":"kexiaowen"},"content":"        AddressBook expectedAddressbook \u003d new AddressBookBuilder().withPerson(CARL).withPerson(ALICE)"},{"lineNumber":98,"author":{"gitID":"kexiaowen"},"content":"                .withPerson(FIONA).withPerson(BENSON).withPerson(ELLE).withPerson(DANIEL).withPerson(GEORGE).build();"},{"lineNumber":99,"author":{"gitID":"kexiaowen"},"content":"        assertEquals(expectedAddressbook.getPersonList(), newData.getPersonList());"},{"lineNumber":100,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":101,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":102,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":103,"author":{"gitID":"kexiaowen"},"content":"    public void sortAsc_sortByGradePointAverage_sortSuccessful() {"},{"lineNumber":104,"author":{"gitID":"kexiaowen"},"content":"        AddressBook newData \u003d getTypicalAddressBook();"},{"lineNumber":105,"author":{"gitID":"kexiaowen"},"content":"        newData.sortAsc(SortCommand.SortField.GPA);"},{"lineNumber":106,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":107,"author":{"gitID":"kexiaowen"},"content":"        AddressBook expectedAddressbook \u003d new AddressBookBuilder().withPerson(GEORGE).withPerson(DANIEL)"},{"lineNumber":108,"author":{"gitID":"kexiaowen"},"content":"                .withPerson(ELLE).withPerson(BENSON).withPerson(FIONA).withPerson(ALICE).withPerson(CARL).build();"},{"lineNumber":109,"author":{"gitID":"kexiaowen"},"content":"        assertEquals(expectedAddressbook.getPersonList(), newData.getPersonList());"},{"lineNumber":110,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":111,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":112,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":113,"author":{"gitID":"kexiaowen"},"content":"    public void sortDesc_sortByName_sortSuccessful() {"},{"lineNumber":114,"author":{"gitID":"kexiaowen"},"content":"        AddressBook newData \u003d getTypicalAddressBook();"},{"lineNumber":115,"author":{"gitID":"kexiaowen"},"content":"        newData.sortDesc(SortCommand.SortField.NAME);"},{"lineNumber":116,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":117,"author":{"gitID":"kexiaowen"},"content":"        AddressBook expectedAddressbook \u003d new AddressBookBuilder().withPerson(GEORGE).withPerson(FIONA)"},{"lineNumber":118,"author":{"gitID":"kexiaowen"},"content":"                .withPerson(ELLE).withPerson(DANIEL).withPerson(CARL).withPerson(BENSON).withPerson(ALICE).build();"},{"lineNumber":119,"author":{"gitID":"kexiaowen"},"content":"        assertEquals(expectedAddressbook.getPersonList(), newData.getPersonList());"},{"lineNumber":120,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":121,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":122,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":123,"author":{"gitID":"kexiaowen"},"content":"    public void sortAsc_sortByName_sortSuccessful() {"},{"lineNumber":124,"author":{"gitID":"kexiaowen"},"content":"        AddressBook newData \u003d getTypicalAddressBook();"},{"lineNumber":125,"author":{"gitID":"kexiaowen"},"content":"        newData.sortAsc(SortCommand.SortField.NAME);"},{"lineNumber":126,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":127,"author":{"gitID":"kexiaowen"},"content":"        AddressBook expectedAddressbook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON)"},{"lineNumber":128,"author":{"gitID":"kexiaowen"},"content":"                .withPerson(CARL).withPerson(DANIEL).withPerson(ELLE).withPerson(FIONA).withPerson(GEORGE).build();"},{"lineNumber":129,"author":{"gitID":"kexiaowen"},"content":"        assertEquals(expectedAddressbook.getPersonList(), newData.getPersonList());"},{"lineNumber":130,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":131,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":132,"author":{"gitID":"kexiaowen"},"content":"    //@@author"},{"lineNumber":133,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":134,"author":{"gitID":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {"},{"lineNumber":135,"author":{"gitID":"-"},"content":"        thrown.expect(UnsupportedOperationException.class);"},{"lineNumber":136,"author":{"gitID":"-"},"content":"        addressBook.getPersonList().remove(0);"},{"lineNumber":137,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":138,"author":{"gitID":"-"},"content":""},{"lineNumber":139,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":140,"author":{"gitID":"-"},"content":"    public void getTagList_modifyList_throwsUnsupportedOperationException() {"},{"lineNumber":141,"author":{"gitID":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();"},{"lineNumber":142,"author":{"gitID":"-"},"content":"        addressBook.resetData(newData);"},{"lineNumber":143,"author":{"gitID":"-"},"content":"        assertEquals(newData, addressBook);"},{"lineNumber":144,"author":{"gitID":"-"},"content":"        thrown.expect(UnsupportedOperationException.class);"},{"lineNumber":145,"author":{"gitID":"-"},"content":"        addressBook.getTagList().remove(0);"},{"lineNumber":146,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":147,"author":{"gitID":"-"},"content":""},{"lineNumber":148,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":149,"author":{"gitID":"-"},"content":"    public void removeTag_tagNotFound_throwsTagNotFoundException() throws Exception {"},{"lineNumber":150,"author":{"gitID":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();"},{"lineNumber":151,"author":{"gitID":"-"},"content":"        addressBook.resetData(newData);"},{"lineNumber":152,"author":{"gitID":"-"},"content":"        thrown.expect(TagNotFoundException.class);"},{"lineNumber":153,"author":{"gitID":"-"},"content":"        addressBook.removeTag(new Tag(\"family\"));"},{"lineNumber":154,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":155,"author":{"gitID":"-"},"content":""},{"lineNumber":156,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":157,"author":{"gitID":"-"},"content":"    public void removeTag_tagIsFound_tagRemoved() throws Exception {"},{"lineNumber":158,"author":{"gitID":"-"},"content":"        AddressBook newData \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON)"},{"lineNumber":159,"author":{"gitID":"-"},"content":"                .withPerson(CARL).build();"},{"lineNumber":160,"author":{"gitID":"-"},"content":"        addressBook.resetData(newData);"},{"lineNumber":161,"author":{"gitID":"-"},"content":""},{"lineNumber":162,"author":{"gitID":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBookBuilder().withPerson(ALICE_WITHOUT_TAG)"},{"lineNumber":163,"author":{"gitID":"-"},"content":"                .withPerson(BENSON_WITH_FRIENDS_TAG_REMOVED).withPerson(CARL_WITHOUT_TAG).build();"},{"lineNumber":164,"author":{"gitID":"-"},"content":""},{"lineNumber":165,"author":{"gitID":"-"},"content":"        addressBook.removeTag(new Tag(\"friends\"));"},{"lineNumber":166,"author":{"gitID":"-"},"content":"        assertEquals(expectedAddressBook, addressBook);"},{"lineNumber":167,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":168,"author":{"gitID":"-"},"content":""},{"lineNumber":169,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":170,"author":{"gitID":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons and tags lists can violate interface constraints."},{"lineNumber":171,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":172,"author":{"gitID":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {"},{"lineNumber":173,"author":{"gitID":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();"},{"lineNumber":174,"author":{"gitID":"-"},"content":"        private final ObservableList\u003cTag\u003e tags \u003d FXCollections.observableArrayList();"},{"lineNumber":175,"author":{"gitID":"-"},"content":""},{"lineNumber":176,"author":{"gitID":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons, Collection\u003c? extends Tag\u003e tags) {"},{"lineNumber":177,"author":{"gitID":"-"},"content":"            this.persons.setAll(persons);"},{"lineNumber":178,"author":{"gitID":"-"},"content":"            this.tags.setAll(tags);"},{"lineNumber":179,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":180,"author":{"gitID":"-"},"content":""},{"lineNumber":181,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":182,"author":{"gitID":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {"},{"lineNumber":183,"author":{"gitID":"-"},"content":"            return persons;"},{"lineNumber":184,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":185,"author":{"gitID":"-"},"content":""},{"lineNumber":186,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":187,"author":{"gitID":"-"},"content":"        public ObservableList\u003cTag\u003e getTagList() {"},{"lineNumber":188,"author":{"gitID":"-"},"content":"            return tags;"},{"lineNumber":189,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":190,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":191,"author":{"gitID":"-"},"content":""},{"lineNumber":192,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"kexiaowen":63,"mhq199657":3,"-":125,"tanhengyeow":1}},{"path":"src/test/java/seedu/address/model/person/AddressContainsSubstringsPredicateTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"public class AddressContainsSubstringsPredicateTest {"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    public void equals() {"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"Kent Ridge Drive\");"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"Kent Ridge Drive\", \"Computing Drive\");"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        AddressContainsSubstringsPredicate firstPredicate \u003d"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                new AddressContainsSubstringsPredicate(firstPredicateKeywordList);"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"        AddressContainsSubstringsPredicate secondPredicate \u003d"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                new AddressContainsSubstringsPredicate(secondPredicateKeywordList);"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        // same object -\u003e returns true"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        // same values -\u003e returns true"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        AddressContainsSubstringsPredicate firstPredicateCopy \u003d"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                new AddressContainsSubstringsPredicate(firstPredicateKeywordList);"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        // different types -\u003e returns false"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(1));"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        // null -\u003e returns false"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(null));"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        // different person -\u003e returns false"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"    public void test_addressContainsSubstrings_returnsTrue() {"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"        // One substring"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"        AddressContainsSubstringsPredicate predicate \u003d"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"                new AddressContainsSubstringsPredicate(Collections.singletonList(\"ing Dr\"));"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Computing Drive\").build()));"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"        // Mixed-case substring"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new AddressContainsSubstringsPredicate(Arrays.asList(\"tIng Dri\"));"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Computing Drive\").build()));"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"    public void test_addressDoesNotContainSubstrings_returnsFalse() {"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":"        // Zero substring"},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"        AddressContainsSubstringsPredicate predicate \u003d"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"                new AddressContainsSubstringsPredicate(Collections.emptyList());"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAddress(\"Computing Drive\").build()));"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"        // Non-matching substring"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new AddressContainsSubstringsPredicate(Arrays.asList(\"olland Dr\"));"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAddress(\"Computing Drive\").build()));"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":13,"tanhengyeow":55}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE_WITHOUT_TAG;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON_WITH_FRIENDS_TAG_REMOVED;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL_WITHOUT_TAG;"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.logic.commands.SortCommand;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.address.model.tag.Tag;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.address.model.tag.exceptions.TagNotFoundException;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import seedu.address.testutil.TypicalPersons;"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"public class ModelManagerTest {"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {"},{"lineNumber":34,"author":{"gitID":"-"},"content":"        ModelManager modelManager \u003d new ModelManager();"},{"lineNumber":35,"author":{"gitID":"-"},"content":"        thrown.expect(UnsupportedOperationException.class);"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        modelManager.getFilteredPersonList().remove(0);"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    public void equals() {"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();"},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"-"},"content":"        // same values -\u003e returns true"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        ModelManager modelManager \u003d new ModelManager(addressBook, userPrefs);"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));"},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"-"},"content":"        // same object -\u003e returns true"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        assertTrue(modelManager.equals(modelManager));"},{"lineNumber":52,"author":{"gitID":"-"},"content":""},{"lineNumber":53,"author":{"gitID":"-"},"content":"        // null -\u003e returns false"},{"lineNumber":54,"author":{"gitID":"-"},"content":"        assertFalse(modelManager.equals(null));"},{"lineNumber":55,"author":{"gitID":"-"},"content":""},{"lineNumber":56,"author":{"gitID":"-"},"content":"        // different types -\u003e returns false"},{"lineNumber":57,"author":{"gitID":"-"},"content":"        assertFalse(modelManager.equals(5));"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"-"},"content":"        // different addressBook -\u003e returns false"},{"lineNumber":60,"author":{"gitID":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));"},{"lineNumber":61,"author":{"gitID":"-"},"content":""},{"lineNumber":62,"author":{"gitID":"-"},"content":"        // different filteredList -\u003e returns false"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));"},{"lineNumber":65,"author":{"gitID":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));"},{"lineNumber":66,"author":{"gitID":"-"},"content":""},{"lineNumber":67,"author":{"gitID":"-"},"content":"        // resets modelManager to initial state for upcoming tests"},{"lineNumber":68,"author":{"gitID":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);"},{"lineNumber":69,"author":{"gitID":"-"},"content":""},{"lineNumber":70,"author":{"gitID":"-"},"content":"        // different userPrefs -\u003e returns true"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();"},{"lineNumber":72,"author":{"gitID":"-"},"content":"        differentUserPrefs.setAddressBookName(\"differentName\");"},{"lineNumber":73,"author":{"gitID":"-"},"content":"        assertTrue(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));"},{"lineNumber":74,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitID":"-"},"content":""},{"lineNumber":76,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":77,"author":{"gitID":"-"},"content":"    public void deleteTag_tagNotFound_throwsTagNotFoundException() throws Exception {"},{"lineNumber":78,"author":{"gitID":"-"},"content":"        AddressBook addressBook \u003d TypicalPersons.getTypicalAddressBook();"},{"lineNumber":79,"author":{"gitID":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();"},{"lineNumber":80,"author":{"gitID":"-"},"content":""},{"lineNumber":81,"author":{"gitID":"-"},"content":"        ModelManager modelManager \u003d new ModelManager(addressBook, userPrefs);"},{"lineNumber":82,"author":{"gitID":"-"},"content":"        thrown.expect(TagNotFoundException.class);"},{"lineNumber":83,"author":{"gitID":"-"},"content":"        modelManager.deleteTag(new Tag(\"family\"));"},{"lineNumber":84,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":85,"author":{"gitID":"-"},"content":""},{"lineNumber":86,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":87,"author":{"gitID":"-"},"content":"    public void deleteTag_tagIsFound_tagsDeleted() throws Exception {"},{"lineNumber":88,"author":{"gitID":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON)"},{"lineNumber":89,"author":{"gitID":"-"},"content":"                .withPerson(CARL).build();"},{"lineNumber":90,"author":{"gitID":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();"},{"lineNumber":91,"author":{"gitID":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBookBuilder().withPerson(ALICE_WITHOUT_TAG)"},{"lineNumber":92,"author":{"gitID":"-"},"content":"                .withPerson(BENSON_WITH_FRIENDS_TAG_REMOVED).withPerson(CARL_WITHOUT_TAG).build();"},{"lineNumber":93,"author":{"gitID":"-"},"content":""},{"lineNumber":94,"author":{"gitID":"-"},"content":"        ModelManager modelManager \u003d new ModelManager(addressBook, userPrefs);"},{"lineNumber":95,"author":{"gitID":"-"},"content":"        modelManager.deleteTag(new Tag(\"friends\"));"},{"lineNumber":96,"author":{"gitID":"-"},"content":"        assertEquals(modelManager, new ModelManager(expectedAddressBook, userPrefs));"},{"lineNumber":97,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":98,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":99,"author":{"gitID":"kexiaowen"},"content":"    //@@author kexiaowen"},{"lineNumber":100,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":101,"author":{"gitID":"kexiaowen"},"content":"    public void sortPersonListAscOrder() {"},{"lineNumber":102,"author":{"gitID":"kexiaowen"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON)"},{"lineNumber":103,"author":{"gitID":"kexiaowen"},"content":"                .withPerson(GEORGE).build();"},{"lineNumber":104,"author":{"gitID":"kexiaowen"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();"},{"lineNumber":105,"author":{"gitID":"kexiaowen"},"content":"        AddressBook expectedAddressBook \u003d new AddressBookBuilder().withPerson(GEORGE)"},{"lineNumber":106,"author":{"gitID":"kexiaowen"},"content":"                .withPerson(ALICE).withPerson(BENSON).build();"},{"lineNumber":107,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":108,"author":{"gitID":"kexiaowen"},"content":"        ModelManager modelManager \u003d new ModelManager(addressBook, userPrefs);"},{"lineNumber":109,"author":{"gitID":"kexiaowen"},"content":"        modelManager.sortPersonListAscOrder(SortCommand.SortField.RATING);"},{"lineNumber":110,"author":{"gitID":"kexiaowen"},"content":"        assertEquals(modelManager, new ModelManager(expectedAddressBook, userPrefs));"},{"lineNumber":111,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":112,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":113,"author":{"gitID":"kexiaowen"},"content":"    @Test"},{"lineNumber":114,"author":{"gitID":"kexiaowen"},"content":"    public void sortPersonListDescOrder() {"},{"lineNumber":115,"author":{"gitID":"kexiaowen"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON)"},{"lineNumber":116,"author":{"gitID":"kexiaowen"},"content":"                .withPerson(GEORGE).build();"},{"lineNumber":117,"author":{"gitID":"kexiaowen"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();"},{"lineNumber":118,"author":{"gitID":"kexiaowen"},"content":"        AddressBook expectedAddressBook \u003d new AddressBookBuilder().withPerson(BENSON)"},{"lineNumber":119,"author":{"gitID":"kexiaowen"},"content":"                .withPerson(ALICE).withPerson(GEORGE).build();"},{"lineNumber":120,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":121,"author":{"gitID":"kexiaowen"},"content":"        ModelManager modelManager \u003d new ModelManager(addressBook, userPrefs);"},{"lineNumber":122,"author":{"gitID":"kexiaowen"},"content":"        modelManager.sortPersonListDescOrder(SortCommand.SortField.RATING);"},{"lineNumber":123,"author":{"gitID":"kexiaowen"},"content":"        assertEquals(modelManager, new ModelManager(expectedAddressBook, userPrefs));"},{"lineNumber":124,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":125,"author":{"gitID":"kexiaowen"},"content":"}"}],"authorContributionMap":{"kexiaowen":29,"-":95,"tanhengyeow":1}},{"path":"src/test/java/seedu/address/model/person/UniversityContainsSubstringsPredicateTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"public class UniversityContainsSubstringsPredicateTest {"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    public void equals() {"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"NUS\");"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"NUS\", \"NTU\");"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        UniversityContainsSubstringsPredicate firstPredicate \u003d"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                new UniversityContainsSubstringsPredicate(firstPredicateKeywordList);"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"        UniversityContainsSubstringsPredicate secondPredicate \u003d"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                new UniversityContainsSubstringsPredicate(secondPredicateKeywordList);"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        // same object -\u003e returns true"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        // same values -\u003e returns true"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        UniversityContainsSubstringsPredicate firstPredicateCopy \u003d"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                new UniversityContainsSubstringsPredicate(firstPredicateKeywordList);"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        // different types -\u003e returns false"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(1));"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        // null -\u003e returns false"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(null));"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        // different person -\u003e returns false"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"    public void test_universityContainsSubstrings_returnsTrue() {"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"        // One substring"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"        UniversityContainsSubstringsPredicate predicate \u003d"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"                new UniversityContainsSubstringsPredicate(Collections.singletonList(\"e NU\"));"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withUniversity(\"Yale NUS\").build()));"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"        // Mixed-case substring"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new UniversityContainsSubstringsPredicate(Arrays.asList(\"LE nu\"));"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withUniversity(\"Yale NUS\").build()));"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"    public void test_universityDoesNotContainSubstrings_returnsFalse() {"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":"        // Zero substring"},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"        UniversityContainsSubstringsPredicate predicate \u003d"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"                new UniversityContainsSubstringsPredicate(Collections.emptyList());"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withUniversity(\"NUS\").build()));"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"        // Non-matching substring"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new UniversityContainsSubstringsPredicate(Arrays.asList(\"sm\"));"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withUniversity(\"NUS\").build()));"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":13,"tanhengyeow":55}},{"path":"src/test/java/seedu/address/model/FindResultsTest.java","lines":[{"lineNumber":1,"author":{"gitID":"tanhengyeow"},"content":"package seedu.address.model;"},{"lineNumber":2,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":3,"author":{"gitID":"tanhengyeow"},"content":"import static junit.framework.TestCase.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":"public class FindResultsTest {"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"    @Rule"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    public final ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    public void containsWordIgnoreCase_validInput_success() {"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(FindResults.getInstance()"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"                .containsWordIgnoreCase(\"Testing 1 2 3\","},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"                        \"Testing\", \"n/\")); // exact word with exact case"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(FindResults.getInstance()"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"                .containsWordIgnoreCase(\"Testing 1 2 3\","},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                        \"tEsTIng\", \"n/\")); // exact word with mixed case"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(FindResults.getInstance()"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                .containsWordIgnoreCase(\"Testing 1 2 3\","},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":"                        \"  Testing  \", \"n/\")); // exact word with trailing spaces"},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(FindResults.getInstance()"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"                .containsWordIgnoreCase(\"Testing 1 2 3\","},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"                        \"  tEsTIng  \", \"n/\")); // exact word with mixed case + trailing spaces"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"    public void containsWordIgnoreCase_validInput_failure() {"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(FindResults.getInstance()"},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"                .containsWordIgnoreCase(\"Testing 1 2 3\","},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"                        \"test\", \"n/\")); // non matching word"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(FindResults.getInstance()"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"                .containsWordIgnoreCase(\"Testing 1 2 3\","},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":"                        \" test    \", \"n/\")); // non matching word + trailing spaces"},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":"    public void containsWordIgnoreCase_nullInput_throwsNullPointerException() {"},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"        FindResults.getInstance()"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"                .containsWordIgnoreCase(\"Testing 1 2 3\","},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"                        null, \"n/\"); // word is null"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"    public void containsFuzzyMatchIgnoreCase_validInput_success() {"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(FindResults.getInstance()"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"                .containsFuzzyMatchIgnoreCase(\"Testing one two three\","},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"                        \"Testi\",  \"n/\", 2)); // one word with exact case is a fuzzy match"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(FindResults.getInstance()"},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"                .containsFuzzyMatchIgnoreCase(\"Testing one two three\","},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"                        \"tEsTi\", \"n/\", 2)); // one word with mixed case is a fuzzy match"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(FindResults.getInstance()"},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"                .containsFuzzyMatchIgnoreCase(\"Testing one two three\","},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"                        \"  Testi  \", \"n/\", 2)); // trailing spaces"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(FindResults.getInstance()"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":"                .containsFuzzyMatchIgnoreCase(\"Testing one two three\","},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"                        \"  tEsTi  \", \"n/\", 2)); // trailing spaces"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":"    public void containsFuzzyMatchIgnoreCase_validInput_failure() {"},{"lineNumber":69,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(FindResults.getInstance()"},{"lineNumber":70,"author":{"gitID":"tanhengyeow"},"content":"                .containsFuzzyMatchIgnoreCase(\"Testing 1 2 3\","},{"lineNumber":71,"author":{"gitID":"tanhengyeow"},"content":"                        \"alex\", \"n/\", 2)); // non matching fuzzy match"},{"lineNumber":72,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":73,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(FindResults.getInstance()"},{"lineNumber":74,"author":{"gitID":"tanhengyeow"},"content":"                .containsFuzzyMatchIgnoreCase(\"Testing 1 2 3\","},{"lineNumber":75,"author":{"gitID":"tanhengyeow"},"content":"                        \" alex    \", \"n/\", 2)); // trailing spaces"},{"lineNumber":76,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":77,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":78,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":79,"author":{"gitID":"tanhengyeow"},"content":"    public void containsFuzzyMatchIgnoreCase_nullInput_throwsNullPointerException() {"},{"lineNumber":80,"author":{"gitID":"tanhengyeow"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":81,"author":{"gitID":"tanhengyeow"},"content":"        FindResults.getInstance()"},{"lineNumber":82,"author":{"gitID":"tanhengyeow"},"content":"                .containsFuzzyMatchIgnoreCase(\"Testing 1 2 3\","},{"lineNumber":83,"author":{"gitID":"tanhengyeow"},"content":"                        null, \"n/\", 2); // word is null"},{"lineNumber":84,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":85,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":86,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":87,"author":{"gitID":"tanhengyeow"},"content":"    public void containsPrefixIgnoreCase_validInput_success() {"},{"lineNumber":88,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(FindResults.getInstance()"},{"lineNumber":89,"author":{"gitID":"tanhengyeow"},"content":"                .containsPrefixIgnoreCase(\"Testing one two three\","},{"lineNumber":90,"author":{"gitID":"tanhengyeow"},"content":"                        \"Tes\", \"n/\")); // start with this prefix word + exact case"},{"lineNumber":91,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(FindResults.getInstance()"},{"lineNumber":92,"author":{"gitID":"tanhengyeow"},"content":"                .containsPrefixIgnoreCase(\"Testing one two three\","},{"lineNumber":93,"author":{"gitID":"tanhengyeow"},"content":"                        \"tEsT\", \"n/\")); // start with this prefix word + mixed case"},{"lineNumber":94,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(FindResults.getInstance()"},{"lineNumber":95,"author":{"gitID":"tanhengyeow"},"content":"                .containsPrefixIgnoreCase(\"Testing one two three\","},{"lineNumber":96,"author":{"gitID":"tanhengyeow"},"content":"                        \"     Tes  \", \"n/\")); // trailing spaces"},{"lineNumber":97,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(FindResults.getInstance()"},{"lineNumber":98,"author":{"gitID":"tanhengyeow"},"content":"                .containsPrefixIgnoreCase(\"Testing one two three\","},{"lineNumber":99,"author":{"gitID":"tanhengyeow"},"content":"                        \"  tEsT  \", \"n/\")); // trailing spaces"},{"lineNumber":100,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":101,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":102,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":103,"author":{"gitID":"tanhengyeow"},"content":"    public void containsPrefixIgnoreCase_validInput_failure() {"},{"lineNumber":104,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(FindResults.getInstance()"},{"lineNumber":105,"author":{"gitID":"tanhengyeow"},"content":"                .containsPrefixIgnoreCase(\"Testing 1 2 3\","},{"lineNumber":106,"author":{"gitID":"tanhengyeow"},"content":"                        \"alex\", \"n/\")); // non matching prefix word"},{"lineNumber":107,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":108,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(FindResults.getInstance()"},{"lineNumber":109,"author":{"gitID":"tanhengyeow"},"content":"                .containsPrefixIgnoreCase(\"Testing 1 2 3\","},{"lineNumber":110,"author":{"gitID":"tanhengyeow"},"content":"                        \" alex    \", \"n/\")); // trailing spaces"},{"lineNumber":111,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":112,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":113,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":114,"author":{"gitID":"tanhengyeow"},"content":"    public void containsPrefixIgnoreCase_nullInput_throwsNullPointerException() {"},{"lineNumber":115,"author":{"gitID":"tanhengyeow"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":116,"author":{"gitID":"tanhengyeow"},"content":"        FindResults.getInstance()"},{"lineNumber":117,"author":{"gitID":"tanhengyeow"},"content":"                .containsPrefixIgnoreCase(\"Testing 1 2 3\","},{"lineNumber":118,"author":{"gitID":"tanhengyeow"},"content":"                        null, \"n/\"); // word is null"},{"lineNumber":119,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":120,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":121,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":122,"author":{"gitID":"tanhengyeow"},"content":"    public void containsSuffixIgnoreCase_validInput_success() {"},{"lineNumber":123,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(FindResults.getInstance()"},{"lineNumber":124,"author":{"gitID":"tanhengyeow"},"content":"                .containsSuffixIgnoreCase(\"Testing one two three\","},{"lineNumber":125,"author":{"gitID":"tanhengyeow"},"content":"                        \"three\", \"n/\")); // end with this suffix word + exact case"},{"lineNumber":126,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(FindResults.getInstance()"},{"lineNumber":127,"author":{"gitID":"tanhengyeow"},"content":"                .containsSuffixIgnoreCase(\"Testing one two three\","},{"lineNumber":128,"author":{"gitID":"tanhengyeow"},"content":"                        \"tHrEe\", \"n/\")); // end with this suffix word + mixed case"},{"lineNumber":129,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(FindResults.getInstance()"},{"lineNumber":130,"author":{"gitID":"tanhengyeow"},"content":"                .containsSuffixIgnoreCase(\"Testing one two three\","},{"lineNumber":131,"author":{"gitID":"tanhengyeow"},"content":"                        \"     ree  \", \"n/\")); // trailing spaces"},{"lineNumber":132,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(FindResults.getInstance()"},{"lineNumber":133,"author":{"gitID":"tanhengyeow"},"content":"                .containsSuffixIgnoreCase(\"Testing one two three\","},{"lineNumber":134,"author":{"gitID":"tanhengyeow"},"content":"                        \"  ThrEE  \", \"n/\")); // trailing spaces"},{"lineNumber":135,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":136,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":137,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":138,"author":{"gitID":"tanhengyeow"},"content":"    public void containsSuffixIgnoreCase_validInput_failure() {"},{"lineNumber":139,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(FindResults.getInstance()"},{"lineNumber":140,"author":{"gitID":"tanhengyeow"},"content":"                .containsSuffixIgnoreCase(\"Testing 1 2 3\","},{"lineNumber":141,"author":{"gitID":"tanhengyeow"},"content":"                        \"alex\", \"n/\")); // non matching prefix word"},{"lineNumber":142,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":143,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(FindResults.getInstance()"},{"lineNumber":144,"author":{"gitID":"tanhengyeow"},"content":"                .containsSuffixIgnoreCase(\"Testing 1 2 3\","},{"lineNumber":145,"author":{"gitID":"tanhengyeow"},"content":"                        \" alex    \", \"n/\")); // trailing spaces"},{"lineNumber":146,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":147,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":148,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":149,"author":{"gitID":"tanhengyeow"},"content":"    public void containsSuffixIgnoreCase_nullInput_throwsNullPointerException() {"},{"lineNumber":150,"author":{"gitID":"tanhengyeow"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":151,"author":{"gitID":"tanhengyeow"},"content":"        FindResults.getInstance()"},{"lineNumber":152,"author":{"gitID":"tanhengyeow"},"content":"                .containsSuffixIgnoreCase(\"Testing 1 2 3\","},{"lineNumber":153,"author":{"gitID":"tanhengyeow"},"content":"                        null, \"n/\"); // word is null"},{"lineNumber":154,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":155,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":156,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":6,"tanhengyeow":150}},{"path":"src/test/java/seedu/address/testutil/EditRatingDescriptorBuilder.java","lines":[{"lineNumber":1,"author":{"gitID":"kexiaowen"},"content":"package seedu.address.testutil;"},{"lineNumber":2,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":3,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.logic.commands.RatingEditCommand.EditRatingDescriptor;"},{"lineNumber":4,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.Rating;"},{"lineNumber":5,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":6,"author":{"gitID":"kexiaowen"},"content":"//@@author kexiaowen"},{"lineNumber":7,"author":{"gitID":"kexiaowen"},"content":"/**"},{"lineNumber":8,"author":{"gitID":"kexiaowen"},"content":" * A utility class to help with building EditPersonDescriptor objects."},{"lineNumber":9,"author":{"gitID":"kexiaowen"},"content":" */"},{"lineNumber":10,"author":{"gitID":"kexiaowen"},"content":"public class EditRatingDescriptorBuilder {"},{"lineNumber":11,"author":{"gitID":"kexiaowen"},"content":"    private EditRatingDescriptor descriptor;"},{"lineNumber":12,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":13,"author":{"gitID":"kexiaowen"},"content":"    public EditRatingDescriptorBuilder() {"},{"lineNumber":14,"author":{"gitID":"kexiaowen"},"content":"        descriptor \u003d new EditRatingDescriptor();"},{"lineNumber":15,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":16,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":17,"author":{"gitID":"kexiaowen"},"content":"    public EditRatingDescriptorBuilder(EditRatingDescriptor descriptor) {"},{"lineNumber":18,"author":{"gitID":"kexiaowen"},"content":"        this.descriptor \u003d new EditRatingDescriptor(descriptor);"},{"lineNumber":19,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":20,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":21,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":22,"author":{"gitID":"kexiaowen"},"content":"     * Returns an {@code EditRatingDescriptor} with fields containing {@code rating}\u0027s details"},{"lineNumber":23,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":24,"author":{"gitID":"kexiaowen"},"content":"    public EditRatingDescriptorBuilder(Rating rating) {"},{"lineNumber":25,"author":{"gitID":"kexiaowen"},"content":"        descriptor \u003d new EditRatingDescriptor();"},{"lineNumber":26,"author":{"gitID":"kexiaowen"},"content":"        descriptor.setTechnicalSkillsScore(rating.getTechnicalSkillsScore());"},{"lineNumber":27,"author":{"gitID":"kexiaowen"},"content":"        descriptor.setCommunicationSkillsScore(rating.getCommunicationSkillsScore());"},{"lineNumber":28,"author":{"gitID":"kexiaowen"},"content":"        descriptor.setProblemSolvingSkillsScore(rating.getProblemSolvingSkillsScore());"},{"lineNumber":29,"author":{"gitID":"kexiaowen"},"content":"        descriptor.setExperienceScore(rating.getExperienceScore());"},{"lineNumber":30,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":32,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":33,"author":{"gitID":"kexiaowen"},"content":"     * Sets the {@code technicalSkillsScore} of the {@code EditRatingDescriptor} that we are building."},{"lineNumber":34,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":35,"author":{"gitID":"kexiaowen"},"content":"    public EditRatingDescriptorBuilder withTechnicalSkillsScore(double technicalSkillsScore) {"},{"lineNumber":36,"author":{"gitID":"kexiaowen"},"content":"        descriptor.setTechnicalSkillsScore(technicalSkillsScore);"},{"lineNumber":37,"author":{"gitID":"kexiaowen"},"content":"        return this;"},{"lineNumber":38,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":40,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":41,"author":{"gitID":"kexiaowen"},"content":"     * Sets the {@code communicationSkillsScore} of the {@code EditRatingDescriptor} that we are building."},{"lineNumber":42,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":43,"author":{"gitID":"kexiaowen"},"content":"    public EditRatingDescriptorBuilder withCommunicationSkillsScore(double communicationSkillsScore) {"},{"lineNumber":44,"author":{"gitID":"kexiaowen"},"content":"        descriptor.setCommunicationSkillsScore(communicationSkillsScore);"},{"lineNumber":45,"author":{"gitID":"kexiaowen"},"content":"        return this;"},{"lineNumber":46,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":47,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":48,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":49,"author":{"gitID":"kexiaowen"},"content":"     * Sets the {@code problemSolvingSkillsScore} of the {@code EditRatingDescriptor} that we are building."},{"lineNumber":50,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":51,"author":{"gitID":"kexiaowen"},"content":"    public EditRatingDescriptorBuilder withProblemSolvingSkillsScore(double problemSolvingSkillsScore) {"},{"lineNumber":52,"author":{"gitID":"kexiaowen"},"content":"        descriptor.setProblemSolvingSkillsScore(problemSolvingSkillsScore);"},{"lineNumber":53,"author":{"gitID":"kexiaowen"},"content":"        return this;"},{"lineNumber":54,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":55,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":56,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":57,"author":{"gitID":"kexiaowen"},"content":"     * Sets the {@code experienceScore} of the {@code EditRatingDescriptor} that we are building."},{"lineNumber":58,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":59,"author":{"gitID":"kexiaowen"},"content":"    public EditRatingDescriptorBuilder withExperienceScore(double experienceScore) {"},{"lineNumber":60,"author":{"gitID":"kexiaowen"},"content":"        descriptor.setExperienceScore(experienceScore);"},{"lineNumber":61,"author":{"gitID":"kexiaowen"},"content":"        return this;"},{"lineNumber":62,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":64,"author":{"gitID":"kexiaowen"},"content":"    public EditRatingDescriptor build() {"},{"lineNumber":65,"author":{"gitID":"kexiaowen"},"content":"        return descriptor;"},{"lineNumber":66,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":67,"author":{"gitID":"kexiaowen"},"content":"}"}],"authorContributionMap":{"kexiaowen":67}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.testutil;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.Set;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.stream.Stream;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;"},{"lineNumber":8,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Address;"},{"lineNumber":9,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.model.person.Comment;"},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Email;"},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.ExpectedGraduationYear;"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.person.GradePointAverage;"},{"lineNumber":13,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.JobApplied;"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.person.Major;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Name;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Phone;"},{"lineNumber":18,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.model.person.ProfileImage;"},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Resume;"},{"lineNumber":20,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.University;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.address.model.tag.Tag;"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":24,"author":{"gitID":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects."},{"lineNumber":25,"author":{"gitID":"-"},"content":" */"},{"lineNumber":26,"author":{"gitID":"-"},"content":"public class EditPersonDescriptorBuilder {"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    private EditPersonDescriptor descriptor;"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"-"},"content":"    public EditPersonDescriptorBuilder() {"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {"},{"lineNumber":35,"author":{"gitID":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);"},{"lineNumber":36,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":37,"author":{"gitID":"-"},"content":""},{"lineNumber":38,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":39,"author":{"gitID":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details"},{"lineNumber":40,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        descriptor.setName(person.getName());"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        descriptor.setPhone(person.getPhone());"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        descriptor.setEmail(person.getEmail());"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        descriptor.setAddress(person.getAddress());"},{"lineNumber":47,"author":{"gitID":"kexiaowen"},"content":"        descriptor.setUniversity(person.getUniversity());"},{"lineNumber":48,"author":{"gitID":"mhq199657"},"content":"        descriptor.setExpectedGraduationYear(person.getExpectedGraduationYear());"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"        descriptor.setMajor(person.getMajor());"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"        descriptor.setGradePointAverage(person.getGradePointAverage());"},{"lineNumber":51,"author":{"gitID":"kexiaowen"},"content":"        descriptor.setJobApplied(person.getJobApplied());"},{"lineNumber":52,"author":{"gitID":"mhq199657"},"content":"        descriptor.setResume(person.getResume());"},{"lineNumber":53,"author":{"gitID":"Ang-YC"},"content":"        descriptor.setProfileImage(person.getProfileImage());"},{"lineNumber":54,"author":{"gitID":"Ang-YC"},"content":"        descriptor.setComment(person.getComment());"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        descriptor.setTags(person.getTags());"},{"lineNumber":56,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"-"},"content":""},{"lineNumber":58,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":59,"author":{"gitID":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building."},{"lineNumber":60,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":61,"author":{"gitID":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {"},{"lineNumber":62,"author":{"gitID":"-"},"content":"        descriptor.setName(new Name(name));"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        return this;"},{"lineNumber":64,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitID":"-"},"content":""},{"lineNumber":66,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":67,"author":{"gitID":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building."},{"lineNumber":68,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":69,"author":{"gitID":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {"},{"lineNumber":70,"author":{"gitID":"-"},"content":"        descriptor.setPhone(new Phone(phone));"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        return this;"},{"lineNumber":72,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"-"},"content":""},{"lineNumber":74,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":75,"author":{"gitID":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building."},{"lineNumber":76,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":77,"author":{"gitID":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {"},{"lineNumber":78,"author":{"gitID":"-"},"content":"        descriptor.setEmail(new Email(email));"},{"lineNumber":79,"author":{"gitID":"-"},"content":"        return this;"},{"lineNumber":80,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":81,"author":{"gitID":"-"},"content":""},{"lineNumber":82,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":83,"author":{"gitID":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building."},{"lineNumber":84,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":85,"author":{"gitID":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {"},{"lineNumber":86,"author":{"gitID":"-"},"content":"        descriptor.setAddress(new Address(address));"},{"lineNumber":87,"author":{"gitID":"-"},"content":"        return this;"},{"lineNumber":88,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":89,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":90,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":91,"author":{"gitID":"kexiaowen"},"content":"     * Sets the {@code University} of the {@code EditPersonDescriptor} that we are building."},{"lineNumber":92,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":93,"author":{"gitID":"kexiaowen"},"content":"    public EditPersonDescriptorBuilder withUniversity(String university) {"},{"lineNumber":94,"author":{"gitID":"kexiaowen"},"content":"        descriptor.setUniversity(new University(university));"},{"lineNumber":95,"author":{"gitID":"kexiaowen"},"content":"        return this;"},{"lineNumber":96,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":97,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":98,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":99,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":100,"author":{"gitID":"mhq199657"},"content":"     * Sets the {@code ExpectedGraduationYear} of the {@code EditPersonDescriptor} that we are building."},{"lineNumber":101,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":102,"author":{"gitID":"mhq199657"},"content":"    public EditPersonDescriptorBuilder withExpectedGraduationYear(String expectedGraduationYear) {"},{"lineNumber":103,"author":{"gitID":"mhq199657"},"content":"        descriptor.setExpectedGraduationYear(new ExpectedGraduationYear(expectedGraduationYear));"},{"lineNumber":104,"author":{"gitID":"mhq199657"},"content":"        return this;"},{"lineNumber":105,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":106,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":107,"author":{"gitID":"tanhengyeow"},"content":"    //@@author tanhengyeow"},{"lineNumber":108,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":109,"author":{"gitID":"tanhengyeow"},"content":"     * Sets the {@code Major} of the {@code EditPersonDescriptor} that we are building."},{"lineNumber":110,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":111,"author":{"gitID":"tanhengyeow"},"content":"    public EditPersonDescriptorBuilder withMajor(String major) {"},{"lineNumber":112,"author":{"gitID":"tanhengyeow"},"content":"        descriptor.setMajor(new Major(major));"},{"lineNumber":113,"author":{"gitID":"tanhengyeow"},"content":"        return this;"},{"lineNumber":114,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":115,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":116,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":117,"author":{"gitID":"tanhengyeow"},"content":"     * Sets the {@code GradePointAverage} of the {@code EditPersonDescriptor} that we are building."},{"lineNumber":118,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":119,"author":{"gitID":"tanhengyeow"},"content":"    public EditPersonDescriptorBuilder withGradePointAverage(String gradePointAverage) {"},{"lineNumber":120,"author":{"gitID":"tanhengyeow"},"content":"        descriptor.setGradePointAverage(new GradePointAverage(gradePointAverage));"},{"lineNumber":121,"author":{"gitID":"tanhengyeow"},"content":"        return this;"},{"lineNumber":122,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":123,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":124,"author":{"gitID":"tanhengyeow"},"content":"    //@@author"},{"lineNumber":125,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":126,"author":{"gitID":"kexiaowen"},"content":"     * Sets the {@code JobApplied} of the {@code EditPersonDescriptor} that we are building."},{"lineNumber":127,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":128,"author":{"gitID":"kexiaowen"},"content":"    public EditPersonDescriptorBuilder withJobApplied(String jobApplied) {"},{"lineNumber":129,"author":{"gitID":"kexiaowen"},"content":"        descriptor.setJobApplied(new JobApplied(jobApplied));"},{"lineNumber":130,"author":{"gitID":"kexiaowen"},"content":"        return this;"},{"lineNumber":131,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":132,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":133,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":134,"author":{"gitID":"mhq199657"},"content":"     * Sets the {@code Resume} of the {@code EditPersonDescriptor} that we are building."},{"lineNumber":135,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":136,"author":{"gitID":"mhq199657"},"content":"    public EditPersonDescriptorBuilder withResume(String resume) {"},{"lineNumber":137,"author":{"gitID":"mhq199657"},"content":"        descriptor.setResume(new Resume(resume));"},{"lineNumber":138,"author":{"gitID":"mhq199657"},"content":"        return this;"},{"lineNumber":139,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":140,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":141,"author":{"gitID":"Ang-YC"},"content":"    //@@author Ang-YC"},{"lineNumber":142,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":143,"author":{"gitID":"Ang-YC"},"content":"     * Sets the {@code ProfileImage} of the {@code EditPersonDescriptor} that we are building."},{"lineNumber":144,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":145,"author":{"gitID":"Ang-YC"},"content":"    public EditPersonDescriptorBuilder withProfileImage(String profileImage) {"},{"lineNumber":146,"author":{"gitID":"Ang-YC"},"content":"        descriptor.setProfileImage(new ProfileImage(profileImage));"},{"lineNumber":147,"author":{"gitID":"Ang-YC"},"content":"        return this;"},{"lineNumber":148,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":149,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":150,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":151,"author":{"gitID":"Ang-YC"},"content":"     * Sets the {@code Comment} of the {@code EditPersonDescriptor} that we are building."},{"lineNumber":152,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":153,"author":{"gitID":"Ang-YC"},"content":"    public EditPersonDescriptorBuilder withComment(String comment) {"},{"lineNumber":154,"author":{"gitID":"Ang-YC"},"content":"        descriptor.setComment(new Comment(comment));"},{"lineNumber":155,"author":{"gitID":"Ang-YC"},"content":"        return this;"},{"lineNumber":156,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":157,"author":{"gitID":"Ang-YC"},"content":"    //@@author"},{"lineNumber":158,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":159,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":160,"author":{"gitID":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}"},{"lineNumber":161,"author":{"gitID":"-"},"content":"     * that we are building."},{"lineNumber":162,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":163,"author":{"gitID":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {"},{"lineNumber":164,"author":{"gitID":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());"},{"lineNumber":165,"author":{"gitID":"-"},"content":"        descriptor.setTags(tagSet);"},{"lineNumber":166,"author":{"gitID":"-"},"content":"        return this;"},{"lineNumber":167,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":168,"author":{"gitID":"-"},"content":""},{"lineNumber":169,"author":{"gitID":"-"},"content":"    public EditPersonDescriptor build() {"},{"lineNumber":170,"author":{"gitID":"-"},"content":"        return descriptor;"},{"lineNumber":171,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":172,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"kexiaowen":20,"mhq199657":22,"-":84,"Ang-YC":22,"tanhengyeow":24}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.testutil;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"mhq199657"},"content":"import static java.util.Objects.isNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;"},{"lineNumber":5,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMENT;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;"},{"lineNumber":7,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXPECTED_GRADUATION_YEAR;"},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GRADE_POINT_AVERAGE;"},{"lineNumber":9,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IMAGE;"},{"lineNumber":10,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB_APPLIED;"},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MAJOR;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;"},{"lineNumber":14,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RESUME;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"},{"lineNumber":16,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNIVERSITY;"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.AddCommand;"},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":"import seedu.address.logic.commands.FilterCommand;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":23,"author":{"gitID":"-"},"content":" * A utility class for Person."},{"lineNumber":24,"author":{"gitID":"-"},"content":" */"},{"lineNumber":25,"author":{"gitID":"-"},"content":"public class PersonUtil {"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":28,"author":{"gitID":"-"},"content":"     * Returns an add command string for adding the {@code person}."},{"lineNumber":29,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    public static String getAddCommand(Person person) {"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":35,"author":{"gitID":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details."},{"lineNumber":36,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    public static String getPersonDetails(Person person) {"},{"lineNumber":38,"author":{"gitID":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":39,"author":{"gitID":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");"},{"lineNumber":40,"author":{"gitID":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");"},{"lineNumber":43,"author":{"gitID":"kexiaowen"},"content":"        sb.append(PREFIX_UNIVERSITY + person.getUniversity().value + \" \");"},{"lineNumber":44,"author":{"gitID":"mhq199657"},"content":"        sb.append(PREFIX_EXPECTED_GRADUATION_YEAR + person.getExpectedGraduationYear().value + \" \");"},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"        sb.append(PREFIX_MAJOR + person.getMajor().value + \" \");"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"        sb.append(PREFIX_GRADE_POINT_AVERAGE + person.getGradePointAverage().value + \" \");"},{"lineNumber":47,"author":{"gitID":"kexiaowen"},"content":"        sb.append(PREFIX_JOB_APPLIED + person.getJobApplied().value + \" \");"},{"lineNumber":48,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":49,"author":{"gitID":"mhq199657"},"content":"        if (!isNull(person.getResume().value)) {"},{"lineNumber":50,"author":{"gitID":"mhq199657"},"content":"            sb.append(PREFIX_RESUME + person.getResume().userInput + \" \");"},{"lineNumber":51,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":52,"author":{"gitID":"Ang-YC"},"content":"        if (!isNull(person.getProfileImage().value)) {"},{"lineNumber":53,"author":{"gitID":"mhq199657"},"content":"            sb.append(PREFIX_IMAGE + person.getProfileImage().userInput + \" \");"},{"lineNumber":54,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":55,"author":{"gitID":"Ang-YC"},"content":"        if (!isNull(person.getComment().value)) {"},{"lineNumber":56,"author":{"gitID":"Ang-YC"},"content":"            sb.append(PREFIX_COMMENT + person.getComment().value + \" \");"},{"lineNumber":57,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":58,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":59,"author":{"gitID":"-"},"content":"        person.getTags().stream().forEach("},{"lineNumber":60,"author":{"gitID":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")"},{"lineNumber":61,"author":{"gitID":"-"},"content":"        );"},{"lineNumber":62,"author":{"gitID":"-"},"content":"        return sb.toString();"},{"lineNumber":63,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":65,"author":{"gitID":"mhq199657"},"content":"    public static String getFilterCommand(Person person) {"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":67,"author":{"gitID":"mhq199657"},"content":"        sb.append(FilterCommand.COMMAND_WORD).append(\" \");"},{"lineNumber":68,"author":{"gitID":"mhq199657"},"content":"        sb.append(PREFIX_EXPECTED_GRADUATION_YEAR).append(person.getExpectedGraduationYear().value + \" \");"},{"lineNumber":69,"author":{"gitID":"mhq199657"},"content":"        return sb.toString();"},{"lineNumber":70,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":71,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"kexiaowen":4,"mhq199657":15,"-":39,"Ang-YC":9,"tanhengyeow":4}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.testutil;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"mhq199657"},"content":"import static java.util.Objects.isNull;"},{"lineNumber":4,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":5,"author":{"gitID":"mhq199657"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitID":"Ang-YC"},"content":"import java.time.LocalDateTime;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.HashSet;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.Set;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":"import seedu.address.logic.parser.ProfileImageUtil;"},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":"import seedu.address.logic.parser.ResumeUtil;"},{"lineNumber":12,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Address;"},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.model.person.Comment;"},{"lineNumber":14,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Email;"},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.ExpectedGraduationYear;"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.person.GradePointAverage;"},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.model.person.InterviewDate;"},{"lineNumber":18,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.JobApplied;"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.person.Major;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Name;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Phone;"},{"lineNumber":23,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.model.person.ProfileImage;"},{"lineNumber":24,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.Rating;"},{"lineNumber":25,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Resume;"},{"lineNumber":26,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Status;"},{"lineNumber":27,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.University;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"import seedu.address.model.tag.Tag;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"import seedu.address.model.util.SampleDataUtil;"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":32,"author":{"gitID":"-"},"content":" * A utility class to help with building Person objects."},{"lineNumber":33,"author":{"gitID":"-"},"content":" */"},{"lineNumber":34,"author":{"gitID":"-"},"content":"public class PersonBuilder {"},{"lineNumber":35,"author":{"gitID":"mhq199657"},"content":"    private static final String RESUME_PATH \u003d \"src/test/resources/resume/\";"},{"lineNumber":36,"author":{"gitID":"Ang-YC"},"content":"    private static final String PROFILE_IMAGE_PATH \u003d \"src/test/resources/photos/\";"},{"lineNumber":37,"author":{"gitID":"-"},"content":""},{"lineNumber":38,"author":{"gitID":"mhq199657"},"content":"    private static final String DEFAULT_NAME \u003d \"Alice Pauline\";"},{"lineNumber":39,"author":{"gitID":"mhq199657"},"content":"    private static final String DEFAULT_PHONE \u003d \"85355255\";"},{"lineNumber":40,"author":{"gitID":"mhq199657"},"content":"    private static final String DEFAULT_EMAIL \u003d \"alice@gmail.com\";"},{"lineNumber":41,"author":{"gitID":"mhq199657"},"content":"    private static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";"},{"lineNumber":42,"author":{"gitID":"kexiaowen"},"content":"    private static final String DEFAULT_UNIVERSITY \u003d \"NUS\";"},{"lineNumber":43,"author":{"gitID":"mhq199657"},"content":"    private static final String DEFAULT_EXPECTED_GRADUATION_YEAR \u003d \"2020\";"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":"    private static final String DEFAULT_MAJOR \u003d \"Computer Science\";"},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"    private static final String DEFAULT_GRADE_POINT_AVERAGE \u003d \"4.96\";"},{"lineNumber":46,"author":{"gitID":"kexiaowen"},"content":"    private static final String DEFAULT_JOB_APPLIED \u003d \"Software Engineer\";"},{"lineNumber":47,"author":{"gitID":"kexiaowen"},"content":"    private static final String DEFAULT_TECHNICAL_SKILLS_SCORE \u003d \"-1\";"},{"lineNumber":48,"author":{"gitID":"kexiaowen"},"content":"    private static final String DEFAULT_COMMUNICATION_SKILLS_SCORE \u003d \"-1\";"},{"lineNumber":49,"author":{"gitID":"kexiaowen"},"content":"    private static final String DEFAULT_PROBLEM_SOLVING_SKILLS_SCORE \u003d \"-1\";"},{"lineNumber":50,"author":{"gitID":"kexiaowen"},"content":"    private static final String DEFAULT_EXPERIENCE_SCORE \u003d \"-1\";"},{"lineNumber":51,"author":{"gitID":"mhq199657"},"content":"    private static final String DEFAULT_RESUME \u003d \"alice.pdf\";"},{"lineNumber":52,"author":{"gitID":"Ang-YC"},"content":"    private static final String DEFAULT_PROFILE_IMAGE \u003d \"gates.jpg\";"},{"lineNumber":53,"author":{"gitID":"Ang-YC"},"content":"    private static final String DEFAULT_COMMENT \u003d \"Some comments\";"},{"lineNumber":54,"author":{"gitID":"mhq199657"},"content":"    private static final String DEFAULT_TAGS \u003d \"friends\";"},{"lineNumber":55,"author":{"gitID":"-"},"content":""},{"lineNumber":56,"author":{"gitID":"-"},"content":"    private Name name;"},{"lineNumber":57,"author":{"gitID":"-"},"content":"    private Phone phone;"},{"lineNumber":58,"author":{"gitID":"-"},"content":"    private Email email;"},{"lineNumber":59,"author":{"gitID":"-"},"content":"    private Address address;"},{"lineNumber":60,"author":{"gitID":"kexiaowen"},"content":"    private University university;"},{"lineNumber":61,"author":{"gitID":"mhq199657"},"content":"    private ExpectedGraduationYear expectedGraduationYear;"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"    private Major major;"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":"    private GradePointAverage gradePointAverage;"},{"lineNumber":64,"author":{"gitID":"kexiaowen"},"content":"    private JobApplied jobApplied;"},{"lineNumber":65,"author":{"gitID":"kexiaowen"},"content":"    private Rating rating;"},{"lineNumber":66,"author":{"gitID":"mhq199657"},"content":"    private Resume resume;"},{"lineNumber":67,"author":{"gitID":"Ang-YC"},"content":"    private ProfileImage profileImage;"},{"lineNumber":68,"author":{"gitID":"Ang-YC"},"content":"    private Comment comment;"},{"lineNumber":69,"author":{"gitID":"Ang-YC"},"content":"    private InterviewDate interviewDate;"},{"lineNumber":70,"author":{"gitID":"mhq199657"},"content":"    private Status status;"},{"lineNumber":71,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":72,"author":{"gitID":"-"},"content":"    private Set\u003cTag\u003e tags;"},{"lineNumber":73,"author":{"gitID":"-"},"content":""},{"lineNumber":74,"author":{"gitID":"-"},"content":"    public PersonBuilder() {"},{"lineNumber":75,"author":{"gitID":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);"},{"lineNumber":76,"author":{"gitID":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);"},{"lineNumber":78,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":79,"author":{"gitID":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);"},{"lineNumber":80,"author":{"gitID":"kexiaowen"},"content":"        university \u003d new University(DEFAULT_UNIVERSITY);"},{"lineNumber":81,"author":{"gitID":"mhq199657"},"content":"        expectedGraduationYear \u003d new ExpectedGraduationYear(DEFAULT_EXPECTED_GRADUATION_YEAR);"},{"lineNumber":82,"author":{"gitID":"tanhengyeow"},"content":"        major \u003d new Major(DEFAULT_MAJOR);"},{"lineNumber":83,"author":{"gitID":"tanhengyeow"},"content":"        gradePointAverage \u003d new GradePointAverage(DEFAULT_GRADE_POINT_AVERAGE);"},{"lineNumber":84,"author":{"gitID":"kexiaowen"},"content":"        jobApplied \u003d new JobApplied(DEFAULT_JOB_APPLIED);"},{"lineNumber":85,"author":{"gitID":"kexiaowen"},"content":"        rating \u003d new Rating(Double.valueOf(DEFAULT_TECHNICAL_SKILLS_SCORE),"},{"lineNumber":86,"author":{"gitID":"kexiaowen"},"content":"                Double.valueOf(DEFAULT_COMMUNICATION_SKILLS_SCORE),"},{"lineNumber":87,"author":{"gitID":"kexiaowen"},"content":"                Double.valueOf(DEFAULT_PROBLEM_SOLVING_SKILLS_SCORE),"},{"lineNumber":88,"author":{"gitID":"kexiaowen"},"content":"                Double.valueOf(DEFAULT_EXPERIENCE_SCORE));"},{"lineNumber":89,"author":{"gitID":"mhq199657"},"content":"        resume \u003d new Resume(formPathFromFileName(DEFAULT_RESUME));"},{"lineNumber":90,"author":{"gitID":"mhq199657"},"content":"        try {"},{"lineNumber":91,"author":{"gitID":"mhq199657"},"content":"            resume \u003d ResumeUtil.process(resume);"},{"lineNumber":92,"author":{"gitID":"mhq199657"},"content":"        } catch (IOException ioe) {"},{"lineNumber":93,"author":{"gitID":"mhq199657"},"content":"            throw new AssertionError(\"Testing environment should not be read only!\");"},{"lineNumber":94,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":95,"author":{"gitID":"Ang-YC"},"content":"        profileImage \u003d new ProfileImage(formImagePathFromFileName(DEFAULT_PROFILE_IMAGE));"},{"lineNumber":96,"author":{"gitID":"mhq199657"},"content":"        try {"},{"lineNumber":97,"author":{"gitID":"mhq199657"},"content":"            profileImage \u003d ProfileImageUtil.process(profileImage);"},{"lineNumber":98,"author":{"gitID":"mhq199657"},"content":"        } catch (IOException ioe) {"},{"lineNumber":99,"author":{"gitID":"mhq199657"},"content":"            throw new AssertionError(\"Testing environment should not be read only!\");"},{"lineNumber":100,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":101,"author":{"gitID":"Ang-YC"},"content":"        comment \u003d new Comment(DEFAULT_COMMENT);"},{"lineNumber":102,"author":{"gitID":"Ang-YC"},"content":"        interviewDate \u003d new InterviewDate();"},{"lineNumber":103,"author":{"gitID":"mhq199657"},"content":"        status \u003d new Status();"},{"lineNumber":104,"author":{"gitID":"-"},"content":"        tags \u003d SampleDataUtil.getTagSet(DEFAULT_TAGS);"},{"lineNumber":105,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":106,"author":{"gitID":"-"},"content":""},{"lineNumber":107,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":108,"author":{"gitID":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}."},{"lineNumber":109,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":110,"author":{"gitID":"-"},"content":"    public PersonBuilder(Person personToCopy) {"},{"lineNumber":111,"author":{"gitID":"-"},"content":"        name \u003d personToCopy.getName();"},{"lineNumber":112,"author":{"gitID":"-"},"content":"        phone \u003d personToCopy.getPhone();"},{"lineNumber":113,"author":{"gitID":"-"},"content":"        email \u003d personToCopy.getEmail();"},{"lineNumber":114,"author":{"gitID":"-"},"content":"        address \u003d personToCopy.getAddress();"},{"lineNumber":115,"author":{"gitID":"kexiaowen"},"content":"        university \u003d personToCopy.getUniversity();"},{"lineNumber":116,"author":{"gitID":"mhq199657"},"content":"        expectedGraduationYear \u003d personToCopy.getExpectedGraduationYear();"},{"lineNumber":117,"author":{"gitID":"tanhengyeow"},"content":"        major \u003d personToCopy.getMajor();"},{"lineNumber":118,"author":{"gitID":"tanhengyeow"},"content":"        gradePointAverage \u003d personToCopy.getGradePointAverage();"},{"lineNumber":119,"author":{"gitID":"kexiaowen"},"content":"        jobApplied \u003d personToCopy.getJobApplied();"},{"lineNumber":120,"author":{"gitID":"kexiaowen"},"content":"        rating \u003d personToCopy.getRating();"},{"lineNumber":121,"author":{"gitID":"mhq199657"},"content":"        resume \u003d personToCopy.getResume();"},{"lineNumber":122,"author":{"gitID":"Ang-YC"},"content":"        profileImage \u003d personToCopy.getProfileImage();"},{"lineNumber":123,"author":{"gitID":"Ang-YC"},"content":"        comment \u003d personToCopy.getComment();"},{"lineNumber":124,"author":{"gitID":"Ang-YC"},"content":"        interviewDate \u003d personToCopy.getInterviewDate();"},{"lineNumber":125,"author":{"gitID":"mhq199657"},"content":"        status \u003d personToCopy.getStatus();"},{"lineNumber":126,"author":{"gitID":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());"},{"lineNumber":127,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":128,"author":{"gitID":"-"},"content":""},{"lineNumber":129,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":130,"author":{"gitID":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building."},{"lineNumber":131,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":132,"author":{"gitID":"-"},"content":"    public PersonBuilder withName(String name) {"},{"lineNumber":133,"author":{"gitID":"-"},"content":"        this.name \u003d new Name(name);"},{"lineNumber":134,"author":{"gitID":"-"},"content":"        return this;"},{"lineNumber":135,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":136,"author":{"gitID":"-"},"content":""},{"lineNumber":137,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":138,"author":{"gitID":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building."},{"lineNumber":139,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":140,"author":{"gitID":"-"},"content":"    public PersonBuilder withTags(String ... tags) {"},{"lineNumber":141,"author":{"gitID":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);"},{"lineNumber":142,"author":{"gitID":"-"},"content":"        return this;"},{"lineNumber":143,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":144,"author":{"gitID":"-"},"content":""},{"lineNumber":145,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":146,"author":{"gitID":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building."},{"lineNumber":147,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":148,"author":{"gitID":"-"},"content":"    public PersonBuilder withAddress(String address) {"},{"lineNumber":149,"author":{"gitID":"-"},"content":"        this.address \u003d new Address(address);"},{"lineNumber":150,"author":{"gitID":"-"},"content":"        return this;"},{"lineNumber":151,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":152,"author":{"gitID":"-"},"content":""},{"lineNumber":153,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":154,"author":{"gitID":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building."},{"lineNumber":155,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":156,"author":{"gitID":"-"},"content":"    public PersonBuilder withPhone(String phone) {"},{"lineNumber":157,"author":{"gitID":"-"},"content":"        this.phone \u003d new Phone(phone);"},{"lineNumber":158,"author":{"gitID":"-"},"content":"        return this;"},{"lineNumber":159,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":160,"author":{"gitID":"-"},"content":""},{"lineNumber":161,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":162,"author":{"gitID":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building."},{"lineNumber":163,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":164,"author":{"gitID":"-"},"content":"    public PersonBuilder withEmail(String email) {"},{"lineNumber":165,"author":{"gitID":"-"},"content":"        this.email \u003d new Email(email);"},{"lineNumber":166,"author":{"gitID":"-"},"content":"        return this;"},{"lineNumber":167,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":168,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":169,"author":{"gitID":"kexiaowen"},"content":"    //@@author kexiaowen"},{"lineNumber":170,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":171,"author":{"gitID":"kexiaowen"},"content":"     * Sets the {@code University} of the {@code Person} that we are building."},{"lineNumber":172,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":173,"author":{"gitID":"kexiaowen"},"content":"    public PersonBuilder withUniversity(String university) {"},{"lineNumber":174,"author":{"gitID":"kexiaowen"},"content":"        this.university \u003d new University(university);"},{"lineNumber":175,"author":{"gitID":"kexiaowen"},"content":"        return this;"},{"lineNumber":176,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":177,"author":{"gitID":"kexiaowen"},"content":"    //@@author"},{"lineNumber":178,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":179,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":180,"author":{"gitID":"mhq199657"},"content":"     * Sets the {@code ExpectedGraduationYear} of the {@code Person} that we are building."},{"lineNumber":181,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":182,"author":{"gitID":"mhq199657"},"content":"    public PersonBuilder withExpectedGraduationYear(String expectedGraduationYear) {"},{"lineNumber":183,"author":{"gitID":"mhq199657"},"content":"        this.expectedGraduationYear \u003d new ExpectedGraduationYear(expectedGraduationYear);"},{"lineNumber":184,"author":{"gitID":"mhq199657"},"content":"        return this;"},{"lineNumber":185,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":186,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":187,"author":{"gitID":"tanhengyeow"},"content":"    //@@author tanhengyeow"},{"lineNumber":188,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":189,"author":{"gitID":"tanhengyeow"},"content":"     * Sets the {@code Major} of the {@code Person} that we are building."},{"lineNumber":190,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":191,"author":{"gitID":"tanhengyeow"},"content":"    public PersonBuilder withMajor(String major) {"},{"lineNumber":192,"author":{"gitID":"tanhengyeow"},"content":"        this.major \u003d new Major(major);"},{"lineNumber":193,"author":{"gitID":"tanhengyeow"},"content":"        return this;"},{"lineNumber":194,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":195,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":196,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":197,"author":{"gitID":"tanhengyeow"},"content":"     * Sets the {@code GradePointAverage} of the {@code Person} that we are building."},{"lineNumber":198,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":199,"author":{"gitID":"tanhengyeow"},"content":"    public PersonBuilder withGradePointAverage(String gradePointAverage) {"},{"lineNumber":200,"author":{"gitID":"tanhengyeow"},"content":"        this.gradePointAverage \u003d new GradePointAverage(gradePointAverage);"},{"lineNumber":201,"author":{"gitID":"tanhengyeow"},"content":"        return this;"},{"lineNumber":202,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":203,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":204,"author":{"gitID":"kexiaowen"},"content":"    //@@author kexiaowen"},{"lineNumber":205,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":206,"author":{"gitID":"kexiaowen"},"content":"     * Sets the {@code JobApplied} of the {@code Person} that we are building."},{"lineNumber":207,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":208,"author":{"gitID":"kexiaowen"},"content":"    public PersonBuilder withJobApplied(String jobApplied) {"},{"lineNumber":209,"author":{"gitID":"kexiaowen"},"content":"        this.jobApplied \u003d new JobApplied(jobApplied);"},{"lineNumber":210,"author":{"gitID":"kexiaowen"},"content":"        return this;"},{"lineNumber":211,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":212,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":213,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":214,"author":{"gitID":"kexiaowen"},"content":"     * Sets the {@code Rating} of the {@code Person} that we are building."},{"lineNumber":215,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":216,"author":{"gitID":"kexiaowen"},"content":"    public PersonBuilder withRating(String technicalSkillsScore, String communicationSkillsScore,"},{"lineNumber":217,"author":{"gitID":"kexiaowen"},"content":"                                    String problemSolvingSkillsScore, String experienceScore) {"},{"lineNumber":218,"author":{"gitID":"kexiaowen"},"content":"        this.rating \u003d new Rating(Double.valueOf(technicalSkillsScore),"},{"lineNumber":219,"author":{"gitID":"kexiaowen"},"content":"                Double.valueOf(communicationSkillsScore),"},{"lineNumber":220,"author":{"gitID":"kexiaowen"},"content":"                Double.valueOf(problemSolvingSkillsScore),"},{"lineNumber":221,"author":{"gitID":"kexiaowen"},"content":"                Double.valueOf(experienceScore));"},{"lineNumber":222,"author":{"gitID":"kexiaowen"},"content":"        return this;"},{"lineNumber":223,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":224,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":225,"author":{"gitID":"kexiaowen"},"content":"    //@@author"},{"lineNumber":226,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":227,"author":{"gitID":"mhq199657"},"content":"     * Sets the {@code Resume} of the {@code Person} that we are building."},{"lineNumber":228,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":229,"author":{"gitID":"mhq199657"},"content":"    public PersonBuilder withResume(String resume) {"},{"lineNumber":230,"author":{"gitID":"mhq199657"},"content":"        this.resume \u003d new Resume(resume);"},{"lineNumber":231,"author":{"gitID":"mhq199657"},"content":"        try {"},{"lineNumber":232,"author":{"gitID":"mhq199657"},"content":"            this.resume \u003d ResumeUtil.process(this.resume);"},{"lineNumber":233,"author":{"gitID":"mhq199657"},"content":"        } catch (IOException ioe) {"},{"lineNumber":234,"author":{"gitID":"mhq199657"},"content":"            throw new AssertionError(\"Testing environment should not be read only!\");"},{"lineNumber":235,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":236,"author":{"gitID":"mhq199657"},"content":"        return this;"},{"lineNumber":237,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":238,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":239,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":240,"author":{"gitID":"mhq199657"},"content":"     * Sets the {@code Resume} of the {@code Person} that we are building."},{"lineNumber":241,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":242,"author":{"gitID":"mhq199657"},"content":"    public PersonBuilder withResumeLazy(String resume) {"},{"lineNumber":243,"author":{"gitID":"mhq199657"},"content":"        this.resume \u003d new Resume(resume);"},{"lineNumber":244,"author":{"gitID":"mhq199657"},"content":"        return this;"},{"lineNumber":245,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":246,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":247,"author":{"gitID":"Ang-YC"},"content":"    //@@author Ang-YC"},{"lineNumber":248,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":249,"author":{"gitID":"Ang-YC"},"content":"     * Sets the {@code ProfileImage} of the {@code Person} that we are building."},{"lineNumber":250,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":251,"author":{"gitID":"Ang-YC"},"content":"    public PersonBuilder withProfileImage(String profileImage) {"},{"lineNumber":252,"author":{"gitID":"Ang-YC"},"content":"        this.profileImage \u003d new ProfileImage(profileImage);"},{"lineNumber":253,"author":{"gitID":"Ang-YC"},"content":"        try {"},{"lineNumber":254,"author":{"gitID":"Ang-YC"},"content":"            this.profileImage \u003d ProfileImageUtil.process(this.profileImage);"},{"lineNumber":255,"author":{"gitID":"Ang-YC"},"content":"        } catch (IOException ioe) {"},{"lineNumber":256,"author":{"gitID":"Ang-YC"},"content":"            throw new AssertionError(\"Testing environment should not be read only!\");"},{"lineNumber":257,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":258,"author":{"gitID":"Ang-YC"},"content":"        return this;"},{"lineNumber":259,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":260,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":261,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":262,"author":{"gitID":"Ang-YC"},"content":"     * Sets the {@code ProfileImage} of the {@code Person} that we are building."},{"lineNumber":263,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":264,"author":{"gitID":"Ang-YC"},"content":"    public PersonBuilder withProfileImageLazy(String profileImage) {"},{"lineNumber":265,"author":{"gitID":"Ang-YC"},"content":"        this.profileImage \u003d new ProfileImage(profileImage);"},{"lineNumber":266,"author":{"gitID":"Ang-YC"},"content":"        return this;"},{"lineNumber":267,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":268,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":269,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":270,"author":{"gitID":"Ang-YC"},"content":"     * Sets the {@code Comment} of the {@code Person} that we are building."},{"lineNumber":271,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":272,"author":{"gitID":"Ang-YC"},"content":"    public PersonBuilder withComment(String comment) {"},{"lineNumber":273,"author":{"gitID":"Ang-YC"},"content":"        this.comment \u003d new Comment(comment);"},{"lineNumber":274,"author":{"gitID":"Ang-YC"},"content":"        return this;"},{"lineNumber":275,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":276,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":277,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":278,"author":{"gitID":"Ang-YC"},"content":"     * Sets the {@code InterviewDate} of the {@code Person} that we are building."},{"lineNumber":279,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":280,"author":{"gitID":"Ang-YC"},"content":"    public PersonBuilder withInterviewDate(LocalDateTime interviewDate) {"},{"lineNumber":281,"author":{"gitID":"Ang-YC"},"content":"        this.interviewDate \u003d new InterviewDate(interviewDate);"},{"lineNumber":282,"author":{"gitID":"Ang-YC"},"content":"        return this;"},{"lineNumber":283,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":284,"author":{"gitID":"Ang-YC"},"content":"    //@@author"},{"lineNumber":285,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":286,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":287,"author":{"gitID":"mhq199657"},"content":"     * Sets the {@code Status} of the {@code Person} that we are building."},{"lineNumber":288,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":289,"author":{"gitID":"mhq199657"},"content":"    public PersonBuilder withStatus(int statusIndex) {"},{"lineNumber":290,"author":{"gitID":"mhq199657"},"content":"        this.status \u003d new Status(statusIndex);"},{"lineNumber":291,"author":{"gitID":"mhq199657"},"content":"        return this;"},{"lineNumber":292,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":293,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":294,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":295,"author":{"gitID":"tanhengyeow"},"content":"     * Builds and returns a {@code Person}."},{"lineNumber":296,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":297,"author":{"gitID":"-"},"content":"    public Person build() {"},{"lineNumber":298,"author":{"gitID":"kexiaowen"},"content":"        return new Person(name, phone, email, address, university, expectedGraduationYear, major, gradePointAverage,"},{"lineNumber":299,"author":{"gitID":"kexiaowen"},"content":"                jobApplied, rating, resume, profileImage, comment, interviewDate, status, tags);"},{"lineNumber":300,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":301,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":302,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":303,"author":{"gitID":"mhq199657"},"content":"     * Forms the resume path from the resume file name"},{"lineNumber":304,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":305,"author":{"gitID":"mhq199657"},"content":"    private static String formPathFromFileName(String fileName) {"},{"lineNumber":306,"author":{"gitID":"mhq199657"},"content":"        if (isNull(fileName)) {"},{"lineNumber":307,"author":{"gitID":"mhq199657"},"content":"            return null;"},{"lineNumber":308,"author":{"gitID":"mhq199657"},"content":"        } else {"},{"lineNumber":309,"author":{"gitID":"mhq199657"},"content":"            return RESUME_PATH + fileName;"},{"lineNumber":310,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":311,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":312,"author":{"gitID":"-"},"content":""},{"lineNumber":313,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":314,"author":{"gitID":"Ang-YC"},"content":"     * Forms the image path from image file name"},{"lineNumber":315,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":316,"author":{"gitID":"Ang-YC"},"content":"    private static String formImagePathFromFileName(String fileName) {"},{"lineNumber":317,"author":{"gitID":"mhq199657"},"content":"        if (isNull(fileName)) {"},{"lineNumber":318,"author":{"gitID":"mhq199657"},"content":"            return null;"},{"lineNumber":319,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":320,"author":{"gitID":"Ang-YC"},"content":"        return PROFILE_IMAGE_PATH + fileName;"},{"lineNumber":321,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":322,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"kexiaowen":56,"mhq199657":88,"-":85,"Ang-YC":62,"tanhengyeow":31}},{"path":"src/test/java/guitests/GuiRobot.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package guitests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.function.BooleanSupplier;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import org.testfx.api.FxRobot;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import guitests.guihandles.exceptions.StageNotFoundException;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitID":"-"},"content":" * Robot used to simulate user actions on the GUI."},{"lineNumber":13,"author":{"gitID":"-"},"content":" * Extends {@link FxRobot} by adding some customized functionality and workarounds."},{"lineNumber":14,"author":{"gitID":"-"},"content":" */"},{"lineNumber":15,"author":{"gitID":"-"},"content":"public class GuiRobot extends FxRobot {"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"    private static final int PAUSE_FOR_HUMAN_DELAY_MILLISECONDS \u003d 250;"},{"lineNumber":18,"author":{"gitID":"Ang-YC"},"content":"    private static final int DEFAULT_WAIT_FOR_EVENT_TIMEOUT_MILLISECONDS \u003d 10000;"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":"    private static final String PROPERTY_TESTFX_HEADLESS \u003d \"testfx.headless\";"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"    private final boolean isHeadlessMode;"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"    public GuiRobot() {"},{"lineNumber":25,"author":{"gitID":"-"},"content":"        String headlessPropertyValue \u003d System.getProperty(PROPERTY_TESTFX_HEADLESS);"},{"lineNumber":26,"author":{"gitID":"-"},"content":"        isHeadlessMode \u003d headlessPropertyValue !\u003d null \u0026\u0026 headlessPropertyValue.equals(\"true\");"},{"lineNumber":27,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":30,"author":{"gitID":"-"},"content":"     * Pauses execution for {@code PAUSE_FOR_HUMAN_DELAY_MILLISECONDS} milliseconds for a human to examine the"},{"lineNumber":31,"author":{"gitID":"-"},"content":"     * effects of the test. This method will be disabled when the GUI tests are executed in headless mode to avoid"},{"lineNumber":32,"author":{"gitID":"-"},"content":"     * unnecessary delays."},{"lineNumber":33,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":34,"author":{"gitID":"-"},"content":"    public void pauseForHuman() {"},{"lineNumber":35,"author":{"gitID":"-"},"content":"        if (isHeadlessMode) {"},{"lineNumber":36,"author":{"gitID":"-"},"content":"            return;"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"-"},"content":"        sleep(PAUSE_FOR_HUMAN_DELAY_MILLISECONDS);"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":41,"author":{"gitID":"-"},"content":""},{"lineNumber":42,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":43,"author":{"gitID":"-"},"content":"     * Waits for {@code event} to be true by {@code DEFAULT_WAIT_FOR_EVENT_TIMEOUT_MILLISECONDS} milliseconds."},{"lineNumber":44,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":45,"author":{"gitID":"-"},"content":"     * @throws EventTimeoutException if the time taken exceeds {@code DEFAULT_WAIT_FOR_EVENT_TIMEOUT_MILLISECONDS}"},{"lineNumber":46,"author":{"gitID":"-"},"content":"     * milliseconds."},{"lineNumber":47,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":48,"author":{"gitID":"-"},"content":"    public void waitForEvent(BooleanSupplier event) {"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        waitForEvent(event, DEFAULT_WAIT_FOR_EVENT_TIMEOUT_MILLISECONDS);"},{"lineNumber":50,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":53,"author":{"gitID":"-"},"content":"     * Waits for {@code event} to be true."},{"lineNumber":54,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":55,"author":{"gitID":"-"},"content":"     * @param timeOut in milliseconds"},{"lineNumber":56,"author":{"gitID":"-"},"content":"     * @throws EventTimeoutException if the time taken exceeds {@code timeOut}."},{"lineNumber":57,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":58,"author":{"gitID":"-"},"content":"    public void waitForEvent(BooleanSupplier event, int timeOut) {"},{"lineNumber":59,"author":{"gitID":"-"},"content":"        int timePassed \u003d 0;"},{"lineNumber":60,"author":{"gitID":"-"},"content":"        final int retryInterval \u003d 50;"},{"lineNumber":61,"author":{"gitID":"-"},"content":""},{"lineNumber":62,"author":{"gitID":"-"},"content":"        while (!event.getAsBoolean()) {"},{"lineNumber":63,"author":{"gitID":"-"},"content":"            sleep(retryInterval);"},{"lineNumber":64,"author":{"gitID":"-"},"content":"            timePassed +\u003d retryInterval;"},{"lineNumber":65,"author":{"gitID":"-"},"content":""},{"lineNumber":66,"author":{"gitID":"-"},"content":"            if (timePassed \u003e\u003d timeOut) {"},{"lineNumber":67,"author":{"gitID":"-"},"content":"                throw new EventTimeoutException();"},{"lineNumber":68,"author":{"gitID":"-"},"content":"            }"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":70,"author":{"gitID":"-"},"content":""},{"lineNumber":71,"author":{"gitID":"-"},"content":"        pauseForHuman();"},{"lineNumber":72,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"-"},"content":""},{"lineNumber":74,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":75,"author":{"gitID":"-"},"content":"     * Returns true if the window with {@code stageTitle} is currently open."},{"lineNumber":76,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":77,"author":{"gitID":"-"},"content":"    public boolean isWindowShown(String stageTitle) {"},{"lineNumber":78,"author":{"gitID":"-"},"content":"        return listTargetWindows().stream()"},{"lineNumber":79,"author":{"gitID":"-"},"content":"                .filter(window -\u003e window instanceof Stage \u0026\u0026 ((Stage) window).getTitle().equals(stageTitle))"},{"lineNumber":80,"author":{"gitID":"-"},"content":"                .count() \u003e\u003d 1;"},{"lineNumber":81,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":82,"author":{"gitID":"-"},"content":""},{"lineNumber":83,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":84,"author":{"gitID":"-"},"content":"     * Returns the first stage, ordered by proximity to the current target window, with the stage title."},{"lineNumber":85,"author":{"gitID":"-"},"content":"     * The order that the windows are searched are as follows (proximity): current target window,"},{"lineNumber":86,"author":{"gitID":"-"},"content":"     * children of the target window, rest of the windows."},{"lineNumber":87,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":88,"author":{"gitID":"-"},"content":"     * @throws StageNotFoundException if the stage is not found."},{"lineNumber":89,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":90,"author":{"gitID":"-"},"content":"    public Stage getStage(String stageTitle) {"},{"lineNumber":91,"author":{"gitID":"-"},"content":"        Optional\u003cStage\u003e targetStage \u003d listTargetWindows().stream()"},{"lineNumber":92,"author":{"gitID":"-"},"content":"                .filter(Stage.class::isInstance)    // checks that the window is of type Stage"},{"lineNumber":93,"author":{"gitID":"-"},"content":"                .map(Stage.class::cast)"},{"lineNumber":94,"author":{"gitID":"-"},"content":"                .filter(stage -\u003e stage.getTitle().equals(stageTitle))"},{"lineNumber":95,"author":{"gitID":"-"},"content":"                .findFirst();"},{"lineNumber":96,"author":{"gitID":"-"},"content":""},{"lineNumber":97,"author":{"gitID":"-"},"content":"        return targetStage.orElseThrow(StageNotFoundException::new);"},{"lineNumber":98,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":99,"author":{"gitID":"-"},"content":""},{"lineNumber":100,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":101,"author":{"gitID":"-"},"content":"     * Represents an error which occurs when a timeout occurs when waiting for an event."},{"lineNumber":102,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":103,"author":{"gitID":"-"},"content":"    private class EventTimeoutException extends RuntimeException {"},{"lineNumber":104,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":105,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"-":104,"Ang-YC":1}},{"path":"src/test/java/guitests/guihandles/ResultDisplayHandle.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package guitests.guihandles;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import javafx.scene.control.TextArea;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":6,"author":{"gitID":"-"},"content":" * A handler for the {@code ResultDisplay} of the UI"},{"lineNumber":7,"author":{"gitID":"-"},"content":" */"},{"lineNumber":8,"author":{"gitID":"-"},"content":"public class ResultDisplayHandle extends NodeHandle\u003cTextArea\u003e {"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"Ang-YC"},"content":"    public static final String RESULT_DISPLAY_ID \u003d \"#commandResult\";"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"    public ResultDisplayHandle(TextArea resultDisplayNode) {"},{"lineNumber":13,"author":{"gitID":"-"},"content":"        super(resultDisplayNode);"},{"lineNumber":14,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":17,"author":{"gitID":"-"},"content":"     * Returns the text in the result display."},{"lineNumber":18,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":19,"author":{"gitID":"-"},"content":"    public String getText() {"},{"lineNumber":20,"author":{"gitID":"-"},"content":"        return getRootNode().getText();"},{"lineNumber":21,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":22,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"-":21,"Ang-YC":1}},{"path":"src/test/java/guitests/guihandles/CommandBoxHandle.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package guitests.guihandles;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import javafx.scene.input.KeyCode;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import seedu.address.ui.CommandBox;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":9,"author":{"gitID":"-"},"content":" * A handle to the {@code CommandBox} in the GUI."},{"lineNumber":10,"author":{"gitID":"-"},"content":" */"},{"lineNumber":11,"author":{"gitID":"-"},"content":"public class CommandBoxHandle extends NodeHandle\u003cTextField\u003e {"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":"    public static final String COMMAND_INPUT_FIELD_ID \u003d \"#commandInput\";"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"    public CommandBoxHandle(TextField commandBoxNode) {"},{"lineNumber":16,"author":{"gitID":"-"},"content":"        super(commandBoxNode);"},{"lineNumber":17,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":20,"author":{"gitID":"-"},"content":"     * Returns the text in the command box."},{"lineNumber":21,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":22,"author":{"gitID":"-"},"content":"    public String getInput() {"},{"lineNumber":23,"author":{"gitID":"-"},"content":"        return getRootNode().getText();"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":27,"author":{"gitID":"-"},"content":"     * Enters the given command in the Command Box and presses enter."},{"lineNumber":28,"author":{"gitID":"-"},"content":"     * @return true if the command succeeded, false otherwise."},{"lineNumber":29,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    public boolean run(String command) {"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        click();"},{"lineNumber":32,"author":{"gitID":"-"},"content":"        guiRobot.interact(() -\u003e getRootNode().setText(command));"},{"lineNumber":33,"author":{"gitID":"-"},"content":"        guiRobot.pauseForHuman();"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"        guiRobot.type(KeyCode.ENTER);"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"        return !getStyleClass().contains(CommandBox.ERROR_STYLE_CLASS);"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":41,"author":{"gitID":"-"},"content":"     * Returns the list of style classes present in the command box."},{"lineNumber":42,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":43,"author":{"gitID":"-"},"content":"    public ObservableList\u003cString\u003e getStyleClass() {"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        return getRootNode().getStyleClass();"},{"lineNumber":45,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"-":45,"Ang-YC":1}},{"path":"src/test/java/guitests/guihandles/MainWindowHandle.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package guitests.guihandles;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"Ang-YC"},"content":"import javafx.geometry.Bounds;"},{"lineNumber":4,"author":{"gitID":"Ang-YC"},"content":"import javafx.geometry.Point2D;"},{"lineNumber":5,"author":{"gitID":"Ang-YC"},"content":"import javafx.geometry.Rectangle2D;"},{"lineNumber":6,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitID":"Ang-YC"},"content":"import javafx.stage.Screen;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import javafx.stage.Stage;"},{"lineNumber":9,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.ui.MainWindow;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitID":"-"},"content":" * Provides a handle for {@code MainWindow}."},{"lineNumber":13,"author":{"gitID":"-"},"content":" */"},{"lineNumber":14,"author":{"gitID":"-"},"content":"public class MainWindowHandle extends StageHandle {"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"Ang-YC"},"content":"    public static final String TOP_PANE_ID \u003d \"#topPane\";"},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":"    public static final String BOTTOM_LIST_PANE_ID \u003d \"#bottomListPane\";"},{"lineNumber":18,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"    private final PersonListPanelHandle personListPanel;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"    private final ResultDisplayHandle resultDisplay;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"    private final CommandBoxHandle commandBox;"},{"lineNumber":22,"author":{"gitID":"Ang-YC"},"content":"    private final TitleBarHandle titleBar;"},{"lineNumber":23,"author":{"gitID":"Ang-YC"},"content":"    private final InfoPanelHandle infoPanel;"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"Ang-YC"},"content":"    private final Stage stage;"},{"lineNumber":26,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":27,"author":{"gitID":"Ang-YC"},"content":"    private final AnchorPane topPane;"},{"lineNumber":28,"author":{"gitID":"Ang-YC"},"content":"    private final AnchorPane bottomListPane;"},{"lineNumber":29,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":30,"author":{"gitID":"-"},"content":"    public MainWindowHandle(Stage stage) {"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        super(stage);"},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"Ang-YC"},"content":"        this.stage \u003d stage;"},{"lineNumber":34,"author":{"gitID":"Ang-YC"},"content":"        setWindowDefaultPositionAndSize();"},{"lineNumber":35,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":36,"author":{"gitID":"-"},"content":"        personListPanel \u003d new PersonListPanelHandle(getChildNode(PersonListPanelHandle.PERSON_LIST_VIEW_ID));"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        resultDisplay \u003d new ResultDisplayHandle(getChildNode(ResultDisplayHandle.RESULT_DISPLAY_ID));"},{"lineNumber":38,"author":{"gitID":"-"},"content":"        commandBox \u003d new CommandBoxHandle(getChildNode(CommandBoxHandle.COMMAND_INPUT_FIELD_ID));"},{"lineNumber":39,"author":{"gitID":"Ang-YC"},"content":"        titleBar \u003d new TitleBarHandle(getChildNode(TitleBarHandle.TITLE_BAR_ID));"},{"lineNumber":40,"author":{"gitID":"Ang-YC"},"content":"        infoPanel \u003d new InfoPanelHandle(getChildNode(InfoPanelHandle.INFO_ID));"},{"lineNumber":41,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":42,"author":{"gitID":"Ang-YC"},"content":"        topPane \u003d getChildNode(TOP_PANE_ID);"},{"lineNumber":43,"author":{"gitID":"Ang-YC"},"content":"        bottomListPane \u003d getChildNode(BOTTOM_LIST_PANE_ID);"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"    public PersonListPanelHandle getPersonListPanel() {"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        return personListPanel;"},{"lineNumber":48,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"-"},"content":"    public ResultDisplayHandle getResultDisplay() {"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        return resultDisplay;"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"    public CommandBoxHandle getCommandBox() {"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        return commandBox;"},{"lineNumber":56,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"-"},"content":""},{"lineNumber":58,"author":{"gitID":"Ang-YC"},"content":"    public TitleBarHandle getTitleBar() {"},{"lineNumber":59,"author":{"gitID":"Ang-YC"},"content":"        return titleBar;"},{"lineNumber":60,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":61,"author":{"gitID":"-"},"content":""},{"lineNumber":62,"author":{"gitID":"Ang-YC"},"content":"    public InfoPanelHandle getInfoPanel() {"},{"lineNumber":63,"author":{"gitID":"Ang-YC"},"content":"        return infoPanel;"},{"lineNumber":64,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":66,"author":{"gitID":"Ang-YC"},"content":"    //@@author Ang-YC"},{"lineNumber":67,"author":{"gitID":"Ang-YC"},"content":"    public Point2D getTitleBarPosition() {"},{"lineNumber":68,"author":{"gitID":"Ang-YC"},"content":"        Bounds bounds \u003d topPane.localToScreen(topPane.getBoundsInLocal());"},{"lineNumber":69,"author":{"gitID":"Ang-YC"},"content":"        return new Point2D((bounds.getMinX() + bounds.getMaxX()) / 2, ("},{"lineNumber":70,"author":{"gitID":"Ang-YC"},"content":"                bounds.getMinY() + bounds.getMaxY()) / 2 - bounds.getHeight() / 4);"},{"lineNumber":71,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":72,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":73,"author":{"gitID":"Ang-YC"},"content":"    public Point2D getResizablePosition() {"},{"lineNumber":74,"author":{"gitID":"Ang-YC"},"content":"        return new Point2D(stage.getWidth() + stage.getX() - MainWindow.WINDOW_CORNER_SIZE + 1,"},{"lineNumber":75,"author":{"gitID":"Ang-YC"},"content":"                stage.getHeight() + stage.getY() - MainWindow.WINDOW_CORNER_SIZE + 1);"},{"lineNumber":76,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":77,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":78,"author":{"gitID":"Ang-YC"},"content":"    public Point2D getWindowPosition() {"},{"lineNumber":79,"author":{"gitID":"Ang-YC"},"content":"        return new Point2D(stage.getX(), stage.getY());"},{"lineNumber":80,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":81,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":82,"author":{"gitID":"Ang-YC"},"content":"    public Rectangle2D getWindowBound() {"},{"lineNumber":83,"author":{"gitID":"Ang-YC"},"content":"        return new Rectangle2D(stage.getX(), stage.getY(), stage.getWidth(), stage.getHeight());"},{"lineNumber":84,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":85,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":86,"author":{"gitID":"Ang-YC"},"content":"    public void setWindowDefaultPositionAndSize() {"},{"lineNumber":87,"author":{"gitID":"Ang-YC"},"content":"        Rectangle2D screenBound \u003d Screen.getPrimary().getVisualBounds();"},{"lineNumber":88,"author":{"gitID":"Ang-YC"},"content":"        stage.setWidth(MainWindow.MIN_WINDOW_WIDTH);"},{"lineNumber":89,"author":{"gitID":"Ang-YC"},"content":"        stage.setHeight(MainWindow.MIN_WINDOW_HEIGHT);"},{"lineNumber":90,"author":{"gitID":"Ang-YC"},"content":"        stage.setX(screenBound.getMinX());"},{"lineNumber":91,"author":{"gitID":"Ang-YC"},"content":"        stage.setY(screenBound.getMinY());"},{"lineNumber":92,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":93,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":94,"author":{"gitID":"Ang-YC"},"content":"    public double getListPaneWidth() {"},{"lineNumber":95,"author":{"gitID":"Ang-YC"},"content":"        return bottomListPane.getWidth();"},{"lineNumber":96,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":97,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":98,"author":{"gitID":"Ang-YC"},"content":"    public Rectangle2D getSceenBound() {"},{"lineNumber":99,"author":{"gitID":"Ang-YC"},"content":"        return Screen.getPrimary().getVisualBounds();"},{"lineNumber":100,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":101,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":102,"author":{"gitID":"Ang-YC"},"content":"    public boolean isMinimized() {"},{"lineNumber":103,"author":{"gitID":"Ang-YC"},"content":"        return stage.isIconified();"},{"lineNumber":104,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":105,"author":{"gitID":"Ang-YC"},"content":"}"}],"authorContributionMap":{"-":36,"Ang-YC":69}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.testutil;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"Ang-YC"},"content":"import static java.util.Objects.isNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;"},{"lineNumber":6,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMMENT_AMY;"},{"lineNumber":7,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMMENT_BOB;"},{"lineNumber":8,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMMUNICATION_SKILLS_SCORE_AMY;"},{"lineNumber":9,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMMUNICATION_SKILLS_SCORE_BOB;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;"},{"lineNumber":12,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXPECTED_GRADUATION_YEAR_AMY;"},{"lineNumber":13,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXPECTED_GRADUATION_YEAR_BOB;"},{"lineNumber":14,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXPERIENCE_SCORE_AMY;"},{"lineNumber":15,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXPERIENCE_SCORE_BOB;"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GRADE_POINT_AVERAGE_AMY;"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GRADE_POINT_AVERAGE_BOB;"},{"lineNumber":18,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JOB_APPLIED_BOB;"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MAJOR_AMY;"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MAJOR_BOB;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;"},{"lineNumber":25,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PROBLEM_SOLVING_SKILLS_SCORE_AMY;"},{"lineNumber":26,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PROBLEM_SOLVING_SKILLS_SCORE_BOB;"},{"lineNumber":27,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PROFILE_IMAGE_AMY;"},{"lineNumber":28,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PROFILE_IMAGE_BOB;"},{"lineNumber":29,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RESUME_AMY;"},{"lineNumber":30,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RESUME_BOB;"},{"lineNumber":31,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;"},{"lineNumber":32,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;"},{"lineNumber":33,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TECHNICAL_SKILLS_SCORE_AMY;"},{"lineNumber":34,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TECHNICAL_SKILLS_SCORE_BOB;"},{"lineNumber":35,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UNIVERSITY_AMY;"},{"lineNumber":36,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UNIVERSITY_BOB;"},{"lineNumber":37,"author":{"gitID":"-"},"content":""},{"lineNumber":38,"author":{"gitID":"mhq199657"},"content":"import java.time.LocalDateTime;"},{"lineNumber":39,"author":{"gitID":"mhq199657"},"content":"import java.time.Month;"},{"lineNumber":40,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":41,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":42,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"-"},"content":"import seedu.address.model.AddressBook;"},{"lineNumber":45,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":46,"author":{"gitID":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;"},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":49,"author":{"gitID":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests."},{"lineNumber":50,"author":{"gitID":"-"},"content":" */"},{"lineNumber":51,"author":{"gitID":"-"},"content":"public class TypicalPersons {"},{"lineNumber":52,"author":{"gitID":"-"},"content":""},{"lineNumber":53,"author":{"gitID":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")"},{"lineNumber":54,"author":{"gitID":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")"},{"lineNumber":55,"author":{"gitID":"kexiaowen"},"content":"            .withPhone(\"85355255\").withUniversity(\"NUS\").withExpectedGraduationYear(\"2020\")"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":"            .withMajor(\"Computer Science\")"},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"            .withGradePointAverage(\"4.84\")"},{"lineNumber":58,"author":{"gitID":"kexiaowen"},"content":"            .withJobApplied(\"Software Engineer\")"},{"lineNumber":59,"author":{"gitID":"kexiaowen"},"content":"            .withRating(\"2.7\", \"3.9\","},{"lineNumber":60,"author":{"gitID":"kexiaowen"},"content":"                    \"2.5\", \"2.5\")"},{"lineNumber":61,"author":{"gitID":"mhq199657"},"content":"            .withResumeLazy(formPathFromFileName(\"alice.pdf\"))"},{"lineNumber":62,"author":{"gitID":"mhq199657"},"content":"            .withProfileImageLazy(formImagePathFromFileName(\"elon.jpg\"))"},{"lineNumber":63,"author":{"gitID":"Ang-YC"},"content":"            .withComment(\"Alice!\")"},{"lineNumber":64,"author":{"gitID":"mhq199657"},"content":"            .withInterviewDate(LocalDateTime.of(2018, Month.APRIL, 2, 14, 0, 0))"},{"lineNumber":65,"author":{"gitID":"-"},"content":"            .withTags(\"friends\").build();"},{"lineNumber":66,"author":{"gitID":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")"},{"lineNumber":67,"author":{"gitID":"mhq199657"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\").withResumeLazy(formPathFromFileName(null))"},{"lineNumber":68,"author":{"gitID":"kexiaowen"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withUniversity(\"NTU\")"},{"lineNumber":69,"author":{"gitID":"kexiaowen"},"content":"            .withExpectedGraduationYear(\"2021\")"},{"lineNumber":70,"author":{"gitID":"tanhengyeow"},"content":"            .withMajor(\"Computer Engineering\")"},{"lineNumber":71,"author":{"gitID":"tanhengyeow"},"content":"            .withGradePointAverage(\"4.73\")"},{"lineNumber":72,"author":{"gitID":"kexiaowen"},"content":"            .withJobApplied(\"Software Engineer\")"},{"lineNumber":73,"author":{"gitID":"kexiaowen"},"content":"            .withRating(\"4\", \"4.5\","},{"lineNumber":74,"author":{"gitID":"kexiaowen"},"content":"                    \"3\", \"3.5\")"},{"lineNumber":75,"author":{"gitID":"mhq199657"},"content":"            .withProfileImageLazy(formImagePathFromFileName(\"gates.jpg\"))"},{"lineNumber":76,"author":{"gitID":"Ang-YC"},"content":"            .withComment(\"Benson!\")"},{"lineNumber":77,"author":{"gitID":"mhq199657"},"content":"            .withInterviewDate(LocalDateTime.of(2018, Month.APRIL, 6, 16, 0, 0))"},{"lineNumber":78,"author":{"gitID":"mhq199657"},"content":"            .withStatus(2).withTags(\"owesMoney\", \"friends\").build();"},{"lineNumber":79,"author":{"gitID":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")"},{"lineNumber":80,"author":{"gitID":"kexiaowen"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withUniversity(\"SMU\")"},{"lineNumber":81,"author":{"gitID":"kexiaowen"},"content":"            .withExpectedGraduationYear(\"2019\")"},{"lineNumber":82,"author":{"gitID":"tanhengyeow"},"content":"            .withMajor(\"Computer Science\")"},{"lineNumber":83,"author":{"gitID":"tanhengyeow"},"content":"            .withGradePointAverage(\"4.92\")"},{"lineNumber":84,"author":{"gitID":"kexiaowen"},"content":"            .withJobApplied(\"Front-end Developer\")"},{"lineNumber":85,"author":{"gitID":"kexiaowen"},"content":"            .withRating(\"-1\", \"-1\","},{"lineNumber":86,"author":{"gitID":"Ang-YC"},"content":"                    \"-1\", \"-1\")"},{"lineNumber":87,"author":{"gitID":"mhq199657"},"content":"            .withProfileImageLazy(null).withComment(null).build();"},{"lineNumber":88,"author":{"gitID":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")"},{"lineNumber":89,"author":{"gitID":"kexiaowen"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withUniversity(\"SUTD\")"},{"lineNumber":90,"author":{"gitID":"kexiaowen"},"content":"            .withExpectedGraduationYear(\"2020\")"},{"lineNumber":91,"author":{"gitID":"tanhengyeow"},"content":"            .withMajor(\"Information Security\")"},{"lineNumber":92,"author":{"gitID":"tanhengyeow"},"content":"            .withGradePointAverage(\"4.24\")"},{"lineNumber":93,"author":{"gitID":"kexiaowen"},"content":"            .withJobApplied(\"Web Security Researcher\")"},{"lineNumber":94,"author":{"gitID":"kexiaowen"},"content":"            .withRating(\"-1\", \"-1\","},{"lineNumber":95,"author":{"gitID":"kexiaowen"},"content":"                    \"-1\", \"-1\")"},{"lineNumber":96,"author":{"gitID":"mhq199657"},"content":"            .withProfileImageLazy(formImagePathFromFileName(\"jobs.jpg\"))"},{"lineNumber":97,"author":{"gitID":"Ang-YC"},"content":"            .withComment(\"Daniel!\")"},{"lineNumber":98,"author":{"gitID":"mhq199657"},"content":"            .withResumeLazy(formPathFromFileName(\"daniel.pdf\")).build();"},{"lineNumber":99,"author":{"gitID":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")"},{"lineNumber":100,"author":{"gitID":"kexiaowen"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withUniversity(\"NUS\")"},{"lineNumber":101,"author":{"gitID":"kexiaowen"},"content":"            .withExpectedGraduationYear(\"2018\")"},{"lineNumber":102,"author":{"gitID":"tanhengyeow"},"content":"            .withMajor(\"Business Analytics\")"},{"lineNumber":103,"author":{"gitID":"tanhengyeow"},"content":"            .withGradePointAverage(\"4.33\")"},{"lineNumber":104,"author":{"gitID":"kexiaowen"},"content":"            .withJobApplied(\"Big Data Analyst\")"},{"lineNumber":105,"author":{"gitID":"kexiaowen"},"content":"            .withRating(\"-1\", \"-1\","},{"lineNumber":106,"author":{"gitID":"Ang-YC"},"content":"                    \"-1\", \"-1\")"},{"lineNumber":107,"author":{"gitID":"mhq199657"},"content":"            .withProfileImageLazy(formImagePathFromFileName(\"larry.jpg\"))"},{"lineNumber":108,"author":{"gitID":"Ang-YC"},"content":"            .withComment(\"Elle!\").withStatus(7).build();"},{"lineNumber":109,"author":{"gitID":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")"},{"lineNumber":110,"author":{"gitID":"kexiaowen"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withUniversity(\"NUS\")"},{"lineNumber":111,"author":{"gitID":"kexiaowen"},"content":"            .withExpectedGraduationYear(\"2019\")"},{"lineNumber":112,"author":{"gitID":"tanhengyeow"},"content":"            .withMajor(\"Computer Science\")"},{"lineNumber":113,"author":{"gitID":"tanhengyeow"},"content":"            .withGradePointAverage(\"4.75\")"},{"lineNumber":114,"author":{"gitID":"kexiaowen"},"content":"            .withJobApplied(\"Software Engineer\")"},{"lineNumber":115,"author":{"gitID":"kexiaowen"},"content":"            .withRating(\"-1\", \"-1\","},{"lineNumber":116,"author":{"gitID":"Ang-YC"},"content":"                    \"-1\", \"-1\")"},{"lineNumber":117,"author":{"gitID":"mhq199657"},"content":"            .withProfileImageLazy(formImagePathFromFileName(\"mark.jpg\"))"},{"lineNumber":118,"author":{"gitID":"Ang-YC"},"content":"            .withComment(\"Fiona!\").withStatus(1).build();"},{"lineNumber":119,"author":{"gitID":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")"},{"lineNumber":120,"author":{"gitID":"kexiaowen"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withUniversity(\"NYU\")"},{"lineNumber":121,"author":{"gitID":"kexiaowen"},"content":"            .withExpectedGraduationYear(\"2022\")"},{"lineNumber":122,"author":{"gitID":"tanhengyeow"},"content":"            .withMajor(\"Information Systems\")"},{"lineNumber":123,"author":{"gitID":"tanhengyeow"},"content":"            .withGradePointAverage(\"3.88\")"},{"lineNumber":124,"author":{"gitID":"kexiaowen"},"content":"            .withJobApplied(\"Software Engineer\")"},{"lineNumber":125,"author":{"gitID":"kexiaowen"},"content":"            .withRating(\"-1\", \"-1\","},{"lineNumber":126,"author":{"gitID":"kexiaowen"},"content":"                    \"-1\", \"-1\")"},{"lineNumber":127,"author":{"gitID":"mhq199657"},"content":"            .withResumeLazy(formPathFromFileName(\"george.pdf\")).withStatus(6)"},{"lineNumber":128,"author":{"gitID":"mhq199657"},"content":"            .withProfileImageLazy(null).withComment(null).build();"},{"lineNumber":129,"author":{"gitID":"-"},"content":"    public static final Person ALICE_WITHOUT_TAG \u003d new PersonBuilder(ALICE).withTags().build();"},{"lineNumber":130,"author":{"gitID":"-"},"content":"    public static final Person BENSON_WITH_FRIENDS_TAG_REMOVED \u003d new PersonBuilder(BENSON)"},{"lineNumber":131,"author":{"gitID":"-"},"content":"            .withTags(\"owesMoney\").build();"},{"lineNumber":132,"author":{"gitID":"-"},"content":"    public static final Person CARL_WITHOUT_TAG \u003d new PersonBuilder(CARL).withTags().build();"},{"lineNumber":133,"author":{"gitID":"-"},"content":""},{"lineNumber":134,"author":{"gitID":"-"},"content":"    // Manually added"},{"lineNumber":135,"author":{"gitID":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")"},{"lineNumber":136,"author":{"gitID":"kexiaowen"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").withUniversity(\"NUS\")"},{"lineNumber":137,"author":{"gitID":"kexiaowen"},"content":"            .withExpectedGraduationYear(\"2019\")"},{"lineNumber":138,"author":{"gitID":"tanhengyeow"},"content":"            .withMajor(\"Computer Science\")"},{"lineNumber":139,"author":{"gitID":"tanhengyeow"},"content":"            .withGradePointAverage(\"3.75\")"},{"lineNumber":140,"author":{"gitID":"kexiaowen"},"content":"            .withRating(\"-1\", \"-1\","},{"lineNumber":141,"author":{"gitID":"kexiaowen"},"content":"                    \"-1\", \"-1\")"},{"lineNumber":142,"author":{"gitID":"mhq199657"},"content":"            .withResumeLazy(formPathFromFileName(\"hoon.pdf\"))"},{"lineNumber":143,"author":{"gitID":"mhq199657"},"content":"            .withProfileImageLazy(null).withComment(null).build();"},{"lineNumber":144,"author":{"gitID":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")"},{"lineNumber":145,"author":{"gitID":"kexiaowen"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").withUniversity(\"NUS\")"},{"lineNumber":146,"author":{"gitID":"kexiaowen"},"content":"            .withExpectedGraduationYear(\"2018\")"},{"lineNumber":147,"author":{"gitID":"tanhengyeow"},"content":"            .withMajor(\"Computer Science\")"},{"lineNumber":148,"author":{"gitID":"tanhengyeow"},"content":"            .withGradePointAverage(\"3.11\")"},{"lineNumber":149,"author":{"gitID":"kexiaowen"},"content":"            .withRating(\"-1\", \"-1\","},{"lineNumber":150,"author":{"gitID":"Ang-YC"},"content":"                    \"-1\", \"-1\")"},{"lineNumber":151,"author":{"gitID":"mhq199657"},"content":"            .withProfileImageLazy(null).withComment(null).build();"},{"lineNumber":152,"author":{"gitID":"-"},"content":""},{"lineNumber":153,"author":{"gitID":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}"},{"lineNumber":154,"author":{"gitID":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)"},{"lineNumber":155,"author":{"gitID":"kexiaowen"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withUniversity(VALID_UNIVERSITY_AMY)"},{"lineNumber":156,"author":{"gitID":"kexiaowen"},"content":"            .withExpectedGraduationYear(VALID_EXPECTED_GRADUATION_YEAR_AMY)"},{"lineNumber":157,"author":{"gitID":"tanhengyeow"},"content":"            .withMajor(VALID_MAJOR_AMY)"},{"lineNumber":158,"author":{"gitID":"tanhengyeow"},"content":"            .withGradePointAverage(VALID_GRADE_POINT_AVERAGE_AMY)"},{"lineNumber":159,"author":{"gitID":"kexiaowen"},"content":"            .withRating(VALID_TECHNICAL_SKILLS_SCORE_AMY, VALID_COMMUNICATION_SKILLS_SCORE_AMY,"},{"lineNumber":160,"author":{"gitID":"kexiaowen"},"content":"                    VALID_PROBLEM_SOLVING_SKILLS_SCORE_AMY, VALID_EXPERIENCE_SCORE_AMY)"},{"lineNumber":161,"author":{"gitID":"mhq199657"},"content":"            .withResumeLazy(VALID_RESUME_AMY)"},{"lineNumber":162,"author":{"gitID":"mhq199657"},"content":"            .withProfileImageLazy(VALID_PROFILE_IMAGE_AMY).withComment(VALID_COMMENT_AMY)"},{"lineNumber":163,"author":{"gitID":"kexiaowen"},"content":"            .withTags(VALID_TAG_FRIEND).build();"},{"lineNumber":164,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":165,"author":{"gitID":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)"},{"lineNumber":166,"author":{"gitID":"kexiaowen"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withUniversity(VALID_UNIVERSITY_BOB)"},{"lineNumber":167,"author":{"gitID":"mhq199657"},"content":"            .withResumeLazy(VALID_RESUME_BOB)"},{"lineNumber":168,"author":{"gitID":"mhq199657"},"content":"            .withExpectedGraduationYear(VALID_EXPECTED_GRADUATION_YEAR_BOB)"},{"lineNumber":169,"author":{"gitID":"tanhengyeow"},"content":"            .withMajor(VALID_MAJOR_BOB)"},{"lineNumber":170,"author":{"gitID":"tanhengyeow"},"content":"            .withGradePointAverage(VALID_GRADE_POINT_AVERAGE_BOB)"},{"lineNumber":171,"author":{"gitID":"kexiaowen"},"content":"            .withJobApplied(VALID_JOB_APPLIED_BOB)"},{"lineNumber":172,"author":{"gitID":"kexiaowen"},"content":"            .withRating(VALID_TECHNICAL_SKILLS_SCORE_BOB, VALID_COMMUNICATION_SKILLS_SCORE_BOB,"},{"lineNumber":173,"author":{"gitID":"kexiaowen"},"content":"                    VALID_PROBLEM_SOLVING_SKILLS_SCORE_BOB, VALID_EXPERIENCE_SCORE_BOB)"},{"lineNumber":174,"author":{"gitID":"mhq199657"},"content":"            .withProfileImageLazy(VALID_PROFILE_IMAGE_BOB).withComment(VALID_COMMENT_BOB)"},{"lineNumber":175,"author":{"gitID":"Ang-YC"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();"},{"lineNumber":176,"author":{"gitID":"-"},"content":""},{"lineNumber":177,"author":{"gitID":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER"},{"lineNumber":178,"author":{"gitID":"mhq199657"},"content":"    public static final String KEYWORD_MATCHING_2019 \u003d \"2019\"; //A keyword that matches 2020"},{"lineNumber":179,"author":{"gitID":"-"},"content":""},{"lineNumber":180,"author":{"gitID":"mhq199657"},"content":"    private static final String RESUME_PATH \u003d \"src/test/resources/resume/\";"},{"lineNumber":181,"author":{"gitID":"Ang-YC"},"content":"    private static final String IMAGE_PATH \u003d \"src/test/resources/photos/\";"},{"lineNumber":182,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":183,"author":{"gitID":"-"},"content":"    private TypicalPersons() {} // prevents instantiation"},{"lineNumber":184,"author":{"gitID":"-"},"content":""},{"lineNumber":185,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":186,"author":{"gitID":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons."},{"lineNumber":187,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":188,"author":{"gitID":"-"},"content":"    public static AddressBook getTypicalAddressBook() {"},{"lineNumber":189,"author":{"gitID":"-"},"content":"        AddressBook ab \u003d new AddressBook();"},{"lineNumber":190,"author":{"gitID":"-"},"content":"        for (Person person : getTypicalPersons()) {"},{"lineNumber":191,"author":{"gitID":"-"},"content":"            try {"},{"lineNumber":192,"author":{"gitID":"-"},"content":"                ab.addPerson(person);"},{"lineNumber":193,"author":{"gitID":"-"},"content":"            } catch (DuplicatePersonException e) {"},{"lineNumber":194,"author":{"gitID":"-"},"content":"                throw new AssertionError(\"not possible\");"},{"lineNumber":195,"author":{"gitID":"-"},"content":"            }"},{"lineNumber":196,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":197,"author":{"gitID":"-"},"content":"        return ab;"},{"lineNumber":198,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":199,"author":{"gitID":"-"},"content":""},{"lineNumber":200,"author":{"gitID":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {"},{"lineNumber":201,"author":{"gitID":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));"},{"lineNumber":202,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":203,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":204,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":205,"author":{"gitID":"mhq199657"},"content":"     * Forms the resume path from the resume file name"},{"lineNumber":206,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":207,"author":{"gitID":"mhq199657"},"content":"    private static String formPathFromFileName(String fileName) {"},{"lineNumber":208,"author":{"gitID":"mhq199657"},"content":"        if (fileName \u003d\u003d null) {"},{"lineNumber":209,"author":{"gitID":"mhq199657"},"content":"            return null;"},{"lineNumber":210,"author":{"gitID":"mhq199657"},"content":"        } else {"},{"lineNumber":211,"author":{"gitID":"mhq199657"},"content":"            return RESUME_PATH + fileName;"},{"lineNumber":212,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":213,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":214,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":215,"author":{"gitID":"Ang-YC"},"content":"    //@@author Ang-YC"},{"lineNumber":216,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":217,"author":{"gitID":"Ang-YC"},"content":"     * Forms the image path from image file name"},{"lineNumber":218,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":219,"author":{"gitID":"Ang-YC"},"content":"    private static String formImagePathFromFileName(String fileName) {"},{"lineNumber":220,"author":{"gitID":"Ang-YC"},"content":"        if (isNull(fileName)) {"},{"lineNumber":221,"author":{"gitID":"Ang-YC"},"content":"            return null;"},{"lineNumber":222,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":223,"author":{"gitID":"Ang-YC"},"content":"        return IMAGE_PATH + fileName;"},{"lineNumber":224,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":225,"author":{"gitID":"Ang-YC"},"content":"    //@@author"},{"lineNumber":226,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":227,"author":{"gitID":"mhq199657"},"content":"    public static void main(String[] args) {"},{"lineNumber":228,"author":{"gitID":"mhq199657"},"content":"        System.out.println(ALICE);"},{"lineNumber":229,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":230,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"kexiaowen":59,"mhq199657":45,"-":71,"Ang-YC":29,"tanhengyeow":26}},{"path":"src/test/java/guitests/guihandles/PersonCardHandle.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package guitests.guihandles;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import javafx.scene.Node;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import javafx.scene.control.Label;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"-"},"content":" * Provides a handle to a person card in the person list panel."},{"lineNumber":8,"author":{"gitID":"-"},"content":" */"},{"lineNumber":9,"author":{"gitID":"-"},"content":"public class PersonCardHandle extends NodeHandle\u003cNode\u003e {"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":12,"author":{"gitID":"Ang-YC"},"content":"    private static final String NAME_FIELD_ID \u003d \"#cardPersonName\";"},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":"    private static final String UNIVERSITY_FIELD_ID \u003d \"#cardPersonUniversity\";"},{"lineNumber":14,"author":{"gitID":"Ang-YC"},"content":"    private static final String EMAIL_FIELD_ID \u003d \"#cardPersonEmail\";"},{"lineNumber":15,"author":{"gitID":"Ang-YC"},"content":"    private static final String PHONE_FIELD_ID \u003d \"#cardPersonContact\";"},{"lineNumber":16,"author":{"gitID":"Ang-YC"},"content":"    private static final String RATING_FIELD_ID \u003d \"#cardPersonRating\";"},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":"    private static final String STATUS_FIELD_ID \u003d \"#cardPersonStatus\";"},{"lineNumber":18,"author":{"gitID":"Ang-YC"},"content":"    private static final String ID_FIELD_ID \u003d \"#cardPersonNumber\";"},{"lineNumber":19,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":"    private final Label nameLabel;"},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":"    private final Label universityLabel;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"    private final Label emailLabel;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    private final Label phoneLabel;"},{"lineNumber":24,"author":{"gitID":"Ang-YC"},"content":"    private final Label ratingLabel;"},{"lineNumber":25,"author":{"gitID":"Ang-YC"},"content":"    private final Label statusLabel;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    private final Label idLabel;"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    public PersonCardHandle(Node cardNode) {"},{"lineNumber":29,"author":{"gitID":"-"},"content":"        super(cardNode);"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"        this.nameLabel \u003d getChildNode(NAME_FIELD_ID);"},{"lineNumber":32,"author":{"gitID":"Ang-YC"},"content":"        this.universityLabel \u003d getChildNode(UNIVERSITY_FIELD_ID);"},{"lineNumber":33,"author":{"gitID":"-"},"content":"        this.emailLabel \u003d getChildNode(EMAIL_FIELD_ID);"},{"lineNumber":34,"author":{"gitID":"-"},"content":"        this.phoneLabel \u003d getChildNode(PHONE_FIELD_ID);"},{"lineNumber":35,"author":{"gitID":"Ang-YC"},"content":"        this.ratingLabel \u003d getChildNode(RATING_FIELD_ID);"},{"lineNumber":36,"author":{"gitID":"Ang-YC"},"content":"        this.statusLabel \u003d getChildNode(STATUS_FIELD_ID);"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        this.idLabel \u003d getChildNode(ID_FIELD_ID);"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"    public String getName() {"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        return nameLabel.getText();"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"Ang-YC"},"content":"    public String getUniversity() {"},{"lineNumber":45,"author":{"gitID":"Ang-YC"},"content":"        return universityLabel.getText();"},{"lineNumber":46,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":"    public String getEmail() {"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        return emailLabel.getText();"},{"lineNumber":50,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"-"},"content":"    public String getPhone() {"},{"lineNumber":53,"author":{"gitID":"-"},"content":"        return phoneLabel.getText();"},{"lineNumber":54,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":55,"author":{"gitID":"-"},"content":""},{"lineNumber":56,"author":{"gitID":"Ang-YC"},"content":"    public String getRating() {"},{"lineNumber":57,"author":{"gitID":"Ang-YC"},"content":"        return ratingLabel.getText();"},{"lineNumber":58,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":59,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":60,"author":{"gitID":"Ang-YC"},"content":"    public String getStatus() {"},{"lineNumber":61,"author":{"gitID":"Ang-YC"},"content":"        return statusLabel.getText();"},{"lineNumber":62,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"-"},"content":""},{"lineNumber":64,"author":{"gitID":"Ang-YC"},"content":"    public String getStatusColor() {"},{"lineNumber":65,"author":{"gitID":"Ang-YC"},"content":"        return statusLabel.getStyle().replace(\"-fx-background-color:\", \"\").trim();"},{"lineNumber":66,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":67,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":68,"author":{"gitID":"-"},"content":"    public String getId() {"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        return idLabel.getText();"},{"lineNumber":70,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"-":44,"Ang-YC":27}},{"path":"src/test/java/guitests/guihandles/PersonListPanelHandle.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package guitests.guihandles;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import javafx.scene.control.ListView;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.address.ui.PersonCard;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":11,"author":{"gitID":"-"},"content":" * Provides a handle for {@code PersonListPanel} containing the list of {@code PersonCard}."},{"lineNumber":12,"author":{"gitID":"-"},"content":" */"},{"lineNumber":13,"author":{"gitID":"-"},"content":"public class PersonListPanelHandle extends NodeHandle\u003cListView\u003cPersonCard\u003e\u003e {"},{"lineNumber":14,"author":{"gitID":"Ang-YC"},"content":"    public static final String PERSON_LIST_VIEW_ID \u003d \"#listPersons\";"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"    private Optional\u003cPersonCard\u003e lastRememberedSelectedPersonCard;"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"    public PersonListPanelHandle(ListView\u003cPersonCard\u003e personListPanelNode) {"},{"lineNumber":19,"author":{"gitID":"-"},"content":"        super(personListPanelNode);"},{"lineNumber":20,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":23,"author":{"gitID":"-"},"content":"     * Returns a handle to the selected {@code PersonCardHandle}."},{"lineNumber":24,"author":{"gitID":"-"},"content":"     * A maximum of 1 item can be selected at any time."},{"lineNumber":25,"author":{"gitID":"-"},"content":"     * @throws AssertionError if no card is selected, or more than 1 card is selected."},{"lineNumber":26,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":27,"author":{"gitID":"-"},"content":"    public PersonCardHandle getHandleToSelectedCard() {"},{"lineNumber":28,"author":{"gitID":"-"},"content":"        List\u003cPersonCard\u003e personList \u003d getRootNode().getSelectionModel().getSelectedItems();"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"Ang-YC"},"content":"        if (personList.size() \u003e 1) {"},{"lineNumber":31,"author":{"gitID":"Ang-YC"},"content":"            throw new AssertionError(\"Person list size expected 0 or 1.\");"},{"lineNumber":32,"author":{"gitID":"Ang-YC"},"content":"        } else if (personList.size() \u003d\u003d 0) {"},{"lineNumber":33,"author":{"gitID":"Ang-YC"},"content":"            return null;"},{"lineNumber":34,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":35,"author":{"gitID":"-"},"content":""},{"lineNumber":36,"author":{"gitID":"-"},"content":"        return new PersonCardHandle(personList.get(0).getRoot());"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":40,"author":{"gitID":"-"},"content":"     * Returns the index of the selected card."},{"lineNumber":41,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    public int getSelectedCardIndex() {"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        return getRootNode().getSelectionModel().getSelectedIndex();"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":47,"author":{"gitID":"-"},"content":"     * Returns true if a card is currently selected."},{"lineNumber":48,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":49,"author":{"gitID":"-"},"content":"    public boolean isAnyCardSelected() {"},{"lineNumber":50,"author":{"gitID":"-"},"content":"        List\u003cPersonCard\u003e selectedCardsList \u003d getRootNode().getSelectionModel().getSelectedItems();"},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"-"},"content":"        if (selectedCardsList.size() \u003e 1) {"},{"lineNumber":53,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"Card list size expected 0 or 1.\");"},{"lineNumber":54,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":55,"author":{"gitID":"-"},"content":""},{"lineNumber":56,"author":{"gitID":"-"},"content":"        return !selectedCardsList.isEmpty();"},{"lineNumber":57,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":60,"author":{"gitID":"-"},"content":"     * Navigates the listview to display and select the person."},{"lineNumber":61,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":62,"author":{"gitID":"-"},"content":"    public void navigateToCard(Person person) {"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        List\u003cPersonCard\u003e cards \u003d getRootNode().getItems();"},{"lineNumber":64,"author":{"gitID":"Ang-YC"},"content":"        Optional\u003cPersonCard\u003e matchingCard \u003d cards.stream().filter(card -\u003e card.getPerson().equals(person)).findFirst();"},{"lineNumber":65,"author":{"gitID":"-"},"content":""},{"lineNumber":66,"author":{"gitID":"-"},"content":"        if (!matchingCard.isPresent()) {"},{"lineNumber":67,"author":{"gitID":"-"},"content":"            throw new IllegalArgumentException(\"Person does not exist.\");"},{"lineNumber":68,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":69,"author":{"gitID":"-"},"content":""},{"lineNumber":70,"author":{"gitID":"-"},"content":"        guiRobot.interact(() -\u003e {"},{"lineNumber":71,"author":{"gitID":"-"},"content":"            getRootNode().scrollTo(matchingCard.get());"},{"lineNumber":72,"author":{"gitID":"-"},"content":"            getRootNode().getSelectionModel().select(matchingCard.get());"},{"lineNumber":73,"author":{"gitID":"-"},"content":"        });"},{"lineNumber":74,"author":{"gitID":"-"},"content":"        guiRobot.pauseForHuman();"},{"lineNumber":75,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":76,"author":{"gitID":"-"},"content":""},{"lineNumber":77,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":78,"author":{"gitID":"-"},"content":"     * Returns the person card handle of a person associated with the {@code index} in the list."},{"lineNumber":79,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":80,"author":{"gitID":"-"},"content":"    public PersonCardHandle getPersonCardHandle(int index) {"},{"lineNumber":81,"author":{"gitID":"Ang-YC"},"content":"        return getPersonCardHandle(getRootNode().getItems().get(index).getPerson());"},{"lineNumber":82,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":83,"author":{"gitID":"-"},"content":""},{"lineNumber":84,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":85,"author":{"gitID":"-"},"content":"     * Returns the {@code PersonCardHandle} of the specified {@code person} in the list."},{"lineNumber":86,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":87,"author":{"gitID":"-"},"content":"    public PersonCardHandle getPersonCardHandle(Person person) {"},{"lineNumber":88,"author":{"gitID":"-"},"content":"        Optional\u003cPersonCardHandle\u003e handle \u003d getRootNode().getItems().stream()"},{"lineNumber":89,"author":{"gitID":"Ang-YC"},"content":"                .filter(card -\u003e card.getPerson().equals(person))"},{"lineNumber":90,"author":{"gitID":"-"},"content":"                .map(card -\u003e new PersonCardHandle(card.getRoot()))"},{"lineNumber":91,"author":{"gitID":"-"},"content":"                .findFirst();"},{"lineNumber":92,"author":{"gitID":"-"},"content":"        return handle.orElseThrow(() -\u003e new IllegalArgumentException(\"Person does not exist.\"));"},{"lineNumber":93,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":94,"author":{"gitID":"-"},"content":""},{"lineNumber":95,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":96,"author":{"gitID":"-"},"content":"     * Selects the {@code PersonCard} at {@code index} in the list."},{"lineNumber":97,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":98,"author":{"gitID":"-"},"content":"    public void select(int index) {"},{"lineNumber":99,"author":{"gitID":"-"},"content":"        getRootNode().getSelectionModel().select(index);"},{"lineNumber":100,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":101,"author":{"gitID":"-"},"content":""},{"lineNumber":102,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":103,"author":{"gitID":"-"},"content":"     * Remembers the selected {@code PersonCard} in the list."},{"lineNumber":104,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":105,"author":{"gitID":"-"},"content":"    public void rememberSelectedPersonCard() {"},{"lineNumber":106,"author":{"gitID":"-"},"content":"        List\u003cPersonCard\u003e selectedItems \u003d getRootNode().getSelectionModel().getSelectedItems();"},{"lineNumber":107,"author":{"gitID":"-"},"content":""},{"lineNumber":108,"author":{"gitID":"-"},"content":"        if (selectedItems.size() \u003d\u003d 0) {"},{"lineNumber":109,"author":{"gitID":"-"},"content":"            lastRememberedSelectedPersonCard \u003d Optional.empty();"},{"lineNumber":110,"author":{"gitID":"-"},"content":"        } else {"},{"lineNumber":111,"author":{"gitID":"-"},"content":"            lastRememberedSelectedPersonCard \u003d Optional.of(selectedItems.get(0));"},{"lineNumber":112,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":113,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":114,"author":{"gitID":"-"},"content":""},{"lineNumber":115,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":116,"author":{"gitID":"-"},"content":"     * Returns true if the selected {@code PersonCard} is different from the value remembered by the most recent"},{"lineNumber":117,"author":{"gitID":"-"},"content":"     * {@code rememberSelectedPersonCard()} call."},{"lineNumber":118,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":119,"author":{"gitID":"-"},"content":"    public boolean isSelectedPersonCardChanged() {"},{"lineNumber":120,"author":{"gitID":"-"},"content":"        List\u003cPersonCard\u003e selectedItems \u003d getRootNode().getSelectionModel().getSelectedItems();"},{"lineNumber":121,"author":{"gitID":"-"},"content":""},{"lineNumber":122,"author":{"gitID":"-"},"content":"        if (selectedItems.size() \u003d\u003d 0) {"},{"lineNumber":123,"author":{"gitID":"-"},"content":"            return lastRememberedSelectedPersonCard.isPresent();"},{"lineNumber":124,"author":{"gitID":"-"},"content":"        } else {"},{"lineNumber":125,"author":{"gitID":"-"},"content":"            return !lastRememberedSelectedPersonCard.isPresent()"},{"lineNumber":126,"author":{"gitID":"-"},"content":"                    || !lastRememberedSelectedPersonCard.get().equals(selectedItems.get(0));"},{"lineNumber":127,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":128,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":129,"author":{"gitID":"-"},"content":""},{"lineNumber":130,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":131,"author":{"gitID":"-"},"content":"     * Returns the size of the list."},{"lineNumber":132,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":133,"author":{"gitID":"-"},"content":"    public int getListSize() {"},{"lineNumber":134,"author":{"gitID":"-"},"content":"        return getRootNode().getItems().size();"},{"lineNumber":135,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":136,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"-":128,"Ang-YC":8}},{"path":"src/test/java/guitests/guihandles/InfoPanelUtil.java","lines":[{"lineNumber":1,"author":{"gitID":"Ang-YC"},"content":"package guitests.guihandles;"},{"lineNumber":2,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":3,"author":{"gitID":"Ang-YC"},"content":"import guitests.GuiRobot;"},{"lineNumber":4,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":5,"author":{"gitID":"Ang-YC"},"content":"//@@author Ang-YC"},{"lineNumber":6,"author":{"gitID":"Ang-YC"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"Ang-YC"},"content":" * Helper methods for dealing with {@code InfoPanel}."},{"lineNumber":8,"author":{"gitID":"Ang-YC"},"content":" */"},{"lineNumber":9,"author":{"gitID":"Ang-YC"},"content":"public class InfoPanelUtil {"},{"lineNumber":10,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":11,"author":{"gitID":"Ang-YC"},"content":"     * If the {@code infoPanelHandle}\u0027s {@code Panel} is loading, sleeps the thread till it is successfully loaded."},{"lineNumber":12,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":"    public static void waitUntilInfoPanelLoaded(InfoPanelHandle infoPanelHandle) {"},{"lineNumber":14,"author":{"gitID":"Ang-YC"},"content":"        new GuiRobot().waitForEvent(infoPanelHandle::isLoaded);"},{"lineNumber":15,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":16,"author":{"gitID":"Ang-YC"},"content":"}"}],"authorContributionMap":{"Ang-YC":16}},{"path":"src/test/java/seedu/address/model/person/EmailContainsSuffixesPredicateTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.testutil.PersonBuilder;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"public class EmailContainsSuffixesPredicateTest {"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    public void equals() {"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"hy@example.com\");"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"hy@example.com\", \"yh@example.com\");"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        EmailContainsPrefixesPredicate firstPredicate \u003d"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                new EmailContainsPrefixesPredicate(firstPredicateKeywordList);"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"        EmailContainsPrefixesPredicate secondPredicate \u003d"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                new EmailContainsPrefixesPredicate(secondPredicateKeywordList);"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        // same object -\u003e returns true"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        // same values -\u003e returns true"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        EmailContainsPrefixesPredicate firstPredicateCopy \u003d"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                new EmailContainsPrefixesPredicate(firstPredicateKeywordList);"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        // different types -\u003e returns false"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(1));"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        // null -\u003e returns false"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(null));"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        // different person -\u003e returns false"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"    public void test_emailContainsPrefixes_returnsTrue() {"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"        // One prefix"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"        EmailContainsPrefixesPredicate predicate \u003d"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"                new EmailContainsPrefixesPredicate(Collections.singletonList(\"hy\"));"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"hy@example.com\").build()));"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"        // Mixed-case prefix"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new EmailContainsPrefixesPredicate(Arrays.asList(\"Hy\"));"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"hy@example.com\").build()));"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"    @Test"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"    public void test_emailDoesNotContainPrefixes_returnsFalse() {"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":"        // Zero prefix"},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"        EmailContainsPrefixesPredicate predicate \u003d"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"                new EmailContainsPrefixesPredicate(Collections.emptyList());"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"hy@lol.com\").build()));"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"        // Non-matching prefix"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"        predicate \u003d new EmailContainsPrefixesPredicate(Arrays.asList(\"yh\"));"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"hy@example.com\").build()));"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":13,"tanhengyeow":55}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"Ang-YC"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"Ang-YC"},"content":"import javafx.animation.Animation;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.control.Label;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import javafx.scene.input.KeyEvent;"},{"lineNumber":12,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.ui.NewResultAvailableEvent;"},{"lineNumber":16,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.commons.util.UiUtil;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.logic.ListElementPointer;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.logic.Logic;"},{"lineNumber":19,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.logic.commands.Command;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.CommandResult;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":25,"author":{"gitID":"-"},"content":" * The UI component that is responsible for receiving user command inputs."},{"lineNumber":26,"author":{"gitID":"-"},"content":" */"},{"lineNumber":27,"author":{"gitID":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"Ang-YC"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"command-error\";"},{"lineNumber":30,"author":{"gitID":"Ang-YC"},"content":"    public static final String PARSE_INVALID \u003d \"parse-invalid\";"},{"lineNumber":31,"author":{"gitID":"Ang-YC"},"content":"    public static final String PARSE_VALID \u003d \"parse-valid\";"},{"lineNumber":32,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":33,"author":{"gitID":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(CommandBox.class);"},{"lineNumber":36,"author":{"gitID":"-"},"content":"    private final Logic logic;"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    private ListElementPointer historySnapshot;"},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"Ang-YC"},"content":"    private HBox floatParseRealTime;"},{"lineNumber":40,"author":{"gitID":"Ang-YC"},"content":"    private Label floatParseLabel;"},{"lineNumber":41,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":42,"author":{"gitID":"Ang-YC"},"content":"    // Animation"},{"lineNumber":43,"author":{"gitID":"Ang-YC"},"content":"    private ArrayList\u003cAnimation\u003e allAnimation \u003d new ArrayList\u003c\u003e();"},{"lineNumber":44,"author":{"gitID":"Ang-YC"},"content":"    private boolean animated;"},{"lineNumber":45,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":47,"author":{"gitID":"Ang-YC"},"content":"    private TextField commandInput;"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"Ang-YC"},"content":"    public CommandBox(Logic logic, HBox floatParseRealTime, Label floatParseLabel, boolean animated) {"},{"lineNumber":50,"author":{"gitID":"-"},"content":"        super(FXML);"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        this.logic \u003d logic;"},{"lineNumber":52,"author":{"gitID":"Ang-YC"},"content":"        this.floatParseRealTime \u003d floatParseRealTime;"},{"lineNumber":53,"author":{"gitID":"Ang-YC"},"content":"        this.floatParseLabel \u003d floatParseLabel;"},{"lineNumber":54,"author":{"gitID":"Ang-YC"},"content":"        this.animated \u003d animated;"},{"lineNumber":55,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":56,"author":{"gitID":"Ang-YC"},"content":"        // Command helper not tested for now"},{"lineNumber":57,"author":{"gitID":"Ang-YC"},"content":"        if (floatParseRealTime !\u003d null \u0026\u0026 floatParseLabel !\u003d null) {"},{"lineNumber":58,"author":{"gitID":"Ang-YC"},"content":"            setupInputChange();"},{"lineNumber":59,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":60,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":61,"author":{"gitID":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box."},{"lineNumber":62,"author":{"gitID":"Ang-YC"},"content":"        commandInput.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());"},{"lineNumber":63,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":64,"author":{"gitID":"-"},"content":"        historySnapshot \u003d logic.getHistorySnapshot();"},{"lineNumber":65,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitID":"-"},"content":""},{"lineNumber":67,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":68,"author":{"gitID":"-"},"content":"     * Handles the key press event, {@code keyEvent}."},{"lineNumber":69,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":70,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":71,"author":{"gitID":"-"},"content":"    private void handleKeyPress(KeyEvent keyEvent) {"},{"lineNumber":72,"author":{"gitID":"-"},"content":"        switch (keyEvent.getCode()) {"},{"lineNumber":73,"author":{"gitID":"-"},"content":"        case UP:"},{"lineNumber":74,"author":{"gitID":"-"},"content":"            // As up and down buttons will alter the position of the caret,"},{"lineNumber":75,"author":{"gitID":"-"},"content":"            // consuming it causes the caret\u0027s position to remain unchanged"},{"lineNumber":76,"author":{"gitID":"-"},"content":"            keyEvent.consume();"},{"lineNumber":77,"author":{"gitID":"-"},"content":"            navigateToPreviousInput();"},{"lineNumber":78,"author":{"gitID":"-"},"content":"            break;"},{"lineNumber":79,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":80,"author":{"gitID":"-"},"content":"        case DOWN:"},{"lineNumber":81,"author":{"gitID":"-"},"content":"            keyEvent.consume();"},{"lineNumber":82,"author":{"gitID":"-"},"content":"            navigateToNextInput();"},{"lineNumber":83,"author":{"gitID":"-"},"content":"            break;"},{"lineNumber":84,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":85,"author":{"gitID":"-"},"content":"        default:"},{"lineNumber":86,"author":{"gitID":"-"},"content":"            // let JavaFx handle the keypress"},{"lineNumber":87,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":88,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":89,"author":{"gitID":"-"},"content":""},{"lineNumber":90,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":91,"author":{"gitID":"-"},"content":"     * Updates the text field with the previous input in {@code historySnapshot},"},{"lineNumber":92,"author":{"gitID":"-"},"content":"     * if there exists a previous input in {@code historySnapshot}"},{"lineNumber":93,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":94,"author":{"gitID":"-"},"content":"    private void navigateToPreviousInput() {"},{"lineNumber":95,"author":{"gitID":"-"},"content":"        assert historySnapshot !\u003d null;"},{"lineNumber":96,"author":{"gitID":"-"},"content":""},{"lineNumber":97,"author":{"gitID":"Ang-YC"},"content":"        if (historySnapshot.hasPrevious()) {"},{"lineNumber":98,"author":{"gitID":"-"},"content":"            replaceText(historySnapshot.previous());"},{"lineNumber":99,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":100,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":101,"author":{"gitID":"-"},"content":""},{"lineNumber":102,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":103,"author":{"gitID":"-"},"content":"     * Updates the text field with the next input in {@code historySnapshot},"},{"lineNumber":104,"author":{"gitID":"-"},"content":"     * if there exists a next input in {@code historySnapshot}"},{"lineNumber":105,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":106,"author":{"gitID":"-"},"content":"    private void navigateToNextInput() {"},{"lineNumber":107,"author":{"gitID":"-"},"content":"        assert historySnapshot !\u003d null;"},{"lineNumber":108,"author":{"gitID":"-"},"content":""},{"lineNumber":109,"author":{"gitID":"Ang-YC"},"content":"        if (historySnapshot.hasNext()) {"},{"lineNumber":110,"author":{"gitID":"-"},"content":"            replaceText(historySnapshot.next());"},{"lineNumber":111,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":112,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":113,"author":{"gitID":"-"},"content":""},{"lineNumber":114,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":115,"author":{"gitID":"-"},"content":"     * Sets {@code CommandBox}\u0027s text field with {@code text} and"},{"lineNumber":116,"author":{"gitID":"-"},"content":"     * positions the caret to the end of the {@code text}."},{"lineNumber":117,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":118,"author":{"gitID":"-"},"content":"    private void replaceText(String text) {"},{"lineNumber":119,"author":{"gitID":"Ang-YC"},"content":"        commandInput.setText(text);"},{"lineNumber":120,"author":{"gitID":"Ang-YC"},"content":"        commandInput.positionCaret(commandInput.getText().length());"},{"lineNumber":121,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":122,"author":{"gitID":"-"},"content":""},{"lineNumber":123,"author":{"gitID":"Ang-YC"},"content":"    //@@author Ang-YC"},{"lineNumber":124,"author":{"gitID":"Ang-YC"},"content":"    private void setupInputChange() {"},{"lineNumber":125,"author":{"gitID":"Ang-YC"},"content":"        commandInput.textProperty().addListener((obs, old, inputText) -\u003e {"},{"lineNumber":126,"author":{"gitID":"Ang-YC"},"content":"            String result \u003d \"Enter a command...\";"},{"lineNumber":127,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":128,"author":{"gitID":"Ang-YC"},"content":"            floatParseRealTime.getStyleClass().remove(PARSE_VALID);"},{"lineNumber":129,"author":{"gitID":"Ang-YC"},"content":"            floatParseRealTime.getStyleClass().remove(PARSE_INVALID);"},{"lineNumber":130,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":131,"author":{"gitID":"Ang-YC"},"content":"            if (!inputText.equals(\"\")) {"},{"lineNumber":132,"author":{"gitID":"Ang-YC"},"content":"                Command command \u003d logic.parse(inputText);"},{"lineNumber":133,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":134,"author":{"gitID":"Ang-YC"},"content":"                if (command \u003d\u003d null) {"},{"lineNumber":135,"author":{"gitID":"Ang-YC"},"content":"                    floatParseRealTime.getStyleClass().add(PARSE_INVALID);"},{"lineNumber":136,"author":{"gitID":"Ang-YC"},"content":"                    result \u003d \"Invalid command\";"},{"lineNumber":137,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":138,"author":{"gitID":"Ang-YC"},"content":"                } else {"},{"lineNumber":139,"author":{"gitID":"Ang-YC"},"content":"                    floatParseRealTime.getStyleClass().add(PARSE_VALID);"},{"lineNumber":140,"author":{"gitID":"Ang-YC"},"content":"                    result \u003d command.getParsedResult();"},{"lineNumber":141,"author":{"gitID":"Ang-YC"},"content":"                    if (result \u003d\u003d null) {"},{"lineNumber":142,"author":{"gitID":"Ang-YC"},"content":"                        result \u003d \"Valid command\";"},{"lineNumber":143,"author":{"gitID":"Ang-YC"},"content":"                    }"},{"lineNumber":144,"author":{"gitID":"Ang-YC"},"content":"                }"},{"lineNumber":145,"author":{"gitID":"Ang-YC"},"content":"            }"},{"lineNumber":146,"author":{"gitID":"Ang-YC"},"content":"            floatParseLabel.setText(result);"},{"lineNumber":147,"author":{"gitID":"Ang-YC"},"content":"        });"},{"lineNumber":148,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":149,"author":{"gitID":"Ang-YC"},"content":"        commandInput.focusedProperty().addListener((obs, old, focused) -\u003e {"},{"lineNumber":150,"author":{"gitID":"Ang-YC"},"content":"            if (animated) {"},{"lineNumber":151,"author":{"gitID":"Ang-YC"},"content":"                Animation animation;"},{"lineNumber":152,"author":{"gitID":"Ang-YC"},"content":"                allAnimation.forEach(Animation::pause);"},{"lineNumber":153,"author":{"gitID":"Ang-YC"},"content":"                allAnimation.clear();"},{"lineNumber":154,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":155,"author":{"gitID":"Ang-YC"},"content":"                if (focused) {"},{"lineNumber":156,"author":{"gitID":"Ang-YC"},"content":"                    floatParseRealTime.setOpacity(0);"},{"lineNumber":157,"author":{"gitID":"Ang-YC"},"content":"                    floatParseRealTime.setVisible(true);"},{"lineNumber":158,"author":{"gitID":"Ang-YC"},"content":"                    animation \u003d UiUtil.fadeNode(floatParseRealTime, true, 100, (e) -\u003e {"},{"lineNumber":159,"author":{"gitID":"Ang-YC"},"content":"                    });"},{"lineNumber":160,"author":{"gitID":"Ang-YC"},"content":"                } else {"},{"lineNumber":161,"author":{"gitID":"Ang-YC"},"content":"                    animation \u003d UiUtil.fadeNode(floatParseRealTime, false, 100, (e) -\u003e {"},{"lineNumber":162,"author":{"gitID":"Ang-YC"},"content":"                        floatParseRealTime.setVisible(false);"},{"lineNumber":163,"author":{"gitID":"Ang-YC"},"content":"                    });"},{"lineNumber":164,"author":{"gitID":"Ang-YC"},"content":"                }"},{"lineNumber":165,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":166,"author":{"gitID":"Ang-YC"},"content":"                allAnimation.add(animation);"},{"lineNumber":167,"author":{"gitID":"Ang-YC"},"content":"                animation.play();"},{"lineNumber":168,"author":{"gitID":"Ang-YC"},"content":"            } else {"},{"lineNumber":169,"author":{"gitID":"Ang-YC"},"content":"                floatParseRealTime.setOpacity(focused ? 1 : 0);"},{"lineNumber":170,"author":{"gitID":"Ang-YC"},"content":"                floatParseRealTime.setVisible(focused);"},{"lineNumber":171,"author":{"gitID":"Ang-YC"},"content":"            }"},{"lineNumber":172,"author":{"gitID":"Ang-YC"},"content":"        });"},{"lineNumber":173,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":174,"author":{"gitID":"Ang-YC"},"content":"    //@@author"},{"lineNumber":175,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":176,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":177,"author":{"gitID":"-"},"content":"     * Handles the Enter button pressed event."},{"lineNumber":178,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":179,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":180,"author":{"gitID":"-"},"content":"    private void handleCommandInputChanged() {"},{"lineNumber":181,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":182,"author":{"gitID":"Ang-YC"},"content":"            CommandResult commandResult \u003d logic.execute(commandInput.getText());"},{"lineNumber":183,"author":{"gitID":"-"},"content":"            initHistory();"},{"lineNumber":184,"author":{"gitID":"-"},"content":"            historySnapshot.next();"},{"lineNumber":185,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":186,"author":{"gitID":"Ang-YC"},"content":"            // Process result of the command"},{"lineNumber":187,"author":{"gitID":"Ang-YC"},"content":"            commandInput.setText(\"\");"},{"lineNumber":188,"author":{"gitID":"-"},"content":"            logger.info(\"Result: \" + commandResult.feedbackToUser);"},{"lineNumber":189,"author":{"gitID":"-"},"content":"            raise(new NewResultAvailableEvent(commandResult.feedbackToUser));"},{"lineNumber":190,"author":{"gitID":"-"},"content":""},{"lineNumber":191,"author":{"gitID":"-"},"content":"        } catch (CommandException | ParseException e) {"},{"lineNumber":192,"author":{"gitID":"-"},"content":"            initHistory();"},{"lineNumber":193,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":194,"author":{"gitID":"Ang-YC"},"content":"            // Handle command failure"},{"lineNumber":195,"author":{"gitID":"-"},"content":"            setStyleToIndicateCommandFailure();"},{"lineNumber":196,"author":{"gitID":"Ang-YC"},"content":"            logger.info(\"Invalid command: \" + commandInput.getText());"},{"lineNumber":197,"author":{"gitID":"-"},"content":"            raise(new NewResultAvailableEvent(e.getMessage()));"},{"lineNumber":198,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":199,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":200,"author":{"gitID":"-"},"content":""},{"lineNumber":201,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":202,"author":{"gitID":"-"},"content":"     * Initializes the history snapshot."},{"lineNumber":203,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":204,"author":{"gitID":"-"},"content":"    private void initHistory() {"},{"lineNumber":205,"author":{"gitID":"-"},"content":"        historySnapshot \u003d logic.getHistorySnapshot();"},{"lineNumber":206,"author":{"gitID":"-"},"content":"        // add an empty string to represent the most-recent end of historySnapshot, to be shown to"},{"lineNumber":207,"author":{"gitID":"-"},"content":"        // the user if she tries to navigate past the most-recent end of the historySnapshot."},{"lineNumber":208,"author":{"gitID":"-"},"content":"        historySnapshot.add(\"\");"},{"lineNumber":209,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":210,"author":{"gitID":"-"},"content":""},{"lineNumber":211,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":212,"author":{"gitID":"-"},"content":"     * Sets the command box style to use the default style."},{"lineNumber":213,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":214,"author":{"gitID":"-"},"content":"    private void setStyleToDefault() {"},{"lineNumber":215,"author":{"gitID":"Ang-YC"},"content":"        commandInput.getStyleClass().remove(ERROR_STYLE_CLASS);"},{"lineNumber":216,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":217,"author":{"gitID":"-"},"content":""},{"lineNumber":218,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":219,"author":{"gitID":"-"},"content":"     * Sets the command box style to indicate a failed command."},{"lineNumber":220,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":221,"author":{"gitID":"-"},"content":"    private void setStyleToIndicateCommandFailure() {"},{"lineNumber":222,"author":{"gitID":"Ang-YC"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandInput.getStyleClass();"},{"lineNumber":223,"author":{"gitID":"-"},"content":""},{"lineNumber":224,"author":{"gitID":"Ang-YC"},"content":"        if (!styleClass.contains(ERROR_STYLE_CLASS)) {"},{"lineNumber":225,"author":{"gitID":"-"},"content":"            styleClass.add(ERROR_STYLE_CLASS);"},{"lineNumber":226,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":227,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":228,"author":{"gitID":"-"},"content":""},{"lineNumber":229,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"-":127,"Ang-YC":102}},{"path":"src/main/java/seedu/address/ui/BrowserPanel.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.net.URL;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import javafx.application.Platform;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import javafx.event.Event;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import javafx.fxml.FXML;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import javafx.scene.web.WebView;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.MainApp;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.ui.PersonPanelSelectionChangedEvent;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":19,"author":{"gitID":"-"},"content":" * The Browser Panel of the App."},{"lineNumber":20,"author":{"gitID":"-"},"content":" */"},{"lineNumber":21,"author":{"gitID":"-"},"content":"public class BrowserPanel extends UiPart\u003cRegion\u003e {"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"-"},"content":"    public static final String DEFAULT_PAGE \u003d \"default.html\";"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    public static final String SEARCH_PAGE_URL \u003d"},{"lineNumber":25,"author":{"gitID":"-"},"content":"            \"https://se-edu.github.io/addressbook-level4/DummySearchPage.html?name\u003d\";"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":"    private static final String FXML \u003d \"BrowserPanel.fxml\";"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(this.getClass());"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    private WebView browser;"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"    public BrowserPanel() {"},{"lineNumber":35,"author":{"gitID":"-"},"content":"        super(FXML);"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"        // To prevent triggering events for typing inside the loaded Web page."},{"lineNumber":38,"author":{"gitID":"-"},"content":"        getRoot().setOnKeyPressed(Event::consume);"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"        loadDefaultPage();"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        registerAsAnEventHandler(this);"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"-"},"content":"    private void loadPersonPage(Person person) {"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        loadPage(SEARCH_PAGE_URL + person.getName().fullName);"},{"lineNumber":46,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":"    public void loadPage(String url) {"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        Platform.runLater(() -\u003e browser.getEngine().load(url));"},{"lineNumber":50,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":53,"author":{"gitID":"-"},"content":"     * Loads a default HTML file with a background that matches the general theme."},{"lineNumber":54,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    private void loadDefaultPage() {"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        URL defaultPage \u003d MainApp.class.getResource(FXML_FILE_FOLDER + DEFAULT_PAGE);"},{"lineNumber":57,"author":{"gitID":"-"},"content":"        loadPage(defaultPage.toExternalForm());"},{"lineNumber":58,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":59,"author":{"gitID":"-"},"content":""},{"lineNumber":60,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":61,"author":{"gitID":"-"},"content":"     * Frees resources allocated to the browser."},{"lineNumber":62,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":63,"author":{"gitID":"-"},"content":"    public void freeResources() {"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        browser \u003d null;"},{"lineNumber":65,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitID":"-"},"content":""},{"lineNumber":67,"author":{"gitID":"-"},"content":"    @Subscribe"},{"lineNumber":68,"author":{"gitID":"-"},"content":"    private void handlePersonPanelSelectionChangedEvent(PersonPanelSelectionChangedEvent event) {"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":70,"author":{"gitID":"Ang-YC"},"content":"        loadPersonPage(event.getNewSelection().getPerson());"},{"lineNumber":71,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":72,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"-":71,"Ang-YC":1}},{"path":"src/test/java/guitests/guihandles/InfoPanelHandle.java","lines":[{"lineNumber":1,"author":{"gitID":"Ang-YC"},"content":"package guitests.guihandles;"},{"lineNumber":2,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":3,"author":{"gitID":"Ang-YC"},"content":"import java.util.Objects;"},{"lineNumber":4,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":5,"author":{"gitID":"Ang-YC"},"content":"import guitests.GuiRobot;"},{"lineNumber":6,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.Node;"},{"lineNumber":7,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":8,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.control.SplitPane;"},{"lineNumber":9,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":11,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":12,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.commons.events.ui.InfoPanelChangedEvent;"},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":14,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":15,"author":{"gitID":"Ang-YC"},"content":"//@@author Ang-YC"},{"lineNumber":16,"author":{"gitID":"Ang-YC"},"content":"/**"},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":" * A handler for the {@code InfoPanel} of the UI."},{"lineNumber":18,"author":{"gitID":"Ang-YC"},"content":" */"},{"lineNumber":19,"author":{"gitID":"Ang-YC"},"content":"public class InfoPanelHandle extends NodeHandle\u003cNode\u003e {"},{"lineNumber":20,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":"    public static final String INFO_ID \u003d \"#infoPaneWrapper\";"},{"lineNumber":22,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":23,"author":{"gitID":"Ang-YC"},"content":"    private static final String SPLIT_PANE_ID \u003d \"#infoSplitPane\";"},{"lineNumber":24,"author":{"gitID":"Ang-YC"},"content":"    private static final String MAIN_PANE_ID \u003d \"#infoMainPane\";"},{"lineNumber":25,"author":{"gitID":"Ang-YC"},"content":"    private static final String SPLIT_MAIN_PANE_ID \u003d \"#infoSplitMainPane\";"},{"lineNumber":26,"author":{"gitID":"Ang-YC"},"content":"    private static final String MAIN_ID \u003d \"#infoMain\";"},{"lineNumber":27,"author":{"gitID":"Ang-YC"},"content":"    private static final String MAIN_RATINGS_ID \u003d \"#infoMainRatings\";"},{"lineNumber":28,"author":{"gitID":"Ang-YC"},"content":"    private static final String SPLIT_SIDE_PANE_ID \u003d \"#infoSplitSidePane\";"},{"lineNumber":29,"author":{"gitID":"Ang-YC"},"content":"    private static final String SPLIT_RATINGS_ID \u003d \"#infoSplitRatings\";"},{"lineNumber":30,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":31,"author":{"gitID":"Ang-YC"},"content":"    private boolean isInfoPanelLoaded \u003d true;"},{"lineNumber":32,"author":{"gitID":"Ang-YC"},"content":"    private boolean isWidthChanged \u003d false;"},{"lineNumber":33,"author":{"gitID":"Ang-YC"},"content":"    private Person lastRememberedPerson;"},{"lineNumber":34,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":35,"author":{"gitID":"Ang-YC"},"content":"    private AnchorPane infoPaneWrapper;"},{"lineNumber":36,"author":{"gitID":"Ang-YC"},"content":"    private SplitPane infoSplitPane;"},{"lineNumber":37,"author":{"gitID":"Ang-YC"},"content":"    private ScrollPane infoMainPane;"},{"lineNumber":38,"author":{"gitID":"Ang-YC"},"content":"    private ScrollPane infoSplitMainPane;"},{"lineNumber":39,"author":{"gitID":"Ang-YC"},"content":"    private VBox infoMain;"},{"lineNumber":40,"author":{"gitID":"Ang-YC"},"content":"    private AnchorPane infoMainRatings;"},{"lineNumber":41,"author":{"gitID":"Ang-YC"},"content":"    private AnchorPane infoSplitSidePane;"},{"lineNumber":42,"author":{"gitID":"Ang-YC"},"content":"    private VBox infoSplitRatings;"},{"lineNumber":43,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":44,"author":{"gitID":"Ang-YC"},"content":"    public InfoPanelHandle(Node infoPanel) {"},{"lineNumber":45,"author":{"gitID":"Ang-YC"},"content":"        super(infoPanel);"},{"lineNumber":46,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":47,"author":{"gitID":"Ang-YC"},"content":"        this.infoPaneWrapper   \u003d getChildNode(INFO_ID);"},{"lineNumber":48,"author":{"gitID":"Ang-YC"},"content":"        this.infoSplitPane     \u003d getChildNode(SPLIT_PANE_ID);"},{"lineNumber":49,"author":{"gitID":"Ang-YC"},"content":"        this.infoMainPane      \u003d getChildNode(MAIN_PANE_ID);"},{"lineNumber":50,"author":{"gitID":"Ang-YC"},"content":"        this.infoSplitMainPane \u003d getChildNode(SPLIT_MAIN_PANE_ID);"},{"lineNumber":51,"author":{"gitID":"Ang-YC"},"content":"        this.infoMain          \u003d getChildNode(MAIN_ID);"},{"lineNumber":52,"author":{"gitID":"Ang-YC"},"content":"        this.infoMainRatings   \u003d getChildNode(MAIN_RATINGS_ID);"},{"lineNumber":53,"author":{"gitID":"Ang-YC"},"content":"        this.infoSplitSidePane \u003d getChildNode(SPLIT_SIDE_PANE_ID);"},{"lineNumber":54,"author":{"gitID":"Ang-YC"},"content":"        this.infoSplitRatings  \u003d getChildNode(SPLIT_RATINGS_ID);"},{"lineNumber":55,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":56,"author":{"gitID":"Ang-YC"},"content":"        new GuiRobot().interact(() -\u003e this.infoPaneWrapper.addEventHandler("},{"lineNumber":57,"author":{"gitID":"Ang-YC"},"content":"            InfoPanelChangedEvent.INFO_PANEL_EVENT,"},{"lineNumber":58,"author":{"gitID":"Ang-YC"},"content":"            event -\u003e isInfoPanelLoaded \u003d true"},{"lineNumber":59,"author":{"gitID":"Ang-YC"},"content":"        ));"},{"lineNumber":60,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":61,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":62,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":63,"author":{"gitID":"Ang-YC"},"content":"     * Returns the {@code Person} of the currently previewed person."},{"lineNumber":64,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":65,"author":{"gitID":"Ang-YC"},"content":"    public Person getLoadedPerson() {"},{"lineNumber":66,"author":{"gitID":"Ang-YC"},"content":"        return (Person) infoPaneWrapper.getUserData();"},{"lineNumber":67,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":69,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":70,"author":{"gitID":"Ang-YC"},"content":"     * Remembers the {@code Person} of the currently previewed person."},{"lineNumber":71,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":72,"author":{"gitID":"Ang-YC"},"content":"    public void rememberPerson() {"},{"lineNumber":73,"author":{"gitID":"Ang-YC"},"content":"        lastRememberedPerson \u003d getLoadedPerson();"},{"lineNumber":74,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":75,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":76,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":77,"author":{"gitID":"Ang-YC"},"content":"     * Returns true if the current {@code Person} is different from the value remembered by the most recent"},{"lineNumber":78,"author":{"gitID":"Ang-YC"},"content":"     * {@code rememberPerson()} call."},{"lineNumber":79,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":80,"author":{"gitID":"Ang-YC"},"content":"    public boolean isPersonChanged() {"},{"lineNumber":81,"author":{"gitID":"Ang-YC"},"content":"        return !Objects.equals(lastRememberedPerson, getLoadedPerson());"},{"lineNumber":82,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":83,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":84,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":85,"author":{"gitID":"Ang-YC"},"content":"     * Returns true if the panel is done loading a person, with current person retrievable via {@code getUserData}"},{"lineNumber":86,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":87,"author":{"gitID":"Ang-YC"},"content":"    public boolean isLoaded() {"},{"lineNumber":88,"author":{"gitID":"Ang-YC"},"content":"        return isInfoPanelLoaded;"},{"lineNumber":89,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":90,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":91,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":92,"author":{"gitID":"Ang-YC"},"content":"     * Reset the loaded status to wait for next loaded event"},{"lineNumber":93,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":94,"author":{"gitID":"Ang-YC"},"content":"    public void resetLoadedStatus() {"},{"lineNumber":95,"author":{"gitID":"Ang-YC"},"content":"        isInfoPanelLoaded \u003d false;"},{"lineNumber":96,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":97,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":98,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":99,"author":{"gitID":"Ang-YC"},"content":"     * Returns true if the panel is done changing the width"},{"lineNumber":100,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":101,"author":{"gitID":"Ang-YC"},"content":"    public boolean isWidthChanged() {"},{"lineNumber":102,"author":{"gitID":"Ang-YC"},"content":"        return isWidthChanged;"},{"lineNumber":103,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":104,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":105,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":106,"author":{"gitID":"Ang-YC"},"content":"     * Reset the width changed status to wait for next resize event"},{"lineNumber":107,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":108,"author":{"gitID":"Ang-YC"},"content":"    public void resetWidthStatus() {"},{"lineNumber":109,"author":{"gitID":"Ang-YC"},"content":"        isWidthChanged \u003d false;"},{"lineNumber":110,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":111,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":112,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":113,"author":{"gitID":"Ang-YC"},"content":"     * Set the width of info panel and wait until its width changed"},{"lineNumber":114,"author":{"gitID":"Ang-YC"},"content":"     * @param width of the InfoPanel"},{"lineNumber":115,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":116,"author":{"gitID":"Ang-YC"},"content":"    public void setWidthAndWait(int width) {"},{"lineNumber":117,"author":{"gitID":"Ang-YC"},"content":"        resetWidthStatus();"},{"lineNumber":118,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":119,"author":{"gitID":"Ang-YC"},"content":"        infoPaneWrapper.widthProperty().addListener((observable, oldValue, newValue) -\u003e {"},{"lineNumber":120,"author":{"gitID":"Ang-YC"},"content":"            isWidthChanged \u003d true;"},{"lineNumber":121,"author":{"gitID":"Ang-YC"},"content":"        });"},{"lineNumber":122,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":123,"author":{"gitID":"Ang-YC"},"content":"        infoPaneWrapper.getScene().getWindow().setWidth(width);"},{"lineNumber":124,"author":{"gitID":"Ang-YC"},"content":"        new GuiRobot().waitForEvent(this::isWidthChanged);"},{"lineNumber":125,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":126,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":127,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":128,"author":{"gitID":"Ang-YC"},"content":"     * Returns true if it is split due to responsive, false otherwise"},{"lineNumber":129,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":130,"author":{"gitID":"Ang-YC"},"content":"    public boolean isResponsiveSplit() {"},{"lineNumber":131,"author":{"gitID":"Ang-YC"},"content":"        return infoSplitPane.isVisible()"},{"lineNumber":132,"author":{"gitID":"Ang-YC"},"content":"                \u0026\u0026 !infoMainPane.isVisible()"},{"lineNumber":133,"author":{"gitID":"Ang-YC"},"content":"                \u0026\u0026 !infoMainRatings.getChildren().contains(infoSplitRatings)"},{"lineNumber":134,"author":{"gitID":"Ang-YC"},"content":"                \u0026\u0026 infoSplitSidePane.getChildren().contains(infoSplitRatings)"},{"lineNumber":135,"author":{"gitID":"Ang-YC"},"content":"                \u0026\u0026 infoMainPane.getContent() \u003d\u003d null"},{"lineNumber":136,"author":{"gitID":"Ang-YC"},"content":"                \u0026\u0026 infoSplitMainPane.getContent().equals(infoMain);"},{"lineNumber":137,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":138,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":139,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":140,"author":{"gitID":"Ang-YC"},"content":"     * Returns true if it is single scroll pane due to responsive, false otherwise"},{"lineNumber":141,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":142,"author":{"gitID":"Ang-YC"},"content":"    public boolean isResponsiveSingle() {"},{"lineNumber":143,"author":{"gitID":"Ang-YC"},"content":"        return !infoSplitPane.isVisible()"},{"lineNumber":144,"author":{"gitID":"Ang-YC"},"content":"                \u0026\u0026 infoMainPane.isVisible()"},{"lineNumber":145,"author":{"gitID":"Ang-YC"},"content":"                \u0026\u0026 infoMainRatings.getChildren().contains(infoSplitRatings)"},{"lineNumber":146,"author":{"gitID":"Ang-YC"},"content":"                \u0026\u0026 !infoSplitSidePane.getChildren().contains(infoSplitRatings)"},{"lineNumber":147,"author":{"gitID":"Ang-YC"},"content":"                \u0026\u0026 infoMainPane.getContent().equals(infoMain)"},{"lineNumber":148,"author":{"gitID":"Ang-YC"},"content":"                \u0026\u0026 infoSplitMainPane.getContent() \u003d\u003d null;"},{"lineNumber":149,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":150,"author":{"gitID":"Ang-YC"},"content":"}"}],"authorContributionMap":{"Ang-YC":150}},{"path":"src/test/java/guitests/guihandles/TitleBarHandle.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package guitests.guihandles;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"Ang-YC"},"content":"import guitests.GuiRobot;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import javafx.scene.Node;"},{"lineNumber":5,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.control.Label;"},{"lineNumber":6,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.input.KeyCode;"},{"lineNumber":7,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.input.MouseButton;"},{"lineNumber":8,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.layout.Pane;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":11,"author":{"gitID":"Ang-YC"},"content":" * A handle for the {@code TitleBar} at the top of the application."},{"lineNumber":12,"author":{"gitID":"-"},"content":" */"},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":"public class TitleBarHandle extends NodeHandle\u003cNode\u003e {"},{"lineNumber":14,"author":{"gitID":"Ang-YC"},"content":"    public static final String TITLE_BAR_ID \u003d \"#topTitle\";"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"Ang-YC"},"content":"    private static final String SYNC_STATUS_ID \u003d \"#topStatusMessage\";"},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":"    private static final String SAVE_LOCATION_STATUS_ID \u003d \"#topStatusFile\";"},{"lineNumber":18,"author":{"gitID":"Ang-YC"},"content":"    private static final String CONTROL_HELP_ID \u003d \"#controlHelp\";"},{"lineNumber":19,"author":{"gitID":"Ang-YC"},"content":"    private static final String CONTROL_MINIMIZE_ID \u003d \"#controlMinimize\";"},{"lineNumber":20,"author":{"gitID":"Ang-YC"},"content":"    private static final String CONTROL_MAXIMIZE_ID \u003d \"#controlMaximize\";"},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":"    private static final String CONTROL_CLOSE_ID \u003d \"#controlClose\";"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"Ang-YC"},"content":"    private final Label syncStatusNode;"},{"lineNumber":24,"author":{"gitID":"Ang-YC"},"content":"    private final Label saveLocationNode;"},{"lineNumber":25,"author":{"gitID":"Ang-YC"},"content":"    private final Pane controlHelp;"},{"lineNumber":26,"author":{"gitID":"Ang-YC"},"content":"    private final Pane controlMinimize;"},{"lineNumber":27,"author":{"gitID":"Ang-YC"},"content":"    private final Pane controlMaximize;"},{"lineNumber":28,"author":{"gitID":"Ang-YC"},"content":"    private final Pane controlClose;"},{"lineNumber":29,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":30,"author":{"gitID":"-"},"content":"    private String lastRememberedSyncStatus;"},{"lineNumber":31,"author":{"gitID":"-"},"content":"    private String lastRememberedSaveLocation;"},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"Ang-YC"},"content":"    //@@author Ang-YC"},{"lineNumber":34,"author":{"gitID":"Ang-YC"},"content":"    public TitleBarHandle(Node statusBarFooterNode) {"},{"lineNumber":35,"author":{"gitID":"Ang-YC"},"content":"        super(statusBarFooterNode);"},{"lineNumber":36,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":37,"author":{"gitID":"Ang-YC"},"content":"        this.syncStatusNode \u003d getChildNode(SYNC_STATUS_ID);"},{"lineNumber":38,"author":{"gitID":"Ang-YC"},"content":"        this.saveLocationNode \u003d getChildNode(SAVE_LOCATION_STATUS_ID);"},{"lineNumber":39,"author":{"gitID":"Ang-YC"},"content":"        this.controlHelp \u003d getChildNode(CONTROL_HELP_ID);"},{"lineNumber":40,"author":{"gitID":"Ang-YC"},"content":"        this.controlMinimize \u003d getChildNode(CONTROL_MINIMIZE_ID);"},{"lineNumber":41,"author":{"gitID":"Ang-YC"},"content":"        this.controlMaximize \u003d getChildNode(CONTROL_MAXIMIZE_ID);"},{"lineNumber":42,"author":{"gitID":"Ang-YC"},"content":"        this.controlClose \u003d getChildNode(CONTROL_CLOSE_ID);"},{"lineNumber":43,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":45,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":46,"author":{"gitID":"Ang-YC"},"content":"     * Opens the {@code HelpWindow} by pressing the shortcut key associated"},{"lineNumber":47,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":48,"author":{"gitID":"Ang-YC"},"content":"    public void openHelpWindowUsingAccelerator() {"},{"lineNumber":49,"author":{"gitID":"Ang-YC"},"content":"        guiRobot.push(KeyCode.F1);"},{"lineNumber":50,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":51,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":52,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":53,"author":{"gitID":"Ang-YC"},"content":"     * Opens the {@code HelpWindow} using the button in {@code TitleBar}."},{"lineNumber":54,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":55,"author":{"gitID":"Ang-YC"},"content":"    public void openHelpWindowUsingControl() {"},{"lineNumber":56,"author":{"gitID":"Ang-YC"},"content":"        new GuiRobot().clickOn(controlHelp, MouseButton.PRIMARY);"},{"lineNumber":57,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":58,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":59,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":60,"author":{"gitID":"Ang-YC"},"content":"     * Minimize the application using the button in {@code TitleBar}."},{"lineNumber":61,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":62,"author":{"gitID":"Ang-YC"},"content":"    public void minimizeWindow() {"},{"lineNumber":63,"author":{"gitID":"Ang-YC"},"content":"        new GuiRobot().clickOn(controlMinimize, MouseButton.PRIMARY);"},{"lineNumber":64,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":65,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":66,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":67,"author":{"gitID":"Ang-YC"},"content":"     * Maximize the application using the button in {@code TitleBar}."},{"lineNumber":68,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":69,"author":{"gitID":"Ang-YC"},"content":"    public void maximizeWindow() {"},{"lineNumber":70,"author":{"gitID":"Ang-YC"},"content":"        new GuiRobot().clickOn(controlMaximize, MouseButton.PRIMARY);"},{"lineNumber":71,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":72,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":73,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":74,"author":{"gitID":"Ang-YC"},"content":"     * Close the application using the button in {@code TitleBar}."},{"lineNumber":75,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":76,"author":{"gitID":"Ang-YC"},"content":"    public void closeWindow() {"},{"lineNumber":77,"author":{"gitID":"Ang-YC"},"content":"        new GuiRobot().clickOn(controlClose, MouseButton.PRIMARY);"},{"lineNumber":78,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":79,"author":{"gitID":"Ang-YC"},"content":"    //@@author"},{"lineNumber":80,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":81,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":82,"author":{"gitID":"-"},"content":"     * Returns the text of the sync status portion of the status bar."},{"lineNumber":83,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":84,"author":{"gitID":"-"},"content":"    public String getSyncStatus() {"},{"lineNumber":85,"author":{"gitID":"-"},"content":"        return syncStatusNode.getText();"},{"lineNumber":86,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":87,"author":{"gitID":"-"},"content":""},{"lineNumber":88,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":89,"author":{"gitID":"-"},"content":"     * Returns the text of the \u0027save location\u0027 portion of the status bar."},{"lineNumber":90,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":91,"author":{"gitID":"-"},"content":"    public String getSaveLocation() {"},{"lineNumber":92,"author":{"gitID":"-"},"content":"        return saveLocationNode.getText();"},{"lineNumber":93,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":94,"author":{"gitID":"-"},"content":""},{"lineNumber":95,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":96,"author":{"gitID":"-"},"content":"     * Remembers the content of the sync status portion of the status bar."},{"lineNumber":97,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":98,"author":{"gitID":"-"},"content":"    public void rememberSyncStatus() {"},{"lineNumber":99,"author":{"gitID":"-"},"content":"        lastRememberedSyncStatus \u003d getSyncStatus();"},{"lineNumber":100,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":101,"author":{"gitID":"-"},"content":""},{"lineNumber":102,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":103,"author":{"gitID":"-"},"content":"     * Returns true if the current content of the sync status is different from the value remembered by the most recent"},{"lineNumber":104,"author":{"gitID":"-"},"content":"     * {@code rememberSyncStatus()} call."},{"lineNumber":105,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":106,"author":{"gitID":"-"},"content":"    public boolean isSyncStatusChanged() {"},{"lineNumber":107,"author":{"gitID":"-"},"content":"        return !lastRememberedSyncStatus.equals(getSyncStatus());"},{"lineNumber":108,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":109,"author":{"gitID":"-"},"content":""},{"lineNumber":110,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":111,"author":{"gitID":"-"},"content":"     * Remembers the content of the \u0027save location\u0027 portion of the status bar."},{"lineNumber":112,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":113,"author":{"gitID":"-"},"content":"    public void rememberSaveLocation() {"},{"lineNumber":114,"author":{"gitID":"-"},"content":"        lastRememberedSaveLocation \u003d getSaveLocation();"},{"lineNumber":115,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":116,"author":{"gitID":"-"},"content":""},{"lineNumber":117,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":118,"author":{"gitID":"-"},"content":"     * Returns true if the current content of the \u0027save location\u0027 is different from the value remembered by the most"},{"lineNumber":119,"author":{"gitID":"-"},"content":"     * recent {@code rememberSaveLocation()} call."},{"lineNumber":120,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":121,"author":{"gitID":"-"},"content":"    public boolean isSaveLocationChanged() {"},{"lineNumber":122,"author":{"gitID":"-"},"content":"        return !lastRememberedSaveLocation.equals(getSaveLocation());"},{"lineNumber":123,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":124,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"-":55,"Ang-YC":69}},{"path":"src/main/java/seedu/address/ui/RadarChart.java","lines":[{"lineNumber":1,"author":{"gitID":"Ang-YC"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":3,"author":{"gitID":"Ang-YC"},"content":"import java.net.URL;"},{"lineNumber":4,"author":{"gitID":"Ang-YC"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitID":"Ang-YC"},"content":"import java.util.LinkedHashMap;"},{"lineNumber":6,"author":{"gitID":"Ang-YC"},"content":"import java.util.Map;"},{"lineNumber":7,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":8,"author":{"gitID":"Ang-YC"},"content":"import javafx.animation.KeyFrame;"},{"lineNumber":9,"author":{"gitID":"Ang-YC"},"content":"import javafx.animation.KeyValue;"},{"lineNumber":10,"author":{"gitID":"Ang-YC"},"content":"import javafx.animation.Timeline;"},{"lineNumber":11,"author":{"gitID":"Ang-YC"},"content":"import javafx.beans.property.DoubleProperty;"},{"lineNumber":12,"author":{"gitID":"Ang-YC"},"content":"import javafx.beans.property.SimpleDoubleProperty;"},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":"import javafx.fxml.FXML;"},{"lineNumber":14,"author":{"gitID":"Ang-YC"},"content":"import javafx.geometry.Point2D;"},{"lineNumber":15,"author":{"gitID":"Ang-YC"},"content":"import javafx.geometry.VPos;"},{"lineNumber":16,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.canvas.Canvas;"},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.canvas.GraphicsContext;"},{"lineNumber":18,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":19,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":20,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.text.Font;"},{"lineNumber":22,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.text.TextAlignment;"},{"lineNumber":23,"author":{"gitID":"Ang-YC"},"content":"import javafx.util.Duration;"},{"lineNumber":24,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.commons.util.UiUtil;"},{"lineNumber":25,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":26,"author":{"gitID":"Ang-YC"},"content":"/**"},{"lineNumber":27,"author":{"gitID":"Ang-YC"},"content":" * Customized radar chart to represent single-axis data graphically"},{"lineNumber":28,"author":{"gitID":"Ang-YC"},"content":" */"},{"lineNumber":29,"author":{"gitID":"Ang-YC"},"content":"public class RadarChart extends UiPart\u003cRegion\u003e {"},{"lineNumber":30,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":31,"author":{"gitID":"Ang-YC"},"content":"    public static final double MAX_ANIMATION_TIME_MS \u003d 600;"},{"lineNumber":32,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":33,"author":{"gitID":"Ang-YC"},"content":"    private static final String FXML \u003d \"RadarChart.fxml\";"},{"lineNumber":34,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":35,"author":{"gitID":"Ang-YC"},"content":"    private static final double LINE_RADAR_BORDER \u003d 1;"},{"lineNumber":36,"author":{"gitID":"Ang-YC"},"content":"    private static final double LINE_RADAR_AXIS \u003d 0.5;"},{"lineNumber":37,"author":{"gitID":"Ang-YC"},"content":"    private static final double LINE_POLYGON_BORDER \u003d 1.5;"},{"lineNumber":38,"author":{"gitID":"Ang-YC"},"content":"    private static final double SIZE_LABEL \u003d 11;"},{"lineNumber":39,"author":{"gitID":"Ang-YC"},"content":"    private static final Color COLOR_RADAR_BORDER \u003d Color.web(\"#BDBDBD\");"},{"lineNumber":40,"author":{"gitID":"Ang-YC"},"content":"    private static final Color COLOR_RADAR_AXIS \u003d Color.web(\"#BDBDBD\");"},{"lineNumber":41,"author":{"gitID":"Ang-YC"},"content":"    private static final Color COLOR_POLYGON_BORDER \u003d Color.web(\"#2196F3\");"},{"lineNumber":42,"author":{"gitID":"Ang-YC"},"content":"    private static final Color COLOR_POLYGON_FILL \u003d Color.web(\"#2196F360\");"},{"lineNumber":43,"author":{"gitID":"Ang-YC"},"content":"    private static final Color COLOR_LABEL \u003d Color.web(\"#757575\");"},{"lineNumber":44,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":45,"author":{"gitID":"Ang-YC"},"content":"    private static final int MIN_WIDTH \u003d 220;"},{"lineNumber":46,"author":{"gitID":"Ang-YC"},"content":"    private static final int MIN_HEIGHT \u003d 150;"},{"lineNumber":47,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":48,"author":{"gitID":"Ang-YC"},"content":"    // List to keep track of all started animation"},{"lineNumber":49,"author":{"gitID":"Ang-YC"},"content":"    private ArrayList\u003cTimeline\u003e allTimeline \u003d new ArrayList\u003c\u003e();"},{"lineNumber":50,"author":{"gitID":"Ang-YC"},"content":"    private LinkedHashMap\u003cString, Double\u003e animatedData \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":51,"author":{"gitID":"Ang-YC"},"content":"    private double maxValue;"},{"lineNumber":52,"author":{"gitID":"Ang-YC"},"content":"    private boolean animated;"},{"lineNumber":53,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":54,"author":{"gitID":"Ang-YC"},"content":"    // Canvas info"},{"lineNumber":55,"author":{"gitID":"Ang-YC"},"content":"    private GraphicsContext context;"},{"lineNumber":56,"author":{"gitID":"Ang-YC"},"content":"    private double width;"},{"lineNumber":57,"author":{"gitID":"Ang-YC"},"content":"    private double height;"},{"lineNumber":58,"author":{"gitID":"Ang-YC"},"content":"    private double centerX;"},{"lineNumber":59,"author":{"gitID":"Ang-YC"},"content":"    private double centerY;"},{"lineNumber":60,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":61,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":62,"author":{"gitID":"Ang-YC"},"content":"    private VBox radarChart;"},{"lineNumber":63,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":64,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":65,"author":{"gitID":"Ang-YC"},"content":"     * Initiate a radar chart panel interface"},{"lineNumber":66,"author":{"gitID":"Ang-YC"},"content":"     * @param maxValue of the data"},{"lineNumber":67,"author":{"gitID":"Ang-YC"},"content":"     * @param animated If the radar chart should be animated"},{"lineNumber":68,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":69,"author":{"gitID":"Ang-YC"},"content":"    public RadarChart(double maxValue, boolean animated) {"},{"lineNumber":70,"author":{"gitID":"Ang-YC"},"content":"        super(FXML);"},{"lineNumber":71,"author":{"gitID":"Ang-YC"},"content":"        this.maxValue \u003d maxValue;"},{"lineNumber":72,"author":{"gitID":"Ang-YC"},"content":"        this.animated \u003d animated;"},{"lineNumber":73,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":74,"author":{"gitID":"Ang-YC"},"content":"        Canvas canvas \u003d new Canvas(MIN_WIDTH, MIN_HEIGHT);"},{"lineNumber":75,"author":{"gitID":"Ang-YC"},"content":"        context \u003d canvas.getGraphicsContext2D();"},{"lineNumber":76,"author":{"gitID":"Ang-YC"},"content":"        radarChart.getChildren().add(canvas);"},{"lineNumber":77,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":78,"author":{"gitID":"Ang-YC"},"content":"        width \u003d MIN_WIDTH;"},{"lineNumber":79,"author":{"gitID":"Ang-YC"},"content":"        height \u003d MIN_HEIGHT;"},{"lineNumber":80,"author":{"gitID":"Ang-YC"},"content":"        centerX \u003d width / 2.0;"},{"lineNumber":81,"author":{"gitID":"Ang-YC"},"content":"        centerY \u003d height / 2.0;"},{"lineNumber":82,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":83,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":84,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":85,"author":{"gitID":"Ang-YC"},"content":"     * Set the radar chart data and initiate the animation"},{"lineNumber":86,"author":{"gitID":"Ang-YC"},"content":"     * @param data for the radar chart"},{"lineNumber":87,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":88,"author":{"gitID":"Ang-YC"},"content":"    public void setData(LinkedHashMap\u003cString, Double\u003e data) {"},{"lineNumber":89,"author":{"gitID":"Ang-YC"},"content":"        // Stop previously started animation"},{"lineNumber":90,"author":{"gitID":"Ang-YC"},"content":"        allTimeline.forEach(Timeline::pause);"},{"lineNumber":91,"author":{"gitID":"Ang-YC"},"content":"        allTimeline.clear();"},{"lineNumber":92,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":93,"author":{"gitID":"Ang-YC"},"content":"        if (animated) {"},{"lineNumber":94,"author":{"gitID":"Ang-YC"},"content":"            for (Map.Entry\u003cString, Double\u003e entry : data.entrySet()) {"},{"lineNumber":95,"author":{"gitID":"Ang-YC"},"content":"                double rateValue \u003d entry.getValue();"},{"lineNumber":96,"author":{"gitID":"Ang-YC"},"content":"                DoubleProperty value \u003d new SimpleDoubleProperty(0);"},{"lineNumber":97,"author":{"gitID":"Ang-YC"},"content":"                animatedData.put(entry.getKey(), 0.0);"},{"lineNumber":98,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":99,"author":{"gitID":"Ang-YC"},"content":"                Timeline timeline \u003d new Timeline("},{"lineNumber":100,"author":{"gitID":"Ang-YC"},"content":"                        new KeyFrame(Duration.millis((rateValue / maxValue) * MAX_ANIMATION_TIME_MS),"},{"lineNumber":101,"author":{"gitID":"Ang-YC"},"content":"                                new KeyValue(value, rateValue, UiUtil.EASE_OUT_CUBIC))"},{"lineNumber":102,"author":{"gitID":"Ang-YC"},"content":"                );"},{"lineNumber":103,"author":{"gitID":"Ang-YC"},"content":"                timeline.setAutoReverse(false);"},{"lineNumber":104,"author":{"gitID":"Ang-YC"},"content":"                timeline.setCycleCount(1);"},{"lineNumber":105,"author":{"gitID":"Ang-YC"},"content":"                timeline.play();"},{"lineNumber":106,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":107,"author":{"gitID":"Ang-YC"},"content":"                value.addListener((observable, oldValue, newValue) -\u003e {"},{"lineNumber":108,"author":{"gitID":"Ang-YC"},"content":"                    animatedData.put(entry.getKey(), newValue.doubleValue());"},{"lineNumber":109,"author":{"gitID":"Ang-YC"},"content":"                    render();"},{"lineNumber":110,"author":{"gitID":"Ang-YC"},"content":"                });"},{"lineNumber":111,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":112,"author":{"gitID":"Ang-YC"},"content":"                allTimeline.add(timeline);"},{"lineNumber":113,"author":{"gitID":"Ang-YC"},"content":"            }"},{"lineNumber":114,"author":{"gitID":"Ang-YC"},"content":"        } else {"},{"lineNumber":115,"author":{"gitID":"Ang-YC"},"content":"            animatedData \u003d data;"},{"lineNumber":116,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":117,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":118,"author":{"gitID":"Ang-YC"},"content":"        render();"},{"lineNumber":119,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":120,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":121,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":122,"author":{"gitID":"Ang-YC"},"content":"     * Render the chart with the data provided from {@link RadarChart#setData}"},{"lineNumber":123,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":124,"author":{"gitID":"Ang-YC"},"content":"    private void render() {"},{"lineNumber":125,"author":{"gitID":"Ang-YC"},"content":"        // Default items"},{"lineNumber":126,"author":{"gitID":"Ang-YC"},"content":"        long numItems \u003d animatedData.size();"},{"lineNumber":127,"author":{"gitID":"Ang-YC"},"content":"        long max \u003d (long) Math.ceil(maxValue);"},{"lineNumber":128,"author":{"gitID":"Ang-YC"},"content":"        double shortEdge \u003d Math.min(width, height);"},{"lineNumber":129,"author":{"gitID":"Ang-YC"},"content":"        double spacing \u003d Math.ceil(shortEdge / ((double) max * 3.0));"},{"lineNumber":130,"author":{"gitID":"Ang-YC"},"content":"        double minY \u003d Double.MAX_VALUE;"},{"lineNumber":131,"author":{"gitID":"Ang-YC"},"content":"        double maxY \u003d Double.MIN_VALUE;"},{"lineNumber":132,"author":{"gitID":"Ang-YC"},"content":"        Point2D point;"},{"lineNumber":133,"author":{"gitID":"Ang-YC"},"content":"        long i;"},{"lineNumber":134,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":135,"author":{"gitID":"Ang-YC"},"content":"        // Clear canvas"},{"lineNumber":136,"author":{"gitID":"Ang-YC"},"content":"        context.clearRect(0, 0, width, height);"},{"lineNumber":137,"author":{"gitID":"Ang-YC"},"content":"        context.setLineWidth(1);"},{"lineNumber":138,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":139,"author":{"gitID":"Ang-YC"},"content":"        // Draw radar border"},{"lineNumber":140,"author":{"gitID":"Ang-YC"},"content":"        context.setLineWidth(LINE_RADAR_BORDER);"},{"lineNumber":141,"author":{"gitID":"Ang-YC"},"content":"        context.setStroke(COLOR_RADAR_BORDER);"},{"lineNumber":142,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":143,"author":{"gitID":"Ang-YC"},"content":"        for (i \u003d 1; i \u003c\u003d max; i++) {"},{"lineNumber":144,"author":{"gitID":"Ang-YC"},"content":"            context.beginPath();"},{"lineNumber":145,"author":{"gitID":"Ang-YC"},"content":"            context.moveTo(centerX + (spacing * (double) i), centerY);"},{"lineNumber":146,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":147,"author":{"gitID":"Ang-YC"},"content":"            for (long j \u003d 1; j \u003c\u003d numItems; j++) {"},{"lineNumber":148,"author":{"gitID":"Ang-YC"},"content":"                point \u003d getPoint(spacing, j, i);"},{"lineNumber":149,"author":{"gitID":"Ang-YC"},"content":"                double x \u003d point.getX();"},{"lineNumber":150,"author":{"gitID":"Ang-YC"},"content":"                double y \u003d point.getY();"},{"lineNumber":151,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":152,"author":{"gitID":"Ang-YC"},"content":"                context.lineTo(x, y);"},{"lineNumber":153,"author":{"gitID":"Ang-YC"},"content":"                minY \u003d Math.min(minY, y);"},{"lineNumber":154,"author":{"gitID":"Ang-YC"},"content":"                maxY \u003d Math.max(maxY, y);"},{"lineNumber":155,"author":{"gitID":"Ang-YC"},"content":"            }"},{"lineNumber":156,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":157,"author":{"gitID":"Ang-YC"},"content":"            context.stroke();"},{"lineNumber":158,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":159,"author":{"gitID":"Ang-YC"},"content":"            // Add axis value"},{"lineNumber":160,"author":{"gitID":"Ang-YC"},"content":"            //context.fillText(String.valueOf(i), (width / 2) + (spacing * i) + 4, height / 2 - 2);"},{"lineNumber":161,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":162,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":163,"author":{"gitID":"Ang-YC"},"content":"        // Draw line from origin"},{"lineNumber":164,"author":{"gitID":"Ang-YC"},"content":"        context.setLineWidth(LINE_RADAR_AXIS);"},{"lineNumber":165,"author":{"gitID":"Ang-YC"},"content":"        context.setStroke(COLOR_RADAR_AXIS);"},{"lineNumber":166,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":167,"author":{"gitID":"Ang-YC"},"content":"        for (i \u003d 0; i \u003c numItems; i++) {"},{"lineNumber":168,"author":{"gitID":"Ang-YC"},"content":"            context.beginPath();"},{"lineNumber":169,"author":{"gitID":"Ang-YC"},"content":"            context.moveTo(centerX, centerY);"},{"lineNumber":170,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":171,"author":{"gitID":"Ang-YC"},"content":"            point \u003d getPoint(spacing, i, max);"},{"lineNumber":172,"author":{"gitID":"Ang-YC"},"content":"            double x \u003d point.getX();"},{"lineNumber":173,"author":{"gitID":"Ang-YC"},"content":"            double y \u003d point.getY();"},{"lineNumber":174,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":175,"author":{"gitID":"Ang-YC"},"content":"            context.lineTo(x, y);"},{"lineNumber":176,"author":{"gitID":"Ang-YC"},"content":"            context.stroke();"},{"lineNumber":177,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":178,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":179,"author":{"gitID":"Ang-YC"},"content":"        // Draw polygon"},{"lineNumber":180,"author":{"gitID":"Ang-YC"},"content":"        context.setLineWidth(LINE_POLYGON_BORDER);"},{"lineNumber":181,"author":{"gitID":"Ang-YC"},"content":"        context.setStroke(COLOR_POLYGON_BORDER);"},{"lineNumber":182,"author":{"gitID":"Ang-YC"},"content":"        context.setFill(COLOR_POLYGON_FILL);"},{"lineNumber":183,"author":{"gitID":"Ang-YC"},"content":"        context.beginPath();"},{"lineNumber":184,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":185,"author":{"gitID":"Ang-YC"},"content":"        boolean first \u003d true;"},{"lineNumber":186,"author":{"gitID":"Ang-YC"},"content":"        double startX \u003d 0;"},{"lineNumber":187,"author":{"gitID":"Ang-YC"},"content":"        double startY \u003d 0;"},{"lineNumber":188,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":189,"author":{"gitID":"Ang-YC"},"content":"        i \u003d 0;"},{"lineNumber":190,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":191,"author":{"gitID":"Ang-YC"},"content":"        for (Map.Entry\u003cString, Double\u003e entry : animatedData.entrySet()) {"},{"lineNumber":192,"author":{"gitID":"Ang-YC"},"content":"            double value \u003d entry.getValue();"},{"lineNumber":193,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":194,"author":{"gitID":"Ang-YC"},"content":"            if (first) {"},{"lineNumber":195,"author":{"gitID":"Ang-YC"},"content":"                startX \u003d centerX + spacing * value;"},{"lineNumber":196,"author":{"gitID":"Ang-YC"},"content":"                startY \u003d centerY;"},{"lineNumber":197,"author":{"gitID":"Ang-YC"},"content":"                context.moveTo(startX, startY);"},{"lineNumber":198,"author":{"gitID":"Ang-YC"},"content":"                first \u003d false;"},{"lineNumber":199,"author":{"gitID":"Ang-YC"},"content":"            }"},{"lineNumber":200,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":201,"author":{"gitID":"Ang-YC"},"content":"            point \u003d getPoint(spacing, i, value);"},{"lineNumber":202,"author":{"gitID":"Ang-YC"},"content":"            double x \u003d point.getX();"},{"lineNumber":203,"author":{"gitID":"Ang-YC"},"content":"            double y \u003d point.getY();"},{"lineNumber":204,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":205,"author":{"gitID":"Ang-YC"},"content":"            context.lineTo(x, y);"},{"lineNumber":206,"author":{"gitID":"Ang-YC"},"content":"            i++;"},{"lineNumber":207,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":208,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":209,"author":{"gitID":"Ang-YC"},"content":"        context.lineTo(startX, startY);"},{"lineNumber":210,"author":{"gitID":"Ang-YC"},"content":"        context.stroke();"},{"lineNumber":211,"author":{"gitID":"Ang-YC"},"content":"        context.fill();"},{"lineNumber":212,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":213,"author":{"gitID":"Ang-YC"},"content":"        // Draw label"},{"lineNumber":214,"author":{"gitID":"Ang-YC"},"content":"        URL fontUrl \u003d getClass().getResource(\"/fonts/Roboto-Regular.ttf\");"},{"lineNumber":215,"author":{"gitID":"Ang-YC"},"content":"        context.setFill(COLOR_LABEL);"},{"lineNumber":216,"author":{"gitID":"Ang-YC"},"content":"        if (fontUrl !\u003d null) {"},{"lineNumber":217,"author":{"gitID":"Ang-YC"},"content":"            context.setFont(Font.loadFont(fontUrl.toString(), SIZE_LABEL));"},{"lineNumber":218,"author":{"gitID":"Ang-YC"},"content":"        } else {"},{"lineNumber":219,"author":{"gitID":"Ang-YC"},"content":"            context.setFont(Font.font(\"Roboto\", SIZE_LABEL));"},{"lineNumber":220,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":221,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":222,"author":{"gitID":"Ang-YC"},"content":"        i \u003d 0;"},{"lineNumber":223,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":224,"author":{"gitID":"Ang-YC"},"content":"        for (Map.Entry\u003cString, Double\u003e entry : animatedData.entrySet()) {"},{"lineNumber":225,"author":{"gitID":"Ang-YC"},"content":"            point \u003d getPoint(spacing, i, max);"},{"lineNumber":226,"author":{"gitID":"Ang-YC"},"content":"            double textX \u003d point.getX();"},{"lineNumber":227,"author":{"gitID":"Ang-YC"},"content":"            double textY \u003d point.getY();"},{"lineNumber":228,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":229,"author":{"gitID":"Ang-YC"},"content":"            if (maxY - textY \u003c 1e-3) {"},{"lineNumber":230,"author":{"gitID":"Ang-YC"},"content":"                textY +\u003d (spacing / 3.0);"},{"lineNumber":231,"author":{"gitID":"Ang-YC"},"content":"                context.setTextAlign(TextAlignment.CENTER);"},{"lineNumber":232,"author":{"gitID":"Ang-YC"},"content":"                context.setTextBaseline(VPos.TOP);"},{"lineNumber":233,"author":{"gitID":"Ang-YC"},"content":"            } else if (minY - textY \u003e -1e-3) {"},{"lineNumber":234,"author":{"gitID":"Ang-YC"},"content":"                textY -\u003d (spacing / 3.0);"},{"lineNumber":235,"author":{"gitID":"Ang-YC"},"content":"                context.setTextAlign(TextAlignment.CENTER);"},{"lineNumber":236,"author":{"gitID":"Ang-YC"},"content":"                context.setTextBaseline(VPos.BOTTOM);"},{"lineNumber":237,"author":{"gitID":"Ang-YC"},"content":"            } else if (textX \u003c width / 2.0) {"},{"lineNumber":238,"author":{"gitID":"Ang-YC"},"content":"                textX -\u003d (spacing / 2.0);"},{"lineNumber":239,"author":{"gitID":"Ang-YC"},"content":"                context.setTextAlign(TextAlignment.RIGHT);"},{"lineNumber":240,"author":{"gitID":"Ang-YC"},"content":"                context.setTextBaseline(VPos.CENTER);"},{"lineNumber":241,"author":{"gitID":"Ang-YC"},"content":"            } else {"},{"lineNumber":242,"author":{"gitID":"Ang-YC"},"content":"                textX +\u003d (spacing / 2.0);"},{"lineNumber":243,"author":{"gitID":"Ang-YC"},"content":"                context.setTextAlign(TextAlignment.LEFT);"},{"lineNumber":244,"author":{"gitID":"Ang-YC"},"content":"                context.setTextBaseline(VPos.CENTER);"},{"lineNumber":245,"author":{"gitID":"Ang-YC"},"content":"            }"},{"lineNumber":246,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":247,"author":{"gitID":"Ang-YC"},"content":"            context.fillText(entry.getKey(), textX, textY);"},{"lineNumber":248,"author":{"gitID":"Ang-YC"},"content":"            i++;"},{"lineNumber":249,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":250,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":251,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":252,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":253,"author":{"gitID":"Ang-YC"},"content":"     * Get the correct point in the graph"},{"lineNumber":254,"author":{"gitID":"Ang-YC"},"content":"     * @param spacing between each step of value"},{"lineNumber":255,"author":{"gitID":"Ang-YC"},"content":"     * @param index of the value"},{"lineNumber":256,"author":{"gitID":"Ang-YC"},"content":"     * @param value of the item"},{"lineNumber":257,"author":{"gitID":"Ang-YC"},"content":"     * @return the {@code Point2D} representation of the point"},{"lineNumber":258,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":259,"author":{"gitID":"Ang-YC"},"content":"    private Point2D getPoint(double spacing, double index, double value) {"},{"lineNumber":260,"author":{"gitID":"Ang-YC"},"content":"        double numItems \u003d animatedData.size();"},{"lineNumber":261,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":262,"author":{"gitID":"Ang-YC"},"content":"        double x \u003d centerX + Math.cos((Math.PI * 2.0) * (index / numItems)) * spacing * value;"},{"lineNumber":263,"author":{"gitID":"Ang-YC"},"content":"        double y \u003d centerY + Math.sin((Math.PI * 2.0) * (index / numItems)) * spacing * value;"},{"lineNumber":264,"author":{"gitID":"Ang-YC"},"content":"        return new Point2D(x, y);"},{"lineNumber":265,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":266,"author":{"gitID":"Ang-YC"},"content":"}"}],"authorContributionMap":{"Ang-YC":266}},{"path":"src/main/java/seedu/address/ui/UiManager.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import javafx.application.Platform;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import javafx.scene.control.Alert;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import javafx.scene.control.Alert.AlertType;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.ComponentManager;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Config;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.storage.DataSavingExceptionEvent;"},{"lineNumber":15,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.commons.events.ui.ShowPanelRequestEvent;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.StringUtil;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.logic.Logic;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":21,"author":{"gitID":"-"},"content":" * The manager of the UI component."},{"lineNumber":22,"author":{"gitID":"-"},"content":" */"},{"lineNumber":23,"author":{"gitID":"-"},"content":"public class UiManager extends ComponentManager implements Ui {"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":"    public static final String FILE_OPS_ERROR_DIALOG_STAGE_TITLE \u003d \"File Op Error\";"},{"lineNumber":28,"author":{"gitID":"-"},"content":"    public static final String FILE_OPS_ERROR_DIALOG_HEADER_MESSAGE \u003d \"Could not save data\";"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    public static final String FILE_OPS_ERROR_DIALOG_CONTENT_MESSAGE \u003d \"Could not save data to file\";"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);"},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"-"},"content":"    private Logic logic;"},{"lineNumber":34,"author":{"gitID":"-"},"content":"    private Config config;"},{"lineNumber":35,"author":{"gitID":"-"},"content":"    private UserPrefs prefs;"},{"lineNumber":36,"author":{"gitID":"-"},"content":"    private MainWindow mainWindow;"},{"lineNumber":37,"author":{"gitID":"-"},"content":""},{"lineNumber":38,"author":{"gitID":"-"},"content":"    public UiManager(Logic logic, Config config, UserPrefs prefs) {"},{"lineNumber":39,"author":{"gitID":"-"},"content":"        super();"},{"lineNumber":40,"author":{"gitID":"-"},"content":"        this.logic \u003d logic;"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        this.config \u003d config;"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        this.prefs \u003d prefs;"},{"lineNumber":43,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":46,"author":{"gitID":"-"},"content":"    public void start(Stage primaryStage) {"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        logger.info(\"Starting UI...\");"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"Ang-YC"},"content":"        // Set it to borderless"},{"lineNumber":50,"author":{"gitID":"Ang-YC"},"content":"        //primaryStage.initStyle(StageStyle.TRANSPARENT);"},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":53,"author":{"gitID":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, config, prefs, logic);"},{"lineNumber":54,"author":{"gitID":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts"},{"lineNumber":55,"author":{"gitID":"-"},"content":"            mainWindow.fillInnerParts();"},{"lineNumber":56,"author":{"gitID":"Ang-YC"},"content":"            mainWindow.requestFocus();"},{"lineNumber":57,"author":{"gitID":"Ang-YC"},"content":"            raise(new ShowPanelRequestEvent(\"WelcomePane\"));"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"-"},"content":"        } catch (Throwable e) {"},{"lineNumber":60,"author":{"gitID":"-"},"content":"            logger.severe(StringUtil.getDetails(e));"},{"lineNumber":61,"author":{"gitID":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);"},{"lineNumber":62,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":63,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"-"},"content":""},{"lineNumber":65,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":66,"author":{"gitID":"-"},"content":"    public void stop() {"},{"lineNumber":67,"author":{"gitID":"-"},"content":"        prefs.updateLastUsedGuiSetting(mainWindow.getCurrentGuiSetting());"},{"lineNumber":68,"author":{"gitID":"-"},"content":"        mainWindow.hide();"},{"lineNumber":69,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":70,"author":{"gitID":"-"},"content":""},{"lineNumber":71,"author":{"gitID":"-"},"content":"    private void showFileOperationAlertAndWait(String description, String details, Throwable cause) {"},{"lineNumber":72,"author":{"gitID":"-"},"content":"        final String content \u003d details + \":\\n\" + cause.toString();"},{"lineNumber":73,"author":{"gitID":"-"},"content":"        showAlertDialogAndWait(AlertType.ERROR, FILE_OPS_ERROR_DIALOG_STAGE_TITLE, description, content);"},{"lineNumber":74,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitID":"-"},"content":""},{"lineNumber":76,"author":{"gitID":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);"},{"lineNumber":78,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":79,"author":{"gitID":"-"},"content":""},{"lineNumber":80,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":81,"author":{"gitID":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters."},{"lineNumber":82,"author":{"gitID":"-"},"content":"     * This method only returns after the user has closed the alert dialog."},{"lineNumber":83,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":84,"author":{"gitID":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,"},{"lineNumber":85,"author":{"gitID":"-"},"content":"                                               String contentText) {"},{"lineNumber":86,"author":{"gitID":"-"},"content":"        final Alert alert \u003d new Alert(type);"},{"lineNumber":87,"author":{"gitID":"Ang-YC"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/HRTheme.css\");"},{"lineNumber":88,"author":{"gitID":"-"},"content":"        alert.initOwner(owner);"},{"lineNumber":89,"author":{"gitID":"-"},"content":"        alert.setTitle(title);"},{"lineNumber":90,"author":{"gitID":"-"},"content":"        alert.setHeaderText(headerText);"},{"lineNumber":91,"author":{"gitID":"-"},"content":"        alert.setContentText(contentText);"},{"lineNumber":92,"author":{"gitID":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);"},{"lineNumber":93,"author":{"gitID":"-"},"content":"        alert.showAndWait();"},{"lineNumber":94,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":95,"author":{"gitID":"-"},"content":""},{"lineNumber":96,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":97,"author":{"gitID":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},"},{"lineNumber":98,"author":{"gitID":"-"},"content":"     * and exits the application after the user has closed the alert dialog."},{"lineNumber":99,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":100,"author":{"gitID":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {"},{"lineNumber":101,"author":{"gitID":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));"},{"lineNumber":102,"author":{"gitID":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());"},{"lineNumber":103,"author":{"gitID":"-"},"content":"        Platform.exit();"},{"lineNumber":104,"author":{"gitID":"-"},"content":"        System.exit(1);"},{"lineNumber":105,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":106,"author":{"gitID":"-"},"content":""},{"lineNumber":107,"author":{"gitID":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Event Handling Code \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":108,"author":{"gitID":"-"},"content":""},{"lineNumber":109,"author":{"gitID":"-"},"content":"    @Subscribe"},{"lineNumber":110,"author":{"gitID":"-"},"content":"    private void handleDataSavingExceptionEvent(DataSavingExceptionEvent event) {"},{"lineNumber":111,"author":{"gitID":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":112,"author":{"gitID":"-"},"content":"        showFileOperationAlertAndWait(FILE_OPS_ERROR_DIALOG_HEADER_MESSAGE, FILE_OPS_ERROR_DIALOG_CONTENT_MESSAGE,"},{"lineNumber":113,"author":{"gitID":"-"},"content":"                event.exception);"},{"lineNumber":114,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":115,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"-":109,"Ang-YC":6}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"Ang-YC"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitID":"Ang-YC"},"content":"import java.util.Objects;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"Ang-YC"},"content":"import javafx.animation.Animation;"},{"lineNumber":10,"author":{"gitID":"Ang-YC"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import javafx.fxml.FXML;"},{"lineNumber":12,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.Node;"},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.control.Label;"},{"lineNumber":14,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.control.SplitPane;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import javafx.scene.control.TextInputControl;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import javafx.scene.input.KeyCombination;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import javafx.scene.input.KeyEvent;"},{"lineNumber":18,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.input.MouseButton;"},{"lineNumber":19,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":20,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.layout.Pane;"},{"lineNumber":22,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":23,"author":{"gitID":"Ang-YC"},"content":"import javafx.stage.Screen;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import javafx.stage.Stage;"},{"lineNumber":25,"author":{"gitID":"Ang-YC"},"content":"import javafx.stage.StageStyle;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Config;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.GuiSettings;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":29,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.commons.events.ui.MaximizeAppRequestEvent;"},{"lineNumber":30,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.commons.events.ui.MinimizeAppRequestEvent;"},{"lineNumber":31,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.commons.events.ui.ShowPanelRequestEvent;"},{"lineNumber":32,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.commons.util.UiUtil;"},{"lineNumber":33,"author":{"gitID":"-"},"content":"import seedu.address.logic.Logic;"},{"lineNumber":34,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":35,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":38,"author":{"gitID":"-"},"content":" * The Main Window. Provides the basic application layout containing"},{"lineNumber":39,"author":{"gitID":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed."},{"lineNumber":40,"author":{"gitID":"-"},"content":" */"},{"lineNumber":41,"author":{"gitID":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {"},{"lineNumber":42,"author":{"gitID":"-"},"content":""},{"lineNumber":43,"author":{"gitID":"Ang-YC"},"content":"    public static final double MIN_WINDOW_WIDTH \u003d 800;"},{"lineNumber":44,"author":{"gitID":"Ang-YC"},"content":"    public static final double MIN_WINDOW_HEIGHT \u003d 600;"},{"lineNumber":45,"author":{"gitID":"Ang-YC"},"content":"    public static final int WINDOW_CORNER_SIZE \u003d 8;"},{"lineNumber":46,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";"},{"lineNumber":48,"author":{"gitID":"Ang-YC"},"content":"    private static final double MAX_ANIMATION_TIME_MS \u003d 200;"},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(this.getClass());"},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"-"},"content":"    private Stage primaryStage;"},{"lineNumber":53,"author":{"gitID":"-"},"content":"    private Logic logic;"},{"lineNumber":54,"author":{"gitID":"Ang-YC"},"content":"    private UiResizer uiResizer;"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    private Config config;"},{"lineNumber":56,"author":{"gitID":"-"},"content":"    private UserPrefs prefs;"},{"lineNumber":57,"author":{"gitID":"-"},"content":""},{"lineNumber":58,"author":{"gitID":"Ang-YC"},"content":"    // Independent UI parts residing in this UI container"},{"lineNumber":59,"author":{"gitID":"Ang-YC"},"content":"    private InfoPanel infoPanel;"},{"lineNumber":60,"author":{"gitID":"Ang-YC"},"content":"    private PdfPanel pdfPanel;"},{"lineNumber":61,"author":{"gitID":"-"},"content":"    private PersonListPanel personListPanel;"},{"lineNumber":62,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":63,"author":{"gitID":"Ang-YC"},"content":"    // X and Y offset of the window (Use for draggable title bar"},{"lineNumber":64,"author":{"gitID":"Ang-YC"},"content":"    private double xOffset \u003d 0;"},{"lineNumber":65,"author":{"gitID":"Ang-YC"},"content":"    private double yOffset \u003d 0;"},{"lineNumber":66,"author":{"gitID":"-"},"content":""},{"lineNumber":67,"author":{"gitID":"Ang-YC"},"content":"    // Animation"},{"lineNumber":68,"author":{"gitID":"Ang-YC"},"content":"    private boolean animated;"},{"lineNumber":69,"author":{"gitID":"Ang-YC"},"content":"    private ArrayList\u003cAnimation\u003e allAnimation \u003d new ArrayList\u003c\u003e();"},{"lineNumber":70,"author":{"gitID":"Ang-YC"},"content":"    private Node activeNode;"},{"lineNumber":71,"author":{"gitID":"Ang-YC"},"content":"    private String activePanel;"},{"lineNumber":72,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":73,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":74,"author":{"gitID":"Ang-YC"},"content":"    private AnchorPane topPane;"},{"lineNumber":75,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":76,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":77,"author":{"gitID":"Ang-YC"},"content":"    private AnchorPane resumePanePlaceholder;"},{"lineNumber":78,"author":{"gitID":"-"},"content":""},{"lineNumber":79,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":80,"author":{"gitID":"Ang-YC"},"content":"    private AnchorPane infoPanePlaceholder;"},{"lineNumber":81,"author":{"gitID":"-"},"content":""},{"lineNumber":82,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":83,"author":{"gitID":"Ang-YC"},"content":"    private VBox welcomePane;"},{"lineNumber":84,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":85,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":86,"author":{"gitID":"Ang-YC"},"content":"    private AnchorPane topCommandPlaceholder;"},{"lineNumber":87,"author":{"gitID":"-"},"content":""},{"lineNumber":88,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":89,"author":{"gitID":"Ang-YC"},"content":"    private AnchorPane listPersonsPlaceholder;"},{"lineNumber":90,"author":{"gitID":"-"},"content":""},{"lineNumber":91,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":92,"author":{"gitID":"Ang-YC"},"content":"    private AnchorPane centerPanePlaceholder;"},{"lineNumber":93,"author":{"gitID":"-"},"content":""},{"lineNumber":94,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":95,"author":{"gitID":"Ang-YC"},"content":"    private AnchorPane topTitlePlaceholder;"},{"lineNumber":96,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":97,"author":{"gitID":"Ang-YC"},"content":"    // Responsive"},{"lineNumber":98,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":99,"author":{"gitID":"Ang-YC"},"content":"    private SplitPane bottomPaneSplit;"},{"lineNumber":100,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":101,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":102,"author":{"gitID":"Ang-YC"},"content":"    private AnchorPane bottomListPane;"},{"lineNumber":103,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":104,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":105,"author":{"gitID":"Ang-YC"},"content":"    private AnchorPane bottomInfoPane;"},{"lineNumber":106,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":107,"author":{"gitID":"Ang-YC"},"content":"    // Floating box"},{"lineNumber":108,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":109,"author":{"gitID":"Ang-YC"},"content":"    private HBox floatParseRealTime;"},{"lineNumber":110,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":111,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":112,"author":{"gitID":"Ang-YC"},"content":"    private Label floatParseLabel;"},{"lineNumber":113,"author":{"gitID":"-"},"content":""},{"lineNumber":114,"author":{"gitID":"-"},"content":"    public MainWindow(Stage primaryStage, Config config, UserPrefs prefs, Logic logic) {"},{"lineNumber":115,"author":{"gitID":"-"},"content":"        super(FXML, primaryStage);"},{"lineNumber":116,"author":{"gitID":"-"},"content":""},{"lineNumber":117,"author":{"gitID":"-"},"content":"        // Set dependencies"},{"lineNumber":118,"author":{"gitID":"-"},"content":"        this.primaryStage \u003d primaryStage;"},{"lineNumber":119,"author":{"gitID":"-"},"content":"        this.logic \u003d logic;"},{"lineNumber":120,"author":{"gitID":"-"},"content":"        this.config \u003d config;"},{"lineNumber":121,"author":{"gitID":"-"},"content":"        this.prefs \u003d prefs;"},{"lineNumber":122,"author":{"gitID":"-"},"content":""},{"lineNumber":123,"author":{"gitID":"Ang-YC"},"content":"        // Setup custom UI"},{"lineNumber":124,"author":{"gitID":"Ang-YC"},"content":"        setBorderlessWindow();"},{"lineNumber":125,"author":{"gitID":"Ang-YC"},"content":"        setDraggableTitleBar();"},{"lineNumber":126,"author":{"gitID":"Ang-YC"},"content":"        setDoubleClickMaximize();"},{"lineNumber":127,"author":{"gitID":"Ang-YC"},"content":"        this.uiResizer \u003d new UiResizer(primaryStage, prefs.getGuiSettings(),"},{"lineNumber":128,"author":{"gitID":"Ang-YC"},"content":"                MIN_WINDOW_WIDTH, MIN_WINDOW_HEIGHT, WINDOW_CORNER_SIZE);"},{"lineNumber":129,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":130,"author":{"gitID":"-"},"content":"        // Configure the UI"},{"lineNumber":131,"author":{"gitID":"-"},"content":"        setTitle(config.getAppTitle());"},{"lineNumber":132,"author":{"gitID":"-"},"content":"        setWindowDefaultSize(prefs);"},{"lineNumber":133,"author":{"gitID":"-"},"content":""},{"lineNumber":134,"author":{"gitID":"Ang-YC"},"content":"        // Handle responsive"},{"lineNumber":135,"author":{"gitID":"Ang-YC"},"content":"        handleSplitPaneResponsive();"},{"lineNumber":136,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":137,"author":{"gitID":"Ang-YC"},"content":"        // Animation setup"},{"lineNumber":138,"author":{"gitID":"Ang-YC"},"content":"        this.animated \u003d prefs.isAnimated();"},{"lineNumber":139,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":140,"author":{"gitID":"Ang-YC"},"content":"        // Handle minimize and maximize request"},{"lineNumber":141,"author":{"gitID":"-"},"content":"        registerAsAnEventHandler(this);"},{"lineNumber":142,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":143,"author":{"gitID":"-"},"content":""},{"lineNumber":144,"author":{"gitID":"-"},"content":"    public Stage getPrimaryStage() {"},{"lineNumber":145,"author":{"gitID":"-"},"content":"        return primaryStage;"},{"lineNumber":146,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":147,"author":{"gitID":"-"},"content":""},{"lineNumber":148,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":149,"author":{"gitID":"-"},"content":"     * Fills up all the placeholders of this window."},{"lineNumber":150,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":151,"author":{"gitID":"-"},"content":"    void fillInnerParts() {"},{"lineNumber":152,"author":{"gitID":"Ang-YC"},"content":"        infoPanel \u003d new InfoPanel(animated);"},{"lineNumber":153,"author":{"gitID":"Ang-YC"},"content":"        infoPanePlaceholder.getChildren().add(infoPanel.getRoot());"},{"lineNumber":154,"author":{"gitID":"-"},"content":""},{"lineNumber":155,"author":{"gitID":"Ang-YC"},"content":"        pdfPanel \u003d new PdfPanel();"},{"lineNumber":156,"author":{"gitID":"Ang-YC"},"content":"        resumePanePlaceholder.getChildren().add(pdfPanel.getRoot());"},{"lineNumber":157,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":158,"author":{"gitID":"Ang-YC"},"content":"        ObservableList\u003cPerson\u003e personList \u003d logic.getActivePersonList();"},{"lineNumber":159,"author":{"gitID":"Ang-YC"},"content":"        personListPanel \u003d new PersonListPanel(personList, logic, animated);"},{"lineNumber":160,"author":{"gitID":"Ang-YC"},"content":"        listPersonsPlaceholder.getChildren().add(personListPanel.getRoot());"},{"lineNumber":161,"author":{"gitID":"-"},"content":""},{"lineNumber":162,"author":{"gitID":"-"},"content":"        ResultDisplay resultDisplay \u003d new ResultDisplay();"},{"lineNumber":163,"author":{"gitID":"Ang-YC"},"content":"        centerPanePlaceholder.getChildren().add(resultDisplay.getRoot());"},{"lineNumber":164,"author":{"gitID":"-"},"content":""},{"lineNumber":165,"author":{"gitID":"Ang-YC"},"content":"        TitleBar titleBar \u003d new TitleBar(prefs.getAddressBookFilePath());"},{"lineNumber":166,"author":{"gitID":"Ang-YC"},"content":"        topTitlePlaceholder.getChildren().add(titleBar.getRoot());"},{"lineNumber":167,"author":{"gitID":"Ang-YC"},"content":"        setAccelerator(titleBar.getControlHelp(), KeyCombination.valueOf(\"F1\"));"},{"lineNumber":168,"author":{"gitID":"-"},"content":""},{"lineNumber":169,"author":{"gitID":"Ang-YC"},"content":"        CommandBox commandBox \u003d new CommandBox(logic, floatParseRealTime, floatParseLabel, animated);"},{"lineNumber":170,"author":{"gitID":"Ang-YC"},"content":"        topCommandPlaceholder.getChildren().add(commandBox.getRoot());"},{"lineNumber":171,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":172,"author":{"gitID":"-"},"content":""},{"lineNumber":173,"author":{"gitID":"-"},"content":"    void hide() {"},{"lineNumber":174,"author":{"gitID":"-"},"content":"        primaryStage.hide();"},{"lineNumber":175,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":176,"author":{"gitID":"-"},"content":""},{"lineNumber":177,"author":{"gitID":"-"},"content":"    private void setTitle(String appTitle) {"},{"lineNumber":178,"author":{"gitID":"-"},"content":"        primaryStage.setTitle(appTitle);"},{"lineNumber":179,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":180,"author":{"gitID":"-"},"content":""},{"lineNumber":181,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":182,"author":{"gitID":"-"},"content":"     * Sets the default size based on user preferences."},{"lineNumber":183,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":184,"author":{"gitID":"-"},"content":"    private void setWindowDefaultSize(UserPrefs prefs) {"},{"lineNumber":185,"author":{"gitID":"-"},"content":"        primaryStage.setHeight(prefs.getGuiSettings().getWindowHeight());"},{"lineNumber":186,"author":{"gitID":"-"},"content":"        primaryStage.setWidth(prefs.getGuiSettings().getWindowWidth());"},{"lineNumber":187,"author":{"gitID":"-"},"content":"        if (prefs.getGuiSettings().getWindowCoordinates() !\u003d null) {"},{"lineNumber":188,"author":{"gitID":"-"},"content":"            primaryStage.setX(prefs.getGuiSettings().getWindowCoordinates().getX());"},{"lineNumber":189,"author":{"gitID":"-"},"content":"            primaryStage.setY(prefs.getGuiSettings().getWindowCoordinates().getY());"},{"lineNumber":190,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":191,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":192,"author":{"gitID":"-"},"content":""},{"lineNumber":193,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":194,"author":{"gitID":"-"},"content":"     * Returns the current size and the position of the main Window."},{"lineNumber":195,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":196,"author":{"gitID":"-"},"content":"    GuiSettings getCurrentGuiSetting() {"},{"lineNumber":197,"author":{"gitID":"-"},"content":"        return new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),"},{"lineNumber":198,"author":{"gitID":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());"},{"lineNumber":199,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":200,"author":{"gitID":"-"},"content":""},{"lineNumber":201,"author":{"gitID":"-"},"content":"    void show() {"},{"lineNumber":202,"author":{"gitID":"-"},"content":"        primaryStage.show();"},{"lineNumber":203,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":204,"author":{"gitID":"-"},"content":""},{"lineNumber":205,"author":{"gitID":"-"},"content":"    public PersonListPanel getPersonListPanel() {"},{"lineNumber":206,"author":{"gitID":"-"},"content":"        return this.personListPanel;"},{"lineNumber":207,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":208,"author":{"gitID":"-"},"content":""},{"lineNumber":209,"author":{"gitID":"Ang-YC"},"content":"    //@@author Ang-YC"},{"lineNumber":210,"author":{"gitID":"Ang-YC"},"content":"    public void requestFocus() {"},{"lineNumber":211,"author":{"gitID":"Ang-YC"},"content":"        primaryStage.requestFocus();"},{"lineNumber":212,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":213,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":214,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":215,"author":{"gitID":"Ang-YC"},"content":"     * Handle responsiveness by fixing the width of {@code bottomListPane}"},{"lineNumber":216,"author":{"gitID":"Ang-YC"},"content":"     * when increasing the width of {@code bottomPaneSplit}"},{"lineNumber":217,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":218,"author":{"gitID":"Ang-YC"},"content":"    private void handleSplitPaneResponsive() {"},{"lineNumber":219,"author":{"gitID":"Ang-YC"},"content":"        int splitHandleSize \u003d 5;"},{"lineNumber":220,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":221,"author":{"gitID":"Ang-YC"},"content":"        bottomPaneSplit.widthProperty().addListener((observable, oldValue, newValue) -\u003e {"},{"lineNumber":222,"author":{"gitID":"Ang-YC"},"content":"            if (bottomInfoPane.getWidth() \u003e bottomInfoPane.getMinWidth() - splitHandleSize) {"},{"lineNumber":223,"author":{"gitID":"Ang-YC"},"content":"                bottomPaneSplit.setDividerPosition(0, ("},{"lineNumber":224,"author":{"gitID":"Ang-YC"},"content":"                        bottomListPane.getWidth() + splitHandleSize) / newValue.doubleValue());"},{"lineNumber":225,"author":{"gitID":"Ang-YC"},"content":"            }"},{"lineNumber":226,"author":{"gitID":"Ang-YC"},"content":"        });"},{"lineNumber":227,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":228,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":229,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":230,"author":{"gitID":"Ang-YC"},"content":"     * Sets the accelerator of help button pane."},{"lineNumber":231,"author":{"gitID":"Ang-YC"},"content":"     *"},{"lineNumber":232,"author":{"gitID":"Ang-YC"},"content":"     * @param keyCombination the KeyCombination value of the accelerator"},{"lineNumber":233,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":234,"author":{"gitID":"Ang-YC"},"content":"    private void setAccelerator(Pane pane, KeyCombination keyCombination) {"},{"lineNumber":235,"author":{"gitID":"Ang-YC"},"content":"        primaryStage.addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {"},{"lineNumber":236,"author":{"gitID":"Ang-YC"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {"},{"lineNumber":237,"author":{"gitID":"Ang-YC"},"content":"                pane.getOnMouseClicked().handle(new javafx.scene.input.MouseEvent("},{"lineNumber":238,"author":{"gitID":"Ang-YC"},"content":"                        javafx.scene.input.MouseEvent.MOUSE_CLICKED, 0, 0, 0, 0,"},{"lineNumber":239,"author":{"gitID":"Ang-YC"},"content":"                        MouseButton.PRIMARY, 0, false, false, false,"},{"lineNumber":240,"author":{"gitID":"Ang-YC"},"content":"                        false, false, false, false,"},{"lineNumber":241,"author":{"gitID":"Ang-YC"},"content":"                        false, false, false, null));"},{"lineNumber":242,"author":{"gitID":"Ang-YC"},"content":"                event.consume();"},{"lineNumber":243,"author":{"gitID":"Ang-YC"},"content":"            }"},{"lineNumber":244,"author":{"gitID":"Ang-YC"},"content":"        });"},{"lineNumber":245,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":246,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":247,"author":{"gitID":"Ang-YC"},"content":"    private void setBorderlessWindow() {"},{"lineNumber":248,"author":{"gitID":"Ang-YC"},"content":"        // StageStyle.UNDECORATED is buggy"},{"lineNumber":249,"author":{"gitID":"Ang-YC"},"content":"        primaryStage.initStyle(StageStyle.TRANSPARENT);"},{"lineNumber":250,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":251,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":252,"author":{"gitID":"Ang-YC"},"content":"    private void setDoubleClickMaximize() {"},{"lineNumber":253,"author":{"gitID":"Ang-YC"},"content":"        topPane.setOnMouseClicked(event -\u003e {"},{"lineNumber":254,"author":{"gitID":"Ang-YC"},"content":"            if (MouseButton.PRIMARY.equals(event.getButton()) \u0026\u0026 event.getClickCount() \u003d\u003d 2) {"},{"lineNumber":255,"author":{"gitID":"Ang-YC"},"content":"                raise(new MaximizeAppRequestEvent());"},{"lineNumber":256,"author":{"gitID":"Ang-YC"},"content":"            }"},{"lineNumber":257,"author":{"gitID":"Ang-YC"},"content":"        });"},{"lineNumber":258,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":259,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":260,"author":{"gitID":"Ang-YC"},"content":"    private void setDraggableTitleBar() {"},{"lineNumber":261,"author":{"gitID":"Ang-YC"},"content":"        double minY \u003d Screen.getPrimary().getVisualBounds().getMinY();"},{"lineNumber":262,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":263,"author":{"gitID":"Ang-YC"},"content":"        topPane.setOnMousePressed(event -\u003e {"},{"lineNumber":264,"author":{"gitID":"Ang-YC"},"content":"            xOffset \u003d event.getSceneX();"},{"lineNumber":265,"author":{"gitID":"Ang-YC"},"content":"            yOffset \u003d event.getSceneY();"},{"lineNumber":266,"author":{"gitID":"Ang-YC"},"content":"        });"},{"lineNumber":267,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":268,"author":{"gitID":"Ang-YC"},"content":"        topPane.setOnMouseDragged(event -\u003e {"},{"lineNumber":269,"author":{"gitID":"Ang-YC"},"content":"            // Only allow in title bar (Blue area)"},{"lineNumber":270,"author":{"gitID":"Ang-YC"},"content":"            if (xOffset \u003e 120 \u0026\u0026 yOffset \u003e 40 \u0026\u0026 xOffset + yOffset - 200 \u003e 0) {"},{"lineNumber":271,"author":{"gitID":"Ang-YC"},"content":"                return;"},{"lineNumber":272,"author":{"gitID":"Ang-YC"},"content":"            }"},{"lineNumber":273,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":274,"author":{"gitID":"Ang-YC"},"content":"            double newY \u003d event.getScreenY() - yOffset;"},{"lineNumber":275,"author":{"gitID":"Ang-YC"},"content":"            primaryStage.setX(event.getScreenX() - xOffset);"},{"lineNumber":276,"author":{"gitID":"Ang-YC"},"content":"            primaryStage.setY(Math.max(newY, minY));"},{"lineNumber":277,"author":{"gitID":"Ang-YC"},"content":"        });"},{"lineNumber":278,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":279,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":280,"author":{"gitID":"Ang-YC"},"content":"    @Subscribe"},{"lineNumber":281,"author":{"gitID":"Ang-YC"},"content":"    private void handleShowPanelRequestEvent(ShowPanelRequestEvent event) {"},{"lineNumber":282,"author":{"gitID":"Ang-YC"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":283,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":284,"author":{"gitID":"Ang-YC"},"content":"        String requested \u003d event.getRequestedPanel();"},{"lineNumber":285,"author":{"gitID":"Ang-YC"},"content":"        Node toHide \u003d activeNode;"},{"lineNumber":286,"author":{"gitID":"Ang-YC"},"content":"        Animation fadeIn;"},{"lineNumber":287,"author":{"gitID":"Ang-YC"},"content":"        Animation fadeOut;"},{"lineNumber":288,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":289,"author":{"gitID":"Ang-YC"},"content":"        // Don\u0027t animate if the currently active panel is what requested"},{"lineNumber":290,"author":{"gitID":"Ang-YC"},"content":"        if (!Objects.equals(activePanel, requested)) {"},{"lineNumber":291,"author":{"gitID":"Ang-YC"},"content":"            // Pause all current running animation"},{"lineNumber":292,"author":{"gitID":"Ang-YC"},"content":"            allAnimation.forEach(Animation::pause);"},{"lineNumber":293,"author":{"gitID":"Ang-YC"},"content":"            allAnimation.clear();"},{"lineNumber":294,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":295,"author":{"gitID":"Ang-YC"},"content":"            activePanel \u003d requested;"},{"lineNumber":296,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":297,"author":{"gitID":"Ang-YC"},"content":"            // Show relevant panel"},{"lineNumber":298,"author":{"gitID":"Ang-YC"},"content":"            if (PdfPanel.PANEL_NAME.equals(requested)) {"},{"lineNumber":299,"author":{"gitID":"Ang-YC"},"content":"                pdfPanel.load();"},{"lineNumber":300,"author":{"gitID":"Ang-YC"},"content":"                activeNode \u003d resumePanePlaceholder;"},{"lineNumber":301,"author":{"gitID":"Ang-YC"},"content":"            } else if (InfoPanel.PANEL_NAME.equals(requested)) {"},{"lineNumber":302,"author":{"gitID":"Ang-YC"},"content":"                infoPanel.hide();"},{"lineNumber":303,"author":{"gitID":"Ang-YC"},"content":"                activeNode \u003d infoPanePlaceholder;"},{"lineNumber":304,"author":{"gitID":"Ang-YC"},"content":"                infoPanel.show();"},{"lineNumber":305,"author":{"gitID":"Ang-YC"},"content":"            } else if (\"WelcomePane\".equals(requested)) {"},{"lineNumber":306,"author":{"gitID":"Ang-YC"},"content":"                activeNode \u003d welcomePane;"},{"lineNumber":307,"author":{"gitID":"Ang-YC"},"content":"            }"},{"lineNumber":308,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":309,"author":{"gitID":"Ang-YC"},"content":"            if (activeNode \u003d\u003d null) {"},{"lineNumber":310,"author":{"gitID":"Ang-YC"},"content":"                return;"},{"lineNumber":311,"author":{"gitID":"Ang-YC"},"content":"            }"},{"lineNumber":312,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":313,"author":{"gitID":"Ang-YC"},"content":"            if (animated) {"},{"lineNumber":314,"author":{"gitID":"Ang-YC"},"content":"                // Show currently requested panel"},{"lineNumber":315,"author":{"gitID":"Ang-YC"},"content":"                activeNode.setOpacity(0);"},{"lineNumber":316,"author":{"gitID":"Ang-YC"},"content":"                activeNode.setVisible(true);"},{"lineNumber":317,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":318,"author":{"gitID":"Ang-YC"},"content":"                fadeIn \u003d UiUtil.fadeNode(activeNode, true, MAX_ANIMATION_TIME_MS, ev -\u003e { });"},{"lineNumber":319,"author":{"gitID":"Ang-YC"},"content":"                allAnimation.add(fadeIn);"},{"lineNumber":320,"author":{"gitID":"Ang-YC"},"content":"                fadeIn.play();"},{"lineNumber":321,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":322,"author":{"gitID":"Ang-YC"},"content":"                // Hide the previously selected panel"},{"lineNumber":323,"author":{"gitID":"Ang-YC"},"content":"                if (toHide !\u003d null) {"},{"lineNumber":324,"author":{"gitID":"Ang-YC"},"content":"                    fadeOut \u003d UiUtil.fadeNode(toHide, false,"},{"lineNumber":325,"author":{"gitID":"Ang-YC"},"content":"                            MAX_ANIMATION_TIME_MS, ev -\u003e onFinishAnimation(toHide));"},{"lineNumber":326,"author":{"gitID":"Ang-YC"},"content":"                    allAnimation.add(fadeOut);"},{"lineNumber":327,"author":{"gitID":"Ang-YC"},"content":"                    fadeOut.play();"},{"lineNumber":328,"author":{"gitID":"Ang-YC"},"content":"                }"},{"lineNumber":329,"author":{"gitID":"Ang-YC"},"content":"            } else {"},{"lineNumber":330,"author":{"gitID":"Ang-YC"},"content":"                // Show currently requested panel"},{"lineNumber":331,"author":{"gitID":"Ang-YC"},"content":"                activeNode.setOpacity(1);"},{"lineNumber":332,"author":{"gitID":"Ang-YC"},"content":"                activeNode.setVisible(true);"},{"lineNumber":333,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":334,"author":{"gitID":"Ang-YC"},"content":"                // Hide the previously selected panel"},{"lineNumber":335,"author":{"gitID":"Ang-YC"},"content":"                onFinishAnimation(toHide);"},{"lineNumber":336,"author":{"gitID":"Ang-YC"},"content":"            }"},{"lineNumber":337,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":338,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":339,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":340,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":341,"author":{"gitID":"Ang-YC"},"content":"     * Hide and unload relevant nodes when animation is done playing"},{"lineNumber":342,"author":{"gitID":"Ang-YC"},"content":"     * @param toHide The window to hide"},{"lineNumber":343,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":344,"author":{"gitID":"Ang-YC"},"content":"    private void onFinishAnimation(Node toHide) {"},{"lineNumber":345,"author":{"gitID":"Ang-YC"},"content":"        // Hide the previously selected panel"},{"lineNumber":346,"author":{"gitID":"Ang-YC"},"content":"        if (toHide !\u003d null) {"},{"lineNumber":347,"author":{"gitID":"Ang-YC"},"content":"            toHide.setVisible(false);"},{"lineNumber":348,"author":{"gitID":"Ang-YC"},"content":"            if (toHide.equals(resumePanePlaceholder)) {"},{"lineNumber":349,"author":{"gitID":"Ang-YC"},"content":"                pdfPanel.unload();"},{"lineNumber":350,"author":{"gitID":"Ang-YC"},"content":"            }"},{"lineNumber":351,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":352,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":353,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":354,"author":{"gitID":"Ang-YC"},"content":"    @Subscribe"},{"lineNumber":355,"author":{"gitID":"Ang-YC"},"content":"    public void handleMinimizeAppRequestEvent(MinimizeAppRequestEvent event) {"},{"lineNumber":356,"author":{"gitID":"Ang-YC"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":357,"author":{"gitID":"Ang-YC"},"content":"        primaryStage.setIconified(true);"},{"lineNumber":358,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":359,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":360,"author":{"gitID":"Ang-YC"},"content":"    @Subscribe"},{"lineNumber":361,"author":{"gitID":"Ang-YC"},"content":"    public void handleMaximizeAppRequestEvent(MaximizeAppRequestEvent event) {"},{"lineNumber":362,"author":{"gitID":"Ang-YC"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":363,"author":{"gitID":"Ang-YC"},"content":"        uiResizer.toggleMaximize();"},{"lineNumber":364,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":365,"author":{"gitID":"Ang-YC"},"content":"}"}],"authorContributionMap":{"-":113,"Ang-YC":252}},{"path":"src/main/java/seedu/address/ui/ResultDisplay.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import javafx.application.Platform;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import javafx.beans.property.SimpleStringProperty;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import javafx.beans.property.StringProperty;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import javafx.fxml.FXML;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import javafx.scene.control.TextArea;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.ui.NewResultAvailableEvent;"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":" * A UI for the result display box that is displayed at the header of the application."},{"lineNumber":18,"author":{"gitID":"-"},"content":" */"},{"lineNumber":19,"author":{"gitID":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ResultDisplay.class);"},{"lineNumber":22,"author":{"gitID":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"    private final StringProperty displayed \u003d new SimpleStringProperty(\"\");"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitID":"Ang-YC"},"content":"    private TextArea commandResult;"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    public ResultDisplay() {"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        super(FXML);"},{"lineNumber":31,"author":{"gitID":"Ang-YC"},"content":"        commandResult.textProperty().bind(displayed);"},{"lineNumber":32,"author":{"gitID":"-"},"content":"        registerAsAnEventHandler(this);"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"    @Subscribe"},{"lineNumber":36,"author":{"gitID":"-"},"content":"    private void handleNewResultAvailableEvent(NewResultAvailableEvent event) {"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":38,"author":{"gitID":"-"},"content":"        Platform.runLater(() -\u003e displayed.setValue(event.message));"},{"lineNumber":39,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"-"},"content":""},{"lineNumber":41,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"-":38,"Ang-YC":3}},{"path":"src/main/java/seedu/address/ui/UiResizer.java","lines":[{"lineNumber":1,"author":{"gitID":"Ang-YC"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":3,"author":{"gitID":"Ang-YC"},"content":"import javafx.event.EventHandler;"},{"lineNumber":4,"author":{"gitID":"Ang-YC"},"content":"import javafx.geometry.Rectangle2D;"},{"lineNumber":5,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.Cursor;"},{"lineNumber":6,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.Scene;"},{"lineNumber":7,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.input.MouseButton;"},{"lineNumber":8,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.input.MouseEvent;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import javafx.stage.Screen;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.GuiSettings;"},{"lineNumber":12,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":"//@@author Ang-YC"},{"lineNumber":14,"author":{"gitID":"Ang-YC"},"content":"/**"},{"lineNumber":15,"author":{"gitID":"Ang-YC"},"content":" * Ui Resizer, a utility to manage resize event of Stage such as resizable window"},{"lineNumber":16,"author":{"gitID":"Ang-YC"},"content":" */"},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":"public class UiResizer {"},{"lineNumber":18,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":19,"author":{"gitID":"Ang-YC"},"content":"    private Stage stage;"},{"lineNumber":20,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":"    private double lastX;"},{"lineNumber":22,"author":{"gitID":"Ang-YC"},"content":"    private double lastY;"},{"lineNumber":23,"author":{"gitID":"Ang-YC"},"content":"    private double lastWidth;"},{"lineNumber":24,"author":{"gitID":"Ang-YC"},"content":"    private double lastHeight;"},{"lineNumber":25,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":26,"author":{"gitID":"Ang-YC"},"content":"    public UiResizer(Stage stage, GuiSettings guiSettings, double minWidth, double minHeight, int cornerSize) {"},{"lineNumber":27,"author":{"gitID":"Ang-YC"},"content":"        this.stage \u003d stage;"},{"lineNumber":28,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":29,"author":{"gitID":"Ang-YC"},"content":"        // Set listeners"},{"lineNumber":30,"author":{"gitID":"Ang-YC"},"content":"        ResizeListener resizeListener \u003d new ResizeListener(stage, minWidth, minHeight, cornerSize);"},{"lineNumber":31,"author":{"gitID":"Ang-YC"},"content":"        stage.getScene().addEventHandler(MouseEvent.MOUSE_MOVED, resizeListener);"},{"lineNumber":32,"author":{"gitID":"Ang-YC"},"content":"        stage.getScene().addEventHandler(MouseEvent.MOUSE_PRESSED, resizeListener);"},{"lineNumber":33,"author":{"gitID":"Ang-YC"},"content":"        stage.getScene().addEventHandler(MouseEvent.MOUSE_DRAGGED, resizeListener);"},{"lineNumber":34,"author":{"gitID":"Ang-YC"},"content":"        stage.getScene().addEventHandler(MouseEvent.MOUSE_RELEASED, resizeListener);"},{"lineNumber":35,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":36,"author":{"gitID":"Ang-YC"},"content":"        // Set last value"},{"lineNumber":37,"author":{"gitID":"Ang-YC"},"content":"        lastX \u003d guiSettings.getWindowCoordinates().x;"},{"lineNumber":38,"author":{"gitID":"Ang-YC"},"content":"        lastY \u003d guiSettings.getWindowCoordinates().y;"},{"lineNumber":39,"author":{"gitID":"Ang-YC"},"content":"        lastWidth \u003d guiSettings.getWindowWidth();"},{"lineNumber":40,"author":{"gitID":"Ang-YC"},"content":"        lastHeight \u003d guiSettings.getWindowHeight();"},{"lineNumber":41,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":42,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":43,"author":{"gitID":"Ang-YC"},"content":"    private Rectangle2D getScreenBound() {"},{"lineNumber":44,"author":{"gitID":"Ang-YC"},"content":"        return Screen.getPrimary().getVisualBounds();"},{"lineNumber":45,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":47,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":48,"author":{"gitID":"Ang-YC"},"content":"     * Maximize / Un-maximize the stage, polyfill for native {@link Stage#setMaximized} feature"},{"lineNumber":49,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":50,"author":{"gitID":"Ang-YC"},"content":"    public void toggleMaximize() {"},{"lineNumber":51,"author":{"gitID":"Ang-YC"},"content":"        Rectangle2D screenBound \u003d getScreenBound();"},{"lineNumber":52,"author":{"gitID":"Ang-YC"},"content":"        double stageX \u003d stage.getX();"},{"lineNumber":53,"author":{"gitID":"Ang-YC"},"content":"        double stageY \u003d stage.getY();"},{"lineNumber":54,"author":{"gitID":"Ang-YC"},"content":"        double stageWidth \u003d stage.getWidth();"},{"lineNumber":55,"author":{"gitID":"Ang-YC"},"content":"        double stageHeight \u003d stage.getHeight();"},{"lineNumber":56,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":57,"author":{"gitID":"Ang-YC"},"content":"        if (stageWidth \u003d\u003d screenBound.getWidth() \u0026\u0026 stageHeight \u003d\u003d screenBound.getHeight()) {"},{"lineNumber":58,"author":{"gitID":"Ang-YC"},"content":"            stage.setX(lastX);"},{"lineNumber":59,"author":{"gitID":"Ang-YC"},"content":"            stage.setY(lastY);"},{"lineNumber":60,"author":{"gitID":"Ang-YC"},"content":"            stage.setWidth(lastWidth);"},{"lineNumber":61,"author":{"gitID":"Ang-YC"},"content":"            stage.setHeight(lastHeight);"},{"lineNumber":62,"author":{"gitID":"Ang-YC"},"content":"        } else {"},{"lineNumber":63,"author":{"gitID":"Ang-YC"},"content":"            lastX \u003d stageX;"},{"lineNumber":64,"author":{"gitID":"Ang-YC"},"content":"            lastY \u003d stageY;"},{"lineNumber":65,"author":{"gitID":"Ang-YC"},"content":"            lastWidth \u003d stageWidth;"},{"lineNumber":66,"author":{"gitID":"Ang-YC"},"content":"            lastHeight \u003d stageHeight;"},{"lineNumber":67,"author":{"gitID":"Ang-YC"},"content":"            stage.setX(screenBound.getMinX());"},{"lineNumber":68,"author":{"gitID":"Ang-YC"},"content":"            stage.setY(screenBound.getMinY());"},{"lineNumber":69,"author":{"gitID":"Ang-YC"},"content":"            stage.setWidth(screenBound.getWidth());"},{"lineNumber":70,"author":{"gitID":"Ang-YC"},"content":"            stage.setHeight(screenBound.getHeight());"},{"lineNumber":71,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":72,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":74,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":75,"author":{"gitID":"Ang-YC"},"content":"     * Manage the resize event during mouse move and drag"},{"lineNumber":76,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":77,"author":{"gitID":"Ang-YC"},"content":"    static class ResizeListener implements EventHandler\u003cMouseEvent\u003e {"},{"lineNumber":78,"author":{"gitID":"Ang-YC"},"content":"        private Stage stage;"},{"lineNumber":79,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":80,"author":{"gitID":"Ang-YC"},"content":"        private boolean holding \u003d false;"},{"lineNumber":81,"author":{"gitID":"Ang-YC"},"content":"        private int cornerSize;"},{"lineNumber":82,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":83,"author":{"gitID":"Ang-YC"},"content":"        // Starting position of resizing"},{"lineNumber":84,"author":{"gitID":"Ang-YC"},"content":"        private double startX \u003d 0;"},{"lineNumber":85,"author":{"gitID":"Ang-YC"},"content":"        private double startY \u003d 0;"},{"lineNumber":86,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":87,"author":{"gitID":"Ang-YC"},"content":"        // Min sizes for stage"},{"lineNumber":88,"author":{"gitID":"Ang-YC"},"content":"        private double minWidth;"},{"lineNumber":89,"author":{"gitID":"Ang-YC"},"content":"        private double minHeight;"},{"lineNumber":90,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":91,"author":{"gitID":"Ang-YC"},"content":"        public ResizeListener(Stage stage, double minWidth, double minHeight, int borderSize) {"},{"lineNumber":92,"author":{"gitID":"Ang-YC"},"content":"            this.stage \u003d stage;"},{"lineNumber":93,"author":{"gitID":"Ang-YC"},"content":"            this.minWidth \u003d minWidth;"},{"lineNumber":94,"author":{"gitID":"Ang-YC"},"content":"            this.minHeight \u003d minHeight;"},{"lineNumber":95,"author":{"gitID":"Ang-YC"},"content":"            this.cornerSize \u003d borderSize;"},{"lineNumber":96,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":97,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":98,"author":{"gitID":"Ang-YC"},"content":"        @Override"},{"lineNumber":99,"author":{"gitID":"Ang-YC"},"content":"        public void handle(MouseEvent mouseEvent) {"},{"lineNumber":100,"author":{"gitID":"Ang-YC"},"content":"            String eventType \u003d mouseEvent.getEventType().getName();"},{"lineNumber":101,"author":{"gitID":"Ang-YC"},"content":"            Scene scene \u003d stage.getScene();"},{"lineNumber":102,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":103,"author":{"gitID":"Ang-YC"},"content":"            double mouseX \u003d mouseEvent.getSceneX();"},{"lineNumber":104,"author":{"gitID":"Ang-YC"},"content":"            double mouseY \u003d mouseEvent.getSceneY();"},{"lineNumber":105,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":106,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":107,"author":{"gitID":"Ang-YC"},"content":"            switch (eventType) {"},{"lineNumber":108,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":109,"author":{"gitID":"Ang-YC"},"content":"            case \"MOUSE_MOVED\":"},{"lineNumber":110,"author":{"gitID":"Ang-YC"},"content":"                scene.setCursor((isResizePosition(mouseX, mouseY) || holding) ? Cursor.SE_RESIZE : Cursor.DEFAULT);"},{"lineNumber":111,"author":{"gitID":"Ang-YC"},"content":"                break;"},{"lineNumber":112,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":113,"author":{"gitID":"Ang-YC"},"content":"            case \"MOUSE_RELEASED\":"},{"lineNumber":114,"author":{"gitID":"Ang-YC"},"content":"                holding \u003d false;"},{"lineNumber":115,"author":{"gitID":"Ang-YC"},"content":"                scene.setCursor(Cursor.DEFAULT);"},{"lineNumber":116,"author":{"gitID":"Ang-YC"},"content":"                break;"},{"lineNumber":117,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":118,"author":{"gitID":"Ang-YC"},"content":"            case \"MOUSE_PRESSED\":"},{"lineNumber":119,"author":{"gitID":"Ang-YC"},"content":"                // Left click only"},{"lineNumber":120,"author":{"gitID":"Ang-YC"},"content":"                if (MouseButton.PRIMARY.equals(mouseEvent.getButton())) {"},{"lineNumber":121,"author":{"gitID":"Ang-YC"},"content":"                    holding \u003d isResizePosition(mouseX, mouseY);"},{"lineNumber":122,"author":{"gitID":"Ang-YC"},"content":"                    startX \u003d stage.getWidth() - mouseX;"},{"lineNumber":123,"author":{"gitID":"Ang-YC"},"content":"                    startY \u003d stage.getHeight() - mouseY;"},{"lineNumber":124,"author":{"gitID":"Ang-YC"},"content":"                }"},{"lineNumber":125,"author":{"gitID":"Ang-YC"},"content":"                break;"},{"lineNumber":126,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":127,"author":{"gitID":"Ang-YC"},"content":"            case \"MOUSE_DRAGGED\":"},{"lineNumber":128,"author":{"gitID":"Ang-YC"},"content":"                if (holding) {"},{"lineNumber":129,"author":{"gitID":"Ang-YC"},"content":"                    setStageWidth(mouseX + startX);"},{"lineNumber":130,"author":{"gitID":"Ang-YC"},"content":"                    setStageHeight(mouseY + startY);"},{"lineNumber":131,"author":{"gitID":"Ang-YC"},"content":"                }"},{"lineNumber":132,"author":{"gitID":"Ang-YC"},"content":"                break;"},{"lineNumber":133,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":134,"author":{"gitID":"Ang-YC"},"content":"            default:"},{"lineNumber":135,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":136,"author":{"gitID":"Ang-YC"},"content":"            }"},{"lineNumber":137,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":138,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":139,"author":{"gitID":"Ang-YC"},"content":"        /**"},{"lineNumber":140,"author":{"gitID":"Ang-YC"},"content":"         * Check if the X and Y coordinate of the mouse are in the range of draggable position"},{"lineNumber":141,"author":{"gitID":"Ang-YC"},"content":"         *"},{"lineNumber":142,"author":{"gitID":"Ang-YC"},"content":"         * @param x coordinate of the {@code MouseEvent}"},{"lineNumber":143,"author":{"gitID":"Ang-YC"},"content":"         * @param y coordinate of the {@code MouseEvent}"},{"lineNumber":144,"author":{"gitID":"Ang-YC"},"content":"         * @return {@code true} if the coordinate is in the range of draggable position, {@code false} otherwise"},{"lineNumber":145,"author":{"gitID":"Ang-YC"},"content":"         */"},{"lineNumber":146,"author":{"gitID":"Ang-YC"},"content":"        private boolean isResizePosition(double x, double y) {"},{"lineNumber":147,"author":{"gitID":"Ang-YC"},"content":"            Scene scene \u003d stage.getScene();"},{"lineNumber":148,"author":{"gitID":"Ang-YC"},"content":"            return (x \u003e scene.getWidth() - cornerSize \u0026\u0026 y \u003e scene.getHeight() - cornerSize);"},{"lineNumber":149,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":150,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":151,"author":{"gitID":"Ang-YC"},"content":"        /**"},{"lineNumber":152,"author":{"gitID":"Ang-YC"},"content":"         * Set the width of the stage, with validation to be larger than {@code minWidth}"},{"lineNumber":153,"author":{"gitID":"Ang-YC"},"content":"         *"},{"lineNumber":154,"author":{"gitID":"Ang-YC"},"content":"         * @param width of the stage"},{"lineNumber":155,"author":{"gitID":"Ang-YC"},"content":"         */"},{"lineNumber":156,"author":{"gitID":"Ang-YC"},"content":"        private void setStageWidth(double width) {"},{"lineNumber":157,"author":{"gitID":"Ang-YC"},"content":"            stage.setWidth(Math.max(width, minWidth));"},{"lineNumber":158,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":159,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":160,"author":{"gitID":"Ang-YC"},"content":"        /**"},{"lineNumber":161,"author":{"gitID":"Ang-YC"},"content":"         * Set the height of the stage, with validation to be larger than {@code minHeight}"},{"lineNumber":162,"author":{"gitID":"Ang-YC"},"content":"         *"},{"lineNumber":163,"author":{"gitID":"Ang-YC"},"content":"         * @param height of the stage"},{"lineNumber":164,"author":{"gitID":"Ang-YC"},"content":"         */"},{"lineNumber":165,"author":{"gitID":"Ang-YC"},"content":"        private void setStageHeight(double height) {"},{"lineNumber":166,"author":{"gitID":"Ang-YC"},"content":"            stage.setHeight(Math.max(height, minHeight));"},{"lineNumber":167,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":168,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":169,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":170,"author":{"gitID":"Ang-YC"},"content":"}"}],"authorContributionMap":{"-":3,"Ang-YC":167}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"Ang-YC"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"Ang-YC"},"content":"import javafx.animation.Animation;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import javafx.application.Platform;"},{"lineNumber":10,"author":{"gitID":"Ang-YC"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":11,"author":{"gitID":"Ang-YC"},"content":"import javafx.collections.ListChangeListener;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import javafx.fxml.FXML;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import javafx.scene.control.ListCell;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import javafx.scene.control.ListView;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.ui.JumpToListRequestEvent;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.ui.PersonPanelSelectionChangedEvent;"},{"lineNumber":20,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.commons.util.UiUtil;"},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.logic.Logic;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":25,"author":{"gitID":"-"},"content":" * Panel containing the list of persons."},{"lineNumber":26,"author":{"gitID":"-"},"content":" */"},{"lineNumber":27,"author":{"gitID":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {"},{"lineNumber":28,"author":{"gitID":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";"},{"lineNumber":29,"author":{"gitID":"Ang-YC"},"content":"    private static final double MAX_ANIMATION_TIME_MS \u003d 150;"},{"lineNumber":30,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);"},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":34,"author":{"gitID":"Ang-YC"},"content":"    private ListView\u003cPersonCard\u003e listPersons;"},{"lineNumber":35,"author":{"gitID":"-"},"content":""},{"lineNumber":36,"author":{"gitID":"Ang-YC"},"content":"    private final Logic logic;"},{"lineNumber":37,"author":{"gitID":"Ang-YC"},"content":"    private boolean animated;"},{"lineNumber":38,"author":{"gitID":"Ang-YC"},"content":"    private ArrayList\u003cPerson\u003e currentPersonList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":39,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":40,"author":{"gitID":"Ang-YC"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList, Logic logic, boolean animated) {"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        super(FXML);"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        setConnections(personList);"},{"lineNumber":43,"author":{"gitID":"Ang-YC"},"content":"        this.logic \u003d logic;"},{"lineNumber":44,"author":{"gitID":"Ang-YC"},"content":"        this.animated \u003d animated;"},{"lineNumber":45,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"        registerAsAnEventHandler(this);"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":50,"author":{"gitID":"Ang-YC"},"content":"     * Bind the connection between the filtered person list and the list view"},{"lineNumber":51,"author":{"gitID":"Ang-YC"},"content":"     * @param personList to be bind with"},{"lineNumber":52,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":53,"author":{"gitID":"-"},"content":"    private void setConnections(ObservableList\u003cPerson\u003e personList) {"},{"lineNumber":54,"author":{"gitID":"Ang-YC"},"content":"        // Listener for upcoming changes"},{"lineNumber":55,"author":{"gitID":"Ang-YC"},"content":"        personList.addListener((ListChangeListener\u003cPerson\u003e) changes -\u003e {"},{"lineNumber":56,"author":{"gitID":"Ang-YC"},"content":"            ObservableList\u003cPerson\u003e newList \u003d FXCollections.observableArrayList();"},{"lineNumber":57,"author":{"gitID":"Ang-YC"},"content":"            while (changes.next()) {"},{"lineNumber":58,"author":{"gitID":"Ang-YC"},"content":"                for (int i \u003d changes.getFrom(); i \u003c changes.getTo(); i++) {"},{"lineNumber":59,"author":{"gitID":"Ang-YC"},"content":"                    newList.add(changes.getList().get(i));"},{"lineNumber":60,"author":{"gitID":"Ang-YC"},"content":"                }"},{"lineNumber":61,"author":{"gitID":"Ang-YC"},"content":"            }"},{"lineNumber":62,"author":{"gitID":"Ang-YC"},"content":"            handleListChange(newList);"},{"lineNumber":63,"author":{"gitID":"Ang-YC"},"content":"        });"},{"lineNumber":64,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":65,"author":{"gitID":"Ang-YC"},"content":"        // Init mapped list"},{"lineNumber":66,"author":{"gitID":"Ang-YC"},"content":"        handleListChange(personList);"},{"lineNumber":67,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":68,"author":{"gitID":"Ang-YC"},"content":"        listPersons.setCellFactory(listView -\u003e new PersonListViewCell());"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        setEventHandlerForSelectionChangeEvent();"},{"lineNumber":70,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitID":"-"},"content":""},{"lineNumber":72,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":73,"author":{"gitID":"Ang-YC"},"content":"     * Fade out and prepare for list changes"},{"lineNumber":74,"author":{"gitID":"Ang-YC"},"content":"     * @param personList of the latest filtered list to be shown"},{"lineNumber":75,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":76,"author":{"gitID":"Ang-YC"},"content":"    private void handleListChange(ObservableList\u003cPerson\u003e personList) {"},{"lineNumber":77,"author":{"gitID":"Ang-YC"},"content":"        ObservableList\u003cPersonCard\u003e mappedList \u003d FXCollections.observableArrayList();"},{"lineNumber":78,"author":{"gitID":"Ang-YC"},"content":"        ArrayList\u003cPerson\u003e newList \u003d new ArrayList\u003c\u003e(personList);"},{"lineNumber":79,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":80,"author":{"gitID":"Ang-YC"},"content":"        int index \u003d 1;"},{"lineNumber":81,"author":{"gitID":"Ang-YC"},"content":"        for (Person person : personList) {"},{"lineNumber":82,"author":{"gitID":"Ang-YC"},"content":"            mappedList.add(new PersonCard(person, index));"},{"lineNumber":83,"author":{"gitID":"Ang-YC"},"content":"            index++;"},{"lineNumber":84,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":85,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":86,"author":{"gitID":"Ang-YC"},"content":"        if (animated) {"},{"lineNumber":87,"author":{"gitID":"Ang-YC"},"content":"            Animation fadeOut \u003d UiUtil.fadeNode(listPersons, false, 1, MAX_ANIMATION_TIME_MS,"},{"lineNumber":88,"author":{"gitID":"Ang-YC"},"content":"                e -\u003e postHandleListChange(personList, mappedList));"},{"lineNumber":89,"author":{"gitID":"Ang-YC"},"content":"            fadeOut.play();"},{"lineNumber":90,"author":{"gitID":"Ang-YC"},"content":"        } else {"},{"lineNumber":91,"author":{"gitID":"Ang-YC"},"content":"            postHandleListChange(personList, mappedList);"},{"lineNumber":92,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":93,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":94,"author":{"gitID":"Ang-YC"},"content":"        currentPersonList \u003d newList;"},{"lineNumber":95,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":96,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":97,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":98,"author":{"gitID":"Ang-YC"},"content":"     * Update person card list when new contents / updated contents came in"},{"lineNumber":99,"author":{"gitID":"Ang-YC"},"content":"     * @param personList of the latest filtered list to be shown"},{"lineNumber":100,"author":{"gitID":"Ang-YC"},"content":"     * @param mappedList as {@code PersonCard} of the latest filtered list to be shown"},{"lineNumber":101,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":102,"author":{"gitID":"Ang-YC"},"content":"    private void postHandleListChange(ObservableList\u003cPerson\u003e personList, ObservableList\u003cPersonCard\u003e mappedList) {"},{"lineNumber":103,"author":{"gitID":"Ang-YC"},"content":"        PersonCard selectedCard \u003d listPersons.getSelectionModel().getSelectedItem();"},{"lineNumber":104,"author":{"gitID":"Ang-YC"},"content":"        Person selectedPerson \u003d (selectedCard \u003d\u003d null) ? null : selectedCard.getPerson();"},{"lineNumber":105,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":106,"author":{"gitID":"Ang-YC"},"content":"        // Set item"},{"lineNumber":107,"author":{"gitID":"Ang-YC"},"content":"        listPersons.setItems(null);"},{"lineNumber":108,"author":{"gitID":"Ang-YC"},"content":"        listPersons.setItems(mappedList);"},{"lineNumber":109,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":110,"author":{"gitID":"Ang-YC"},"content":"        // Select previously selected person"},{"lineNumber":111,"author":{"gitID":"Ang-YC"},"content":"        int selectedIndex \u003d personList.indexOf(selectedPerson);"},{"lineNumber":112,"author":{"gitID":"Ang-YC"},"content":"        if (selectedIndex !\u003d -1) {"},{"lineNumber":113,"author":{"gitID":"Ang-YC"},"content":"            listPersons.getSelectionModel().select(selectedIndex);"},{"lineNumber":114,"author":{"gitID":"Ang-YC"},"content":"        } else {"},{"lineNumber":115,"author":{"gitID":"Ang-YC"},"content":"            listPersons.getSelectionModel().clearSelection();"},{"lineNumber":116,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":117,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":118,"author":{"gitID":"Ang-YC"},"content":"        // Disable focus if list is empty"},{"lineNumber":119,"author":{"gitID":"Ang-YC"},"content":"        listPersons.setFocusTraversable(mappedList.size() !\u003d 0);"},{"lineNumber":120,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":121,"author":{"gitID":"Ang-YC"},"content":"        // Show list"},{"lineNumber":122,"author":{"gitID":"Ang-YC"},"content":"        listPersons.setOpacity(1);"},{"lineNumber":123,"author":{"gitID":"Ang-YC"},"content":"        if (animated) {"},{"lineNumber":124,"author":{"gitID":"Ang-YC"},"content":"            mappedList.forEach(PersonCard::play);"},{"lineNumber":125,"author":{"gitID":"Ang-YC"},"content":"        } else {"},{"lineNumber":126,"author":{"gitID":"Ang-YC"},"content":"            mappedList.forEach(PersonCard::show);"},{"lineNumber":127,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":128,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":129,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":130,"author":{"gitID":"-"},"content":"    private void setEventHandlerForSelectionChangeEvent() {"},{"lineNumber":131,"author":{"gitID":"Ang-YC"},"content":"        listPersons.getSelectionModel().selectedItemProperty()"},{"lineNumber":132,"author":{"gitID":"Ang-YC"},"content":"                .addListener((obs, old, selected) -\u003e {"},{"lineNumber":133,"author":{"gitID":"Ang-YC"},"content":"                    logger.fine(\"Selection in person list panel changed to : \u0027\" + selected + \"\u0027\");"},{"lineNumber":134,"author":{"gitID":"Ang-YC"},"content":"                    logic.setSelectedPerson(selected \u003d\u003d null ? null : selected.getPerson());"},{"lineNumber":135,"author":{"gitID":"Ang-YC"},"content":"                    raise(new PersonPanelSelectionChangedEvent(selected));"},{"lineNumber":136,"author":{"gitID":"-"},"content":"                });"},{"lineNumber":137,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":138,"author":{"gitID":"-"},"content":""},{"lineNumber":139,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":140,"author":{"gitID":"-"},"content":"     * Scrolls to the {@code PersonCard} at the {@code index} and selects it."},{"lineNumber":141,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":142,"author":{"gitID":"-"},"content":"    private void scrollTo(int index) {"},{"lineNumber":143,"author":{"gitID":"-"},"content":"        Platform.runLater(() -\u003e {"},{"lineNumber":144,"author":{"gitID":"Ang-YC"},"content":"            listPersons.scrollTo(index);"},{"lineNumber":145,"author":{"gitID":"Ang-YC"},"content":"            listPersons.getSelectionModel().clearAndSelect(index);"},{"lineNumber":146,"author":{"gitID":"-"},"content":"        });"},{"lineNumber":147,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":148,"author":{"gitID":"-"},"content":""},{"lineNumber":149,"author":{"gitID":"-"},"content":"    @Subscribe"},{"lineNumber":150,"author":{"gitID":"-"},"content":"    private void handleJumpToListRequestEvent(JumpToListRequestEvent event) {"},{"lineNumber":151,"author":{"gitID":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":152,"author":{"gitID":"-"},"content":"        scrollTo(event.targetIndex);"},{"lineNumber":153,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":154,"author":{"gitID":"-"},"content":""},{"lineNumber":155,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":156,"author":{"gitID":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code PersonCard}."},{"lineNumber":157,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":158,"author":{"gitID":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPersonCard\u003e {"},{"lineNumber":159,"author":{"gitID":"-"},"content":""},{"lineNumber":160,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":161,"author":{"gitID":"-"},"content":"        protected void updateItem(PersonCard person, boolean empty) {"},{"lineNumber":162,"author":{"gitID":"-"},"content":"            super.updateItem(person, empty);"},{"lineNumber":163,"author":{"gitID":"-"},"content":""},{"lineNumber":164,"author":{"gitID":"-"},"content":"            if (empty || person \u003d\u003d null) {"},{"lineNumber":165,"author":{"gitID":"-"},"content":"                setGraphic(null);"},{"lineNumber":166,"author":{"gitID":"-"},"content":"                setText(null);"},{"lineNumber":167,"author":{"gitID":"-"},"content":"            } else {"},{"lineNumber":168,"author":{"gitID":"-"},"content":"                setGraphic(person.getRoot());"},{"lineNumber":169,"author":{"gitID":"-"},"content":"            }"},{"lineNumber":170,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":171,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":172,"author":{"gitID":"-"},"content":""},{"lineNumber":173,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"-":72,"Ang-YC":101}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"Ang-YC"},"content":"import javafx.animation.Animation;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import javafx.scene.control.Label;"},{"lineNumber":10,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.image.Image;"},{"lineNumber":11,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":12,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.layout.Pane;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":15,"author":{"gitID":"Ang-YC"},"content":"import javafx.util.Duration;"},{"lineNumber":16,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.commons.events.ui.PersonChangedEvent;"},{"lineNumber":18,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.commons.util.UiUtil;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":22,"author":{"gitID":"-"},"content":" * An UI component that displays information of a {@code Person}."},{"lineNumber":23,"author":{"gitID":"-"},"content":" */"},{"lineNumber":24,"author":{"gitID":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";"},{"lineNumber":27,"author":{"gitID":"Ang-YC"},"content":"    private static final double MAX_ANIMATION_TIME_MS \u003d 150;"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"Ang-YC"},"content":"    public final int index;"},{"lineNumber":30,"author":{"gitID":"Ang-YC"},"content":"    private Person person;"},{"lineNumber":31,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":32,"author":{"gitID":"Ang-YC"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonCard.class);"},{"lineNumber":33,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":35,"author":{"gitID":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX."},{"lineNumber":36,"author":{"gitID":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords"},{"lineNumber":37,"author":{"gitID":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime."},{"lineNumber":38,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":39,"author":{"gitID":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e"},{"lineNumber":40,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":41,"author":{"gitID":"-"},"content":""},{"lineNumber":42,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":43,"author":{"gitID":"Ang-YC"},"content":"    private AnchorPane cardPersonPane;"},{"lineNumber":44,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":45,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":46,"author":{"gitID":"Ang-YC"},"content":"    private ImageView cardPhoto;"},{"lineNumber":47,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":48,"author":{"gitID":"Ang-YC"},"content":"    private Pane cardPhotoMask;"},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":51,"author":{"gitID":"Ang-YC"},"content":"    private Label cardPersonName;"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":53,"author":{"gitID":"Ang-YC"},"content":"    private Label cardPersonUniversity;"},{"lineNumber":54,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":55,"author":{"gitID":"Ang-YC"},"content":"    private Label cardPersonEmail;"},{"lineNumber":56,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":57,"author":{"gitID":"Ang-YC"},"content":"    private Label cardPersonContact;"},{"lineNumber":58,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":59,"author":{"gitID":"Ang-YC"},"content":"    private Label cardPersonRating;"},{"lineNumber":60,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":61,"author":{"gitID":"Ang-YC"},"content":"    private Pane iconRating;"},{"lineNumber":62,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":63,"author":{"gitID":"Ang-YC"},"content":"    private Label cardPersonStatus;"},{"lineNumber":64,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":65,"author":{"gitID":"Ang-YC"},"content":"    private Label cardPersonNumber;"},{"lineNumber":66,"author":{"gitID":"-"},"content":""},{"lineNumber":67,"author":{"gitID":"Ang-YC"},"content":"    //@@author Ang-YC"},{"lineNumber":68,"author":{"gitID":"Ang-YC"},"content":"    public PersonCard(Person person, int displayedIndex) {"},{"lineNumber":69,"author":{"gitID":"Ang-YC"},"content":"        super(FXML);"},{"lineNumber":70,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":71,"author":{"gitID":"Ang-YC"},"content":"        this.person \u003d person;"},{"lineNumber":72,"author":{"gitID":"Ang-YC"},"content":"        this.index \u003d displayedIndex - 1;"},{"lineNumber":73,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":74,"author":{"gitID":"Ang-YC"},"content":"        cardPersonPane.setOpacity(0);"},{"lineNumber":75,"author":{"gitID":"Ang-YC"},"content":"        updatePersonCard();"},{"lineNumber":76,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":77,"author":{"gitID":"Ang-YC"},"content":"        registerAsAnEventHandler(this);"},{"lineNumber":78,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":79,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":80,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":81,"author":{"gitID":"Ang-YC"},"content":"     * Update the person with the latest information"},{"lineNumber":82,"author":{"gitID":"Ang-YC"},"content":"     * It can be updated from address book change or selection change"},{"lineNumber":83,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":84,"author":{"gitID":"Ang-YC"},"content":"    private void updatePersonCard() {"},{"lineNumber":85,"author":{"gitID":"Ang-YC"},"content":"        if (person \u003d\u003d null) {"},{"lineNumber":86,"author":{"gitID":"Ang-YC"},"content":"            return;"},{"lineNumber":87,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":88,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":89,"author":{"gitID":"Ang-YC"},"content":"        cardPhoto.fitWidthProperty().bind(cardPhotoMask.widthProperty());"},{"lineNumber":90,"author":{"gitID":"Ang-YC"},"content":"        cardPhoto.fitHeightProperty().bind(cardPhotoMask.heightProperty());"},{"lineNumber":91,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":92,"author":{"gitID":"Ang-YC"},"content":"        Image profileImage \u003d person.getProfileImage().getImage();"},{"lineNumber":93,"author":{"gitID":"Ang-YC"},"content":"        if (profileImage \u003d\u003d null) {"},{"lineNumber":94,"author":{"gitID":"Ang-YC"},"content":"            cardPhoto.setImage(null);"},{"lineNumber":95,"author":{"gitID":"Ang-YC"},"content":"        } else {"},{"lineNumber":96,"author":{"gitID":"Ang-YC"},"content":"            try {"},{"lineNumber":97,"author":{"gitID":"Ang-YC"},"content":"                cardPhoto.setImage(profileImage);"},{"lineNumber":98,"author":{"gitID":"Ang-YC"},"content":"            } catch (Exception e) {"},{"lineNumber":99,"author":{"gitID":"Ang-YC"},"content":"                logger.info(\"Failed to load image file\");"},{"lineNumber":100,"author":{"gitID":"Ang-YC"},"content":"            }"},{"lineNumber":101,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":102,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":103,"author":{"gitID":"Ang-YC"},"content":"        cardPersonName.setText(person.getName().fullName);"},{"lineNumber":104,"author":{"gitID":"Ang-YC"},"content":"        cardPersonUniversity.setText(person.getUniversity().value);"},{"lineNumber":105,"author":{"gitID":"Ang-YC"},"content":"        cardPersonEmail.setText(person.getEmail().value);"},{"lineNumber":106,"author":{"gitID":"Ang-YC"},"content":"        cardPersonContact.setText(person.getPhone().value);"},{"lineNumber":107,"author":{"gitID":"Ang-YC"},"content":"        cardPersonStatus.setText(person.getStatus().value);"},{"lineNumber":108,"author":{"gitID":"Ang-YC"},"content":"        cardPersonStatus.setStyle(\"-fx-background-color: \" + UiUtil.colorToHex(person.getStatus().color));"},{"lineNumber":109,"author":{"gitID":"Ang-YC"},"content":"        cardPersonNumber.setText(String.valueOf(index + 1));"},{"lineNumber":110,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":111,"author":{"gitID":"Ang-YC"},"content":"        double rating \u003d person.getRating().overallScore;"},{"lineNumber":112,"author":{"gitID":"Ang-YC"},"content":"        if (rating \u003c 1e-3) {"},{"lineNumber":113,"author":{"gitID":"Ang-YC"},"content":"            cardPersonRating.setText(\"\");"},{"lineNumber":114,"author":{"gitID":"Ang-YC"},"content":"            iconRating.setVisible(false);"},{"lineNumber":115,"author":{"gitID":"Ang-YC"},"content":"        } else {"},{"lineNumber":116,"author":{"gitID":"Ang-YC"},"content":"            cardPersonRating.setText(UiUtil.toFixed(rating, 2));"},{"lineNumber":117,"author":{"gitID":"Ang-YC"},"content":"            iconRating.setVisible(true);"},{"lineNumber":118,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":119,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":120,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":121,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":122,"author":{"gitID":"Ang-YC"},"content":"     * Play animation (Fade is done on MainWindow)"},{"lineNumber":123,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":124,"author":{"gitID":"Ang-YC"},"content":"    public void play() {"},{"lineNumber":125,"author":{"gitID":"Ang-YC"},"content":"        Animation fadeIn \u003d UiUtil.fadeNode(cardPersonPane, true, MAX_ANIMATION_TIME_MS, 0, e -\u003e {});"},{"lineNumber":126,"author":{"gitID":"Ang-YC"},"content":"        fadeIn.setDelay(Duration.millis(index * 50));"},{"lineNumber":127,"author":{"gitID":"Ang-YC"},"content":"        fadeIn.play();"},{"lineNumber":128,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":129,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":130,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":131,"author":{"gitID":"Ang-YC"},"content":"     * Show without animation (Fade is done on MainWindow)"},{"lineNumber":132,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":133,"author":{"gitID":"Ang-YC"},"content":"    public void show() {"},{"lineNumber":134,"author":{"gitID":"Ang-YC"},"content":"        cardPersonPane.setOpacity(1);"},{"lineNumber":135,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":136,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":137,"author":{"gitID":"Ang-YC"},"content":"    @Subscribe"},{"lineNumber":138,"author":{"gitID":"Ang-YC"},"content":"    private void handlePersonChangedEvent(PersonChangedEvent event) {"},{"lineNumber":139,"author":{"gitID":"Ang-YC"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":140,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":141,"author":{"gitID":"Ang-YC"},"content":"        Person source \u003d event.getSource();"},{"lineNumber":142,"author":{"gitID":"Ang-YC"},"content":"        Person target \u003d event.getTarget();"},{"lineNumber":143,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":144,"author":{"gitID":"Ang-YC"},"content":"        if (person !\u003d null \u0026\u0026 person.equals(source)) {"},{"lineNumber":145,"author":{"gitID":"Ang-YC"},"content":"            person \u003d target;"},{"lineNumber":146,"author":{"gitID":"Ang-YC"},"content":"            updatePersonCard();"},{"lineNumber":147,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":148,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":149,"author":{"gitID":"Ang-YC"},"content":"    //@@author"},{"lineNumber":150,"author":{"gitID":"-"},"content":""},{"lineNumber":151,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":152,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":153,"author":{"gitID":"-"},"content":"        // short circuit if same object"},{"lineNumber":154,"author":{"gitID":"-"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":155,"author":{"gitID":"-"},"content":"            return true;"},{"lineNumber":156,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":157,"author":{"gitID":"-"},"content":""},{"lineNumber":158,"author":{"gitID":"-"},"content":"        // instanceof handles nulls"},{"lineNumber":159,"author":{"gitID":"-"},"content":"        if (!(other instanceof PersonCard)) {"},{"lineNumber":160,"author":{"gitID":"-"},"content":"            return false;"},{"lineNumber":161,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":162,"author":{"gitID":"-"},"content":""},{"lineNumber":163,"author":{"gitID":"-"},"content":"        // state check"},{"lineNumber":164,"author":{"gitID":"-"},"content":"        PersonCard card \u003d (PersonCard) other;"},{"lineNumber":165,"author":{"gitID":"Ang-YC"},"content":"        return cardPersonNumber.getText().equals(card.cardPersonNumber.getText())"},{"lineNumber":166,"author":{"gitID":"-"},"content":"                \u0026\u0026 person.equals(card.person);"},{"lineNumber":167,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":168,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":169,"author":{"gitID":"Ang-YC"},"content":"    public Person getPerson() {"},{"lineNumber":170,"author":{"gitID":"Ang-YC"},"content":"        return person;"},{"lineNumber":171,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":172,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"-":52,"Ang-YC":120}},{"path":"src/main/java/seedu/address/commons/core/GuiSettings.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.core;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.awt.Point;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.io.Serializable;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":8,"author":{"gitID":"-"},"content":" * A Serializable class that contains the GUI settings."},{"lineNumber":9,"author":{"gitID":"-"},"content":" */"},{"lineNumber":10,"author":{"gitID":"-"},"content":"public class GuiSettings implements Serializable {"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"Ang-YC"},"content":"    private static final double DEFAULT_WIDTH \u003d 800;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"    private Double windowWidth;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"    private Double windowHeight;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"    private Point windowCoordinates;"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"    public GuiSettings() {"},{"lineNumber":20,"author":{"gitID":"-"},"content":"        this.windowWidth \u003d DEFAULT_WIDTH;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"        this.windowHeight \u003d DEFAULT_HEIGHT;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"        this.windowCoordinates \u003d null; // null represent no coordinates"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"    public GuiSettings(Double windowWidth, Double windowHeight, int xPosition, int yPosition) {"},{"lineNumber":26,"author":{"gitID":"-"},"content":"        this.windowWidth \u003d windowWidth;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"        this.windowHeight \u003d windowHeight;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"        this.windowCoordinates \u003d new Point(xPosition, yPosition);"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"    public Double getWindowWidth() {"},{"lineNumber":32,"author":{"gitID":"-"},"content":"        return windowWidth;"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"    public Double getWindowHeight() {"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        return windowHeight;"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"-"},"content":"    public Point getWindowCoordinates() {"},{"lineNumber":40,"author":{"gitID":"-"},"content":"        return windowCoordinates;"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":42,"author":{"gitID":"-"},"content":""},{"lineNumber":43,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":46,"author":{"gitID":"-"},"content":"            return true;"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well."},{"lineNumber":49,"author":{"gitID":"-"},"content":"            return false;"},{"lineNumber":50,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"        return Objects.equals(windowWidth, o.windowWidth)"},{"lineNumber":55,"author":{"gitID":"-"},"content":"                \u0026\u0026 Objects.equals(windowHeight, o.windowHeight)"},{"lineNumber":56,"author":{"gitID":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates.x, o.windowCoordinates.x)"},{"lineNumber":57,"author":{"gitID":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates.y, o.windowCoordinates.y);"},{"lineNumber":58,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":59,"author":{"gitID":"-"},"content":""},{"lineNumber":60,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":61,"author":{"gitID":"-"},"content":"    public int hashCode() {"},{"lineNumber":62,"author":{"gitID":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);"},{"lineNumber":63,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"-"},"content":""},{"lineNumber":65,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":66,"author":{"gitID":"-"},"content":"    public String toString() {"},{"lineNumber":67,"author":{"gitID":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":68,"author":{"gitID":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");"},{"lineNumber":70,"author":{"gitID":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        return sb.toString();"},{"lineNumber":72,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"-":72,"Ang-YC":1}},{"path":"src/main/java/seedu/address/commons/core/Config.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.core;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.logging.Level;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"-"},"content":" * Config values used by the app"},{"lineNumber":8,"author":{"gitID":"-"},"content":" */"},{"lineNumber":9,"author":{"gitID":"-"},"content":"public class Config {"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"    public static final String DEFAULT_CONFIG_FILE \u003d \"config.json\";"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"    // Config values customizable through config file"},{"lineNumber":14,"author":{"gitID":"Ang-YC"},"content":"    private String appTitle \u003d \"HR+\";"},{"lineNumber":15,"author":{"gitID":"-"},"content":"    private Level logLevel \u003d Level.INFO;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"    private String userPrefsFilePath \u003d \"preferences.json\";"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"    public String getAppTitle() {"},{"lineNumber":19,"author":{"gitID":"-"},"content":"        return appTitle;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"    public void setAppTitle(String appTitle) {"},{"lineNumber":23,"author":{"gitID":"-"},"content":"        this.appTitle \u003d appTitle;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"    public Level getLogLevel() {"},{"lineNumber":27,"author":{"gitID":"-"},"content":"        return logLevel;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"-"},"content":"    public void setLogLevel(Level logLevel) {"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        this.logLevel \u003d logLevel;"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"    public String getUserPrefsFilePath() {"},{"lineNumber":35,"author":{"gitID":"-"},"content":"        return userPrefsFilePath;"},{"lineNumber":36,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":37,"author":{"gitID":"-"},"content":""},{"lineNumber":38,"author":{"gitID":"-"},"content":"    public void setUserPrefsFilePath(String userPrefsFilePath) {"},{"lineNumber":39,"author":{"gitID":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":41,"author":{"gitID":"-"},"content":""},{"lineNumber":42,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":43,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":45,"author":{"gitID":"-"},"content":"            return true;"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well."},{"lineNumber":48,"author":{"gitID":"-"},"content":"            return false;"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"-"},"content":"        Config o \u003d (Config) other;"},{"lineNumber":52,"author":{"gitID":"-"},"content":""},{"lineNumber":53,"author":{"gitID":"-"},"content":"        return Objects.equals(appTitle, o.appTitle)"},{"lineNumber":54,"author":{"gitID":"-"},"content":"                \u0026\u0026 Objects.equals(logLevel, o.logLevel)"},{"lineNumber":55,"author":{"gitID":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);"},{"lineNumber":56,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"-"},"content":""},{"lineNumber":58,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":59,"author":{"gitID":"-"},"content":"    public int hashCode() {"},{"lineNumber":60,"author":{"gitID":"-"},"content":"        return Objects.hash(appTitle, logLevel, userPrefsFilePath);"},{"lineNumber":61,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":62,"author":{"gitID":"-"},"content":""},{"lineNumber":63,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":64,"author":{"gitID":"-"},"content":"    public String toString() {"},{"lineNumber":65,"author":{"gitID":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        sb.append(\"App title: \" + appTitle);"},{"lineNumber":67,"author":{"gitID":"-"},"content":"        sb.append(\"\\nCurrent log level: \" + logLevel);"},{"lineNumber":68,"author":{"gitID":"-"},"content":"        sb.append(\"\\nPreference file Location: \" + userPrefsFilePath);"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        return sb.toString();"},{"lineNumber":70,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitID":"-"},"content":""},{"lineNumber":72,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"-":71,"Ang-YC":1}},{"path":"src/main/java/seedu/address/ui/InfoPanel.java","lines":[{"lineNumber":1,"author":{"gitID":"Ang-YC"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":3,"author":{"gitID":"Ang-YC"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitID":"Ang-YC"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitID":"Ang-YC"},"content":"import java.time.format.TextStyle;"},{"lineNumber":6,"author":{"gitID":"Ang-YC"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitID":"Ang-YC"},"content":"import java.util.LinkedHashMap;"},{"lineNumber":8,"author":{"gitID":"Ang-YC"},"content":"import java.util.LinkedList;"},{"lineNumber":9,"author":{"gitID":"Ang-YC"},"content":"import java.util.Locale;"},{"lineNumber":10,"author":{"gitID":"Ang-YC"},"content":"import java.util.Objects;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"Ang-YC"},"content":"import javafx.animation.Animation;"},{"lineNumber":16,"author":{"gitID":"Ang-YC"},"content":"import javafx.animation.KeyFrame;"},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":"import javafx.animation.KeyValue;"},{"lineNumber":18,"author":{"gitID":"Ang-YC"},"content":"import javafx.animation.Timeline;"},{"lineNumber":19,"author":{"gitID":"Ang-YC"},"content":"import javafx.beans.property.DoubleProperty;"},{"lineNumber":20,"author":{"gitID":"Ang-YC"},"content":"import javafx.beans.property.SimpleDoubleProperty;"},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":"import javafx.fxml.FXML;"},{"lineNumber":22,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.Node;"},{"lineNumber":23,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.control.Button;"},{"lineNumber":24,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.control.Label;"},{"lineNumber":25,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.control.ProgressBar;"},{"lineNumber":26,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":27,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.control.SplitPane;"},{"lineNumber":28,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":29,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":30,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":31,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":32,"author":{"gitID":"Ang-YC"},"content":"import javafx.util.Duration;"},{"lineNumber":33,"author":{"gitID":"Ang-YC"},"content":"import javafx.util.Pair;"},{"lineNumber":34,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":35,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.commons.events.ui.InfoPanelChangedEvent;"},{"lineNumber":36,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.commons.events.ui.PersonChangedEvent;"},{"lineNumber":37,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.ui.PersonPanelSelectionChangedEvent;"},{"lineNumber":38,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.commons.events.ui.ShowPanelRequestEvent;"},{"lineNumber":39,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.commons.util.UiUtil;"},{"lineNumber":40,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":41,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.model.person.Rating;"},{"lineNumber":42,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":43,"author":{"gitID":"Ang-YC"},"content":"//@@author Ang-YC"},{"lineNumber":44,"author":{"gitID":"Ang-YC"},"content":"/**"},{"lineNumber":45,"author":{"gitID":"Ang-YC"},"content":" * The Info Panel of the App."},{"lineNumber":46,"author":{"gitID":"Ang-YC"},"content":" */"},{"lineNumber":47,"author":{"gitID":"Ang-YC"},"content":"public class InfoPanel extends UiPart\u003cRegion\u003e {"},{"lineNumber":48,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":49,"author":{"gitID":"Ang-YC"},"content":"    public static final Person DEFAULT_PERSON \u003d null;"},{"lineNumber":50,"author":{"gitID":"Ang-YC"},"content":"    public static final int SPLIT_MIN_WIDTH \u003d 550;"},{"lineNumber":51,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":52,"author":{"gitID":"Ang-YC"},"content":"    public static final String PANEL_NAME \u003d \"InfoPanel\";"},{"lineNumber":53,"author":{"gitID":"Ang-YC"},"content":"    private static final String FXML \u003d \"InfoPanel.fxml\";"},{"lineNumber":54,"author":{"gitID":"Ang-YC"},"content":"    private static final double MAX_ANIMATION_TIME_MS \u003d 150;"},{"lineNumber":55,"author":{"gitID":"Ang-YC"},"content":"    private static final double ANIMATION_DELAY_MS \u003d 15;"},{"lineNumber":56,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":57,"author":{"gitID":"Ang-YC"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(this.getClass());"},{"lineNumber":58,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":59,"author":{"gitID":"Ang-YC"},"content":"    // For animation"},{"lineNumber":60,"author":{"gitID":"Ang-YC"},"content":"    private Person currentSelectedPerson;"},{"lineNumber":61,"author":{"gitID":"Ang-YC"},"content":"    private RadarChart radarChart;"},{"lineNumber":62,"author":{"gitID":"Ang-YC"},"content":"    private ArrayList\u003cAnimation\u003e allAnimation \u003d new ArrayList\u003c\u003e();"},{"lineNumber":63,"author":{"gitID":"Ang-YC"},"content":"    private LinkedList\u003cNode\u003e nodes \u003d new LinkedList\u003c\u003e();"},{"lineNumber":64,"author":{"gitID":"Ang-YC"},"content":"    private boolean animated;"},{"lineNumber":65,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":66,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":67,"author":{"gitID":"Ang-YC"},"content":"    private AnchorPane infoPaneWrapper;"},{"lineNumber":68,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":69,"author":{"gitID":"Ang-YC"},"content":"    private SplitPane infoSplitPane;"},{"lineNumber":70,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":71,"author":{"gitID":"Ang-YC"},"content":"    // Responsive"},{"lineNumber":72,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":73,"author":{"gitID":"Ang-YC"},"content":"    private ScrollPane infoMainPane;"},{"lineNumber":74,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":75,"author":{"gitID":"Ang-YC"},"content":"    private ScrollPane infoSplitMainPane;"},{"lineNumber":76,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":77,"author":{"gitID":"Ang-YC"},"content":"    private VBox infoMain;"},{"lineNumber":78,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":79,"author":{"gitID":"Ang-YC"},"content":"    private AnchorPane infoMainRatings;"},{"lineNumber":80,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":81,"author":{"gitID":"Ang-YC"},"content":"    private AnchorPane infoSplitSidePane;"},{"lineNumber":82,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":83,"author":{"gitID":"Ang-YC"},"content":"    private VBox infoSplitRatings;"},{"lineNumber":84,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":85,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":86,"author":{"gitID":"Ang-YC"},"content":"    private Label infoMainName;"},{"lineNumber":87,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":88,"author":{"gitID":"Ang-YC"},"content":"    private Label infoMainUniversity;"},{"lineNumber":89,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":90,"author":{"gitID":"Ang-YC"},"content":"    private Label infoMainMajorYear;"},{"lineNumber":91,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":92,"author":{"gitID":"Ang-YC"},"content":"    private Label infoMainCgpa;"},{"lineNumber":93,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":94,"author":{"gitID":"Ang-YC"},"content":"    private Label infoMainEmail;"},{"lineNumber":95,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":96,"author":{"gitID":"Ang-YC"},"content":"    private Label infoMainAddress;"},{"lineNumber":97,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":98,"author":{"gitID":"Ang-YC"},"content":"    private Label infoMainPhone;"},{"lineNumber":99,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":100,"author":{"gitID":"Ang-YC"},"content":"    private Label infoMainPosition;"},{"lineNumber":101,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":102,"author":{"gitID":"Ang-YC"},"content":"    private Label infoMainStatus;"},{"lineNumber":103,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":104,"author":{"gitID":"Ang-YC"},"content":"    private Label infoMainComments;"},{"lineNumber":105,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":106,"author":{"gitID":"Ang-YC"},"content":"    // Animation"},{"lineNumber":107,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":108,"author":{"gitID":"Ang-YC"},"content":"    private VBox infoMainPart;"},{"lineNumber":109,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":110,"author":{"gitID":"Ang-YC"},"content":"    private HBox infoMainTopRight;"},{"lineNumber":111,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":112,"author":{"gitID":"Ang-YC"},"content":"    private HBox infoMainContactEmailPane;"},{"lineNumber":113,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":114,"author":{"gitID":"Ang-YC"},"content":"    private HBox infoMainContactAddressPane;"},{"lineNumber":115,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":116,"author":{"gitID":"Ang-YC"},"content":"    private HBox infoMainContactPhonePane;"},{"lineNumber":117,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":118,"author":{"gitID":"Ang-YC"},"content":"    private Label infoMainPositionLabel;"},{"lineNumber":119,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":120,"author":{"gitID":"Ang-YC"},"content":"    private Label infoMainStatusLabel;"},{"lineNumber":121,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":122,"author":{"gitID":"Ang-YC"},"content":"    private VBox infoMainCommentsPane;"},{"lineNumber":123,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":124,"author":{"gitID":"Ang-YC"},"content":"    // Interview"},{"lineNumber":125,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":126,"author":{"gitID":"Ang-YC"},"content":"    private VBox infoMainInterviewDatePane;"},{"lineNumber":127,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":128,"author":{"gitID":"Ang-YC"},"content":"    private Label infoMainInterviewMonth;"},{"lineNumber":129,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":130,"author":{"gitID":"Ang-YC"},"content":"    private Label infoMainInterviewDate;"},{"lineNumber":131,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":132,"author":{"gitID":"Ang-YC"},"content":"    private Label infoMainInterviewDay;"},{"lineNumber":133,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":134,"author":{"gitID":"Ang-YC"},"content":"    private Label infoMainInterviewTime;"},{"lineNumber":135,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":136,"author":{"gitID":"Ang-YC"},"content":"    // Rating"},{"lineNumber":137,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":138,"author":{"gitID":"Ang-YC"},"content":"    private AnchorPane infoSideGraph;"},{"lineNumber":139,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":140,"author":{"gitID":"Ang-YC"},"content":"    private ProgressBar infoRatingTechnical;"},{"lineNumber":141,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":142,"author":{"gitID":"Ang-YC"},"content":"    private ProgressBar infoRatingCommunication;"},{"lineNumber":143,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":144,"author":{"gitID":"Ang-YC"},"content":"    private ProgressBar infoRatingProblemSolving;"},{"lineNumber":145,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":146,"author":{"gitID":"Ang-YC"},"content":"    private ProgressBar infoRatingExperience;"},{"lineNumber":147,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":148,"author":{"gitID":"Ang-YC"},"content":"    private ProgressBar infoRatingOverall;"},{"lineNumber":149,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":150,"author":{"gitID":"Ang-YC"},"content":"    private Label infoRatingTechnicalValue;"},{"lineNumber":151,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":152,"author":{"gitID":"Ang-YC"},"content":"    private Label infoRatingCommunicationValue;"},{"lineNumber":153,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":154,"author":{"gitID":"Ang-YC"},"content":"    private Label infoRatingProblemSolvingValue;"},{"lineNumber":155,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":156,"author":{"gitID":"Ang-YC"},"content":"    private Label infoRatingExperienceValue;"},{"lineNumber":157,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":158,"author":{"gitID":"Ang-YC"},"content":"    private Label infoRatingOverallValue;"},{"lineNumber":159,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":160,"author":{"gitID":"Ang-YC"},"content":"    // Resume"},{"lineNumber":161,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":162,"author":{"gitID":"Ang-YC"},"content":"    private Button infoSideButtonResume;"},{"lineNumber":163,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":164,"author":{"gitID":"Ang-YC"},"content":"    public InfoPanel(boolean animated) {"},{"lineNumber":165,"author":{"gitID":"Ang-YC"},"content":"        super(FXML);"},{"lineNumber":166,"author":{"gitID":"Ang-YC"},"content":"        this.animated \u003d animated;"},{"lineNumber":167,"author":{"gitID":"Ang-YC"},"content":"        setupNodes();"},{"lineNumber":168,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":169,"author":{"gitID":"Ang-YC"},"content":"        radarChart \u003d new RadarChart(Rating.MAXIMUM_SCORE, animated);"},{"lineNumber":170,"author":{"gitID":"Ang-YC"},"content":"        infoSideGraph.getChildren().add(radarChart.getRoot());"},{"lineNumber":171,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":172,"author":{"gitID":"Ang-YC"},"content":"        infoPaneWrapper.widthProperty().addListener((observable, oldValue, newValue) -\u003e {"},{"lineNumber":173,"author":{"gitID":"Ang-YC"},"content":"            handleResize(oldValue.intValue(), newValue.intValue());"},{"lineNumber":174,"author":{"gitID":"Ang-YC"},"content":"        });"},{"lineNumber":175,"author":{"gitID":"Ang-YC"},"content":"        handleResponsive((int) infoPaneWrapper.getWidth());"},{"lineNumber":176,"author":{"gitID":"Ang-YC"},"content":"        registerAsAnEventHandler(this);"},{"lineNumber":177,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":178,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":179,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":180,"author":{"gitID":"Ang-YC"},"content":"    private void showResume() {"},{"lineNumber":181,"author":{"gitID":"Ang-YC"},"content":"        raise(new ShowPanelRequestEvent(PdfPanel.PANEL_NAME));"},{"lineNumber":182,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":183,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":184,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":185,"author":{"gitID":"Ang-YC"},"content":"     * Handle resize when width changed event occurred, then decide whether should trigger responsive handler or not"},{"lineNumber":186,"author":{"gitID":"Ang-YC"},"content":"     * @param oldValue of the width property"},{"lineNumber":187,"author":{"gitID":"Ang-YC"},"content":"     * @param newValue of the width property"},{"lineNumber":188,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":189,"author":{"gitID":"Ang-YC"},"content":"    private void handleResize(int oldValue, int newValue) {"},{"lineNumber":190,"author":{"gitID":"Ang-YC"},"content":"        // Process only if there are differences"},{"lineNumber":191,"author":{"gitID":"Ang-YC"},"content":"        int smaller \u003d Math.min(oldValue, newValue);"},{"lineNumber":192,"author":{"gitID":"Ang-YC"},"content":"        int larger  \u003d Math.max(oldValue, newValue);"},{"lineNumber":193,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":194,"author":{"gitID":"Ang-YC"},"content":"        if (smaller \u003c\u003d SPLIT_MIN_WIDTH \u0026\u0026 larger \u003e\u003d SPLIT_MIN_WIDTH) {"},{"lineNumber":195,"author":{"gitID":"Ang-YC"},"content":"            handleResponsive(newValue);"},{"lineNumber":196,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":197,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":198,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":199,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":200,"author":{"gitID":"Ang-YC"},"content":"     * Handle responsiveness by checking if window should split into two based on {@code SPLIT_MIN_WIDTH}"},{"lineNumber":201,"author":{"gitID":"Ang-YC"},"content":"     * @param width of {@code InfoPanel}"},{"lineNumber":202,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":203,"author":{"gitID":"Ang-YC"},"content":"    private void handleResponsive(int width) {"},{"lineNumber":204,"author":{"gitID":"Ang-YC"},"content":"        if (width \u003e\u003d SPLIT_MIN_WIDTH) {"},{"lineNumber":205,"author":{"gitID":"Ang-YC"},"content":"            infoSplitPane.setVisible(true);"},{"lineNumber":206,"author":{"gitID":"Ang-YC"},"content":"            infoMainPane.setVisible(false);"},{"lineNumber":207,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":208,"author":{"gitID":"Ang-YC"},"content":"            infoMainRatings.getChildren().remove(infoSplitRatings);"},{"lineNumber":209,"author":{"gitID":"Ang-YC"},"content":"            infoSplitSidePane.getChildren().remove(infoSplitRatings);"},{"lineNumber":210,"author":{"gitID":"Ang-YC"},"content":"            infoMainPane.setContent(null);"},{"lineNumber":211,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":212,"author":{"gitID":"Ang-YC"},"content":"            infoSplitMainPane.setContent(infoMain);"},{"lineNumber":213,"author":{"gitID":"Ang-YC"},"content":"            infoSplitSidePane.getChildren().add(infoSplitRatings);"},{"lineNumber":214,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":215,"author":{"gitID":"Ang-YC"},"content":"        } else {"},{"lineNumber":216,"author":{"gitID":"Ang-YC"},"content":"            infoMainPane.setVisible(true);"},{"lineNumber":217,"author":{"gitID":"Ang-YC"},"content":"            infoSplitPane.setVisible(false);"},{"lineNumber":218,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":219,"author":{"gitID":"Ang-YC"},"content":"            infoMainRatings.getChildren().remove(infoSplitRatings);"},{"lineNumber":220,"author":{"gitID":"Ang-YC"},"content":"            infoSplitSidePane.getChildren().remove(infoSplitRatings);"},{"lineNumber":221,"author":{"gitID":"Ang-YC"},"content":"            infoSplitMainPane.setContent(null);"},{"lineNumber":222,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":223,"author":{"gitID":"Ang-YC"},"content":"            infoMainPane.setContent(infoMain);"},{"lineNumber":224,"author":{"gitID":"Ang-YC"},"content":"            infoMainRatings.getChildren().add(infoSplitRatings);"},{"lineNumber":225,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":226,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":227,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":228,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":229,"author":{"gitID":"Ang-YC"},"content":"     * Update the info panel with animation"},{"lineNumber":230,"author":{"gitID":"Ang-YC"},"content":"     * @param fadeOutOnly If set, data will not be loaded and info panel will be faded out"},{"lineNumber":231,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":232,"author":{"gitID":"Ang-YC"},"content":"    private void animateUpdateInfoPanel(boolean fadeOutOnly) {"},{"lineNumber":233,"author":{"gitID":"Ang-YC"},"content":"        // Stop previously started animation"},{"lineNumber":234,"author":{"gitID":"Ang-YC"},"content":"        allAnimation.forEach(Animation::pause);"},{"lineNumber":235,"author":{"gitID":"Ang-YC"},"content":"        allAnimation.clear();"},{"lineNumber":236,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":237,"author":{"gitID":"Ang-YC"},"content":"        if (animated) {"},{"lineNumber":238,"author":{"gitID":"Ang-YC"},"content":"            ArrayList\u003cAnimation\u003e allFadeIn \u003d new ArrayList\u003c\u003e();"},{"lineNumber":239,"author":{"gitID":"Ang-YC"},"content":"            double delay \u003d 0;"},{"lineNumber":240,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":241,"author":{"gitID":"Ang-YC"},"content":"            for (Node node : nodes) {"},{"lineNumber":242,"author":{"gitID":"Ang-YC"},"content":"                delay +\u003d ANIMATION_DELAY_MS;"},{"lineNumber":243,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":244,"author":{"gitID":"Ang-YC"},"content":"                Animation fadeIn \u003d UiUtil.fadeNode(node, true, 0, MAX_ANIMATION_TIME_MS, e -\u003e { });"},{"lineNumber":245,"author":{"gitID":"Ang-YC"},"content":"                fadeIn.setDelay(Duration.millis(delay));"},{"lineNumber":246,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":247,"author":{"gitID":"Ang-YC"},"content":"                allAnimation.add(fadeIn);"},{"lineNumber":248,"author":{"gitID":"Ang-YC"},"content":"                allFadeIn.add(fadeIn);"},{"lineNumber":249,"author":{"gitID":"Ang-YC"},"content":"            }"},{"lineNumber":250,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":251,"author":{"gitID":"Ang-YC"},"content":"            Animation fadeOut \u003d UiUtil.fadeNode(infoMainPart, false, MAX_ANIMATION_TIME_MS, e -\u003e {"},{"lineNumber":252,"author":{"gitID":"Ang-YC"},"content":"                if (!fadeOutOnly) {"},{"lineNumber":253,"author":{"gitID":"Ang-YC"},"content":"                    nodes.forEach(node -\u003e node.setOpacity(0));"},{"lineNumber":254,"author":{"gitID":"Ang-YC"},"content":"                    infoMainPart.setOpacity(1);"},{"lineNumber":255,"author":{"gitID":"Ang-YC"},"content":"                    updateInfoPanel();"},{"lineNumber":256,"author":{"gitID":"Ang-YC"},"content":"                    allFadeIn.forEach(Animation::play);"},{"lineNumber":257,"author":{"gitID":"Ang-YC"},"content":"                }"},{"lineNumber":258,"author":{"gitID":"Ang-YC"},"content":"            });"},{"lineNumber":259,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":260,"author":{"gitID":"Ang-YC"},"content":"            allAnimation.add(fadeOut);"},{"lineNumber":261,"author":{"gitID":"Ang-YC"},"content":"            fadeOut.play();"},{"lineNumber":262,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":263,"author":{"gitID":"Ang-YC"},"content":"        } else {"},{"lineNumber":264,"author":{"gitID":"Ang-YC"},"content":"            infoMainPart.setOpacity(fadeOutOnly ? 0 : 1);"},{"lineNumber":265,"author":{"gitID":"Ang-YC"},"content":"            nodes.forEach(node -\u003e node.setOpacity(1));"},{"lineNumber":266,"author":{"gitID":"Ang-YC"},"content":"            updateInfoPanel();"},{"lineNumber":267,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":268,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":269,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":270,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":271,"author":{"gitID":"Ang-YC"},"content":"     * Animate the display of rating (Progress bar and label)"},{"lineNumber":272,"author":{"gitID":"Ang-YC"},"content":"     * @param rating data to be animated"},{"lineNumber":273,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":274,"author":{"gitID":"Ang-YC"},"content":"    private void animateRating(Rating rating) {"},{"lineNumber":275,"author":{"gitID":"Ang-YC"},"content":"        // Process Rating info"},{"lineNumber":276,"author":{"gitID":"Ang-YC"},"content":"        LinkedHashMap\u003cString, Double\u003e ratingData \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":277,"author":{"gitID":"Ang-YC"},"content":"        ArrayList\u003cPair\u003cDouble, Pair\u003cProgressBar, Label\u003e\u003e\u003e ratingHelper \u003d new ArrayList\u003c\u003e();"},{"lineNumber":278,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":279,"author":{"gitID":"Ang-YC"},"content":"        if (Rating.isValidScore(rating.technicalSkillsScore)"},{"lineNumber":280,"author":{"gitID":"Ang-YC"},"content":"                \u0026\u0026 Rating.isValidScore(rating.communicationSkillsScore)"},{"lineNumber":281,"author":{"gitID":"Ang-YC"},"content":"                \u0026\u0026 Rating.isValidScore(rating.problemSolvingSkillsScore)"},{"lineNumber":282,"author":{"gitID":"Ang-YC"},"content":"                \u0026\u0026 Rating.isValidScore(rating.experienceScore)) {"},{"lineNumber":283,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":284,"author":{"gitID":"Ang-YC"},"content":"            ratingHelper.add(new Pair\u003c\u003e(rating.technicalSkillsScore,"},{"lineNumber":285,"author":{"gitID":"Ang-YC"},"content":"                    new Pair\u003c\u003e(infoRatingTechnical, infoRatingTechnicalValue)));"},{"lineNumber":286,"author":{"gitID":"Ang-YC"},"content":"            ratingHelper.add(new Pair\u003c\u003e(rating.communicationSkillsScore,"},{"lineNumber":287,"author":{"gitID":"Ang-YC"},"content":"                    new Pair\u003c\u003e(infoRatingCommunication, infoRatingCommunicationValue)));"},{"lineNumber":288,"author":{"gitID":"Ang-YC"},"content":"            ratingHelper.add(new Pair\u003c\u003e(rating.problemSolvingSkillsScore,"},{"lineNumber":289,"author":{"gitID":"Ang-YC"},"content":"                    new Pair\u003c\u003e(infoRatingProblemSolving, infoRatingProblemSolvingValue)));"},{"lineNumber":290,"author":{"gitID":"Ang-YC"},"content":"            ratingHelper.add(new Pair\u003c\u003e(rating.experienceScore,"},{"lineNumber":291,"author":{"gitID":"Ang-YC"},"content":"                    new Pair\u003c\u003e(infoRatingExperience, infoRatingExperienceValue)));"},{"lineNumber":292,"author":{"gitID":"Ang-YC"},"content":"            ratingHelper.add(new Pair\u003c\u003e(rating.overallScore,"},{"lineNumber":293,"author":{"gitID":"Ang-YC"},"content":"                    new Pair\u003c\u003e(infoRatingOverall, infoRatingOverallValue)));"},{"lineNumber":294,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":295,"author":{"gitID":"Ang-YC"},"content":"            ratingData.put(\"Technical\", rating.technicalSkillsScore);"},{"lineNumber":296,"author":{"gitID":"Ang-YC"},"content":"            ratingData.put(\"Communication\", rating.communicationSkillsScore);"},{"lineNumber":297,"author":{"gitID":"Ang-YC"},"content":"            ratingData.put(\"Problem\\nSolving\", rating.problemSolvingSkillsScore);"},{"lineNumber":298,"author":{"gitID":"Ang-YC"},"content":"            ratingData.put(\"Experience\", rating.experienceScore);"},{"lineNumber":299,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":300,"author":{"gitID":"Ang-YC"},"content":"            for (Pair\u003cDouble, Pair\u003cProgressBar, Label\u003e\u003e entry : ratingHelper) {"},{"lineNumber":301,"author":{"gitID":"Ang-YC"},"content":"                double rateValue \u003d entry.getKey() / Rating.MAXIMUM_SCORE;"},{"lineNumber":302,"author":{"gitID":"Ang-YC"},"content":"                ProgressBar progressBar \u003d entry.getValue().getKey();"},{"lineNumber":303,"author":{"gitID":"Ang-YC"},"content":"                Label label \u003d entry.getValue().getValue();"},{"lineNumber":304,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":305,"author":{"gitID":"Ang-YC"},"content":"                if (animated) {"},{"lineNumber":306,"author":{"gitID":"Ang-YC"},"content":"                    DoubleProperty value \u003d new SimpleDoubleProperty(0);"},{"lineNumber":307,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":308,"author":{"gitID":"Ang-YC"},"content":"                    Timeline timeline \u003d new Timeline("},{"lineNumber":309,"author":{"gitID":"Ang-YC"},"content":"                            new KeyFrame(Duration.millis(rateValue * RadarChart.MAX_ANIMATION_TIME_MS),"},{"lineNumber":310,"author":{"gitID":"Ang-YC"},"content":"                                    new KeyValue(value, rateValue, UiUtil.EASE_OUT_CUBIC))"},{"lineNumber":311,"author":{"gitID":"Ang-YC"},"content":"                    );"},{"lineNumber":312,"author":{"gitID":"Ang-YC"},"content":"                    timeline.setAutoReverse(false);"},{"lineNumber":313,"author":{"gitID":"Ang-YC"},"content":"                    timeline.setCycleCount(1);"},{"lineNumber":314,"author":{"gitID":"Ang-YC"},"content":"                    timeline.play();"},{"lineNumber":315,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":316,"author":{"gitID":"Ang-YC"},"content":"                    value.addListener((observable, oldValue, newValue) -\u003e {"},{"lineNumber":317,"author":{"gitID":"Ang-YC"},"content":"                        progressBar.setProgress(newValue.doubleValue());"},{"lineNumber":318,"author":{"gitID":"Ang-YC"},"content":"                        label.setText(UiUtil.toFixed(newValue.doubleValue() * Rating.MAXIMUM_SCORE, 2));"},{"lineNumber":319,"author":{"gitID":"Ang-YC"},"content":"                    });"},{"lineNumber":320,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":321,"author":{"gitID":"Ang-YC"},"content":"                    allAnimation.add(timeline);"},{"lineNumber":322,"author":{"gitID":"Ang-YC"},"content":"                } else {"},{"lineNumber":323,"author":{"gitID":"Ang-YC"},"content":"                    progressBar.setProgress(rateValue);"},{"lineNumber":324,"author":{"gitID":"Ang-YC"},"content":"                    label.setText(UiUtil.toFixed(rateValue * Rating.MAXIMUM_SCORE, 2));"},{"lineNumber":325,"author":{"gitID":"Ang-YC"},"content":"                }"},{"lineNumber":326,"author":{"gitID":"Ang-YC"},"content":"            }"},{"lineNumber":327,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":328,"author":{"gitID":"Ang-YC"},"content":"        } else {"},{"lineNumber":329,"author":{"gitID":"Ang-YC"},"content":"            infoRatingTechnical.setProgress(0);"},{"lineNumber":330,"author":{"gitID":"Ang-YC"},"content":"            infoRatingCommunication.setProgress(0);"},{"lineNumber":331,"author":{"gitID":"Ang-YC"},"content":"            infoRatingProblemSolving.setProgress(0);"},{"lineNumber":332,"author":{"gitID":"Ang-YC"},"content":"            infoRatingExperience.setProgress(0);"},{"lineNumber":333,"author":{"gitID":"Ang-YC"},"content":"            infoRatingOverall.setProgress(0);"},{"lineNumber":334,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":335,"author":{"gitID":"Ang-YC"},"content":"            infoRatingTechnicalValue.setText(\"0.00\");"},{"lineNumber":336,"author":{"gitID":"Ang-YC"},"content":"            infoRatingCommunicationValue.setText(\"0.00\");"},{"lineNumber":337,"author":{"gitID":"Ang-YC"},"content":"            infoRatingProblemSolvingValue.setText(\"0.00\");"},{"lineNumber":338,"author":{"gitID":"Ang-YC"},"content":"            infoRatingExperienceValue.setText(\"0.00\");"},{"lineNumber":339,"author":{"gitID":"Ang-YC"},"content":"            infoRatingOverallValue.setText(\"0.00\");"},{"lineNumber":340,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":341,"author":{"gitID":"Ang-YC"},"content":"            ratingData.put(\"Technical\", 0.0);"},{"lineNumber":342,"author":{"gitID":"Ang-YC"},"content":"            ratingData.put(\"Communication\", 0.0);"},{"lineNumber":343,"author":{"gitID":"Ang-YC"},"content":"            ratingData.put(\"Problem\\nSolving\", 0.0);"},{"lineNumber":344,"author":{"gitID":"Ang-YC"},"content":"            ratingData.put(\"Experience\", 0.0);"},{"lineNumber":345,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":346,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":347,"author":{"gitID":"Ang-YC"},"content":"        radarChart.setData(ratingData);"},{"lineNumber":348,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":349,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":350,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":351,"author":{"gitID":"Ang-YC"},"content":"     * Setup nodes to be animated, order matters"},{"lineNumber":352,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":353,"author":{"gitID":"Ang-YC"},"content":"    private void setupNodes() {"},{"lineNumber":354,"author":{"gitID":"Ang-YC"},"content":"        nodes.add(infoMainName);"},{"lineNumber":355,"author":{"gitID":"Ang-YC"},"content":"        nodes.add(infoMainTopRight);"},{"lineNumber":356,"author":{"gitID":"Ang-YC"},"content":"        nodes.add(infoMainUniversity);"},{"lineNumber":357,"author":{"gitID":"Ang-YC"},"content":"        nodes.add(infoMainMajorYear);"},{"lineNumber":358,"author":{"gitID":"Ang-YC"},"content":"        nodes.add(infoMainContactEmailPane);"},{"lineNumber":359,"author":{"gitID":"Ang-YC"},"content":"        nodes.add(infoMainContactAddressPane);"},{"lineNumber":360,"author":{"gitID":"Ang-YC"},"content":"        nodes.add(infoMainContactPhonePane);"},{"lineNumber":361,"author":{"gitID":"Ang-YC"},"content":"        nodes.add(infoMainInterviewDatePane);"},{"lineNumber":362,"author":{"gitID":"Ang-YC"},"content":"        nodes.add(infoMainPositionLabel);"},{"lineNumber":363,"author":{"gitID":"Ang-YC"},"content":"        nodes.add(infoMainPosition);"},{"lineNumber":364,"author":{"gitID":"Ang-YC"},"content":"        nodes.add(infoMainStatusLabel);"},{"lineNumber":365,"author":{"gitID":"Ang-YC"},"content":"        nodes.add(infoMainStatus);"},{"lineNumber":366,"author":{"gitID":"Ang-YC"},"content":"        nodes.add(infoMainCommentsPane);"},{"lineNumber":367,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":368,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":369,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":370,"author":{"gitID":"Ang-YC"},"content":"     * Hide the info panel (When fade is done on MainWindow)"},{"lineNumber":371,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":372,"author":{"gitID":"Ang-YC"},"content":"    public void hide() {"},{"lineNumber":373,"author":{"gitID":"Ang-YC"},"content":"        infoMainPart.setOpacity(0);"},{"lineNumber":374,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":375,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":376,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":377,"author":{"gitID":"Ang-YC"},"content":"     * Show the info panel (When fade is done on MainWindow)"},{"lineNumber":378,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":379,"author":{"gitID":"Ang-YC"},"content":"    public void show() {"},{"lineNumber":380,"author":{"gitID":"Ang-YC"},"content":"        animateUpdateInfoPanel(false);"},{"lineNumber":381,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":382,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":383,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":384,"author":{"gitID":"Ang-YC"},"content":"     * Update the info panel with the latest information"},{"lineNumber":385,"author":{"gitID":"Ang-YC"},"content":"     * It can be updated from address book change or selection change"},{"lineNumber":386,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":387,"author":{"gitID":"Ang-YC"},"content":"    private void updateInfoPanel() {"},{"lineNumber":388,"author":{"gitID":"Ang-YC"},"content":"        if (currentSelectedPerson \u003d\u003d null) {"},{"lineNumber":389,"author":{"gitID":"Ang-YC"},"content":"            return;"},{"lineNumber":390,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":391,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":392,"author":{"gitID":"Ang-YC"},"content":"        Person person \u003d currentSelectedPerson;"},{"lineNumber":393,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":394,"author":{"gitID":"Ang-YC"},"content":"        infoMainName.setText(person.getName().fullName);"},{"lineNumber":395,"author":{"gitID":"Ang-YC"},"content":"        infoMainUniversity.setText(person.getUniversity().value);"},{"lineNumber":396,"author":{"gitID":"Ang-YC"},"content":"        infoMainMajorYear.setText(person.getMajor() + \" (Expected \" + person.getExpectedGraduationYear().value + \")\");"},{"lineNumber":397,"author":{"gitID":"Ang-YC"},"content":"        infoMainCgpa.setText(UiUtil.toFixed(person.getGradePointAverage().value, 2));"},{"lineNumber":398,"author":{"gitID":"Ang-YC"},"content":"        infoMainEmail.setText(person.getEmail().value);"},{"lineNumber":399,"author":{"gitID":"Ang-YC"},"content":"        infoMainAddress.setText(person.getAddress().value);"},{"lineNumber":400,"author":{"gitID":"Ang-YC"},"content":"        infoMainPhone.setText(person.getPhone().value);"},{"lineNumber":401,"author":{"gitID":"Ang-YC"},"content":"        infoMainPosition.setText(person.getJobApplied().value);"},{"lineNumber":402,"author":{"gitID":"Ang-YC"},"content":"        infoMainStatus.setText(person.getStatus().value);"},{"lineNumber":403,"author":{"gitID":"Ang-YC"},"content":"        infoMainStatus.setStyle(\"-fx-text-fill: \" + UiUtil.colorToHex(person.getStatus().color));"},{"lineNumber":404,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":405,"author":{"gitID":"Ang-YC"},"content":"        // Update comment"},{"lineNumber":406,"author":{"gitID":"Ang-YC"},"content":"        String comment \u003d person.getComment().value;"},{"lineNumber":407,"author":{"gitID":"Ang-YC"},"content":"        infoMainComments.setText(comment \u003d\u003d null ? \"\" : comment);"},{"lineNumber":408,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":409,"author":{"gitID":"Ang-YC"},"content":"        // Disable resume if it is null"},{"lineNumber":410,"author":{"gitID":"Ang-YC"},"content":"        boolean resumeAvailable \u003d (person.getResume().value !\u003d null);"},{"lineNumber":411,"author":{"gitID":"Ang-YC"},"content":"        infoSideButtonResume.setDisable(!resumeAvailable);"},{"lineNumber":412,"author":{"gitID":"Ang-YC"},"content":"        infoSideButtonResume.setText(resumeAvailable ? \"View resume\" : \"Resume not available\");"},{"lineNumber":413,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":414,"author":{"gitID":"Ang-YC"},"content":"        // Process Interview info"},{"lineNumber":415,"author":{"gitID":"Ang-YC"},"content":"        LocalDateTime interviewDate \u003d person.getInterviewDate().getDateTime();"},{"lineNumber":416,"author":{"gitID":"Ang-YC"},"content":"        if (interviewDate !\u003d null) {"},{"lineNumber":417,"author":{"gitID":"Ang-YC"},"content":"            infoMainInterviewMonth.setText(interviewDate.getMonth().getDisplayName(TextStyle.SHORT, Locale.ENGLISH));"},{"lineNumber":418,"author":{"gitID":"Ang-YC"},"content":"            infoMainInterviewDate.setText(String.valueOf(interviewDate.getDayOfMonth()));"},{"lineNumber":419,"author":{"gitID":"Ang-YC"},"content":"            infoMainInterviewDay.setText(interviewDate.getDayOfWeek().getDisplayName(TextStyle.SHORT, Locale.ENGLISH));"},{"lineNumber":420,"author":{"gitID":"Ang-YC"},"content":"            infoMainInterviewTime.setText(DateTimeFormatter.ofPattern(\"hh:mma\", Locale.ENGLISH)"},{"lineNumber":421,"author":{"gitID":"Ang-YC"},"content":"                    .format(interviewDate).toLowerCase());"},{"lineNumber":422,"author":{"gitID":"Ang-YC"},"content":"            infoMainInterviewDatePane.setVisible(true);"},{"lineNumber":423,"author":{"gitID":"Ang-YC"},"content":"        } else {"},{"lineNumber":424,"author":{"gitID":"Ang-YC"},"content":"            infoMainInterviewDatePane.setVisible(false);"},{"lineNumber":425,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":426,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":427,"author":{"gitID":"Ang-YC"},"content":"        animateRating(person.getRating());"},{"lineNumber":428,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":429,"author":{"gitID":"Ang-YC"},"content":"        // Scroll to top"},{"lineNumber":430,"author":{"gitID":"Ang-YC"},"content":"        infoMainPane.setVvalue(0);"},{"lineNumber":431,"author":{"gitID":"Ang-YC"},"content":"        infoSplitMainPane.setVvalue(0);"},{"lineNumber":432,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":433,"author":{"gitID":"Ang-YC"},"content":"        // Set user data for test"},{"lineNumber":434,"author":{"gitID":"Ang-YC"},"content":"        infoPaneWrapper.setUserData(currentSelectedPerson);"},{"lineNumber":435,"author":{"gitID":"Ang-YC"},"content":"        infoPaneWrapper.fireEvent(new InfoPanelChangedEvent());"},{"lineNumber":436,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":437,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":438,"author":{"gitID":"Ang-YC"},"content":"    @Subscribe"},{"lineNumber":439,"author":{"gitID":"Ang-YC"},"content":"    private void handlePersonPanelSelectionChangedEvent(PersonPanelSelectionChangedEvent event) {"},{"lineNumber":440,"author":{"gitID":"Ang-YC"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":441,"author":{"gitID":"Ang-YC"},"content":"        PersonCard newSelected \u003d event.getNewSelection();"},{"lineNumber":442,"author":{"gitID":"Ang-YC"},"content":"        Person newSelectedPerson \u003d (newSelected \u003d\u003d null) ? null : newSelected.getPerson();"},{"lineNumber":443,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":444,"author":{"gitID":"Ang-YC"},"content":"        if (newSelectedPerson \u003d\u003d null) {"},{"lineNumber":445,"author":{"gitID":"Ang-YC"},"content":"            raise(new ShowPanelRequestEvent(\"WelcomePane\"));"},{"lineNumber":446,"author":{"gitID":"Ang-YC"},"content":"        } else {"},{"lineNumber":447,"author":{"gitID":"Ang-YC"},"content":"            raise(new ShowPanelRequestEvent(InfoPanel.PANEL_NAME));"},{"lineNumber":448,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":449,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":450,"author":{"gitID":"Ang-YC"},"content":"        // Update if only the person selected is not what is currently shown"},{"lineNumber":451,"author":{"gitID":"Ang-YC"},"content":"        if (!Objects.equals(newSelectedPerson, currentSelectedPerson)) {"},{"lineNumber":452,"author":{"gitID":"Ang-YC"},"content":"            currentSelectedPerson \u003d newSelectedPerson;"},{"lineNumber":453,"author":{"gitID":"Ang-YC"},"content":"            animateUpdateInfoPanel(currentSelectedPerson \u003d\u003d null);"},{"lineNumber":454,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":455,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":456,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":457,"author":{"gitID":"Ang-YC"},"content":"    @Subscribe"},{"lineNumber":458,"author":{"gitID":"Ang-YC"},"content":"    private void handlePersonChangedEvent(PersonChangedEvent event) {"},{"lineNumber":459,"author":{"gitID":"Ang-YC"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":460,"author":{"gitID":"Ang-YC"},"content":"        Person source \u003d event.getSource();"},{"lineNumber":461,"author":{"gitID":"Ang-YC"},"content":"        Person target \u003d event.getTarget();"},{"lineNumber":462,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":463,"author":{"gitID":"Ang-YC"},"content":"        // Update if the person changed is what is currently shown"},{"lineNumber":464,"author":{"gitID":"Ang-YC"},"content":"        // Don\u0027t update if the person is the same (+ quickfix for Rating and Resume)"},{"lineNumber":465,"author":{"gitID":"Ang-YC"},"content":"        if (currentSelectedPerson !\u003d null \u0026\u0026 currentSelectedPerson.equals(source) \u0026\u0026 target !\u003d null"},{"lineNumber":466,"author":{"gitID":"Ang-YC"},"content":"                \u0026\u0026 !currentSelectedPerson.infoEquals(target)) {"},{"lineNumber":467,"author":{"gitID":"Ang-YC"},"content":"            currentSelectedPerson \u003d target;"},{"lineNumber":468,"author":{"gitID":"Ang-YC"},"content":"            animateUpdateInfoPanel(false);"},{"lineNumber":469,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":470,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":471,"author":{"gitID":"Ang-YC"},"content":"}"}],"authorContributionMap":{"-":5,"Ang-YC":466}},{"path":"src/main/java/seedu/address/ui/TitleBar.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.time.Clock;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.Date;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import javafx.application.Platform;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import javafx.fxml.FXML;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import javafx.scene.control.Label;"},{"lineNumber":12,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.input.MouseButton;"},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.input.MouseEvent;"},{"lineNumber":14,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.layout.Pane;"},{"lineNumber":15,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":16,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.model.AddressBookChangedEvent;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.ui.ExitAppRequestEvent;"},{"lineNumber":20,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.commons.events.ui.MaximizeAppRequestEvent;"},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.commons.events.ui.MinimizeAppRequestEvent;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.ui.ShowHelpRequestEvent;"},{"lineNumber":23,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":24,"author":{"gitID":"Ang-YC"},"content":"/**"},{"lineNumber":25,"author":{"gitID":"Ang-YC"},"content":" * UI for the title bar that is displayed at the top of the application."},{"lineNumber":26,"author":{"gitID":"Ang-YC"},"content":" */"},{"lineNumber":27,"author":{"gitID":"Ang-YC"},"content":"public class TitleBar extends UiPart\u003cRegion\u003e {"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    public static final String SYNC_STATUS_INITIAL \u003d \"Not updated yet in this session\";"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    public static final String SYNC_STATUS_UPDATED \u003d \"Last Updated: %s\";"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":33,"author":{"gitID":"-"},"content":"     * Used to generate time stamps."},{"lineNumber":34,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":35,"author":{"gitID":"-"},"content":"     * TODO: change clock to an instance variable."},{"lineNumber":36,"author":{"gitID":"-"},"content":"     * We leave it as a static variable because manual dependency injection"},{"lineNumber":37,"author":{"gitID":"-"},"content":"     * will require passing down the clock reference all the way from MainApp,"},{"lineNumber":38,"author":{"gitID":"-"},"content":"     * but it should be easier once we have factories/DI frameworks."},{"lineNumber":39,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    private static Clock clock \u003d Clock.systemDefaultZone();"},{"lineNumber":41,"author":{"gitID":"-"},"content":""},{"lineNumber":42,"author":{"gitID":"Ang-YC"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(TitleBar.class);"},{"lineNumber":43,"author":{"gitID":"Ang-YC"},"content":"    private static final String FXML \u003d \"TitleBar.fxml\";"},{"lineNumber":44,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":45,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":46,"author":{"gitID":"Ang-YC"},"content":"    private Label topStatusMessage;"},{"lineNumber":47,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":48,"author":{"gitID":"Ang-YC"},"content":"    private Label topStatusFile;"},{"lineNumber":49,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":50,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":51,"author":{"gitID":"Ang-YC"},"content":"    private Pane controlHelp;"},{"lineNumber":52,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":53,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":54,"author":{"gitID":"Ang-YC"},"content":"    public TitleBar(String saveLocation) {"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        super(FXML);"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        setSyncStatus(SYNC_STATUS_INITIAL);"},{"lineNumber":57,"author":{"gitID":"-"},"content":"        setSaveLocation(\"./\" + saveLocation);"},{"lineNumber":58,"author":{"gitID":"-"},"content":"        registerAsAnEventHandler(this);"},{"lineNumber":59,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":60,"author":{"gitID":"-"},"content":""},{"lineNumber":61,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":62,"author":{"gitID":"-"},"content":"     * Sets the clock used to determine the current time."},{"lineNumber":63,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":64,"author":{"gitID":"-"},"content":"    public static void setClock(Clock clock) {"},{"lineNumber":65,"author":{"gitID":"Ang-YC"},"content":"        TitleBar.clock \u003d clock;"},{"lineNumber":66,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":67,"author":{"gitID":"-"},"content":""},{"lineNumber":68,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":69,"author":{"gitID":"-"},"content":"     * Returns the clock currently in use."},{"lineNumber":70,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":71,"author":{"gitID":"-"},"content":"    public static Clock getClock() {"},{"lineNumber":72,"author":{"gitID":"-"},"content":"        return clock;"},{"lineNumber":73,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitID":"-"},"content":""},{"lineNumber":75,"author":{"gitID":"-"},"content":"    private void setSaveLocation(String location) {"},{"lineNumber":76,"author":{"gitID":"Ang-YC"},"content":"        Platform.runLater(() -\u003e this.topStatusFile.setText(location));"},{"lineNumber":77,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":78,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":79,"author":{"gitID":"Ang-YC"},"content":"    private void setSyncStatus(String status) {"},{"lineNumber":80,"author":{"gitID":"Ang-YC"},"content":"        Platform.runLater(() -\u003e this.topStatusMessage.setText(status));"},{"lineNumber":81,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":82,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":83,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":84,"author":{"gitID":"Ang-YC"},"content":"     * Return {@code controlHelp} pane, it will show help window when clicked."},{"lineNumber":85,"author":{"gitID":"Ang-YC"},"content":"     * @return {@code controlHelp} pane, to be used to bind accelerator by {@link MainWindow}"},{"lineNumber":86,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":87,"author":{"gitID":"Ang-YC"},"content":"    protected Pane getControlHelp() {"},{"lineNumber":88,"author":{"gitID":"Ang-YC"},"content":"        return controlHelp;"},{"lineNumber":89,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":90,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":91,"author":{"gitID":"Ang-YC"},"content":"    //@@author Ang-YC"},{"lineNumber":92,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":93,"author":{"gitID":"Ang-YC"},"content":"     * Opens the help window."},{"lineNumber":94,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":95,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":96,"author":{"gitID":"Ang-YC"},"content":"    public void handleHelp(MouseEvent event) {"},{"lineNumber":97,"author":{"gitID":"Ang-YC"},"content":"        if (MouseButton.PRIMARY.equals(event.getButton())) {"},{"lineNumber":98,"author":{"gitID":"Ang-YC"},"content":"            HelpWindow helpWindow \u003d new HelpWindow();"},{"lineNumber":99,"author":{"gitID":"Ang-YC"},"content":"            helpWindow.show();"},{"lineNumber":100,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":101,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":102,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":103,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":104,"author":{"gitID":"Ang-YC"},"content":"     * Minimizes the application."},{"lineNumber":105,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":106,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":107,"author":{"gitID":"Ang-YC"},"content":"    private void handleMinimize(MouseEvent event) {"},{"lineNumber":108,"author":{"gitID":"Ang-YC"},"content":"        if (MouseButton.PRIMARY.equals(event.getButton())) {"},{"lineNumber":109,"author":{"gitID":"Ang-YC"},"content":"            raise(new MinimizeAppRequestEvent());"},{"lineNumber":110,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":111,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":112,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":113,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":114,"author":{"gitID":"Ang-YC"},"content":"     * Maximizes the application."},{"lineNumber":115,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":116,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":117,"author":{"gitID":"Ang-YC"},"content":"    private void handleMaximize(MouseEvent event) {"},{"lineNumber":118,"author":{"gitID":"Ang-YC"},"content":"        if (MouseButton.PRIMARY.equals(event.getButton())) {"},{"lineNumber":119,"author":{"gitID":"Ang-YC"},"content":"            raise(new MaximizeAppRequestEvent());"},{"lineNumber":120,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":121,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":122,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":123,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":124,"author":{"gitID":"Ang-YC"},"content":"     * Closes the application."},{"lineNumber":125,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":126,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":127,"author":{"gitID":"Ang-YC"},"content":"    private void handleExit(MouseEvent event) {"},{"lineNumber":128,"author":{"gitID":"Ang-YC"},"content":"        if (MouseButton.PRIMARY.equals(event.getButton())) {"},{"lineNumber":129,"author":{"gitID":"Ang-YC"},"content":"            raise(new ExitAppRequestEvent());"},{"lineNumber":130,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":131,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":132,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":133,"author":{"gitID":"Ang-YC"},"content":"    @Subscribe"},{"lineNumber":134,"author":{"gitID":"Ang-YC"},"content":"    private void handleShowHelpEvent(ShowHelpRequestEvent event) {"},{"lineNumber":135,"author":{"gitID":"Ang-YC"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":136,"author":{"gitID":"Ang-YC"},"content":"        HelpWindow helpWindow \u003d new HelpWindow();"},{"lineNumber":137,"author":{"gitID":"Ang-YC"},"content":"        helpWindow.show();"},{"lineNumber":138,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":139,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":140,"author":{"gitID":"Ang-YC"},"content":"    @Subscribe"},{"lineNumber":141,"author":{"gitID":"Ang-YC"},"content":"    public void handleAddressBookChangedEvent(AddressBookChangedEvent abce) {"},{"lineNumber":142,"author":{"gitID":"Ang-YC"},"content":"        long now \u003d clock.millis();"},{"lineNumber":143,"author":{"gitID":"Ang-YC"},"content":"        String lastUpdated \u003d new Date(now).toString();"},{"lineNumber":144,"author":{"gitID":"Ang-YC"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(abce, \"Setting last updated status to \" + lastUpdated));"},{"lineNumber":145,"author":{"gitID":"Ang-YC"},"content":"        setSyncStatus(String.format(SYNC_STATUS_UPDATED, lastUpdated));"},{"lineNumber":146,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":147,"author":{"gitID":"Ang-YC"},"content":"}"}],"authorContributionMap":{"-":49,"Ang-YC":98}},{"path":"src/main/java/seedu/address/commons/util/DoubleUtil.java","lines":[{"lineNumber":1,"author":{"gitID":"kexiaowen"},"content":"package seedu.address.commons.util;"},{"lineNumber":2,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":3,"author":{"gitID":"kexiaowen"},"content":"import java.math.BigDecimal;"},{"lineNumber":4,"author":{"gitID":"kexiaowen"},"content":"import java.math.RoundingMode;"},{"lineNumber":5,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":6,"author":{"gitID":"kexiaowen"},"content":"//@@author kexiaowen"},{"lineNumber":7,"author":{"gitID":"kexiaowen"},"content":"/**"},{"lineNumber":8,"author":{"gitID":"kexiaowen"},"content":" * Helper functions for handling doubles."},{"lineNumber":9,"author":{"gitID":"kexiaowen"},"content":" */"},{"lineNumber":10,"author":{"gitID":"kexiaowen"},"content":"public class DoubleUtil {"},{"lineNumber":11,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":12,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":13,"author":{"gitID":"kexiaowen"},"content":"     * Returns a double rounded to two decimal places."},{"lineNumber":14,"author":{"gitID":"kexiaowen"},"content":"     * Note: Whole numbers will round to one decimal place."},{"lineNumber":15,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":16,"author":{"gitID":"kexiaowen"},"content":"    public static double roundToTwoDecimalPlaces(String value) {"},{"lineNumber":17,"author":{"gitID":"kexiaowen"},"content":"        BigDecimal bd \u003d new BigDecimal(value);"},{"lineNumber":18,"author":{"gitID":"kexiaowen"},"content":"        bd \u003d bd.setScale(2, RoundingMode.HALF_UP);"},{"lineNumber":19,"author":{"gitID":"kexiaowen"},"content":"        return bd.doubleValue();"},{"lineNumber":20,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":22,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":23,"author":{"gitID":"kexiaowen"},"content":"     * Returns a double rounded to two decimal places."},{"lineNumber":24,"author":{"gitID":"kexiaowen"},"content":"     * Note: Whole numbers will round to one decimal place."},{"lineNumber":25,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":26,"author":{"gitID":"kexiaowen"},"content":"    public static double roundToTwoDecimalPlaces(double value) {"},{"lineNumber":27,"author":{"gitID":"kexiaowen"},"content":"        long valueMultipliedByHundred \u003d Math.round(value * 100);"},{"lineNumber":28,"author":{"gitID":"kexiaowen"},"content":"        return (valueMultipliedByHundred / 100.0);"},{"lineNumber":29,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":30,"author":{"gitID":"kexiaowen"},"content":"}"}],"authorContributionMap":{"kexiaowen":30}},{"path":"src/main/java/seedu/address/commons/util/UiUtil.java","lines":[{"lineNumber":1,"author":{"gitID":"Ang-YC"},"content":"package seedu.address.commons.util;"},{"lineNumber":2,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":3,"author":{"gitID":"Ang-YC"},"content":"import java.text.DecimalFormat;"},{"lineNumber":4,"author":{"gitID":"Ang-YC"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitID":"Ang-YC"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitID":"Ang-YC"},"content":"import java.util.Locale;"},{"lineNumber":7,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":8,"author":{"gitID":"Ang-YC"},"content":"import org.apache.commons.lang.StringUtils;"},{"lineNumber":9,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":10,"author":{"gitID":"Ang-YC"},"content":"import javafx.animation.Animation;"},{"lineNumber":11,"author":{"gitID":"Ang-YC"},"content":"import javafx.animation.FadeTransition;"},{"lineNumber":12,"author":{"gitID":"Ang-YC"},"content":"import javafx.animation.Interpolator;"},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":"import javafx.event.ActionEvent;"},{"lineNumber":14,"author":{"gitID":"Ang-YC"},"content":"import javafx.event.EventHandler;"},{"lineNumber":15,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.Node;"},{"lineNumber":16,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":"import javafx.util.Duration;"},{"lineNumber":18,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":19,"author":{"gitID":"Ang-YC"},"content":"//@@author Ang-YC"},{"lineNumber":20,"author":{"gitID":"Ang-YC"},"content":"/**"},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":" * Helper functions for handling UI information"},{"lineNumber":22,"author":{"gitID":"Ang-YC"},"content":" */"},{"lineNumber":23,"author":{"gitID":"Ang-YC"},"content":"public class UiUtil {"},{"lineNumber":24,"author":{"gitID":"Ang-YC"},"content":"    public static final Interpolator EASE_OUT_CUBIC \u003d Interpolator.SPLINE(0.215, 0.61, 0.355, 1);"},{"lineNumber":25,"author":{"gitID":"Ang-YC"},"content":"    private static final String FORMAT_DATE \u003d \"d MMM y\";"},{"lineNumber":26,"author":{"gitID":"Ang-YC"},"content":"    private static final String FORMAT_TIME \u003d \"hh:mm:ssa\";"},{"lineNumber":27,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":28,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":29,"author":{"gitID":"Ang-YC"},"content":"     * Convert double into string with {@code points} amount of decimal places"},{"lineNumber":30,"author":{"gitID":"Ang-YC"},"content":"     * @param decimal The double to be formatted"},{"lineNumber":31,"author":{"gitID":"Ang-YC"},"content":"     * @param points Number of decimal places"},{"lineNumber":32,"author":{"gitID":"Ang-YC"},"content":"     * @return the formatted string with {@code points} number of decimal places"},{"lineNumber":33,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":34,"author":{"gitID":"Ang-YC"},"content":"    public static String toFixed(double decimal, int points) {"},{"lineNumber":35,"author":{"gitID":"Ang-YC"},"content":"        return toFixed(String.valueOf(decimal), points);"},{"lineNumber":36,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":37,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":38,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":39,"author":{"gitID":"Ang-YC"},"content":"     * Convert string representation of decimal into string with {@code points} amount of decimal places"},{"lineNumber":40,"author":{"gitID":"Ang-YC"},"content":"     * @param decimal The string representation of decimal to be formatted"},{"lineNumber":41,"author":{"gitID":"Ang-YC"},"content":"     * @param points Number of decimal places"},{"lineNumber":42,"author":{"gitID":"Ang-YC"},"content":"     * @return the formatted string with {@code points} number of decimal places"},{"lineNumber":43,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":44,"author":{"gitID":"Ang-YC"},"content":"    public static String toFixed(String decimal, int points) {"},{"lineNumber":45,"author":{"gitID":"Ang-YC"},"content":"        double value \u003d Double.parseDouble(decimal);"},{"lineNumber":46,"author":{"gitID":"Ang-YC"},"content":"        String pattern \u003d \"0\";"},{"lineNumber":47,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":48,"author":{"gitID":"Ang-YC"},"content":"        if (points \u003e 0) {"},{"lineNumber":49,"author":{"gitID":"Ang-YC"},"content":"            pattern +\u003d \".\";"},{"lineNumber":50,"author":{"gitID":"Ang-YC"},"content":"            pattern +\u003d StringUtils.repeat(\"0\", points);"},{"lineNumber":51,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":52,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":53,"author":{"gitID":"Ang-YC"},"content":"        DecimalFormat df \u003d new DecimalFormat(pattern);"},{"lineNumber":54,"author":{"gitID":"Ang-YC"},"content":"        return df.format(value);"},{"lineNumber":55,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":57,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":58,"author":{"gitID":"Ang-YC"},"content":"     * Convert JavaFX color into web hex color"},{"lineNumber":59,"author":{"gitID":"Ang-YC"},"content":"     * @param color to be converted"},{"lineNumber":60,"author":{"gitID":"Ang-YC"},"content":"     * @return the web hex String representation of the color"},{"lineNumber":61,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":62,"author":{"gitID":"Ang-YC"},"content":"    public static String colorToHex(Color color) {"},{"lineNumber":63,"author":{"gitID":"Ang-YC"},"content":"        return String.format(\"#%02X%02X%02X\","},{"lineNumber":64,"author":{"gitID":"Ang-YC"},"content":"                (int) (color.getRed() * 255), (int) (color.getGreen() * 255), (int) (color.getBlue() * 255));"},{"lineNumber":65,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":66,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":67,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":68,"author":{"gitID":"Ang-YC"},"content":"     * Fade in or fade out the node, then callback"},{"lineNumber":69,"author":{"gitID":"Ang-YC"},"content":"     * @param node to be faded in or out"},{"lineNumber":70,"author":{"gitID":"Ang-YC"},"content":"     * @param fadeIn If set, the fade will be fade in, otherwise it will be fade out"},{"lineNumber":71,"author":{"gitID":"Ang-YC"},"content":"     * @param from The opacity to start fading from"},{"lineNumber":72,"author":{"gitID":"Ang-YC"},"content":"     * @param maxDuration of the transition should be"},{"lineNumber":73,"author":{"gitID":"Ang-YC"},"content":"     * @param callback after the transition is done"},{"lineNumber":74,"author":{"gitID":"Ang-YC"},"content":"     * @return the {@code Animation} of the transition"},{"lineNumber":75,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":76,"author":{"gitID":"Ang-YC"},"content":"    public static Animation fadeNode(Node node, boolean fadeIn, double from,"},{"lineNumber":77,"author":{"gitID":"Ang-YC"},"content":"                                     double maxDuration, EventHandler\u003cActionEvent\u003e callback) {"},{"lineNumber":78,"author":{"gitID":"Ang-YC"},"content":"        Interpolator easing \u003d fadeIn ? Interpolator.EASE_IN : Interpolator.EASE_OUT;"},{"lineNumber":79,"author":{"gitID":"Ang-YC"},"content":"        double to \u003d fadeIn ? 1 : 0;"},{"lineNumber":80,"author":{"gitID":"Ang-YC"},"content":"        double duration \u003d Math.max(1, Math.abs(from - to) * maxDuration);"},{"lineNumber":81,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":82,"author":{"gitID":"Ang-YC"},"content":"        FadeTransition fade \u003d new FadeTransition(Duration.millis(duration), node);"},{"lineNumber":83,"author":{"gitID":"Ang-YC"},"content":"        fade.setFromValue(from);"},{"lineNumber":84,"author":{"gitID":"Ang-YC"},"content":"        fade.setToValue(to);"},{"lineNumber":85,"author":{"gitID":"Ang-YC"},"content":"        fade.setCycleCount(1);"},{"lineNumber":86,"author":{"gitID":"Ang-YC"},"content":"        fade.setAutoReverse(false);"},{"lineNumber":87,"author":{"gitID":"Ang-YC"},"content":"        fade.setInterpolator(easing);"},{"lineNumber":88,"author":{"gitID":"Ang-YC"},"content":"        fade.setOnFinished(event -\u003e {"},{"lineNumber":89,"author":{"gitID":"Ang-YC"},"content":"            if (Math.abs(node.getOpacity() - to) \u003c 1e-3) {"},{"lineNumber":90,"author":{"gitID":"Ang-YC"},"content":"                callback.handle(event);"},{"lineNumber":91,"author":{"gitID":"Ang-YC"},"content":"            }"},{"lineNumber":92,"author":{"gitID":"Ang-YC"},"content":"        });"},{"lineNumber":93,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":94,"author":{"gitID":"Ang-YC"},"content":"        return fade;"},{"lineNumber":95,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":96,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":97,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":98,"author":{"gitID":"Ang-YC"},"content":"     * Fade in or fade out the node, then callback"},{"lineNumber":99,"author":{"gitID":"Ang-YC"},"content":"     * @param node to be faded in or out"},{"lineNumber":100,"author":{"gitID":"Ang-YC"},"content":"     * @param fadeIn If set, the fade will be fade in, otherwise it will be fade out"},{"lineNumber":101,"author":{"gitID":"Ang-YC"},"content":"     * @param maxDuration of the transition should be"},{"lineNumber":102,"author":{"gitID":"Ang-YC"},"content":"     * @param callback after the transition is done"},{"lineNumber":103,"author":{"gitID":"Ang-YC"},"content":"     * @return the {@code Animation} of the transition"},{"lineNumber":104,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":105,"author":{"gitID":"Ang-YC"},"content":"    public static Animation fadeNode(Node node, boolean fadeIn,"},{"lineNumber":106,"author":{"gitID":"Ang-YC"},"content":"                                     double maxDuration, EventHandler\u003cActionEvent\u003e callback) {"},{"lineNumber":107,"author":{"gitID":"Ang-YC"},"content":"        double from \u003d node.getOpacity();"},{"lineNumber":108,"author":{"gitID":"Ang-YC"},"content":"        return fadeNode(node, fadeIn, from, maxDuration, callback);"},{"lineNumber":109,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":110,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":111,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":112,"author":{"gitID":"Ang-YC"},"content":"     * Format date time to more readable format"},{"lineNumber":113,"author":{"gitID":"Ang-YC"},"content":"     * @param dateTime to be formatted"},{"lineNumber":114,"author":{"gitID":"Ang-YC"},"content":"     * @return the formatted date time"},{"lineNumber":115,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":116,"author":{"gitID":"Ang-YC"},"content":"    public static String formatDate(LocalDateTime dateTime) {"},{"lineNumber":117,"author":{"gitID":"Ang-YC"},"content":"        String date \u003d DateTimeFormatter.ofPattern(FORMAT_DATE, Locale.ENGLISH).format(dateTime);"},{"lineNumber":118,"author":{"gitID":"Ang-YC"},"content":"        String time \u003d DateTimeFormatter.ofPattern(FORMAT_TIME, Locale.ENGLISH).format(dateTime).toLowerCase();"},{"lineNumber":119,"author":{"gitID":"Ang-YC"},"content":"        return date + \" \" + time;"},{"lineNumber":120,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":121,"author":{"gitID":"Ang-YC"},"content":"}"}],"authorContributionMap":{"Ang-YC":121}},{"path":"src/main/java/seedu/address/commons/events/ui/MaximizeAppRequestEvent.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.events.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.BaseEvent;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"Ang-YC"},"content":"//@@author Ang-YC"},{"lineNumber":6,"author":{"gitID":"Ang-YC"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"Ang-YC"},"content":" * Indicates a request for App minimize"},{"lineNumber":8,"author":{"gitID":"Ang-YC"},"content":" */"},{"lineNumber":9,"author":{"gitID":"Ang-YC"},"content":"public class MaximizeAppRequestEvent extends BaseEvent {"},{"lineNumber":10,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":11,"author":{"gitID":"Ang-YC"},"content":"    @Override"},{"lineNumber":12,"author":{"gitID":"Ang-YC"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":"        return this.getClass().getSimpleName();"},{"lineNumber":14,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":15,"author":{"gitID":"Ang-YC"},"content":"}"}],"authorContributionMap":{"-":4,"Ang-YC":11}},{"path":"src/main/java/seedu/address/commons/events/ui/PersonChangedEvent.java","lines":[{"lineNumber":1,"author":{"gitID":"Ang-YC"},"content":"package seedu.address.commons.events.ui;"},{"lineNumber":2,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.BaseEvent;"},{"lineNumber":4,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":5,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":6,"author":{"gitID":"Ang-YC"},"content":"//@@author Ang-YC"},{"lineNumber":7,"author":{"gitID":"Ang-YC"},"content":"/**"},{"lineNumber":8,"author":{"gitID":"Ang-YC"},"content":" * Indicates a person change in address book"},{"lineNumber":9,"author":{"gitID":"Ang-YC"},"content":" */"},{"lineNumber":10,"author":{"gitID":"Ang-YC"},"content":"public class PersonChangedEvent extends BaseEvent {"},{"lineNumber":11,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":12,"author":{"gitID":"Ang-YC"},"content":"    private final Person source;"},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":"    private final Person target;"},{"lineNumber":14,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":15,"author":{"gitID":"Ang-YC"},"content":"    public PersonChangedEvent(Person source, Person target) {"},{"lineNumber":16,"author":{"gitID":"Ang-YC"},"content":"        this.source \u003d source;"},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":"        this.target \u003d target;"},{"lineNumber":18,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":20,"author":{"gitID":"Ang-YC"},"content":"    public Person getSource() {"},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":"        return source;"},{"lineNumber":22,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":23,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":24,"author":{"gitID":"Ang-YC"},"content":"    public Person getTarget() {"},{"lineNumber":25,"author":{"gitID":"Ang-YC"},"content":"        return target;"},{"lineNumber":26,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":28,"author":{"gitID":"Ang-YC"},"content":"    @Override"},{"lineNumber":29,"author":{"gitID":"Ang-YC"},"content":"    public String toString() {"},{"lineNumber":30,"author":{"gitID":"Ang-YC"},"content":"        return this.getClass().getSimpleName();"},{"lineNumber":31,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":32,"author":{"gitID":"Ang-YC"},"content":"}"}],"authorContributionMap":{"-":1,"Ang-YC":31}},{"path":"src/main/java/seedu/address/commons/events/ui/InfoPanelChangedEvent.java","lines":[{"lineNumber":1,"author":{"gitID":"Ang-YC"},"content":"package seedu.address.commons.events.ui;"},{"lineNumber":2,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":3,"author":{"gitID":"Ang-YC"},"content":"import javafx.event.Event;"},{"lineNumber":4,"author":{"gitID":"Ang-YC"},"content":"import javafx.event.EventType;"},{"lineNumber":5,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":6,"author":{"gitID":"Ang-YC"},"content":"//@@author Ang-YC"},{"lineNumber":7,"author":{"gitID":"Ang-YC"},"content":"/**"},{"lineNumber":8,"author":{"gitID":"Ang-YC"},"content":" * Indicates a change in Info Panel (Used for automated testing purpose)"},{"lineNumber":9,"author":{"gitID":"Ang-YC"},"content":" */"},{"lineNumber":10,"author":{"gitID":"Ang-YC"},"content":"public class InfoPanelChangedEvent extends Event {"},{"lineNumber":11,"author":{"gitID":"Ang-YC"},"content":"    public static final EventType\u003cInfoPanelChangedEvent\u003e INFO_PANEL_EVENT \u003d"},{"lineNumber":12,"author":{"gitID":"Ang-YC"},"content":"            new EventType\u003c\u003e(\"InfoPanelChangedEvent\");"},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":14,"author":{"gitID":"Ang-YC"},"content":"    public InfoPanelChangedEvent() {"},{"lineNumber":15,"author":{"gitID":"Ang-YC"},"content":"        this(INFO_PANEL_EVENT);"},{"lineNumber":16,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":18,"author":{"gitID":"Ang-YC"},"content":"    public InfoPanelChangedEvent(EventType\u003c? extends Event\u003e eventType) {"},{"lineNumber":19,"author":{"gitID":"Ang-YC"},"content":"        super(eventType);"},{"lineNumber":20,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":"}"}],"authorContributionMap":{"Ang-YC":21}},{"path":"src/main/java/seedu/address/ui/PdfPanel.java","lines":[{"lineNumber":1,"author":{"gitID":"Ang-YC"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":3,"author":{"gitID":"Ang-YC"},"content":"import java.awt.image.BufferedImage;"},{"lineNumber":4,"author":{"gitID":"Ang-YC"},"content":"import java.io.File;"},{"lineNumber":5,"author":{"gitID":"Ang-YC"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitID":"Ang-YC"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitID":"Ang-YC"},"content":"import java.util.logging.Logger;"},{"lineNumber":8,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":9,"author":{"gitID":"Ang-YC"},"content":"import org.apache.pdfbox.pdmodel.PDDocument;"},{"lineNumber":10,"author":{"gitID":"Ang-YC"},"content":"import org.apache.pdfbox.rendering.ImageType;"},{"lineNumber":11,"author":{"gitID":"Ang-YC"},"content":"import org.apache.pdfbox.rendering.PDFRenderer;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"import javafx.application.Platform;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":"import javafx.embed.swing.SwingFXUtils;"},{"lineNumber":18,"author":{"gitID":"Ang-YC"},"content":"import javafx.fxml.FXML;"},{"lineNumber":19,"author":{"gitID":"Ang-YC"},"content":"import javafx.geometry.Bounds;"},{"lineNumber":20,"author":{"gitID":"Ang-YC"},"content":"import javafx.geometry.Insets;"},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.Node;"},{"lineNumber":22,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.control.Label;"},{"lineNumber":23,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.control.ProgressBar;"},{"lineNumber":24,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":25,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.image.Image;"},{"lineNumber":26,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":27,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.input.KeyCode;"},{"lineNumber":28,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.input.KeyEvent;"},{"lineNumber":29,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":30,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":31,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":32,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.commons.events.ui.PersonChangedEvent;"},{"lineNumber":33,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.ui.PersonPanelSelectionChangedEvent;"},{"lineNumber":34,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.commons.events.ui.ShowPanelRequestEvent;"},{"lineNumber":35,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":36,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":37,"author":{"gitID":"Ang-YC"},"content":"//@@author Ang-YC"},{"lineNumber":38,"author":{"gitID":"Ang-YC"},"content":"/**"},{"lineNumber":39,"author":{"gitID":"Ang-YC"},"content":" * The PDF Panel of the App"},{"lineNumber":40,"author":{"gitID":"Ang-YC"},"content":" */"},{"lineNumber":41,"author":{"gitID":"Ang-YC"},"content":"public class PdfPanel extends UiPart\u003cRegion\u003e {"},{"lineNumber":42,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":43,"author":{"gitID":"Ang-YC"},"content":"    public static final String PANEL_NAME \u003d \"PdfPanel\";"},{"lineNumber":44,"author":{"gitID":"Ang-YC"},"content":"    private static final String FXML \u003d \"PdfPanel.fxml\";"},{"lineNumber":45,"author":{"gitID":"Ang-YC"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(this.getClass());"},{"lineNumber":46,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":47,"author":{"gitID":"Ang-YC"},"content":"    private PDDocument pdfDocument;"},{"lineNumber":48,"author":{"gitID":"Ang-YC"},"content":"    private ArrayList\u003cImage\u003e pdfPages;"},{"lineNumber":49,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":50,"author":{"gitID":"Ang-YC"},"content":"    private boolean forceUnload \u003d false;"},{"lineNumber":51,"author":{"gitID":"Ang-YC"},"content":"    private boolean isLoaded \u003d false;"},{"lineNumber":52,"author":{"gitID":"Ang-YC"},"content":"    private boolean loading \u003d false;"},{"lineNumber":53,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":54,"author":{"gitID":"Ang-YC"},"content":"    private Person selectedPerson \u003d null;"},{"lineNumber":55,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":56,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":57,"author":{"gitID":"Ang-YC"},"content":"    private ScrollPane resumePane;"},{"lineNumber":58,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":59,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":60,"author":{"gitID":"Ang-YC"},"content":"    private VBox resumePanePages;"},{"lineNumber":61,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":62,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":63,"author":{"gitID":"Ang-YC"},"content":"    private Label resumePageLabel;"},{"lineNumber":64,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":65,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":66,"author":{"gitID":"Ang-YC"},"content":"    private VBox resumeLoading;"},{"lineNumber":67,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":68,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":69,"author":{"gitID":"Ang-YC"},"content":"    private Label resumeLoadingLabel;"},{"lineNumber":70,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":71,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":72,"author":{"gitID":"Ang-YC"},"content":"    private ProgressBar resumeLoadingBar;"},{"lineNumber":73,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":74,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":75,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":76,"author":{"gitID":"Ang-YC"},"content":"    public PdfPanel() {"},{"lineNumber":77,"author":{"gitID":"Ang-YC"},"content":"        super(FXML);"},{"lineNumber":78,"author":{"gitID":"Ang-YC"},"content":"        setupEscKey();"},{"lineNumber":79,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":80,"author":{"gitID":"Ang-YC"},"content":"        resumePane.widthProperty().addListener((observable, oldValue, newValue) -\u003e handleResizeEvent());"},{"lineNumber":81,"author":{"gitID":"Ang-YC"},"content":"        resumePane.vvalueProperty().addListener((observable, oldValue, newValue) -\u003e handleScrollEvent());"},{"lineNumber":82,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":83,"author":{"gitID":"Ang-YC"},"content":"        registerAsAnEventHandler(this);"},{"lineNumber":84,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":85,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":86,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":87,"author":{"gitID":"Ang-YC"},"content":"     * Setup binding for escape key to hide PDF panel"},{"lineNumber":88,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":89,"author":{"gitID":"Ang-YC"},"content":"    private void setupEscKey() {"},{"lineNumber":90,"author":{"gitID":"Ang-YC"},"content":"        resumePane.addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {"},{"lineNumber":91,"author":{"gitID":"Ang-YC"},"content":"            if (event.getCode().equals(KeyCode.ESCAPE)) {"},{"lineNumber":92,"author":{"gitID":"Ang-YC"},"content":"                cancelResume();"},{"lineNumber":93,"author":{"gitID":"Ang-YC"},"content":"                event.consume();"},{"lineNumber":94,"author":{"gitID":"Ang-YC"},"content":"            }"},{"lineNumber":95,"author":{"gitID":"Ang-YC"},"content":"        });"},{"lineNumber":96,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":97,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":98,"author":{"gitID":"Ang-YC"},"content":"    @FXML"},{"lineNumber":99,"author":{"gitID":"Ang-YC"},"content":"    private void cancelResume() {"},{"lineNumber":100,"author":{"gitID":"Ang-YC"},"content":"        raise(new ShowPanelRequestEvent(InfoPanel.PANEL_NAME));"},{"lineNumber":101,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":102,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":103,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":104,"author":{"gitID":"Ang-YC"},"content":"     * Load the resume of currently selected person"},{"lineNumber":105,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":106,"author":{"gitID":"Ang-YC"},"content":"    public void load() {"},{"lineNumber":107,"author":{"gitID":"Ang-YC"},"content":"        // Retry later if loading"},{"lineNumber":108,"author":{"gitID":"Ang-YC"},"content":"        if (loading) {"},{"lineNumber":109,"author":{"gitID":"Ang-YC"},"content":"            Platform.runLater(this::load);"},{"lineNumber":110,"author":{"gitID":"Ang-YC"},"content":"            return;"},{"lineNumber":111,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":112,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":113,"author":{"gitID":"Ang-YC"},"content":"        // Unload to make sure it is in a clean state"},{"lineNumber":114,"author":{"gitID":"Ang-YC"},"content":"        unload();"},{"lineNumber":115,"author":{"gitID":"Ang-YC"},"content":"        if (selectedPerson \u003d\u003d null) {"},{"lineNumber":116,"author":{"gitID":"Ang-YC"},"content":"            return;"},{"lineNumber":117,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":118,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":119,"author":{"gitID":"Ang-YC"},"content":"        // Check if the user have resume"},{"lineNumber":120,"author":{"gitID":"Ang-YC"},"content":"        String filePath \u003d selectedPerson.getResume().value;"},{"lineNumber":121,"author":{"gitID":"Ang-YC"},"content":"        if (filePath \u003d\u003d null) {"},{"lineNumber":122,"author":{"gitID":"Ang-YC"},"content":"            return;"},{"lineNumber":123,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":124,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":125,"author":{"gitID":"Ang-YC"},"content":"        // Start loading"},{"lineNumber":126,"author":{"gitID":"Ang-YC"},"content":"        loading \u003d true;"},{"lineNumber":127,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":128,"author":{"gitID":"Ang-YC"},"content":"        // Show progress to user"},{"lineNumber":129,"author":{"gitID":"Ang-YC"},"content":"        resumePane.setVisible(false);"},{"lineNumber":130,"author":{"gitID":"Ang-YC"},"content":"        resumeLoadingLabel.setText(\"Opening \" + selectedPerson.getName().fullName + \"\u0027s resume\");"},{"lineNumber":131,"author":{"gitID":"Ang-YC"},"content":"        resumeLoadingBar.setProgress(0);"},{"lineNumber":132,"author":{"gitID":"Ang-YC"},"content":"        resumeLoading.setVisible(true);"},{"lineNumber":133,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":134,"author":{"gitID":"Ang-YC"},"content":"        // Start loading in new thread"},{"lineNumber":135,"author":{"gitID":"Ang-YC"},"content":"        Thread pdfThread \u003d new Thread(() -\u003e loadInNewThread(filePath));"},{"lineNumber":136,"author":{"gitID":"Ang-YC"},"content":"        pdfThread.start();"},{"lineNumber":137,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":138,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":139,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":140,"author":{"gitID":"Ang-YC"},"content":"     * Load resume and render into images in a new thread to prevent thread blocking"},{"lineNumber":141,"author":{"gitID":"Ang-YC"},"content":"     * @param filePath of the resume"},{"lineNumber":142,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":143,"author":{"gitID":"Ang-YC"},"content":"    private void loadInNewThread(String filePath) {"},{"lineNumber":144,"author":{"gitID":"Ang-YC"},"content":"        ArrayList\u003cImage\u003e pages \u003d new ArrayList\u003c\u003e();"},{"lineNumber":145,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":146,"author":{"gitID":"Ang-YC"},"content":"        try {"},{"lineNumber":147,"author":{"gitID":"Ang-YC"},"content":"            // PDF renderer"},{"lineNumber":148,"author":{"gitID":"Ang-YC"},"content":"            PDDocument pdfDocument \u003d PDDocument.load(new File(filePath));"},{"lineNumber":149,"author":{"gitID":"Ang-YC"},"content":"            PDFRenderer pdfRenderer \u003d new PDFRenderer(pdfDocument);"},{"lineNumber":150,"author":{"gitID":"Ang-YC"},"content":"            BufferedImage bufferedImage;"},{"lineNumber":151,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":152,"author":{"gitID":"Ang-YC"},"content":"            int totalPages \u003d pdfDocument.getNumberOfPages();"},{"lineNumber":153,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":154,"author":{"gitID":"Ang-YC"},"content":"            // Generate all images"},{"lineNumber":155,"author":{"gitID":"Ang-YC"},"content":"            for (int currentPage \u003d 0; currentPage \u003c totalPages; currentPage++) {"},{"lineNumber":156,"author":{"gitID":"Ang-YC"},"content":"                try {"},{"lineNumber":157,"author":{"gitID":"Ang-YC"},"content":"                    bufferedImage \u003d pdfRenderer.renderImageWithDPI(currentPage, 150, ImageType.RGB);"},{"lineNumber":158,"author":{"gitID":"Ang-YC"},"content":"                    pages.add(SwingFXUtils.toFXImage(bufferedImage, null));"},{"lineNumber":159,"author":{"gitID":"Ang-YC"},"content":"                } catch (IOException e) {"},{"lineNumber":160,"author":{"gitID":"Ang-YC"},"content":"                    logger.info(\"PdfPanel: Page \" + currentPage + \" render failed\");"},{"lineNumber":161,"author":{"gitID":"Ang-YC"},"content":"                    pages.add(null);"},{"lineNumber":162,"author":{"gitID":"Ang-YC"},"content":"                }"},{"lineNumber":163,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":164,"author":{"gitID":"Ang-YC"},"content":"                // Stop thread and pass back if force unload"},{"lineNumber":165,"author":{"gitID":"Ang-YC"},"content":"                if (forceUnload) {"},{"lineNumber":166,"author":{"gitID":"Ang-YC"},"content":"                    Platform.runLater(() -\u003e imageLoaded(null, null));"},{"lineNumber":167,"author":{"gitID":"Ang-YC"},"content":"                    return;"},{"lineNumber":168,"author":{"gitID":"Ang-YC"},"content":"                }"},{"lineNumber":169,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":170,"author":{"gitID":"Ang-YC"},"content":"                // Update on main thread"},{"lineNumber":171,"author":{"gitID":"Ang-YC"},"content":"                int currentLoaded \u003d currentPage + 1;"},{"lineNumber":172,"author":{"gitID":"Ang-YC"},"content":"                Platform.runLater(() -\u003e update(currentLoaded, totalPages));"},{"lineNumber":173,"author":{"gitID":"Ang-YC"},"content":"            }"},{"lineNumber":174,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":175,"author":{"gitID":"Ang-YC"},"content":"            // Pass back to main thread"},{"lineNumber":176,"author":{"gitID":"Ang-YC"},"content":"            Platform.runLater(() -\u003e imageLoaded(pdfDocument, pages));"},{"lineNumber":177,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":178,"author":{"gitID":"Ang-YC"},"content":"        } catch (IOException e) {"},{"lineNumber":179,"author":{"gitID":"Ang-YC"},"content":"            logger.info(\"PdfPanel: Load of file \" + filePath + \" failed\");"},{"lineNumber":180,"author":{"gitID":"Ang-YC"},"content":"            // Pass back to main thread"},{"lineNumber":181,"author":{"gitID":"Ang-YC"},"content":"            Platform.runLater(() -\u003e imageLoaded(null, null));"},{"lineNumber":182,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":183,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":184,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":185,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":186,"author":{"gitID":"Ang-YC"},"content":"     * Update status of the rendering so user know the status"},{"lineNumber":187,"author":{"gitID":"Ang-YC"},"content":"     * @param currentLoaded number of pages loaded"},{"lineNumber":188,"author":{"gitID":"Ang-YC"},"content":"     * @param totalPages of the PDF document"},{"lineNumber":189,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":190,"author":{"gitID":"Ang-YC"},"content":"    private void update(int currentLoaded, int totalPages) {"},{"lineNumber":191,"author":{"gitID":"Ang-YC"},"content":"        resumeLoadingLabel.setText(\"Loading page \" + currentLoaded + \" of \" + totalPages);"},{"lineNumber":192,"author":{"gitID":"Ang-YC"},"content":"        resumeLoadingBar.setProgress((double) currentLoaded / (double) totalPages);"},{"lineNumber":193,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":194,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":195,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":196,"author":{"gitID":"Ang-YC"},"content":"     * Callback from separate thread indicates all pages are loaded and rendered"},{"lineNumber":197,"author":{"gitID":"Ang-YC"},"content":"     * @param pdfDocument of the opened document"},{"lineNumber":198,"author":{"gitID":"Ang-YC"},"content":"     * @param pages An array of images of all the pages"},{"lineNumber":199,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":200,"author":{"gitID":"Ang-YC"},"content":"    private void imageLoaded(PDDocument pdfDocument, ArrayList\u003cImage\u003e pages) {"},{"lineNumber":201,"author":{"gitID":"Ang-YC"},"content":"        this.pdfDocument \u003d pdfDocument;"},{"lineNumber":202,"author":{"gitID":"Ang-YC"},"content":"        pdfPages \u003d pages;"},{"lineNumber":203,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":204,"author":{"gitID":"Ang-YC"},"content":"        if (pages \u003d\u003d null) {"},{"lineNumber":205,"author":{"gitID":"Ang-YC"},"content":"            isLoaded \u003d false;"},{"lineNumber":206,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":207,"author":{"gitID":"Ang-YC"},"content":"        } else {"},{"lineNumber":208,"author":{"gitID":"Ang-YC"},"content":"            int totalPages \u003d pdfPages.size();"},{"lineNumber":209,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":210,"author":{"gitID":"Ang-YC"},"content":"            // Setup all blank pages"},{"lineNumber":211,"author":{"gitID":"Ang-YC"},"content":"            for (int i \u003d 0; i \u003c totalPages; i++) {"},{"lineNumber":212,"author":{"gitID":"Ang-YC"},"content":"                // Wrap inside VBox for styling"},{"lineNumber":213,"author":{"gitID":"Ang-YC"},"content":"                VBox vBox \u003d new VBox();"},{"lineNumber":214,"author":{"gitID":"Ang-YC"},"content":"                vBox.getStyleClass().add(\"pdf-page\");"},{"lineNumber":215,"author":{"gitID":"Ang-YC"},"content":"                VBox.setMargin(vBox, new Insets(0, 0, 20, 0));"},{"lineNumber":216,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":217,"author":{"gitID":"Ang-YC"},"content":"                // Setup VBox children (ImageView)"},{"lineNumber":218,"author":{"gitID":"Ang-YC"},"content":"                ImageView imageView \u003d new ImageView();"},{"lineNumber":219,"author":{"gitID":"Ang-YC"},"content":"                imageView.setPreserveRatio(true);"},{"lineNumber":220,"author":{"gitID":"Ang-YC"},"content":"                imageView.setCache(true);"},{"lineNumber":221,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":222,"author":{"gitID":"Ang-YC"},"content":"                // Add into view"},{"lineNumber":223,"author":{"gitID":"Ang-YC"},"content":"                vBox.getChildren().add(imageView);"},{"lineNumber":224,"author":{"gitID":"Ang-YC"},"content":"                resumePanePages.getChildren().add(vBox);"},{"lineNumber":225,"author":{"gitID":"Ang-YC"},"content":"            }"},{"lineNumber":226,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":227,"author":{"gitID":"Ang-YC"},"content":"            // Initialize size and scroll detection"},{"lineNumber":228,"author":{"gitID":"Ang-YC"},"content":"            handleResizeEvent();"},{"lineNumber":229,"author":{"gitID":"Ang-YC"},"content":"            handleScrollEvent();"},{"lineNumber":230,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":231,"author":{"gitID":"Ang-YC"},"content":"            // Set label to first page"},{"lineNumber":232,"author":{"gitID":"Ang-YC"},"content":"            resumePageLabel.setText(1 + \" / \" + totalPages);"},{"lineNumber":233,"author":{"gitID":"Ang-YC"},"content":"            resumePageLabel.setVisible(true);"},{"lineNumber":234,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":235,"author":{"gitID":"Ang-YC"},"content":"            isLoaded \u003d true;"},{"lineNumber":236,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":237,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":238,"author":{"gitID":"Ang-YC"},"content":"        resumePane.setVisible(true);"},{"lineNumber":239,"author":{"gitID":"Ang-YC"},"content":"        resumeLoading.setVisible(false);"},{"lineNumber":240,"author":{"gitID":"Ang-YC"},"content":"        loading \u003d false;"},{"lineNumber":241,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":242,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":243,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":244,"author":{"gitID":"Ang-YC"},"content":"     * Unload the PDFPanel to free up resources"},{"lineNumber":245,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":246,"author":{"gitID":"Ang-YC"},"content":"    public void unload() {"},{"lineNumber":247,"author":{"gitID":"Ang-YC"},"content":"        // Force unload enabled"},{"lineNumber":248,"author":{"gitID":"Ang-YC"},"content":"        forceUnload \u003d true;"},{"lineNumber":249,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":250,"author":{"gitID":"Ang-YC"},"content":"        // Retry later if loading"},{"lineNumber":251,"author":{"gitID":"Ang-YC"},"content":"        if (loading) {"},{"lineNumber":252,"author":{"gitID":"Ang-YC"},"content":"            Platform.runLater(this::unload);"},{"lineNumber":253,"author":{"gitID":"Ang-YC"},"content":"            return;"},{"lineNumber":254,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":255,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":256,"author":{"gitID":"Ang-YC"},"content":"        // Only unload when it is imageLoaded"},{"lineNumber":257,"author":{"gitID":"Ang-YC"},"content":"        if (isLoaded) {"},{"lineNumber":258,"author":{"gitID":"Ang-YC"},"content":"            isLoaded \u003d false;"},{"lineNumber":259,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":260,"author":{"gitID":"Ang-YC"},"content":"            // Clear all array"},{"lineNumber":261,"author":{"gitID":"Ang-YC"},"content":"            pdfPages.clear();"},{"lineNumber":262,"author":{"gitID":"Ang-YC"},"content":"            resumePanePages.getChildren().clear();"},{"lineNumber":263,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":264,"author":{"gitID":"Ang-YC"},"content":"            // Hide page"},{"lineNumber":265,"author":{"gitID":"Ang-YC"},"content":"            resumePageLabel.setVisible(false);"},{"lineNumber":266,"author":{"gitID":"Ang-YC"},"content":"            resumePane.setVisible(false);"},{"lineNumber":267,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":268,"author":{"gitID":"Ang-YC"},"content":"            try {"},{"lineNumber":269,"author":{"gitID":"Ang-YC"},"content":"                if (pdfDocument !\u003d null) {"},{"lineNumber":270,"author":{"gitID":"Ang-YC"},"content":"                    pdfDocument.close();"},{"lineNumber":271,"author":{"gitID":"Ang-YC"},"content":"                }"},{"lineNumber":272,"author":{"gitID":"Ang-YC"},"content":"            } catch (IOException e) {"},{"lineNumber":273,"author":{"gitID":"Ang-YC"},"content":"                logger.info(\"PdfPanel: Unload failed\");"},{"lineNumber":274,"author":{"gitID":"Ang-YC"},"content":"            }"},{"lineNumber":275,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":276,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":277,"author":{"gitID":"Ang-YC"},"content":"        forceUnload \u003d false;"},{"lineNumber":278,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":279,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":280,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":281,"author":{"gitID":"Ang-YC"},"content":"     * Handle the resize event by resizing all pages"},{"lineNumber":282,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":283,"author":{"gitID":"Ang-YC"},"content":"    private void handleResizeEvent() {"},{"lineNumber":284,"author":{"gitID":"Ang-YC"},"content":"        // Fit all images to width of the viewport"},{"lineNumber":285,"author":{"gitID":"Ang-YC"},"content":"        double width \u003d resumePane.getWidth() - 40;"},{"lineNumber":286,"author":{"gitID":"Ang-YC"},"content":"        ObservableList\u003cNode\u003e childrens \u003d resumePanePages.getChildren();"},{"lineNumber":287,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":288,"author":{"gitID":"Ang-YC"},"content":"        // Resize all the images"},{"lineNumber":289,"author":{"gitID":"Ang-YC"},"content":"        for (int i \u003d 0; i \u003c childrens.size(); i++) {"},{"lineNumber":290,"author":{"gitID":"Ang-YC"},"content":"            VBox vBox \u003d (VBox) childrens.get(i);"},{"lineNumber":291,"author":{"gitID":"Ang-YC"},"content":"            ImageView imageView \u003d (ImageView) vBox.getChildren().get(0);"},{"lineNumber":292,"author":{"gitID":"Ang-YC"},"content":"            Image page \u003d pdfPages.get(i);"},{"lineNumber":293,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":294,"author":{"gitID":"Ang-YC"},"content":"            // Size have to be fixed so it can maintain the size even when images outside of viewport are cleared"},{"lineNumber":295,"author":{"gitID":"Ang-YC"},"content":"            double aspectRatio \u003d page.getWidth() / page.getHeight();"},{"lineNumber":296,"author":{"gitID":"Ang-YC"},"content":"            imageView.setFitWidth(width);"},{"lineNumber":297,"author":{"gitID":"Ang-YC"},"content":"            imageView.setFitHeight(width / aspectRatio);"},{"lineNumber":298,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":299,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":300,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":301,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":302,"author":{"gitID":"Ang-YC"},"content":"     * Handle the scroll event to lazy load the images into ImageView for performance"},{"lineNumber":303,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":304,"author":{"gitID":"Ang-YC"},"content":"    private void handleScrollEvent() {"},{"lineNumber":305,"author":{"gitID":"Ang-YC"},"content":"        ObservableList\u003cNode\u003e childrens \u003d resumePanePages.getChildren();"},{"lineNumber":306,"author":{"gitID":"Ang-YC"},"content":"        int totalPages \u003d childrens.size();"},{"lineNumber":307,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":308,"author":{"gitID":"Ang-YC"},"content":"        // Compute view boundary (Only display image if visible)"},{"lineNumber":309,"author":{"gitID":"Ang-YC"},"content":"        Bounds viewBound \u003d resumePane.localToScene(resumePane.getBoundsInLocal());"},{"lineNumber":310,"author":{"gitID":"Ang-YC"},"content":"        double viewMinY \u003d viewBound.getMinY();"},{"lineNumber":311,"author":{"gitID":"Ang-YC"},"content":"        double viewMaxY \u003d viewBound.getMaxY();"},{"lineNumber":312,"author":{"gitID":"Ang-YC"},"content":"        double viewMid \u003d (viewMinY + viewMaxY) / 2;"},{"lineNumber":313,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":314,"author":{"gitID":"Ang-YC"},"content":"        for (int i \u003d 0; i \u003c totalPages; i++) {"},{"lineNumber":315,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":316,"author":{"gitID":"Ang-YC"},"content":"            // Compute page boundary"},{"lineNumber":317,"author":{"gitID":"Ang-YC"},"content":"            VBox vBox \u003d (VBox) childrens.get(i);"},{"lineNumber":318,"author":{"gitID":"Ang-YC"},"content":"            Bounds bounds \u003d vBox.localToScene(vBox.getBoundsInLocal());"},{"lineNumber":319,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":320,"author":{"gitID":"Ang-YC"},"content":"            ImageView imageView \u003d (ImageView) vBox.getChildren().get(0);"},{"lineNumber":321,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":322,"author":{"gitID":"Ang-YC"},"content":"            // Check if page is visible in viewport"},{"lineNumber":323,"author":{"gitID":"Ang-YC"},"content":"            if (bounds.getMinY() \u003c viewMaxY \u0026\u0026 bounds.getMaxY() \u003e viewMinY) {"},{"lineNumber":324,"author":{"gitID":"Ang-YC"},"content":"                if (imageView.getImage() \u003d\u003d null) {"},{"lineNumber":325,"author":{"gitID":"Ang-YC"},"content":"                    imageView.setImage(pdfPages.get(i));"},{"lineNumber":326,"author":{"gitID":"Ang-YC"},"content":"                }"},{"lineNumber":327,"author":{"gitID":"Ang-YC"},"content":"            } else {"},{"lineNumber":328,"author":{"gitID":"Ang-YC"},"content":"                imageView.setImage(null);"},{"lineNumber":329,"author":{"gitID":"Ang-YC"},"content":"            }"},{"lineNumber":330,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":331,"author":{"gitID":"Ang-YC"},"content":"            // Update page number label"},{"lineNumber":332,"author":{"gitID":"Ang-YC"},"content":"            if (bounds.getMinY() \u003c viewMid \u0026\u0026 bounds.getMaxY() \u003e viewMid) {"},{"lineNumber":333,"author":{"gitID":"Ang-YC"},"content":"                resumePageLabel.setText((i + 1) + \" / \" + totalPages);"},{"lineNumber":334,"author":{"gitID":"Ang-YC"},"content":"            }"},{"lineNumber":335,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":336,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":337,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":338,"author":{"gitID":"Ang-YC"},"content":"    @Subscribe"},{"lineNumber":339,"author":{"gitID":"Ang-YC"},"content":"    private void handlePersonPanelSelectionChangedEvent(PersonPanelSelectionChangedEvent event) {"},{"lineNumber":340,"author":{"gitID":"Ang-YC"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":341,"author":{"gitID":"Ang-YC"},"content":"        PersonCard selectedCard \u003d event.getNewSelection();"},{"lineNumber":342,"author":{"gitID":"Ang-YC"},"content":"        selectedPerson \u003d (selectedCard \u003d\u003d null) ? null : selectedCard.getPerson();"},{"lineNumber":343,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":344,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":345,"author":{"gitID":"Ang-YC"},"content":"    @Subscribe"},{"lineNumber":346,"author":{"gitID":"Ang-YC"},"content":"    private void handlePersonChangedEvent(PersonChangedEvent event) {"},{"lineNumber":347,"author":{"gitID":"Ang-YC"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":348,"author":{"gitID":"Ang-YC"},"content":"        Person source \u003d event.getSource();"},{"lineNumber":349,"author":{"gitID":"Ang-YC"},"content":"        Person target \u003d event.getTarget();"},{"lineNumber":350,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":351,"author":{"gitID":"Ang-YC"},"content":"        if (selectedPerson !\u003d null \u0026\u0026 selectedPerson.equals(source)) {"},{"lineNumber":352,"author":{"gitID":"Ang-YC"},"content":"            selectedPerson \u003d target;"},{"lineNumber":353,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":354,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":355,"author":{"gitID":"Ang-YC"},"content":"}"}],"authorContributionMap":{"-":6,"Ang-YC":349}},{"path":"src/main/java/seedu/address/logic/Logic.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":4,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.logic.commands.Command;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.CommandResult;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":11,"author":{"gitID":"-"},"content":" * API of the Logic component"},{"lineNumber":12,"author":{"gitID":"-"},"content":" */"},{"lineNumber":13,"author":{"gitID":"-"},"content":"public interface Logic {"},{"lineNumber":14,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":15,"author":{"gitID":"-"},"content":"     * Executes the command and returns the result."},{"lineNumber":16,"author":{"gitID":"-"},"content":"     * @param commandText The command as entered by the user."},{"lineNumber":17,"author":{"gitID":"-"},"content":"     * @return the result of the command execution."},{"lineNumber":18,"author":{"gitID":"-"},"content":"     * @throws CommandException If an error occurs during command execution."},{"lineNumber":19,"author":{"gitID":"-"},"content":"     * @throws ParseException If an error occurs during parsing."},{"lineNumber":20,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":21,"author":{"gitID":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":24,"author":{"gitID":"Ang-YC"},"content":"     * Parse the command and returns the real time parsing result."},{"lineNumber":25,"author":{"gitID":"-"},"content":"     * @param commandText The command as entered by the user."},{"lineNumber":26,"author":{"gitID":"Ang-YC"},"content":"     * @return the result of the parsing."},{"lineNumber":27,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":28,"author":{"gitID":"Ang-YC"},"content":"    Command parse(String commandText);"},{"lineNumber":29,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":30,"author":{"gitID":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */"},{"lineNumber":31,"author":{"gitID":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();"},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"Ang-YC"},"content":"    /** Returns an active view of the filtered list of persons (With active predicate change listener) */"},{"lineNumber":34,"author":{"gitID":"Ang-YC"},"content":"    ObservableList\u003cPerson\u003e getActivePersonList();"},{"lineNumber":35,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":36,"author":{"gitID":"Ang-YC"},"content":"    /** Set the currently selected person */"},{"lineNumber":37,"author":{"gitID":"Ang-YC"},"content":"    void setSelectedPerson(Person selectedPerson);"},{"lineNumber":38,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":39,"author":{"gitID":"-"},"content":"    /** Returns the list of input entered by the user, encapsulated in a {@code ListElementPointer} object */"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    ListElementPointer getHistorySnapshot();"},{"lineNumber":41,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":42,"author":{"gitID":"mhq199657"},"content":"    void cleanUnusedResumeAndProfilePic(String addressBookXmlFilePath);"},{"lineNumber":43,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"mhq199657":2,"-":28,"Ang-YC":13}},{"path":"src/main/java/seedu/address/commons/events/ui/MinimizeAppRequestEvent.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.events.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.BaseEvent;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"Ang-YC"},"content":"//@@author Ang-YC"},{"lineNumber":6,"author":{"gitID":"Ang-YC"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"Ang-YC"},"content":" * Indicates a request for App minimize"},{"lineNumber":8,"author":{"gitID":"Ang-YC"},"content":" */"},{"lineNumber":9,"author":{"gitID":"Ang-YC"},"content":"public class MinimizeAppRequestEvent extends BaseEvent {"},{"lineNumber":10,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":11,"author":{"gitID":"Ang-YC"},"content":"    @Override"},{"lineNumber":12,"author":{"gitID":"Ang-YC"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":"        return this.getClass().getSimpleName();"},{"lineNumber":14,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":15,"author":{"gitID":"Ang-YC"},"content":"}"}],"authorContributionMap":{"-":4,"Ang-YC":11}},{"path":"src/main/java/seedu/address/commons/events/ui/ShowPanelRequestEvent.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.events.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.BaseEvent;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"Ang-YC"},"content":"//@@author Ang-YC"},{"lineNumber":6,"author":{"gitID":"Ang-YC"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"Ang-YC"},"content":" * Indicates a request for panel show"},{"lineNumber":8,"author":{"gitID":"Ang-YC"},"content":" */"},{"lineNumber":9,"author":{"gitID":"Ang-YC"},"content":"public class ShowPanelRequestEvent extends BaseEvent {"},{"lineNumber":10,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":11,"author":{"gitID":"Ang-YC"},"content":"    private final String panel;"},{"lineNumber":12,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":"    public ShowPanelRequestEvent(String panel) {"},{"lineNumber":14,"author":{"gitID":"Ang-YC"},"content":"        this.panel \u003d panel;"},{"lineNumber":15,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":16,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":"    public String getRequestedPanel() {"},{"lineNumber":18,"author":{"gitID":"Ang-YC"},"content":"        return panel;"},{"lineNumber":19,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":20,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":"    @Override"},{"lineNumber":22,"author":{"gitID":"Ang-YC"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitID":"Ang-YC"},"content":"        return this.getClass().getSimpleName();"},{"lineNumber":24,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":25,"author":{"gitID":"Ang-YC"},"content":"}"}],"authorContributionMap":{"-":4,"Ang-YC":21}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;"},{"lineNumber":5,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMENT;"},{"lineNumber":6,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;"},{"lineNumber":7,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXPECTED_GRADUATION_YEAR;"},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GRADE_POINT_AVERAGE;"},{"lineNumber":9,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IMAGE;"},{"lineNumber":10,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB_APPLIED;"},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MAJOR;"},{"lineNumber":12,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"},{"lineNumber":13,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;"},{"lineNumber":14,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RESUME;"},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"},{"lineNumber":16,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNIVERSITY;"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"mhq199657"},"content":"import java.io.IOException;"},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":"import java.util.Optional;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import java.util.Set;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import java.util.stream.Stream;"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.AddCommand;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;"},{"lineNumber":26,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Address;"},{"lineNumber":27,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.model.person.Comment;"},{"lineNumber":28,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Email;"},{"lineNumber":29,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.ExpectedGraduationYear;"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.person.GradePointAverage;"},{"lineNumber":31,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.model.person.InterviewDate;"},{"lineNumber":32,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.JobApplied;"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.person.Major;"},{"lineNumber":34,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Name;"},{"lineNumber":35,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":36,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Phone;"},{"lineNumber":37,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.model.person.ProfileImage;"},{"lineNumber":38,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.Rating;"},{"lineNumber":39,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Resume;"},{"lineNumber":40,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Status;"},{"lineNumber":41,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.University;"},{"lineNumber":42,"author":{"gitID":"-"},"content":"import seedu.address.model.tag.Tag;"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":45,"author":{"gitID":"-"},"content":" * Parses input arguments and creates a new AddCommand object"},{"lineNumber":46,"author":{"gitID":"-"},"content":" */"},{"lineNumber":47,"author":{"gitID":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":50,"author":{"gitID":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand"},{"lineNumber":51,"author":{"gitID":"-"},"content":"     * and returns an AddCommand object for execution."},{"lineNumber":52,"author":{"gitID":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format"},{"lineNumber":53,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":54,"author":{"gitID":"-"},"content":"    public AddCommand parse(String args) throws ParseException {"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        ArgumentMultimap argMultimap \u003d"},{"lineNumber":56,"author":{"gitID":"mhq199657"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,"},{"lineNumber":57,"author":{"gitID":"kexiaowen"},"content":"                        PREFIX_UNIVERSITY, PREFIX_EXPECTED_GRADUATION_YEAR, PREFIX_MAJOR, PREFIX_GRADE_POINT_AVERAGE,"},{"lineNumber":58,"author":{"gitID":"kexiaowen"},"content":"                        PREFIX_JOB_APPLIED, PREFIX_RESUME, PREFIX_IMAGE, PREFIX_COMMENT, PREFIX_TAG);"},{"lineNumber":59,"author":{"gitID":"-"},"content":""},{"lineNumber":60,"author":{"gitID":"mhq199657"},"content":"        if (!arePrefixesPresent(argMultimap,"},{"lineNumber":61,"author":{"gitID":"kexiaowen"},"content":"                PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_UNIVERSITY,"},{"lineNumber":62,"author":{"gitID":"kexiaowen"},"content":"                PREFIX_EXPECTED_GRADUATION_YEAR, PREFIX_MAJOR, PREFIX_GRADE_POINT_AVERAGE, PREFIX_JOB_APPLIED)"},{"lineNumber":63,"author":{"gitID":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {"},{"lineNumber":64,"author":{"gitID":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"},{"lineNumber":65,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":66,"author":{"gitID":"-"},"content":""},{"lineNumber":67,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":68,"author":{"gitID":"Ang-YC"},"content":"            // Compulsory fields"},{"lineNumber":69,"author":{"gitID":"-"},"content":"            Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME)).get();"},{"lineNumber":70,"author":{"gitID":"-"},"content":"            Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE)).get();"},{"lineNumber":71,"author":{"gitID":"-"},"content":"            Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL)).get();"},{"lineNumber":72,"author":{"gitID":"-"},"content":"            Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS)).get();"},{"lineNumber":73,"author":{"gitID":"kexiaowen"},"content":"            University university \u003d ParserUtil.parseUniversity(argMultimap.getValue(PREFIX_UNIVERSITY)).get();"},{"lineNumber":74,"author":{"gitID":"mhq199657"},"content":"            ExpectedGraduationYear expectedGraduationYear \u003d ParserUtil.parseExpectedGraduationYear(argMultimap"},{"lineNumber":75,"author":{"gitID":"mhq199657"},"content":"                    .getValue(PREFIX_EXPECTED_GRADUATION_YEAR)).get();"},{"lineNumber":76,"author":{"gitID":"tanhengyeow"},"content":"            Major major \u003d ParserUtil.parseMajor(argMultimap.getValue(PREFIX_MAJOR)).get();"},{"lineNumber":77,"author":{"gitID":"tanhengyeow"},"content":"            GradePointAverage gradePointAverage \u003d ParserUtil.parseGradePointAverage(argMultimap"},{"lineNumber":78,"author":{"gitID":"tanhengyeow"},"content":"                    .getValue(PREFIX_GRADE_POINT_AVERAGE)).get();"},{"lineNumber":79,"author":{"gitID":"kexiaowen"},"content":"            JobApplied jobApplied \u003d ParserUtil.parseJobApplied(argMultimap.getValue(PREFIX_JOB_APPLIED)).get();"},{"lineNumber":80,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":81,"author":{"gitID":"Ang-YC"},"content":"            // Optional fields"},{"lineNumber":82,"author":{"gitID":"mhq199657"},"content":"            Optional\u003cResume\u003e resumeOptional \u003d ParserUtil.parseResume(argMultimap.getValue(PREFIX_RESUME));"},{"lineNumber":83,"author":{"gitID":"mhq199657"},"content":"            Resume resume \u003d resumeOptional.isPresent() ? resumeOptional.get() : new Resume(null);"},{"lineNumber":84,"author":{"gitID":"mhq199657"},"content":"            resume \u003d ResumeUtil.process(resume);"},{"lineNumber":85,"author":{"gitID":"Ang-YC"},"content":"            Optional\u003cProfileImage\u003e profileImageOptional \u003d"},{"lineNumber":86,"author":{"gitID":"Ang-YC"},"content":"                    ParserUtil.parseProfileImage(argMultimap.getValue(PREFIX_IMAGE));"},{"lineNumber":87,"author":{"gitID":"Ang-YC"},"content":"            ProfileImage profileImage \u003d profileImageOptional.isPresent()"},{"lineNumber":88,"author":{"gitID":"Ang-YC"},"content":"                    ? profileImageOptional.get() : new ProfileImage(null);"},{"lineNumber":89,"author":{"gitID":"mhq199657"},"content":"            profileImage \u003d ProfileImageUtil.process(profileImage);"},{"lineNumber":90,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":91,"author":{"gitID":"Ang-YC"},"content":"            Optional\u003cComment\u003e commentOptional \u003d"},{"lineNumber":92,"author":{"gitID":"Ang-YC"},"content":"                    ParserUtil.parseComment(argMultimap.getValue(PREFIX_COMMENT));"},{"lineNumber":93,"author":{"gitID":"Ang-YC"},"content":"            Comment comment \u003d commentOptional.isPresent()"},{"lineNumber":94,"author":{"gitID":"Ang-YC"},"content":"                    ? commentOptional.get() : new Comment(null);"},{"lineNumber":95,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":96,"author":{"gitID":"mhq199657"},"content":"            // Default-valued fields"},{"lineNumber":97,"author":{"gitID":"kexiaowen"},"content":"            Rating rating \u003d new Rating(Rating.DEFAULT_SCORE, Rating.DEFAULT_SCORE,"},{"lineNumber":98,"author":{"gitID":"kexiaowen"},"content":"                    Rating.DEFAULT_SCORE, Rating.DEFAULT_SCORE);"},{"lineNumber":99,"author":{"gitID":"Ang-YC"},"content":"            InterviewDate interviewDate \u003d new InterviewDate();"},{"lineNumber":100,"author":{"gitID":"mhq199657"},"content":"            Status status \u003d new Status();"},{"lineNumber":101,"author":{"gitID":"-"},"content":""},{"lineNumber":102,"author":{"gitID":"Ang-YC"},"content":"            // Other fields"},{"lineNumber":103,"author":{"gitID":"-"},"content":"            Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));"},{"lineNumber":104,"author":{"gitID":"-"},"content":""},{"lineNumber":105,"author":{"gitID":"kexiaowen"},"content":"            Person person \u003d new Person(name, phone, email, address, university, expectedGraduationYear, major,"},{"lineNumber":106,"author":{"gitID":"kexiaowen"},"content":"                    gradePointAverage, jobApplied, rating, resume, profileImage, comment, interviewDate,"},{"lineNumber":107,"author":{"gitID":"kexiaowen"},"content":"                    status, tagList);"},{"lineNumber":108,"author":{"gitID":"-"},"content":"            return new AddCommand(person);"},{"lineNumber":109,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":110,"author":{"gitID":"-"},"content":"        } catch (IllegalValueException ive) {"},{"lineNumber":111,"author":{"gitID":"-"},"content":"            throw new ParseException(ive.getMessage(), ive);"},{"lineNumber":112,"author":{"gitID":"mhq199657"},"content":"        } catch (IOException ioe) {"},{"lineNumber":113,"author":{"gitID":"mhq199657"},"content":"            throw new ParseException(ioe.getMessage(), ioe);"},{"lineNumber":114,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":115,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":116,"author":{"gitID":"-"},"content":""},{"lineNumber":117,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":118,"author":{"gitID":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"},{"lineNumber":119,"author":{"gitID":"-"},"content":"     * {@code ArgumentMultimap}."},{"lineNumber":120,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":121,"author":{"gitID":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"},{"lineNumber":122,"author":{"gitID":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"},{"lineNumber":123,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":124,"author":{"gitID":"-"},"content":""},{"lineNumber":125,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"kexiaowen":16,"mhq199657":26,"-":55,"Ang-YC":21,"tanhengyeow":7}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.HashMap;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Map;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"import java.util.Set;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":11,"author":{"gitID":"-"},"content":" * Stores mapping of prefixes to their respective arguments."},{"lineNumber":12,"author":{"gitID":"-"},"content":" * Each key may be associated with multiple argument values."},{"lineNumber":13,"author":{"gitID":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained."},{"lineNumber":14,"author":{"gitID":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value"},{"lineNumber":15,"author":{"gitID":"-"},"content":" * can be inserted multiple times for the same prefix."},{"lineNumber":16,"author":{"gitID":"-"},"content":" */"},{"lineNumber":17,"author":{"gitID":"-"},"content":"public class ArgumentMultimap {"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"    /** Prefixes mapped to their respective arguments**/"},{"lineNumber":20,"author":{"gitID":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":23,"author":{"gitID":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map."},{"lineNumber":24,"author":{"gitID":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values."},{"lineNumber":25,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":26,"author":{"gitID":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated"},{"lineNumber":27,"author":{"gitID":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key"},{"lineNumber":28,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    public void put(Prefix prefix, String argValue) {"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        argValues.add(argValue);"},{"lineNumber":32,"author":{"gitID":"-"},"content":"        argMultimap.put(prefix, argValues);"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":36,"author":{"gitID":"-"},"content":"     * Returns the last value of {@code prefix}."},{"lineNumber":37,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {"},{"lineNumber":39,"author":{"gitID":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);"},{"lineNumber":40,"author":{"gitID":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":42,"author":{"gitID":"-"},"content":""},{"lineNumber":43,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":44,"author":{"gitID":"-"},"content":"     * Returns all values of {@code prefix}."},{"lineNumber":45,"author":{"gitID":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list."},{"lineNumber":46,"author":{"gitID":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap."},{"lineNumber":47,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":48,"author":{"gitID":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {"},{"lineNumber":50,"author":{"gitID":"-"},"content":"            return new ArrayList\u003c\u003e();"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));"},{"lineNumber":53,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitID":"-"},"content":""},{"lineNumber":55,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":56,"author":{"gitID":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces."},{"lineNumber":57,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":58,"author":{"gitID":"-"},"content":"    public String getPreamble() {"},{"lineNumber":59,"author":{"gitID":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");"},{"lineNumber":60,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"    //@@author tanhengyeow"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"     * Returns a set of {@code prefix}"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"    public Set\u003cPrefix\u003e getAllPrefixes() {"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"        return argMultimap.keySet();"},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":69,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":59,"tanhengyeow":10}},{"path":"src/main/java/seedu/address/logic/parser/RateCommandParser.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":5,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMUNICATION_SKILLS_SCORE;"},{"lineNumber":6,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXPERIENCE_SCORE;"},{"lineNumber":7,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PROBLEM_SOLVING_SKILLS_SCORE;"},{"lineNumber":8,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TECHNICAL_SKILLS_SCORE;"},{"lineNumber":9,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":10,"author":{"gitID":"kexiaowen"},"content":"import java.util.Optional;"},{"lineNumber":11,"author":{"gitID":"kexiaowen"},"content":"import java.util.stream.Stream;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;"},{"lineNumber":15,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.logic.commands.RateCommand;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;"},{"lineNumber":17,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.Rating;"},{"lineNumber":18,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":19,"author":{"gitID":"kexiaowen"},"content":"//@@author kexiaowen"},{"lineNumber":20,"author":{"gitID":"kexiaowen"},"content":"/**"},{"lineNumber":21,"author":{"gitID":"kexiaowen"},"content":" * Parses input arguments and creates a new RateCommand object"},{"lineNumber":22,"author":{"gitID":"kexiaowen"},"content":" */"},{"lineNumber":23,"author":{"gitID":"kexiaowen"},"content":"public class RateCommandParser implements Parser\u003cRateCommand\u003e {"},{"lineNumber":24,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":25,"author":{"gitID":"kexiaowen"},"content":"     * Parses the given {@code String} of arguments in the context of the RateCommand"},{"lineNumber":26,"author":{"gitID":"kexiaowen"},"content":"     * and returns an RateCommand object for execution."},{"lineNumber":27,"author":{"gitID":"kexiaowen"},"content":"     * @throws ParseException if the user input does not conform the expected format"},{"lineNumber":28,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":29,"author":{"gitID":"kexiaowen"},"content":"    public RateCommand parse(String args) throws ParseException {"},{"lineNumber":30,"author":{"gitID":"kexiaowen"},"content":"        requireNonNull(args);"},{"lineNumber":31,"author":{"gitID":"kexiaowen"},"content":"        ArgumentMultimap argMultimap \u003d"},{"lineNumber":32,"author":{"gitID":"kexiaowen"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TECHNICAL_SKILLS_SCORE, PREFIX_COMMUNICATION_SKILLS_SCORE,"},{"lineNumber":33,"author":{"gitID":"kexiaowen"},"content":"                        PREFIX_PROBLEM_SOLVING_SKILLS_SCORE, PREFIX_EXPERIENCE_SCORE);"},{"lineNumber":34,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":35,"author":{"gitID":"kexiaowen"},"content":"        Index index;"},{"lineNumber":36,"author":{"gitID":"kexiaowen"},"content":"        Rating rating;"},{"lineNumber":37,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":38,"author":{"gitID":"kexiaowen"},"content":"        if (!arePrefixesPresent(argMultimap,"},{"lineNumber":39,"author":{"gitID":"kexiaowen"},"content":"                PREFIX_TECHNICAL_SKILLS_SCORE, PREFIX_COMMUNICATION_SKILLS_SCORE,"},{"lineNumber":40,"author":{"gitID":"kexiaowen"},"content":"                PREFIX_PROBLEM_SOLVING_SKILLS_SCORE, PREFIX_EXPERIENCE_SCORE)"},{"lineNumber":41,"author":{"gitID":"kexiaowen"},"content":"                || argMultimap.getPreamble().isEmpty()"},{"lineNumber":42,"author":{"gitID":"kexiaowen"},"content":"                || !areAllFieldsSupplied(argMultimap,"},{"lineNumber":43,"author":{"gitID":"kexiaowen"},"content":"                PREFIX_TECHNICAL_SKILLS_SCORE, PREFIX_COMMUNICATION_SKILLS_SCORE,"},{"lineNumber":44,"author":{"gitID":"kexiaowen"},"content":"                PREFIX_PROBLEM_SOLVING_SKILLS_SCORE, PREFIX_EXPERIENCE_SCORE)) {"},{"lineNumber":45,"author":{"gitID":"kexiaowen"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RateCommand.MESSAGE_USAGE));"},{"lineNumber":46,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":47,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":48,"author":{"gitID":"kexiaowen"},"content":"        try {"},{"lineNumber":49,"author":{"gitID":"kexiaowen"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());"},{"lineNumber":50,"author":{"gitID":"kexiaowen"},"content":"            double technicalSkillsScore \u003d ParserUtil.parseScore("},{"lineNumber":51,"author":{"gitID":"kexiaowen"},"content":"                    argMultimap.getValue(PREFIX_TECHNICAL_SKILLS_SCORE)).get();"},{"lineNumber":52,"author":{"gitID":"kexiaowen"},"content":"            double communicationSkillsScore \u003d ParserUtil.parseScore("},{"lineNumber":53,"author":{"gitID":"kexiaowen"},"content":"                    argMultimap.getValue(PREFIX_COMMUNICATION_SKILLS_SCORE)).get();"},{"lineNumber":54,"author":{"gitID":"kexiaowen"},"content":"            double problemSolvingSkillsScore \u003d ParserUtil.parseScore("},{"lineNumber":55,"author":{"gitID":"kexiaowen"},"content":"                    argMultimap.getValue(PREFIX_PROBLEM_SOLVING_SKILLS_SCORE)).get();"},{"lineNumber":56,"author":{"gitID":"kexiaowen"},"content":"            double experienceScore \u003d ParserUtil.parseScore("},{"lineNumber":57,"author":{"gitID":"kexiaowen"},"content":"                    argMultimap.getValue(PREFIX_EXPERIENCE_SCORE)).get();"},{"lineNumber":58,"author":{"gitID":"kexiaowen"},"content":"            rating \u003d new Rating(technicalSkillsScore, communicationSkillsScore, problemSolvingSkillsScore,"},{"lineNumber":59,"author":{"gitID":"kexiaowen"},"content":"                    experienceScore);"},{"lineNumber":60,"author":{"gitID":"kexiaowen"},"content":"        } catch (IllegalValueException ive) {"},{"lineNumber":61,"author":{"gitID":"kexiaowen"},"content":"            throw new ParseException(ive.getMessage(), ive);"},{"lineNumber":62,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":63,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":64,"author":{"gitID":"kexiaowen"},"content":"        return new RateCommand(index, rating);"},{"lineNumber":65,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":66,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":67,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":68,"author":{"gitID":"kexiaowen"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"},{"lineNumber":69,"author":{"gitID":"kexiaowen"},"content":"     * {@code ArgumentMultimap}."},{"lineNumber":70,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":71,"author":{"gitID":"kexiaowen"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"},{"lineNumber":72,"author":{"gitID":"kexiaowen"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"},{"lineNumber":73,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":74,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":75,"author":{"gitID":"kexiaowen"},"content":"    private static boolean areAllFieldsSupplied(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"},{"lineNumber":76,"author":{"gitID":"kexiaowen"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e !Optional.of(argumentMultimap.getValue(prefix)).equals(\"\"));"},{"lineNumber":77,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":78,"author":{"gitID":"kexiaowen"},"content":"}"}],"authorContributionMap":{"kexiaowen":70,"-":8}},{"path":"src/main/java/seedu/address/logic/parser/ShowCommandParser.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":5,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":6,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.logic.commands.ShowCommand;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"Ang-YC"},"content":"//@@author Ang-YC"},{"lineNumber":10,"author":{"gitID":"Ang-YC"},"content":"/**"},{"lineNumber":11,"author":{"gitID":"Ang-YC"},"content":" * Parses input arguments and creates a new ShowCommand object"},{"lineNumber":12,"author":{"gitID":"Ang-YC"},"content":" */"},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":"public class ShowCommandParser implements Parser\u003cShowCommand\u003e {"},{"lineNumber":14,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":15,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":16,"author":{"gitID":"Ang-YC"},"content":"     * Parses the given {@code String} of arguments in the context of the ShowCommand"},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":"     * and returns an ShowCommand object for execution."},{"lineNumber":18,"author":{"gitID":"Ang-YC"},"content":"     * @throws ParseException if the user input does not conform the expected format"},{"lineNumber":19,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":20,"author":{"gitID":"Ang-YC"},"content":"    public ShowCommand parse(String args) throws ParseException {"},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":"        requireNonNull(args);"},{"lineNumber":22,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":23,"author":{"gitID":"Ang-YC"},"content":"        // Parse the arguments"},{"lineNumber":24,"author":{"gitID":"Ang-YC"},"content":"        String requestedString \u003d args.trim();"},{"lineNumber":25,"author":{"gitID":"Ang-YC"},"content":"        ShowCommand.Panel requestedPanel \u003d parsePanel(requestedString);"},{"lineNumber":26,"author":{"gitID":"Ang-YC"},"content":"        return new ShowCommand(requestedPanel);"},{"lineNumber":27,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":28,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":29,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":30,"author":{"gitID":"Ang-YC"},"content":"     * Parses {@code panel} into a {@code ShowCommand.Panel} and returns it."},{"lineNumber":31,"author":{"gitID":"Ang-YC"},"content":"     * Leading and trailing whitespaces will be trimmed."},{"lineNumber":32,"author":{"gitID":"Ang-YC"},"content":"     * @throws ParseException if the specified panel is invalid (not info or resume)."},{"lineNumber":33,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":34,"author":{"gitID":"Ang-YC"},"content":"    private ShowCommand.Panel parsePanel(String panel) throws ParseException {"},{"lineNumber":35,"author":{"gitID":"Ang-YC"},"content":"        String trimmed \u003d panel.trim();"},{"lineNumber":36,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":37,"author":{"gitID":"Ang-YC"},"content":"        switch (trimmed) {"},{"lineNumber":38,"author":{"gitID":"Ang-YC"},"content":"        case ShowCommand.PANEL_INFO:"},{"lineNumber":39,"author":{"gitID":"Ang-YC"},"content":"            return ShowCommand.Panel.INFO;"},{"lineNumber":40,"author":{"gitID":"Ang-YC"},"content":"        case ShowCommand.PANEL_RESUME:"},{"lineNumber":41,"author":{"gitID":"Ang-YC"},"content":"            return ShowCommand.Panel.RESUME;"},{"lineNumber":42,"author":{"gitID":"Ang-YC"},"content":"        default:"},{"lineNumber":43,"author":{"gitID":"Ang-YC"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ShowCommand.MESSAGE_USAGE));"},{"lineNumber":44,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":45,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"Ang-YC"},"content":"}"}],"authorContributionMap":{"-":6,"Ang-YC":40}},{"path":"src/main/java/seedu/address/logic/parser/StatusCommandParser.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;"},{"lineNumber":7,"author":{"gitID":"mhq199657"},"content":"import seedu.address.logic.commands.StatusCommand;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;"},{"lineNumber":9,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Status;"},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":"//@@author mhq199657"},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":"/**"},{"lineNumber":12,"author":{"gitID":"mhq199657"},"content":" * Parses input arguments and creates a new StatusCommand object"},{"lineNumber":13,"author":{"gitID":"mhq199657"},"content":" */"},{"lineNumber":14,"author":{"gitID":"mhq199657"},"content":"public class StatusCommandParser implements Parser\u003cStatusCommand\u003e {"},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":"     * Parses the given {@code String} of arguments in the context of the StatusCommand"},{"lineNumber":17,"author":{"gitID":"mhq199657"},"content":"     * and returns an StatusCommand object for execution."},{"lineNumber":18,"author":{"gitID":"mhq199657"},"content":"     * @throws ParseException if the user input does not conform the expected format"},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":20,"author":{"gitID":"mhq199657"},"content":"    public StatusCommand parse(String args) throws ParseException {"},{"lineNumber":21,"author":{"gitID":"mhq199657"},"content":"        try {"},{"lineNumber":22,"author":{"gitID":"mhq199657"},"content":"            // Parse the arguments"},{"lineNumber":23,"author":{"gitID":"mhq199657"},"content":"            String[] arguments \u003d args.trim().split(\"\\\\s+\", 2);"},{"lineNumber":24,"author":{"gitID":"mhq199657"},"content":"            if (arguments.length !\u003d 2) {"},{"lineNumber":25,"author":{"gitID":"mhq199657"},"content":"                throw new IllegalValueException(\"Invalid command, expected 2 arguments\");"},{"lineNumber":26,"author":{"gitID":"mhq199657"},"content":"            }"},{"lineNumber":27,"author":{"gitID":"mhq199657"},"content":"            // Parse the index"},{"lineNumber":28,"author":{"gitID":"mhq199657"},"content":"            Index index \u003d ParserUtil.parseIndex(arguments[0]);"},{"lineNumber":29,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":30,"author":{"gitID":"mhq199657"},"content":"            // Parse the status"},{"lineNumber":31,"author":{"gitID":"mhq199657"},"content":"            int statusIndex \u003d Integer.valueOf(arguments[1]);"},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":"            Status status \u003d null;"},{"lineNumber":33,"author":{"gitID":"mhq199657"},"content":"            if (Status.isValidStatus(statusIndex)) {"},{"lineNumber":34,"author":{"gitID":"mhq199657"},"content":"                status \u003d new Status(statusIndex);"},{"lineNumber":35,"author":{"gitID":"mhq199657"},"content":"            } else {"},{"lineNumber":36,"author":{"gitID":"mhq199657"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, StatusCommand.MESSAGE_USAGE));"},{"lineNumber":37,"author":{"gitID":"mhq199657"},"content":"            }"},{"lineNumber":38,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":39,"author":{"gitID":"mhq199657"},"content":"            return new StatusCommand(index, status);"},{"lineNumber":40,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":41,"author":{"gitID":"mhq199657"},"content":"        } catch (NumberFormatException nfe) {"},{"lineNumber":42,"author":{"gitID":"mhq199657"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, StatusCommand.MESSAGE_USAGE));"},{"lineNumber":43,"author":{"gitID":"mhq199657"},"content":"        } catch (ParseException pe) {"},{"lineNumber":44,"author":{"gitID":"mhq199657"},"content":"            throw pe;"},{"lineNumber":45,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":46,"author":{"gitID":"mhq199657"},"content":"        } catch (IllegalValueException ive) {"},{"lineNumber":47,"author":{"gitID":"mhq199657"},"content":"            throw new ParseException("},{"lineNumber":48,"author":{"gitID":"mhq199657"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, StatusCommand.MESSAGE_USAGE));"},{"lineNumber":49,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":50,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":51,"author":{"gitID":"mhq199657"},"content":"}"}],"authorContributionMap":{"mhq199657":44,"-":7}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.regex.Matcher;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.regex.Pattern;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.AddCommand;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.ClearCommand;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.Command;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.EditCommand;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.ExitCommand;"},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":"import seedu.address.logic.commands.FilterCommand;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.FindCommand;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.HelpCommand;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.HistoryCommand;"},{"lineNumber":19,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.logic.commands.InterviewCommand;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.ListCommand;"},{"lineNumber":21,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.logic.commands.RateCommand;"},{"lineNumber":22,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.logic.commands.RatingDeleteCommand;"},{"lineNumber":23,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.logic.commands.RatingEditCommand;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.RedoCommand;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.SelectCommand;"},{"lineNumber":26,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.logic.commands.ShowCommand;"},{"lineNumber":27,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.logic.commands.SortCommand;"},{"lineNumber":28,"author":{"gitID":"mhq199657"},"content":"import seedu.address.logic.commands.StatusCommand;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.UndoCommand;"},{"lineNumber":30,"author":{"gitID":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":33,"author":{"gitID":"-"},"content":" * Parses user input."},{"lineNumber":34,"author":{"gitID":"-"},"content":" */"},{"lineNumber":35,"author":{"gitID":"-"},"content":"public class AddressBookParser {"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":38,"author":{"gitID":"-"},"content":"     * Used for initial separation of command word and args."},{"lineNumber":39,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");"},{"lineNumber":41,"author":{"gitID":"-"},"content":""},{"lineNumber":42,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":43,"author":{"gitID":"-"},"content":"     * Parses user input into command for execution."},{"lineNumber":44,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":45,"author":{"gitID":"-"},"content":"     * @param userInput full user input string"},{"lineNumber":46,"author":{"gitID":"-"},"content":"     * @return the command based on the user input"},{"lineNumber":47,"author":{"gitID":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format"},{"lineNumber":48,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":49,"author":{"gitID":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {"},{"lineNumber":50,"author":{"gitID":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        if (!matcher.matches()) {"},{"lineNumber":52,"author":{"gitID":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));"},{"lineNumber":53,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":54,"author":{"gitID":"-"},"content":""},{"lineNumber":55,"author":{"gitID":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");"},{"lineNumber":57,"author":{"gitID":"-"},"content":"        switch (commandWord) {"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"-"},"content":"        case AddCommand.COMMAND_WORD:"},{"lineNumber":60,"author":{"gitID":"-"},"content":"            return new AddCommandParser().parse(arguments);"},{"lineNumber":61,"author":{"gitID":"-"},"content":""},{"lineNumber":62,"author":{"gitID":"-"},"content":"        case EditCommand.COMMAND_WORD:"},{"lineNumber":63,"author":{"gitID":"-"},"content":"            return new EditCommandParser().parse(arguments);"},{"lineNumber":64,"author":{"gitID":"-"},"content":""},{"lineNumber":65,"author":{"gitID":"Ang-YC"},"content":"        case InterviewCommand.COMMAND_WORD:"},{"lineNumber":66,"author":{"gitID":"Ang-YC"},"content":"            return new InterviewCommandParser().parse(arguments);"},{"lineNumber":67,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":68,"author":{"gitID":"-"},"content":"        case SelectCommand.COMMAND_WORD:"},{"lineNumber":69,"author":{"gitID":"-"},"content":"            return new SelectCommandParser().parse(arguments);"},{"lineNumber":70,"author":{"gitID":"-"},"content":""},{"lineNumber":71,"author":{"gitID":"-"},"content":"        case DeleteCommand.COMMAND_WORD:"},{"lineNumber":72,"author":{"gitID":"-"},"content":"            return new DeleteCommandParser().parse(arguments);"},{"lineNumber":73,"author":{"gitID":"-"},"content":""},{"lineNumber":74,"author":{"gitID":"-"},"content":"        case ClearCommand.COMMAND_WORD:"},{"lineNumber":75,"author":{"gitID":"-"},"content":"            return new ClearCommand();"},{"lineNumber":76,"author":{"gitID":"-"},"content":""},{"lineNumber":77,"author":{"gitID":"-"},"content":"        case FindCommand.COMMAND_WORD:"},{"lineNumber":78,"author":{"gitID":"-"},"content":"            return new FindCommandParser().parse(arguments);"},{"lineNumber":79,"author":{"gitID":"-"},"content":""},{"lineNumber":80,"author":{"gitID":"-"},"content":"        case ListCommand.COMMAND_WORD:"},{"lineNumber":81,"author":{"gitID":"-"},"content":"            return new ListCommand();"},{"lineNumber":82,"author":{"gitID":"-"},"content":""},{"lineNumber":83,"author":{"gitID":"-"},"content":"        case HistoryCommand.COMMAND_WORD:"},{"lineNumber":84,"author":{"gitID":"-"},"content":"            return new HistoryCommand();"},{"lineNumber":85,"author":{"gitID":"-"},"content":""},{"lineNumber":86,"author":{"gitID":"-"},"content":"        case ExitCommand.COMMAND_WORD:"},{"lineNumber":87,"author":{"gitID":"-"},"content":"            return new ExitCommand();"},{"lineNumber":88,"author":{"gitID":"-"},"content":""},{"lineNumber":89,"author":{"gitID":"-"},"content":"        case HelpCommand.COMMAND_WORD:"},{"lineNumber":90,"author":{"gitID":"-"},"content":"            return new HelpCommand();"},{"lineNumber":91,"author":{"gitID":"-"},"content":""},{"lineNumber":92,"author":{"gitID":"-"},"content":"        case UndoCommand.COMMAND_WORD:"},{"lineNumber":93,"author":{"gitID":"-"},"content":"            return new UndoCommand();"},{"lineNumber":94,"author":{"gitID":"-"},"content":""},{"lineNumber":95,"author":{"gitID":"-"},"content":"        case RedoCommand.COMMAND_WORD:"},{"lineNumber":96,"author":{"gitID":"-"},"content":"            return new RedoCommand();"},{"lineNumber":97,"author":{"gitID":"-"},"content":""},{"lineNumber":98,"author":{"gitID":"mhq199657"},"content":"        case FilterCommand.COMMAND_WORD:"},{"lineNumber":99,"author":{"gitID":"mhq199657"},"content":"            return new FilterCommandParser().parse(arguments);"},{"lineNumber":100,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":101,"author":{"gitID":"kexiaowen"},"content":"        case RateCommand.COMMAND_WORD:"},{"lineNumber":102,"author":{"gitID":"kexiaowen"},"content":"            return new RateCommandParser().parse(arguments);"},{"lineNumber":103,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":104,"author":{"gitID":"kexiaowen"},"content":"        case RatingDeleteCommand.COMMAND_WORD:"},{"lineNumber":105,"author":{"gitID":"kexiaowen"},"content":"            return new RatingDeleteCommandParser().parse(arguments);"},{"lineNumber":106,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":107,"author":{"gitID":"kexiaowen"},"content":"        case RatingEditCommand.COMMAND_WORD:"},{"lineNumber":108,"author":{"gitID":"kexiaowen"},"content":"            return new RatingEditCommandParser().parse(arguments);"},{"lineNumber":109,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":110,"author":{"gitID":"kexiaowen"},"content":"        case SortCommand.COMMAND_WORD:"},{"lineNumber":111,"author":{"gitID":"kexiaowen"},"content":"            return new SortCommandParser().parse(arguments);"},{"lineNumber":112,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":113,"author":{"gitID":"mhq199657"},"content":"        case StatusCommand.COMMAND_WORD:"},{"lineNumber":114,"author":{"gitID":"mhq199657"},"content":"            return new StatusCommandParser().parse(arguments);"},{"lineNumber":115,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":116,"author":{"gitID":"Ang-YC"},"content":"        case ShowCommand.COMMAND_WORD:"},{"lineNumber":117,"author":{"gitID":"Ang-YC"},"content":"            return new ShowCommandParser().parse(arguments);"},{"lineNumber":118,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":119,"author":{"gitID":"-"},"content":"        default:"},{"lineNumber":120,"author":{"gitID":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);"},{"lineNumber":121,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":122,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":123,"author":{"gitID":"-"},"content":""},{"lineNumber":124,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"kexiaowen":16,"mhq199657":8,"-":92,"Ang-YC":8}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;"},{"lineNumber":5,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMENT;"},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB_APPLIED;"},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MAJOR;"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;"},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNIVERSITY;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"import java.util.function.Predicate;"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"import java.util.logging.Logger;"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.FindCommand;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":22,"author":{"gitID":"-"},"content":" * Parses input arguments and creates a new FindCommand object"},{"lineNumber":23,"author":{"gitID":"-"},"content":" */"},{"lineNumber":24,"author":{"gitID":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":"    //@@author tanhengyeow"},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(this.getClass());"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"     * and returns an FindCommand object for execution."},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"     * @throws ParseException if the user input does not conform the expected format"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"    public FindCommand parse(String args) throws ParseException {"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        // Check for empty argument input"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        String trimmedArgs \u003d args.trim();"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":"        if (trimmedArgs.isEmpty()) {"},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"            throw new ParseException("},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        ArgumentMultimap argMultimap \u003d"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":"                        PREFIX_ADDRESS, PREFIX_UNIVERSITY, PREFIX_MAJOR,"},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"                        PREFIX_JOB_APPLIED, PREFIX_COMMENT); // more fields to be added if necessary"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"        try {"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"            logger.info(\"Parsing user arguments of find command\");"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"            Predicate\u003cPerson\u003e finalPredicate \u003d new FindUtil().parseFindArgs(trimmedArgs, argMultimap);"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"            return new FindCommand(finalPredicate);"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"        } catch (ParseException ive) {"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":"            throw new ParseException(ive.getMessage(), ive);"},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":13,"tanhengyeow":43}},{"path":"src/main/java/seedu/address/logic/parser/FilterRange.java","lines":[{"lineNumber":1,"author":{"gitID":"mhq199657"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":3,"author":{"gitID":"mhq199657"},"content":"//@@author mhq199657"},{"lineNumber":4,"author":{"gitID":"mhq199657"},"content":"/**"},{"lineNumber":5,"author":{"gitID":"mhq199657"},"content":" * A range recorder for PredicateParsing"},{"lineNumber":6,"author":{"gitID":"mhq199657"},"content":" * @param \u003cE\u003e a filterable field"},{"lineNumber":7,"author":{"gitID":"mhq199657"},"content":" */"},{"lineNumber":8,"author":{"gitID":"mhq199657"},"content":"public class FilterRange\u003cE\u003e {"},{"lineNumber":9,"author":{"gitID":"mhq199657"},"content":"    private boolean isRange;"},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":"    private E lowValue;"},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":"    private E highValue;"},{"lineNumber":12,"author":{"gitID":"mhq199657"},"content":"    private E exactValue;"},{"lineNumber":13,"author":{"gitID":"mhq199657"},"content":"    public FilterRange(E exactValue) {"},{"lineNumber":14,"author":{"gitID":"mhq199657"},"content":"        this.isRange \u003d false;"},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":"        this.lowValue \u003d null;"},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":"        this.highValue \u003d null;"},{"lineNumber":17,"author":{"gitID":"mhq199657"},"content":"        this.exactValue \u003d exactValue;"},{"lineNumber":18,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":20,"author":{"gitID":"mhq199657"},"content":"    public FilterRange(E lowValue, E highValue) {"},{"lineNumber":21,"author":{"gitID":"mhq199657"},"content":"        this.isRange \u003d true;"},{"lineNumber":22,"author":{"gitID":"mhq199657"},"content":"        this.lowValue \u003d lowValue;"},{"lineNumber":23,"author":{"gitID":"mhq199657"},"content":"        this.highValue \u003d highValue;"},{"lineNumber":24,"author":{"gitID":"mhq199657"},"content":"        this.exactValue \u003d null;"},{"lineNumber":25,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":27,"author":{"gitID":"mhq199657"},"content":"    public boolean isRange() {"},{"lineNumber":28,"author":{"gitID":"mhq199657"},"content":"        return isRange;"},{"lineNumber":29,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":30,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":31,"author":{"gitID":"mhq199657"},"content":"    public E getExactValue() {"},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":"        assert(!isRange);"},{"lineNumber":33,"author":{"gitID":"mhq199657"},"content":"        return exactValue;"},{"lineNumber":34,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":36,"author":{"gitID":"mhq199657"},"content":"    public E getLowValue() {"},{"lineNumber":37,"author":{"gitID":"mhq199657"},"content":"        assert(isRange);"},{"lineNumber":38,"author":{"gitID":"mhq199657"},"content":"        return lowValue;"},{"lineNumber":39,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":41,"author":{"gitID":"mhq199657"},"content":"    public E getHighValue() {"},{"lineNumber":42,"author":{"gitID":"mhq199657"},"content":"        assert(isRange);"},{"lineNumber":43,"author":{"gitID":"mhq199657"},"content":"        return highValue;"},{"lineNumber":44,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"mhq199657"},"content":"}"}],"authorContributionMap":{"mhq199657":45}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.Collection;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.HashSet;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.Set;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;"},{"lineNumber":12,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.commons.util.DoubleUtil;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.StringUtil;"},{"lineNumber":14,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.logic.commands.RatingEditCommand;"},{"lineNumber":15,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.logic.commands.SortCommand;"},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Address;"},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.model.person.Comment;"},{"lineNumber":18,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Email;"},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.ExpectedGraduationYear;"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.person.GradePointAverage;"},{"lineNumber":21,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.JobApplied;"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.person.Major;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Name;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Phone;"},{"lineNumber":25,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.model.person.ProfileImage;"},{"lineNumber":26,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.Rating;"},{"lineNumber":27,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Resume;"},{"lineNumber":28,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.University;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"import seedu.address.model.tag.Tag;"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":32,"author":{"gitID":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes."},{"lineNumber":33,"author":{"gitID":"-"},"content":" * {@code ParserUtil} contains methods that take in {@code Optional} as parameters. However, it goes against Java\u0027s"},{"lineNumber":34,"author":{"gitID":"-"},"content":" * convention (see https://stackoverflow.com/a/39005452) as {@code Optional} should only be used a return type."},{"lineNumber":35,"author":{"gitID":"-"},"content":" * Justification: The methods in concern receive {@code Optional} return values from other methods as parameters and"},{"lineNumber":36,"author":{"gitID":"-"},"content":" * return {@code Optional} values based on whether the parameters were present. Therefore, it is redundant to unwrap the"},{"lineNumber":37,"author":{"gitID":"-"},"content":" * initial {@code Optional} before passing to {@code ParserUtil} as a parameter and then re-wrap it into an"},{"lineNumber":38,"author":{"gitID":"-"},"content":" * {@code Optional} return value inside {@code ParserUtil} methods."},{"lineNumber":39,"author":{"gitID":"-"},"content":" */"},{"lineNumber":40,"author":{"gitID":"-"},"content":"public class ParserUtil {"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    public static final String MESSAGE_INSUFFICIENT_PARTS \u003d \"Number of parts must be more than 1.\";"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":45,"author":{"gitID":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be"},{"lineNumber":46,"author":{"gitID":"-"},"content":"     * trimmed."},{"lineNumber":47,"author":{"gitID":"-"},"content":"     * @throws IllegalValueException if the specified index is invalid (not non-zero unsigned integer)."},{"lineNumber":48,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":49,"author":{"gitID":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws IllegalValueException {"},{"lineNumber":50,"author":{"gitID":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {"},{"lineNumber":52,"author":{"gitID":"-"},"content":"            throw new IllegalValueException(MESSAGE_INVALID_INDEX);"},{"lineNumber":53,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":54,"author":{"gitID":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"-"},"content":""},{"lineNumber":57,"author":{"gitID":"kexiaowen"},"content":"    //@@author kexiaowen"},{"lineNumber":58,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":59,"author":{"gitID":"kexiaowen"},"content":"     * Parses {@code sortField} into a {@code SortCommand.SortField} and returns it."},{"lineNumber":60,"author":{"gitID":"kexiaowen"},"content":"     * Leading and trailing whitespaces will be trimmed."},{"lineNumber":61,"author":{"gitID":"kexiaowen"},"content":"     * @throws IllegalValueException if the specified sort field is invalid (not gpa, name or rating)."},{"lineNumber":62,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":63,"author":{"gitID":"kexiaowen"},"content":"    public static SortCommand.SortField parseSortField(String sortField) throws IllegalValueException {"},{"lineNumber":64,"author":{"gitID":"kexiaowen"},"content":"        String trimmedLowercaseSortField \u003d sortField.trim().toLowerCase();"},{"lineNumber":65,"author":{"gitID":"kexiaowen"},"content":"        if (!SortCommand.isValidSortField(trimmedLowercaseSortField)) {"},{"lineNumber":66,"author":{"gitID":"kexiaowen"},"content":"            throw new IllegalValueException(SortCommand.MESSAGE_INVALID_SORT_FIELD);"},{"lineNumber":67,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":68,"author":{"gitID":"kexiaowen"},"content":"        if (trimmedLowercaseSortField.equals(SortCommand.SORT_FIELD_GPA)) {"},{"lineNumber":69,"author":{"gitID":"kexiaowen"},"content":"            return SortCommand.SortField.GPA;"},{"lineNumber":70,"author":{"gitID":"kexiaowen"},"content":"        } else if (trimmedLowercaseSortField.equals(SortCommand.SORT_FIELD_RATING)) {"},{"lineNumber":71,"author":{"gitID":"kexiaowen"},"content":"            return SortCommand.SortField.RATING;"},{"lineNumber":72,"author":{"gitID":"kexiaowen"},"content":"        } else {"},{"lineNumber":73,"author":{"gitID":"kexiaowen"},"content":"            return SortCommand.SortField.NAME;"},{"lineNumber":74,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":75,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":76,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":77,"author":{"gitID":"kexiaowen"},"content":"    //@@author"},{"lineNumber":78,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":79,"author":{"gitID":"-"},"content":"     * Parses a {@code String name} into a {@code Name}."},{"lineNumber":80,"author":{"gitID":"-"},"content":"     * Leading and trailing whitespaces will be trimmed."},{"lineNumber":81,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":82,"author":{"gitID":"-"},"content":"     * @throws IllegalValueException if the given {@code name} is invalid."},{"lineNumber":83,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":84,"author":{"gitID":"-"},"content":"    public static Name parseName(String name) throws IllegalValueException {"},{"lineNumber":85,"author":{"gitID":"-"},"content":"        requireNonNull(name);"},{"lineNumber":86,"author":{"gitID":"-"},"content":"        String trimmedName \u003d name.trim();"},{"lineNumber":87,"author":{"gitID":"-"},"content":"        if (!Name.isValidName(trimmedName)) {"},{"lineNumber":88,"author":{"gitID":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_NAME_CONSTRAINTS);"},{"lineNumber":89,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":90,"author":{"gitID":"-"},"content":"        return new Name(trimmedName);"},{"lineNumber":91,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":92,"author":{"gitID":"-"},"content":""},{"lineNumber":93,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":94,"author":{"gitID":"-"},"content":"     * Parses a {@code Optional\u003cString\u003e name} into an {@code Optional\u003cName\u003e} if {@code name} is present."},{"lineNumber":95,"author":{"gitID":"-"},"content":"     * See header comment of this class regarding the use of {@code Optional} parameters."},{"lineNumber":96,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":97,"author":{"gitID":"-"},"content":"    public static Optional\u003cName\u003e parseName(Optional\u003cString\u003e name) throws IllegalValueException {"},{"lineNumber":98,"author":{"gitID":"-"},"content":"        requireNonNull(name);"},{"lineNumber":99,"author":{"gitID":"-"},"content":"        return name.isPresent() ? Optional.of(parseName(name.get())) : Optional.empty();"},{"lineNumber":100,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":101,"author":{"gitID":"-"},"content":""},{"lineNumber":102,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":103,"author":{"gitID":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}."},{"lineNumber":104,"author":{"gitID":"-"},"content":"     * Leading and trailing whitespaces will be trimmed."},{"lineNumber":105,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":106,"author":{"gitID":"-"},"content":"     * @throws IllegalValueException if the given {@code phone} is invalid."},{"lineNumber":107,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":108,"author":{"gitID":"-"},"content":"    public static Phone parsePhone(String phone) throws IllegalValueException {"},{"lineNumber":109,"author":{"gitID":"-"},"content":"        requireNonNull(phone);"},{"lineNumber":110,"author":{"gitID":"-"},"content":"        String trimmedPhone \u003d phone.trim();"},{"lineNumber":111,"author":{"gitID":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {"},{"lineNumber":112,"author":{"gitID":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_PHONE_CONSTRAINTS);"},{"lineNumber":113,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":114,"author":{"gitID":"-"},"content":"        return new Phone(trimmedPhone);"},{"lineNumber":115,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":116,"author":{"gitID":"-"},"content":""},{"lineNumber":117,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":118,"author":{"gitID":"-"},"content":"     * Parses a {@code Optional\u003cString\u003e phone} into an {@code Optional\u003cPhone\u003e} if {@code phone} is present."},{"lineNumber":119,"author":{"gitID":"-"},"content":"     * See header comment of this class regarding the use of {@code Optional} parameters."},{"lineNumber":120,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":121,"author":{"gitID":"-"},"content":"    public static Optional\u003cPhone\u003e parsePhone(Optional\u003cString\u003e phone) throws IllegalValueException {"},{"lineNumber":122,"author":{"gitID":"-"},"content":"        requireNonNull(phone);"},{"lineNumber":123,"author":{"gitID":"-"},"content":"        return phone.isPresent() ? Optional.of(parsePhone(phone.get())) : Optional.empty();"},{"lineNumber":124,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":125,"author":{"gitID":"-"},"content":""},{"lineNumber":126,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":127,"author":{"gitID":"-"},"content":"     * Parses a {@code String address} into an {@code Address}."},{"lineNumber":128,"author":{"gitID":"-"},"content":"     * Leading and trailing whitespaces will be trimmed."},{"lineNumber":129,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":130,"author":{"gitID":"-"},"content":"     * @throws IllegalValueException if the given {@code address} is invalid."},{"lineNumber":131,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":132,"author":{"gitID":"-"},"content":"    public static Address parseAddress(String address) throws IllegalValueException {"},{"lineNumber":133,"author":{"gitID":"-"},"content":"        requireNonNull(address);"},{"lineNumber":134,"author":{"gitID":"-"},"content":"        String trimmedAddress \u003d address.trim();"},{"lineNumber":135,"author":{"gitID":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {"},{"lineNumber":136,"author":{"gitID":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_ADDRESS_CONSTRAINTS);"},{"lineNumber":137,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":138,"author":{"gitID":"-"},"content":"        return new Address(trimmedAddress);"},{"lineNumber":139,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":140,"author":{"gitID":"-"},"content":""},{"lineNumber":141,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":142,"author":{"gitID":"-"},"content":"     * Parses a {@code Optional\u003cString\u003e address} into an {@code Optional\u003cAddress\u003e} if {@code address} is present."},{"lineNumber":143,"author":{"gitID":"-"},"content":"     * See header comment of this class regarding the use of {@code Optional} parameters."},{"lineNumber":144,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":145,"author":{"gitID":"-"},"content":"    public static Optional\u003cAddress\u003e parseAddress(Optional\u003cString\u003e address) throws IllegalValueException {"},{"lineNumber":146,"author":{"gitID":"-"},"content":"        requireNonNull(address);"},{"lineNumber":147,"author":{"gitID":"-"},"content":"        return address.isPresent() ? Optional.of(parseAddress(address.get())) : Optional.empty();"},{"lineNumber":148,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":149,"author":{"gitID":"-"},"content":""},{"lineNumber":150,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":151,"author":{"gitID":"-"},"content":"     * Parses a {@code String email} into an {@code Email}."},{"lineNumber":152,"author":{"gitID":"-"},"content":"     * Leading and trailing whitespaces will be trimmed."},{"lineNumber":153,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":154,"author":{"gitID":"-"},"content":"     * @throws IllegalValueException if the given {@code email} is invalid."},{"lineNumber":155,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":156,"author":{"gitID":"-"},"content":"    public static Email parseEmail(String email) throws IllegalValueException {"},{"lineNumber":157,"author":{"gitID":"-"},"content":"        requireNonNull(email);"},{"lineNumber":158,"author":{"gitID":"-"},"content":"        String trimmedEmail \u003d email.trim();"},{"lineNumber":159,"author":{"gitID":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {"},{"lineNumber":160,"author":{"gitID":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_EMAIL_CONSTRAINTS);"},{"lineNumber":161,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":162,"author":{"gitID":"-"},"content":"        return new Email(trimmedEmail);"},{"lineNumber":163,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":164,"author":{"gitID":"-"},"content":""},{"lineNumber":165,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":166,"author":{"gitID":"-"},"content":"     * Parses a {@code Optional\u003cString\u003e email} into an {@code Optional\u003cEmail\u003e} if {@code email} is present."},{"lineNumber":167,"author":{"gitID":"-"},"content":"     * See header comment of this class regarding the use of {@code Optional} parameters."},{"lineNumber":168,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":169,"author":{"gitID":"-"},"content":"    public static Optional\u003cEmail\u003e parseEmail(Optional\u003cString\u003e email) throws IllegalValueException {"},{"lineNumber":170,"author":{"gitID":"-"},"content":"        requireNonNull(email);"},{"lineNumber":171,"author":{"gitID":"-"},"content":"        return email.isPresent() ? Optional.of(parseEmail(email.get())) : Optional.empty();"},{"lineNumber":172,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":173,"author":{"gitID":"-"},"content":""},{"lineNumber":174,"author":{"gitID":"kexiaowen"},"content":"    //@@author kexiaowen"},{"lineNumber":175,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":176,"author":{"gitID":"kexiaowen"},"content":"     * Parses a {@code String university} into an {@code University}."},{"lineNumber":177,"author":{"gitID":"kexiaowen"},"content":"     * Leading and trailing whitespaces will be trimmed."},{"lineNumber":178,"author":{"gitID":"kexiaowen"},"content":"     *"},{"lineNumber":179,"author":{"gitID":"kexiaowen"},"content":"     * @throws IllegalValueException if given {@code University} is invalid."},{"lineNumber":180,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":181,"author":{"gitID":"kexiaowen"},"content":"    public static University parseUniversity(String university) throws IllegalValueException {"},{"lineNumber":182,"author":{"gitID":"kexiaowen"},"content":"        requireNonNull(university);"},{"lineNumber":183,"author":{"gitID":"kexiaowen"},"content":"        String trimmedUniversity \u003d university.trim();"},{"lineNumber":184,"author":{"gitID":"kexiaowen"},"content":"        if (!University.isValidUniversity(trimmedUniversity)) {"},{"lineNumber":185,"author":{"gitID":"kexiaowen"},"content":"            throw new IllegalValueException(University.MESSAGE_UNIVERSITY_CONSTRAINTS);"},{"lineNumber":186,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":187,"author":{"gitID":"kexiaowen"},"content":"        return new University(trimmedUniversity);"},{"lineNumber":188,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":189,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":190,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":191,"author":{"gitID":"kexiaowen"},"content":"     * Parses a {@code Optional\u003cString\u003e university}"},{"lineNumber":192,"author":{"gitID":"kexiaowen"},"content":"     * into an {@code Optional\u003cUniversity\u003e} if {@code university} is present."},{"lineNumber":193,"author":{"gitID":"kexiaowen"},"content":"     * See header comment of this class regarding the use of {@code Optional} parameters."},{"lineNumber":194,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":195,"author":{"gitID":"kexiaowen"},"content":"    public static Optional\u003cUniversity\u003e parseUniversity(Optional\u003cString\u003e university) throws IllegalValueException {"},{"lineNumber":196,"author":{"gitID":"kexiaowen"},"content":"        requireNonNull(university);"},{"lineNumber":197,"author":{"gitID":"kexiaowen"},"content":"        return university.isPresent() ? Optional.of(parseUniversity("},{"lineNumber":198,"author":{"gitID":"kexiaowen"},"content":"                university.get())) : Optional.empty();"},{"lineNumber":199,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":200,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":201,"author":{"gitID":"mhq199657"},"content":"    //@@author mhq199657"},{"lineNumber":202,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":203,"author":{"gitID":"mhq199657"},"content":"     * Parses a {@code String expectedGraduationYear} into an {@code ExpectedGraduationYear}."},{"lineNumber":204,"author":{"gitID":"mhq199657"},"content":"     * Leading and trailing whitespaces will be trimmed."},{"lineNumber":205,"author":{"gitID":"mhq199657"},"content":"     *"},{"lineNumber":206,"author":{"gitID":"mhq199657"},"content":"     * @throws IllegalValueException if given {@code expectedGraduationYear} is invalid."},{"lineNumber":207,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":208,"author":{"gitID":"mhq199657"},"content":"    public static ExpectedGraduationYear parseExpectedGraduationYear(String expectedGraduationYear)"},{"lineNumber":209,"author":{"gitID":"mhq199657"},"content":"            throws IllegalValueException {"},{"lineNumber":210,"author":{"gitID":"mhq199657"},"content":"        requireNonNull(expectedGraduationYear);"},{"lineNumber":211,"author":{"gitID":"mhq199657"},"content":"        String trimmedExpectedGraduationYear \u003d expectedGraduationYear.trim();"},{"lineNumber":212,"author":{"gitID":"mhq199657"},"content":"        if (!ExpectedGraduationYear.isValidExpectedGraduationYear(trimmedExpectedGraduationYear)) {"},{"lineNumber":213,"author":{"gitID":"mhq199657"},"content":"            throw new IllegalValueException(ExpectedGraduationYear.MESSAGE_EXPECTED_GRADUATION_YEAR_CONSTRAINTS);"},{"lineNumber":214,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":215,"author":{"gitID":"mhq199657"},"content":"        return new ExpectedGraduationYear(trimmedExpectedGraduationYear);"},{"lineNumber":216,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":217,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":218,"author":{"gitID":"mhq199657"},"content":"     * Parses a {@code Optional\u003cString\u003e expectedGraduationYear}"},{"lineNumber":219,"author":{"gitID":"mhq199657"},"content":"     * into an {@code Optional\u003cExpectedGraduationYear\u003e} if {@code expectedGraduationYear} is present."},{"lineNumber":220,"author":{"gitID":"mhq199657"},"content":"     * See header comment of this class regarding the use of {@code Optional} parameters."},{"lineNumber":221,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":222,"author":{"gitID":"mhq199657"},"content":"    public static Optional\u003cExpectedGraduationYear\u003e parseExpectedGraduationYear(Optional\u003cString\u003e expectedGraduationYear)"},{"lineNumber":223,"author":{"gitID":"mhq199657"},"content":"            throws IllegalValueException {"},{"lineNumber":224,"author":{"gitID":"mhq199657"},"content":"        requireNonNull(expectedGraduationYear);"},{"lineNumber":225,"author":{"gitID":"mhq199657"},"content":"        return expectedGraduationYear.isPresent() ? Optional.of(parseExpectedGraduationYear("},{"lineNumber":226,"author":{"gitID":"mhq199657"},"content":"                expectedGraduationYear.get())) : Optional.empty();"},{"lineNumber":227,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":228,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":229,"author":{"gitID":"tanhengyeow"},"content":"    //@@author tanhengyeow"},{"lineNumber":230,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":231,"author":{"gitID":"tanhengyeow"},"content":"     * Parses a {@code String major} into a {@code Major}."},{"lineNumber":232,"author":{"gitID":"tanhengyeow"},"content":"     * Leading and trailing whitespaces will be trimmed."},{"lineNumber":233,"author":{"gitID":"tanhengyeow"},"content":"     *"},{"lineNumber":234,"author":{"gitID":"tanhengyeow"},"content":"     * @throws IllegalValueException if the given {@code major} is invalid."},{"lineNumber":235,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":236,"author":{"gitID":"tanhengyeow"},"content":"    public static Major parseMajor(String major) throws IllegalValueException {"},{"lineNumber":237,"author":{"gitID":"tanhengyeow"},"content":"        requireNonNull(major);"},{"lineNumber":238,"author":{"gitID":"tanhengyeow"},"content":"        String trimmedMajor \u003d major.trim();"},{"lineNumber":239,"author":{"gitID":"tanhengyeow"},"content":"        if (!Major.isValidMajor(trimmedMajor)) {"},{"lineNumber":240,"author":{"gitID":"tanhengyeow"},"content":"            throw new IllegalValueException(Major.MESSAGE_MAJOR_CONSTRAINTS);"},{"lineNumber":241,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":242,"author":{"gitID":"tanhengyeow"},"content":"        return new Major(trimmedMajor);"},{"lineNumber":243,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":244,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":245,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":246,"author":{"gitID":"tanhengyeow"},"content":"     * Parses a {@code Optional\u003cString\u003e major} into an {@code Optional\u003cMajor\u003e} if {@code major} is present."},{"lineNumber":247,"author":{"gitID":"tanhengyeow"},"content":"     * See header comment of this class regarding the use of {@code Optional} parameters."},{"lineNumber":248,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":249,"author":{"gitID":"tanhengyeow"},"content":"    public static Optional\u003cMajor\u003e parseMajor(Optional\u003cString\u003e major) throws IllegalValueException {"},{"lineNumber":250,"author":{"gitID":"tanhengyeow"},"content":"        requireNonNull(major);"},{"lineNumber":251,"author":{"gitID":"tanhengyeow"},"content":"        return major.isPresent() ? Optional.of(parseMajor(major.get())) : Optional.empty();"},{"lineNumber":252,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":253,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":254,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":255,"author":{"gitID":"tanhengyeow"},"content":"     * Parses a {@code String gradePointAverage} into an {@code gradePointAverage}."},{"lineNumber":256,"author":{"gitID":"tanhengyeow"},"content":"     * Leading and trailing whitespaces will be trimmed."},{"lineNumber":257,"author":{"gitID":"tanhengyeow"},"content":"     * @throws IllegalValueException if given {@code gradePointAverage} is invalid."},{"lineNumber":258,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":259,"author":{"gitID":"tanhengyeow"},"content":"    public static GradePointAverage parseGradePointAverage(String gradePointAverage)"},{"lineNumber":260,"author":{"gitID":"tanhengyeow"},"content":"            throws IllegalValueException {"},{"lineNumber":261,"author":{"gitID":"tanhengyeow"},"content":"        requireNonNull(gradePointAverage);"},{"lineNumber":262,"author":{"gitID":"tanhengyeow"},"content":"        String trimmedGradePointAverage \u003d gradePointAverage.trim();"},{"lineNumber":263,"author":{"gitID":"tanhengyeow"},"content":"        if (!GradePointAverage.isValidGradePointAverage(trimmedGradePointAverage)) {"},{"lineNumber":264,"author":{"gitID":"tanhengyeow"},"content":"            throw new IllegalValueException(GradePointAverage.MESSAGE_GRADE_POINT_AVERAGE_CONSTRAINTS);"},{"lineNumber":265,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":266,"author":{"gitID":"tanhengyeow"},"content":"        return new GradePointAverage(trimmedGradePointAverage);"},{"lineNumber":267,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":268,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":269,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":270,"author":{"gitID":"tanhengyeow"},"content":"     * Parses a {@code Optional\u003cString\u003e gradePointAverage}"},{"lineNumber":271,"author":{"gitID":"tanhengyeow"},"content":"     * into an {@code Optional\u003cGradePointAverage\u003e} if {@code gradePointAverage} is present."},{"lineNumber":272,"author":{"gitID":"tanhengyeow"},"content":"     * See header comment of this class regarding the use of {@code Optional} parameters."},{"lineNumber":273,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":274,"author":{"gitID":"tanhengyeow"},"content":"    public static Optional\u003cGradePointAverage\u003e parseGradePointAverage(Optional\u003cString\u003e gradePointAverage)"},{"lineNumber":275,"author":{"gitID":"tanhengyeow"},"content":"            throws IllegalValueException {"},{"lineNumber":276,"author":{"gitID":"tanhengyeow"},"content":"        requireNonNull(gradePointAverage);"},{"lineNumber":277,"author":{"gitID":"tanhengyeow"},"content":"        return gradePointAverage.isPresent() ? Optional.of(parseGradePointAverage("},{"lineNumber":278,"author":{"gitID":"tanhengyeow"},"content":"                gradePointAverage.get())) : Optional.empty();"},{"lineNumber":279,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":280,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":281,"author":{"gitID":"kexiaowen"},"content":"    //@@author kexiaowen"},{"lineNumber":282,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":283,"author":{"gitID":"kexiaowen"},"content":"     * Parses a {@code String jobApplied} into a {@code JobApplied}."},{"lineNumber":284,"author":{"gitID":"kexiaowen"},"content":"     * Leading and trailing whitespaces will be trimmed."},{"lineNumber":285,"author":{"gitID":"kexiaowen"},"content":"     *"},{"lineNumber":286,"author":{"gitID":"kexiaowen"},"content":"     * @throws IllegalValueException if the given {@code jobApplied} is invalid."},{"lineNumber":287,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":288,"author":{"gitID":"kexiaowen"},"content":"    public static JobApplied parseJobApplied(String jobApplied) throws IllegalValueException {"},{"lineNumber":289,"author":{"gitID":"kexiaowen"},"content":"        requireNonNull(jobApplied);"},{"lineNumber":290,"author":{"gitID":"kexiaowen"},"content":"        String trimmedJobApplied \u003d jobApplied.trim();"},{"lineNumber":291,"author":{"gitID":"kexiaowen"},"content":"        if (!JobApplied.isValidJobApplied(trimmedJobApplied)) {"},{"lineNumber":292,"author":{"gitID":"kexiaowen"},"content":"            throw new IllegalValueException(JobApplied.MESSAGE_JOB_APPLIED_CONSTRAINTS);"},{"lineNumber":293,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":294,"author":{"gitID":"kexiaowen"},"content":"        return new JobApplied(trimmedJobApplied);"},{"lineNumber":295,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":296,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":297,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":298,"author":{"gitID":"kexiaowen"},"content":"     * Parses a {@code Optional\u003cString\u003e jobApplied} into an {@code Optional\u003cJobApplied\u003e}"},{"lineNumber":299,"author":{"gitID":"kexiaowen"},"content":"     * if {@code jobApplied} is present."},{"lineNumber":300,"author":{"gitID":"kexiaowen"},"content":"     * See header comment of this class regarding the use of {@code Optional} parameters."},{"lineNumber":301,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":302,"author":{"gitID":"kexiaowen"},"content":"    public static Optional\u003cJobApplied\u003e parseJobApplied(Optional\u003cString\u003e jobApplied) throws IllegalValueException {"},{"lineNumber":303,"author":{"gitID":"kexiaowen"},"content":"        requireNonNull(jobApplied);"},{"lineNumber":304,"author":{"gitID":"kexiaowen"},"content":"        return jobApplied.isPresent() ? Optional.of(parseJobApplied(jobApplied.get())) : Optional.empty();"},{"lineNumber":305,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":306,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":307,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":308,"author":{"gitID":"kexiaowen"},"content":"     * Parses a {@code String score} into a {@code double}."},{"lineNumber":309,"author":{"gitID":"kexiaowen"},"content":"     * Leading and trailing whitespaces will be trimmed."},{"lineNumber":310,"author":{"gitID":"kexiaowen"},"content":"     *"},{"lineNumber":311,"author":{"gitID":"kexiaowen"},"content":"     * @throws IllegalValueException if the given {@code score} is invalid."},{"lineNumber":312,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":313,"author":{"gitID":"kexiaowen"},"content":"    public static double parseScore(String score)"},{"lineNumber":314,"author":{"gitID":"kexiaowen"},"content":"            throws IllegalValueException {"},{"lineNumber":315,"author":{"gitID":"kexiaowen"},"content":"        requireNonNull(score);"},{"lineNumber":316,"author":{"gitID":"kexiaowen"},"content":"        String trimmedScore \u003d score.trim();"},{"lineNumber":317,"author":{"gitID":"kexiaowen"},"content":"        double scoreValue \u003d DoubleUtil.roundToTwoDecimalPlaces(trimmedScore);"},{"lineNumber":318,"author":{"gitID":"kexiaowen"},"content":"        if (!Rating.isValidScore(scoreValue)) {"},{"lineNumber":319,"author":{"gitID":"kexiaowen"},"content":"            throw new IllegalValueException(Rating.MESSAGE_RATING_CONSTRAINTS);"},{"lineNumber":320,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":321,"author":{"gitID":"kexiaowen"},"content":"        return scoreValue;"},{"lineNumber":322,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":323,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":324,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":325,"author":{"gitID":"kexiaowen"},"content":"     * Parses a {@code Optional\u003cString\u003e score} into an {@code Optional\u003cDouble\u003e}"},{"lineNumber":326,"author":{"gitID":"kexiaowen"},"content":"     * if {@code score} is present."},{"lineNumber":327,"author":{"gitID":"kexiaowen"},"content":"     * See header comment of this class regarding the use of {@code Optional} parameters."},{"lineNumber":328,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":329,"author":{"gitID":"kexiaowen"},"content":"    public static Optional\u003cDouble\u003e parseScore(Optional\u003cString\u003e score)"},{"lineNumber":330,"author":{"gitID":"kexiaowen"},"content":"            throws IllegalValueException {"},{"lineNumber":331,"author":{"gitID":"kexiaowen"},"content":"        requireNonNull(score);"},{"lineNumber":332,"author":{"gitID":"kexiaowen"},"content":"        if (score.get().trim().equals(\"\")) {"},{"lineNumber":333,"author":{"gitID":"kexiaowen"},"content":"            throw new IllegalValueException(RatingEditCommand.MESSAGE_EMPTY_SCORE);"},{"lineNumber":334,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":335,"author":{"gitID":"kexiaowen"},"content":"        return score.isPresent() ? Optional.of(parseScore("},{"lineNumber":336,"author":{"gitID":"kexiaowen"},"content":"                score.get())) : Optional.empty();"},{"lineNumber":337,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":338,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":339,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":340,"author":{"gitID":"kexiaowen"},"content":"     * Parses a {@code String score} into a {@code double}."},{"lineNumber":341,"author":{"gitID":"kexiaowen"},"content":"     * Leading and trailing whitespaces will be trimmed."},{"lineNumber":342,"author":{"gitID":"kexiaowen"},"content":"     *"},{"lineNumber":343,"author":{"gitID":"kexiaowen"},"content":"     * @throws IllegalValueException if the given {@code score} is invalid."},{"lineNumber":344,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":345,"author":{"gitID":"kexiaowen"},"content":"    public static double parseEditedScore(String score)"},{"lineNumber":346,"author":{"gitID":"kexiaowen"},"content":"            throws IllegalValueException {"},{"lineNumber":347,"author":{"gitID":"kexiaowen"},"content":"        requireNonNull(score);"},{"lineNumber":348,"author":{"gitID":"kexiaowen"},"content":"        String trimmedScore \u003d score.trim();"},{"lineNumber":349,"author":{"gitID":"kexiaowen"},"content":"        if (trimmedScore.equals(\"\")) {"},{"lineNumber":350,"author":{"gitID":"kexiaowen"},"content":"            throw new IllegalValueException(RatingEditCommand.MESSAGE_EMPTY_SCORE);"},{"lineNumber":351,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":352,"author":{"gitID":"kexiaowen"},"content":"        double scoreValue;"},{"lineNumber":353,"author":{"gitID":"kexiaowen"},"content":"        try {"},{"lineNumber":354,"author":{"gitID":"kexiaowen"},"content":"            scoreValue \u003d DoubleUtil.roundToTwoDecimalPlaces(trimmedScore);"},{"lineNumber":355,"author":{"gitID":"kexiaowen"},"content":"            if (!Rating.isValidScore(scoreValue)) {"},{"lineNumber":356,"author":{"gitID":"kexiaowen"},"content":"                throw new IllegalValueException(Rating.MESSAGE_RATING_CONSTRAINTS);"},{"lineNumber":357,"author":{"gitID":"kexiaowen"},"content":"            }"},{"lineNumber":358,"author":{"gitID":"kexiaowen"},"content":"        } catch (NumberFormatException nfe) {"},{"lineNumber":359,"author":{"gitID":"kexiaowen"},"content":"            throw new IllegalValueException(RatingEditCommand.MESSAGE_EMPTY_SCORE);"},{"lineNumber":360,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":361,"author":{"gitID":"kexiaowen"},"content":"        return scoreValue;"},{"lineNumber":362,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":363,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":364,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":365,"author":{"gitID":"kexiaowen"},"content":"     * Parses a {@code Optional\u003cString\u003e score} into an {@code Optional\u003cDouble\u003e}"},{"lineNumber":366,"author":{"gitID":"kexiaowen"},"content":"     * if {@code score} is present."},{"lineNumber":367,"author":{"gitID":"kexiaowen"},"content":"     * See header comment of this class regarding the use of {@code Optional} parameters."},{"lineNumber":368,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":369,"author":{"gitID":"kexiaowen"},"content":"    public static Optional\u003cDouble\u003e parseEditedScore(Optional\u003cString\u003e score)"},{"lineNumber":370,"author":{"gitID":"kexiaowen"},"content":"            throws IllegalValueException {"},{"lineNumber":371,"author":{"gitID":"kexiaowen"},"content":"        requireNonNull(score);"},{"lineNumber":372,"author":{"gitID":"kexiaowen"},"content":"        return score.isPresent() ? Optional.of(parseEditedScore(score.get())) : Optional.empty();"},{"lineNumber":373,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":374,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":375,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":376,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":377,"author":{"gitID":"kexiaowen"},"content":"     * Parses a {@code String sortOrder} into a {@code SortCommand.SortOrder}."},{"lineNumber":378,"author":{"gitID":"kexiaowen"},"content":"     * Leading and trailing whitespaces will be trimmed."},{"lineNumber":379,"author":{"gitID":"kexiaowen"},"content":"     *"},{"lineNumber":380,"author":{"gitID":"kexiaowen"},"content":"     * @throws IllegalValueException if given {@code sortOrder} is invalid."},{"lineNumber":381,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":382,"author":{"gitID":"kexiaowen"},"content":"    public static SortCommand.SortOrder parseSortOrder(String sortOrder)"},{"lineNumber":383,"author":{"gitID":"kexiaowen"},"content":"            throws IllegalValueException {"},{"lineNumber":384,"author":{"gitID":"kexiaowen"},"content":"        requireNonNull(sortOrder);"},{"lineNumber":385,"author":{"gitID":"kexiaowen"},"content":"        String trimmedSortOrder \u003d sortOrder.trim();"},{"lineNumber":386,"author":{"gitID":"kexiaowen"},"content":"        if (!SortCommand.isValidSortOrder(trimmedSortOrder)) {"},{"lineNumber":387,"author":{"gitID":"kexiaowen"},"content":"            throw new IllegalValueException(SortCommand.MESSAGE_INVALID_SORT_ORDER);"},{"lineNumber":388,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":389,"author":{"gitID":"kexiaowen"},"content":"        if (trimmedSortOrder.equals(SortCommand.SORT_ORDER_ASC)) {"},{"lineNumber":390,"author":{"gitID":"kexiaowen"},"content":"            return SortCommand.SortOrder.ASC;"},{"lineNumber":391,"author":{"gitID":"kexiaowen"},"content":"        } else {"},{"lineNumber":392,"author":{"gitID":"kexiaowen"},"content":"            return SortCommand.SortOrder.DESC;"},{"lineNumber":393,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":394,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":395,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":396,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":397,"author":{"gitID":"kexiaowen"},"content":"     * Parses a {@code Optional\u003cString\u003e sortOrder} into an {@code Optional\u003cSortCommand.SortOrder\u003e}"},{"lineNumber":398,"author":{"gitID":"kexiaowen"},"content":"     * if {@code sortOrder} is present."},{"lineNumber":399,"author":{"gitID":"kexiaowen"},"content":"     * See header comment of this class regarding the use of {@code Optional} parameters."},{"lineNumber":400,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":401,"author":{"gitID":"kexiaowen"},"content":"    public static Optional\u003cSortCommand.SortOrder\u003e parseSortOrder(Optional\u003cString\u003e sortOrder)"},{"lineNumber":402,"author":{"gitID":"kexiaowen"},"content":"            throws IllegalValueException {"},{"lineNumber":403,"author":{"gitID":"kexiaowen"},"content":"        requireNonNull(sortOrder);"},{"lineNumber":404,"author":{"gitID":"kexiaowen"},"content":"        return sortOrder.isPresent() ? Optional.of(parseSortOrder(sortOrder.get())) : Optional.empty();"},{"lineNumber":405,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":406,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":407,"author":{"gitID":"kexiaowen"},"content":"    //@@author"},{"lineNumber":408,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":409,"author":{"gitID":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}."},{"lineNumber":410,"author":{"gitID":"-"},"content":"     * Leading and trailing whitespaces will be trimmed."},{"lineNumber":411,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":412,"author":{"gitID":"-"},"content":"     * @throws IllegalValueException if the given {@code tag} is invalid."},{"lineNumber":413,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":414,"author":{"gitID":"-"},"content":"    public static Tag parseTag(String tag) throws IllegalValueException {"},{"lineNumber":415,"author":{"gitID":"-"},"content":"        requireNonNull(tag);"},{"lineNumber":416,"author":{"gitID":"-"},"content":"        String trimmedTag \u003d tag.trim();"},{"lineNumber":417,"author":{"gitID":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {"},{"lineNumber":418,"author":{"gitID":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_TAG_CONSTRAINTS);"},{"lineNumber":419,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":420,"author":{"gitID":"-"},"content":"        return new Tag(trimmedTag);"},{"lineNumber":421,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":422,"author":{"gitID":"-"},"content":""},{"lineNumber":423,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":424,"author":{"gitID":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}."},{"lineNumber":425,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":426,"author":{"gitID":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws IllegalValueException {"},{"lineNumber":427,"author":{"gitID":"-"},"content":"        requireNonNull(tags);"},{"lineNumber":428,"author":{"gitID":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();"},{"lineNumber":429,"author":{"gitID":"-"},"content":"        for (String tagName : tags) {"},{"lineNumber":430,"author":{"gitID":"-"},"content":"            tagSet.add(parseTag(tagName));"},{"lineNumber":431,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":432,"author":{"gitID":"-"},"content":"        return tagSet;"},{"lineNumber":433,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":434,"author":{"gitID":"mhq199657"},"content":"    //@@author mhq199657"},{"lineNumber":435,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":436,"author":{"gitID":"mhq199657"},"content":"     * Parses a {@code String resume} into an {@code Resume}."},{"lineNumber":437,"author":{"gitID":"mhq199657"},"content":"     * Leading and trailing whitespaces will be trimmed."},{"lineNumber":438,"author":{"gitID":"mhq199657"},"content":"     *"},{"lineNumber":439,"author":{"gitID":"mhq199657"},"content":"     * @throws IllegalValueException if the given {@code resume} is invalid."},{"lineNumber":440,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":441,"author":{"gitID":"mhq199657"},"content":"    public static Resume parseResume(String resume) throws IllegalValueException {"},{"lineNumber":442,"author":{"gitID":"mhq199657"},"content":"        requireNonNull(resume);"},{"lineNumber":443,"author":{"gitID":"mhq199657"},"content":"        String trimmedResume \u003d resume.trim();"},{"lineNumber":444,"author":{"gitID":"mhq199657"},"content":"        if (!Resume.isValidResume(trimmedResume)) {"},{"lineNumber":445,"author":{"gitID":"mhq199657"},"content":"            throw new IllegalValueException(Resume.MESSAGE_RESUME_CONSTRAINTS);"},{"lineNumber":446,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":447,"author":{"gitID":"mhq199657"},"content":"        return new Resume(trimmedResume);"},{"lineNumber":448,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":449,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":450,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":451,"author":{"gitID":"mhq199657"},"content":"     * Parses a {@code Optional\u003cString\u003e resume} into an {@code Optional\u003cResume\u003e} if {@code resume} is present."},{"lineNumber":452,"author":{"gitID":"mhq199657"},"content":"     * See header comment of this class regarding the use of {@code Optional} parameters."},{"lineNumber":453,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":454,"author":{"gitID":"mhq199657"},"content":"    public static Optional\u003cResume\u003e parseResume(Optional\u003cString\u003e resume) throws IllegalValueException {"},{"lineNumber":455,"author":{"gitID":"mhq199657"},"content":"        requireNonNull(resume);"},{"lineNumber":456,"author":{"gitID":"mhq199657"},"content":"        return resume.isPresent() ? Optional.of(parseResume(resume.get())) : Optional.empty();"},{"lineNumber":457,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":458,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":459,"author":{"gitID":"Ang-YC"},"content":"    //@@author Ang-YC"},{"lineNumber":460,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":461,"author":{"gitID":"Ang-YC"},"content":"     * Parses a {@code String profileImage} into a {@code ProfileImage}."},{"lineNumber":462,"author":{"gitID":"Ang-YC"},"content":"     * Leading and trailing whitespaces will be trimmed."},{"lineNumber":463,"author":{"gitID":"Ang-YC"},"content":"     *"},{"lineNumber":464,"author":{"gitID":"Ang-YC"},"content":"     * @throws IllegalValueException if the given {@code profileImage} is invalid."},{"lineNumber":465,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":466,"author":{"gitID":"Ang-YC"},"content":"    public static ProfileImage parseProfileImage(String profileImage) throws IllegalValueException {"},{"lineNumber":467,"author":{"gitID":"Ang-YC"},"content":"        requireNonNull(profileImage);"},{"lineNumber":468,"author":{"gitID":"Ang-YC"},"content":"        String trimmedProfileImage \u003d profileImage.trim();"},{"lineNumber":469,"author":{"gitID":"Ang-YC"},"content":"        if (!ProfileImage.isValidFile(trimmedProfileImage)) {"},{"lineNumber":470,"author":{"gitID":"Ang-YC"},"content":"            throw new IllegalValueException(ProfileImage.MESSAGE_IMAGE_CONSTRAINTS);"},{"lineNumber":471,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":472,"author":{"gitID":"Ang-YC"},"content":"        return new ProfileImage(trimmedProfileImage);"},{"lineNumber":473,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":474,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":475,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":476,"author":{"gitID":"Ang-YC"},"content":"     * Parses a {@code Optional\u003cString\u003e profileImage} into an {@code Optional\u003cProfileImage\u003e}"},{"lineNumber":477,"author":{"gitID":"Ang-YC"},"content":"     * if {@code profileImage} is present."},{"lineNumber":478,"author":{"gitID":"Ang-YC"},"content":"     * See header comment of this class regarding the use of {@code Optional} parameters."},{"lineNumber":479,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":480,"author":{"gitID":"Ang-YC"},"content":"    public static Optional\u003cProfileImage\u003e parseProfileImage(Optional\u003cString\u003e profileImage) throws IllegalValueException {"},{"lineNumber":481,"author":{"gitID":"Ang-YC"},"content":"        requireNonNull(profileImage);"},{"lineNumber":482,"author":{"gitID":"Ang-YC"},"content":"        return profileImage.isPresent() ? Optional.of(parseProfileImage(profileImage.get())) : Optional.empty();"},{"lineNumber":483,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":484,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":485,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":486,"author":{"gitID":"Ang-YC"},"content":"     * Parses a {@code String comment} into a {@code Comment}."},{"lineNumber":487,"author":{"gitID":"Ang-YC"},"content":"     * Leading and trailing whitespaces will be trimmed."},{"lineNumber":488,"author":{"gitID":"Ang-YC"},"content":"     *"},{"lineNumber":489,"author":{"gitID":"Ang-YC"},"content":"     * @throws IllegalValueException if the given {@code comment} is invalid."},{"lineNumber":490,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":491,"author":{"gitID":"Ang-YC"},"content":"    public static Comment parseComment(String comment) throws IllegalValueException {"},{"lineNumber":492,"author":{"gitID":"Ang-YC"},"content":"        requireNonNull(comment);"},{"lineNumber":493,"author":{"gitID":"Ang-YC"},"content":"        String trimmedComment \u003d comment.trim();"},{"lineNumber":494,"author":{"gitID":"Ang-YC"},"content":"        if (!Comment.isValidComment(trimmedComment)) {"},{"lineNumber":495,"author":{"gitID":"Ang-YC"},"content":"            throw new IllegalValueException(Comment.MESSAGE_COMMENT_CONSTRAINTS);"},{"lineNumber":496,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":497,"author":{"gitID":"Ang-YC"},"content":"        return new Comment(trimmedComment);"},{"lineNumber":498,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":499,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":500,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":501,"author":{"gitID":"Ang-YC"},"content":"     * Parses a {@code Optional\u003cString\u003e comment} into an {@code Optional\u003cComment\u003e} if {@code comment} is present."},{"lineNumber":502,"author":{"gitID":"Ang-YC"},"content":"     * See header comment of this class regarding the use of {@code Comment} parameters."},{"lineNumber":503,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":504,"author":{"gitID":"Ang-YC"},"content":"    public static Optional\u003cComment\u003e parseComment(Optional\u003cString\u003e comment) throws IllegalValueException {"},{"lineNumber":505,"author":{"gitID":"Ang-YC"},"content":"        requireNonNull(comment);"},{"lineNumber":506,"author":{"gitID":"Ang-YC"},"content":"        return comment.isPresent() ? Optional.of(parseComment(comment.get())) : Optional.empty();"},{"lineNumber":507,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":508,"author":{"gitID":"Ang-YC"},"content":"}"}],"authorContributionMap":{"kexiaowen":181,"mhq199657":57,"-":164,"Ang-YC":52,"tanhengyeow":54}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":4,"author":{"gitID":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands"},{"lineNumber":5,"author":{"gitID":"-"},"content":" */"},{"lineNumber":6,"author":{"gitID":"-"},"content":"public class CliSyntax {"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"    /* Prefix definitions */"},{"lineNumber":9,"author":{"gitID":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");"},{"lineNumber":10,"author":{"gitID":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");"},{"lineNumber":11,"author":{"gitID":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");"},{"lineNumber":12,"author":{"gitID":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");"},{"lineNumber":13,"author":{"gitID":"kexiaowen"},"content":"    public static final Prefix PREFIX_UNIVERSITY \u003d new Prefix(\"u/\");"},{"lineNumber":14,"author":{"gitID":"mhq199657"},"content":"    public static final Prefix PREFIX_EXPECTED_GRADUATION_YEAR \u003d new Prefix(\"y/\");"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"    public static final Prefix PREFIX_MAJOR \u003d new Prefix(\"m/\");"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"    public static final Prefix PREFIX_GRADE_POINT_AVERAGE \u003d new Prefix(\"g/\");"},{"lineNumber":17,"author":{"gitID":"kexiaowen"},"content":"    public static final Prefix PREFIX_JOB_APPLIED \u003d new Prefix(\"j/\");"},{"lineNumber":18,"author":{"gitID":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");"},{"lineNumber":19,"author":{"gitID":"Ang-YC"},"content":"    // Used only in add/edit command"},{"lineNumber":20,"author":{"gitID":"mhq199657"},"content":"    public static final Prefix PREFIX_RESUME \u003d new Prefix(\"r/\");"},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":"    public static final Prefix PREFIX_IMAGE \u003d new Prefix(\"i/\");"},{"lineNumber":22,"author":{"gitID":"Ang-YC"},"content":"    public static final Prefix PREFIX_COMMENT \u003d new Prefix(\"c/\");"},{"lineNumber":23,"author":{"gitID":"Ang-YC"},"content":"    // Used only in filter command"},{"lineNumber":24,"author":{"gitID":"mhq199657"},"content":"    public static final Prefix PREFIX_RATING \u003d new Prefix(\"r/\");"},{"lineNumber":25,"author":{"gitID":"mhq199657"},"content":"    public static final Prefix PREFIX_INTERVIEW_DATE \u003d new Prefix(\"d/\");"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"kexiaowen"},"content":"    // used in rating-sort and gpa-sort commands only"},{"lineNumber":28,"author":{"gitID":"kexiaowen"},"content":"    public static final Prefix PREFIX_SORT_ORDER \u003d new Prefix(\"o/\");"},{"lineNumber":29,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":30,"author":{"gitID":"kexiaowen"},"content":"    public static final Prefix PREFIX_TECHNICAL_SKILLS_SCORE \u003d new Prefix(\"t/\");"},{"lineNumber":31,"author":{"gitID":"kexiaowen"},"content":"    public static final Prefix PREFIX_COMMUNICATION_SKILLS_SCORE \u003d new Prefix(\"c/\");"},{"lineNumber":32,"author":{"gitID":"kexiaowen"},"content":"    public static final Prefix PREFIX_PROBLEM_SOLVING_SKILLS_SCORE \u003d new Prefix(\"p/\");"},{"lineNumber":33,"author":{"gitID":"kexiaowen"},"content":"    public static final Prefix PREFIX_EXPERIENCE_SCORE \u003d new Prefix(\"e/\");"},{"lineNumber":34,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"kexiaowen":9,"mhq199657":4,"-":15,"tanhengyeow":2,"Ang-YC":4}},{"path":"src/main/java/seedu/address/logic/parser/FilterCommandParser.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXPECTED_GRADUATION_YEAR;"},{"lineNumber":5,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GRADE_POINT_AVERAGE;"},{"lineNumber":6,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERVIEW_DATE;"},{"lineNumber":7,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RATING;"},{"lineNumber":8,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":9,"author":{"gitID":"mhq199657"},"content":"import java.util.function.Predicate;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import java.util.stream.Stream;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;"},{"lineNumber":13,"author":{"gitID":"mhq199657"},"content":"import seedu.address.logic.commands.FilterCommand;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;"},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":"//@@author mhq199657"},{"lineNumber":17,"author":{"gitID":"mhq199657"},"content":"/**"},{"lineNumber":18,"author":{"gitID":"mhq199657"},"content":" * Parses input arguments and creates a new FilterCommand object"},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":" */"},{"lineNumber":20,"author":{"gitID":"mhq199657"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {"},{"lineNumber":21,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":22,"author":{"gitID":"mhq199657"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand"},{"lineNumber":23,"author":{"gitID":"mhq199657"},"content":"     * and returns an AddCommand object for execution."},{"lineNumber":24,"author":{"gitID":"mhq199657"},"content":"     * @throws ParseException if the user input does not conform the expected format"},{"lineNumber":25,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":26,"author":{"gitID":"mhq199657"},"content":"    public FilterCommand parse(String args) throws ParseException {"},{"lineNumber":27,"author":{"gitID":"mhq199657"},"content":"        ArgumentMultimap argMultimap \u003d"},{"lineNumber":28,"author":{"gitID":"mhq199657"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_EXPECTED_GRADUATION_YEAR, PREFIX_RATING,"},{"lineNumber":29,"author":{"gitID":"mhq199657"},"content":"                        PREFIX_GRADE_POINT_AVERAGE, PREFIX_INTERVIEW_DATE);"},{"lineNumber":30,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":31,"author":{"gitID":"mhq199657"},"content":"        if (!isValidFilterCommandInput(argMultimap,"},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":"                PREFIX_EXPECTED_GRADUATION_YEAR, PREFIX_RATING, PREFIX_GRADE_POINT_AVERAGE, PREFIX_INTERVIEW_DATE)"},{"lineNumber":33,"author":{"gitID":"mhq199657"},"content":"                || !argMultimap.getPreamble().isEmpty()) {"},{"lineNumber":34,"author":{"gitID":"mhq199657"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));"},{"lineNumber":35,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":36,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":37,"author":{"gitID":"mhq199657"},"content":"        try {"},{"lineNumber":38,"author":{"gitID":"mhq199657"},"content":"            Predicate\u003cPerson\u003e expectedGraduationYearPredicate \u003d FilterUtil.parseExpectedGraduationYear(argMultimap"},{"lineNumber":39,"author":{"gitID":"mhq199657"},"content":"                    .getValue(PREFIX_EXPECTED_GRADUATION_YEAR));"},{"lineNumber":40,"author":{"gitID":"mhq199657"},"content":"            Predicate\u003cPerson\u003e ratingPredicate \u003d FilterUtil.parseRating(argMultimap.getValue(PREFIX_RATING));"},{"lineNumber":41,"author":{"gitID":"mhq199657"},"content":"            Predicate\u003cPerson\u003e gpaPredicate \u003d"},{"lineNumber":42,"author":{"gitID":"mhq199657"},"content":"                    FilterUtil.parseGradePointAverage(argMultimap.getValue(PREFIX_GRADE_POINT_AVERAGE));"},{"lineNumber":43,"author":{"gitID":"mhq199657"},"content":"            Predicate\u003cPerson\u003e interviewDatePredicate \u003d"},{"lineNumber":44,"author":{"gitID":"mhq199657"},"content":"                    FilterUtil.parseInterviewDate(argMultimap.getValue(PREFIX_INTERVIEW_DATE));"},{"lineNumber":45,"author":{"gitID":"mhq199657"},"content":"            // combine all predicates together using and"},{"lineNumber":46,"author":{"gitID":"mhq199657"},"content":"            Predicate\u003cPerson\u003e combinedPredicate \u003d combinePredicate(expectedGraduationYearPredicate,"},{"lineNumber":47,"author":{"gitID":"mhq199657"},"content":"                    ratingPredicate, gpaPredicate, interviewDatePredicate);"},{"lineNumber":48,"author":{"gitID":"mhq199657"},"content":"            return new FilterCommand(combinedPredicate);"},{"lineNumber":49,"author":{"gitID":"mhq199657"},"content":"        } catch (ParseException pe) {"},{"lineNumber":50,"author":{"gitID":"mhq199657"},"content":"            throw pe;"},{"lineNumber":51,"author":{"gitID":"mhq199657"},"content":"        } catch (IllegalValueException ive) {"},{"lineNumber":52,"author":{"gitID":"mhq199657"},"content":"            throw new ParseException(ive.getMessage(), ive);"},{"lineNumber":53,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":54,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":55,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":56,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":57,"author":{"gitID":"mhq199657"},"content":"     * checks whether the user input is of the correct format in the sense that it contains at least 1 prefix"},{"lineNumber":58,"author":{"gitID":"mhq199657"},"content":"     * @param argumentMultimap Parsed user input"},{"lineNumber":59,"author":{"gitID":"mhq199657"},"content":"     * @param prefixes Supported prefixes"},{"lineNumber":60,"author":{"gitID":"mhq199657"},"content":"     * @return whether the input is valid"},{"lineNumber":61,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":62,"author":{"gitID":"mhq199657"},"content":"    private boolean isValidFilterCommandInput(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"},{"lineNumber":63,"author":{"gitID":"mhq199657"},"content":"        boolean hasAnyPrefixes \u003d false;"},{"lineNumber":64,"author":{"gitID":"mhq199657"},"content":"        for (Prefix p: prefixes) {"},{"lineNumber":65,"author":{"gitID":"mhq199657"},"content":"            if (arePrefixesPresent(argumentMultimap, p)) {"},{"lineNumber":66,"author":{"gitID":"mhq199657"},"content":"                hasAnyPrefixes \u003d true;"},{"lineNumber":67,"author":{"gitID":"mhq199657"},"content":"                break;"},{"lineNumber":68,"author":{"gitID":"mhq199657"},"content":"            }"},{"lineNumber":69,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":70,"author":{"gitID":"mhq199657"},"content":"        return hasAnyPrefixes;"},{"lineNumber":71,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":72,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":73,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":74,"author":{"gitID":"mhq199657"},"content":"     * combines all the predicate into one predicate AND-connected"},{"lineNumber":75,"author":{"gitID":"mhq199657"},"content":"     * @param predicates all the predicates to be combined"},{"lineNumber":76,"author":{"gitID":"mhq199657"},"content":"     * @return a single predicate"},{"lineNumber":77,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":78,"author":{"gitID":"mhq199657"},"content":"    private Predicate\u003cPerson\u003e combinePredicate(Predicate\u003cPerson\u003e... predicates) {"},{"lineNumber":79,"author":{"gitID":"mhq199657"},"content":"        Predicate\u003cPerson\u003e combinedPredicate \u003d null;"},{"lineNumber":80,"author":{"gitID":"mhq199657"},"content":"        for (Predicate\u003cPerson\u003e p: predicates) {"},{"lineNumber":81,"author":{"gitID":"mhq199657"},"content":"            if (p !\u003d null) {"},{"lineNumber":82,"author":{"gitID":"mhq199657"},"content":"                if (combinedPredicate \u003d\u003d null) {"},{"lineNumber":83,"author":{"gitID":"mhq199657"},"content":"                    combinedPredicate \u003d p;"},{"lineNumber":84,"author":{"gitID":"mhq199657"},"content":"                } else {"},{"lineNumber":85,"author":{"gitID":"mhq199657"},"content":"                    combinedPredicate \u003d combinedPredicate.and(p);"},{"lineNumber":86,"author":{"gitID":"mhq199657"},"content":"                }"},{"lineNumber":87,"author":{"gitID":"mhq199657"},"content":"            }"},{"lineNumber":88,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":89,"author":{"gitID":"mhq199657"},"content":"        return combinedPredicate;"},{"lineNumber":90,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":91,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":92,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":93,"author":{"gitID":"mhq199657"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"},{"lineNumber":94,"author":{"gitID":"mhq199657"},"content":"     * {@code ArgumentMultimap}."},{"lineNumber":95,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":96,"author":{"gitID":"mhq199657"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"},{"lineNumber":97,"author":{"gitID":"mhq199657"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"},{"lineNumber":98,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":99,"author":{"gitID":"mhq199657"},"content":"}"}],"authorContributionMap":{"mhq199657":92,"-":7}},{"path":"src/main/java/seedu/address/logic/parser/ResumeUtil.java","lines":[{"lineNumber":1,"author":{"gitID":"mhq199657"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":3,"author":{"gitID":"mhq199657"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.nio.file.Files;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":7,"author":{"gitID":"mhq199657"},"content":"import java.security.MessageDigest;"},{"lineNumber":8,"author":{"gitID":"mhq199657"},"content":"import java.security.NoSuchAlgorithmException;"},{"lineNumber":9,"author":{"gitID":"mhq199657"},"content":"import java.sql.Timestamp;"},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":"import javax.xml.bind.DatatypeConverter;"},{"lineNumber":12,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":13,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Resume;"},{"lineNumber":14,"author":{"gitID":"mhq199657"},"content":"import seedu.address.storage.DataFileStorage;"},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":"/**"},{"lineNumber":17,"author":{"gitID":"mhq199657"},"content":" * Handles resume file in the data folder"},{"lineNumber":18,"author":{"gitID":"mhq199657"},"content":" */"},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":"public class ResumeUtil {"},{"lineNumber":20,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":21,"author":{"gitID":"mhq199657"},"content":"     * Processes the resume into the correct resume name"},{"lineNumber":22,"author":{"gitID":"mhq199657"},"content":"     * @param resume"},{"lineNumber":23,"author":{"gitID":"mhq199657"},"content":"     * @return processed resume"},{"lineNumber":24,"author":{"gitID":"mhq199657"},"content":"     * @throws IOException"},{"lineNumber":25,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":26,"author":{"gitID":"mhq199657"},"content":"    public static Resume process(Resume resume) throws IOException {"},{"lineNumber":27,"author":{"gitID":"mhq199657"},"content":"        String filePath \u003d resume.value;"},{"lineNumber":28,"author":{"gitID":"mhq199657"},"content":"        if (filePath \u003d\u003d null) {"},{"lineNumber":29,"author":{"gitID":"mhq199657"},"content":"            return new Resume(null);"},{"lineNumber":30,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":31,"author":{"gitID":"mhq199657"},"content":"        String fullPath \u003d System.getProperty(\"user.dir\") + File.separator + filePath;"},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":"        assert(new File(fullPath).exists());"},{"lineNumber":33,"author":{"gitID":"mhq199657"},"content":"        String newFileName \u003d getNewFileName(fullPath);"},{"lineNumber":34,"author":{"gitID":"mhq199657"},"content":"        transferResumeFileToDataFolder(fullPath, newFileName);"},{"lineNumber":35,"author":{"gitID":"mhq199657"},"content":"        return new Resume(\"data\" + File.separator + newFileName, resume.value);"},{"lineNumber":36,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":37,"author":{"gitID":"mhq199657"},"content":"    private static String getNewFileName(String fullPath) {"},{"lineNumber":38,"author":{"gitID":"mhq199657"},"content":"        MessageDigest md \u003d null;"},{"lineNumber":39,"author":{"gitID":"mhq199657"},"content":"        try {"},{"lineNumber":40,"author":{"gitID":"mhq199657"},"content":"            md \u003d MessageDigest.getInstance(\"MD5\");"},{"lineNumber":41,"author":{"gitID":"mhq199657"},"content":"        } catch (NoSuchAlgorithmException nsae) {"},{"lineNumber":42,"author":{"gitID":"mhq199657"},"content":"            throw new AssertionError(\"This should never happen.\");"},{"lineNumber":43,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":44,"author":{"gitID":"mhq199657"},"content":"        assert(md !\u003d null);"},{"lineNumber":45,"author":{"gitID":"mhq199657"},"content":"        File currResumeFile \u003d new File(fullPath);"},{"lineNumber":46,"author":{"gitID":"mhq199657"},"content":"        assert(currResumeFile.exists() \u0026\u0026 currResumeFile.isFile());"},{"lineNumber":47,"author":{"gitID":"mhq199657"},"content":"        try {"},{"lineNumber":48,"author":{"gitID":"mhq199657"},"content":"            md.update(Files.readAllBytes(Paths.get(fullPath)));"},{"lineNumber":49,"author":{"gitID":"mhq199657"},"content":"        } catch (IOException ioe) {"},{"lineNumber":50,"author":{"gitID":"mhq199657"},"content":"            throw new AssertionError(\"This should never happen.\");"},{"lineNumber":51,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":52,"author":{"gitID":"mhq199657"},"content":"        byte[] digest \u003d md.digest();"},{"lineNumber":53,"author":{"gitID":"mhq199657"},"content":"        return Long.toString(new Timestamp(System.currentTimeMillis()).getTime())"},{"lineNumber":54,"author":{"gitID":"mhq199657"},"content":"                + \"_\" + DatatypeConverter.printHexBinary(digest).toUpperCase();"},{"lineNumber":55,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"mhq199657"},"content":"    private static void transferResumeFileToDataFolder(String fullPath, String newFileName) throws IOException {"},{"lineNumber":57,"author":{"gitID":"mhq199657"},"content":"        DataFileStorage.copyResumeFileToDataFolder(fullPath, newFileName);"},{"lineNumber":58,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":59,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":60,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":61,"author":{"gitID":"mhq199657"},"content":"     * cleans Data Folder when there is a DuplicatePersonException"},{"lineNumber":62,"author":{"gitID":"mhq199657"},"content":"     * @param resume the resume to be deleted in folder"},{"lineNumber":63,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":64,"author":{"gitID":"mhq199657"},"content":"    public static void cleanUpDataFolder(Resume resume) {"},{"lineNumber":65,"author":{"gitID":"mhq199657"},"content":"        if (resume.isHashed()) {"},{"lineNumber":66,"author":{"gitID":"mhq199657"},"content":"            DataFileStorage.deleteUnreferencedDataFile(resume.value);"},{"lineNumber":67,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":68,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":69,"author":{"gitID":"mhq199657"},"content":"}"}],"authorContributionMap":{"mhq199657":66,"-":3}},{"path":"src/test/java/seedu/address/testutil/MoreTypicalPersons.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.testutil;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"Ang-YC"},"content":"import static java.util.Objects.isNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"mhq199657"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitID":"mhq199657"},"content":"import java.time.Month;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.model.AddressBook;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;"},{"lineNumber":14,"author":{"gitID":"mhq199657"},"content":"/**"},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":" * A utility class containing a longer list of {@code Person} objects to be used in tests."},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":" */"},{"lineNumber":17,"author":{"gitID":"mhq199657"},"content":"public class MoreTypicalPersons {"},{"lineNumber":18,"author":{"gitID":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")"},{"lineNumber":19,"author":{"gitID":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")"},{"lineNumber":20,"author":{"gitID":"kexiaowen"},"content":"            .withPhone(\"85355255\").withUniversity(\"NUS\").withExpectedGraduationYear(\"2020\")"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"            .withMajor(\"Computer Science\")"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"            .withGradePointAverage(\"4.84\")"},{"lineNumber":23,"author":{"gitID":"kexiaowen"},"content":"            .withJobApplied(\"Software Engineer\")"},{"lineNumber":24,"author":{"gitID":"kexiaowen"},"content":"            .withRating(\"2.7\", \"3.9\","},{"lineNumber":25,"author":{"gitID":"kexiaowen"},"content":"                    \"2.5\", \"2.5\")"},{"lineNumber":26,"author":{"gitID":"kexiaowen"},"content":"            .withResume(formPathFromFileName(\"alice.pdf\"))"},{"lineNumber":27,"author":{"gitID":"Ang-YC"},"content":"            .withProfileImage(formImagePathFromFileName(\"elon.jpg\"))"},{"lineNumber":28,"author":{"gitID":"Ang-YC"},"content":"            .withComment(\"Alice!\")"},{"lineNumber":29,"author":{"gitID":"mhq199657"},"content":"            .withInterviewDate(LocalDateTime.of(2018, Month.APRIL, 2, 14, 0, 0))"},{"lineNumber":30,"author":{"gitID":"-"},"content":"            .withTags(\"friends\").build();"},{"lineNumber":31,"author":{"gitID":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")"},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\").withResume(formPathFromFileName(null))"},{"lineNumber":33,"author":{"gitID":"kexiaowen"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withUniversity(\"NTU\")"},{"lineNumber":34,"author":{"gitID":"kexiaowen"},"content":"            .withExpectedGraduationYear(\"2021\")"},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"            .withMajor(\"Computer Engineering\")"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"            .withGradePointAverage(\"4.73\")"},{"lineNumber":37,"author":{"gitID":"kexiaowen"},"content":"            .withJobApplied(\"Software Engineer\")"},{"lineNumber":38,"author":{"gitID":"kexiaowen"},"content":"            .withRating(\"4\", \"4.5\","},{"lineNumber":39,"author":{"gitID":"kexiaowen"},"content":"                    \"3\", \"3.5\")"},{"lineNumber":40,"author":{"gitID":"Ang-YC"},"content":"            .withProfileImage(formImagePathFromFileName(\"gates.jpg\"))"},{"lineNumber":41,"author":{"gitID":"Ang-YC"},"content":"            .withComment(\"Benson!\")"},{"lineNumber":42,"author":{"gitID":"mhq199657"},"content":"            .withInterviewDate(LocalDateTime.of(2018, Month.APRIL, 6, 16, 0, 0))"},{"lineNumber":43,"author":{"gitID":"mhq199657"},"content":"            .withStatus(2).withTags(\"owesMoney\", \"friends\").build();"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")"},{"lineNumber":45,"author":{"gitID":"kexiaowen"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withUniversity(\"SMU\")"},{"lineNumber":46,"author":{"gitID":"kexiaowen"},"content":"            .withExpectedGraduationYear(\"2019\")"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"            .withMajor(\"Computer Science\")"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"            .withGradePointAverage(\"4.92\")"},{"lineNumber":49,"author":{"gitID":"kexiaowen"},"content":"            .withJobApplied(\"Front-end Developer\")"},{"lineNumber":50,"author":{"gitID":"kexiaowen"},"content":"            .withRating(\"-1\", \"-1\","},{"lineNumber":51,"author":{"gitID":"Ang-YC"},"content":"                    \"-1\", \"-1\")"},{"lineNumber":52,"author":{"gitID":"Ang-YC"},"content":"            .withProfileImage(null).withComment(null).build();"},{"lineNumber":53,"author":{"gitID":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")"},{"lineNumber":54,"author":{"gitID":"kexiaowen"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withUniversity(\"SUTD\")"},{"lineNumber":55,"author":{"gitID":"kexiaowen"},"content":"            .withExpectedGraduationYear(\"2020\")"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":"            .withMajor(\"Information Security\")"},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"            .withGradePointAverage(\"4.24\")"},{"lineNumber":58,"author":{"gitID":"kexiaowen"},"content":"            .withJobApplied(\"Web Security Researcher\")"},{"lineNumber":59,"author":{"gitID":"kexiaowen"},"content":"            .withRating(\"-1\", \"-1\","},{"lineNumber":60,"author":{"gitID":"kexiaowen"},"content":"                    \"-1\", \"-1\")"},{"lineNumber":61,"author":{"gitID":"Ang-YC"},"content":"            .withProfileImage(formImagePathFromFileName(\"jobs.jpg\"))"},{"lineNumber":62,"author":{"gitID":"Ang-YC"},"content":"            .withComment(\"Daniel!\")"},{"lineNumber":63,"author":{"gitID":"kexiaowen"},"content":"            .withResume(formPathFromFileName(\"daniel.pdf\")).build();"},{"lineNumber":64,"author":{"gitID":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")"},{"lineNumber":65,"author":{"gitID":"kexiaowen"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withUniversity(\"NUS\")"},{"lineNumber":66,"author":{"gitID":"kexiaowen"},"content":"            .withExpectedGraduationYear(\"2018\")"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"            .withMajor(\"Business Analytics\")"},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":"            .withGradePointAverage(\"4.33\")"},{"lineNumber":69,"author":{"gitID":"kexiaowen"},"content":"            .withJobApplied(\"Big Data Analyst\")"},{"lineNumber":70,"author":{"gitID":"kexiaowen"},"content":"            .withRating(\"-1\", \"-1\","},{"lineNumber":71,"author":{"gitID":"Ang-YC"},"content":"                    \"-1\", \"-1\")"},{"lineNumber":72,"author":{"gitID":"Ang-YC"},"content":"            .withProfileImage(formImagePathFromFileName(\"larry.jpg\"))"},{"lineNumber":73,"author":{"gitID":"Ang-YC"},"content":"            .withComment(\"Elle!\").withStatus(7).build();"},{"lineNumber":74,"author":{"gitID":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")"},{"lineNumber":75,"author":{"gitID":"kexiaowen"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withUniversity(\"NUS\")"},{"lineNumber":76,"author":{"gitID":"kexiaowen"},"content":"            .withExpectedGraduationYear(\"2019\")"},{"lineNumber":77,"author":{"gitID":"tanhengyeow"},"content":"            .withMajor(\"Computer Science\")"},{"lineNumber":78,"author":{"gitID":"tanhengyeow"},"content":"            .withGradePointAverage(\"4.75\")"},{"lineNumber":79,"author":{"gitID":"kexiaowen"},"content":"            .withJobApplied(\"Software Engineer\")"},{"lineNumber":80,"author":{"gitID":"kexiaowen"},"content":"            .withRating(\"-1\", \"-1\","},{"lineNumber":81,"author":{"gitID":"Ang-YC"},"content":"                    \"-1\", \"-1\")"},{"lineNumber":82,"author":{"gitID":"Ang-YC"},"content":"            .withProfileImage(formImagePathFromFileName(\"mark.jpg\"))"},{"lineNumber":83,"author":{"gitID":"Ang-YC"},"content":"            .withComment(\"Fiona!\").withStatus(1).build();"},{"lineNumber":84,"author":{"gitID":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")"},{"lineNumber":85,"author":{"gitID":"kexiaowen"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withUniversity(\"NYU\")"},{"lineNumber":86,"author":{"gitID":"kexiaowen"},"content":"            .withExpectedGraduationYear(\"2022\")"},{"lineNumber":87,"author":{"gitID":"tanhengyeow"},"content":"            .withMajor(\"Information Systems\")"},{"lineNumber":88,"author":{"gitID":"tanhengyeow"},"content":"            .withGradePointAverage(\"3.88\")"},{"lineNumber":89,"author":{"gitID":"kexiaowen"},"content":"            .withJobApplied(\"Software Engineer\")"},{"lineNumber":90,"author":{"gitID":"kexiaowen"},"content":"            .withRating(\"-1\", \"-1\","},{"lineNumber":91,"author":{"gitID":"kexiaowen"},"content":"                    \"-1\", \"-1\")"},{"lineNumber":92,"author":{"gitID":"Ang-YC"},"content":"            .withResume(formPathFromFileName(\"george.pdf\")).withStatus(6)"},{"lineNumber":93,"author":{"gitID":"Ang-YC"},"content":"            .withProfileImage(null).withComment(null).build();"},{"lineNumber":94,"author":{"gitID":"mhq199657"},"content":"    public static final Person HOWARD \u003d new PersonBuilder().withName(\"HOWARD LEE\")"},{"lineNumber":95,"author":{"gitID":"mhq199657"},"content":"            .withAddress(\"124, Jurong East Ave 8, #09-111\").withEmail(\"hlee@example.com\")"},{"lineNumber":96,"author":{"gitID":"mhq199657"},"content":"            .withPhone(\"86355255\").withUniversity(\"NUS\").withExpectedGraduationYear(\"2020\")"},{"lineNumber":97,"author":{"gitID":"mhq199657"},"content":"            .withMajor(\"Computer Science\")"},{"lineNumber":98,"author":{"gitID":"mhq199657"},"content":"            .withGradePointAverage(\"4.04\")"},{"lineNumber":99,"author":{"gitID":"mhq199657"},"content":"            .withJobApplied(\"Software Tester\")"},{"lineNumber":100,"author":{"gitID":"mhq199657"},"content":"            .withRating(\"2.79\", \"3.99\","},{"lineNumber":101,"author":{"gitID":"mhq199657"},"content":"                    \"2.59\", \"2.59\")"},{"lineNumber":102,"author":{"gitID":"mhq199657"},"content":"            .withResume(null)"},{"lineNumber":103,"author":{"gitID":"mhq199657"},"content":"            .withProfileImage(null)"},{"lineNumber":104,"author":{"gitID":"mhq199657"},"content":"            .withComment(\"Alice!\")"},{"lineNumber":105,"author":{"gitID":"mhq199657"},"content":"            .withInterviewDate(LocalDateTime.of(2018, Month.APRIL, 2, 10, 0, 0))"},{"lineNumber":106,"author":{"gitID":"mhq199657"},"content":"            .withTags(\"friends\").build();"},{"lineNumber":107,"author":{"gitID":"mhq199657"},"content":"    public static final Person IOTA \u003d new PersonBuilder().withName(\"Iota Small\")"},{"lineNumber":108,"author":{"gitID":"mhq199657"},"content":"            .withAddress(\"311, Tiny Drive 2, #02-25\").withResume(null)"},{"lineNumber":109,"author":{"gitID":"mhq199657"},"content":"            .withEmail(\"io@example.com\").withPhone(\"98765431\").withUniversity(\"NTU\")"},{"lineNumber":110,"author":{"gitID":"mhq199657"},"content":"            .withExpectedGraduationYear(\"2020\")"},{"lineNumber":111,"author":{"gitID":"mhq199657"},"content":"            .withMajor(\"Computer Engineering\")"},{"lineNumber":112,"author":{"gitID":"mhq199657"},"content":"            .withGradePointAverage(\"4.30\")"},{"lineNumber":113,"author":{"gitID":"kexiaowen"},"content":"            .withJobApplied(\"Software Engineer\")"},{"lineNumber":114,"author":{"gitID":"kexiaowen"},"content":"            .withRating(\"4\", \"4.5\","},{"lineNumber":115,"author":{"gitID":"kexiaowen"},"content":"                    \"3\", \"3.5\")"},{"lineNumber":116,"author":{"gitID":"mhq199657"},"content":"            .withProfileImage(null)"},{"lineNumber":117,"author":{"gitID":"mhq199657"},"content":"            .withComment(\"Small!\")"},{"lineNumber":118,"author":{"gitID":"mhq199657"},"content":"            .withInterviewDate(LocalDateTime.of(2018, Month.APRIL, 7, 16, 0, 0))"},{"lineNumber":119,"author":{"gitID":"mhq199657"},"content":"            .withStatus(2).withTags(\"owesMoney\", \"friends\").build();"},{"lineNumber":120,"author":{"gitID":"mhq199657"},"content":"    public static final Person JASMINE \u003d new PersonBuilder().withName(\"Jasmine Julie\").withPhone(\"95352542\")"},{"lineNumber":121,"author":{"gitID":"mhq199657"},"content":"            .withEmail(\"jas@mean.com\").withAddress(\"Jasmine Farm\").withUniversity(\"SMU\")"},{"lineNumber":122,"author":{"gitID":"kexiaowen"},"content":"            .withExpectedGraduationYear(\"2019\")"},{"lineNumber":123,"author":{"gitID":"tanhengyeow"},"content":"            .withMajor(\"Computer Science\")"},{"lineNumber":124,"author":{"gitID":"mhq199657"},"content":"            .withGradePointAverage(\"4.29\")"},{"lineNumber":125,"author":{"gitID":"kexiaowen"},"content":"            .withJobApplied(\"Front-end Developer\")"},{"lineNumber":126,"author":{"gitID":"kexiaowen"},"content":"            .withRating(\"-1\", \"-1\","},{"lineNumber":127,"author":{"gitID":"Ang-YC"},"content":"                    \"-1\", \"-1\")"},{"lineNumber":128,"author":{"gitID":"Ang-YC"},"content":"            .withProfileImage(null).withComment(null).build();"},{"lineNumber":129,"author":{"gitID":"mhq199657"},"content":"    public static final Person KAHOOT \u003d new PersonBuilder().withName(\"KAHOOT\").withPhone(\"87652534\")"},{"lineNumber":130,"author":{"gitID":"mhq199657"},"content":"            .withEmail(\"itsme@kahoot.com\").withAddress(\"11th street\").withUniversity(\"SUTD\")"},{"lineNumber":131,"author":{"gitID":"kexiaowen"},"content":"            .withExpectedGraduationYear(\"2020\")"},{"lineNumber":132,"author":{"gitID":"tanhengyeow"},"content":"            .withMajor(\"Information Security\")"},{"lineNumber":133,"author":{"gitID":"mhq199657"},"content":"            .withGradePointAverage(\"4.49\")"},{"lineNumber":134,"author":{"gitID":"kexiaowen"},"content":"            .withJobApplied(\"Web Security Researcher\")"},{"lineNumber":135,"author":{"gitID":"kexiaowen"},"content":"            .withRating(\"-1\", \"-1\","},{"lineNumber":136,"author":{"gitID":"kexiaowen"},"content":"                    \"-1\", \"-1\")"},{"lineNumber":137,"author":{"gitID":"mhq199657"},"content":"            .withProfileImage(null)"},{"lineNumber":138,"author":{"gitID":"mhq199657"},"content":"            .withComment(\"Kahoot!\")"},{"lineNumber":139,"author":{"gitID":"mhq199657"},"content":"            .withResume(null).build();"},{"lineNumber":140,"author":{"gitID":"mhq199657"},"content":"    public static final Person LOUIS \u003d new PersonBuilder().withName(\"Louis Lee\").withPhone(\"94822241\")"},{"lineNumber":141,"author":{"gitID":"mhq199657"},"content":"            .withEmail(\"lsquared@example.com\").withAddress(\"lol ave\").withUniversity(\"NUS\")"},{"lineNumber":142,"author":{"gitID":"kexiaowen"},"content":"            .withExpectedGraduationYear(\"2018\")"},{"lineNumber":143,"author":{"gitID":"tanhengyeow"},"content":"            .withMajor(\"Business Analytics\")"},{"lineNumber":144,"author":{"gitID":"mhq199657"},"content":"            .withGradePointAverage(\"3.33\")"},{"lineNumber":145,"author":{"gitID":"kexiaowen"},"content":"            .withJobApplied(\"Big Data Analyst\")"},{"lineNumber":146,"author":{"gitID":"kexiaowen"},"content":"            .withRating(\"-1\", \"-1\","},{"lineNumber":147,"author":{"gitID":"Ang-YC"},"content":"                    \"-1\", \"-1\")"},{"lineNumber":148,"author":{"gitID":"mhq199657"},"content":"            .withProfileImage(null)"},{"lineNumber":149,"author":{"gitID":"mhq199657"},"content":"            .withComment(\"LOL!\").withStatus(7).build();"},{"lineNumber":150,"author":{"gitID":"mhq199657"},"content":"    public static final Person MILLS \u003d new PersonBuilder().withName(\"Mill Mills\").withPhone(\"8482427\")"},{"lineNumber":151,"author":{"gitID":"mhq199657"},"content":"            .withEmail(\"m2@example.com\").withAddress(\"tiny tokyo\").withUniversity(\"NUS\")"},{"lineNumber":152,"author":{"gitID":"kexiaowen"},"content":"            .withExpectedGraduationYear(\"2019\")"},{"lineNumber":153,"author":{"gitID":"tanhengyeow"},"content":"            .withMajor(\"Computer Science\")"},{"lineNumber":154,"author":{"gitID":"mhq199657"},"content":"            .withGradePointAverage(\"4.57\")"},{"lineNumber":155,"author":{"gitID":"mhq199657"},"content":"            .withJobApplied(\"Software Engineer\")"},{"lineNumber":156,"author":{"gitID":"mhq199657"},"content":"            .withRating(\"-1\", \"-1\","},{"lineNumber":157,"author":{"gitID":"mhq199657"},"content":"                    \"-1\", \"-1\")"},{"lineNumber":158,"author":{"gitID":"mhq199657"},"content":"            .withProfileImage(null)"},{"lineNumber":159,"author":{"gitID":"mhq199657"},"content":"            .withComment(\"M1+!\").withStatus(1).build();"},{"lineNumber":160,"author":{"gitID":"mhq199657"},"content":"    public static final Person NULL \u003d new PersonBuilder().withName(\"Null Neil\").withPhone(\"00000000\")"},{"lineNumber":161,"author":{"gitID":"mhq199657"},"content":"            .withEmail(\"noemail@null.com\").withAddress(\"Nowhere\").withUniversity(\"NYU\")"},{"lineNumber":162,"author":{"gitID":"kexiaowen"},"content":"            .withExpectedGraduationYear(\"2022\")"},{"lineNumber":163,"author":{"gitID":"tanhengyeow"},"content":"            .withMajor(\"Information Systems\")"},{"lineNumber":164,"author":{"gitID":"tanhengyeow"},"content":"            .withGradePointAverage(\"3.88\")"},{"lineNumber":165,"author":{"gitID":"kexiaowen"},"content":"            .withJobApplied(\"Software Engineer\")"},{"lineNumber":166,"author":{"gitID":"kexiaowen"},"content":"            .withRating(\"-1\", \"-1\","},{"lineNumber":167,"author":{"gitID":"kexiaowen"},"content":"                    \"-1\", \"-1\")"},{"lineNumber":168,"author":{"gitID":"mhq199657"},"content":"            .withResume(null).withStatus(6)"},{"lineNumber":169,"author":{"gitID":"Ang-YC"},"content":"            .withProfileImage(null).withComment(null).build();"},{"lineNumber":170,"author":{"gitID":"mhq199657"},"content":"    public static final Person OLIVER \u003d new PersonBuilder().withName(\"Oliver Ford\")"},{"lineNumber":171,"author":{"gitID":"mhq199657"},"content":"            .withAddress(\"223, Tampines Ave 6, #08-111\").withEmail(\"oliv@example.com\")"},{"lineNumber":172,"author":{"gitID":"mhq199657"},"content":"            .withPhone(\"85332125\").withUniversity(\"NUS\").withExpectedGraduationYear(\"2020\")"},{"lineNumber":173,"author":{"gitID":"mhq199657"},"content":"            .withMajor(\"Computer Science\")"},{"lineNumber":174,"author":{"gitID":"mhq199657"},"content":"            .withGradePointAverage(\"3.89\")"},{"lineNumber":175,"author":{"gitID":"mhq199657"},"content":"            .withJobApplied(\"Software Engineer\")"},{"lineNumber":176,"author":{"gitID":"mhq199657"},"content":"            .withRating(\"2.72\", \"3.91\","},{"lineNumber":177,"author":{"gitID":"mhq199657"},"content":"                    \"2.53\", \"2.5\")"},{"lineNumber":178,"author":{"gitID":"mhq199657"},"content":"            .withResume(null)"},{"lineNumber":179,"author":{"gitID":"mhq199657"},"content":"            .withProfileImage(null)"},{"lineNumber":180,"author":{"gitID":"mhq199657"},"content":"            .withComment(\"Oliver!\")"},{"lineNumber":181,"author":{"gitID":"mhq199657"},"content":"            .withInterviewDate(LocalDateTime.of(2018, Month.APRIL, 10, 14, 0, 0))"},{"lineNumber":182,"author":{"gitID":"mhq199657"},"content":"            .withTags(\"friends\").build();"},{"lineNumber":183,"author":{"gitID":"mhq199657"},"content":"    public static final Person PERL \u003d new PersonBuilder().withName(\"INN PERL\")"},{"lineNumber":184,"author":{"gitID":"mhq199657"},"content":"            .withAddress(\"3, Clementi Ave 3, #03-35\").withResume(null)"},{"lineNumber":185,"author":{"gitID":"mhq199657"},"content":"            .withEmail(\"perl@example.com\").withPhone(\"82282282\").withUniversity(\"NTU\")"},{"lineNumber":186,"author":{"gitID":"kexiaowen"},"content":"            .withExpectedGraduationYear(\"2021\")"},{"lineNumber":187,"author":{"gitID":"tanhengyeow"},"content":"            .withMajor(\"Computer Engineering\")"},{"lineNumber":188,"author":{"gitID":"mhq199657"},"content":"            .withGradePointAverage(\"4.70\")"},{"lineNumber":189,"author":{"gitID":"mhq199657"},"content":"            .withJobApplied(\"Software Engineer\")"},{"lineNumber":190,"author":{"gitID":"mhq199657"},"content":"            .withRating(\"4\", \"3.5\","},{"lineNumber":191,"author":{"gitID":"mhq199657"},"content":"                    \"3\", \"3.5\")"},{"lineNumber":192,"author":{"gitID":"mhq199657"},"content":"            .withProfileImage(null)"},{"lineNumber":193,"author":{"gitID":"mhq199657"},"content":"            .withComment(\"Perl!\")"},{"lineNumber":194,"author":{"gitID":"mhq199657"},"content":"            .withInterviewDate(LocalDateTime.of(2018, Month.APRIL, 11, 16, 0, 0))"},{"lineNumber":195,"author":{"gitID":"mhq199657"},"content":"            .withStatus(2).withTags(\"owesMoney\", \"friends\").build();"},{"lineNumber":196,"author":{"gitID":"mhq199657"},"content":"    public static final Person ROLLE \u003d new PersonBuilder().withName(\"ROLLE THEO\").withPhone(\"23112233\")"},{"lineNumber":197,"author":{"gitID":"mhq199657"},"content":"            .withEmail(\"rolle@theo.rem\").withAddress(\"Dead Avenue\").withUniversity(\"SMU\")"},{"lineNumber":198,"author":{"gitID":"mhq199657"},"content":"            .withExpectedGraduationYear(\"2019\")"},{"lineNumber":199,"author":{"gitID":"mhq199657"},"content":"            .withMajor(\"Mathematics\")"},{"lineNumber":200,"author":{"gitID":"mhq199657"},"content":"            .withGradePointAverage(\"4.22\")"},{"lineNumber":201,"author":{"gitID":"kexiaowen"},"content":"            .withJobApplied(\"Front-end Developer\")"},{"lineNumber":202,"author":{"gitID":"kexiaowen"},"content":"            .withRating(\"-1\", \"-1\","},{"lineNumber":203,"author":{"gitID":"Ang-YC"},"content":"                    \"-1\", \"-1\")"},{"lineNumber":204,"author":{"gitID":"Ang-YC"},"content":"            .withProfileImage(null).withComment(null).build();"},{"lineNumber":205,"author":{"gitID":"mhq199657"},"content":"    public static final Person SALLY \u003d new PersonBuilder().withName(\"Sally Silly\").withPhone(\"84654534\")"},{"lineNumber":206,"author":{"gitID":"mhq199657"},"content":"            .withEmail(\"sa@ll.com\").withAddress(\"Silk Road\").withUniversity(\"SUTD\")"},{"lineNumber":207,"author":{"gitID":"kexiaowen"},"content":"            .withExpectedGraduationYear(\"2020\")"},{"lineNumber":208,"author":{"gitID":"tanhengyeow"},"content":"            .withMajor(\"Information Security\")"},{"lineNumber":209,"author":{"gitID":"mhq199657"},"content":"            .withGradePointAverage(\"3.24\")"},{"lineNumber":210,"author":{"gitID":"kexiaowen"},"content":"            .withJobApplied(\"Web Security Researcher\")"},{"lineNumber":211,"author":{"gitID":"kexiaowen"},"content":"            .withRating(\"-1\", \"-1\","},{"lineNumber":212,"author":{"gitID":"kexiaowen"},"content":"                    \"-1\", \"-1\")"},{"lineNumber":213,"author":{"gitID":"mhq199657"},"content":"            .withProfileImage(null)"},{"lineNumber":214,"author":{"gitID":"mhq199657"},"content":"            .withComment(\"Silly!\")"},{"lineNumber":215,"author":{"gitID":"mhq199657"},"content":"            .withResume(null).build();"},{"lineNumber":216,"author":{"gitID":"mhq199657"},"content":"    public static final Person TALL \u003d new PersonBuilder().withName(\"Tall Wang\").withPhone(\"90844444\")"},{"lineNumber":217,"author":{"gitID":"mhq199657"},"content":"            .withEmail(\"reallytall@example.com\").withAddress(\"Short Street\").withUniversity(\"NUS\")"},{"lineNumber":218,"author":{"gitID":"kexiaowen"},"content":"            .withExpectedGraduationYear(\"2018\")"},{"lineNumber":219,"author":{"gitID":"tanhengyeow"},"content":"            .withMajor(\"Business Analytics\")"},{"lineNumber":220,"author":{"gitID":"mhq199657"},"content":"            .withGradePointAverage(\"3.33\")"},{"lineNumber":221,"author":{"gitID":"kexiaowen"},"content":"            .withJobApplied(\"Big Data Analyst\")"},{"lineNumber":222,"author":{"gitID":"kexiaowen"},"content":"            .withRating(\"-1\", \"-1\","},{"lineNumber":223,"author":{"gitID":"Ang-YC"},"content":"                    \"-1\", \"-1\")"},{"lineNumber":224,"author":{"gitID":"mhq199657"},"content":"            .withProfileImage(null)"},{"lineNumber":225,"author":{"gitID":"mhq199657"},"content":"            .withComment(\"Really tall!\").withStatus(7).build();"},{"lineNumber":226,"author":{"gitID":"mhq199657"},"content":"    public static final Person ULYSS \u003d new PersonBuilder().withName(\"Ulyss Grant\").withPhone(\"948223243\")"},{"lineNumber":227,"author":{"gitID":"mhq199657"},"content":"            .withEmail(\"ulyss@example.com\").withAddress(\"Hero Lane\").withUniversity(\"NUS\")"},{"lineNumber":228,"author":{"gitID":"kexiaowen"},"content":"            .withExpectedGraduationYear(\"2019\")"},{"lineNumber":229,"author":{"gitID":"tanhengyeow"},"content":"            .withMajor(\"Computer Science\")"},{"lineNumber":230,"author":{"gitID":"tanhengyeow"},"content":"            .withGradePointAverage(\"4.75\")"},{"lineNumber":231,"author":{"gitID":"kexiaowen"},"content":"            .withJobApplied(\"Software Engineer\")"},{"lineNumber":232,"author":{"gitID":"kexiaowen"},"content":"            .withRating(\"-1\", \"-1\","},{"lineNumber":233,"author":{"gitID":"Ang-YC"},"content":"                    \"-1\", \"-1\")"},{"lineNumber":234,"author":{"gitID":"mhq199657"},"content":"            .withProfileImage(null)"},{"lineNumber":235,"author":{"gitID":"mhq199657"},"content":"            .withComment(\"War!\").withStatus(1).build();"},{"lineNumber":236,"author":{"gitID":"mhq199657"},"content":"    public static final Person VICTOR \u003d new PersonBuilder().withName(\"Victor Tan\").withPhone(\"948223142\")"},{"lineNumber":237,"author":{"gitID":"mhq199657"},"content":"            .withEmail(\"victor@tan.com\").withAddress(\"S17\").withUniversity(\"NYU\")"},{"lineNumber":238,"author":{"gitID":"kexiaowen"},"content":"            .withExpectedGraduationYear(\"2022\")"},{"lineNumber":239,"author":{"gitID":"tanhengyeow"},"content":"            .withMajor(\"Information Systems\")"},{"lineNumber":240,"author":{"gitID":"mhq199657"},"content":"            .withGradePointAverage(\"3.08\")"},{"lineNumber":241,"author":{"gitID":"kexiaowen"},"content":"            .withJobApplied(\"Software Engineer\")"},{"lineNumber":242,"author":{"gitID":"kexiaowen"},"content":"            .withRating(\"-1\", \"-1\","},{"lineNumber":243,"author":{"gitID":"kexiaowen"},"content":"                    \"-1\", \"-1\")"},{"lineNumber":244,"author":{"gitID":"mhq199657"},"content":"            .withResume(null).withStatus(6)"},{"lineNumber":245,"author":{"gitID":"mhq199657"},"content":"            .withProfileImage(null).withComment(null).build();"},{"lineNumber":246,"author":{"gitID":"mhq199657"},"content":"    public static final Person WAN \u003d new PersonBuilder().withName(\"Wan Win Won\")"},{"lineNumber":247,"author":{"gitID":"mhq199657"},"content":"            .withAddress(\"888, Rich Lane, #09-111\").withEmail(\"www@example.com\")"},{"lineNumber":248,"author":{"gitID":"mhq199657"},"content":"            .withPhone(\"86520555\").withUniversity(\"NUS\").withExpectedGraduationYear(\"2020\")"},{"lineNumber":249,"author":{"gitID":"mhq199657"},"content":"            .withMajor(\"Computer Science\")"},{"lineNumber":250,"author":{"gitID":"mhq199657"},"content":"            .withGradePointAverage(\"4.00\")"},{"lineNumber":251,"author":{"gitID":"mhq199657"},"content":"            .withJobApplied(\"Software Tester\")"},{"lineNumber":252,"author":{"gitID":"mhq199657"},"content":"            .withRating(\"2.79\", \"4.99\","},{"lineNumber":253,"author":{"gitID":"mhq199657"},"content":"                    \"2.59\", \"2.59\")"},{"lineNumber":254,"author":{"gitID":"mhq199657"},"content":"            .withResume(null)"},{"lineNumber":255,"author":{"gitID":"mhq199657"},"content":"            .withProfileImage(null)"},{"lineNumber":256,"author":{"gitID":"mhq199657"},"content":"            .withComment(\"WWW!\")"},{"lineNumber":257,"author":{"gitID":"mhq199657"},"content":"            .withInterviewDate(LocalDateTime.of(2018, Month.APRIL, 14, 10, 0, 0))"},{"lineNumber":258,"author":{"gitID":"mhq199657"},"content":"            .withTags(\"friends\").build();"},{"lineNumber":259,"author":{"gitID":"mhq199657"},"content":"    public static final Person XENON \u003d new PersonBuilder().withName(\"Xenon Low\")"},{"lineNumber":260,"author":{"gitID":"mhq199657"},"content":"            .withAddress(\"111, Company Drive 2, #02-25\").withResume(null)"},{"lineNumber":261,"author":{"gitID":"mhq199657"},"content":"            .withEmail(\"xenon@example.com\").withPhone(\"98425431\").withUniversity(\"NTU\")"},{"lineNumber":262,"author":{"gitID":"mhq199657"},"content":"            .withExpectedGraduationYear(\"2020\")"},{"lineNumber":263,"author":{"gitID":"mhq199657"},"content":"            .withMajor(\"Computer Engineering\")"},{"lineNumber":264,"author":{"gitID":"mhq199657"},"content":"            .withGradePointAverage(\"4.30\")"},{"lineNumber":265,"author":{"gitID":"kexiaowen"},"content":"            .withJobApplied(\"Software Engineer\")"},{"lineNumber":266,"author":{"gitID":"kexiaowen"},"content":"            .withRating(\"4\", \"4.5\","},{"lineNumber":267,"author":{"gitID":"kexiaowen"},"content":"                    \"3\", \"3.5\")"},{"lineNumber":268,"author":{"gitID":"mhq199657"},"content":"            .withProfileImage(null)"},{"lineNumber":269,"author":{"gitID":"mhq199657"},"content":"            .withComment(\"X!\")"},{"lineNumber":270,"author":{"gitID":"mhq199657"},"content":"            .withInterviewDate(LocalDateTime.of(2018, Month.APRIL, 7, 11, 0, 0))"},{"lineNumber":271,"author":{"gitID":"mhq199657"},"content":"            .withStatus(2).withTags(\"owesMoney\", \"friends\").build();"},{"lineNumber":272,"author":{"gitID":"mhq199657"},"content":"    public static final Person YAP \u003d new PersonBuilder().withName(\"Eugene Yap\").withPhone(\"9535000\")"},{"lineNumber":273,"author":{"gitID":"mhq199657"},"content":"            .withEmail(\"eug@ene.com\").withAddress(\"Eugenia Farm\").withUniversity(\"SMU\")"},{"lineNumber":274,"author":{"gitID":"kexiaowen"},"content":"            .withExpectedGraduationYear(\"2019\")"},{"lineNumber":275,"author":{"gitID":"tanhengyeow"},"content":"            .withMajor(\"Computer Science\")"},{"lineNumber":276,"author":{"gitID":"mhq199657"},"content":"            .withGradePointAverage(\"4.29\")"},{"lineNumber":277,"author":{"gitID":"kexiaowen"},"content":"            .withJobApplied(\"Front-end Developer\")"},{"lineNumber":278,"author":{"gitID":"kexiaowen"},"content":"            .withRating(\"-1\", \"-1\","},{"lineNumber":279,"author":{"gitID":"Ang-YC"},"content":"                    \"-1\", \"-1\")"},{"lineNumber":280,"author":{"gitID":"Ang-YC"},"content":"            .withProfileImage(null).withComment(null).build();"},{"lineNumber":281,"author":{"gitID":"mhq199657"},"content":"    public static final Person ZEAL \u003d new PersonBuilder().withName(\"Zillion Bill\").withPhone(\"87232534\")"},{"lineNumber":282,"author":{"gitID":"mhq199657"},"content":"            .withEmail(\"zeal@real.com\").withAddress(\"Zeal street\").withUniversity(\"SUTD\")"},{"lineNumber":283,"author":{"gitID":"kexiaowen"},"content":"            .withExpectedGraduationYear(\"2020\")"},{"lineNumber":284,"author":{"gitID":"tanhengyeow"},"content":"            .withMajor(\"Information Security\")"},{"lineNumber":285,"author":{"gitID":"mhq199657"},"content":"            .withGradePointAverage(\"4.99\")"},{"lineNumber":286,"author":{"gitID":"kexiaowen"},"content":"            .withJobApplied(\"Web Security Researcher\")"},{"lineNumber":287,"author":{"gitID":"kexiaowen"},"content":"            .withRating(\"-1\", \"-1\","},{"lineNumber":288,"author":{"gitID":"kexiaowen"},"content":"                    \"-1\", \"-1\")"},{"lineNumber":289,"author":{"gitID":"mhq199657"},"content":"            .withProfileImage(null)"},{"lineNumber":290,"author":{"gitID":"mhq199657"},"content":"            .withComment(\"Zeal is Real!\")"},{"lineNumber":291,"author":{"gitID":"mhq199657"},"content":"            .withResume(null).build();"},{"lineNumber":292,"author":{"gitID":"mhq199657"},"content":"    private static final String RESUME_PATH \u003d \"src/test/resources/resume/\";"},{"lineNumber":293,"author":{"gitID":"Ang-YC"},"content":"    private static final String IMAGE_PATH \u003d \"src/test/resources/photos/\";"},{"lineNumber":294,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":295,"author":{"gitID":"mhq199657"},"content":"    private MoreTypicalPersons() {} // prevents instantiation"},{"lineNumber":296,"author":{"gitID":"-"},"content":""},{"lineNumber":297,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":298,"author":{"gitID":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons."},{"lineNumber":299,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":300,"author":{"gitID":"-"},"content":"    public static AddressBook getTypicalAddressBook() {"},{"lineNumber":301,"author":{"gitID":"-"},"content":"        AddressBook ab \u003d new AddressBook();"},{"lineNumber":302,"author":{"gitID":"-"},"content":"        for (Person person : getTypicalPersons()) {"},{"lineNumber":303,"author":{"gitID":"-"},"content":"            try {"},{"lineNumber":304,"author":{"gitID":"-"},"content":"                ab.addPerson(person);"},{"lineNumber":305,"author":{"gitID":"-"},"content":"            } catch (DuplicatePersonException e) {"},{"lineNumber":306,"author":{"gitID":"-"},"content":"                throw new AssertionError(\"not possible\");"},{"lineNumber":307,"author":{"gitID":"-"},"content":"            }"},{"lineNumber":308,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":309,"author":{"gitID":"-"},"content":"        return ab;"},{"lineNumber":310,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":311,"author":{"gitID":"-"},"content":""},{"lineNumber":312,"author":{"gitID":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {"},{"lineNumber":313,"author":{"gitID":"mhq199657"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE, HOWARD, IOTA, JASMINE,"},{"lineNumber":314,"author":{"gitID":"mhq199657"},"content":"                KAHOOT, LOUIS, MILLS, NULL, OLIVER, PERL, ROLLE, SALLY, TALL, ULYSS, VICTOR, WAN, XENON, YAP, ZEAL));"},{"lineNumber":315,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":316,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":317,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":318,"author":{"gitID":"mhq199657"},"content":"     * Forms the resume path from the resume file name"},{"lineNumber":319,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":320,"author":{"gitID":"mhq199657"},"content":"    private static String formPathFromFileName(String fileName) {"},{"lineNumber":321,"author":{"gitID":"mhq199657"},"content":"        if (fileName \u003d\u003d null) {"},{"lineNumber":322,"author":{"gitID":"mhq199657"},"content":"            return null;"},{"lineNumber":323,"author":{"gitID":"mhq199657"},"content":"        } else {"},{"lineNumber":324,"author":{"gitID":"mhq199657"},"content":"            return RESUME_PATH + fileName;"},{"lineNumber":325,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":326,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":327,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":328,"author":{"gitID":"Ang-YC"},"content":"    //@@author Ang-YC"},{"lineNumber":329,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":330,"author":{"gitID":"Ang-YC"},"content":"     * Forms the image path from image file name"},{"lineNumber":331,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":332,"author":{"gitID":"Ang-YC"},"content":"    private static String formImagePathFromFileName(String fileName) {"},{"lineNumber":333,"author":{"gitID":"Ang-YC"},"content":"        if (isNull(fileName)) {"},{"lineNumber":334,"author":{"gitID":"Ang-YC"},"content":"            return null;"},{"lineNumber":335,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":336,"author":{"gitID":"Ang-YC"},"content":"        return IMAGE_PATH + fileName;"},{"lineNumber":337,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":338,"author":{"gitID":"Ang-YC"},"content":"    //@@author"},{"lineNumber":339,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":340,"author":{"gitID":"mhq199657"},"content":"}"}],"authorContributionMap":{"kexiaowen":78,"mhq199657":156,"-":37,"Ang-YC":41,"tanhengyeow":28}},{"path":"src/main/java/seedu/address/logic/parser/RatingEditCommandParser.java","lines":[{"lineNumber":1,"author":{"gitID":"kexiaowen"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMUNICATION_SKILLS_SCORE;"},{"lineNumber":5,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXPERIENCE_SCORE;"},{"lineNumber":6,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PROBLEM_SOLVING_SKILLS_SCORE;"},{"lineNumber":7,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TECHNICAL_SKILLS_SCORE;"},{"lineNumber":8,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;"},{"lineNumber":14,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.logic.commands.RatingEditCommand;"},{"lineNumber":15,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.logic.commands.RatingEditCommand.EditRatingDescriptor;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"kexiaowen"},"content":"//@@author kexiaowen"},{"lineNumber":19,"author":{"gitID":"kexiaowen"},"content":"/**"},{"lineNumber":20,"author":{"gitID":"kexiaowen"},"content":" * Parses input arguments and creates a new RatingEditCommand object"},{"lineNumber":21,"author":{"gitID":"kexiaowen"},"content":" */"},{"lineNumber":22,"author":{"gitID":"kexiaowen"},"content":"public class RatingEditCommandParser implements Parser\u003cRatingEditCommand\u003e {"},{"lineNumber":23,"author":{"gitID":"kexiaowen"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(this.getClass());"},{"lineNumber":24,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":25,"author":{"gitID":"kexiaowen"},"content":"     * Parses the given {@code String} of arguments in the context of the RatingEditCommand"},{"lineNumber":26,"author":{"gitID":"kexiaowen"},"content":"     * and returns a RatingEditCommand object for execution."},{"lineNumber":27,"author":{"gitID":"kexiaowen"},"content":"     * @throws ParseException if the user input does not conform the expected format"},{"lineNumber":28,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":29,"author":{"gitID":"kexiaowen"},"content":"    public RatingEditCommand parse(String args) throws ParseException {"},{"lineNumber":30,"author":{"gitID":"kexiaowen"},"content":"        String trimmedArgs \u003d args.trim();"},{"lineNumber":31,"author":{"gitID":"kexiaowen"},"content":"        if (trimmedArgs.isEmpty()) {"},{"lineNumber":32,"author":{"gitID":"kexiaowen"},"content":"            throw new ParseException("},{"lineNumber":33,"author":{"gitID":"kexiaowen"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, RatingEditCommand.MESSAGE_USAGE));"},{"lineNumber":34,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":35,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":36,"author":{"gitID":"kexiaowen"},"content":"        ArgumentMultimap argMultimap \u003d"},{"lineNumber":37,"author":{"gitID":"kexiaowen"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TECHNICAL_SKILLS_SCORE, PREFIX_COMMUNICATION_SKILLS_SCORE,"},{"lineNumber":38,"author":{"gitID":"kexiaowen"},"content":"                        PREFIX_PROBLEM_SOLVING_SKILLS_SCORE, PREFIX_EXPERIENCE_SCORE);"},{"lineNumber":39,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":40,"author":{"gitID":"kexiaowen"},"content":"        Index index;"},{"lineNumber":41,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":42,"author":{"gitID":"kexiaowen"},"content":"        try {"},{"lineNumber":43,"author":{"gitID":"kexiaowen"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());"},{"lineNumber":44,"author":{"gitID":"kexiaowen"},"content":"        } catch (IllegalValueException ive) {"},{"lineNumber":45,"author":{"gitID":"kexiaowen"},"content":"            throw new ParseException("},{"lineNumber":46,"author":{"gitID":"kexiaowen"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, RatingEditCommand.MESSAGE_MISSING_INDEX));"},{"lineNumber":47,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":48,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":49,"author":{"gitID":"kexiaowen"},"content":"        EditRatingDescriptor editRatingDescriptor \u003d new EditRatingDescriptor();"},{"lineNumber":50,"author":{"gitID":"kexiaowen"},"content":"        try {"},{"lineNumber":51,"author":{"gitID":"kexiaowen"},"content":"            if (argMultimap.getValue(PREFIX_TECHNICAL_SKILLS_SCORE).isPresent()) {"},{"lineNumber":52,"author":{"gitID":"kexiaowen"},"content":"                editRatingDescriptor.setTechnicalSkillsScore("},{"lineNumber":53,"author":{"gitID":"kexiaowen"},"content":"                        ParserUtil.parseEditedScore(argMultimap.getValue(PREFIX_TECHNICAL_SKILLS_SCORE)).get());"},{"lineNumber":54,"author":{"gitID":"kexiaowen"},"content":"            }"},{"lineNumber":55,"author":{"gitID":"kexiaowen"},"content":"            if (argMultimap.getValue(PREFIX_COMMUNICATION_SKILLS_SCORE).isPresent()) {"},{"lineNumber":56,"author":{"gitID":"kexiaowen"},"content":"                editRatingDescriptor.setCommunicationSkillsScore("},{"lineNumber":57,"author":{"gitID":"kexiaowen"},"content":"                        ParserUtil.parseEditedScore(argMultimap.getValue(PREFIX_COMMUNICATION_SKILLS_SCORE)).get());"},{"lineNumber":58,"author":{"gitID":"kexiaowen"},"content":"            }"},{"lineNumber":59,"author":{"gitID":"kexiaowen"},"content":"            if (argMultimap.getValue(PREFIX_PROBLEM_SOLVING_SKILLS_SCORE).isPresent()) {"},{"lineNumber":60,"author":{"gitID":"kexiaowen"},"content":"                editRatingDescriptor.setProblemSolvingSkillsScore("},{"lineNumber":61,"author":{"gitID":"kexiaowen"},"content":"                        ParserUtil.parseEditedScore(argMultimap.getValue(PREFIX_PROBLEM_SOLVING_SKILLS_SCORE)).get());"},{"lineNumber":62,"author":{"gitID":"kexiaowen"},"content":"            }"},{"lineNumber":63,"author":{"gitID":"kexiaowen"},"content":"            if (argMultimap.getValue(PREFIX_EXPERIENCE_SCORE).isPresent()) {"},{"lineNumber":64,"author":{"gitID":"kexiaowen"},"content":"                editRatingDescriptor.setExperienceScore("},{"lineNumber":65,"author":{"gitID":"kexiaowen"},"content":"                        ParserUtil.parseEditedScore(argMultimap.getValue(PREFIX_EXPERIENCE_SCORE)).get());"},{"lineNumber":66,"author":{"gitID":"kexiaowen"},"content":"            }"},{"lineNumber":67,"author":{"gitID":"kexiaowen"},"content":"            logger.info(\"Parsed user arguments of rating-edit command\");"},{"lineNumber":68,"author":{"gitID":"kexiaowen"},"content":"            logger.info(\"t/\" + editRatingDescriptor.getTechnicalSkillsScore().get());"},{"lineNumber":69,"author":{"gitID":"kexiaowen"},"content":"            logger.info(\"c/\" + editRatingDescriptor.getCommunicationSkillsScore().get());"},{"lineNumber":70,"author":{"gitID":"kexiaowen"},"content":"            logger.info(\"p/\" + editRatingDescriptor.getProblemSolvingSkillsScore().get());"},{"lineNumber":71,"author":{"gitID":"kexiaowen"},"content":"            logger.info(\"e/\" + editRatingDescriptor.getExperienceScore().get());"},{"lineNumber":72,"author":{"gitID":"kexiaowen"},"content":"        } catch (IllegalValueException ive) {"},{"lineNumber":73,"author":{"gitID":"kexiaowen"},"content":"            throw new ParseException(ive.getMessage(), ive);"},{"lineNumber":74,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":75,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":76,"author":{"gitID":"kexiaowen"},"content":"        if (!editRatingDescriptor.isAnyFieldEdited()) {"},{"lineNumber":77,"author":{"gitID":"kexiaowen"},"content":"            throw new ParseException(RatingEditCommand.MESSAGE_NOT_EDITED);"},{"lineNumber":78,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":79,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":80,"author":{"gitID":"kexiaowen"},"content":"        return new RatingEditCommand(index, editRatingDescriptor);"},{"lineNumber":81,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":82,"author":{"gitID":"kexiaowen"},"content":"}"}],"authorContributionMap":{"kexiaowen":74,"-":8}},{"path":"src/main/java/seedu/address/logic/parser/PredicateUtil.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":5,"author":{"gitID":"tanhengyeow"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import java.util.Objects;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":"import java.util.Set;"},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"import java.util.function.Predicate;"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"import java.util.stream.Stream;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.person.AllPredicate;"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":" * Contains utility methods used for parsing predicates in FindUtil"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"public class PredicateUtil {"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"     * Parses the String array {@code keywords} to"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"     * form a combined Predicate based on user request"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"     * @param keywords contains user argument"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"     * @return void"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"    public AllPredicate parseAllPredicates(String[] keywords) throws ParseException {"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        ArrayList\u003cString\u003e substringKeywords \u003d new ArrayList\u003c\u003e();"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        ArrayList\u003cString\u003e exactKeywords \u003d new ArrayList\u003c\u003e();"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        ArrayList\u003cString\u003e prefixKeywords \u003d new ArrayList\u003c\u003e();"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        ArrayList\u003cString\u003e suffixKeywords \u003d new ArrayList\u003c\u003e();"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"        parseKeywordsArray(keywords, substringKeywords, exactKeywords,"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"                prefixKeywords, suffixKeywords);"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        return new AllPredicate(exactKeywords, substringKeywords,"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"                prefixKeywords, suffixKeywords);"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":"     * Parses the String array {@code keywords} and add keywords to respective ArrayList"},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"     * @param keywords contains all user arguments"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"     * @param substringKeywords stores user argument that matches substring"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"     * @param exactKeywords stores user argument that matches exact keywords"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":"     * @param prefixKeywords stores user argument that matches prefix"},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"     * @param suffixKeywords stores user argument that matches suffix"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"    private void parseKeywordsArray(String[] keywords,"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"                                           ArrayList\u003cString\u003e substringKeywords,"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"                                           ArrayList\u003cString\u003e exactKeywords,"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"                                           ArrayList\u003cString\u003e prefixKeywords,"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":"                                           ArrayList\u003cString\u003e suffixKeywords) throws ParseException {"},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"        if (keywords[0].isEmpty()) {"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"            throw new ParseException("},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, \"Word parameter cannot be empty\"));"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"        for (String keyword : keywords) {"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"            keyword \u003d keyword.trim();"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"            if (keyword.equals(\"*\") || keyword.equals(\"\\\"\")) {"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"                throw new ParseException("},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, \"One * or \\\" is not a valid parameter\"));"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":"            }"},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"            String strippedKeyword;"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"            if (keyword.startsWith(\"\\\"\") \u0026\u0026 keyword.endsWith(\"\\\"\")) { // substring"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"                strippedKeyword \u003d keyword.substring(1, keyword.length() - 1);"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"                if (strippedKeyword.isEmpty()) {"},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":"                    throw new ParseException("},{"lineNumber":69,"author":{"gitID":"tanhengyeow"},"content":"                            String.format(MESSAGE_INVALID_COMMAND_FORMAT, \"Substring parameter cannot be empty\"));"},{"lineNumber":70,"author":{"gitID":"tanhengyeow"},"content":"                }"},{"lineNumber":71,"author":{"gitID":"tanhengyeow"},"content":"                substringKeywords.add(strippedKeyword);"},{"lineNumber":72,"author":{"gitID":"tanhengyeow"},"content":"            } else if (!keyword.startsWith(\"*\") \u0026\u0026 keyword.endsWith(\"*\")) { // prefix"},{"lineNumber":73,"author":{"gitID":"tanhengyeow"},"content":"                strippedKeyword \u003d keyword.substring(0, keyword.length() - 1);"},{"lineNumber":74,"author":{"gitID":"tanhengyeow"},"content":"                if (strippedKeyword.isEmpty()) {"},{"lineNumber":75,"author":{"gitID":"tanhengyeow"},"content":"                    throw new ParseException("},{"lineNumber":76,"author":{"gitID":"tanhengyeow"},"content":"                            String.format(MESSAGE_INVALID_COMMAND_FORMAT, \"Prefix parameter cannot be empty\"));"},{"lineNumber":77,"author":{"gitID":"tanhengyeow"},"content":"                }"},{"lineNumber":78,"author":{"gitID":"tanhengyeow"},"content":"                prefixKeywords.add(strippedKeyword);"},{"lineNumber":79,"author":{"gitID":"tanhengyeow"},"content":"            } else if (keyword.startsWith(\"*\") \u0026\u0026 !keyword.endsWith(\"*\")) { // suffix"},{"lineNumber":80,"author":{"gitID":"tanhengyeow"},"content":"                strippedKeyword \u003d keyword.substring(1, keyword.length());"},{"lineNumber":81,"author":{"gitID":"tanhengyeow"},"content":"                if (strippedKeyword.isEmpty()) {"},{"lineNumber":82,"author":{"gitID":"tanhengyeow"},"content":"                    throw new ParseException("},{"lineNumber":83,"author":{"gitID":"tanhengyeow"},"content":"                            String.format(MESSAGE_INVALID_COMMAND_FORMAT, \"Suffix parameter cannot be empty\"));"},{"lineNumber":84,"author":{"gitID":"tanhengyeow"},"content":"                }"},{"lineNumber":85,"author":{"gitID":"tanhengyeow"},"content":"                suffixKeywords.add(strippedKeyword);"},{"lineNumber":86,"author":{"gitID":"tanhengyeow"},"content":"            } else {"},{"lineNumber":87,"author":{"gitID":"tanhengyeow"},"content":"                exactKeywords.add(keyword);"},{"lineNumber":88,"author":{"gitID":"tanhengyeow"},"content":"            }"},{"lineNumber":89,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":90,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":91,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":92,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":93,"author":{"gitID":"tanhengyeow"},"content":"     * Parses the ArgumentMultimap {@code argMultimap} to"},{"lineNumber":94,"author":{"gitID":"tanhengyeow"},"content":"     * form a combined Predicate based on user request"},{"lineNumber":95,"author":{"gitID":"tanhengyeow"},"content":"     * @param argMultimap mapping of prefixes to their respective user arguments."},{"lineNumber":96,"author":{"gitID":"tanhengyeow"},"content":"     * @return AllPredicate"},{"lineNumber":97,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":98,"author":{"gitID":"tanhengyeow"},"content":"    public AllPredicate parseSelectedPredicates("},{"lineNumber":99,"author":{"gitID":"tanhengyeow"},"content":"            ArgumentMultimap argMultimap) throws ParseException {"},{"lineNumber":100,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":101,"author":{"gitID":"tanhengyeow"},"content":"        Set\u003cPrefix\u003e prefixSet \u003d argMultimap.getAllPrefixes();"},{"lineNumber":102,"author":{"gitID":"tanhengyeow"},"content":"        AllPredicate allPredicate \u003d new AllPredicate();"},{"lineNumber":103,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":104,"author":{"gitID":"tanhengyeow"},"content":"        // checks if prefix is present in argMultimap and parses the respective predicate"},{"lineNumber":105,"author":{"gitID":"tanhengyeow"},"content":"        for (Prefix prefix : prefixSet) {"},{"lineNumber":106,"author":{"gitID":"tanhengyeow"},"content":"            if (prefix.toString().equals(\"\")) {"},{"lineNumber":107,"author":{"gitID":"tanhengyeow"},"content":"                continue;"},{"lineNumber":108,"author":{"gitID":"tanhengyeow"},"content":"            }"},{"lineNumber":109,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":110,"author":{"gitID":"tanhengyeow"},"content":"            assert !prefix.toString().equals(\"\");"},{"lineNumber":111,"author":{"gitID":"tanhengyeow"},"content":"            String[] keywords \u003d argMultimap.getValue(prefix).get().split(\",\");"},{"lineNumber":112,"author":{"gitID":"tanhengyeow"},"content":"            ArrayList\u003cString\u003e substringKeywords \u003d new ArrayList\u003c\u003e();"},{"lineNumber":113,"author":{"gitID":"tanhengyeow"},"content":"            ArrayList\u003cString\u003e exactKeywords \u003d new ArrayList\u003c\u003e();"},{"lineNumber":114,"author":{"gitID":"tanhengyeow"},"content":"            ArrayList\u003cString\u003e prefixKeywords \u003d new ArrayList\u003c\u003e();"},{"lineNumber":115,"author":{"gitID":"tanhengyeow"},"content":"            ArrayList\u003cString\u003e suffixKeywords \u003d new ArrayList\u003c\u003e();"},{"lineNumber":116,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":117,"author":{"gitID":"tanhengyeow"},"content":"            parseKeywordsArray(keywords, substringKeywords, exactKeywords,"},{"lineNumber":118,"author":{"gitID":"tanhengyeow"},"content":"                    prefixKeywords, suffixKeywords);"},{"lineNumber":119,"author":{"gitID":"tanhengyeow"},"content":"            addSelectedPredicates(prefix, substringKeywords, exactKeywords,"},{"lineNumber":120,"author":{"gitID":"tanhengyeow"},"content":"                    prefixKeywords, suffixKeywords, allPredicate);"},{"lineNumber":121,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":122,"author":{"gitID":"tanhengyeow"},"content":"        return allPredicate;"},{"lineNumber":123,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":124,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":125,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":126,"author":{"gitID":"tanhengyeow"},"content":"     * Parses all contents in ArrayList and form an AllPredicate based on the prefix"},{"lineNumber":127,"author":{"gitID":"tanhengyeow"},"content":"     * @param prefix specified by user to search for a field"},{"lineNumber":128,"author":{"gitID":"tanhengyeow"},"content":"     * @param substringKeywords stores user argument that matches substring"},{"lineNumber":129,"author":{"gitID":"tanhengyeow"},"content":"     * @param exactKeywords stores user argument that matches exact keywords"},{"lineNumber":130,"author":{"gitID":"tanhengyeow"},"content":"     * @param prefixKeywords stores user argument that matches prefix"},{"lineNumber":131,"author":{"gitID":"tanhengyeow"},"content":"     * @param suffixKeywords stores user argument that matches suffix"},{"lineNumber":132,"author":{"gitID":"tanhengyeow"},"content":"     * @param allPredicate a predicate class that contains reference to all predicates objects"},{"lineNumber":133,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":134,"author":{"gitID":"tanhengyeow"},"content":"    private void addSelectedPredicates(Prefix prefix, ArrayList\u003cString\u003e substringKeywords,"},{"lineNumber":135,"author":{"gitID":"tanhengyeow"},"content":"                                              ArrayList\u003cString\u003e exactKeywords,"},{"lineNumber":136,"author":{"gitID":"tanhengyeow"},"content":"                                              ArrayList\u003cString\u003e prefixKeywords,"},{"lineNumber":137,"author":{"gitID":"tanhengyeow"},"content":"                                              ArrayList\u003cString\u003e suffixKeywords,"},{"lineNumber":138,"author":{"gitID":"tanhengyeow"},"content":"                                              AllPredicate allPredicate) {"},{"lineNumber":139,"author":{"gitID":"tanhengyeow"},"content":"        switch (prefix.toString()) {"},{"lineNumber":140,"author":{"gitID":"tanhengyeow"},"content":"        case \"n/\":"},{"lineNumber":141,"author":{"gitID":"tanhengyeow"},"content":"            allPredicate.setNamePredicate(exactKeywords, substringKeywords,"},{"lineNumber":142,"author":{"gitID":"tanhengyeow"},"content":"                    prefixKeywords, suffixKeywords);"},{"lineNumber":143,"author":{"gitID":"tanhengyeow"},"content":"            break;"},{"lineNumber":144,"author":{"gitID":"tanhengyeow"},"content":"        case \"p/\":"},{"lineNumber":145,"author":{"gitID":"tanhengyeow"},"content":"            allPredicate.setPhonePredicate(exactKeywords, substringKeywords,"},{"lineNumber":146,"author":{"gitID":"tanhengyeow"},"content":"                    prefixKeywords, suffixKeywords);"},{"lineNumber":147,"author":{"gitID":"tanhengyeow"},"content":"            break;"},{"lineNumber":148,"author":{"gitID":"tanhengyeow"},"content":"        case \"e/\":"},{"lineNumber":149,"author":{"gitID":"tanhengyeow"},"content":"            allPredicate.setEmailPredicate(exactKeywords, substringKeywords,"},{"lineNumber":150,"author":{"gitID":"tanhengyeow"},"content":"                    prefixKeywords, suffixKeywords);"},{"lineNumber":151,"author":{"gitID":"tanhengyeow"},"content":"            break;"},{"lineNumber":152,"author":{"gitID":"tanhengyeow"},"content":"        case \"a/\":"},{"lineNumber":153,"author":{"gitID":"tanhengyeow"},"content":"            allPredicate.setAddressPredicate(exactKeywords, substringKeywords,"},{"lineNumber":154,"author":{"gitID":"tanhengyeow"},"content":"                    prefixKeywords, suffixKeywords);"},{"lineNumber":155,"author":{"gitID":"tanhengyeow"},"content":"            break;"},{"lineNumber":156,"author":{"gitID":"tanhengyeow"},"content":"        case \"u/\":"},{"lineNumber":157,"author":{"gitID":"tanhengyeow"},"content":"            allPredicate.setUniversityPredicate(exactKeywords, substringKeywords,"},{"lineNumber":158,"author":{"gitID":"tanhengyeow"},"content":"                    prefixKeywords, suffixKeywords);"},{"lineNumber":159,"author":{"gitID":"tanhengyeow"},"content":"            break;"},{"lineNumber":160,"author":{"gitID":"tanhengyeow"},"content":"        case \"m/\":"},{"lineNumber":161,"author":{"gitID":"tanhengyeow"},"content":"            allPredicate.setMajorPredicate(exactKeywords, substringKeywords,"},{"lineNumber":162,"author":{"gitID":"tanhengyeow"},"content":"                    prefixKeywords, suffixKeywords);"},{"lineNumber":163,"author":{"gitID":"tanhengyeow"},"content":"            break;"},{"lineNumber":164,"author":{"gitID":"tanhengyeow"},"content":"        case \"j/\":"},{"lineNumber":165,"author":{"gitID":"tanhengyeow"},"content":"            allPredicate.setJobAppliedPredicate(exactKeywords, substringKeywords,"},{"lineNumber":166,"author":{"gitID":"tanhengyeow"},"content":"                    prefixKeywords, suffixKeywords);"},{"lineNumber":167,"author":{"gitID":"tanhengyeow"},"content":"            break;"},{"lineNumber":168,"author":{"gitID":"tanhengyeow"},"content":"        case \"c/\":"},{"lineNumber":169,"author":{"gitID":"tanhengyeow"},"content":"            allPredicate.setCommentPredicate(exactKeywords, substringKeywords,"},{"lineNumber":170,"author":{"gitID":"tanhengyeow"},"content":"                    prefixKeywords, suffixKeywords);"},{"lineNumber":171,"author":{"gitID":"tanhengyeow"},"content":"            break;"},{"lineNumber":172,"author":{"gitID":"tanhengyeow"},"content":"        default:"},{"lineNumber":173,"author":{"gitID":"tanhengyeow"},"content":"            throw new AssertionError(\"Invalid prefix detected\");"},{"lineNumber":174,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":175,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":176,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":177,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":178,"author":{"gitID":"tanhengyeow"},"content":"     * Combines all predicates that matches the"},{"lineNumber":179,"author":{"gitID":"tanhengyeow"},"content":"     * corresponding condition to form the final predicate"},{"lineNumber":180,"author":{"gitID":"tanhengyeow"},"content":"     * @param predicates in the form of varargs"},{"lineNumber":181,"author":{"gitID":"tanhengyeow"},"content":"     * @return {@code Predicate\u003cPerson\u003e}"},{"lineNumber":182,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":183,"author":{"gitID":"tanhengyeow"},"content":"    @SafeVarargs"},{"lineNumber":184,"author":{"gitID":"tanhengyeow"},"content":"    public final Predicate\u003cPerson\u003e formOrPredicate(Predicate\u003cPerson\u003e... predicates) {"},{"lineNumber":185,"author":{"gitID":"tanhengyeow"},"content":"        return Stream.of(predicates).filter(Objects::nonNull)"},{"lineNumber":186,"author":{"gitID":"tanhengyeow"},"content":"                .reduce(condition -\u003e false, Predicate::or);"},{"lineNumber":187,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":188,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":189,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":190,"author":{"gitID":"tanhengyeow"},"content":"     * Combines all predicates that matches the"},{"lineNumber":191,"author":{"gitID":"tanhengyeow"},"content":"     * corresponding condition to form the final predicate"},{"lineNumber":192,"author":{"gitID":"tanhengyeow"},"content":"     * @param predicates in the form of varargs"},{"lineNumber":193,"author":{"gitID":"tanhengyeow"},"content":"     * @return {@code Predicate\u003cPerson\u003e}"},{"lineNumber":194,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":195,"author":{"gitID":"tanhengyeow"},"content":"    @SafeVarargs"},{"lineNumber":196,"author":{"gitID":"tanhengyeow"},"content":"    public final Predicate\u003cPerson\u003e formAndPredicate(Predicate\u003cPerson\u003e... predicates) {"},{"lineNumber":197,"author":{"gitID":"tanhengyeow"},"content":"        return Stream.of(predicates).filter(Objects::nonNull)"},{"lineNumber":198,"author":{"gitID":"tanhengyeow"},"content":"                .reduce(condition -\u003e true, Predicate::and);"},{"lineNumber":199,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":200,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":5,"tanhengyeow":195}},{"path":"src/main/java/seedu/address/logic/parser/RatingDeleteCommandParser.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;"},{"lineNumber":7,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.logic.commands.RatingDeleteCommand;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"kexiaowen"},"content":"//@@author kexiaowen"},{"lineNumber":11,"author":{"gitID":"kexiaowen"},"content":"/**"},{"lineNumber":12,"author":{"gitID":"kexiaowen"},"content":" * Parses input arguments and creates a new RatingDeleteCommand object"},{"lineNumber":13,"author":{"gitID":"kexiaowen"},"content":" */"},{"lineNumber":14,"author":{"gitID":"kexiaowen"},"content":"public class RatingDeleteCommandParser implements Parser\u003cRatingDeleteCommand\u003e {"},{"lineNumber":15,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":16,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":17,"author":{"gitID":"kexiaowen"},"content":"     * Parses the given {@code String} of arguments in the context of the RatingDeleteCommand"},{"lineNumber":18,"author":{"gitID":"kexiaowen"},"content":"     * and returns a RatingDeleteCommand object for execution."},{"lineNumber":19,"author":{"gitID":"kexiaowen"},"content":"     * @throws ParseException if the user input does not conform the expected format"},{"lineNumber":20,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":21,"author":{"gitID":"kexiaowen"},"content":"    public RatingDeleteCommand parse(String args) throws ParseException {"},{"lineNumber":22,"author":{"gitID":"kexiaowen"},"content":"        Index index;"},{"lineNumber":23,"author":{"gitID":"kexiaowen"},"content":"        try {"},{"lineNumber":24,"author":{"gitID":"kexiaowen"},"content":"            index \u003d ParserUtil.parseIndex(args);"},{"lineNumber":25,"author":{"gitID":"kexiaowen"},"content":"        } catch (IllegalValueException ive) {"},{"lineNumber":26,"author":{"gitID":"kexiaowen"},"content":"            throw new ParseException("},{"lineNumber":27,"author":{"gitID":"kexiaowen"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, RatingDeleteCommand.MESSAGE_USAGE));"},{"lineNumber":28,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":29,"author":{"gitID":"kexiaowen"},"content":"        return new RatingDeleteCommand(index);"},{"lineNumber":30,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"kexiaowen"},"content":"}"}],"authorContributionMap":{"kexiaowen":23,"-":8}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;"},{"lineNumber":6,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMENT;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;"},{"lineNumber":8,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXPECTED_GRADUATION_YEAR;"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GRADE_POINT_AVERAGE;"},{"lineNumber":10,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IMAGE;"},{"lineNumber":11,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB_APPLIED;"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MAJOR;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;"},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RESUME;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"},{"lineNumber":17,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNIVERSITY;"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":"import java.io.IOException;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import java.util.Collection;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import java.util.Set;"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.EditCommand;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;"},{"lineNumber":30,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.model.person.Comment;"},{"lineNumber":31,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.model.person.ProfileImage;"},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Resume;"},{"lineNumber":33,"author":{"gitID":"-"},"content":"import seedu.address.model.tag.Tag;"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":36,"author":{"gitID":"-"},"content":" * Parses input arguments and creates a new EditCommand object"},{"lineNumber":37,"author":{"gitID":"-"},"content":" */"},{"lineNumber":38,"author":{"gitID":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":41,"author":{"gitID":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand"},{"lineNumber":42,"author":{"gitID":"-"},"content":"     * and returns an EditCommand object for execution."},{"lineNumber":43,"author":{"gitID":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format"},{"lineNumber":44,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":45,"author":{"gitID":"-"},"content":"    public EditCommand parse(String args) throws ParseException {"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        requireNonNull(args);"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        ArgumentMultimap argMultimap \u003d"},{"lineNumber":48,"author":{"gitID":"mhq199657"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,"},{"lineNumber":49,"author":{"gitID":"kexiaowen"},"content":"                        PREFIX_UNIVERSITY, PREFIX_EXPECTED_GRADUATION_YEAR, PREFIX_MAJOR, PREFIX_GRADE_POINT_AVERAGE,"},{"lineNumber":50,"author":{"gitID":"kexiaowen"},"content":"                        PREFIX_JOB_APPLIED, PREFIX_RESUME, PREFIX_IMAGE, PREFIX_COMMENT, PREFIX_TAG);"},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"-"},"content":"        Index index;"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":55,"author":{"gitID":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        } catch (IllegalValueException ive) {"},{"lineNumber":57,"author":{"gitID":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));"},{"lineNumber":58,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":59,"author":{"gitID":"-"},"content":""},{"lineNumber":60,"author":{"gitID":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();"},{"lineNumber":61,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":62,"author":{"gitID":"-"},"content":"            ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME)).ifPresent(editPersonDescriptor::setName);"},{"lineNumber":63,"author":{"gitID":"-"},"content":"            ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE)).ifPresent(editPersonDescriptor::setPhone);"},{"lineNumber":64,"author":{"gitID":"-"},"content":"            ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL)).ifPresent(editPersonDescriptor::setEmail);"},{"lineNumber":65,"author":{"gitID":"-"},"content":"            ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS)).ifPresent(editPersonDescriptor::setAddress);"},{"lineNumber":66,"author":{"gitID":"kexiaowen"},"content":"            ParserUtil.parseUniversity(argMultimap.getValue(PREFIX_UNIVERSITY))"},{"lineNumber":67,"author":{"gitID":"kexiaowen"},"content":"                    .ifPresent(editPersonDescriptor::setUniversity);"},{"lineNumber":68,"author":{"gitID":"mhq199657"},"content":"            ParserUtil.parseExpectedGraduationYear(argMultimap.getValue(PREFIX_EXPECTED_GRADUATION_YEAR))"},{"lineNumber":69,"author":{"gitID":"mhq199657"},"content":"                    .ifPresent(editPersonDescriptor::setExpectedGraduationYear);"},{"lineNumber":70,"author":{"gitID":"tanhengyeow"},"content":"            ParserUtil.parseMajor(argMultimap.getValue(PREFIX_MAJOR)).ifPresent(editPersonDescriptor::setMajor);"},{"lineNumber":71,"author":{"gitID":"tanhengyeow"},"content":"            ParserUtil.parseGradePointAverage(argMultimap.getValue(PREFIX_GRADE_POINT_AVERAGE))"},{"lineNumber":72,"author":{"gitID":"tanhengyeow"},"content":"                    .ifPresent(editPersonDescriptor::setGradePointAverage);"},{"lineNumber":73,"author":{"gitID":"kexiaowen"},"content":"            ParserUtil.parseJobApplied(argMultimap.getValue(PREFIX_JOB_APPLIED))"},{"lineNumber":74,"author":{"gitID":"kexiaowen"},"content":"                    .ifPresent(editPersonDescriptor::setJobApplied);"},{"lineNumber":75,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":76,"author":{"gitID":"mhq199657"},"content":"            Optional\u003cResume\u003e parsedResume \u003d parseResumeForEdit(argMultimap.getValue(PREFIX_RESUME));"},{"lineNumber":77,"author":{"gitID":"mhq199657"},"content":"            if (parsedResume.isPresent()) {"},{"lineNumber":78,"author":{"gitID":"mhq199657"},"content":"                Resume processedResume \u003d ResumeUtil.process(parsedResume.get());"},{"lineNumber":79,"author":{"gitID":"mhq199657"},"content":"                editPersonDescriptor.setResume(processedResume);"},{"lineNumber":80,"author":{"gitID":"mhq199657"},"content":"            }"},{"lineNumber":81,"author":{"gitID":"mhq199657"},"content":"            Optional\u003cProfileImage\u003e parsedProfileImage \u003d parseProfileImageForEdit(argMultimap.getValue(PREFIX_IMAGE));"},{"lineNumber":82,"author":{"gitID":"mhq199657"},"content":"            if (parsedProfileImage.isPresent()) {"},{"lineNumber":83,"author":{"gitID":"mhq199657"},"content":"                ProfileImage processedProfileImage \u003d ProfileImageUtil.process(parsedProfileImage.get());"},{"lineNumber":84,"author":{"gitID":"mhq199657"},"content":"                editPersonDescriptor.setProfileImage(processedProfileImage);"},{"lineNumber":85,"author":{"gitID":"mhq199657"},"content":"            }"},{"lineNumber":86,"author":{"gitID":"Ang-YC"},"content":"            parseCommentForEdit(argMultimap.getValue(PREFIX_COMMENT)).ifPresent(editPersonDescriptor::setComment);"},{"lineNumber":87,"author":{"gitID":"-"},"content":"            parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);"},{"lineNumber":88,"author":{"gitID":"-"},"content":"        } catch (IllegalValueException ive) {"},{"lineNumber":89,"author":{"gitID":"-"},"content":"            throw new ParseException(ive.getMessage(), ive);"},{"lineNumber":90,"author":{"gitID":"mhq199657"},"content":"        } catch (IOException ioe) {"},{"lineNumber":91,"author":{"gitID":"mhq199657"},"content":"            throw new ParseException(ioe.getMessage(), ioe);"},{"lineNumber":92,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":93,"author":{"gitID":"-"},"content":""},{"lineNumber":94,"author":{"gitID":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {"},{"lineNumber":95,"author":{"gitID":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);"},{"lineNumber":96,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":97,"author":{"gitID":"-"},"content":""},{"lineNumber":98,"author":{"gitID":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);"},{"lineNumber":99,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":100,"author":{"gitID":"mhq199657"},"content":"    //@@author mhq199657"},{"lineNumber":101,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":102,"author":{"gitID":"mhq199657"},"content":"     * Parses {@code Optional\u003cResume\u003e resume} into a {@code Optional\u003cResume\u003e} if {@code resume} is non-empty."},{"lineNumber":103,"author":{"gitID":"mhq199657"},"content":"     * If resume is present and equals to empty string, it will be parsed into a"},{"lineNumber":104,"author":{"gitID":"mhq199657"},"content":"     * {@code Resume} containing null value."},{"lineNumber":105,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":106,"author":{"gitID":"mhq199657"},"content":"    private Optional\u003cResume\u003e parseResumeForEdit(Optional\u003cString\u003e resume) throws IllegalValueException {"},{"lineNumber":107,"author":{"gitID":"mhq199657"},"content":"        assert resume !\u003d null;"},{"lineNumber":108,"author":{"gitID":"mhq199657"},"content":"        if (!resume.isPresent()) {"},{"lineNumber":109,"author":{"gitID":"mhq199657"},"content":"            return Optional.empty();"},{"lineNumber":110,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":111,"author":{"gitID":"mhq199657"},"content":"        if (resume.get().equals(\"\")) {"},{"lineNumber":112,"author":{"gitID":"mhq199657"},"content":"            return Optional.of(new Resume(null));"},{"lineNumber":113,"author":{"gitID":"mhq199657"},"content":"        } else {"},{"lineNumber":114,"author":{"gitID":"mhq199657"},"content":"            return ParserUtil.parseResume(resume);"},{"lineNumber":115,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":116,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":117,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":118,"author":{"gitID":"Ang-YC"},"content":"    //@@author Ang-YC"},{"lineNumber":119,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":120,"author":{"gitID":"Ang-YC"},"content":"     * Parses {@code Optional\u003cProfileImage\u003e profileImage} into a {@code Optional\u003cProfileImage\u003e}"},{"lineNumber":121,"author":{"gitID":"Ang-YC"},"content":"     * if {@code profileImage} is non-empty."},{"lineNumber":122,"author":{"gitID":"Ang-YC"},"content":"     * If profile image is present and equals to empty string, it will be parsed into a"},{"lineNumber":123,"author":{"gitID":"Ang-YC"},"content":"     * {@code ProfileImage} containing null value."},{"lineNumber":124,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":125,"author":{"gitID":"Ang-YC"},"content":"    private Optional\u003cProfileImage\u003e parseProfileImageForEdit(Optional\u003cString\u003e profileImage)"},{"lineNumber":126,"author":{"gitID":"Ang-YC"},"content":"            throws IllegalValueException {"},{"lineNumber":127,"author":{"gitID":"Ang-YC"},"content":"        assert profileImage !\u003d null;"},{"lineNumber":128,"author":{"gitID":"Ang-YC"},"content":"        if (!profileImage.isPresent()) {"},{"lineNumber":129,"author":{"gitID":"Ang-YC"},"content":"            return Optional.empty();"},{"lineNumber":130,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":131,"author":{"gitID":"Ang-YC"},"content":"        if (profileImage.get().equals(\"\")) {"},{"lineNumber":132,"author":{"gitID":"Ang-YC"},"content":"            return Optional.of(new ProfileImage(null));"},{"lineNumber":133,"author":{"gitID":"Ang-YC"},"content":"        } else {"},{"lineNumber":134,"author":{"gitID":"Ang-YC"},"content":"            return ParserUtil.parseProfileImage(profileImage);"},{"lineNumber":135,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":136,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":137,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":138,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":139,"author":{"gitID":"Ang-YC"},"content":"     * Parses {@code Optional\u003cComment\u003e comment} into a {@code Optional\u003cComment\u003e} if {@code comment} is non-empty."},{"lineNumber":140,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":141,"author":{"gitID":"Ang-YC"},"content":"    private Optional\u003cComment\u003e parseCommentForEdit(Optional\u003cString\u003e comment) throws IllegalValueException {"},{"lineNumber":142,"author":{"gitID":"Ang-YC"},"content":"        assert comment !\u003d null;"},{"lineNumber":143,"author":{"gitID":"Ang-YC"},"content":"        if (!comment.isPresent()) {"},{"lineNumber":144,"author":{"gitID":"Ang-YC"},"content":"            return Optional.empty();"},{"lineNumber":145,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":146,"author":{"gitID":"Ang-YC"},"content":"        if (comment.get().equals(\"\")) {"},{"lineNumber":147,"author":{"gitID":"Ang-YC"},"content":"            return Optional.of(new Comment(null));"},{"lineNumber":148,"author":{"gitID":"Ang-YC"},"content":"        } else {"},{"lineNumber":149,"author":{"gitID":"Ang-YC"},"content":"            return ParserUtil.parseComment(comment);"},{"lineNumber":150,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":151,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":152,"author":{"gitID":"Ang-YC"},"content":"    //@@author"},{"lineNumber":153,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":154,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":155,"author":{"gitID":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty."},{"lineNumber":156,"author":{"gitID":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a"},{"lineNumber":157,"author":{"gitID":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags."},{"lineNumber":158,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":159,"author":{"gitID":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws IllegalValueException {"},{"lineNumber":160,"author":{"gitID":"-"},"content":"        assert tags !\u003d null;"},{"lineNumber":161,"author":{"gitID":"-"},"content":""},{"lineNumber":162,"author":{"gitID":"-"},"content":"        if (tags.isEmpty()) {"},{"lineNumber":163,"author":{"gitID":"-"},"content":"            return Optional.empty();"},{"lineNumber":164,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":165,"author":{"gitID":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;"},{"lineNumber":166,"author":{"gitID":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));"},{"lineNumber":167,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":168,"author":{"gitID":"-"},"content":""},{"lineNumber":169,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"kexiaowen":8,"mhq199657":37,"-":77,"Ang-YC":42,"tanhengyeow":5}},{"path":"src/main/java/seedu/address/logic/parser/InterviewCommandParser.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":5,"author":{"gitID":"Ang-YC"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitID":"Ang-YC"},"content":"import java.time.ZoneId;"},{"lineNumber":7,"author":{"gitID":"Ang-YC"},"content":"import java.util.Date;"},{"lineNumber":8,"author":{"gitID":"Ang-YC"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":10,"author":{"gitID":"Ang-YC"},"content":"import com.joestelmach.natty.DateGroup;"},{"lineNumber":11,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;"},{"lineNumber":14,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.logic.commands.InterviewCommand;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":"//@@author Ang-YC"},{"lineNumber":18,"author":{"gitID":"Ang-YC"},"content":"/**"},{"lineNumber":19,"author":{"gitID":"Ang-YC"},"content":" * Parses input arguments and creates a new InterviewCommand object"},{"lineNumber":20,"author":{"gitID":"Ang-YC"},"content":" */"},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":"public class InterviewCommandParser implements Parser\u003cInterviewCommand\u003e {"},{"lineNumber":22,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":23,"author":{"gitID":"Ang-YC"},"content":"    public static final String MESSAGE_DATETIME_PARSE_FAIL \u003d \"Failed to parse the date time from the string: %1$s\";"},{"lineNumber":24,"author":{"gitID":"Ang-YC"},"content":"    private static final com.joestelmach.natty.Parser parser \u003d new com.joestelmach.natty.Parser();"},{"lineNumber":25,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":26,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":27,"author":{"gitID":"Ang-YC"},"content":"     * Parses the given {@code String} of arguments in the context of the InterviewCommand"},{"lineNumber":28,"author":{"gitID":"Ang-YC"},"content":"     * and returns an InterviewCommand object for execution."},{"lineNumber":29,"author":{"gitID":"Ang-YC"},"content":"     * @throws ParseException if the user input does not conform the expected format"},{"lineNumber":30,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":31,"author":{"gitID":"Ang-YC"},"content":"    public InterviewCommand parse(String args) throws ParseException {"},{"lineNumber":32,"author":{"gitID":"Ang-YC"},"content":"        try {"},{"lineNumber":33,"author":{"gitID":"Ang-YC"},"content":"            // Parse the arguments"},{"lineNumber":34,"author":{"gitID":"Ang-YC"},"content":"            String[] arguments \u003d args.trim().split(\"\\\\s+\", 2);"},{"lineNumber":35,"author":{"gitID":"Ang-YC"},"content":"            if (arguments.length !\u003d 2) {"},{"lineNumber":36,"author":{"gitID":"Ang-YC"},"content":"                throw new IllegalValueException(\"Invalid command, expected 2 arguments\");"},{"lineNumber":37,"author":{"gitID":"Ang-YC"},"content":"            }"},{"lineNumber":38,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":39,"author":{"gitID":"Ang-YC"},"content":"            // Parse the index"},{"lineNumber":40,"author":{"gitID":"Ang-YC"},"content":"            Index index \u003d ParserUtil.parseIndex(arguments[0]);"},{"lineNumber":41,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":42,"author":{"gitID":"Ang-YC"},"content":"            // Parse the date time"},{"lineNumber":43,"author":{"gitID":"Ang-YC"},"content":"            LocalDateTime dateTime \u003d parseDateFromNaturalLanguage(arguments[1]);"},{"lineNumber":44,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":45,"author":{"gitID":"Ang-YC"},"content":"            return new InterviewCommand(index, dateTime);"},{"lineNumber":46,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":47,"author":{"gitID":"Ang-YC"},"content":"        } catch (ParseException pe) {"},{"lineNumber":48,"author":{"gitID":"Ang-YC"},"content":"            throw pe;"},{"lineNumber":49,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":50,"author":{"gitID":"Ang-YC"},"content":"        } catch (IllegalValueException ive) {"},{"lineNumber":51,"author":{"gitID":"Ang-YC"},"content":"            throw new ParseException("},{"lineNumber":52,"author":{"gitID":"Ang-YC"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, InterviewCommand.MESSAGE_USAGE));"},{"lineNumber":53,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":54,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":55,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":56,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":57,"author":{"gitID":"Ang-YC"},"content":"     * Parses the given natural language {@code String} and returns a {@code LocalDateTime} object"},{"lineNumber":58,"author":{"gitID":"Ang-YC"},"content":"     * that represents the English representation of the date and time"},{"lineNumber":59,"author":{"gitID":"Ang-YC"},"content":"     * @throws ParseException if the phrase cannot be converted to date and time"},{"lineNumber":60,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":61,"author":{"gitID":"Ang-YC"},"content":"    private LocalDateTime parseDateFromNaturalLanguage(String naturalLanguage) throws ParseException {"},{"lineNumber":62,"author":{"gitID":"Ang-YC"},"content":"        List\u003cDateGroup\u003e groups \u003d parser.parse(naturalLanguage);"},{"lineNumber":63,"author":{"gitID":"Ang-YC"},"content":"        if (groups.size() \u003c 1) {"},{"lineNumber":64,"author":{"gitID":"Ang-YC"},"content":"            throw new ParseException(String.format(MESSAGE_DATETIME_PARSE_FAIL, naturalLanguage));"},{"lineNumber":65,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":66,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":67,"author":{"gitID":"Ang-YC"},"content":"        List\u003cDate\u003e dates \u003d groups.get(0).getDates();"},{"lineNumber":68,"author":{"gitID":"Ang-YC"},"content":"        if (dates.size() \u003c 1) {"},{"lineNumber":69,"author":{"gitID":"Ang-YC"},"content":"            throw new ParseException(String.format(MESSAGE_DATETIME_PARSE_FAIL, naturalLanguage));"},{"lineNumber":70,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":71,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":72,"author":{"gitID":"Ang-YC"},"content":"        Date date \u003d dates.get(0);"},{"lineNumber":73,"author":{"gitID":"Ang-YC"},"content":"        return LocalDateTime.ofInstant(date.toInstant(), ZoneId.systemDefault());"},{"lineNumber":74,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":75,"author":{"gitID":"Ang-YC"},"content":"}"}],"authorContributionMap":{"-":7,"Ang-YC":68}},{"path":"src/main/java/seedu/address/logic/parser/ProfileImageUtil.java","lines":[{"lineNumber":1,"author":{"gitID":"mhq199657"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":3,"author":{"gitID":"mhq199657"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.nio.file.Files;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":7,"author":{"gitID":"mhq199657"},"content":"import java.security.MessageDigest;"},{"lineNumber":8,"author":{"gitID":"mhq199657"},"content":"import java.security.NoSuchAlgorithmException;"},{"lineNumber":9,"author":{"gitID":"mhq199657"},"content":"import java.sql.Timestamp;"},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":"import javax.xml.bind.DatatypeConverter;"},{"lineNumber":12,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.model.person.ProfileImage;"},{"lineNumber":14,"author":{"gitID":"mhq199657"},"content":"import seedu.address.storage.DataFileStorage;"},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":"/**"},{"lineNumber":17,"author":{"gitID":"mhq199657"},"content":" * Resolves the unreferenced profile image files in data folder"},{"lineNumber":18,"author":{"gitID":"mhq199657"},"content":" */"},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":"public class ProfileImageUtil {"},{"lineNumber":20,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":21,"author":{"gitID":"mhq199657"},"content":"     * Processes the profileImage into the correct profileImage name"},{"lineNumber":22,"author":{"gitID":"mhq199657"},"content":"     * @param profileImage"},{"lineNumber":23,"author":{"gitID":"mhq199657"},"content":"     * @return processed profileImage"},{"lineNumber":24,"author":{"gitID":"mhq199657"},"content":"     * @throws IOException"},{"lineNumber":25,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":26,"author":{"gitID":"mhq199657"},"content":"    public static ProfileImage process(ProfileImage profileImage) throws IOException {"},{"lineNumber":27,"author":{"gitID":"mhq199657"},"content":"        String filePath \u003d profileImage.value;"},{"lineNumber":28,"author":{"gitID":"mhq199657"},"content":"        if (filePath \u003d\u003d null) {"},{"lineNumber":29,"author":{"gitID":"mhq199657"},"content":"            return new ProfileImage(null);"},{"lineNumber":30,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":31,"author":{"gitID":"mhq199657"},"content":"        String fullPath \u003d System.getProperty(\"user.dir\") + File.separator + filePath;"},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":"        assert(new File(fullPath).exists());"},{"lineNumber":33,"author":{"gitID":"mhq199657"},"content":"        String newFileName \u003d getNewFileName(fullPath);"},{"lineNumber":34,"author":{"gitID":"mhq199657"},"content":"        transferProfileImageFileToDataFolder(fullPath, newFileName);"},{"lineNumber":35,"author":{"gitID":"mhq199657"},"content":"        return new ProfileImage(\"data\" + File.separator + newFileName, profileImage.value);"},{"lineNumber":36,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":37,"author":{"gitID":"mhq199657"},"content":"    private static String getNewFileName(String fullPath) {"},{"lineNumber":38,"author":{"gitID":"mhq199657"},"content":"        MessageDigest md \u003d null;"},{"lineNumber":39,"author":{"gitID":"mhq199657"},"content":"        try {"},{"lineNumber":40,"author":{"gitID":"mhq199657"},"content":"            md \u003d MessageDigest.getInstance(\"MD5\");"},{"lineNumber":41,"author":{"gitID":"mhq199657"},"content":"        } catch (NoSuchAlgorithmException nsae) {"},{"lineNumber":42,"author":{"gitID":"mhq199657"},"content":"            throw new AssertionError(\"This should never happen.\");"},{"lineNumber":43,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":44,"author":{"gitID":"mhq199657"},"content":"        assert(md !\u003d null);"},{"lineNumber":45,"author":{"gitID":"mhq199657"},"content":"        File currprofileImageFile \u003d new File(fullPath);"},{"lineNumber":46,"author":{"gitID":"mhq199657"},"content":"        assert(currprofileImageFile.exists() \u0026\u0026 currprofileImageFile.isFile());"},{"lineNumber":47,"author":{"gitID":"mhq199657"},"content":"        try {"},{"lineNumber":48,"author":{"gitID":"mhq199657"},"content":"            md.update(Files.readAllBytes(Paths.get(fullPath)));"},{"lineNumber":49,"author":{"gitID":"mhq199657"},"content":"        } catch (IOException ioe) {"},{"lineNumber":50,"author":{"gitID":"mhq199657"},"content":"            throw new AssertionError(\"This should never happen.\");"},{"lineNumber":51,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":52,"author":{"gitID":"mhq199657"},"content":"        byte[] digest \u003d md.digest();"},{"lineNumber":53,"author":{"gitID":"mhq199657"},"content":"        return Long.toString(new Timestamp(System.currentTimeMillis()).getTime())"},{"lineNumber":54,"author":{"gitID":"mhq199657"},"content":"                + \"_\" + DatatypeConverter.printHexBinary(digest).toUpperCase();"},{"lineNumber":55,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"mhq199657"},"content":"    private static void transferProfileImageFileToDataFolder(String fullPath, String newFileName) throws IOException {"},{"lineNumber":57,"author":{"gitID":"mhq199657"},"content":"        DataFileStorage.copyResumeFileToDataFolder(fullPath, newFileName);"},{"lineNumber":58,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":59,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":60,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":61,"author":{"gitID":"mhq199657"},"content":"     * cleans Data Folder when there is a DuplicatePersonException"},{"lineNumber":62,"author":{"gitID":"mhq199657"},"content":"     * @param profileImage the resume to be deleted in folder"},{"lineNumber":63,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":64,"author":{"gitID":"mhq199657"},"content":"    public static void cleanUpDataFolder(ProfileImage profileImage) {"},{"lineNumber":65,"author":{"gitID":"mhq199657"},"content":"        if (profileImage.isHashed()) {"},{"lineNumber":66,"author":{"gitID":"mhq199657"},"content":"            DataFileStorage.deleteUnreferencedDataFile(profileImage.value);"},{"lineNumber":67,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":68,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":69,"author":{"gitID":"mhq199657"},"content":"}"}],"authorContributionMap":{"mhq199657":65,"-":3,"Ang-YC":1}},{"path":"src/main/java/seedu/address/logic/parser/SortCommandParser.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":5,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT_ORDER;"},{"lineNumber":6,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":7,"author":{"gitID":"kexiaowen"},"content":"import java.util.Optional;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.stream.Stream;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;"},{"lineNumber":11,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.logic.commands.SortCommand;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"kexiaowen"},"content":"//@@author kexiaowen"},{"lineNumber":15,"author":{"gitID":"kexiaowen"},"content":"/**"},{"lineNumber":16,"author":{"gitID":"kexiaowen"},"content":" * Parses input arguments and creates a new SortCommand object"},{"lineNumber":17,"author":{"gitID":"kexiaowen"},"content":" */"},{"lineNumber":18,"author":{"gitID":"kexiaowen"},"content":"public class SortCommandParser {"},{"lineNumber":19,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":20,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":21,"author":{"gitID":"kexiaowen"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand"},{"lineNumber":22,"author":{"gitID":"kexiaowen"},"content":"     * and returns an SortCommand object for execution."},{"lineNumber":23,"author":{"gitID":"kexiaowen"},"content":"     * @throws ParseException if the user input does not conform the expected format"},{"lineNumber":24,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":25,"author":{"gitID":"kexiaowen"},"content":"    public SortCommand parse(String args) throws ParseException {"},{"lineNumber":26,"author":{"gitID":"kexiaowen"},"content":"        requireNonNull(args);"},{"lineNumber":27,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":28,"author":{"gitID":"kexiaowen"},"content":"        ArgumentMultimap argMultimap \u003d"},{"lineNumber":29,"author":{"gitID":"kexiaowen"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_SORT_ORDER);"},{"lineNumber":30,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":31,"author":{"gitID":"kexiaowen"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_SORT_ORDER)"},{"lineNumber":32,"author":{"gitID":"kexiaowen"},"content":"                || !areAllFieldsSupplied(argMultimap, PREFIX_SORT_ORDER)) {"},{"lineNumber":33,"author":{"gitID":"kexiaowen"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));"},{"lineNumber":34,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":35,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":36,"author":{"gitID":"kexiaowen"},"content":"        SortCommand.SortField sortField;"},{"lineNumber":37,"author":{"gitID":"kexiaowen"},"content":"        try {"},{"lineNumber":38,"author":{"gitID":"kexiaowen"},"content":"            sortField \u003d ParserUtil.parseSortField(argMultimap.getPreamble());"},{"lineNumber":39,"author":{"gitID":"kexiaowen"},"content":"        } catch (IllegalValueException ive) {"},{"lineNumber":40,"author":{"gitID":"kexiaowen"},"content":"            throw new ParseException(ive.getMessage(), ive);"},{"lineNumber":41,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":42,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":43,"author":{"gitID":"kexiaowen"},"content":"        SortCommand.SortOrder sortOrder;"},{"lineNumber":44,"author":{"gitID":"kexiaowen"},"content":"        try {"},{"lineNumber":45,"author":{"gitID":"kexiaowen"},"content":"            sortOrder \u003d ParserUtil.parseSortOrder("},{"lineNumber":46,"author":{"gitID":"kexiaowen"},"content":"                    argMultimap.getValue(PREFIX_SORT_ORDER)).get();"},{"lineNumber":47,"author":{"gitID":"kexiaowen"},"content":"        } catch (IllegalValueException ive) {"},{"lineNumber":48,"author":{"gitID":"kexiaowen"},"content":"            throw new ParseException(ive.getMessage(), ive);"},{"lineNumber":49,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":50,"author":{"gitID":"kexiaowen"},"content":"        return new SortCommand(sortOrder, sortField);"},{"lineNumber":51,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":53,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":54,"author":{"gitID":"kexiaowen"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"},{"lineNumber":55,"author":{"gitID":"kexiaowen"},"content":"     * {@code ArgumentMultimap}."},{"lineNumber":56,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":57,"author":{"gitID":"kexiaowen"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"},{"lineNumber":58,"author":{"gitID":"kexiaowen"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"},{"lineNumber":59,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":60,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":61,"author":{"gitID":"kexiaowen"},"content":"    private static boolean areAllFieldsSupplied(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"},{"lineNumber":62,"author":{"gitID":"kexiaowen"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e !Optional.of(argumentMultimap.getValue(prefix)).equals(\"\"));"},{"lineNumber":63,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"kexiaowen"},"content":"}"}],"authorContributionMap":{"kexiaowen":55,"-":9}},{"path":"src/main/java/seedu/address/logic/commands/FilterCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"mhq199657"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":3,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXPECTED_GRADUATION_YEAR;"},{"lineNumber":4,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":5,"author":{"gitID":"mhq199657"},"content":"import java.util.function.Predicate;"},{"lineNumber":6,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":7,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":8,"author":{"gitID":"mhq199657"},"content":"//@@author mhq199657"},{"lineNumber":9,"author":{"gitID":"mhq199657"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":" * Filters and lists all persons in address book whose graduation year is before or equal to the specified year.."},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":" */"},{"lineNumber":12,"author":{"gitID":"mhq199657"},"content":"public class FilterCommand extends Command {"},{"lineNumber":13,"author":{"gitID":"mhq199657"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";"},{"lineNumber":14,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filter according the predicates specified. \""},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":"            + \"Display all persons with fields in the range specified by the input keyword.\\n\""},{"lineNumber":17,"author":{"gitID":"mhq199657"},"content":"            + \"Range is either a single predicate, or an interval in the format of `low - high`, \""},{"lineNumber":18,"author":{"gitID":"mhq199657"},"content":"            + \"or a combination of both using commas.\\n\""},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":"            + \"Filterable field is expected graduation year.\""},{"lineNumber":20,"author":{"gitID":"mhq199657"},"content":"            + \"Parameters: \""},{"lineNumber":21,"author":{"gitID":"mhq199657"},"content":"            + \"[\" + PREFIX_EXPECTED_GRADUATION_YEAR + \"EXPECTED GRADUATION YEAR] \""},{"lineNumber":22,"author":{"gitID":"mhq199657"},"content":"            + \"Example: \" + COMMAND_WORD + \" \""},{"lineNumber":23,"author":{"gitID":"mhq199657"},"content":"            + PREFIX_EXPECTED_GRADUATION_YEAR + \" 2020, 2021-2024\";"},{"lineNumber":24,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":25,"author":{"gitID":"mhq199657"},"content":"    private final Predicate\u003cPerson\u003e predicate;"},{"lineNumber":26,"author":{"gitID":"mhq199657"},"content":"    public FilterCommand(Predicate\u003cPerson\u003e predicate) {"},{"lineNumber":27,"author":{"gitID":"mhq199657"},"content":"        this.predicate \u003d predicate;"},{"lineNumber":28,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":29,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":30,"author":{"gitID":"mhq199657"},"content":"    @Override"},{"lineNumber":31,"author":{"gitID":"mhq199657"},"content":"    public CommandResult execute() {"},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":"        model.filterFilteredPersonList(predicate);"},{"lineNumber":33,"author":{"gitID":"mhq199657"},"content":"        return new CommandResult(getMessageForPersonListShownSummary(model.getFilteredPersonList().size()));"},{"lineNumber":34,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":36,"author":{"gitID":"mhq199657"},"content":"    @Override"},{"lineNumber":37,"author":{"gitID":"mhq199657"},"content":"    public boolean equals(Object other) {"},{"lineNumber":38,"author":{"gitID":"mhq199657"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":39,"author":{"gitID":"mhq199657"},"content":"                || (other instanceof FilterCommand // instanceof handles nulls"},{"lineNumber":40,"author":{"gitID":"mhq199657"},"content":"                \u0026\u0026 this.predicate.equals(((FilterCommand) other).predicate)); // state check"},{"lineNumber":41,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":42,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":43,"author":{"gitID":"mhq199657"},"content":"}"}],"authorContributionMap":{"mhq199657":43}},{"path":"src/main/java/seedu/address/logic/parser/FindUtil.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;"},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMENT;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;"},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB_APPLIED;"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MAJOR;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNIVERSITY;"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"import java.util.function.Predicate;"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"import org.apache.commons.lang.NullArgumentException;"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.FindCommand;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.person.AllPredicate;"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":" * Contains utility methods used for FindCommandParser"},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"public class FindUtil {"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"     * Parses the string {@code trimmedArgs} and {@code argMultimap} to form a combined Predicate based on user request"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"     * @param trimmedArgs,argMultimap"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"     * @return the predicate user demanded"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":"     * @throws ParseException"},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"    public Predicate\u003cPerson\u003e parseFindArgs(String trimmedArgs, ArgumentMultimap argMultimap)"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":"            throws ParseException {"},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        requireNonNull(trimmedArgs);"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        assert trimmedArgs !\u003d null;"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":"        Predicate\u003cPerson\u003e finalPredicate;"},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        // no prefix used, search for all fields (global search)"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"        if (!startWithPrefix(trimmedArgs)) {"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":"            String[] keywords \u003d trimmedArgs.split(\",\");"},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"            try {"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"                AllPredicate allPredicate \u003d new PredicateUtil().parseAllPredicates(keywords);"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"                finalPredicate \u003d new PredicateUtil().formOrPredicate(allPredicate.getNamePredicate().getPredicate(),"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"                        allPredicate.getPhonePredicate().getPredicate(),"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"                        allPredicate.getEmailPredicate().getPredicate(),"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":"                        allPredicate.getAddressPredicate().getPredicate(),"},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"                        allPredicate.getUniversityPredicate().getPredicate(),"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"                        allPredicate.getMajorPredicate().getPredicate(),"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"                        allPredicate.getJobAppliedPredicate().getPredicate(),"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"                        allPredicate.getCommentPredicate().getPredicate());"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":"                return finalPredicate;"},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"            } catch (ParseException pe) {"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"                throw new ParseException(pe.getMessage(), pe);"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":"            }"},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"        } else {"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"            // at least one prefix is used, search for fields that matches prefix only"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":"            if (!argMultimap.getPreamble().isEmpty()) {"},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"            }"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"            try {"},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":"                AllPredicate allPredicate \u003d new PredicateUtil().parseSelectedPredicates(argMultimap);"},{"lineNumber":69,"author":{"gitID":"tanhengyeow"},"content":"                finalPredicate \u003d new PredicateUtil().formAndPredicate(allPredicate.getNamePredicate().getPredicate(),"},{"lineNumber":70,"author":{"gitID":"tanhengyeow"},"content":"                        allPredicate.getPhonePredicate().getPredicate(),"},{"lineNumber":71,"author":{"gitID":"tanhengyeow"},"content":"                        allPredicate.getEmailPredicate().getPredicate(),"},{"lineNumber":72,"author":{"gitID":"tanhengyeow"},"content":"                        allPredicate.getAddressPredicate().getPredicate(),"},{"lineNumber":73,"author":{"gitID":"tanhengyeow"},"content":"                        allPredicate.getUniversityPredicate().getPredicate(),"},{"lineNumber":74,"author":{"gitID":"tanhengyeow"},"content":"                        allPredicate.getMajorPredicate().getPredicate(),"},{"lineNumber":75,"author":{"gitID":"tanhengyeow"},"content":"                        allPredicate.getJobAppliedPredicate().getPredicate(),"},{"lineNumber":76,"author":{"gitID":"tanhengyeow"},"content":"                        allPredicate.getCommentPredicate().getPredicate());"},{"lineNumber":77,"author":{"gitID":"tanhengyeow"},"content":"                return finalPredicate;"},{"lineNumber":78,"author":{"gitID":"tanhengyeow"},"content":"            } catch (ParseException pe) {"},{"lineNumber":79,"author":{"gitID":"tanhengyeow"},"content":"                throw new ParseException(pe.getMessage(), pe);"},{"lineNumber":80,"author":{"gitID":"tanhengyeow"},"content":"            }"},{"lineNumber":81,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":82,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":83,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":84,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":85,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":86,"author":{"gitID":"tanhengyeow"},"content":"     * Parses the string {@code trimmedArgs} and a returns a boolean value true if prefix is present"},{"lineNumber":87,"author":{"gitID":"tanhengyeow"},"content":"     * @param trimmedArgs"},{"lineNumber":88,"author":{"gitID":"tanhengyeow"},"content":"     * @return boolean value"},{"lineNumber":89,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":90,"author":{"gitID":"tanhengyeow"},"content":"    private boolean startWithPrefix(String trimmedArgs) throws NullArgumentException {"},{"lineNumber":91,"author":{"gitID":"tanhengyeow"},"content":"        assert trimmedArgs !\u003d null;"},{"lineNumber":92,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":93,"author":{"gitID":"tanhengyeow"},"content":"        String[] args \u003d null;"},{"lineNumber":94,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":95,"author":{"gitID":"tanhengyeow"},"content":"        try {"},{"lineNumber":96,"author":{"gitID":"tanhengyeow"},"content":"            args \u003d trimmedArgs.split(\"\\\\s+\");"},{"lineNumber":97,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":98,"author":{"gitID":"tanhengyeow"},"content":"        } catch (NullArgumentException ne) {"},{"lineNumber":99,"author":{"gitID":"tanhengyeow"},"content":"            ne.printStackTrace();"},{"lineNumber":100,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":101,"author":{"gitID":"tanhengyeow"},"content":"        return (args[0].contains(PREFIX_NAME.toString())"},{"lineNumber":102,"author":{"gitID":"tanhengyeow"},"content":"                || args[0].contains(PREFIX_PHONE.toString())"},{"lineNumber":103,"author":{"gitID":"tanhengyeow"},"content":"                || args[0].contains(PREFIX_EMAIL.toString())"},{"lineNumber":104,"author":{"gitID":"tanhengyeow"},"content":"                || args[0].contains(PREFIX_ADDRESS.toString())"},{"lineNumber":105,"author":{"gitID":"tanhengyeow"},"content":"                || args[0].contains(PREFIX_UNIVERSITY.toString())"},{"lineNumber":106,"author":{"gitID":"tanhengyeow"},"content":"                || args[0].contains(PREFIX_MAJOR.toString())"},{"lineNumber":107,"author":{"gitID":"tanhengyeow"},"content":"                || args[0].contains(PREFIX_JOB_APPLIED.toString())"},{"lineNumber":108,"author":{"gitID":"tanhengyeow"},"content":"                || args[0].contains(PREFIX_COMMENT.toString())); // more fields to be added if necessary"},{"lineNumber":109,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":110,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":10,"tanhengyeow":100}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import seedu.address.model.AddressBook;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":8,"author":{"gitID":"-"},"content":" * Clears the address book."},{"lineNumber":9,"author":{"gitID":"-"},"content":" */"},{"lineNumber":10,"author":{"gitID":"-"},"content":"public class ClearCommand extends UndoableCommand {"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";"},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"HR+ has been cleared!\";"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":17,"author":{"gitID":"-"},"content":"    public CommandResult executeUndoableCommand() {"},{"lineNumber":18,"author":{"gitID":"-"},"content":"        requireNonNull(model);"},{"lineNumber":19,"author":{"gitID":"-"},"content":"        model.resetData(new AddressBook());"},{"lineNumber":20,"author":{"gitID":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);"},{"lineNumber":21,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":22,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"-":21,"Ang-YC":1}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Messages;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import seedu.address.logic.CommandHistory;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import seedu.address.logic.UndoRedoStack;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.FindResults;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":11,"author":{"gitID":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed."},{"lineNumber":12,"author":{"gitID":"-"},"content":" */"},{"lineNumber":13,"author":{"gitID":"-"},"content":"public abstract class Command {"},{"lineNumber":14,"author":{"gitID":"-"},"content":"    protected Model model;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"    protected CommandHistory history;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"    protected UndoRedoStack undoRedoStack;"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":19,"author":{"gitID":"-"},"content":"     * Constructs a feedback message to summarise an operation that displayed a listing of persons."},{"lineNumber":20,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":21,"author":{"gitID":"-"},"content":"     * @param displaySize used to generate summary"},{"lineNumber":22,"author":{"gitID":"-"},"content":"     * @return summary message for persons displayed"},{"lineNumber":23,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    public static String getMessageForPersonListShownSummary(int displaySize) {"},{"lineNumber":25,"author":{"gitID":"-"},"content":"        return String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, displaySize);"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"    //@@author tanhengyeow"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"     * Constructs a feedback message to summarise an operation that displayed a listing of persons after finding."},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"     *"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"     * @return summary find message for searches"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":"    public static String getFindMessageForPersonListShownSummary() {"},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        FindResults.getInstance().formTextResults();"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        FindResults.getInstance().clearResults(); // clear current search results"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":"        return FindResults.getInstance().getTextResults();"},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":"    //@@author"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":42,"author":{"gitID":"-"},"content":"     * Executes the command and returns the result message."},{"lineNumber":43,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":44,"author":{"gitID":"-"},"content":"     * @return feedback message of the operation result for display"},{"lineNumber":45,"author":{"gitID":"-"},"content":"     * @throws CommandException If an error occurs during command execution."},{"lineNumber":46,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    public abstract CommandResult execute() throws CommandException;"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":50,"author":{"gitID":"-"},"content":"     * Provides any needed dependencies to the command."},{"lineNumber":51,"author":{"gitID":"-"},"content":"     * Commands making use of any of these should override this method to gain"},{"lineNumber":52,"author":{"gitID":"-"},"content":"     * access to the dependencies."},{"lineNumber":53,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":54,"author":{"gitID":"-"},"content":"    public void setData(Model model, CommandHistory history, UndoRedoStack undoRedoStack) {"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        this.model \u003d model;"},{"lineNumber":56,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":58,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":59,"author":{"gitID":"Ang-YC"},"content":"     * Return the parsed result of the command for real time parsing and validating"},{"lineNumber":60,"author":{"gitID":"Ang-YC"},"content":"     * @return the parsed result of the command, default to null"},{"lineNumber":61,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":62,"author":{"gitID":"Ang-YC"},"content":"    public String getParsedResult() {"},{"lineNumber":63,"author":{"gitID":"Ang-YC"},"content":"        return null;"},{"lineNumber":64,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":65,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"-":43,"tanhengyeow":14,"Ang-YC":8}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;"},{"lineNumber":5,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMENT;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;"},{"lineNumber":7,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXPECTED_GRADUATION_YEAR;"},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GRADE_POINT_AVERAGE;"},{"lineNumber":9,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IMAGE;"},{"lineNumber":10,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB_APPLIED;"},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MAJOR;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;"},{"lineNumber":14,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RESUME;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"},{"lineNumber":16,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNIVERSITY;"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":"import seedu.address.logic.parser.ProfileImageUtil;"},{"lineNumber":20,"author":{"gitID":"mhq199657"},"content":"import seedu.address.logic.parser.ResumeUtil;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":25,"author":{"gitID":"-"},"content":" * Adds a person to the address book."},{"lineNumber":26,"author":{"gitID":"-"},"content":" */"},{"lineNumber":27,"author":{"gitID":"-"},"content":"public class AddCommand extends UndoableCommand {"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"kexiaowen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to HR+. \""},{"lineNumber":32,"author":{"gitID":"-"},"content":"            + \"Parameters: \""},{"lineNumber":33,"author":{"gitID":"-"},"content":"            + PREFIX_NAME + \"NAME \""},{"lineNumber":34,"author":{"gitID":"-"},"content":"            + PREFIX_PHONE + \"PHONE \""},{"lineNumber":35,"author":{"gitID":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \""},{"lineNumber":36,"author":{"gitID":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \""},{"lineNumber":37,"author":{"gitID":"kexiaowen"},"content":"            + PREFIX_UNIVERSITY + \"UNIVERSITY \""},{"lineNumber":38,"author":{"gitID":"mhq199657"},"content":"            + PREFIX_EXPECTED_GRADUATION_YEAR + \"EXPECTED GRADUATION YEAR \""},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"            + PREFIX_MAJOR + \"MAJOR \""},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":"            + PREFIX_GRADE_POINT_AVERAGE + \"GRADE POINT AVERAGE \""},{"lineNumber":41,"author":{"gitID":"kexiaowen"},"content":"            + PREFIX_JOB_APPLIED + \"JOB APPLIED \""},{"lineNumber":42,"author":{"gitID":"mhq199657"},"content":"            + \"[\" + PREFIX_RESUME + \"RESUME] \""},{"lineNumber":43,"author":{"gitID":"Ang-YC"},"content":"            + \"[\" + PREFIX_IMAGE + \"IMAGE] \""},{"lineNumber":44,"author":{"gitID":"Ang-YC"},"content":"            + \"[\" + PREFIX_COMMENT + \"COMMENT] \""},{"lineNumber":45,"author":{"gitID":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\""},{"lineNumber":46,"author":{"gitID":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \""},{"lineNumber":47,"author":{"gitID":"-"},"content":"            + PREFIX_NAME + \"John Doe \""},{"lineNumber":48,"author":{"gitID":"-"},"content":"            + PREFIX_PHONE + \"98765432 \""},{"lineNumber":49,"author":{"gitID":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \""},{"lineNumber":50,"author":{"gitID":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \""},{"lineNumber":51,"author":{"gitID":"kexiaowen"},"content":"            + PREFIX_UNIVERSITY + \"NUS \""},{"lineNumber":52,"author":{"gitID":"mhq199657"},"content":"            + PREFIX_EXPECTED_GRADUATION_YEAR + \"2020 \""},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"            + PREFIX_MAJOR + \"Computer Science \""},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"            + PREFIX_GRADE_POINT_AVERAGE + \"4.93 \""},{"lineNumber":55,"author":{"gitID":"kexiaowen"},"content":"            + PREFIX_JOB_APPLIED + \"Software Developer \""},{"lineNumber":56,"author":{"gitID":"mhq199657"},"content":"            + PREFIX_RESUME + \"jdoe.pdf \""},{"lineNumber":57,"author":{"gitID":"Ang-YC"},"content":"            + PREFIX_IMAGE + \"photo.jpg \""},{"lineNumber":58,"author":{"gitID":"Ang-YC"},"content":"            + PREFIX_COMMENT + \"Extraordinary Regex skill \""},{"lineNumber":59,"author":{"gitID":"kexiaowen"},"content":"            + PREFIX_TAG + \"Java \""},{"lineNumber":60,"author":{"gitID":"kexiaowen"},"content":"            + PREFIX_TAG + \"Go\\n\""},{"lineNumber":61,"author":{"gitID":"mhq199657"},"content":"            + \"The status is initialised to be \u0027new\u0027.\";"},{"lineNumber":62,"author":{"gitID":"-"},"content":""},{"lineNumber":63,"author":{"gitID":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";"},{"lineNumber":64,"author":{"gitID":"kexiaowen"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in HR+\";"},{"lineNumber":65,"author":{"gitID":"-"},"content":""},{"lineNumber":66,"author":{"gitID":"-"},"content":"    private final Person toAdd;"},{"lineNumber":67,"author":{"gitID":"-"},"content":""},{"lineNumber":68,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":69,"author":{"gitID":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}"},{"lineNumber":70,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":71,"author":{"gitID":"-"},"content":"    public AddCommand(Person person) {"},{"lineNumber":72,"author":{"gitID":"-"},"content":"        requireNonNull(person);"},{"lineNumber":73,"author":{"gitID":"-"},"content":"        toAdd \u003d person;"},{"lineNumber":74,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitID":"-"},"content":""},{"lineNumber":76,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":77,"author":{"gitID":"-"},"content":"    public CommandResult executeUndoableCommand() throws CommandException {"},{"lineNumber":78,"author":{"gitID":"-"},"content":"        requireNonNull(model);"},{"lineNumber":79,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":80,"author":{"gitID":"-"},"content":"            model.addPerson(toAdd);"},{"lineNumber":81,"author":{"gitID":"-"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));"},{"lineNumber":82,"author":{"gitID":"-"},"content":"        } catch (DuplicatePersonException e) {"},{"lineNumber":83,"author":{"gitID":"mhq199657"},"content":"            ResumeUtil.cleanUpDataFolder(toAdd.getResume());"},{"lineNumber":84,"author":{"gitID":"mhq199657"},"content":"            ProfileImageUtil.cleanUpDataFolder(toAdd.getProfileImage());"},{"lineNumber":85,"author":{"gitID":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);"},{"lineNumber":86,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":87,"author":{"gitID":"-"},"content":""},{"lineNumber":88,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":89,"author":{"gitID":"-"},"content":""},{"lineNumber":90,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":91,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":92,"author":{"gitID":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":93,"author":{"gitID":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls"},{"lineNumber":94,"author":{"gitID":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));"},{"lineNumber":95,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":96,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"kexiaowen":10,"mhq199657":11,"-":63,"Ang-YC":6,"tanhengyeow":6}},{"path":"src/main/java/seedu/address/logic/commands/StatusCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Messages;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":13,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Status;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;"},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":"//@@author mhq199657"},{"lineNumber":17,"author":{"gitID":"mhq199657"},"content":"/**"},{"lineNumber":18,"author":{"gitID":"mhq199657"},"content":" * Update status of an existing person in HR+."},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":" */"},{"lineNumber":20,"author":{"gitID":"mhq199657"},"content":"public class StatusCommand extends UndoableCommand {"},{"lineNumber":21,"author":{"gitID":"mhq199657"},"content":"    public static final String COMMAND_WORD \u003d \"status\";"},{"lineNumber":22,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":23,"author":{"gitID":"mhq199657"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Update status for the person \""},{"lineNumber":24,"author":{"gitID":"mhq199657"},"content":"            + \"by the index number used in the last person listing. \""},{"lineNumber":25,"author":{"gitID":"mhq199657"},"content":"            + \"Existing status will be overwritten by the input value.\\n\""},{"lineNumber":26,"author":{"gitID":"mhq199657"},"content":"            + \"Parameters: INDEX (must be a positive integer) \""},{"lineNumber":27,"author":{"gitID":"mhq199657"},"content":"            + \"STATUS_INDEX(by the list below)\\n\""},{"lineNumber":28,"author":{"gitID":"mhq199657"},"content":"            + \"1. \" + Status.STATUS_NEW + \"\\n\""},{"lineNumber":29,"author":{"gitID":"mhq199657"},"content":"            + \"2. \" + Status.STATUS_INTERVIEW_FIRST_ROUND + \"\\n\""},{"lineNumber":30,"author":{"gitID":"mhq199657"},"content":"            + \"3. \" + Status.STATUS_INTERVIEW_SECOND_ROUND + \"\\n\""},{"lineNumber":31,"author":{"gitID":"mhq199657"},"content":"            + \"4. \" + Status.STATUS_REJECTED + \"\\n\""},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":"            + \"5. \" + Status.STATUS_WAITLIST + \"\\n\""},{"lineNumber":33,"author":{"gitID":"mhq199657"},"content":"            + \"6. \" + Status.STATUS_OFFERED + \"\\n\""},{"lineNumber":34,"author":{"gitID":"mhq199657"},"content":"            + \"7. \" + Status.STATUS_ACCEPTED + \"\\n\""},{"lineNumber":35,"author":{"gitID":"mhq199657"},"content":"            + \"8. \" + Status.STATUS_WITHDRAWN + \"\\n\""},{"lineNumber":36,"author":{"gitID":"mhq199657"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 2\";"},{"lineNumber":37,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":38,"author":{"gitID":"mhq199657"},"content":"    public static final String MESSAGE_STATUS_SUCCESS \u003d"},{"lineNumber":39,"author":{"gitID":"mhq199657"},"content":"            \"Status of person named %1$s has been updated to \u0027%2$s\u0027\";"},{"lineNumber":40,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":41,"author":{"gitID":"mhq199657"},"content":"    private final Index index;"},{"lineNumber":42,"author":{"gitID":"mhq199657"},"content":"    private final Status updatedStatus;"},{"lineNumber":43,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":44,"author":{"gitID":"mhq199657"},"content":"    private Person personToUpdateStatus;"},{"lineNumber":45,"author":{"gitID":"mhq199657"},"content":"    private Person updatedPerson;"},{"lineNumber":46,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":47,"author":{"gitID":"mhq199657"},"content":"     * @param index of the person in the filtered person list to update status"},{"lineNumber":48,"author":{"gitID":"mhq199657"},"content":"     * @param updatedStatus updatedStatus"},{"lineNumber":49,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":50,"author":{"gitID":"mhq199657"},"content":"    public StatusCommand(Index index, Status updatedStatus) {"},{"lineNumber":51,"author":{"gitID":"mhq199657"},"content":"        requireNonNull(index);"},{"lineNumber":52,"author":{"gitID":"mhq199657"},"content":"        requireNonNull(updatedStatus);"},{"lineNumber":53,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":54,"author":{"gitID":"mhq199657"},"content":"        this.index    \u003d index;"},{"lineNumber":55,"author":{"gitID":"mhq199657"},"content":"        this.updatedStatus \u003d updatedStatus;"},{"lineNumber":56,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":58,"author":{"gitID":"mhq199657"},"content":"    public Index getIndex() {"},{"lineNumber":59,"author":{"gitID":"mhq199657"},"content":"        return index;"},{"lineNumber":60,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":61,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":62,"author":{"gitID":"mhq199657"},"content":"    public Status getUpdatedStatus() {"},{"lineNumber":63,"author":{"gitID":"mhq199657"},"content":"        return updatedStatus;"},{"lineNumber":64,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":65,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":66,"author":{"gitID":"mhq199657"},"content":"    public Person getPersonToUpdateStatus() {"},{"lineNumber":67,"author":{"gitID":"mhq199657"},"content":"        return personToUpdateStatus;"},{"lineNumber":68,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":69,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":70,"author":{"gitID":"mhq199657"},"content":"    @Override"},{"lineNumber":71,"author":{"gitID":"mhq199657"},"content":"    public CommandResult executeUndoableCommand() {"},{"lineNumber":72,"author":{"gitID":"mhq199657"},"content":"        try {"},{"lineNumber":73,"author":{"gitID":"mhq199657"},"content":"            model.updatePerson(personToUpdateStatus, updatedPerson);"},{"lineNumber":74,"author":{"gitID":"mhq199657"},"content":"        } catch (DuplicatePersonException dpe) {"},{"lineNumber":75,"author":{"gitID":"mhq199657"},"content":"            throw new AssertionError(\"The target person cannot become a duplicate of another person \""},{"lineNumber":76,"author":{"gitID":"mhq199657"},"content":"                    + \"via updating status.\");"},{"lineNumber":77,"author":{"gitID":"mhq199657"},"content":"        } catch (PersonNotFoundException pnfe) {"},{"lineNumber":78,"author":{"gitID":"mhq199657"},"content":"            throw new AssertionError(\"The target person cannot be missing.\");"},{"lineNumber":79,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":80,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":81,"author":{"gitID":"mhq199657"},"content":"        return new CommandResult(String.format(MESSAGE_STATUS_SUCCESS,"},{"lineNumber":82,"author":{"gitID":"mhq199657"},"content":"                updatedPerson.getName(), updatedStatus.value));"},{"lineNumber":83,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":84,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":85,"author":{"gitID":"mhq199657"},"content":"    @Override"},{"lineNumber":86,"author":{"gitID":"mhq199657"},"content":"    protected void preprocessUndoableCommand() throws CommandException {"},{"lineNumber":87,"author":{"gitID":"mhq199657"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();"},{"lineNumber":88,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":89,"author":{"gitID":"mhq199657"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {"},{"lineNumber":90,"author":{"gitID":"mhq199657"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"},{"lineNumber":91,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":92,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":93,"author":{"gitID":"mhq199657"},"content":"        personToUpdateStatus \u003d lastShownList.get(index.getZeroBased());"},{"lineNumber":94,"author":{"gitID":"mhq199657"},"content":"        updatedPerson \u003d createUpdatedPerson(personToUpdateStatus, updatedStatus);"},{"lineNumber":95,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":96,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":97,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":98,"author":{"gitID":"mhq199657"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToUpdateStatus}"},{"lineNumber":99,"author":{"gitID":"mhq199657"},"content":"     * with updated with {@code statusIndex}."},{"lineNumber":100,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":101,"author":{"gitID":"mhq199657"},"content":"    private static Person createUpdatedPerson(Person personToUpdateStatus, Status updatedStatus) {"},{"lineNumber":102,"author":{"gitID":"mhq199657"},"content":"        requireAllNonNull(personToUpdateStatus);"},{"lineNumber":103,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":104,"author":{"gitID":"mhq199657"},"content":"        return new Person(personToUpdateStatus.getName(), personToUpdateStatus.getPhone(),"},{"lineNumber":105,"author":{"gitID":"mhq199657"},"content":"                personToUpdateStatus.getEmail(), personToUpdateStatus.getAddress(),"},{"lineNumber":106,"author":{"gitID":"mhq199657"},"content":"                personToUpdateStatus.getUniversity(), personToUpdateStatus.getExpectedGraduationYear(),"},{"lineNumber":107,"author":{"gitID":"mhq199657"},"content":"                personToUpdateStatus.getMajor(), personToUpdateStatus.getGradePointAverage(),"},{"lineNumber":108,"author":{"gitID":"mhq199657"},"content":"                personToUpdateStatus.getJobApplied(), personToUpdateStatus.getRating(),"},{"lineNumber":109,"author":{"gitID":"mhq199657"},"content":"                personToUpdateStatus.getResume(), personToUpdateStatus.getProfileImage(),"},{"lineNumber":110,"author":{"gitID":"mhq199657"},"content":"                personToUpdateStatus.getComment(), personToUpdateStatus.getInterviewDate(),"},{"lineNumber":111,"author":{"gitID":"mhq199657"},"content":"                updatedStatus, personToUpdateStatus.getTags());"},{"lineNumber":112,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":113,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":114,"author":{"gitID":"mhq199657"},"content":"    @Override"},{"lineNumber":115,"author":{"gitID":"mhq199657"},"content":"    public String getParsedResult() {"},{"lineNumber":116,"author":{"gitID":"mhq199657"},"content":"        return \"Set status to: \" + updatedStatus.value;"},{"lineNumber":117,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":118,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":119,"author":{"gitID":"mhq199657"},"content":"    @Override"},{"lineNumber":120,"author":{"gitID":"mhq199657"},"content":"    public boolean equals(Object other) {"},{"lineNumber":121,"author":{"gitID":"mhq199657"},"content":"        // Short circuit if same object"},{"lineNumber":122,"author":{"gitID":"mhq199657"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":123,"author":{"gitID":"mhq199657"},"content":"            return true;"},{"lineNumber":124,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":125,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":126,"author":{"gitID":"mhq199657"},"content":"        // instanceof handles nulls"},{"lineNumber":127,"author":{"gitID":"mhq199657"},"content":"        if (!(other instanceof StatusCommand)) {"},{"lineNumber":128,"author":{"gitID":"mhq199657"},"content":"            return false;"},{"lineNumber":129,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":130,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":131,"author":{"gitID":"mhq199657"},"content":"        // State check"},{"lineNumber":132,"author":{"gitID":"mhq199657"},"content":"        StatusCommand i \u003d (StatusCommand) other;"},{"lineNumber":133,"author":{"gitID":"mhq199657"},"content":"        return getIndex().equals(i.getIndex())"},{"lineNumber":134,"author":{"gitID":"mhq199657"},"content":"                \u0026\u0026 getUpdatedStatus().equals(i.getUpdatedStatus())"},{"lineNumber":135,"author":{"gitID":"mhq199657"},"content":"                \u0026\u0026 Objects.equals(getPersonToUpdateStatus(), i.getPersonToUpdateStatus());"},{"lineNumber":136,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":137,"author":{"gitID":"mhq199657"},"content":"}"}],"authorContributionMap":{"mhq199657":123,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/FilterUtil.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":5,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":6,"author":{"gitID":"mhq199657"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":7,"author":{"gitID":"mhq199657"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitID":"mhq199657"},"content":"import java.util.Arrays;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;"},{"lineNumber":14,"author":{"gitID":"mhq199657"},"content":"import seedu.address.logic.commands.FilterCommand;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;"},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.ExpectedGraduationYear;"},{"lineNumber":17,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.ExpectedGraduationYearInKeywordsRangePredicate;"},{"lineNumber":18,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.GradePointAverage;"},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.GradePointAverageInKeywordsRangePredicate;"},{"lineNumber":20,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.InterviewDate;"},{"lineNumber":21,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.InterviewDateInKeywordsRangePredicate;"},{"lineNumber":22,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":23,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Rating;"},{"lineNumber":24,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.RatingInKeywordsRangePredicate;"},{"lineNumber":25,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.util.InterviewDateUtil;"},{"lineNumber":26,"author":{"gitID":"mhq199657"},"content":"//@@author mhq199657"},{"lineNumber":27,"author":{"gitID":"mhq199657"},"content":"/**"},{"lineNumber":28,"author":{"gitID":"mhq199657"},"content":" * A utility class for parsing FilterCommand"},{"lineNumber":29,"author":{"gitID":"mhq199657"},"content":" */"},{"lineNumber":30,"author":{"gitID":"mhq199657"},"content":"public class FilterUtil {"},{"lineNumber":31,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":"     * Parses a Optional of  predicateString to a Predicate used to filter Person"},{"lineNumber":33,"author":{"gitID":"mhq199657"},"content":"     * @param predicateString a predicate string read from user input"},{"lineNumber":34,"author":{"gitID":"mhq199657"},"content":"     * @return a Predicate for filter command"},{"lineNumber":35,"author":{"gitID":"mhq199657"},"content":"     * @throws IllegalValueException"},{"lineNumber":36,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":37,"author":{"gitID":"mhq199657"},"content":"    public static Predicate\u003cPerson\u003e parseExpectedGraduationYear(Optional\u003cString\u003e predicateString)"},{"lineNumber":38,"author":{"gitID":"mhq199657"},"content":"            throws IllegalValueException {"},{"lineNumber":39,"author":{"gitID":"mhq199657"},"content":"        requireNonNull(predicateString);"},{"lineNumber":40,"author":{"gitID":"mhq199657"},"content":"        if (predicateString.isPresent()) {"},{"lineNumber":41,"author":{"gitID":"mhq199657"},"content":"            return parseExpectedGraduationYear(predicateString.get());"},{"lineNumber":42,"author":{"gitID":"mhq199657"},"content":"        } else {"},{"lineNumber":43,"author":{"gitID":"mhq199657"},"content":"            return null;"},{"lineNumber":44,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":45,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":47,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":48,"author":{"gitID":"mhq199657"},"content":"     * Parses a predicateString to a Predicate used to filter Person"},{"lineNumber":49,"author":{"gitID":"mhq199657"},"content":"     * @param predicateString a predicate string read from user input"},{"lineNumber":50,"author":{"gitID":"mhq199657"},"content":"     * @return a Predicate for filter command"},{"lineNumber":51,"author":{"gitID":"mhq199657"},"content":"     * @throws IllegalValueException"},{"lineNumber":52,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":53,"author":{"gitID":"mhq199657"},"content":"    public static Predicate\u003cPerson\u003e parseExpectedGraduationYear(String predicateString)"},{"lineNumber":54,"author":{"gitID":"mhq199657"},"content":"            throws IllegalValueException {"},{"lineNumber":55,"author":{"gitID":"mhq199657"},"content":"        requireNonNull(predicateString);"},{"lineNumber":56,"author":{"gitID":"mhq199657"},"content":"        String[] predicateStrings \u003d predicateString.split(\",\");"},{"lineNumber":57,"author":{"gitID":"mhq199657"},"content":"        Arrays.stream(predicateStrings).map(String::trim).toArray(unused -\u003e predicateStrings);"},{"lineNumber":58,"author":{"gitID":"mhq199657"},"content":"        if (predicateStrings.length \u003d\u003d 0) {"},{"lineNumber":59,"author":{"gitID":"mhq199657"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));"},{"lineNumber":60,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":61,"author":{"gitID":"mhq199657"},"content":"        Predicate\u003cPerson\u003e predicate \u003d processExpectedGraduationYearPredicateStrings(predicateStrings);"},{"lineNumber":62,"author":{"gitID":"mhq199657"},"content":"        return predicate;"},{"lineNumber":63,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":65,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":66,"author":{"gitID":"mhq199657"},"content":"     * Parses the string array of all single predicate strings to a predicate"},{"lineNumber":67,"author":{"gitID":"mhq199657"},"content":"     * @param predicateStrings array of predicateString"},{"lineNumber":68,"author":{"gitID":"mhq199657"},"content":"     * @return the predicate user demanded"},{"lineNumber":69,"author":{"gitID":"mhq199657"},"content":"     * @throws IllegalValueException"},{"lineNumber":70,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":71,"author":{"gitID":"mhq199657"},"content":"    private static Predicate\u003cPerson\u003e processExpectedGraduationYearPredicateStrings(String[] predicateStrings)"},{"lineNumber":72,"author":{"gitID":"mhq199657"},"content":"            throws IllegalValueException {"},{"lineNumber":73,"author":{"gitID":"mhq199657"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e allPredicates \u003d new ArrayList\u003cPredicate\u003cPerson\u003e\u003e();"},{"lineNumber":74,"author":{"gitID":"mhq199657"},"content":"        for (String s: predicateStrings) {"},{"lineNumber":75,"author":{"gitID":"mhq199657"},"content":"            Predicate\u003cPerson\u003e predicate \u003d formExpectedGraduationYearPredicateFromPredicateString(s);"},{"lineNumber":76,"author":{"gitID":"mhq199657"},"content":"            allPredicates.add(predicate);"},{"lineNumber":77,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":78,"author":{"gitID":"mhq199657"},"content":"        return combineAllPredicates(allPredicates);"},{"lineNumber":79,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":80,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":81,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":82,"author":{"gitID":"mhq199657"},"content":"     * Combines a list of predicate into a single predicate"},{"lineNumber":83,"author":{"gitID":"mhq199657"},"content":"     * @param predicateList list of predicates"},{"lineNumber":84,"author":{"gitID":"mhq199657"},"content":"     * @return a single equivalent predicate"},{"lineNumber":85,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":86,"author":{"gitID":"mhq199657"},"content":"    private static Predicate\u003cPerson\u003e combineAllPredicates(List\u003cPredicate\u003cPerson\u003e\u003e predicateList) {"},{"lineNumber":87,"author":{"gitID":"mhq199657"},"content":"        assert(predicateList.size() \u003e\u003d 1);"},{"lineNumber":88,"author":{"gitID":"mhq199657"},"content":"        Predicate\u003cPerson\u003e allPredicates \u003d predicateList.get(0);"},{"lineNumber":89,"author":{"gitID":"mhq199657"},"content":"        for (int i \u003d 1; i \u003c predicateList.size(); i++) {"},{"lineNumber":90,"author":{"gitID":"mhq199657"},"content":"            allPredicates \u003d allPredicates.or(predicateList.get(i));"},{"lineNumber":91,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":92,"author":{"gitID":"mhq199657"},"content":"        return allPredicates;"},{"lineNumber":93,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":94,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":95,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":96,"author":{"gitID":"mhq199657"},"content":"     * Form a single predicate from a single predicate string"},{"lineNumber":97,"author":{"gitID":"mhq199657"},"content":"     * @param s a single predicate string"},{"lineNumber":98,"author":{"gitID":"mhq199657"},"content":"     * @return a single predicate"},{"lineNumber":99,"author":{"gitID":"mhq199657"},"content":"     * @throws IllegalValueException"},{"lineNumber":100,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":101,"author":{"gitID":"mhq199657"},"content":"    private static Predicate\u003cPerson\u003e formExpectedGraduationYearPredicateFromPredicateString(String s)"},{"lineNumber":102,"author":{"gitID":"mhq199657"},"content":"            throws IllegalValueException {"},{"lineNumber":103,"author":{"gitID":"mhq199657"},"content":"        FilterRange\u003cExpectedGraduationYear\u003e filterRange;"},{"lineNumber":104,"author":{"gitID":"mhq199657"},"content":"        if (s.contains(\"-\")) { //It is a range"},{"lineNumber":105,"author":{"gitID":"mhq199657"},"content":"            String[] range \u003d s.split(\"-\");"},{"lineNumber":106,"author":{"gitID":"mhq199657"},"content":"            if (range.length !\u003d 2) {"},{"lineNumber":107,"author":{"gitID":"mhq199657"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));"},{"lineNumber":108,"author":{"gitID":"mhq199657"},"content":"            } else if (ExpectedGraduationYear.isValidExpectedGraduationYear(range[0].trim())"},{"lineNumber":109,"author":{"gitID":"mhq199657"},"content":"                    \u0026\u0026 ExpectedGraduationYear.isValidExpectedGraduationYear(range[1].trim())) {"},{"lineNumber":110,"author":{"gitID":"mhq199657"},"content":"                filterRange \u003d new FilterRange\u003cExpectedGraduationYear\u003e("},{"lineNumber":111,"author":{"gitID":"mhq199657"},"content":"                        new ExpectedGraduationYear(range[0].trim()), new ExpectedGraduationYear(range[1].trim()));"},{"lineNumber":112,"author":{"gitID":"mhq199657"},"content":"            } else {"},{"lineNumber":113,"author":{"gitID":"mhq199657"},"content":"                throw new IllegalValueException(ExpectedGraduationYear.MESSAGE_EXPECTED_GRADUATION_YEAR_CONSTRAINTS);"},{"lineNumber":114,"author":{"gitID":"mhq199657"},"content":"            }"},{"lineNumber":115,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":116,"author":{"gitID":"mhq199657"},"content":"        } else { //It is a value instead"},{"lineNumber":117,"author":{"gitID":"mhq199657"},"content":"            if (ExpectedGraduationYear.isValidExpectedGraduationYear(s.trim())) {"},{"lineNumber":118,"author":{"gitID":"mhq199657"},"content":"                filterRange \u003d new FilterRange\u003cExpectedGraduationYear\u003e(new ExpectedGraduationYear(s));"},{"lineNumber":119,"author":{"gitID":"mhq199657"},"content":"            } else {"},{"lineNumber":120,"author":{"gitID":"mhq199657"},"content":"                throw new IllegalValueException(ExpectedGraduationYear.MESSAGE_EXPECTED_GRADUATION_YEAR_CONSTRAINTS);"},{"lineNumber":121,"author":{"gitID":"mhq199657"},"content":"            }"},{"lineNumber":122,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":123,"author":{"gitID":"mhq199657"},"content":"        Predicate\u003cPerson\u003e predicate \u003d new ExpectedGraduationYearInKeywordsRangePredicate(filterRange);"},{"lineNumber":124,"author":{"gitID":"mhq199657"},"content":"        return predicate;"},{"lineNumber":125,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":126,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":127,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":128,"author":{"gitID":"mhq199657"},"content":"     * Parses a Optional of  predicateString to a Predicate used to filter Person"},{"lineNumber":129,"author":{"gitID":"mhq199657"},"content":"     * @param predicateString a predicate string read from user input"},{"lineNumber":130,"author":{"gitID":"mhq199657"},"content":"     * @return a Predicate for filter command"},{"lineNumber":131,"author":{"gitID":"mhq199657"},"content":"     * @throws IllegalValueException"},{"lineNumber":132,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":133,"author":{"gitID":"mhq199657"},"content":"    public static Predicate\u003cPerson\u003e parseRating(Optional\u003cString\u003e predicateString) throws IllegalValueException {"},{"lineNumber":134,"author":{"gitID":"mhq199657"},"content":"        requireNonNull(predicateString);"},{"lineNumber":135,"author":{"gitID":"mhq199657"},"content":"        if (predicateString.isPresent()) {"},{"lineNumber":136,"author":{"gitID":"mhq199657"},"content":"            return parseRating(predicateString.get());"},{"lineNumber":137,"author":{"gitID":"mhq199657"},"content":"        } else {"},{"lineNumber":138,"author":{"gitID":"mhq199657"},"content":"            return null;"},{"lineNumber":139,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":140,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":141,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":142,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":143,"author":{"gitID":"mhq199657"},"content":"     * Parses a predicateString to a Predicate used to filter Person"},{"lineNumber":144,"author":{"gitID":"mhq199657"},"content":"     * @param predicateString a predicate string read from user input"},{"lineNumber":145,"author":{"gitID":"mhq199657"},"content":"     * @return a Predicate for filter command"},{"lineNumber":146,"author":{"gitID":"mhq199657"},"content":"     * @throws IllegalValueException"},{"lineNumber":147,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":148,"author":{"gitID":"mhq199657"},"content":"    public static Predicate\u003cPerson\u003e parseRating(String predicateString)"},{"lineNumber":149,"author":{"gitID":"mhq199657"},"content":"            throws IllegalValueException {"},{"lineNumber":150,"author":{"gitID":"mhq199657"},"content":"        requireNonNull(predicateString);"},{"lineNumber":151,"author":{"gitID":"mhq199657"},"content":"        String[] predicateStrings \u003d predicateString.split(\",\");"},{"lineNumber":152,"author":{"gitID":"mhq199657"},"content":"        Arrays.stream(predicateStrings).map(String::trim).toArray(unused -\u003e predicateStrings);"},{"lineNumber":153,"author":{"gitID":"mhq199657"},"content":"        if (predicateStrings.length \u003d\u003d 0) {"},{"lineNumber":154,"author":{"gitID":"mhq199657"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));"},{"lineNumber":155,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":156,"author":{"gitID":"mhq199657"},"content":"        Predicate\u003cPerson\u003e predicate \u003d processRatingPredicateStrings(predicateStrings);"},{"lineNumber":157,"author":{"gitID":"mhq199657"},"content":"        return predicate;"},{"lineNumber":158,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":159,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":160,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":161,"author":{"gitID":"mhq199657"},"content":"     * Parses the string array of all single predicate strings to a predicate"},{"lineNumber":162,"author":{"gitID":"mhq199657"},"content":"     * @param predicateStrings array of predicateString"},{"lineNumber":163,"author":{"gitID":"mhq199657"},"content":"     * @return the predicate user demanded"},{"lineNumber":164,"author":{"gitID":"mhq199657"},"content":"     * @throws IllegalValueException"},{"lineNumber":165,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":166,"author":{"gitID":"mhq199657"},"content":"    private static Predicate\u003cPerson\u003e processRatingPredicateStrings(String[] predicateStrings)"},{"lineNumber":167,"author":{"gitID":"mhq199657"},"content":"            throws IllegalValueException {"},{"lineNumber":168,"author":{"gitID":"mhq199657"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e allPredicates \u003d new ArrayList\u003cPredicate\u003cPerson\u003e\u003e();"},{"lineNumber":169,"author":{"gitID":"mhq199657"},"content":"        for (String s: predicateStrings) {"},{"lineNumber":170,"author":{"gitID":"mhq199657"},"content":"            Predicate\u003cPerson\u003e predicate \u003d formRatingPredicateFromPredicateString(s);"},{"lineNumber":171,"author":{"gitID":"mhq199657"},"content":"            allPredicates.add(predicate);"},{"lineNumber":172,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":173,"author":{"gitID":"mhq199657"},"content":"        return combineAllPredicates(allPredicates);"},{"lineNumber":174,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":175,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":176,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":177,"author":{"gitID":"mhq199657"},"content":"     * Form a single predicate from a single predicate string"},{"lineNumber":178,"author":{"gitID":"mhq199657"},"content":"     * @param s a single predicate string"},{"lineNumber":179,"author":{"gitID":"mhq199657"},"content":"     * @return a single predicate"},{"lineNumber":180,"author":{"gitID":"mhq199657"},"content":"     * @throws IllegalValueException"},{"lineNumber":181,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":182,"author":{"gitID":"mhq199657"},"content":"    private static Predicate\u003cPerson\u003e formRatingPredicateFromPredicateString(String s)"},{"lineNumber":183,"author":{"gitID":"mhq199657"},"content":"            throws IllegalValueException {"},{"lineNumber":184,"author":{"gitID":"mhq199657"},"content":"        FilterRange\u003cRating\u003e filterRange;"},{"lineNumber":185,"author":{"gitID":"mhq199657"},"content":"        if (s.contains(\"-\")) { //It is a range"},{"lineNumber":186,"author":{"gitID":"mhq199657"},"content":"            String[] range \u003d s.split(\"-\");"},{"lineNumber":187,"author":{"gitID":"mhq199657"},"content":"            if (range.length !\u003d 2) {"},{"lineNumber":188,"author":{"gitID":"mhq199657"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));"},{"lineNumber":189,"author":{"gitID":"mhq199657"},"content":"            } else {"},{"lineNumber":190,"author":{"gitID":"mhq199657"},"content":"                double lowerRating \u003d Rating.DEFAULT_SCORE;"},{"lineNumber":191,"author":{"gitID":"mhq199657"},"content":"                double higherRating \u003d Rating.DEFAULT_SCORE;"},{"lineNumber":192,"author":{"gitID":"mhq199657"},"content":"                try {"},{"lineNumber":193,"author":{"gitID":"mhq199657"},"content":"                    lowerRating \u003d Double.valueOf(range[0].trim());"},{"lineNumber":194,"author":{"gitID":"mhq199657"},"content":"                    higherRating \u003d Double.valueOf(range[1].trim());"},{"lineNumber":195,"author":{"gitID":"mhq199657"},"content":"                } catch (NumberFormatException nfe) {"},{"lineNumber":196,"author":{"gitID":"mhq199657"},"content":"                    throw new IllegalValueException(Rating.MESSAGE_RATING_CONSTRAINTS);"},{"lineNumber":197,"author":{"gitID":"mhq199657"},"content":"                }"},{"lineNumber":198,"author":{"gitID":"mhq199657"},"content":"                if (Rating.isValidScore(lowerRating)"},{"lineNumber":199,"author":{"gitID":"mhq199657"},"content":"                        \u0026\u0026 Rating.isValidScore(higherRating)) {"},{"lineNumber":200,"author":{"gitID":"mhq199657"},"content":"                    filterRange \u003d new FilterRange\u003cRating\u003e("},{"lineNumber":201,"author":{"gitID":"mhq199657"},"content":"                            new Rating(lowerRating, lowerRating, lowerRating, lowerRating),"},{"lineNumber":202,"author":{"gitID":"mhq199657"},"content":"                            new Rating(higherRating, higherRating, higherRating, higherRating));"},{"lineNumber":203,"author":{"gitID":"mhq199657"},"content":"                } else {"},{"lineNumber":204,"author":{"gitID":"mhq199657"},"content":"                    throw new IllegalValueException(Rating.MESSAGE_RATING_CONSTRAINTS);"},{"lineNumber":205,"author":{"gitID":"mhq199657"},"content":"                }"},{"lineNumber":206,"author":{"gitID":"mhq199657"},"content":"            }"},{"lineNumber":207,"author":{"gitID":"mhq199657"},"content":"        } else { //It is a value instead"},{"lineNumber":208,"author":{"gitID":"mhq199657"},"content":"            double exactRating \u003d Rating.DEFAULT_SCORE;"},{"lineNumber":209,"author":{"gitID":"mhq199657"},"content":"            try {"},{"lineNumber":210,"author":{"gitID":"mhq199657"},"content":"                exactRating \u003d Double.valueOf(s.trim());"},{"lineNumber":211,"author":{"gitID":"mhq199657"},"content":"            } catch (NumberFormatException nfe) {"},{"lineNumber":212,"author":{"gitID":"mhq199657"},"content":"                throw new IllegalValueException(Rating.MESSAGE_RATING_CONSTRAINTS);"},{"lineNumber":213,"author":{"gitID":"mhq199657"},"content":"            }"},{"lineNumber":214,"author":{"gitID":"mhq199657"},"content":"            if (Rating.isValidScore(exactRating)) {"},{"lineNumber":215,"author":{"gitID":"mhq199657"},"content":"                filterRange \u003d new FilterRange\u003cRating\u003e(new Rating(exactRating, exactRating, exactRating, exactRating));"},{"lineNumber":216,"author":{"gitID":"mhq199657"},"content":"            } else {"},{"lineNumber":217,"author":{"gitID":"mhq199657"},"content":"                throw new IllegalValueException(Rating.MESSAGE_RATING_CONSTRAINTS);"},{"lineNumber":218,"author":{"gitID":"mhq199657"},"content":"            }"},{"lineNumber":219,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":220,"author":{"gitID":"mhq199657"},"content":"        Predicate\u003cPerson\u003e predicate \u003d new RatingInKeywordsRangePredicate(filterRange);"},{"lineNumber":221,"author":{"gitID":"mhq199657"},"content":"        return predicate;"},{"lineNumber":222,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":223,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":224,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":225,"author":{"gitID":"mhq199657"},"content":"     * Parses a Optional of predicateString to a Predicate used to filter Person"},{"lineNumber":226,"author":{"gitID":"mhq199657"},"content":"     * @param predicateString a predicate string read from user input"},{"lineNumber":227,"author":{"gitID":"mhq199657"},"content":"     * @return a Predicate for filter command"},{"lineNumber":228,"author":{"gitID":"mhq199657"},"content":"     * @throws IllegalValueException"},{"lineNumber":229,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":230,"author":{"gitID":"mhq199657"},"content":"    public static Predicate\u003cPerson\u003e parseGradePointAverage(Optional\u003cString\u003e predicateString)"},{"lineNumber":231,"author":{"gitID":"mhq199657"},"content":"            throws IllegalValueException {"},{"lineNumber":232,"author":{"gitID":"mhq199657"},"content":"        requireNonNull(predicateString);"},{"lineNumber":233,"author":{"gitID":"mhq199657"},"content":"        if (predicateString.isPresent()) {"},{"lineNumber":234,"author":{"gitID":"mhq199657"},"content":"            return parseGradePointAverage(predicateString.get());"},{"lineNumber":235,"author":{"gitID":"mhq199657"},"content":"        } else {"},{"lineNumber":236,"author":{"gitID":"mhq199657"},"content":"            return null;"},{"lineNumber":237,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":238,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":239,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":240,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":241,"author":{"gitID":"mhq199657"},"content":"     * Parses a predicateString to a Predicate used to filter Person"},{"lineNumber":242,"author":{"gitID":"mhq199657"},"content":"     * @param predicateString a predicate string read from user input"},{"lineNumber":243,"author":{"gitID":"mhq199657"},"content":"     * @return a Predicate for filter command"},{"lineNumber":244,"author":{"gitID":"mhq199657"},"content":"     * @throws IllegalValueException"},{"lineNumber":245,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":246,"author":{"gitID":"mhq199657"},"content":"    public static Predicate\u003cPerson\u003e parseGradePointAverage(String predicateString)"},{"lineNumber":247,"author":{"gitID":"mhq199657"},"content":"            throws IllegalValueException {"},{"lineNumber":248,"author":{"gitID":"mhq199657"},"content":"        requireNonNull(predicateString);"},{"lineNumber":249,"author":{"gitID":"mhq199657"},"content":"        String[] predicateStrings \u003d predicateString.split(\",\");"},{"lineNumber":250,"author":{"gitID":"mhq199657"},"content":"        Arrays.stream(predicateStrings).map(String::trim).toArray(unused -\u003e predicateStrings);"},{"lineNumber":251,"author":{"gitID":"mhq199657"},"content":"        if (predicateStrings.length \u003d\u003d 0) {"},{"lineNumber":252,"author":{"gitID":"mhq199657"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));"},{"lineNumber":253,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":254,"author":{"gitID":"mhq199657"},"content":"        Predicate\u003cPerson\u003e predicate \u003d processGradePointAveragePredicateStrings(predicateStrings);"},{"lineNumber":255,"author":{"gitID":"mhq199657"},"content":"        return predicate;"},{"lineNumber":256,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":257,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":258,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":259,"author":{"gitID":"mhq199657"},"content":"     * Parses the string array of all single predicate strings to a predicate"},{"lineNumber":260,"author":{"gitID":"mhq199657"},"content":"     * @param predicateStrings array of predicateString"},{"lineNumber":261,"author":{"gitID":"mhq199657"},"content":"     * @return the predicate user demanded"},{"lineNumber":262,"author":{"gitID":"mhq199657"},"content":"     * @throws IllegalValueException"},{"lineNumber":263,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":264,"author":{"gitID":"mhq199657"},"content":"    private static Predicate\u003cPerson\u003e processGradePointAveragePredicateStrings(String[] predicateStrings)"},{"lineNumber":265,"author":{"gitID":"mhq199657"},"content":"            throws IllegalValueException {"},{"lineNumber":266,"author":{"gitID":"mhq199657"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e allPredicates \u003d new ArrayList\u003cPredicate\u003cPerson\u003e\u003e();"},{"lineNumber":267,"author":{"gitID":"mhq199657"},"content":"        for (String s: predicateStrings) {"},{"lineNumber":268,"author":{"gitID":"mhq199657"},"content":"            Predicate\u003cPerson\u003e predicate \u003d formGradePointAveragePredicateFromPredicateString(s);"},{"lineNumber":269,"author":{"gitID":"mhq199657"},"content":"            allPredicates.add(predicate);"},{"lineNumber":270,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":271,"author":{"gitID":"mhq199657"},"content":"        return combineAllPredicates(allPredicates);"},{"lineNumber":272,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":273,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":274,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":275,"author":{"gitID":"mhq199657"},"content":"     * Form a single predicate from a single predicate string"},{"lineNumber":276,"author":{"gitID":"mhq199657"},"content":"     * @param s a single predicate string"},{"lineNumber":277,"author":{"gitID":"mhq199657"},"content":"     * @return a single predicate"},{"lineNumber":278,"author":{"gitID":"mhq199657"},"content":"     * @throws IllegalValueException"},{"lineNumber":279,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":280,"author":{"gitID":"mhq199657"},"content":"    private static Predicate\u003cPerson\u003e formGradePointAveragePredicateFromPredicateString(String s)"},{"lineNumber":281,"author":{"gitID":"mhq199657"},"content":"            throws IllegalValueException {"},{"lineNumber":282,"author":{"gitID":"mhq199657"},"content":"        FilterRange\u003cGradePointAverage\u003e filterRange;"},{"lineNumber":283,"author":{"gitID":"mhq199657"},"content":"        if (s.contains(\"-\")) { //It is a range"},{"lineNumber":284,"author":{"gitID":"mhq199657"},"content":"            String[] range \u003d s.split(\"-\");"},{"lineNumber":285,"author":{"gitID":"mhq199657"},"content":"            if (range.length !\u003d 2) {"},{"lineNumber":286,"author":{"gitID":"mhq199657"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));"},{"lineNumber":287,"author":{"gitID":"mhq199657"},"content":"            } else {"},{"lineNumber":288,"author":{"gitID":"mhq199657"},"content":"                try {"},{"lineNumber":289,"author":{"gitID":"mhq199657"},"content":"                    Double.valueOf(range[0].trim());"},{"lineNumber":290,"author":{"gitID":"mhq199657"},"content":"                    Double.valueOf(range[1].trim());"},{"lineNumber":291,"author":{"gitID":"mhq199657"},"content":"                } catch (NumberFormatException nfe) {"},{"lineNumber":292,"author":{"gitID":"mhq199657"},"content":"                    throw new IllegalValueException(GradePointAverage.MESSAGE_GRADE_POINT_AVERAGE_CONSTRAINTS);"},{"lineNumber":293,"author":{"gitID":"mhq199657"},"content":"                }"},{"lineNumber":294,"author":{"gitID":"mhq199657"},"content":"                if (GradePointAverage.isValidGradePointAverage(range[0].trim())"},{"lineNumber":295,"author":{"gitID":"mhq199657"},"content":"                        \u0026\u0026 GradePointAverage.isValidGradePointAverage(range[1].trim())) {"},{"lineNumber":296,"author":{"gitID":"mhq199657"},"content":"                    filterRange \u003d new FilterRange\u003cGradePointAverage\u003e("},{"lineNumber":297,"author":{"gitID":"mhq199657"},"content":"                            new GradePointAverage(range[0].trim()),"},{"lineNumber":298,"author":{"gitID":"mhq199657"},"content":"                            new GradePointAverage(range[1].trim()));"},{"lineNumber":299,"author":{"gitID":"mhq199657"},"content":"                } else {"},{"lineNumber":300,"author":{"gitID":"mhq199657"},"content":"                    throw new IllegalValueException(GradePointAverage.MESSAGE_GRADE_POINT_AVERAGE_CONSTRAINTS);"},{"lineNumber":301,"author":{"gitID":"mhq199657"},"content":"                }"},{"lineNumber":302,"author":{"gitID":"mhq199657"},"content":"            }"},{"lineNumber":303,"author":{"gitID":"mhq199657"},"content":"        } else { //It is a value instead"},{"lineNumber":304,"author":{"gitID":"mhq199657"},"content":"            try {"},{"lineNumber":305,"author":{"gitID":"mhq199657"},"content":"                Double.valueOf(s.trim());"},{"lineNumber":306,"author":{"gitID":"mhq199657"},"content":"            } catch (NumberFormatException nfe) {"},{"lineNumber":307,"author":{"gitID":"mhq199657"},"content":"                throw new IllegalValueException(GradePointAverage.MESSAGE_GRADE_POINT_AVERAGE_CONSTRAINTS);"},{"lineNumber":308,"author":{"gitID":"mhq199657"},"content":"            }"},{"lineNumber":309,"author":{"gitID":"mhq199657"},"content":"            if (GradePointAverage.isValidGradePointAverage(s.trim())) {"},{"lineNumber":310,"author":{"gitID":"mhq199657"},"content":"                filterRange \u003d new FilterRange\u003cGradePointAverage\u003e(new GradePointAverage(s.trim()));"},{"lineNumber":311,"author":{"gitID":"mhq199657"},"content":"            } else {"},{"lineNumber":312,"author":{"gitID":"mhq199657"},"content":"                throw new IllegalValueException(GradePointAverage.MESSAGE_GRADE_POINT_AVERAGE_CONSTRAINTS);"},{"lineNumber":313,"author":{"gitID":"mhq199657"},"content":"            }"},{"lineNumber":314,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":315,"author":{"gitID":"mhq199657"},"content":"        Predicate\u003cPerson\u003e predicate \u003d new GradePointAverageInKeywordsRangePredicate(filterRange);"},{"lineNumber":316,"author":{"gitID":"mhq199657"},"content":"        return predicate;"},{"lineNumber":317,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":318,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":319,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":320,"author":{"gitID":"mhq199657"},"content":"     * Parses a Optional of  predicateString to a Predicate used to filter Person"},{"lineNumber":321,"author":{"gitID":"mhq199657"},"content":"     * @param predicateString a predicate string read from user input"},{"lineNumber":322,"author":{"gitID":"mhq199657"},"content":"     * @return a Predicate for filter command"},{"lineNumber":323,"author":{"gitID":"mhq199657"},"content":"     * @throws IllegalValueException"},{"lineNumber":324,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":325,"author":{"gitID":"mhq199657"},"content":"    public static Predicate\u003cPerson\u003e parseInterviewDate(Optional\u003cString\u003e predicateString)"},{"lineNumber":326,"author":{"gitID":"mhq199657"},"content":"            throws IllegalValueException {"},{"lineNumber":327,"author":{"gitID":"mhq199657"},"content":"        requireNonNull(predicateString);"},{"lineNumber":328,"author":{"gitID":"mhq199657"},"content":"        if (predicateString.isPresent()) {"},{"lineNumber":329,"author":{"gitID":"mhq199657"},"content":"            return parseInterviewDate(predicateString.get());"},{"lineNumber":330,"author":{"gitID":"mhq199657"},"content":"        } else {"},{"lineNumber":331,"author":{"gitID":"mhq199657"},"content":"            return null;"},{"lineNumber":332,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":333,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":334,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":335,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":336,"author":{"gitID":"mhq199657"},"content":"     * Parses a predicateString to a Predicate used to filter Person"},{"lineNumber":337,"author":{"gitID":"mhq199657"},"content":"     * @param predicateString a predicate string read from user input"},{"lineNumber":338,"author":{"gitID":"mhq199657"},"content":"     * @return a Predicate for filter command"},{"lineNumber":339,"author":{"gitID":"mhq199657"},"content":"     * @throws IllegalValueException"},{"lineNumber":340,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":341,"author":{"gitID":"mhq199657"},"content":"    public static Predicate\u003cPerson\u003e parseInterviewDate(String predicateString)"},{"lineNumber":342,"author":{"gitID":"mhq199657"},"content":"            throws IllegalValueException {"},{"lineNumber":343,"author":{"gitID":"mhq199657"},"content":"        requireNonNull(predicateString);"},{"lineNumber":344,"author":{"gitID":"mhq199657"},"content":"        String[] predicateStrings \u003d predicateString.split(\",\");"},{"lineNumber":345,"author":{"gitID":"mhq199657"},"content":"        Arrays.stream(predicateStrings).map(String::trim).toArray(unused -\u003e predicateStrings);"},{"lineNumber":346,"author":{"gitID":"mhq199657"},"content":"        if (predicateStrings.length \u003d\u003d 0) {"},{"lineNumber":347,"author":{"gitID":"mhq199657"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));"},{"lineNumber":348,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":349,"author":{"gitID":"mhq199657"},"content":"        Predicate\u003cPerson\u003e predicate \u003d processInterviewDatePredicateStrings(predicateStrings);"},{"lineNumber":350,"author":{"gitID":"mhq199657"},"content":"        return predicate;"},{"lineNumber":351,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":352,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":353,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":354,"author":{"gitID":"mhq199657"},"content":"     * Parses the string array of all single predicate strings to a predicate"},{"lineNumber":355,"author":{"gitID":"mhq199657"},"content":"     * @param predicateStrings array of predicateString"},{"lineNumber":356,"author":{"gitID":"mhq199657"},"content":"     * @return the predicate user demanded"},{"lineNumber":357,"author":{"gitID":"mhq199657"},"content":"     * @throws IllegalValueException"},{"lineNumber":358,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":359,"author":{"gitID":"mhq199657"},"content":"    private static Predicate\u003cPerson\u003e processInterviewDatePredicateStrings(String[] predicateStrings)"},{"lineNumber":360,"author":{"gitID":"mhq199657"},"content":"            throws IllegalValueException {"},{"lineNumber":361,"author":{"gitID":"mhq199657"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e allPredicates \u003d new ArrayList\u003cPredicate\u003cPerson\u003e\u003e();"},{"lineNumber":362,"author":{"gitID":"mhq199657"},"content":"        for (String s: predicateStrings) {"},{"lineNumber":363,"author":{"gitID":"mhq199657"},"content":"            Predicate\u003cPerson\u003e predicate \u003d formInterviewDatePredicateFromPredicateString(s);"},{"lineNumber":364,"author":{"gitID":"mhq199657"},"content":"            allPredicates.add(predicate);"},{"lineNumber":365,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":366,"author":{"gitID":"mhq199657"},"content":"        return combineAllPredicates(allPredicates);"},{"lineNumber":367,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":368,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":369,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":370,"author":{"gitID":"mhq199657"},"content":"     * Form a single predicate from a single predicate string"},{"lineNumber":371,"author":{"gitID":"mhq199657"},"content":"     * @param s a single predicate string"},{"lineNumber":372,"author":{"gitID":"mhq199657"},"content":"     * @return a single predicate"},{"lineNumber":373,"author":{"gitID":"mhq199657"},"content":"     * @throws IllegalValueException"},{"lineNumber":374,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":375,"author":{"gitID":"mhq199657"},"content":"    private static Predicate\u003cPerson\u003e formInterviewDatePredicateFromPredicateString(String s)"},{"lineNumber":376,"author":{"gitID":"mhq199657"},"content":"            throws IllegalValueException {"},{"lineNumber":377,"author":{"gitID":"mhq199657"},"content":"        FilterRange\u003cInterviewDate\u003e filterRange;"},{"lineNumber":378,"author":{"gitID":"mhq199657"},"content":"        if (s.contains(\"-\")) { //It is a range"},{"lineNumber":379,"author":{"gitID":"mhq199657"},"content":"            String[] range \u003d s.split(\"-\");"},{"lineNumber":380,"author":{"gitID":"mhq199657"},"content":"            if (range.length !\u003d 2) {"},{"lineNumber":381,"author":{"gitID":"mhq199657"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));"},{"lineNumber":382,"author":{"gitID":"mhq199657"},"content":"            } else if (InterviewDateUtil.isValidInterviewDate(range[0].trim())"},{"lineNumber":383,"author":{"gitID":"mhq199657"},"content":"                    \u0026\u0026 InterviewDateUtil.isValidInterviewDate(range[1].trim())) {"},{"lineNumber":384,"author":{"gitID":"mhq199657"},"content":"                try {"},{"lineNumber":385,"author":{"gitID":"mhq199657"},"content":"                    filterRange \u003d new FilterRange\u003cInterviewDate\u003e("},{"lineNumber":386,"author":{"gitID":"mhq199657"},"content":"                            new InterviewDate(InterviewDateUtil.formLowerInterviewDateTime(range[0].trim())),"},{"lineNumber":387,"author":{"gitID":"mhq199657"},"content":"                            new InterviewDate(InterviewDateUtil.formHigherInterviewDateTime(range[1].trim())));"},{"lineNumber":388,"author":{"gitID":"mhq199657"},"content":"                } catch (DateTimeParseException dtpe) {"},{"lineNumber":389,"author":{"gitID":"mhq199657"},"content":"                    throw new ParseException(InterviewDateUtil.MESSAGE_INTERVIEW_DATE_CONSTRAINT);"},{"lineNumber":390,"author":{"gitID":"mhq199657"},"content":"                }"},{"lineNumber":391,"author":{"gitID":"mhq199657"},"content":"            } else {"},{"lineNumber":392,"author":{"gitID":"mhq199657"},"content":"                throw new IllegalValueException(InterviewDateUtil.MESSAGE_INTERVIEW_DATE_CONSTRAINT);"},{"lineNumber":393,"author":{"gitID":"mhq199657"},"content":"            }"},{"lineNumber":394,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":395,"author":{"gitID":"mhq199657"},"content":"        } else { //It is a value instead"},{"lineNumber":396,"author":{"gitID":"mhq199657"},"content":"            if (InterviewDateUtil.isValidInterviewDate(s.trim())) {"},{"lineNumber":397,"author":{"gitID":"mhq199657"},"content":"                try {"},{"lineNumber":398,"author":{"gitID":"mhq199657"},"content":"                    filterRange \u003d new FilterRange\u003cInterviewDate\u003e("},{"lineNumber":399,"author":{"gitID":"mhq199657"},"content":"                            new InterviewDate(InterviewDateUtil.formLowerInterviewDateTime(s.trim())),"},{"lineNumber":400,"author":{"gitID":"mhq199657"},"content":"                            new InterviewDate(InterviewDateUtil.formHigherInterviewDateTime(s.trim())));"},{"lineNumber":401,"author":{"gitID":"mhq199657"},"content":"                } catch (DateTimeParseException dtpe) {"},{"lineNumber":402,"author":{"gitID":"mhq199657"},"content":"                    throw new ParseException(InterviewDateUtil.MESSAGE_INTERVIEW_DATE_CONSTRAINT);"},{"lineNumber":403,"author":{"gitID":"mhq199657"},"content":"                }"},{"lineNumber":404,"author":{"gitID":"mhq199657"},"content":"            } else {"},{"lineNumber":405,"author":{"gitID":"mhq199657"},"content":"                throw new IllegalValueException(InterviewDateUtil.MESSAGE_INTERVIEW_DATE_CONSTRAINT);"},{"lineNumber":406,"author":{"gitID":"mhq199657"},"content":"            }"},{"lineNumber":407,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":408,"author":{"gitID":"mhq199657"},"content":"        Predicate\u003cPerson\u003e predicate \u003d new InterviewDateInKeywordsRangePredicate(filterRange);"},{"lineNumber":409,"author":{"gitID":"mhq199657"},"content":"        return predicate;"},{"lineNumber":410,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":411,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":412,"author":{"gitID":"mhq199657"},"content":"}"}],"authorContributionMap":{"mhq199657":402,"-":10}},{"path":"src/main/java/seedu/address/logic/commands/RatingDeleteCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;"},{"lineNumber":5,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":6,"author":{"gitID":"kexiaowen"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitID":"kexiaowen"},"content":"import java.util.Objects;"},{"lineNumber":8,"author":{"gitID":"kexiaowen"},"content":"import java.util.Set;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Messages;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":13,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.Address;"},{"lineNumber":14,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.model.person.Comment;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Email;"},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.ExpectedGraduationYear;"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.person.GradePointAverage;"},{"lineNumber":18,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.model.person.InterviewDate;"},{"lineNumber":19,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.JobApplied;"},{"lineNumber":20,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.Major;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Name;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Phone;"},{"lineNumber":24,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.model.person.ProfileImage;"},{"lineNumber":25,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.Rating;"},{"lineNumber":26,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Resume;"},{"lineNumber":27,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Status;"},{"lineNumber":28,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.University;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;"},{"lineNumber":30,"author":{"gitID":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;"},{"lineNumber":31,"author":{"gitID":"-"},"content":"import seedu.address.model.tag.Tag;"},{"lineNumber":32,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":33,"author":{"gitID":"kexiaowen"},"content":"//@@author kexiaowen"},{"lineNumber":34,"author":{"gitID":"kexiaowen"},"content":"/**"},{"lineNumber":35,"author":{"gitID":"kexiaowen"},"content":" * Deletes the rating of a person identified using it\u0027s last displayed index from HR+."},{"lineNumber":36,"author":{"gitID":"kexiaowen"},"content":" */"},{"lineNumber":37,"author":{"gitID":"kexiaowen"},"content":"public class RatingDeleteCommand extends UndoableCommand {"},{"lineNumber":38,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":39,"author":{"gitID":"kexiaowen"},"content":"    public static final String COMMAND_WORD \u003d \"rating-delete\";"},{"lineNumber":40,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":41,"author":{"gitID":"kexiaowen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"},{"lineNumber":42,"author":{"gitID":"kexiaowen"},"content":"            + \": Deletes the rating of the person identified by the index number used in the last person listing.\\n\""},{"lineNumber":43,"author":{"gitID":"kexiaowen"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\""},{"lineNumber":44,"author":{"gitID":"kexiaowen"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";"},{"lineNumber":45,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":46,"author":{"gitID":"kexiaowen"},"content":"    public static final String MESSAGE_DELETE_RATING_SUCCESS \u003d \"Deleted rating of person named %1$s\";"},{"lineNumber":47,"author":{"gitID":"kexiaowen"},"content":"    public static final String MESSAGE_PERSON_NOT_RATED \u003d \"You have not rated %1$s.\";"},{"lineNumber":48,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":49,"author":{"gitID":"kexiaowen"},"content":"    private final Index targetIndex;"},{"lineNumber":50,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":51,"author":{"gitID":"kexiaowen"},"content":"    private Person targetPerson;"},{"lineNumber":52,"author":{"gitID":"kexiaowen"},"content":"    private Person editedPerson;"},{"lineNumber":53,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":54,"author":{"gitID":"kexiaowen"},"content":"    public RatingDeleteCommand(Index targetIndex) {"},{"lineNumber":55,"author":{"gitID":"kexiaowen"},"content":"        this.targetIndex \u003d targetIndex;"},{"lineNumber":56,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":58,"author":{"gitID":"kexiaowen"},"content":"    @Override"},{"lineNumber":59,"author":{"gitID":"kexiaowen"},"content":"    public CommandResult executeUndoableCommand() {"},{"lineNumber":60,"author":{"gitID":"kexiaowen"},"content":"        requireNonNull(targetPerson);"},{"lineNumber":61,"author":{"gitID":"kexiaowen"},"content":"        requireNonNull(editedPerson);"},{"lineNumber":62,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":63,"author":{"gitID":"kexiaowen"},"content":"        try {"},{"lineNumber":64,"author":{"gitID":"kexiaowen"},"content":"            model.updatePerson(targetPerson, editedPerson);"},{"lineNumber":65,"author":{"gitID":"kexiaowen"},"content":"        } catch (DuplicatePersonException dpe) {"},{"lineNumber":66,"author":{"gitID":"kexiaowen"},"content":"            throw new AssertionError(\"Deleting a person\u0027s rating should not result in a duplicate\");"},{"lineNumber":67,"author":{"gitID":"kexiaowen"},"content":"        } catch (PersonNotFoundException pnfe) {"},{"lineNumber":68,"author":{"gitID":"kexiaowen"},"content":"            throw new AssertionError(\"The target person cannot be missing\");"},{"lineNumber":69,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":70,"author":{"gitID":"kexiaowen"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);"},{"lineNumber":71,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":72,"author":{"gitID":"kexiaowen"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_RATING_SUCCESS, targetPerson.getName()));"},{"lineNumber":73,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":74,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":75,"author":{"gitID":"kexiaowen"},"content":"    @Override"},{"lineNumber":76,"author":{"gitID":"kexiaowen"},"content":"    protected void preprocessUndoableCommand() throws CommandException {"},{"lineNumber":77,"author":{"gitID":"kexiaowen"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();"},{"lineNumber":78,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":79,"author":{"gitID":"kexiaowen"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {"},{"lineNumber":80,"author":{"gitID":"kexiaowen"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"},{"lineNumber":81,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":82,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":83,"author":{"gitID":"kexiaowen"},"content":"        targetPerson \u003d lastShownList.get(targetIndex.getZeroBased());"},{"lineNumber":84,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":85,"author":{"gitID":"kexiaowen"},"content":"        if (targetPerson.getRating().getOverallScore() \u003d\u003d Rating.DEFAULT_SCORE) {"},{"lineNumber":86,"author":{"gitID":"kexiaowen"},"content":"            throw new CommandException(String.format(MESSAGE_PERSON_NOT_RATED, targetPerson.getName()));"},{"lineNumber":87,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":88,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":89,"author":{"gitID":"kexiaowen"},"content":"        editedPerson \u003d createEditedPerson(targetPerson);"},{"lineNumber":90,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":91,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":92,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":93,"author":{"gitID":"kexiaowen"},"content":"     * Creates and returns a {@code Person} with the details of {@code targetPerson}"},{"lineNumber":94,"author":{"gitID":"kexiaowen"},"content":"     * with rating deleted."},{"lineNumber":95,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":96,"author":{"gitID":"kexiaowen"},"content":"    private static Person createEditedPerson(Person targetPerson) {"},{"lineNumber":97,"author":{"gitID":"kexiaowen"},"content":"        assert targetPerson !\u003d null;"},{"lineNumber":98,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":99,"author":{"gitID":"kexiaowen"},"content":"        Name name \u003d targetPerson.getName();"},{"lineNumber":100,"author":{"gitID":"kexiaowen"},"content":"        Phone phone \u003d targetPerson.getPhone();"},{"lineNumber":101,"author":{"gitID":"kexiaowen"},"content":"        Email email \u003d targetPerson.getEmail();"},{"lineNumber":102,"author":{"gitID":"kexiaowen"},"content":"        Address address \u003d targetPerson.getAddress();"},{"lineNumber":103,"author":{"gitID":"kexiaowen"},"content":"        University university \u003d targetPerson.getUniversity();"},{"lineNumber":104,"author":{"gitID":"kexiaowen"},"content":"        ExpectedGraduationYear expectedGraduationYear \u003d targetPerson.getExpectedGraduationYear();"},{"lineNumber":105,"author":{"gitID":"kexiaowen"},"content":"        Major major \u003d targetPerson.getMajor();"},{"lineNumber":106,"author":{"gitID":"kexiaowen"},"content":"        GradePointAverage gradePointAverage \u003d targetPerson.getGradePointAverage();"},{"lineNumber":107,"author":{"gitID":"kexiaowen"},"content":"        JobApplied jobApplied \u003d targetPerson.getJobApplied();"},{"lineNumber":108,"author":{"gitID":"kexiaowen"},"content":"        Rating defaultRating \u003d new Rating(Rating.DEFAULT_SCORE, Rating.DEFAULT_SCORE,"},{"lineNumber":109,"author":{"gitID":"kexiaowen"},"content":"                Rating.DEFAULT_SCORE, Rating.DEFAULT_SCORE);"},{"lineNumber":110,"author":{"gitID":"kexiaowen"},"content":"        Resume resume \u003d targetPerson.getResume();"},{"lineNumber":111,"author":{"gitID":"kexiaowen"},"content":"        ProfileImage profileImage \u003d targetPerson.getProfileImage();"},{"lineNumber":112,"author":{"gitID":"kexiaowen"},"content":"        Comment comment \u003d targetPerson.getComment();"},{"lineNumber":113,"author":{"gitID":"kexiaowen"},"content":"        InterviewDate interviewDate \u003d targetPerson.getInterviewDate();"},{"lineNumber":114,"author":{"gitID":"kexiaowen"},"content":"        Status status \u003d targetPerson.getStatus();"},{"lineNumber":115,"author":{"gitID":"kexiaowen"},"content":"        Set\u003cTag\u003e tags \u003d targetPerson.getTags();"},{"lineNumber":116,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":117,"author":{"gitID":"kexiaowen"},"content":"        return new Person(name, phone, email, address, university,"},{"lineNumber":118,"author":{"gitID":"kexiaowen"},"content":"                expectedGraduationYear, major, gradePointAverage, jobApplied,"},{"lineNumber":119,"author":{"gitID":"kexiaowen"},"content":"                defaultRating, resume, profileImage, comment, interviewDate, status, tags);"},{"lineNumber":120,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":121,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":122,"author":{"gitID":"kexiaowen"},"content":"    @Override"},{"lineNumber":123,"author":{"gitID":"kexiaowen"},"content":"    public boolean equals(Object other) {"},{"lineNumber":124,"author":{"gitID":"kexiaowen"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":125,"author":{"gitID":"kexiaowen"},"content":"                || (other instanceof RatingDeleteCommand // instanceof handles nulls"},{"lineNumber":126,"author":{"gitID":"kexiaowen"},"content":"                \u0026\u0026 this.targetIndex.equals(((RatingDeleteCommand) other).targetIndex) // state check"},{"lineNumber":127,"author":{"gitID":"kexiaowen"},"content":"                \u0026\u0026 Objects.equals(this.targetPerson, ((RatingDeleteCommand) other).targetPerson));"},{"lineNumber":128,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":129,"author":{"gitID":"kexiaowen"},"content":"}"}],"authorContributionMap":{"kexiaowen":107,"mhq199657":3,"-":15,"Ang-YC":3,"tanhengyeow":1}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;"},{"lineNumber":5,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMENT;"},{"lineNumber":6,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;"},{"lineNumber":7,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXPECTED_GRADUATION_YEAR;"},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GRADE_POINT_AVERAGE;"},{"lineNumber":9,"author":{"gitID":"Ang-YC"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IMAGE;"},{"lineNumber":10,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB_APPLIED;"},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MAJOR;"},{"lineNumber":12,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"},{"lineNumber":13,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;"},{"lineNumber":14,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RESUME;"},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"},{"lineNumber":16,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNIVERSITY;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import java.util.HashSet;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import java.util.Set;"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Messages;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.CollectionUtil;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":30,"author":{"gitID":"mhq199657"},"content":"import seedu.address.logic.parser.ProfileImageUtil;"},{"lineNumber":31,"author":{"gitID":"mhq199657"},"content":"import seedu.address.logic.parser.ResumeUtil;"},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Address;"},{"lineNumber":33,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.model.person.Comment;"},{"lineNumber":34,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Email;"},{"lineNumber":35,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.ExpectedGraduationYear;"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.person.GradePointAverage;"},{"lineNumber":37,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.model.person.InterviewDate;"},{"lineNumber":38,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.JobApplied;"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.person.Major;"},{"lineNumber":40,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Name;"},{"lineNumber":41,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":42,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Phone;"},{"lineNumber":43,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.model.person.ProfileImage;"},{"lineNumber":44,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.Rating;"},{"lineNumber":45,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Resume;"},{"lineNumber":46,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Status;"},{"lineNumber":47,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.University;"},{"lineNumber":48,"author":{"gitID":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;"},{"lineNumber":49,"author":{"gitID":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;"},{"lineNumber":50,"author":{"gitID":"-"},"content":"import seedu.address.model.tag.Tag;"},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":53,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":54,"author":{"gitID":"-"},"content":" * Edits the details of an existing person in the address book."},{"lineNumber":55,"author":{"gitID":"-"},"content":" */"},{"lineNumber":56,"author":{"gitID":"-"},"content":"public class EditCommand extends UndoableCommand {"},{"lineNumber":57,"author":{"gitID":"-"},"content":""},{"lineNumber":58,"author":{"gitID":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";"},{"lineNumber":59,"author":{"gitID":"-"},"content":""},{"lineNumber":60,"author":{"gitID":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \""},{"lineNumber":61,"author":{"gitID":"-"},"content":"            + \"by the index number used in the last person listing. \""},{"lineNumber":62,"author":{"gitID":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\""},{"lineNumber":63,"author":{"gitID":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \""},{"lineNumber":64,"author":{"gitID":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \""},{"lineNumber":65,"author":{"gitID":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \""},{"lineNumber":66,"author":{"gitID":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \""},{"lineNumber":67,"author":{"gitID":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \""},{"lineNumber":68,"author":{"gitID":"kexiaowen"},"content":"            + \"[\" + PREFIX_UNIVERSITY + \"UNIVERSITY] \""},{"lineNumber":69,"author":{"gitID":"mhq199657"},"content":"            + \"[\" + PREFIX_EXPECTED_GRADUATION_YEAR + \"EXPECTED GRADUATION YEAR] \""},{"lineNumber":70,"author":{"gitID":"tanhengyeow"},"content":"            + \"[\" + PREFIX_MAJOR + \"MAJOR] \""},{"lineNumber":71,"author":{"gitID":"tanhengyeow"},"content":"            + \"[\" + PREFIX_GRADE_POINT_AVERAGE + \"GRADE POINT AVERAGE] \""},{"lineNumber":72,"author":{"gitID":"kexiaowen"},"content":"            + \"[\" + PREFIX_JOB_APPLIED + \"JOB APPLIED] \""},{"lineNumber":73,"author":{"gitID":"mhq199657"},"content":"            + \"[\" + PREFIX_RESUME + \"RESUME] \""},{"lineNumber":74,"author":{"gitID":"Ang-YC"},"content":"            + \"[\" + PREFIX_IMAGE + \"IMAGE] \""},{"lineNumber":75,"author":{"gitID":"Ang-YC"},"content":"            + \"[\" + PREFIX_COMMENT + \"COMMENT] \""},{"lineNumber":76,"author":{"gitID":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\""},{"lineNumber":77,"author":{"gitID":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \""},{"lineNumber":78,"author":{"gitID":"-"},"content":"            + PREFIX_PHONE + \"91234567 \""},{"lineNumber":79,"author":{"gitID":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";"},{"lineNumber":80,"author":{"gitID":"-"},"content":""},{"lineNumber":81,"author":{"gitID":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";"},{"lineNumber":82,"author":{"gitID":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";"},{"lineNumber":83,"author":{"gitID":"Ang-YC"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in HR+.\";"},{"lineNumber":84,"author":{"gitID":"-"},"content":""},{"lineNumber":85,"author":{"gitID":"-"},"content":"    private final Index index;"},{"lineNumber":86,"author":{"gitID":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;"},{"lineNumber":87,"author":{"gitID":"-"},"content":""},{"lineNumber":88,"author":{"gitID":"-"},"content":"    private Person personToEdit;"},{"lineNumber":89,"author":{"gitID":"-"},"content":"    private Person editedPerson;"},{"lineNumber":90,"author":{"gitID":"-"},"content":""},{"lineNumber":91,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":92,"author":{"gitID":"-"},"content":"     * @param index of the person in the filtered person list to edit"},{"lineNumber":93,"author":{"gitID":"-"},"content":"     * @param editPersonDescriptor details to edit the person with"},{"lineNumber":94,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":95,"author":{"gitID":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {"},{"lineNumber":96,"author":{"gitID":"-"},"content":"        requireNonNull(index);"},{"lineNumber":97,"author":{"gitID":"-"},"content":"        requireNonNull(editPersonDescriptor);"},{"lineNumber":98,"author":{"gitID":"-"},"content":""},{"lineNumber":99,"author":{"gitID":"-"},"content":"        this.index \u003d index;"},{"lineNumber":100,"author":{"gitID":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);"},{"lineNumber":101,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":102,"author":{"gitID":"-"},"content":""},{"lineNumber":103,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":104,"author":{"gitID":"-"},"content":"    public CommandResult executeUndoableCommand() throws CommandException {"},{"lineNumber":105,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":106,"author":{"gitID":"mhq199657"},"content":"            /*"},{"lineNumber":107,"author":{"gitID":"mhq199657"},"content":"            if(editedPerson.getResume().value \u003d\u003d null) {"},{"lineNumber":108,"author":{"gitID":"mhq199657"},"content":"                if(personToEdit.getResume().value !\u003d null) {"},{"lineNumber":109,"author":{"gitID":"mhq199657"},"content":"                    ResumeUtil.cleanUpDataFolder(personToEdit.getResume());"},{"lineNumber":110,"author":{"gitID":"mhq199657"},"content":"                }"},{"lineNumber":111,"author":{"gitID":"mhq199657"},"content":"            }else {"},{"lineNumber":112,"author":{"gitID":"mhq199657"},"content":"                if (!editedPerson.getResume().value.equals(personToEdit.getResume().value)) {"},{"lineNumber":113,"author":{"gitID":"mhq199657"},"content":"                    ResumeUtil.cleanUpDataFolder(personToEdit.getResume());"},{"lineNumber":114,"author":{"gitID":"mhq199657"},"content":"                }"},{"lineNumber":115,"author":{"gitID":"mhq199657"},"content":"            }"},{"lineNumber":116,"author":{"gitID":"mhq199657"},"content":"            */"},{"lineNumber":117,"author":{"gitID":"-"},"content":"            model.updatePerson(personToEdit, editedPerson);"},{"lineNumber":118,"author":{"gitID":"-"},"content":"        } catch (DuplicatePersonException dpe) {"},{"lineNumber":119,"author":{"gitID":"mhq199657"},"content":"            ResumeUtil.cleanUpDataFolder(editedPerson.getResume());"},{"lineNumber":120,"author":{"gitID":"mhq199657"},"content":"            ProfileImageUtil.cleanUpDataFolder(editedPerson.getProfileImage());"},{"lineNumber":121,"author":{"gitID":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);"},{"lineNumber":122,"author":{"gitID":"-"},"content":"        } catch (PersonNotFoundException pnfe) {"},{"lineNumber":123,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"The target person cannot be missing\");"},{"lineNumber":124,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":125,"author":{"gitID":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);"},{"lineNumber":126,"author":{"gitID":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));"},{"lineNumber":127,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":128,"author":{"gitID":"-"},"content":""},{"lineNumber":129,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":130,"author":{"gitID":"-"},"content":"    protected void preprocessUndoableCommand() throws CommandException {"},{"lineNumber":131,"author":{"gitID":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();"},{"lineNumber":132,"author":{"gitID":"-"},"content":""},{"lineNumber":133,"author":{"gitID":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {"},{"lineNumber":134,"author":{"gitID":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"},{"lineNumber":135,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":136,"author":{"gitID":"-"},"content":""},{"lineNumber":137,"author":{"gitID":"-"},"content":"        personToEdit \u003d lastShownList.get(index.getZeroBased());"},{"lineNumber":138,"author":{"gitID":"-"},"content":"        editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);"},{"lineNumber":139,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":140,"author":{"gitID":"-"},"content":""},{"lineNumber":141,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":142,"author":{"gitID":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}"},{"lineNumber":143,"author":{"gitID":"-"},"content":"     * edited with {@code editPersonDescriptor}."},{"lineNumber":144,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":145,"author":{"gitID":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {"},{"lineNumber":146,"author":{"gitID":"-"},"content":"        assert personToEdit !\u003d null;"},{"lineNumber":147,"author":{"gitID":"-"},"content":""},{"lineNumber":148,"author":{"gitID":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());"},{"lineNumber":149,"author":{"gitID":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());"},{"lineNumber":150,"author":{"gitID":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());"},{"lineNumber":151,"author":{"gitID":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());"},{"lineNumber":152,"author":{"gitID":"kexiaowen"},"content":"        University updatedUniversity \u003d editPersonDescriptor.getUniversity().orElse(personToEdit.getUniversity());"},{"lineNumber":153,"author":{"gitID":"mhq199657"},"content":"        ExpectedGraduationYear updatedExpectedGraduationYear \u003d editPersonDescriptor.getExpectedGraduationYear()"},{"lineNumber":154,"author":{"gitID":"mhq199657"},"content":"                .orElse(personToEdit.getExpectedGraduationYear());"},{"lineNumber":155,"author":{"gitID":"tanhengyeow"},"content":"        Major updatedMajor \u003d editPersonDescriptor.getMajor().orElse(personToEdit.getMajor());"},{"lineNumber":156,"author":{"gitID":"tanhengyeow"},"content":"        GradePointAverage updatedGradePointAverage \u003d editPersonDescriptor.getGradePointAverage()"},{"lineNumber":157,"author":{"gitID":"tanhengyeow"},"content":"                .orElse(personToEdit.getGradePointAverage());"},{"lineNumber":158,"author":{"gitID":"kexiaowen"},"content":"        JobApplied updatedJobApplied \u003d editPersonDescriptor.getJobApplied().orElse(personToEdit.getJobApplied());"},{"lineNumber":159,"author":{"gitID":"mhq199657"},"content":"        Resume updatedResume \u003d editPersonDescriptor.getResume().orElse(personToEdit.getResume());"},{"lineNumber":160,"author":{"gitID":"Ang-YC"},"content":"        ProfileImage updatedProfileImage \u003d editPersonDescriptor.getProfileImage()"},{"lineNumber":161,"author":{"gitID":"Ang-YC"},"content":"                .orElse(personToEdit.getProfileImage());"},{"lineNumber":162,"author":{"gitID":"Ang-YC"},"content":"        Comment updatedComment \u003d editPersonDescriptor.getComment().orElse(personToEdit.getComment());"},{"lineNumber":163,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":164,"author":{"gitID":"kexiaowen"},"content":"        // Doesn\u0027t allow editing of rating"},{"lineNumber":165,"author":{"gitID":"kexiaowen"},"content":"        Rating rating \u003d personToEdit.getRating();"},{"lineNumber":166,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":167,"author":{"gitID":"Ang-YC"},"content":"        // Doesn\u0027t allow editing of interview date"},{"lineNumber":168,"author":{"gitID":"Ang-YC"},"content":"        InterviewDate interviewDate \u003d personToEdit.getInterviewDate();"},{"lineNumber":169,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":170,"author":{"gitID":"mhq199657"},"content":"        // Doesn\u0027t allow editing of status"},{"lineNumber":171,"author":{"gitID":"mhq199657"},"content":"        Status status \u003d personToEdit.getStatus();"},{"lineNumber":172,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":173,"author":{"gitID":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());"},{"lineNumber":174,"author":{"gitID":"-"},"content":""},{"lineNumber":175,"author":{"gitID":"kexiaowen"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedUniversity,"},{"lineNumber":176,"author":{"gitID":"kexiaowen"},"content":"                updatedExpectedGraduationYear, updatedMajor, updatedGradePointAverage, updatedJobApplied,"},{"lineNumber":177,"author":{"gitID":"kexiaowen"},"content":"                rating, updatedResume, updatedProfileImage, updatedComment, interviewDate, status, updatedTags);"},{"lineNumber":178,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":179,"author":{"gitID":"-"},"content":""},{"lineNumber":180,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":181,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":182,"author":{"gitID":"-"},"content":"        // short circuit if same object"},{"lineNumber":183,"author":{"gitID":"-"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":184,"author":{"gitID":"-"},"content":"            return true;"},{"lineNumber":185,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":186,"author":{"gitID":"-"},"content":""},{"lineNumber":187,"author":{"gitID":"-"},"content":"        // instanceof handles nulls"},{"lineNumber":188,"author":{"gitID":"-"},"content":"        if (!(other instanceof EditCommand)) {"},{"lineNumber":189,"author":{"gitID":"-"},"content":"            return false;"},{"lineNumber":190,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":191,"author":{"gitID":"-"},"content":""},{"lineNumber":192,"author":{"gitID":"-"},"content":"        // state check"},{"lineNumber":193,"author":{"gitID":"-"},"content":"        EditCommand e \u003d (EditCommand) other;"},{"lineNumber":194,"author":{"gitID":"-"},"content":"        return index.equals(e.index)"},{"lineNumber":195,"author":{"gitID":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor)"},{"lineNumber":196,"author":{"gitID":"-"},"content":"                \u0026\u0026 Objects.equals(personToEdit, e.personToEdit);"},{"lineNumber":197,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":198,"author":{"gitID":"-"},"content":""},{"lineNumber":199,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":200,"author":{"gitID":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the"},{"lineNumber":201,"author":{"gitID":"-"},"content":"     * corresponding field value of the person."},{"lineNumber":202,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":203,"author":{"gitID":"-"},"content":"    public static class EditPersonDescriptor {"},{"lineNumber":204,"author":{"gitID":"-"},"content":"        private Name name;"},{"lineNumber":205,"author":{"gitID":"-"},"content":"        private Phone phone;"},{"lineNumber":206,"author":{"gitID":"-"},"content":"        private Email email;"},{"lineNumber":207,"author":{"gitID":"-"},"content":"        private Address address;"},{"lineNumber":208,"author":{"gitID":"kexiaowen"},"content":"        private University university;"},{"lineNumber":209,"author":{"gitID":"mhq199657"},"content":"        private ExpectedGraduationYear expectedGraduationYear;"},{"lineNumber":210,"author":{"gitID":"tanhengyeow"},"content":"        private Major major;"},{"lineNumber":211,"author":{"gitID":"tanhengyeow"},"content":"        private GradePointAverage gradePointAverage;"},{"lineNumber":212,"author":{"gitID":"kexiaowen"},"content":"        private JobApplied jobApplied;"},{"lineNumber":213,"author":{"gitID":"mhq199657"},"content":"        private Resume resume;"},{"lineNumber":214,"author":{"gitID":"Ang-YC"},"content":"        private ProfileImage profileImage;"},{"lineNumber":215,"author":{"gitID":"Ang-YC"},"content":"        private Comment comment;"},{"lineNumber":216,"author":{"gitID":"-"},"content":"        private Set\u003cTag\u003e tags;"},{"lineNumber":217,"author":{"gitID":"-"},"content":""},{"lineNumber":218,"author":{"gitID":"-"},"content":"        public EditPersonDescriptor() {}"},{"lineNumber":219,"author":{"gitID":"-"},"content":""},{"lineNumber":220,"author":{"gitID":"-"},"content":"        /**"},{"lineNumber":221,"author":{"gitID":"-"},"content":"         * Copy constructor."},{"lineNumber":222,"author":{"gitID":"-"},"content":"         * A defensive copy of {@code tags} is used internally."},{"lineNumber":223,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":224,"author":{"gitID":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {"},{"lineNumber":225,"author":{"gitID":"-"},"content":"            setName(toCopy.name);"},{"lineNumber":226,"author":{"gitID":"-"},"content":"            setPhone(toCopy.phone);"},{"lineNumber":227,"author":{"gitID":"-"},"content":"            setEmail(toCopy.email);"},{"lineNumber":228,"author":{"gitID":"-"},"content":"            setAddress(toCopy.address);"},{"lineNumber":229,"author":{"gitID":"kexiaowen"},"content":"            setUniversity(toCopy.university);"},{"lineNumber":230,"author":{"gitID":"mhq199657"},"content":"            setExpectedGraduationYear(toCopy.expectedGraduationYear);"},{"lineNumber":231,"author":{"gitID":"tanhengyeow"},"content":"            setMajor(toCopy.major);"},{"lineNumber":232,"author":{"gitID":"tanhengyeow"},"content":"            setGradePointAverage(toCopy.gradePointAverage);"},{"lineNumber":233,"author":{"gitID":"kexiaowen"},"content":"            setJobApplied(toCopy.jobApplied);"},{"lineNumber":234,"author":{"gitID":"mhq199657"},"content":"            setResume(toCopy.resume);"},{"lineNumber":235,"author":{"gitID":"Ang-YC"},"content":"            setProfileImage(toCopy.profileImage);"},{"lineNumber":236,"author":{"gitID":"Ang-YC"},"content":"            setComment(toCopy.comment);"},{"lineNumber":237,"author":{"gitID":"-"},"content":"            setTags(toCopy.tags);"},{"lineNumber":238,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":239,"author":{"gitID":"-"},"content":""},{"lineNumber":240,"author":{"gitID":"-"},"content":"        /**"},{"lineNumber":241,"author":{"gitID":"-"},"content":"         * Returns true if at least one field is edited."},{"lineNumber":242,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":243,"author":{"gitID":"-"},"content":"        public boolean isAnyFieldEdited() {"},{"lineNumber":244,"author":{"gitID":"kexiaowen"},"content":"            return CollectionUtil.isAnyNonNull(this.name, this.phone, this.email, this.address, this.university,"},{"lineNumber":245,"author":{"gitID":"kexiaowen"},"content":"                    this.expectedGraduationYear, this.major, this.gradePointAverage, this.jobApplied,"},{"lineNumber":246,"author":{"gitID":"Ang-YC"},"content":"                    this.resume, this.profileImage, this.comment, this.tags);"},{"lineNumber":247,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":248,"author":{"gitID":"-"},"content":""},{"lineNumber":249,"author":{"gitID":"-"},"content":"        public void setName(Name name) {"},{"lineNumber":250,"author":{"gitID":"-"},"content":"            this.name \u003d name;"},{"lineNumber":251,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":252,"author":{"gitID":"-"},"content":""},{"lineNumber":253,"author":{"gitID":"-"},"content":"        public Optional\u003cName\u003e getName() {"},{"lineNumber":254,"author":{"gitID":"-"},"content":"            return Optional.ofNullable(name);"},{"lineNumber":255,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":256,"author":{"gitID":"-"},"content":""},{"lineNumber":257,"author":{"gitID":"-"},"content":"        public void setPhone(Phone phone) {"},{"lineNumber":258,"author":{"gitID":"-"},"content":"            this.phone \u003d phone;"},{"lineNumber":259,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":260,"author":{"gitID":"-"},"content":""},{"lineNumber":261,"author":{"gitID":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {"},{"lineNumber":262,"author":{"gitID":"-"},"content":"            return Optional.ofNullable(phone);"},{"lineNumber":263,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":264,"author":{"gitID":"-"},"content":""},{"lineNumber":265,"author":{"gitID":"-"},"content":"        public void setEmail(Email email) {"},{"lineNumber":266,"author":{"gitID":"-"},"content":"            this.email \u003d email;"},{"lineNumber":267,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":268,"author":{"gitID":"-"},"content":""},{"lineNumber":269,"author":{"gitID":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {"},{"lineNumber":270,"author":{"gitID":"-"},"content":"            return Optional.ofNullable(email);"},{"lineNumber":271,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":272,"author":{"gitID":"-"},"content":""},{"lineNumber":273,"author":{"gitID":"-"},"content":"        public void setAddress(Address address) {"},{"lineNumber":274,"author":{"gitID":"-"},"content":"            this.address \u003d address;"},{"lineNumber":275,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":276,"author":{"gitID":"-"},"content":""},{"lineNumber":277,"author":{"gitID":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {"},{"lineNumber":278,"author":{"gitID":"-"},"content":"            return Optional.ofNullable(address);"},{"lineNumber":279,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":280,"author":{"gitID":"-"},"content":""},{"lineNumber":281,"author":{"gitID":"kexiaowen"},"content":"        public void setUniversity(University university) {"},{"lineNumber":282,"author":{"gitID":"kexiaowen"},"content":"            this.university \u003d university;"},{"lineNumber":283,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":284,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":285,"author":{"gitID":"kexiaowen"},"content":"        public Optional\u003cUniversity\u003e getUniversity() {"},{"lineNumber":286,"author":{"gitID":"kexiaowen"},"content":"            return Optional.ofNullable(university);"},{"lineNumber":287,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":288,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":289,"author":{"gitID":"mhq199657"},"content":"        public void setExpectedGraduationYear(ExpectedGraduationYear expectedGraduationYear) {"},{"lineNumber":290,"author":{"gitID":"mhq199657"},"content":"            this.expectedGraduationYear \u003d expectedGraduationYear;"},{"lineNumber":291,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":292,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":293,"author":{"gitID":"mhq199657"},"content":"        public Optional\u003cExpectedGraduationYear\u003e getExpectedGraduationYear() {"},{"lineNumber":294,"author":{"gitID":"mhq199657"},"content":"            return Optional.ofNullable(expectedGraduationYear);"},{"lineNumber":295,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":296,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":297,"author":{"gitID":"tanhengyeow"},"content":"        public void setMajor(Major major) {"},{"lineNumber":298,"author":{"gitID":"tanhengyeow"},"content":"            this.major \u003d major;"},{"lineNumber":299,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":300,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":301,"author":{"gitID":"tanhengyeow"},"content":"        public Optional\u003cMajor\u003e getMajor() {"},{"lineNumber":302,"author":{"gitID":"tanhengyeow"},"content":"            return Optional.ofNullable(major);"},{"lineNumber":303,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":304,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":305,"author":{"gitID":"tanhengyeow"},"content":"        public void setGradePointAverage(GradePointAverage gradePointAverage) {"},{"lineNumber":306,"author":{"gitID":"tanhengyeow"},"content":"            this.gradePointAverage \u003d gradePointAverage;"},{"lineNumber":307,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":308,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":309,"author":{"gitID":"tanhengyeow"},"content":"        public Optional\u003cGradePointAverage\u003e getGradePointAverage() {"},{"lineNumber":310,"author":{"gitID":"tanhengyeow"},"content":"            return Optional.ofNullable(gradePointAverage);"},{"lineNumber":311,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":312,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":313,"author":{"gitID":"Ang-YC"},"content":"        public void setJobApplied(JobApplied jobApplied) {"},{"lineNumber":314,"author":{"gitID":"Ang-YC"},"content":"            this.jobApplied \u003d jobApplied;"},{"lineNumber":315,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":316,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":317,"author":{"gitID":"Ang-YC"},"content":"        public Optional\u003cJobApplied\u003e getJobApplied() {"},{"lineNumber":318,"author":{"gitID":"Ang-YC"},"content":"            return Optional.ofNullable(jobApplied);"},{"lineNumber":319,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":320,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":321,"author":{"gitID":"mhq199657"},"content":"        public void setResume(Resume resume) {"},{"lineNumber":322,"author":{"gitID":"mhq199657"},"content":"            this.resume \u003d resume;"},{"lineNumber":323,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":324,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":325,"author":{"gitID":"mhq199657"},"content":"        public Optional\u003cResume\u003e getResume() {"},{"lineNumber":326,"author":{"gitID":"mhq199657"},"content":"            return Optional.ofNullable(resume);"},{"lineNumber":327,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":328,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":329,"author":{"gitID":"Ang-YC"},"content":"        public void setProfileImage(ProfileImage profileImage) {"},{"lineNumber":330,"author":{"gitID":"Ang-YC"},"content":"            this.profileImage \u003d profileImage;"},{"lineNumber":331,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":332,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":333,"author":{"gitID":"Ang-YC"},"content":"        public Optional\u003cProfileImage\u003e getProfileImage() {"},{"lineNumber":334,"author":{"gitID":"Ang-YC"},"content":"            return Optional.ofNullable(profileImage);"},{"lineNumber":335,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":336,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":337,"author":{"gitID":"Ang-YC"},"content":"        public void setComment(Comment comment) {"},{"lineNumber":338,"author":{"gitID":"Ang-YC"},"content":"            this.comment \u003d comment;"},{"lineNumber":339,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":340,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":341,"author":{"gitID":"Ang-YC"},"content":"        public Optional\u003cComment\u003e getComment() {"},{"lineNumber":342,"author":{"gitID":"Ang-YC"},"content":"            return Optional.ofNullable(comment);"},{"lineNumber":343,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":344,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":345,"author":{"gitID":"-"},"content":"        /**"},{"lineNumber":346,"author":{"gitID":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}."},{"lineNumber":347,"author":{"gitID":"-"},"content":"         * A defensive copy of {@code tags} is used internally."},{"lineNumber":348,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":349,"author":{"gitID":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {"},{"lineNumber":350,"author":{"gitID":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;"},{"lineNumber":351,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":352,"author":{"gitID":"-"},"content":""},{"lineNumber":353,"author":{"gitID":"-"},"content":"        /**"},{"lineNumber":354,"author":{"gitID":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}"},{"lineNumber":355,"author":{"gitID":"-"},"content":"         * if modification is attempted."},{"lineNumber":356,"author":{"gitID":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null."},{"lineNumber":357,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":358,"author":{"gitID":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {"},{"lineNumber":359,"author":{"gitID":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();"},{"lineNumber":360,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":361,"author":{"gitID":"-"},"content":""},{"lineNumber":362,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":363,"author":{"gitID":"-"},"content":"        public boolean equals(Object other) {"},{"lineNumber":364,"author":{"gitID":"-"},"content":"            // short circuit if same object"},{"lineNumber":365,"author":{"gitID":"-"},"content":"            if (other \u003d\u003d this) {"},{"lineNumber":366,"author":{"gitID":"-"},"content":"                return true;"},{"lineNumber":367,"author":{"gitID":"-"},"content":"            }"},{"lineNumber":368,"author":{"gitID":"-"},"content":""},{"lineNumber":369,"author":{"gitID":"-"},"content":"            // instanceof handles nulls"},{"lineNumber":370,"author":{"gitID":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {"},{"lineNumber":371,"author":{"gitID":"-"},"content":"                return false;"},{"lineNumber":372,"author":{"gitID":"-"},"content":"            }"},{"lineNumber":373,"author":{"gitID":"-"},"content":""},{"lineNumber":374,"author":{"gitID":"-"},"content":"            // state check"},{"lineNumber":375,"author":{"gitID":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;"},{"lineNumber":376,"author":{"gitID":"-"},"content":""},{"lineNumber":377,"author":{"gitID":"-"},"content":"            return getName().equals(e.getName())"},{"lineNumber":378,"author":{"gitID":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())"},{"lineNumber":379,"author":{"gitID":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())"},{"lineNumber":380,"author":{"gitID":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())"},{"lineNumber":381,"author":{"gitID":"mhq199657"},"content":"                    \u0026\u0026 getExpectedGraduationYear().equals(e.getExpectedGraduationYear())"},{"lineNumber":382,"author":{"gitID":"tanhengyeow"},"content":"                    \u0026\u0026 getMajor().equals(e.getMajor())"},{"lineNumber":383,"author":{"gitID":"tanhengyeow"},"content":"                    \u0026\u0026 getGradePointAverage().equals(e.getGradePointAverage())"},{"lineNumber":384,"author":{"gitID":"mhq199657"},"content":"                    \u0026\u0026 getResume().equals(e.getResume())"},{"lineNumber":385,"author":{"gitID":"Ang-YC"},"content":"                    \u0026\u0026 getProfileImage().equals(e.getProfileImage())"},{"lineNumber":386,"author":{"gitID":"Ang-YC"},"content":"                    \u0026\u0026 getComment().equals(e.getComment())"},{"lineNumber":387,"author":{"gitID":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());"},{"lineNumber":388,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":389,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":390,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"kexiaowen":30,"mhq199657":59,"-":225,"Ang-YC":45,"tanhengyeow":31}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"tanhengyeow"},"content":"import java.util.function.Predicate;"},{"lineNumber":4,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":5,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.FindResults;"},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":" * Finds and lists all persons in address book whose field contains any of the argument keywords."},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" * Keyword matching is case sensitive."},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"public class FindCommand extends Command {"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"    public static final String COMMAND_WORD \u003d \"find\";"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose fields contain any of \""},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"            + \"the specified keywords (case-sensitive) and displays them as a list with index numbers.\\n\""},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"            + \"Option 1 (Search all fields): KEYWORD [MORE_KEYWORDS]...\\n\""},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"            + \"Example: \" + COMMAND_WORD + \" alex, david, alexyeoh@example.com\\n\\n\""},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"            + \"Option 2 (Search by prefix): /n[KEYWORD] [MORE_KEYWORDS] /p...\\n\""},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/Alex, Bernice p/999, 555\";"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"    public static final int LEVENSHTEIN_DISTANCE_THRESHOLD \u003d 2;"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":"    private final Predicate\u003cPerson\u003e predicate;"},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"    public FindCommand(Predicate\u003cPerson\u003e predicate) {"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        this.predicate \u003d predicate;"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"    public CommandResult execute() {"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":"        FindResults.getInstance().clearResults(); // clear existing results if any (e.g. when undo command is executed)"},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        model.updateFilteredPersonList(predicate);"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        return new CommandResult(getFindMessageForPersonListShownSummary());"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof FindCommand // instanceof handles nulls"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.predicate.equals(((FindCommand) other).predicate)); // state check"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":3,"tanhengyeow":42}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.EventsCenter;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.ui.ExitAppRequestEvent;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"-"},"content":" * Terminates the program."},{"lineNumber":8,"author":{"gitID":"-"},"content":" */"},{"lineNumber":9,"author":{"gitID":"-"},"content":"public class ExitCommand extends Command {"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting HR+ as requested ...\";"},{"lineNumber":14,"author":{"gitID":"Ang-YC"},"content":"    public static final String PARSED_RESULT \u003d \"Press [ENTER] to exit. Are you sure you want to exit HR+? \u003d(\";"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":17,"author":{"gitID":"-"},"content":"    public CommandResult execute() {"},{"lineNumber":18,"author":{"gitID":"-"},"content":"        EventsCenter.getInstance().post(new ExitAppRequestEvent());"},{"lineNumber":19,"author":{"gitID":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT);"},{"lineNumber":20,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"Ang-YC"},"content":"    @Override"},{"lineNumber":23,"author":{"gitID":"Ang-YC"},"content":"    public String getParsedResult() {"},{"lineNumber":24,"author":{"gitID":"Ang-YC"},"content":"        return PARSED_RESULT;"},{"lineNumber":25,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"-":20,"Ang-YC":6}},{"path":"src/main/java/seedu/address/logic/commands/SortCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"},{"lineNumber":5,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT_ORDER;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":8,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":9,"author":{"gitID":"kexiaowen"},"content":"//@@author kexiaowen"},{"lineNumber":10,"author":{"gitID":"kexiaowen"},"content":"/**"},{"lineNumber":11,"author":{"gitID":"kexiaowen"},"content":" * Sorts and lists all students in HR+ based on name, rating or gpa"},{"lineNumber":12,"author":{"gitID":"kexiaowen"},"content":" */"},{"lineNumber":13,"author":{"gitID":"kexiaowen"},"content":"public class SortCommand extends Command {"},{"lineNumber":14,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":15,"author":{"gitID":"kexiaowen"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";"},{"lineNumber":16,"author":{"gitID":"kexiaowen"},"content":"    public static final String SORT_ORDER_ASC \u003d \"asc\";"},{"lineNumber":17,"author":{"gitID":"kexiaowen"},"content":"    public static final String SORT_ORDER_DESC \u003d \"desc\";"},{"lineNumber":18,"author":{"gitID":"kexiaowen"},"content":"    public static final String SORT_FIELD_GPA \u003d \"gpa\";"},{"lineNumber":19,"author":{"gitID":"kexiaowen"},"content":"    public static final String SORT_FIELD_NAME \u003d \"name\";"},{"lineNumber":20,"author":{"gitID":"kexiaowen"},"content":"    public static final String SORT_FIELD_RATING \u003d \"rating\";"},{"lineNumber":21,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":22,"author":{"gitID":"kexiaowen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"},{"lineNumber":23,"author":{"gitID":"kexiaowen"},"content":"            + \": Sorts current list of students in HR+ based on a specified field in descending or ascending order.\\n\""},{"lineNumber":24,"author":{"gitID":"kexiaowen"},"content":"            + \"Sorting order can only be either desc or asc. The field must be either gpa, name or rating.\\n\""},{"lineNumber":25,"author":{"gitID":"kexiaowen"},"content":"            + \"Parameters: FIELD (must be either gpa, name or rating) \""},{"lineNumber":26,"author":{"gitID":"kexiaowen"},"content":"            + PREFIX_SORT_ORDER + \"SORTING ORDER\\n\""},{"lineNumber":27,"author":{"gitID":"kexiaowen"},"content":"            + \"Example: \" + COMMAND_WORD + \" rating \""},{"lineNumber":28,"author":{"gitID":"kexiaowen"},"content":"            + PREFIX_SORT_ORDER + SORT_ORDER_ASC;"},{"lineNumber":29,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":30,"author":{"gitID":"kexiaowen"},"content":"    public static final String MESSAGE_INVALID_SORT_ORDER \u003d"},{"lineNumber":31,"author":{"gitID":"kexiaowen"},"content":"            \"The sort order can only be asc or desc\";"},{"lineNumber":32,"author":{"gitID":"kexiaowen"},"content":"    public static final String MESSAGE_INVALID_SORT_FIELD \u003d"},{"lineNumber":33,"author":{"gitID":"kexiaowen"},"content":"            \"The field must be either gpa, name or rating\";"},{"lineNumber":34,"author":{"gitID":"kexiaowen"},"content":"    public static final String MESSAGE_SORT_SUCCESS \u003d"},{"lineNumber":35,"author":{"gitID":"kexiaowen"},"content":"            \"Sorted students based on %1$s in %2$s order\";"},{"lineNumber":36,"author":{"gitID":"kexiaowen"},"content":"    private static final String SORT_ORDER_ASC_FULL \u003d \"ascending\";"},{"lineNumber":37,"author":{"gitID":"kexiaowen"},"content":"    private static final String SORT_ORDER_DESC_FULL \u003d \"descending\";"},{"lineNumber":38,"author":{"gitID":"kexiaowen"},"content":"    private static final String SORT_FIELD_GPA_FULL \u003d \"gpa\";"},{"lineNumber":39,"author":{"gitID":"kexiaowen"},"content":"    private static final String SORT_FIELD_NAME_FULL \u003d \"name\";"},{"lineNumber":40,"author":{"gitID":"kexiaowen"},"content":"    private static final String SORT_FIELD_RATING_FULL \u003d \"rating\";"},{"lineNumber":41,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":42,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":43,"author":{"gitID":"kexiaowen"},"content":"     * Enumeration of acceptable sort orders"},{"lineNumber":44,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":45,"author":{"gitID":"kexiaowen"},"content":"    public enum SortOrder {"},{"lineNumber":46,"author":{"gitID":"kexiaowen"},"content":"        ASC, DESC"},{"lineNumber":47,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":48,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":49,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":50,"author":{"gitID":"kexiaowen"},"content":"     * Enumeration of acceptable sort fields"},{"lineNumber":51,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":52,"author":{"gitID":"kexiaowen"},"content":"    public enum SortField {"},{"lineNumber":53,"author":{"gitID":"kexiaowen"},"content":"        GPA, NAME, RATING"},{"lineNumber":54,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":55,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":56,"author":{"gitID":"kexiaowen"},"content":"    private final SortOrder sortOrder;"},{"lineNumber":57,"author":{"gitID":"kexiaowen"},"content":"    private final SortField sortField;"},{"lineNumber":58,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":59,"author":{"gitID":"kexiaowen"},"content":"    public SortCommand(SortOrder sortOrder, SortField sortField) {"},{"lineNumber":60,"author":{"gitID":"kexiaowen"},"content":"        requireAllNonNull(sortOrder, sortField);"},{"lineNumber":61,"author":{"gitID":"kexiaowen"},"content":"        this.sortOrder \u003d sortOrder;"},{"lineNumber":62,"author":{"gitID":"kexiaowen"},"content":"        this.sortField \u003d sortField;"},{"lineNumber":63,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":65,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":66,"author":{"gitID":"kexiaowen"},"content":"     * Returns true if a given string is a valid sort order"},{"lineNumber":67,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":68,"author":{"gitID":"kexiaowen"},"content":"    public static boolean isValidSortOrder(String sortOrder) {"},{"lineNumber":69,"author":{"gitID":"kexiaowen"},"content":"        requireNonNull(sortOrder);"},{"lineNumber":70,"author":{"gitID":"kexiaowen"},"content":"        return sortOrder.equals(SORT_ORDER_DESC) || sortOrder.equals(SORT_ORDER_ASC);"},{"lineNumber":71,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":72,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":73,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":74,"author":{"gitID":"kexiaowen"},"content":"     * Returns true if a given string is a valid sort field"},{"lineNumber":75,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":76,"author":{"gitID":"kexiaowen"},"content":"    public static boolean isValidSortField(String sortField) {"},{"lineNumber":77,"author":{"gitID":"kexiaowen"},"content":"        requireNonNull(sortField);"},{"lineNumber":78,"author":{"gitID":"kexiaowen"},"content":"        return sortField.equals(SORT_FIELD_GPA)"},{"lineNumber":79,"author":{"gitID":"kexiaowen"},"content":"                || sortField.equals(SORT_FIELD_NAME)"},{"lineNumber":80,"author":{"gitID":"kexiaowen"},"content":"                || sortField.equals(SORT_FIELD_RATING);"},{"lineNumber":81,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":82,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":83,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":84,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":85,"author":{"gitID":"kexiaowen"},"content":"     * Returns the string representation of a {@cod SortOrder}"},{"lineNumber":86,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":87,"author":{"gitID":"kexiaowen"},"content":"    private String getSortOrderString(SortOrder sortOrder) {"},{"lineNumber":88,"author":{"gitID":"kexiaowen"},"content":"        switch (sortOrder) {"},{"lineNumber":89,"author":{"gitID":"kexiaowen"},"content":"        case ASC:"},{"lineNumber":90,"author":{"gitID":"kexiaowen"},"content":"            return SORT_ORDER_ASC_FULL;"},{"lineNumber":91,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":92,"author":{"gitID":"kexiaowen"},"content":"        case DESC:"},{"lineNumber":93,"author":{"gitID":"kexiaowen"},"content":"            return SORT_ORDER_DESC_FULL;"},{"lineNumber":94,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":95,"author":{"gitID":"kexiaowen"},"content":"        default:"},{"lineNumber":96,"author":{"gitID":"kexiaowen"},"content":"            return null;"},{"lineNumber":97,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":98,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":99,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":100,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":101,"author":{"gitID":"kexiaowen"},"content":"     * Returns the string representation of a {@cod SortField}"},{"lineNumber":102,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":103,"author":{"gitID":"kexiaowen"},"content":"    private String getSortFieldString(SortField sortField) {"},{"lineNumber":104,"author":{"gitID":"kexiaowen"},"content":"        switch (sortField) {"},{"lineNumber":105,"author":{"gitID":"kexiaowen"},"content":"        case GPA:"},{"lineNumber":106,"author":{"gitID":"kexiaowen"},"content":"            return SORT_FIELD_GPA_FULL;"},{"lineNumber":107,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":108,"author":{"gitID":"kexiaowen"},"content":"        case NAME:"},{"lineNumber":109,"author":{"gitID":"kexiaowen"},"content":"            return SORT_FIELD_NAME_FULL;"},{"lineNumber":110,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":111,"author":{"gitID":"kexiaowen"},"content":"        case RATING:"},{"lineNumber":112,"author":{"gitID":"kexiaowen"},"content":"            return SORT_FIELD_RATING_FULL;"},{"lineNumber":113,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":114,"author":{"gitID":"kexiaowen"},"content":"        default:"},{"lineNumber":115,"author":{"gitID":"kexiaowen"},"content":"            return null;"},{"lineNumber":116,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":117,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":118,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":119,"author":{"gitID":"kexiaowen"},"content":"    @Override"},{"lineNumber":120,"author":{"gitID":"kexiaowen"},"content":"    public CommandResult execute() throws CommandException {"},{"lineNumber":121,"author":{"gitID":"kexiaowen"},"content":"        switch (sortOrder) {"},{"lineNumber":122,"author":{"gitID":"kexiaowen"},"content":"        case ASC:"},{"lineNumber":123,"author":{"gitID":"kexiaowen"},"content":"            model.sortPersonListAscOrder(sortField);"},{"lineNumber":124,"author":{"gitID":"kexiaowen"},"content":"            break;"},{"lineNumber":125,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":126,"author":{"gitID":"kexiaowen"},"content":"        case DESC:"},{"lineNumber":127,"author":{"gitID":"kexiaowen"},"content":"            model.sortPersonListDescOrder(sortField);"},{"lineNumber":128,"author":{"gitID":"kexiaowen"},"content":"            break;"},{"lineNumber":129,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":130,"author":{"gitID":"kexiaowen"},"content":"        default:"},{"lineNumber":131,"author":{"gitID":"kexiaowen"},"content":"            throw new CommandException(MESSAGE_INVALID_SORT_ORDER);"},{"lineNumber":132,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":133,"author":{"gitID":"kexiaowen"},"content":"        return new CommandResult(String.format(MESSAGE_SORT_SUCCESS,"},{"lineNumber":134,"author":{"gitID":"kexiaowen"},"content":"                getSortFieldString(sortField), getSortOrderString(sortOrder)));"},{"lineNumber":135,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":136,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":137,"author":{"gitID":"kexiaowen"},"content":"    @Override"},{"lineNumber":138,"author":{"gitID":"kexiaowen"},"content":"    public boolean equals(Object other) {"},{"lineNumber":139,"author":{"gitID":"kexiaowen"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":140,"author":{"gitID":"kexiaowen"},"content":"                || (other instanceof SortCommand // instanceof handles nulls"},{"lineNumber":141,"author":{"gitID":"kexiaowen"},"content":"                \u0026\u0026 this.sortOrder.equals(((SortCommand) other).sortOrder))"},{"lineNumber":142,"author":{"gitID":"kexiaowen"},"content":"                \u0026\u0026 this.sortField.equals(((SortCommand) other).sortField); // state check"},{"lineNumber":143,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":144,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":145,"author":{"gitID":"kexiaowen"},"content":"}"}],"authorContributionMap":{"kexiaowen":139,"-":6}},{"path":"src/main/java/seedu/address/logic/commands/InterviewCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"},{"lineNumber":5,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":6,"author":{"gitID":"Ang-YC"},"content":"import java.time.LocalDateTime;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Messages;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":12,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.commons.util.UiUtil;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":14,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.model.person.InterviewDate;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;"},{"lineNumber":18,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":19,"author":{"gitID":"Ang-YC"},"content":"//@@author Ang-YC"},{"lineNumber":20,"author":{"gitID":"Ang-YC"},"content":"/**"},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":" * Schedule interview of an existing person in the address book."},{"lineNumber":22,"author":{"gitID":"Ang-YC"},"content":" */"},{"lineNumber":23,"author":{"gitID":"Ang-YC"},"content":"public class InterviewCommand extends UndoableCommand {"},{"lineNumber":24,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":25,"author":{"gitID":"Ang-YC"},"content":"    public static final String COMMAND_WORD \u003d \"interview\";"},{"lineNumber":26,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":27,"author":{"gitID":"Ang-YC"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Schedule interview for the person \""},{"lineNumber":28,"author":{"gitID":"Ang-YC"},"content":"            + \"by the index number used in the last person listing. \""},{"lineNumber":29,"author":{"gitID":"Ang-YC"},"content":"            + \"Existing scheduled date will be overwritten by the input value.\\n\""},{"lineNumber":30,"author":{"gitID":"Ang-YC"},"content":"            + \"Parameters: INDEX (must be a positive integer) \""},{"lineNumber":31,"author":{"gitID":"Ang-YC"},"content":"            + \"DATETIME (parse by natural language)\\n\""},{"lineNumber":32,"author":{"gitID":"Ang-YC"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 next Friday at 3pm\";"},{"lineNumber":33,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":34,"author":{"gitID":"Ang-YC"},"content":"    public static final String MESSAGE_INTERVIEW_PERSON_SUCCESS \u003d"},{"lineNumber":35,"author":{"gitID":"Ang-YC"},"content":"            \"Interview of person named %1$s has been scheduled on %2$s\";"},{"lineNumber":36,"author":{"gitID":"Ang-YC"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in HR+.\";"},{"lineNumber":37,"author":{"gitID":"Ang-YC"},"content":"    public static final String PARSED_RESULT \u003d \"Parsed date: %1$s\";"},{"lineNumber":38,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":39,"author":{"gitID":"Ang-YC"},"content":"    private final Index index;"},{"lineNumber":40,"author":{"gitID":"Ang-YC"},"content":"    private final LocalDateTime dateTime;"},{"lineNumber":41,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":42,"author":{"gitID":"Ang-YC"},"content":"    private Person personToInterview;"},{"lineNumber":43,"author":{"gitID":"Ang-YC"},"content":"    private Person scheduledPerson;"},{"lineNumber":44,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":45,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":46,"author":{"gitID":"Ang-YC"},"content":"     * @param index of the person in the filtered person list to schedule interview"},{"lineNumber":47,"author":{"gitID":"Ang-YC"},"content":"     * @param dateTime of the interview"},{"lineNumber":48,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":49,"author":{"gitID":"Ang-YC"},"content":"    public InterviewCommand(Index index, LocalDateTime dateTime) {"},{"lineNumber":50,"author":{"gitID":"Ang-YC"},"content":"        requireNonNull(index);"},{"lineNumber":51,"author":{"gitID":"Ang-YC"},"content":"        requireNonNull(dateTime);"},{"lineNumber":52,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":53,"author":{"gitID":"Ang-YC"},"content":"        this.index    \u003d index;"},{"lineNumber":54,"author":{"gitID":"Ang-YC"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":55,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":57,"author":{"gitID":"Ang-YC"},"content":"    public Index getIndex() {"},{"lineNumber":58,"author":{"gitID":"Ang-YC"},"content":"        return index;"},{"lineNumber":59,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":60,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":61,"author":{"gitID":"Ang-YC"},"content":"    public LocalDateTime getDateTime() {"},{"lineNumber":62,"author":{"gitID":"Ang-YC"},"content":"        return dateTime;"},{"lineNumber":63,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":65,"author":{"gitID":"Ang-YC"},"content":"    public Person getPersonToInterview() {"},{"lineNumber":66,"author":{"gitID":"Ang-YC"},"content":"        return personToInterview;"},{"lineNumber":67,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":69,"author":{"gitID":"Ang-YC"},"content":"    @Override"},{"lineNumber":70,"author":{"gitID":"Ang-YC"},"content":"    public CommandResult executeUndoableCommand() throws CommandException {"},{"lineNumber":71,"author":{"gitID":"Ang-YC"},"content":"        try {"},{"lineNumber":72,"author":{"gitID":"Ang-YC"},"content":"            model.updatePerson(personToInterview, scheduledPerson);"},{"lineNumber":73,"author":{"gitID":"Ang-YC"},"content":"        } catch (DuplicatePersonException dpe) {"},{"lineNumber":74,"author":{"gitID":"Ang-YC"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);"},{"lineNumber":75,"author":{"gitID":"Ang-YC"},"content":"        } catch (PersonNotFoundException pnfe) {"},{"lineNumber":76,"author":{"gitID":"Ang-YC"},"content":"            throw new AssertionError(\"The target person cannot be missing\");"},{"lineNumber":77,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":78,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":79,"author":{"gitID":"Ang-YC"},"content":"        return new CommandResult(String.format(MESSAGE_INTERVIEW_PERSON_SUCCESS,"},{"lineNumber":80,"author":{"gitID":"Ang-YC"},"content":"                scheduledPerson.getName(), UiUtil.formatDate(dateTime)));"},{"lineNumber":81,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":82,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":83,"author":{"gitID":"Ang-YC"},"content":"    @Override"},{"lineNumber":84,"author":{"gitID":"Ang-YC"},"content":"    protected void preprocessUndoableCommand() throws CommandException {"},{"lineNumber":85,"author":{"gitID":"Ang-YC"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();"},{"lineNumber":86,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":87,"author":{"gitID":"Ang-YC"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {"},{"lineNumber":88,"author":{"gitID":"Ang-YC"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"},{"lineNumber":89,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":90,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":91,"author":{"gitID":"Ang-YC"},"content":"        personToInterview \u003d lastShownList.get(index.getZeroBased());"},{"lineNumber":92,"author":{"gitID":"Ang-YC"},"content":"        scheduledPerson \u003d createScheduledPerson(personToInterview, dateTime);"},{"lineNumber":93,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":94,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":95,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":96,"author":{"gitID":"Ang-YC"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToInterview}"},{"lineNumber":97,"author":{"gitID":"Ang-YC"},"content":"     * with updated with {@code dateTime}."},{"lineNumber":98,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":99,"author":{"gitID":"Ang-YC"},"content":"    private static Person createScheduledPerson(Person personToInterview, LocalDateTime dateTime) {"},{"lineNumber":100,"author":{"gitID":"Ang-YC"},"content":"        requireAllNonNull(personToInterview, dateTime);"},{"lineNumber":101,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":102,"author":{"gitID":"Ang-YC"},"content":"        return new Person(personToInterview.getName(), personToInterview.getPhone(), personToInterview.getEmail(),"},{"lineNumber":103,"author":{"gitID":"Ang-YC"},"content":"                personToInterview.getAddress(), personToInterview.getUniversity(),"},{"lineNumber":104,"author":{"gitID":"Ang-YC"},"content":"                personToInterview.getExpectedGraduationYear(),"},{"lineNumber":105,"author":{"gitID":"Ang-YC"},"content":"                personToInterview.getMajor(), personToInterview.getGradePointAverage(),"},{"lineNumber":106,"author":{"gitID":"Ang-YC"},"content":"                personToInterview.getJobApplied(), personToInterview.getRating(),"},{"lineNumber":107,"author":{"gitID":"Ang-YC"},"content":"                personToInterview.getResume(), personToInterview.getProfileImage(), personToInterview.getComment(),"},{"lineNumber":108,"author":{"gitID":"Ang-YC"},"content":"                new InterviewDate(dateTime), personToInterview.getStatus(),"},{"lineNumber":109,"author":{"gitID":"Ang-YC"},"content":"                personToInterview.getTags());"},{"lineNumber":110,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":111,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":112,"author":{"gitID":"Ang-YC"},"content":"    @Override"},{"lineNumber":113,"author":{"gitID":"Ang-YC"},"content":"    public String getParsedResult() {"},{"lineNumber":114,"author":{"gitID":"Ang-YC"},"content":"        return String.format(PARSED_RESULT, UiUtil.formatDate(dateTime));"},{"lineNumber":115,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":116,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":117,"author":{"gitID":"Ang-YC"},"content":"    @Override"},{"lineNumber":118,"author":{"gitID":"Ang-YC"},"content":"    public boolean equals(Object other) {"},{"lineNumber":119,"author":{"gitID":"Ang-YC"},"content":"        // Short circuit if same object"},{"lineNumber":120,"author":{"gitID":"Ang-YC"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":121,"author":{"gitID":"Ang-YC"},"content":"            return true;"},{"lineNumber":122,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":123,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":124,"author":{"gitID":"Ang-YC"},"content":"        // instanceof handles nulls"},{"lineNumber":125,"author":{"gitID":"Ang-YC"},"content":"        if (!(other instanceof InterviewCommand)) {"},{"lineNumber":126,"author":{"gitID":"Ang-YC"},"content":"            return false;"},{"lineNumber":127,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":128,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":129,"author":{"gitID":"Ang-YC"},"content":"        // State check"},{"lineNumber":130,"author":{"gitID":"Ang-YC"},"content":"        InterviewCommand i \u003d (InterviewCommand) other;"},{"lineNumber":131,"author":{"gitID":"Ang-YC"},"content":"        return getIndex().equals(i.getIndex())"},{"lineNumber":132,"author":{"gitID":"Ang-YC"},"content":"                \u0026\u0026 getDateTime().equals(i.getDateTime())"},{"lineNumber":133,"author":{"gitID":"Ang-YC"},"content":"                \u0026\u0026 Objects.equals(getPersonToInterview(), i.getPersonToInterview());"},{"lineNumber":134,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":135,"author":{"gitID":"Ang-YC"},"content":"}"}],"authorContributionMap":{"-":13,"Ang-YC":122}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"mhq199657"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitID":"mhq199657"},"content":"import java.util.HashSet;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.ComponentManager;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.Command;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.CommandResult;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":19,"author":{"gitID":"-"},"content":" * The main LogicManager of the app."},{"lineNumber":20,"author":{"gitID":"-"},"content":" */"},{"lineNumber":21,"author":{"gitID":"-"},"content":"public class LogicManager extends ComponentManager implements Logic {"},{"lineNumber":22,"author":{"gitID":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"    private final Model model;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"    private final CommandHistory history;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    private final AddressBookParser addressBookParser;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"    private final UndoRedoStack undoRedoStack;"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    public LogicManager(Model model) {"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        this.model \u003d model;"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        history \u003d new CommandHistory();"},{"lineNumber":32,"author":{"gitID":"-"},"content":"        addressBookParser \u003d new AddressBookParser();"},{"lineNumber":33,"author":{"gitID":"-"},"content":"        undoRedoStack \u003d new UndoRedoStack();"},{"lineNumber":34,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"-"},"content":""},{"lineNumber":36,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {"},{"lineNumber":38,"author":{"gitID":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");"},{"lineNumber":39,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":40,"author":{"gitID":"-"},"content":"            Command command \u003d addressBookParser.parseCommand(commandText);"},{"lineNumber":41,"author":{"gitID":"-"},"content":"            command.setData(model, history, undoRedoStack);"},{"lineNumber":42,"author":{"gitID":"-"},"content":"            CommandResult result \u003d command.execute();"},{"lineNumber":43,"author":{"gitID":"-"},"content":"            undoRedoStack.push(command);"},{"lineNumber":44,"author":{"gitID":"-"},"content":"            return result;"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        } finally {"},{"lineNumber":46,"author":{"gitID":"-"},"content":"            history.add(commandText);"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":48,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"Ang-YC"},"content":"    @Override"},{"lineNumber":51,"author":{"gitID":"Ang-YC"},"content":"    public Command parse(String commandText) {"},{"lineNumber":52,"author":{"gitID":"Ang-YC"},"content":"        try {"},{"lineNumber":53,"author":{"gitID":"Ang-YC"},"content":"            return addressBookParser.parseCommand(commandText);"},{"lineNumber":54,"author":{"gitID":"Ang-YC"},"content":"        } catch (ParseException e) {"},{"lineNumber":55,"author":{"gitID":"Ang-YC"},"content":"            return null;"},{"lineNumber":56,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":57,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":58,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":59,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":60,"author":{"gitID":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {"},{"lineNumber":61,"author":{"gitID":"-"},"content":"        return model.getFilteredPersonList();"},{"lineNumber":62,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"-"},"content":""},{"lineNumber":64,"author":{"gitID":"Ang-YC"},"content":"    @Override"},{"lineNumber":65,"author":{"gitID":"Ang-YC"},"content":"    public ObservableList\u003cPerson\u003e getActivePersonList() {"},{"lineNumber":66,"author":{"gitID":"Ang-YC"},"content":"        return model.getActivePersonList();"},{"lineNumber":67,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":69,"author":{"gitID":"Ang-YC"},"content":"    @Override"},{"lineNumber":70,"author":{"gitID":"Ang-YC"},"content":"    public void setSelectedPerson(Person selectedPerson) {"},{"lineNumber":71,"author":{"gitID":"Ang-YC"},"content":"        model.setSelectedPerson(selectedPerson);"},{"lineNumber":72,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":74,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":75,"author":{"gitID":"-"},"content":"    public ListElementPointer getHistorySnapshot() {"},{"lineNumber":76,"author":{"gitID":"-"},"content":"        return new ListElementPointer(history.getHistory());"},{"lineNumber":77,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":78,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":79,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":80,"author":{"gitID":"mhq199657"},"content":"     * Deletes unreferenced resume files for disk space optimisation"},{"lineNumber":81,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":82,"author":{"gitID":"mhq199657"},"content":"    public void cleanUnusedResumeAndProfilePic(String addressBookXmlFilePath) {"},{"lineNumber":83,"author":{"gitID":"mhq199657"},"content":"        HashSet\u003cString\u003e usedFiles \u003d new HashSet\u003cString\u003e();"},{"lineNumber":84,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":85,"author":{"gitID":"Ang-YC"},"content":"        for (Person p: model.getAddressBook().getPersonList()) {"},{"lineNumber":86,"author":{"gitID":"mhq199657"},"content":"            if (p.getResume().value !\u003d null) {"},{"lineNumber":87,"author":{"gitID":"mhq199657"},"content":"                usedFiles.add(p.getResume().value.substring(5)); //\"data\\...\""},{"lineNumber":88,"author":{"gitID":"mhq199657"},"content":"            }"},{"lineNumber":89,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":90,"author":{"gitID":"Ang-YC"},"content":"        for (Person p: model.getAddressBook().getPersonList()) {"},{"lineNumber":91,"author":{"gitID":"mhq199657"},"content":"            if (p.getProfileImage().value !\u003d null) {"},{"lineNumber":92,"author":{"gitID":"mhq199657"},"content":"                usedFiles.add(p.getProfileImage().value.substring(5)); //\"data\\...\""},{"lineNumber":93,"author":{"gitID":"mhq199657"},"content":"            }"},{"lineNumber":94,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":95,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":96,"author":{"gitID":"mhq199657"},"content":"        String userDir \u003d System.getProperty(\"user.dir\");"},{"lineNumber":97,"author":{"gitID":"mhq199657"},"content":"        File dataDir \u003d new File(userDir + File.separator + \"data\");"},{"lineNumber":98,"author":{"gitID":"mhq199657"},"content":"        File[] dataDirList \u003d dataDir.listFiles();"},{"lineNumber":99,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":100,"author":{"gitID":"mhq199657"},"content":"        if (dataDirList \u003d\u003d null) {"},{"lineNumber":101,"author":{"gitID":"mhq199657"},"content":"            return;"},{"lineNumber":102,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":103,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":104,"author":{"gitID":"mhq199657"},"content":"        for (File child : dataDirList) {"},{"lineNumber":105,"author":{"gitID":"mhq199657"},"content":"            if (child.getName().lastIndexOf(\".\") \u003d\u003d -1 \u0026\u0026 !usedFiles.contains(child.getName())) {"},{"lineNumber":106,"author":{"gitID":"mhq199657"},"content":"                child.delete();"},{"lineNumber":107,"author":{"gitID":"mhq199657"},"content":"            }"},{"lineNumber":108,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":109,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":110,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"mhq199657":28,"-":57,"Ang-YC":25}},{"path":"src/main/java/seedu/address/storage/AddressBookStorage.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"-"},"content":" * Represents a storage for {@link seedu.address.model.AddressBook}."},{"lineNumber":11,"author":{"gitID":"-"},"content":" */"},{"lineNumber":12,"author":{"gitID":"-"},"content":"public interface AddressBookStorage {"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":15,"author":{"gitID":"-"},"content":"     * Returns the file path of the data file."},{"lineNumber":16,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":17,"author":{"gitID":"-"},"content":"    String getAddressBookFilePath();"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":20,"author":{"gitID":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}."},{"lineNumber":21,"author":{"gitID":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found."},{"lineNumber":22,"author":{"gitID":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format."},{"lineNumber":23,"author":{"gitID":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage."},{"lineNumber":24,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":25,"author":{"gitID":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":28,"author":{"gitID":"-"},"content":"     * @see #getAddressBookFilePath()"},{"lineNumber":29,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws DataConversionException, IOException;"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":33,"author":{"gitID":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage."},{"lineNumber":34,"author":{"gitID":"-"},"content":"     * @param addressBook cannot be null."},{"lineNumber":35,"author":{"gitID":"-"},"content":"     * @throws IOException if there was any problem writing to the file."},{"lineNumber":36,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;"},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":40,"author":{"gitID":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)"},{"lineNumber":41,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) throws IOException;"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":"    //@@author tanhengyeow"},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage, serving as a backup."},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"     * @param addressBook cannot be null."},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"     * @throws IOException if there was any problem writing to the file."},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"    void backupAddressBook(ReadOnlyAddressBook addressBook) throws IOException;"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":43,"tanhengyeow":8}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.ComponentManager;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.model.AddressBookChangedEvent;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.storage.DataSavingExceptionEvent;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":18,"author":{"gitID":"-"},"content":" * Manages storage of AddressBook data in local storage."},{"lineNumber":19,"author":{"gitID":"-"},"content":" */"},{"lineNumber":20,"author":{"gitID":"-"},"content":"public class StorageManager extends ComponentManager implements Storage {"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    private AddressBookStorage addressBookStorage;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    private UserPrefsStorage userPrefsStorage;"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {"},{"lineNumber":28,"author":{"gitID":"-"},"content":"        super();"},{"lineNumber":29,"author":{"gitID":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;"},{"lineNumber":31,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":36,"author":{"gitID":"-"},"content":"    public String getUserPrefsFilePath() {"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        return userPrefsStorage.readUserPrefs();"},{"lineNumber":43,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":46,"author":{"gitID":"-"},"content":"    public void saveUserPrefs(UserPrefs userPrefs) throws IOException {"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);"},{"lineNumber":48,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":52,"author":{"gitID":"-"},"content":""},{"lineNumber":53,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":54,"author":{"gitID":"-"},"content":"    public String getAddressBookFilePath() {"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();"},{"lineNumber":56,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"-"},"content":""},{"lineNumber":58,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":59,"author":{"gitID":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {"},{"lineNumber":60,"author":{"gitID":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());"},{"lineNumber":61,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":62,"author":{"gitID":"-"},"content":""},{"lineNumber":63,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":64,"author":{"gitID":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws DataConversionException, IOException {"},{"lineNumber":65,"author":{"gitID":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);"},{"lineNumber":67,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"-"},"content":""},{"lineNumber":69,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":70,"author":{"gitID":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());"},{"lineNumber":72,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"-"},"content":""},{"lineNumber":74,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":75,"author":{"gitID":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) throws IOException {"},{"lineNumber":76,"author":{"gitID":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);"},{"lineNumber":78,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":79,"author":{"gitID":"-"},"content":""},{"lineNumber":80,"author":{"gitID":"tanhengyeow"},"content":"    //@@author tanhengyeow"},{"lineNumber":81,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":82,"author":{"gitID":"tanhengyeow"},"content":"    public void backupAddressBook(ReadOnlyAddressBook addressBook) throws IOException {"},{"lineNumber":83,"author":{"gitID":"tanhengyeow"},"content":"        addressBookStorage.backupAddressBook(addressBook);"},{"lineNumber":84,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":85,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":86,"author":{"gitID":"tanhengyeow"},"content":"    //@@author"},{"lineNumber":87,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":88,"author":{"gitID":"-"},"content":"    @Subscribe"},{"lineNumber":89,"author":{"gitID":"-"},"content":"    public void handleAddressBookChangedEvent(AddressBookChangedEvent event) {"},{"lineNumber":90,"author":{"gitID":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event, \"Local data changed, saving to file\"));"},{"lineNumber":91,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":92,"author":{"gitID":"-"},"content":"            saveAddressBook(event.data);"},{"lineNumber":93,"author":{"gitID":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":94,"author":{"gitID":"-"},"content":"            raise(new DataSavingExceptionEvent(e));"},{"lineNumber":95,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":96,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":97,"author":{"gitID":"-"},"content":""},{"lineNumber":98,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"-":91,"tanhengyeow":7}},{"path":"src/main/java/seedu/address/storage/XmlAddressBookStorage.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.FileUtil;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":18,"author":{"gitID":"-"},"content":" * A class to access AddressBook data stored as an xml file on the hard disk."},{"lineNumber":19,"author":{"gitID":"-"},"content":" */"},{"lineNumber":20,"author":{"gitID":"-"},"content":"public class XmlAddressBookStorage implements AddressBookStorage {"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(XmlAddressBookStorage.class);"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"    private static final String BACKUP_FILE_EXTENSION \u003d \".bak\";"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"    private String filePath;"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    public XmlAddressBookStorage(String filePath) {"},{"lineNumber":29,"author":{"gitID":"-"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"    public String getAddressBookFilePath() {"},{"lineNumber":33,"author":{"gitID":"-"},"content":"        return filePath;"},{"lineNumber":34,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"-"},"content":""},{"lineNumber":36,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {"},{"lineNumber":38,"author":{"gitID":"-"},"content":"        return readAddressBook(filePath);"},{"lineNumber":39,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"-"},"content":""},{"lineNumber":41,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":42,"author":{"gitID":"-"},"content":"     * Similar to {@link #readAddressBook()}"},{"lineNumber":43,"author":{"gitID":"-"},"content":"     * @param filePath location of the data. Cannot be null"},{"lineNumber":44,"author":{"gitID":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format."},{"lineNumber":45,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":46,"author":{"gitID":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws DataConversionException,"},{"lineNumber":47,"author":{"gitID":"-"},"content":"                                                                                 FileNotFoundException {"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        requireNonNull(filePath);"},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"-"},"content":"        File addressBookFile \u003d new File(filePath);"},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"-"},"content":"        if (!addressBookFile.exists()) {"},{"lineNumber":53,"author":{"gitID":"-"},"content":"            logger.info(\"AddressBook file \"  + addressBookFile + \" not found\");"},{"lineNumber":54,"author":{"gitID":"-"},"content":"            return Optional.empty();"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":56,"author":{"gitID":"-"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":"        XmlSerializableAddressBook xmlAddressBook \u003d XmlFileStorage.loadDataFromSaveFile(new File(filePath));"},{"lineNumber":58,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":59,"author":{"gitID":"-"},"content":"            return Optional.of(xmlAddressBook.toModelType());"},{"lineNumber":60,"author":{"gitID":"-"},"content":"        } catch (IllegalValueException ive) {"},{"lineNumber":61,"author":{"gitID":"-"},"content":"            logger.info(\"Illegal values found in \" + addressBookFile + \": \" + ive.getMessage());"},{"lineNumber":62,"author":{"gitID":"-"},"content":"            throw new DataConversionException(ive);"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":64,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitID":"-"},"content":""},{"lineNumber":66,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":67,"author":{"gitID":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {"},{"lineNumber":68,"author":{"gitID":"-"},"content":"        saveAddressBook(addressBook, filePath);"},{"lineNumber":69,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":70,"author":{"gitID":"-"},"content":""},{"lineNumber":71,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":72,"author":{"gitID":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}"},{"lineNumber":73,"author":{"gitID":"-"},"content":"     * @param filePath location of the data. Cannot be null"},{"lineNumber":74,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":75,"author":{"gitID":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) throws IOException {"},{"lineNumber":76,"author":{"gitID":"-"},"content":"        requireNonNull(addressBook);"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        requireNonNull(filePath);"},{"lineNumber":78,"author":{"gitID":"-"},"content":""},{"lineNumber":79,"author":{"gitID":"-"},"content":"        File file \u003d new File(filePath);"},{"lineNumber":80,"author":{"gitID":"-"},"content":"        FileUtil.createIfMissing(file);"},{"lineNumber":81,"author":{"gitID":"-"},"content":"        XmlFileStorage.saveDataToFile(file, new XmlSerializableAddressBook(addressBook));"},{"lineNumber":82,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":83,"author":{"gitID":"-"},"content":""},{"lineNumber":84,"author":{"gitID":"tanhengyeow"},"content":"    //@@author tanhengyeow"},{"lineNumber":85,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":86,"author":{"gitID":"tanhengyeow"},"content":"    public void backupAddressBook(ReadOnlyAddressBook addressBook) throws IOException {"},{"lineNumber":87,"author":{"gitID":"tanhengyeow"},"content":"        saveAddressBook(addressBook, getDestinationPath(filePath));"},{"lineNumber":88,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":89,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":90,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":91,"author":{"gitID":"tanhengyeow"},"content":"     *"},{"lineNumber":92,"author":{"gitID":"tanhengyeow"},"content":"     * @return destination filePath of backup file."},{"lineNumber":93,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":94,"author":{"gitID":"tanhengyeow"},"content":"    private String getDestinationPath(String filePath) {"},{"lineNumber":95,"author":{"gitID":"tanhengyeow"},"content":"        return (filePath \u003d\u003d null) ? null : filePath + BACKUP_FILE_EXTENSION;"},{"lineNumber":96,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":97,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":83,"tanhengyeow":14}},{"path":"src/main/java/seedu/address/logic/commands/RateCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMUNICATION_SKILLS_SCORE;"},{"lineNumber":5,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXPERIENCE_SCORE;"},{"lineNumber":6,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PROBLEM_SOLVING_SKILLS_SCORE;"},{"lineNumber":7,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TECHNICAL_SKILLS_SCORE;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;"},{"lineNumber":9,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":10,"author":{"gitID":"kexiaowen"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Messages;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":16,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.Rating;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;"},{"lineNumber":19,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":20,"author":{"gitID":"kexiaowen"},"content":"//@@author kexiaowen"},{"lineNumber":21,"author":{"gitID":"kexiaowen"},"content":"/**"},{"lineNumber":22,"author":{"gitID":"kexiaowen"},"content":" * Rates a candidate after an interview."},{"lineNumber":23,"author":{"gitID":"kexiaowen"},"content":" */"},{"lineNumber":24,"author":{"gitID":"kexiaowen"},"content":"public class RateCommand extends UndoableCommand {"},{"lineNumber":25,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":26,"author":{"gitID":"kexiaowen"},"content":"    public static final String COMMAND_WORD \u003d \"rate\";"},{"lineNumber":27,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":28,"author":{"gitID":"kexiaowen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"},{"lineNumber":29,"author":{"gitID":"kexiaowen"},"content":"            + \": Rates a student based on technical, communication, problem solving skills and experience.\\n\""},{"lineNumber":30,"author":{"gitID":"kexiaowen"},"content":"            + \"Parameters: INDEX (must be a positive integer) \""},{"lineNumber":31,"author":{"gitID":"kexiaowen"},"content":"            + PREFIX_TECHNICAL_SKILLS_SCORE"},{"lineNumber":32,"author":{"gitID":"kexiaowen"},"content":"            + \"TECHNICAL SKILLS SCORE \""},{"lineNumber":33,"author":{"gitID":"kexiaowen"},"content":"            + PREFIX_COMMUNICATION_SKILLS_SCORE"},{"lineNumber":34,"author":{"gitID":"kexiaowen"},"content":"            + \"COMMUNICATION SKILLS SCORE \""},{"lineNumber":35,"author":{"gitID":"kexiaowen"},"content":"            + PREFIX_PROBLEM_SOLVING_SKILLS_SCORE"},{"lineNumber":36,"author":{"gitID":"kexiaowen"},"content":"            + \"PROBLEM SOLVING SKILLS SCORE \""},{"lineNumber":37,"author":{"gitID":"kexiaowen"},"content":"            + PREFIX_EXPERIENCE_SCORE"},{"lineNumber":38,"author":{"gitID":"kexiaowen"},"content":"            + \"EXPERIENCE SCORE \\n\""},{"lineNumber":39,"author":{"gitID":"kexiaowen"},"content":"            + \"Note: 1. The scores must be numbers in the range of 1 to 5 (inclusive).\\n\""},{"lineNumber":40,"author":{"gitID":"kexiaowen"},"content":"            + \"2. Scores are rounded to two decimal places.\\n\""},{"lineNumber":41,"author":{"gitID":"kexiaowen"},"content":"            + \"3. All four scores must be supplied.\\n\""},{"lineNumber":42,"author":{"gitID":"kexiaowen"},"content":"            + \"EXAMPLE: \" + COMMAND_WORD + \" 1 \""},{"lineNumber":43,"author":{"gitID":"kexiaowen"},"content":"            + PREFIX_TECHNICAL_SKILLS_SCORE + \"5 \""},{"lineNumber":44,"author":{"gitID":"kexiaowen"},"content":"            + PREFIX_COMMUNICATION_SKILLS_SCORE + \"4.5 \""},{"lineNumber":45,"author":{"gitID":"kexiaowen"},"content":"            + PREFIX_PROBLEM_SOLVING_SKILLS_SCORE + \"4 \""},{"lineNumber":46,"author":{"gitID":"kexiaowen"},"content":"            + PREFIX_EXPERIENCE_SCORE + \"3.5\";"},{"lineNumber":47,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":48,"author":{"gitID":"kexiaowen"},"content":"    public static final String MESSAGE_RATE_PERSON_SUCCESS \u003d \"Rated %1$s: \\n\""},{"lineNumber":49,"author":{"gitID":"kexiaowen"},"content":"            + \"Technical skills: %2$s, Communication skills: %3$s, \""},{"lineNumber":50,"author":{"gitID":"kexiaowen"},"content":"            + \"Problem solving skills: %4$s, Experience: %5$s \\n\""},{"lineNumber":51,"author":{"gitID":"kexiaowen"},"content":"            + \"Overall: %6$s\";"},{"lineNumber":52,"author":{"gitID":"kexiaowen"},"content":"    public static final String MESSAGE_PERSON_ALREADY_RATED \u003d \"You have already rated %1$s.\\n\""},{"lineNumber":53,"author":{"gitID":"kexiaowen"},"content":"            + \"Use the rating-edit command to modify rating scores assigned to the student.\";"},{"lineNumber":54,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":55,"author":{"gitID":"kexiaowen"},"content":"    private final Index index;"},{"lineNumber":56,"author":{"gitID":"kexiaowen"},"content":"    private final Rating rating;"},{"lineNumber":57,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":58,"author":{"gitID":"kexiaowen"},"content":"    private Person personToRate;"},{"lineNumber":59,"author":{"gitID":"kexiaowen"},"content":"    private Person ratedPerson;"},{"lineNumber":60,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":61,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":62,"author":{"gitID":"kexiaowen"},"content":"     * @param index of the person in the filtered person list to rate"},{"lineNumber":63,"author":{"gitID":"kexiaowen"},"content":"     * @param rating given to the student based on technical skills, communication skills,"},{"lineNumber":64,"author":{"gitID":"kexiaowen"},"content":"     *               problem solving skills and experience"},{"lineNumber":65,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":66,"author":{"gitID":"kexiaowen"},"content":"    public RateCommand(Index index, Rating rating) {"},{"lineNumber":67,"author":{"gitID":"kexiaowen"},"content":"        requireNonNull(index);"},{"lineNumber":68,"author":{"gitID":"kexiaowen"},"content":"        requireNonNull(rating);"},{"lineNumber":69,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":70,"author":{"gitID":"kexiaowen"},"content":"        this.index \u003d index;"},{"lineNumber":71,"author":{"gitID":"kexiaowen"},"content":"        this.rating \u003d rating;"},{"lineNumber":72,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":74,"author":{"gitID":"kexiaowen"},"content":"    @Override"},{"lineNumber":75,"author":{"gitID":"kexiaowen"},"content":"    public CommandResult executeUndoableCommand() throws CommandException {"},{"lineNumber":76,"author":{"gitID":"kexiaowen"},"content":"        requireNonNull(personToRate);"},{"lineNumber":77,"author":{"gitID":"kexiaowen"},"content":"        requireNonNull(ratedPerson);"},{"lineNumber":78,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":79,"author":{"gitID":"kexiaowen"},"content":"        try {"},{"lineNumber":80,"author":{"gitID":"kexiaowen"},"content":"            model.updatePerson(personToRate, ratedPerson);"},{"lineNumber":81,"author":{"gitID":"kexiaowen"},"content":"        } catch (DuplicatePersonException dpe) {"},{"lineNumber":82,"author":{"gitID":"kexiaowen"},"content":"            throw new AssertionError(\"Changing target person\u0027s rating should not result in a duplicate\");"},{"lineNumber":83,"author":{"gitID":"kexiaowen"},"content":"        } catch (PersonNotFoundException pnfe) {"},{"lineNumber":84,"author":{"gitID":"kexiaowen"},"content":"            throw new AssertionError(\"The target person cannot be missing\");"},{"lineNumber":85,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":86,"author":{"gitID":"kexiaowen"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);"},{"lineNumber":87,"author":{"gitID":"kexiaowen"},"content":"        return new CommandResult(String.format(MESSAGE_RATE_PERSON_SUCCESS, ratedPerson.getName(),"},{"lineNumber":88,"author":{"gitID":"kexiaowen"},"content":"                ratedPerson.getRating().getTechnicalSkillsScore(),"},{"lineNumber":89,"author":{"gitID":"kexiaowen"},"content":"                ratedPerson.getRating().getCommunicationSkillsScore(),"},{"lineNumber":90,"author":{"gitID":"kexiaowen"},"content":"                ratedPerson.getRating().getProblemSolvingSkillsScore(),"},{"lineNumber":91,"author":{"gitID":"kexiaowen"},"content":"                ratedPerson.getRating().getExperienceScore(),"},{"lineNumber":92,"author":{"gitID":"kexiaowen"},"content":"                ratedPerson.getRating().getOverallScore()));"},{"lineNumber":93,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":94,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":95,"author":{"gitID":"kexiaowen"},"content":"    @Override"},{"lineNumber":96,"author":{"gitID":"kexiaowen"},"content":"    protected void preprocessUndoableCommand() throws CommandException {"},{"lineNumber":97,"author":{"gitID":"kexiaowen"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();"},{"lineNumber":98,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":99,"author":{"gitID":"kexiaowen"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {"},{"lineNumber":100,"author":{"gitID":"kexiaowen"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"},{"lineNumber":101,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":102,"author":{"gitID":"kexiaowen"},"content":"        personToRate \u003d lastShownList.get(index.getZeroBased());"},{"lineNumber":103,"author":{"gitID":"kexiaowen"},"content":"        if (personToRate.getRating().getOverallScore() !\u003d Rating.DEFAULT_SCORE) {"},{"lineNumber":104,"author":{"gitID":"kexiaowen"},"content":"            throw new CommandException(String.format(MESSAGE_PERSON_ALREADY_RATED, personToRate.getName()));"},{"lineNumber":105,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":106,"author":{"gitID":"kexiaowen"},"content":"        ratedPerson \u003d createRatedPerson(personToRate, rating);"},{"lineNumber":107,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":108,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":109,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":110,"author":{"gitID":"kexiaowen"},"content":"     * Creates and returns a {@code Person} with the details of {@code rating}"},{"lineNumber":111,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":112,"author":{"gitID":"kexiaowen"},"content":"    private static Person createRatedPerson(Person personToRate, Rating rating) {"},{"lineNumber":113,"author":{"gitID":"kexiaowen"},"content":"        assert personToRate !\u003d null;"},{"lineNumber":114,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":115,"author":{"gitID":"kexiaowen"},"content":"        return new Person(personToRate.getName(), personToRate.getPhone(), personToRate.getEmail(),"},{"lineNumber":116,"author":{"gitID":"kexiaowen"},"content":"                personToRate.getAddress(), personToRate.getUniversity(), personToRate.getExpectedGraduationYear(),"},{"lineNumber":117,"author":{"gitID":"kexiaowen"},"content":"                personToRate.getMajor(), personToRate.getGradePointAverage(), personToRate.getJobApplied(),"},{"lineNumber":118,"author":{"gitID":"kexiaowen"},"content":"                rating, personToRate.getResume(), personToRate.getProfileImage(), personToRate.getComment(),"},{"lineNumber":119,"author":{"gitID":"kexiaowen"},"content":"                personToRate.getInterviewDate(), personToRate.getStatus(), personToRate.getTags());"},{"lineNumber":120,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":121,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":122,"author":{"gitID":"kexiaowen"},"content":"    @Override"},{"lineNumber":123,"author":{"gitID":"kexiaowen"},"content":"    public boolean equals(Object other) {"},{"lineNumber":124,"author":{"gitID":"kexiaowen"},"content":"        // short circuit if same object"},{"lineNumber":125,"author":{"gitID":"kexiaowen"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":126,"author":{"gitID":"kexiaowen"},"content":"            return true;"},{"lineNumber":127,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":128,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":129,"author":{"gitID":"kexiaowen"},"content":"        // instanceof handles nulls"},{"lineNumber":130,"author":{"gitID":"kexiaowen"},"content":"        if (!(other instanceof RateCommand)) {"},{"lineNumber":131,"author":{"gitID":"kexiaowen"},"content":"            return false;"},{"lineNumber":132,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":133,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":134,"author":{"gitID":"kexiaowen"},"content":"        // state check"},{"lineNumber":135,"author":{"gitID":"kexiaowen"},"content":"        RateCommand e \u003d (RateCommand) other;"},{"lineNumber":136,"author":{"gitID":"kexiaowen"},"content":"        return index.equals(e.index)"},{"lineNumber":137,"author":{"gitID":"kexiaowen"},"content":"                \u0026\u0026 rating.equals(e.rating);"},{"lineNumber":138,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":139,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":140,"author":{"gitID":"kexiaowen"},"content":"}"}],"authorContributionMap":{"kexiaowen":129,"-":11}},{"path":"src/main/java/seedu/address/storage/XmlAdaptedPerson.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"mhq199657"},"content":"import static java.util.Objects.isNull;"},{"lineNumber":4,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.HashSet;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.util.Set;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import javax.xml.bind.annotation.XmlElement;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;"},{"lineNumber":14,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Address;"},{"lineNumber":15,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.model.person.Comment;"},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Email;"},{"lineNumber":17,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.ExpectedGraduationYear;"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.person.GradePointAverage;"},{"lineNumber":19,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.model.person.InterviewDate;"},{"lineNumber":20,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.JobApplied;"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.person.Major;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Name;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Phone;"},{"lineNumber":25,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.model.person.ProfileImage;"},{"lineNumber":26,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.Rating;"},{"lineNumber":27,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Resume;"},{"lineNumber":28,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Status;"},{"lineNumber":29,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.University;"},{"lineNumber":30,"author":{"gitID":"-"},"content":"import seedu.address.model.tag.Tag;"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":33,"author":{"gitID":"-"},"content":" * JAXB-friendly version of the Person."},{"lineNumber":34,"author":{"gitID":"-"},"content":" */"},{"lineNumber":35,"author":{"gitID":"-"},"content":"public class XmlAdaptedPerson {"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";"},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"Ang-YC"},"content":"    // Compulsory fields"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    @XmlElement(required \u003d true)"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    private String name;"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    @XmlElement(required \u003d true)"},{"lineNumber":43,"author":{"gitID":"-"},"content":"    private String phone;"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    @XmlElement(required \u003d true)"},{"lineNumber":45,"author":{"gitID":"-"},"content":"    private String email;"},{"lineNumber":46,"author":{"gitID":"-"},"content":"    @XmlElement(required \u003d true)"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    private String address;"},{"lineNumber":48,"author":{"gitID":"-"},"content":"    @XmlElement(required \u003d true)"},{"lineNumber":49,"author":{"gitID":"kexiaowen"},"content":"    private String university;"},{"lineNumber":50,"author":{"gitID":"-"},"content":"    @XmlElement(required \u003d true)"},{"lineNumber":51,"author":{"gitID":"mhq199657"},"content":"    private String expectedGraduationYear;"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    @XmlElement(required \u003d true)"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"    private String major;"},{"lineNumber":54,"author":{"gitID":"-"},"content":"    @XmlElement(required \u003d true)"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"    private String gradePointAverage;"},{"lineNumber":56,"author":{"gitID":"-"},"content":"    @XmlElement(required \u003d true)"},{"lineNumber":57,"author":{"gitID":"kexiaowen"},"content":"    private String jobApplied;"},{"lineNumber":58,"author":{"gitID":"-"},"content":"    @XmlElement(required \u003d true)"},{"lineNumber":59,"author":{"gitID":"mhq199657"},"content":"    private String status;"},{"lineNumber":60,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":61,"author":{"gitID":"Ang-YC"},"content":"    // Optional fields"},{"lineNumber":62,"author":{"gitID":"mhq199657"},"content":"    @XmlElement(nillable \u003d true)"},{"lineNumber":63,"author":{"gitID":"mhq199657"},"content":"    private String resume;"},{"lineNumber":64,"author":{"gitID":"mhq199657"},"content":"    @XmlElement(nillable \u003d true)"},{"lineNumber":65,"author":{"gitID":"Ang-YC"},"content":"    private String profileImage;"},{"lineNumber":66,"author":{"gitID":"mhq199657"},"content":"    @XmlElement(nillable \u003d true)"},{"lineNumber":67,"author":{"gitID":"Ang-YC"},"content":"    private String comment;"},{"lineNumber":68,"author":{"gitID":"mhq199657"},"content":"    @XmlElement(nillable \u003d true)"},{"lineNumber":69,"author":{"gitID":"Ang-YC"},"content":"    private String interviewDate;"},{"lineNumber":70,"author":{"gitID":"-"},"content":""},{"lineNumber":71,"author":{"gitID":"kexiaowen"},"content":"    @XmlElement"},{"lineNumber":72,"author":{"gitID":"kexiaowen"},"content":"    private String technicalSkillsScore;"},{"lineNumber":73,"author":{"gitID":"kexiaowen"},"content":"    @XmlElement"},{"lineNumber":74,"author":{"gitID":"kexiaowen"},"content":"    private String communicationSkillsScore;"},{"lineNumber":75,"author":{"gitID":"kexiaowen"},"content":"    @XmlElement"},{"lineNumber":76,"author":{"gitID":"kexiaowen"},"content":"    private String problemSolvingSkillsScore;"},{"lineNumber":77,"author":{"gitID":"kexiaowen"},"content":"    @XmlElement"},{"lineNumber":78,"author":{"gitID":"kexiaowen"},"content":"    private String experienceScore;"},{"lineNumber":79,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":80,"author":{"gitID":"-"},"content":"    @XmlElement"},{"lineNumber":81,"author":{"gitID":"-"},"content":"    private List\u003cXmlAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();"},{"lineNumber":82,"author":{"gitID":"-"},"content":""},{"lineNumber":83,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":84,"author":{"gitID":"-"},"content":"     * Constructs an XmlAdaptedPerson."},{"lineNumber":85,"author":{"gitID":"-"},"content":"     * This is the no-arg constructor that is required by JAXB."},{"lineNumber":86,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":87,"author":{"gitID":"-"},"content":"    public XmlAdaptedPerson() {}"},{"lineNumber":88,"author":{"gitID":"-"},"content":""},{"lineNumber":89,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":90,"author":{"gitID":"-"},"content":"     * Constructs an {@code XmlAdaptedPerson} with the given person details."},{"lineNumber":91,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":92,"author":{"gitID":"kexiaowen"},"content":"    public XmlAdaptedPerson(String name, String phone, String email, String address, String university,"},{"lineNumber":93,"author":{"gitID":"kexiaowen"},"content":"                            String expectedGraduationYear, String major, String gradePointAverage, String jobApplied,"},{"lineNumber":94,"author":{"gitID":"kexiaowen"},"content":"                            String technicalSkillsScore, String communicationSkillsScore,"},{"lineNumber":95,"author":{"gitID":"kexiaowen"},"content":"                            String problemSolvingSkillsScore, String experienceScore, String resume,"},{"lineNumber":96,"author":{"gitID":"kexiaowen"},"content":"                            String profileImage, String comment, String interviewDate, String status,"},{"lineNumber":97,"author":{"gitID":"Ang-YC"},"content":"                            List\u003cXmlAdaptedTag\u003e tagged) {"},{"lineNumber":98,"author":{"gitID":"-"},"content":"        this.name \u003d name;"},{"lineNumber":99,"author":{"gitID":"-"},"content":"        this.phone \u003d phone;"},{"lineNumber":100,"author":{"gitID":"-"},"content":"        this.email \u003d email;"},{"lineNumber":101,"author":{"gitID":"-"},"content":"        this.address \u003d address;"},{"lineNumber":102,"author":{"gitID":"kexiaowen"},"content":"        this.university \u003d university;"},{"lineNumber":103,"author":{"gitID":"mhq199657"},"content":"        this.expectedGraduationYear \u003d expectedGraduationYear;"},{"lineNumber":104,"author":{"gitID":"tanhengyeow"},"content":"        this.major \u003d major;"},{"lineNumber":105,"author":{"gitID":"tanhengyeow"},"content":"        this.gradePointAverage \u003d gradePointAverage;"},{"lineNumber":106,"author":{"gitID":"kexiaowen"},"content":"        this.jobApplied \u003d jobApplied;"},{"lineNumber":107,"author":{"gitID":"kexiaowen"},"content":"        this.technicalSkillsScore \u003d technicalSkillsScore;"},{"lineNumber":108,"author":{"gitID":"kexiaowen"},"content":"        this.communicationSkillsScore \u003d communicationSkillsScore;"},{"lineNumber":109,"author":{"gitID":"kexiaowen"},"content":"        this.problemSolvingSkillsScore \u003d problemSolvingSkillsScore;"},{"lineNumber":110,"author":{"gitID":"kexiaowen"},"content":"        this.experienceScore \u003d experienceScore;"},{"lineNumber":111,"author":{"gitID":"mhq199657"},"content":"        this.resume \u003d resume;"},{"lineNumber":112,"author":{"gitID":"Ang-YC"},"content":"        this.profileImage \u003d profileImage;"},{"lineNumber":113,"author":{"gitID":"Ang-YC"},"content":"        this.comment \u003d comment;"},{"lineNumber":114,"author":{"gitID":"Ang-YC"},"content":"        this.interviewDate \u003d interviewDate;"},{"lineNumber":115,"author":{"gitID":"mhq199657"},"content":"        this.status \u003d status;"},{"lineNumber":116,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":117,"author":{"gitID":"-"},"content":"        if (tagged !\u003d null) {"},{"lineNumber":118,"author":{"gitID":"-"},"content":"            this.tagged \u003d new ArrayList\u003c\u003e(tagged);"},{"lineNumber":119,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":120,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":121,"author":{"gitID":"-"},"content":""},{"lineNumber":122,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":123,"author":{"gitID":"-"},"content":"     * Converts a given Person into this class for JAXB use."},{"lineNumber":124,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":125,"author":{"gitID":"-"},"content":"     * @param source future changes to this will not affect the created XmlAdaptedPerson"},{"lineNumber":126,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":127,"author":{"gitID":"-"},"content":"    public XmlAdaptedPerson(Person source) {"},{"lineNumber":128,"author":{"gitID":"-"},"content":"        name \u003d source.getName().fullName;"},{"lineNumber":129,"author":{"gitID":"-"},"content":"        phone \u003d source.getPhone().value;"},{"lineNumber":130,"author":{"gitID":"-"},"content":"        email \u003d source.getEmail().value;"},{"lineNumber":131,"author":{"gitID":"-"},"content":"        address \u003d source.getAddress().value;"},{"lineNumber":132,"author":{"gitID":"kexiaowen"},"content":"        university \u003d source.getUniversity().value;"},{"lineNumber":133,"author":{"gitID":"mhq199657"},"content":"        expectedGraduationYear \u003d source.getExpectedGraduationYear().value;"},{"lineNumber":134,"author":{"gitID":"tanhengyeow"},"content":"        major \u003d source.getMajor().value;"},{"lineNumber":135,"author":{"gitID":"tanhengyeow"},"content":"        gradePointAverage \u003d source.getGradePointAverage().value;"},{"lineNumber":136,"author":{"gitID":"kexiaowen"},"content":"        jobApplied \u003d source.getJobApplied().value;"},{"lineNumber":137,"author":{"gitID":"kexiaowen"},"content":"        technicalSkillsScore \u003d Double.toString(source.getRating().technicalSkillsScore);"},{"lineNumber":138,"author":{"gitID":"kexiaowen"},"content":"        communicationSkillsScore \u003d Double.toString(source.getRating().communicationSkillsScore);"},{"lineNumber":139,"author":{"gitID":"kexiaowen"},"content":"        problemSolvingSkillsScore \u003d Double.toString(source.getRating().problemSolvingSkillsScore);"},{"lineNumber":140,"author":{"gitID":"kexiaowen"},"content":"        experienceScore \u003d Double.toString(source.getRating().experienceScore);"},{"lineNumber":141,"author":{"gitID":"mhq199657"},"content":"        resume \u003d source.getResume().value;"},{"lineNumber":142,"author":{"gitID":"Ang-YC"},"content":"        profileImage \u003d source.getProfileImage().value;"},{"lineNumber":143,"author":{"gitID":"Ang-YC"},"content":"        comment \u003d source.getComment().value;"},{"lineNumber":144,"author":{"gitID":"Ang-YC"},"content":"        interviewDate \u003d source.getInterviewDate().toString();"},{"lineNumber":145,"author":{"gitID":"mhq199657"},"content":"        status \u003d source.getStatus().value;"},{"lineNumber":146,"author":{"gitID":"-"},"content":"        tagged \u003d new ArrayList\u003c\u003e();"},{"lineNumber":147,"author":{"gitID":"-"},"content":"        for (Tag tag : source.getTags()) {"},{"lineNumber":148,"author":{"gitID":"-"},"content":"            tagged.add(new XmlAdaptedTag(tag));"},{"lineNumber":149,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":150,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":151,"author":{"gitID":"-"},"content":""},{"lineNumber":152,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":153,"author":{"gitID":"-"},"content":"     * Converts this jaxb-friendly adapted person object into the model\u0027s Person object."},{"lineNumber":154,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":155,"author":{"gitID":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person"},{"lineNumber":156,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":157,"author":{"gitID":"-"},"content":"    public Person toModelType() throws IllegalValueException {"},{"lineNumber":158,"author":{"gitID":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();"},{"lineNumber":159,"author":{"gitID":"-"},"content":"        for (XmlAdaptedTag tag : tagged) {"},{"lineNumber":160,"author":{"gitID":"-"},"content":"            personTags.add(tag.toModelType());"},{"lineNumber":161,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":162,"author":{"gitID":"-"},"content":""},{"lineNumber":163,"author":{"gitID":"-"},"content":"        if (this.name \u003d\u003d null) {"},{"lineNumber":164,"author":{"gitID":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));"},{"lineNumber":165,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":166,"author":{"gitID":"-"},"content":"        if (!Name.isValidName(this.name)) {"},{"lineNumber":167,"author":{"gitID":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_NAME_CONSTRAINTS);"},{"lineNumber":168,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":169,"author":{"gitID":"-"},"content":"        final Name name \u003d new Name(this.name);"},{"lineNumber":170,"author":{"gitID":"-"},"content":""},{"lineNumber":171,"author":{"gitID":"-"},"content":"        if (this.phone \u003d\u003d null) {"},{"lineNumber":172,"author":{"gitID":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));"},{"lineNumber":173,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":174,"author":{"gitID":"-"},"content":"        if (!Phone.isValidPhone(this.phone)) {"},{"lineNumber":175,"author":{"gitID":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_PHONE_CONSTRAINTS);"},{"lineNumber":176,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":177,"author":{"gitID":"-"},"content":"        final Phone phone \u003d new Phone(this.phone);"},{"lineNumber":178,"author":{"gitID":"-"},"content":""},{"lineNumber":179,"author":{"gitID":"-"},"content":"        if (this.email \u003d\u003d null) {"},{"lineNumber":180,"author":{"gitID":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));"},{"lineNumber":181,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":182,"author":{"gitID":"-"},"content":"        if (!Email.isValidEmail(this.email)) {"},{"lineNumber":183,"author":{"gitID":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_EMAIL_CONSTRAINTS);"},{"lineNumber":184,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":185,"author":{"gitID":"-"},"content":"        final Email email \u003d new Email(this.email);"},{"lineNumber":186,"author":{"gitID":"-"},"content":""},{"lineNumber":187,"author":{"gitID":"-"},"content":"        if (this.address \u003d\u003d null) {"},{"lineNumber":188,"author":{"gitID":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));"},{"lineNumber":189,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":190,"author":{"gitID":"-"},"content":"        if (!Address.isValidAddress(this.address)) {"},{"lineNumber":191,"author":{"gitID":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_ADDRESS_CONSTRAINTS);"},{"lineNumber":192,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":193,"author":{"gitID":"-"},"content":"        final Address address \u003d new Address(this.address);"},{"lineNumber":194,"author":{"gitID":"-"},"content":""},{"lineNumber":195,"author":{"gitID":"kexiaowen"},"content":"        if (this.university \u003d\u003d null) {"},{"lineNumber":196,"author":{"gitID":"kexiaowen"},"content":"            throw new IllegalValueException("},{"lineNumber":197,"author":{"gitID":"kexiaowen"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, University.class.getSimpleName()));"},{"lineNumber":198,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":199,"author":{"gitID":"kexiaowen"},"content":"        if (!University.isValidUniversity(this.university)) {"},{"lineNumber":200,"author":{"gitID":"kexiaowen"},"content":"            throw new IllegalValueException(University.MESSAGE_UNIVERSITY_CONSTRAINTS);"},{"lineNumber":201,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":202,"author":{"gitID":"kexiaowen"},"content":"        final University university \u003d new University(this.university);"},{"lineNumber":203,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":204,"author":{"gitID":"mhq199657"},"content":"        if (this.expectedGraduationYear \u003d\u003d null) {"},{"lineNumber":205,"author":{"gitID":"mhq199657"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,"},{"lineNumber":206,"author":{"gitID":"mhq199657"},"content":"                    ExpectedGraduationYear.class.getSimpleName()));"},{"lineNumber":207,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":208,"author":{"gitID":"mhq199657"},"content":"        if (!ExpectedGraduationYear.isValidExpectedGraduationYear(this.expectedGraduationYear)) {"},{"lineNumber":209,"author":{"gitID":"mhq199657"},"content":"            throw new IllegalValueException(ExpectedGraduationYear.MESSAGE_EXPECTED_GRADUATION_YEAR_CONSTRAINTS);"},{"lineNumber":210,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":211,"author":{"gitID":"mhq199657"},"content":"        final ExpectedGraduationYear expectedGraduationYear \u003d new ExpectedGraduationYear(this.expectedGraduationYear);"},{"lineNumber":212,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":213,"author":{"gitID":"tanhengyeow"},"content":"        if (this.major \u003d\u003d null) {"},{"lineNumber":214,"author":{"gitID":"mhq199657"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,"},{"lineNumber":215,"author":{"gitID":"tanhengyeow"},"content":"                    Major.class.getSimpleName()));"},{"lineNumber":216,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":217,"author":{"gitID":"tanhengyeow"},"content":"        if (!Major.isValidMajor(this.major)) {"},{"lineNumber":218,"author":{"gitID":"tanhengyeow"},"content":"            throw new IllegalValueException(Major.MESSAGE_MAJOR_CONSTRAINTS);"},{"lineNumber":219,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":220,"author":{"gitID":"tanhengyeow"},"content":"        final Major major \u003d new Major(this.major);"},{"lineNumber":221,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":222,"author":{"gitID":"tanhengyeow"},"content":"        if (this.gradePointAverage \u003d\u003d null) {"},{"lineNumber":223,"author":{"gitID":"mhq199657"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,"},{"lineNumber":224,"author":{"gitID":"tanhengyeow"},"content":"                    GradePointAverage.class.getSimpleName()));"},{"lineNumber":225,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":226,"author":{"gitID":"tanhengyeow"},"content":"        if (!GradePointAverage.isValidGradePointAverage(this.gradePointAverage)) {"},{"lineNumber":227,"author":{"gitID":"tanhengyeow"},"content":"            throw new IllegalValueException(GradePointAverage.MESSAGE_GRADE_POINT_AVERAGE_CONSTRAINTS);"},{"lineNumber":228,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":229,"author":{"gitID":"tanhengyeow"},"content":"        final GradePointAverage gradePointAverage \u003d new GradePointAverage(this.gradePointAverage);"},{"lineNumber":230,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":231,"author":{"gitID":"kexiaowen"},"content":"        if (this.jobApplied \u003d\u003d null) {"},{"lineNumber":232,"author":{"gitID":"mhq199657"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,"},{"lineNumber":233,"author":{"gitID":"kexiaowen"},"content":"                    JobApplied.class.getSimpleName()));"},{"lineNumber":234,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":235,"author":{"gitID":"kexiaowen"},"content":"        if (!JobApplied.isValidJobApplied(this.jobApplied)) {"},{"lineNumber":236,"author":{"gitID":"kexiaowen"},"content":"            throw new IllegalValueException(JobApplied.MESSAGE_JOB_APPLIED_CONSTRAINTS);"},{"lineNumber":237,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":238,"author":{"gitID":"kexiaowen"},"content":"        final JobApplied jobApplied \u003d new JobApplied(this.jobApplied);"},{"lineNumber":239,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":240,"author":{"gitID":"mhq199657"},"content":"        if (this.status \u003d\u003d null) {"},{"lineNumber":241,"author":{"gitID":"mhq199657"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName()));"},{"lineNumber":242,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":243,"author":{"gitID":"mhq199657"},"content":"        if (!Status.isValidXmlStatus(status)) {"},{"lineNumber":244,"author":{"gitID":"mhq199657"},"content":"            throw new IllegalValueException(Status.MESSAGE_STATUS_CONSTRAINTS);"},{"lineNumber":245,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":246,"author":{"gitID":"mhq199657"},"content":"        final Status status \u003d new Status(this.status);"},{"lineNumber":247,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":248,"author":{"gitID":"kexiaowen"},"content":"        if (technicalSkillsScore \u003d\u003d null || communicationSkillsScore \u003d\u003d null"},{"lineNumber":249,"author":{"gitID":"kexiaowen"},"content":"                || problemSolvingSkillsScore \u003d\u003d null || experienceScore \u003d\u003d null) {"},{"lineNumber":250,"author":{"gitID":"kexiaowen"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Rating.class.getSimpleName()));"},{"lineNumber":251,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":252,"author":{"gitID":"kexiaowen"},"content":"        if (!Rating.isValidOrDefaultScore(Double.valueOf(technicalSkillsScore))"},{"lineNumber":253,"author":{"gitID":"kexiaowen"},"content":"                || !Rating.isValidOrDefaultScore(Double.valueOf(communicationSkillsScore))"},{"lineNumber":254,"author":{"gitID":"kexiaowen"},"content":"                || !Rating.isValidOrDefaultScore(Double.valueOf(problemSolvingSkillsScore))"},{"lineNumber":255,"author":{"gitID":"kexiaowen"},"content":"                || !Rating.isValidOrDefaultScore(Double.valueOf(experienceScore))) {"},{"lineNumber":256,"author":{"gitID":"kexiaowen"},"content":"            throw new IllegalValueException(Rating.MESSAGE_RATING_CONSTRAINTS);"},{"lineNumber":257,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":258,"author":{"gitID":"kexiaowen"},"content":"        final Rating rating \u003d new Rating(Double.valueOf(technicalSkillsScore), Double.valueOf(communicationSkillsScore),"},{"lineNumber":259,"author":{"gitID":"kexiaowen"},"content":"                Double.valueOf(problemSolvingSkillsScore), Double.valueOf(experienceScore));"},{"lineNumber":260,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":261,"author":{"gitID":"mhq199657"},"content":"        final Resume resume;"},{"lineNumber":262,"author":{"gitID":"mhq199657"},"content":"        if (!isNull(this.resume) \u0026\u0026 !Resume.isValidResume(this.resume)) {"},{"lineNumber":263,"author":{"gitID":"mhq199657"},"content":"            resume \u003d new Resume(null);"},{"lineNumber":264,"author":{"gitID":"mhq199657"},"content":"        } else {"},{"lineNumber":265,"author":{"gitID":"mhq199657"},"content":"            resume \u003d new Resume(this.resume, this.resume);"},{"lineNumber":266,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":267,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":268,"author":{"gitID":"Ang-YC"},"content":"        final ProfileImage profileImage;"},{"lineNumber":269,"author":{"gitID":"Ang-YC"},"content":"        if (!isNull(this.profileImage) \u0026\u0026 !ProfileImage.isValidFile(this.profileImage)) {"},{"lineNumber":270,"author":{"gitID":"Ang-YC"},"content":"            profileImage \u003d new ProfileImage(null);"},{"lineNumber":271,"author":{"gitID":"Ang-YC"},"content":"        } else {"},{"lineNumber":272,"author":{"gitID":"mhq199657"},"content":"            profileImage \u003d new ProfileImage(this.profileImage, this.profileImage);"},{"lineNumber":273,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":274,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":275,"author":{"gitID":"Ang-YC"},"content":"        final Comment comment;"},{"lineNumber":276,"author":{"gitID":"Ang-YC"},"content":"        if (!isNull(this.comment) \u0026\u0026 !Comment.isValidComment(this.comment)) {"},{"lineNumber":277,"author":{"gitID":"Ang-YC"},"content":"            comment \u003d new Comment(null);"},{"lineNumber":278,"author":{"gitID":"Ang-YC"},"content":"        } else {"},{"lineNumber":279,"author":{"gitID":"Ang-YC"},"content":"            comment \u003d new Comment(this.comment);"},{"lineNumber":280,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":281,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":282,"author":{"gitID":"Ang-YC"},"content":"        InterviewDate interviewDate \u003d new InterviewDate();"},{"lineNumber":283,"author":{"gitID":"Ang-YC"},"content":"        if (!isNull(this.interviewDate)) {"},{"lineNumber":284,"author":{"gitID":"Ang-YC"},"content":"            try {"},{"lineNumber":285,"author":{"gitID":"Ang-YC"},"content":"                interviewDate \u003d new InterviewDate(Long.parseLong(this.interviewDate, 10));"},{"lineNumber":286,"author":{"gitID":"Ang-YC"},"content":"            } catch (NumberFormatException nfe) {"},{"lineNumber":287,"author":{"gitID":"Ang-YC"},"content":"                throw new IllegalValueException(InterviewDate.MESSAGE_INTERVIEW_DATE_XML_ERROR);"},{"lineNumber":288,"author":{"gitID":"Ang-YC"},"content":"            }"},{"lineNumber":289,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":290,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":291,"author":{"gitID":"-"},"content":"        final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e(personTags);"},{"lineNumber":292,"author":{"gitID":"kexiaowen"},"content":"        return new Person(name, phone, email, address, university, expectedGraduationYear, major, gradePointAverage,"},{"lineNumber":293,"author":{"gitID":"kexiaowen"},"content":"                jobApplied, rating, resume, profileImage, comment, interviewDate, status, tags);"},{"lineNumber":294,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":295,"author":{"gitID":"-"},"content":""},{"lineNumber":296,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":297,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":298,"author":{"gitID":"-"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":299,"author":{"gitID":"-"},"content":"            return true;"},{"lineNumber":300,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":301,"author":{"gitID":"-"},"content":""},{"lineNumber":302,"author":{"gitID":"-"},"content":"        if (!(other instanceof XmlAdaptedPerson)) {"},{"lineNumber":303,"author":{"gitID":"-"},"content":"            return false;"},{"lineNumber":304,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":305,"author":{"gitID":"-"},"content":""},{"lineNumber":306,"author":{"gitID":"-"},"content":"        XmlAdaptedPerson otherPerson \u003d (XmlAdaptedPerson) other;"},{"lineNumber":307,"author":{"gitID":"-"},"content":"        return Objects.equals(name, otherPerson.name)"},{"lineNumber":308,"author":{"gitID":"-"},"content":"                \u0026\u0026 Objects.equals(phone, otherPerson.phone)"},{"lineNumber":309,"author":{"gitID":"-"},"content":"                \u0026\u0026 Objects.equals(email, otherPerson.email)"},{"lineNumber":310,"author":{"gitID":"-"},"content":"                \u0026\u0026 Objects.equals(address, otherPerson.address)"},{"lineNumber":311,"author":{"gitID":"kexiaowen"},"content":"                \u0026\u0026 Objects.equals(university, otherPerson.university)"},{"lineNumber":312,"author":{"gitID":"mhq199657"},"content":"                \u0026\u0026 Objects.equals(expectedGraduationYear, otherPerson.expectedGraduationYear)"},{"lineNumber":313,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 Objects.equals(major, otherPerson.major)"},{"lineNumber":314,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 Objects.equals(gradePointAverage, otherPerson.gradePointAverage)"},{"lineNumber":315,"author":{"gitID":"kexiaowen"},"content":"                \u0026\u0026 Objects.equals(jobApplied, otherPerson.jobApplied)"},{"lineNumber":316,"author":{"gitID":"Ang-YC"},"content":"                \u0026\u0026 Objects.equals(interviewDate, otherPerson.interviewDate)"},{"lineNumber":317,"author":{"gitID":"mhq199657"},"content":"                \u0026\u0026 Objects.equals(status, otherPerson.status)"},{"lineNumber":318,"author":{"gitID":"-"},"content":"                \u0026\u0026 tagged.equals(otherPerson.tagged);"},{"lineNumber":319,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":320,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"kexiaowen":65,"mhq199657":50,"-":139,"Ang-YC":40,"tanhengyeow":26}},{"path":"src/main/java/seedu/address/MainApp.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.Map;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import javafx.application.Application;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import javafx.application.Platform;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import javafx.stage.Stage;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Config;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.EventsCenter;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Version;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.ui.ExitAppRequestEvent;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.ConfigUtil;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.StringUtil;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.address.logic.Logic;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.address.logic.LogicManager;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.address.model.AddressBook;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"import seedu.address.model.util.SampleDataUtil;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"import seedu.address.storage.AddressBookStorage;"},{"lineNumber":30,"author":{"gitID":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;"},{"lineNumber":31,"author":{"gitID":"-"},"content":"import seedu.address.storage.Storage;"},{"lineNumber":32,"author":{"gitID":"-"},"content":"import seedu.address.storage.StorageManager;"},{"lineNumber":33,"author":{"gitID":"-"},"content":"import seedu.address.storage.UserPrefsStorage;"},{"lineNumber":34,"author":{"gitID":"-"},"content":"import seedu.address.storage.XmlAddressBookStorage;"},{"lineNumber":35,"author":{"gitID":"-"},"content":"import seedu.address.ui.Ui;"},{"lineNumber":36,"author":{"gitID":"-"},"content":"import seedu.address.ui.UiManager;"},{"lineNumber":37,"author":{"gitID":"-"},"content":""},{"lineNumber":38,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":39,"author":{"gitID":"-"},"content":" * The main entry point to the application."},{"lineNumber":40,"author":{"gitID":"-"},"content":" */"},{"lineNumber":41,"author":{"gitID":"-"},"content":"public class MainApp extends Application {"},{"lineNumber":42,"author":{"gitID":"-"},"content":""},{"lineNumber":43,"author":{"gitID":"Ang-YC"},"content":"    public static final Version VERSION \u003d new Version(1, 5, 0, false);"},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);"},{"lineNumber":46,"author":{"gitID":"-"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":"    protected Ui ui;"},{"lineNumber":48,"author":{"gitID":"-"},"content":"    protected Logic logic;"},{"lineNumber":49,"author":{"gitID":"-"},"content":"    protected Storage storage;"},{"lineNumber":50,"author":{"gitID":"-"},"content":"    protected Model model;"},{"lineNumber":51,"author":{"gitID":"-"},"content":"    protected Config config;"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    protected UserPrefs userPrefs;"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":""},{"lineNumber":55,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":56,"author":{"gitID":"-"},"content":"    public void init() throws Exception {"},{"lineNumber":57,"author":{"gitID":"Ang-YC"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing HR+ ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"},{"lineNumber":58,"author":{"gitID":"-"},"content":"        super.init();"},{"lineNumber":59,"author":{"gitID":"-"},"content":""},{"lineNumber":60,"author":{"gitID":"-"},"content":"        config \u003d initConfig(getApplicationParameter(\"config\"));"},{"lineNumber":61,"author":{"gitID":"-"},"content":""},{"lineNumber":62,"author":{"gitID":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        userPrefs \u003d initPrefs(userPrefsStorage);"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new XmlAddressBookStorage(userPrefs.getAddressBookFilePath());"},{"lineNumber":65,"author":{"gitID":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);"},{"lineNumber":66,"author":{"gitID":"-"},"content":""},{"lineNumber":67,"author":{"gitID":"-"},"content":"        initLogging(config);"},{"lineNumber":68,"author":{"gitID":"-"},"content":""},{"lineNumber":69,"author":{"gitID":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);"},{"lineNumber":70,"author":{"gitID":"-"},"content":""},{"lineNumber":71,"author":{"gitID":"-"},"content":"        logic \u003d new LogicManager(model);"},{"lineNumber":72,"author":{"gitID":"-"},"content":""},{"lineNumber":73,"author":{"gitID":"-"},"content":"        ui \u003d new UiManager(logic, config, userPrefs);"},{"lineNumber":74,"author":{"gitID":"-"},"content":""},{"lineNumber":75,"author":{"gitID":"-"},"content":"        initEventsCenter();"},{"lineNumber":76,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":77,"author":{"gitID":"-"},"content":""},{"lineNumber":78,"author":{"gitID":"-"},"content":"    private String getApplicationParameter(String parameterName) {"},{"lineNumber":79,"author":{"gitID":"-"},"content":"        Map\u003cString, String\u003e applicationParameters \u003d getParameters().getNamed();"},{"lineNumber":80,"author":{"gitID":"-"},"content":"        return applicationParameters.get(parameterName);"},{"lineNumber":81,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":82,"author":{"gitID":"-"},"content":""},{"lineNumber":83,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":84,"author":{"gitID":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e"},{"lineNumber":85,"author":{"gitID":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,"},{"lineNumber":86,"author":{"gitID":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book."},{"lineNumber":87,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":88,"author":{"gitID":"-"},"content":"    private Model initModelManager(Storage storage, UserPrefs userPrefs) {"},{"lineNumber":89,"author":{"gitID":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;"},{"lineNumber":90,"author":{"gitID":"-"},"content":"        ReadOnlyAddressBook initialData;"},{"lineNumber":91,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":92,"author":{"gitID":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();"},{"lineNumber":93,"author":{"gitID":"-"},"content":"            if (!addressBookOptional.isPresent()) {"},{"lineNumber":94,"author":{"gitID":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");"},{"lineNumber":95,"author":{"gitID":"-"},"content":"            }"},{"lineNumber":96,"author":{"gitID":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);"},{"lineNumber":97,"author":{"gitID":"-"},"content":"        } catch (DataConversionException e) {"},{"lineNumber":98,"author":{"gitID":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");"},{"lineNumber":99,"author":{"gitID":"-"},"content":"            initialData \u003d new AddressBook();"},{"lineNumber":100,"author":{"gitID":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":101,"author":{"gitID":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");"},{"lineNumber":102,"author":{"gitID":"-"},"content":"            initialData \u003d new AddressBook();"},{"lineNumber":103,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":104,"author":{"gitID":"-"},"content":""},{"lineNumber":105,"author":{"gitID":"-"},"content":"        return new ModelManager(initialData, userPrefs);"},{"lineNumber":106,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":107,"author":{"gitID":"-"},"content":""},{"lineNumber":108,"author":{"gitID":"-"},"content":"    private void initLogging(Config config) {"},{"lineNumber":109,"author":{"gitID":"-"},"content":"        LogsCenter.init(config);"},{"lineNumber":110,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":111,"author":{"gitID":"-"},"content":""},{"lineNumber":112,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":113,"author":{"gitID":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e"},{"lineNumber":114,"author":{"gitID":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead"},{"lineNumber":115,"author":{"gitID":"-"},"content":"     * if {@code configFilePath} is null."},{"lineNumber":116,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":117,"author":{"gitID":"-"},"content":"    protected Config initConfig(String configFilePath) {"},{"lineNumber":118,"author":{"gitID":"-"},"content":"        Config initializedConfig;"},{"lineNumber":119,"author":{"gitID":"-"},"content":"        String configFilePathUsed;"},{"lineNumber":120,"author":{"gitID":"-"},"content":""},{"lineNumber":121,"author":{"gitID":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;"},{"lineNumber":122,"author":{"gitID":"-"},"content":""},{"lineNumber":123,"author":{"gitID":"-"},"content":"        if (configFilePath !\u003d null) {"},{"lineNumber":124,"author":{"gitID":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);"},{"lineNumber":125,"author":{"gitID":"-"},"content":"            configFilePathUsed \u003d configFilePath;"},{"lineNumber":126,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":127,"author":{"gitID":"-"},"content":""},{"lineNumber":128,"author":{"gitID":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);"},{"lineNumber":129,"author":{"gitID":"-"},"content":""},{"lineNumber":130,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":131,"author":{"gitID":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);"},{"lineNumber":132,"author":{"gitID":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());"},{"lineNumber":133,"author":{"gitID":"-"},"content":"        } catch (DataConversionException e) {"},{"lineNumber":134,"author":{"gitID":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \""},{"lineNumber":135,"author":{"gitID":"-"},"content":"                    + \"Using default config properties\");"},{"lineNumber":136,"author":{"gitID":"-"},"content":"            initializedConfig \u003d new Config();"},{"lineNumber":137,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":138,"author":{"gitID":"-"},"content":""},{"lineNumber":139,"author":{"gitID":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields"},{"lineNumber":140,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":141,"author":{"gitID":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);"},{"lineNumber":142,"author":{"gitID":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":143,"author":{"gitID":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));"},{"lineNumber":144,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":145,"author":{"gitID":"-"},"content":"        return initializedConfig;"},{"lineNumber":146,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":147,"author":{"gitID":"-"},"content":""},{"lineNumber":148,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":149,"author":{"gitID":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,"},{"lineNumber":150,"author":{"gitID":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when"},{"lineNumber":151,"author":{"gitID":"-"},"content":"     * reading from the file."},{"lineNumber":152,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":153,"author":{"gitID":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {"},{"lineNumber":154,"author":{"gitID":"-"},"content":"        String prefsFilePath \u003d storage.getUserPrefsFilePath();"},{"lineNumber":155,"author":{"gitID":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);"},{"lineNumber":156,"author":{"gitID":"-"},"content":""},{"lineNumber":157,"author":{"gitID":"-"},"content":"        UserPrefs initializedPrefs;"},{"lineNumber":158,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":159,"author":{"gitID":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();"},{"lineNumber":160,"author":{"gitID":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());"},{"lineNumber":161,"author":{"gitID":"-"},"content":"        } catch (DataConversionException e) {"},{"lineNumber":162,"author":{"gitID":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \""},{"lineNumber":163,"author":{"gitID":"-"},"content":"                    + \"Using default user prefs\");"},{"lineNumber":164,"author":{"gitID":"-"},"content":"            initializedPrefs \u003d new UserPrefs();"},{"lineNumber":165,"author":{"gitID":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":166,"author":{"gitID":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");"},{"lineNumber":167,"author":{"gitID":"-"},"content":"            initializedPrefs \u003d new UserPrefs();"},{"lineNumber":168,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":169,"author":{"gitID":"-"},"content":""},{"lineNumber":170,"author":{"gitID":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields"},{"lineNumber":171,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":172,"author":{"gitID":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);"},{"lineNumber":173,"author":{"gitID":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":174,"author":{"gitID":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));"},{"lineNumber":175,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":176,"author":{"gitID":"-"},"content":""},{"lineNumber":177,"author":{"gitID":"-"},"content":"        return initializedPrefs;"},{"lineNumber":178,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":179,"author":{"gitID":"-"},"content":""},{"lineNumber":180,"author":{"gitID":"-"},"content":"    private void initEventsCenter() {"},{"lineNumber":181,"author":{"gitID":"-"},"content":"        EventsCenter.getInstance().registerHandler(this);"},{"lineNumber":182,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":183,"author":{"gitID":"-"},"content":""},{"lineNumber":184,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":185,"author":{"gitID":"-"},"content":"    public void start(Stage primaryStage) {"},{"lineNumber":186,"author":{"gitID":"Ang-YC"},"content":"        logger.info(\"Starting HR+ \" + MainApp.VERSION);"},{"lineNumber":187,"author":{"gitID":"-"},"content":"        ui.start(primaryStage);"},{"lineNumber":188,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":189,"author":{"gitID":"-"},"content":""},{"lineNumber":190,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":191,"author":{"gitID":"-"},"content":"    public void stop() {"},{"lineNumber":192,"author":{"gitID":"Ang-YC"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping HR+ ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"},{"lineNumber":193,"author":{"gitID":"-"},"content":"        ui.stop();"},{"lineNumber":194,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":195,"author":{"gitID":"-"},"content":"            storage.saveUserPrefs(userPrefs);"},{"lineNumber":196,"author":{"gitID":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":197,"author":{"gitID":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));"},{"lineNumber":198,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":199,"author":{"gitID":"mhq199657"},"content":"        logic.cleanUnusedResumeAndProfilePic(userPrefs.getAddressBookFilePath());"},{"lineNumber":200,"author":{"gitID":"-"},"content":"        Platform.exit();"},{"lineNumber":201,"author":{"gitID":"-"},"content":"        System.exit(0);"},{"lineNumber":202,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":203,"author":{"gitID":"-"},"content":""},{"lineNumber":204,"author":{"gitID":"-"},"content":"    @Subscribe"},{"lineNumber":205,"author":{"gitID":"-"},"content":"    public void handleExitAppRequestEvent(ExitAppRequestEvent event) {"},{"lineNumber":206,"author":{"gitID":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":207,"author":{"gitID":"-"},"content":"        this.stop();"},{"lineNumber":208,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":209,"author":{"gitID":"-"},"content":""},{"lineNumber":210,"author":{"gitID":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":211,"author":{"gitID":"-"},"content":"        launch(args);"},{"lineNumber":212,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":213,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"mhq199657":1,"-":208,"Ang-YC":4}},{"path":"src/main/java/seedu/address/model/util/InterviewDateUtil.java","lines":[{"lineNumber":1,"author":{"gitID":"mhq199657"},"content":"package seedu.address.model.util;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":5,"author":{"gitID":"Ang-YC"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitID":"Ang-YC"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitID":"mhq199657"},"content":"import java.time.format.DateTimeFormatterBuilder;"},{"lineNumber":8,"author":{"gitID":"mhq199657"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":9,"author":{"gitID":"mhq199657"},"content":"import java.time.format.ResolverStyle;"},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":"import java.time.temporal.ChronoField;"},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":"//@@author mhq199657"},{"lineNumber":12,"author":{"gitID":"mhq199657"},"content":"/**"},{"lineNumber":13,"author":{"gitID":"mhq199657"},"content":" * A utility class responsible of forming LocalDateTime from a string obtained in filter command"},{"lineNumber":14,"author":{"gitID":"mhq199657"},"content":" */"},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":"public class InterviewDateUtil {"},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":"    public static final String MESSAGE_INTERVIEW_DATE_CONSTRAINT \u003d"},{"lineNumber":17,"author":{"gitID":"mhq199657"},"content":"            \"Interview date should be of the format yyyyMMdd. Example: 20170323. Month and day must be valid.\";"},{"lineNumber":18,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"uuuuMMdd\");"},{"lineNumber":20,"author":{"gitID":"mhq199657"},"content":"    private static final DateTimeFormatter LOWER_DATETIME_FORMATTER \u003d"},{"lineNumber":21,"author":{"gitID":"mhq199657"},"content":"            new DateTimeFormatterBuilder().append(DATE_FORMATTER)"},{"lineNumber":22,"author":{"gitID":"mhq199657"},"content":"                    .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)"},{"lineNumber":23,"author":{"gitID":"mhq199657"},"content":"                    .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)"},{"lineNumber":24,"author":{"gitID":"mhq199657"},"content":"                    .parseDefaulting(ChronoField.SECOND_OF_MINUTE, 0)"},{"lineNumber":25,"author":{"gitID":"mhq199657"},"content":"                    .toFormatter()"},{"lineNumber":26,"author":{"gitID":"mhq199657"},"content":"                    .withResolverStyle(ResolverStyle.STRICT);"},{"lineNumber":27,"author":{"gitID":"mhq199657"},"content":"    private static final DateTimeFormatter HIGHER_DATETIME_FORMATTER \u003d"},{"lineNumber":28,"author":{"gitID":"mhq199657"},"content":"            new DateTimeFormatterBuilder().append(DATE_FORMATTER)"},{"lineNumber":29,"author":{"gitID":"mhq199657"},"content":"                    .parseDefaulting(ChronoField.HOUR_OF_DAY, 23)"},{"lineNumber":30,"author":{"gitID":"mhq199657"},"content":"                    .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 59)"},{"lineNumber":31,"author":{"gitID":"mhq199657"},"content":"                    .parseDefaulting(ChronoField.SECOND_OF_MINUTE, 59)"},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":"                    .toFormatter()"},{"lineNumber":33,"author":{"gitID":"mhq199657"},"content":"                    .withResolverStyle(ResolverStyle.STRICT);"},{"lineNumber":34,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":35,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":36,"author":{"gitID":"mhq199657"},"content":"     * Check whether the input parameter are 8 numbers which is a prerequisite of uuuuMMdd format"},{"lineNumber":37,"author":{"gitID":"mhq199657"},"content":"     * @param test"},{"lineNumber":38,"author":{"gitID":"mhq199657"},"content":"     * @return validity of test"},{"lineNumber":39,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":40,"author":{"gitID":"mhq199657"},"content":"    public static boolean isValidInterviewDate(String test) {"},{"lineNumber":41,"author":{"gitID":"mhq199657"},"content":"        requireNonNull(test);"},{"lineNumber":42,"author":{"gitID":"mhq199657"},"content":"        return test.matches(\"^[0-9]{8}$\");"},{"lineNumber":43,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":45,"author":{"gitID":"mhq199657"},"content":"    public static LocalDateTime formLowerInterviewDateTime(String yyyyMMdd) throws DateTimeParseException {"},{"lineNumber":46,"author":{"gitID":"mhq199657"},"content":"        return LocalDateTime.parse(yyyyMMdd, LOWER_DATETIME_FORMATTER);"},{"lineNumber":47,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":48,"author":{"gitID":"mhq199657"},"content":"    public static LocalDateTime formHigherInterviewDateTime(String yyyyMMdd) throws DateTimeParseException {"},{"lineNumber":49,"author":{"gitID":"mhq199657"},"content":"        return LocalDateTime.parse(yyyyMMdd, HIGHER_DATETIME_FORMATTER);"},{"lineNumber":50,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":51,"author":{"gitID":"mhq199657"},"content":"}"}],"authorContributionMap":{"mhq199657":46,"-":2,"Ang-YC":3}},{"path":"src/main/java/seedu/address/logic/commands/RatingEditCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMUNICATION_SKILLS_SCORE;"},{"lineNumber":5,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXPERIENCE_SCORE;"},{"lineNumber":6,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PROBLEM_SOLVING_SKILLS_SCORE;"},{"lineNumber":7,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TECHNICAL_SKILLS_SCORE;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;"},{"lineNumber":9,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":10,"author":{"gitID":"kexiaowen"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Messages;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":18,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.Rating;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;"},{"lineNumber":21,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":22,"author":{"gitID":"kexiaowen"},"content":"//@@author kexiaowen"},{"lineNumber":23,"author":{"gitID":"kexiaowen"},"content":"/**"},{"lineNumber":24,"author":{"gitID":"kexiaowen"},"content":" * Edit a student\u0027s rating."},{"lineNumber":25,"author":{"gitID":"kexiaowen"},"content":" */"},{"lineNumber":26,"author":{"gitID":"kexiaowen"},"content":"public class RatingEditCommand extends UndoableCommand {"},{"lineNumber":27,"author":{"gitID":"kexiaowen"},"content":"    public static final String COMMAND_WORD \u003d \"rating-edit\";"},{"lineNumber":28,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":29,"author":{"gitID":"kexiaowen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the ratings of the person identified \""},{"lineNumber":30,"author":{"gitID":"kexiaowen"},"content":"            + \"by the index number used in the last person listing. \""},{"lineNumber":31,"author":{"gitID":"kexiaowen"},"content":"            + \"Existing values will be overwritten by the input values.\\n\""},{"lineNumber":32,"author":{"gitID":"kexiaowen"},"content":"            + \"Parameters: INDEX (must be a positive integer) \""},{"lineNumber":33,"author":{"gitID":"kexiaowen"},"content":"            + \"[\" + PREFIX_TECHNICAL_SKILLS_SCORE + \"TECHNICAL SKILLS SCORE] \""},{"lineNumber":34,"author":{"gitID":"kexiaowen"},"content":"            + \"[\" + PREFIX_COMMUNICATION_SKILLS_SCORE + \"COMMUNICATION SKILLS SCORE] \""},{"lineNumber":35,"author":{"gitID":"kexiaowen"},"content":"            + \"[\" + PREFIX_PROBLEM_SOLVING_SKILLS_SCORE + \"PROBLEM SOLVING SKILLS SCORE] \""},{"lineNumber":36,"author":{"gitID":"kexiaowen"},"content":"            + \"[\" + PREFIX_EXPERIENCE_SCORE + \"EXPERIENCE SCORE] \\n\""},{"lineNumber":37,"author":{"gitID":"kexiaowen"},"content":"            + \"Note: 1. At least one score must be edited.\\n\""},{"lineNumber":38,"author":{"gitID":"kexiaowen"},"content":"            + \"2. The scores must be numbers in the range of 1 to 5 (inclusive).\\n\""},{"lineNumber":39,"author":{"gitID":"kexiaowen"},"content":"            + \"3. Scores are rounded to two decimal places.\\n\""},{"lineNumber":40,"author":{"gitID":"kexiaowen"},"content":"            + \"EXAMPLE: \" + COMMAND_WORD + \" 1 \""},{"lineNumber":41,"author":{"gitID":"kexiaowen"},"content":"            + PREFIX_TECHNICAL_SKILLS_SCORE + \"5 \""},{"lineNumber":42,"author":{"gitID":"kexiaowen"},"content":"            + PREFIX_EXPERIENCE_SCORE + \"3.5\";"},{"lineNumber":43,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":44,"author":{"gitID":"kexiaowen"},"content":"    public static final String MESSAGE_EDIT_RATING_SUCCESS \u003d \"Edited rating of %1$s: \\n\""},{"lineNumber":45,"author":{"gitID":"kexiaowen"},"content":"            + \"Technical skills: %2$s, Communication skills: %3$s, \""},{"lineNumber":46,"author":{"gitID":"kexiaowen"},"content":"            + \"Problem solving skills: %4$s, Experience: %5$s \\n\""},{"lineNumber":47,"author":{"gitID":"kexiaowen"},"content":"            + \"Overall: %6$s\";"},{"lineNumber":48,"author":{"gitID":"kexiaowen"},"content":"    public static final String MESSAGE_PERSON_NOT_RATED \u003d \"You have not rated %1$s.\\n\""},{"lineNumber":49,"author":{"gitID":"kexiaowen"},"content":"            + \"Use the rate command to assign new rating scores to the student.\";"},{"lineNumber":50,"author":{"gitID":"kexiaowen"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d"},{"lineNumber":51,"author":{"gitID":"kexiaowen"},"content":"            \"At least one rating score to edit must be provided.\";"},{"lineNumber":52,"author":{"gitID":"kexiaowen"},"content":"    public static final String MESSAGE_MISSING_INDEX \u003d"},{"lineNumber":53,"author":{"gitID":"kexiaowen"},"content":"            \"Please provide the INDEX of the student to be rated.\";"},{"lineNumber":54,"author":{"gitID":"kexiaowen"},"content":"    public static final String MESSAGE_EMPTY_SCORE \u003d"},{"lineNumber":55,"author":{"gitID":"kexiaowen"},"content":"            \"Score(s) must be provided and should not be empty.\";"},{"lineNumber":56,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":57,"author":{"gitID":"kexiaowen"},"content":"    private final Index index;"},{"lineNumber":58,"author":{"gitID":"kexiaowen"},"content":"    private final EditRatingDescriptor editRatingDescriptor;"},{"lineNumber":59,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":60,"author":{"gitID":"kexiaowen"},"content":"    private Person personToEdit;"},{"lineNumber":61,"author":{"gitID":"kexiaowen"},"content":"    private Person editedPerson;"},{"lineNumber":62,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":63,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":64,"author":{"gitID":"kexiaowen"},"content":"     * @param index of the person in the filtered person list to rate"},{"lineNumber":65,"author":{"gitID":"kexiaowen"},"content":"     * @param editRatingDescriptor details to edit the person\u0027s rating with"},{"lineNumber":66,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":67,"author":{"gitID":"kexiaowen"},"content":"    public RatingEditCommand(Index index, EditRatingDescriptor editRatingDescriptor) {"},{"lineNumber":68,"author":{"gitID":"kexiaowen"},"content":"        requireNonNull(index);"},{"lineNumber":69,"author":{"gitID":"kexiaowen"},"content":"        requireNonNull(editRatingDescriptor);"},{"lineNumber":70,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":71,"author":{"gitID":"kexiaowen"},"content":"        this.index \u003d index;"},{"lineNumber":72,"author":{"gitID":"kexiaowen"},"content":"        this.editRatingDescriptor \u003d new EditRatingDescriptor(editRatingDescriptor);"},{"lineNumber":73,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":74,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":75,"author":{"gitID":"kexiaowen"},"content":"    @Override"},{"lineNumber":76,"author":{"gitID":"kexiaowen"},"content":"    public CommandResult executeUndoableCommand() {"},{"lineNumber":77,"author":{"gitID":"kexiaowen"},"content":"        requireNonNull(personToEdit);"},{"lineNumber":78,"author":{"gitID":"kexiaowen"},"content":"        requireNonNull(editedPerson);"},{"lineNumber":79,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":80,"author":{"gitID":"kexiaowen"},"content":"        try {"},{"lineNumber":81,"author":{"gitID":"kexiaowen"},"content":"            model.updatePerson(personToEdit, editedPerson);"},{"lineNumber":82,"author":{"gitID":"kexiaowen"},"content":"        } catch (DuplicatePersonException dpe) {"},{"lineNumber":83,"author":{"gitID":"kexiaowen"},"content":"            throw new AssertionError(\"Changing target person\u0027s rating should not result in a duplicate\");"},{"lineNumber":84,"author":{"gitID":"kexiaowen"},"content":"        } catch (PersonNotFoundException pnfe) {"},{"lineNumber":85,"author":{"gitID":"kexiaowen"},"content":"            throw new AssertionError(\"The target person cannot be missing\");"},{"lineNumber":86,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":87,"author":{"gitID":"kexiaowen"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);"},{"lineNumber":88,"author":{"gitID":"kexiaowen"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_RATING_SUCCESS, editedPerson.getName(),"},{"lineNumber":89,"author":{"gitID":"kexiaowen"},"content":"                editedPerson.getRating().getTechnicalSkillsScore(),"},{"lineNumber":90,"author":{"gitID":"kexiaowen"},"content":"                editedPerson.getRating().getCommunicationSkillsScore(),"},{"lineNumber":91,"author":{"gitID":"kexiaowen"},"content":"                editedPerson.getRating().getProblemSolvingSkillsScore(),"},{"lineNumber":92,"author":{"gitID":"kexiaowen"},"content":"                editedPerson.getRating().getExperienceScore(),"},{"lineNumber":93,"author":{"gitID":"kexiaowen"},"content":"                editedPerson.getRating().getOverallScore()));"},{"lineNumber":94,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":95,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":96,"author":{"gitID":"kexiaowen"},"content":"    @Override"},{"lineNumber":97,"author":{"gitID":"kexiaowen"},"content":"    protected void preprocessUndoableCommand() throws CommandException {"},{"lineNumber":98,"author":{"gitID":"kexiaowen"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();"},{"lineNumber":99,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":100,"author":{"gitID":"kexiaowen"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {"},{"lineNumber":101,"author":{"gitID":"kexiaowen"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"},{"lineNumber":102,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":103,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":104,"author":{"gitID":"kexiaowen"},"content":"        personToEdit \u003d lastShownList.get(index.getZeroBased());"},{"lineNumber":105,"author":{"gitID":"kexiaowen"},"content":"        if (personToEdit.getRating().getOverallScore() \u003d\u003d Rating.DEFAULT_SCORE) {"},{"lineNumber":106,"author":{"gitID":"kexiaowen"},"content":"            throw new CommandException(String.format(MESSAGE_PERSON_NOT_RATED, personToEdit.getName()));"},{"lineNumber":107,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":108,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":109,"author":{"gitID":"kexiaowen"},"content":"        editedPerson \u003d createRatedPerson(personToEdit, editRatingDescriptor);"},{"lineNumber":110,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":111,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":112,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":113,"author":{"gitID":"kexiaowen"},"content":"     * Creates and returns a {@code Person} with the details of {@code rating}"},{"lineNumber":114,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":115,"author":{"gitID":"kexiaowen"},"content":"    private static Person createRatedPerson(Person personToEdit, EditRatingDescriptor editRatingDescriptor) {"},{"lineNumber":116,"author":{"gitID":"kexiaowen"},"content":"        assert personToEdit !\u003d null;"},{"lineNumber":117,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":118,"author":{"gitID":"kexiaowen"},"content":"        double technicalSkillsScore;"},{"lineNumber":119,"author":{"gitID":"kexiaowen"},"content":"        double communicationSkillsScore;"},{"lineNumber":120,"author":{"gitID":"kexiaowen"},"content":"        double problemSolvingSkillsScore;"},{"lineNumber":121,"author":{"gitID":"kexiaowen"},"content":"        double experienceScore;"},{"lineNumber":122,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":123,"author":{"gitID":"kexiaowen"},"content":"        if (editRatingDescriptor.isTechnicalSkillsScoreEdited()) {"},{"lineNumber":124,"author":{"gitID":"kexiaowen"},"content":"            technicalSkillsScore \u003d editRatingDescriptor.getTechnicalSkillsScore().get();"},{"lineNumber":125,"author":{"gitID":"kexiaowen"},"content":"        } else {"},{"lineNumber":126,"author":{"gitID":"kexiaowen"},"content":"            technicalSkillsScore \u003d personToEdit.getRating().technicalSkillsScore;"},{"lineNumber":127,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":128,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":129,"author":{"gitID":"kexiaowen"},"content":"        if (editRatingDescriptor.isCommunicationSkillsScoreEdited()) {"},{"lineNumber":130,"author":{"gitID":"kexiaowen"},"content":"            communicationSkillsScore \u003d editRatingDescriptor.getCommunicationSkillsScore().get();"},{"lineNumber":131,"author":{"gitID":"kexiaowen"},"content":"        } else {"},{"lineNumber":132,"author":{"gitID":"kexiaowen"},"content":"            communicationSkillsScore \u003d personToEdit.getRating().communicationSkillsScore;"},{"lineNumber":133,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":134,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":135,"author":{"gitID":"kexiaowen"},"content":"        if (editRatingDescriptor.isProblemSolvingSkillsScoreEdited()) {"},{"lineNumber":136,"author":{"gitID":"kexiaowen"},"content":"            problemSolvingSkillsScore \u003d editRatingDescriptor.getProblemSolvingSkillsScore().get();"},{"lineNumber":137,"author":{"gitID":"kexiaowen"},"content":"        } else {"},{"lineNumber":138,"author":{"gitID":"kexiaowen"},"content":"            problemSolvingSkillsScore \u003d personToEdit.getRating().problemSolvingSkillsScore;"},{"lineNumber":139,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":140,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":141,"author":{"gitID":"kexiaowen"},"content":"        if (editRatingDescriptor.isExperienceScoreEdited()) {"},{"lineNumber":142,"author":{"gitID":"kexiaowen"},"content":"            experienceScore \u003d editRatingDescriptor.getExperienceScore().get();"},{"lineNumber":143,"author":{"gitID":"kexiaowen"},"content":"        } else {"},{"lineNumber":144,"author":{"gitID":"kexiaowen"},"content":"            experienceScore \u003d personToEdit.getRating().experienceScore;"},{"lineNumber":145,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":146,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":147,"author":{"gitID":"kexiaowen"},"content":"        Rating rating \u003d new Rating(technicalSkillsScore, communicationSkillsScore,"},{"lineNumber":148,"author":{"gitID":"kexiaowen"},"content":"                problemSolvingSkillsScore, experienceScore);"},{"lineNumber":149,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":150,"author":{"gitID":"kexiaowen"},"content":"        return new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),"},{"lineNumber":151,"author":{"gitID":"kexiaowen"},"content":"                personToEdit.getAddress(), personToEdit.getUniversity(), personToEdit.getExpectedGraduationYear(),"},{"lineNumber":152,"author":{"gitID":"kexiaowen"},"content":"                personToEdit.getMajor(), personToEdit.getGradePointAverage(), personToEdit.getJobApplied(),"},{"lineNumber":153,"author":{"gitID":"kexiaowen"},"content":"                rating, personToEdit.getResume(), personToEdit.getProfileImage(), personToEdit.getComment(),"},{"lineNumber":154,"author":{"gitID":"kexiaowen"},"content":"                personToEdit.getInterviewDate(), personToEdit.getStatus(), personToEdit.getTags());"},{"lineNumber":155,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":156,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":157,"author":{"gitID":"kexiaowen"},"content":"    @Override"},{"lineNumber":158,"author":{"gitID":"kexiaowen"},"content":"    public boolean equals(Object other) {"},{"lineNumber":159,"author":{"gitID":"kexiaowen"},"content":"        // short circuit if same object"},{"lineNumber":160,"author":{"gitID":"kexiaowen"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":161,"author":{"gitID":"kexiaowen"},"content":"            return true;"},{"lineNumber":162,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":163,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":164,"author":{"gitID":"kexiaowen"},"content":"        // instanceof handles nulls"},{"lineNumber":165,"author":{"gitID":"kexiaowen"},"content":"        if (!(other instanceof RatingEditCommand)) {"},{"lineNumber":166,"author":{"gitID":"kexiaowen"},"content":"            return false;"},{"lineNumber":167,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":168,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":169,"author":{"gitID":"kexiaowen"},"content":"        // state check"},{"lineNumber":170,"author":{"gitID":"kexiaowen"},"content":"        RatingEditCommand e \u003d (RatingEditCommand) other;"},{"lineNumber":171,"author":{"gitID":"kexiaowen"},"content":"        return index.equals(e.index)"},{"lineNumber":172,"author":{"gitID":"kexiaowen"},"content":"                \u0026\u0026 editRatingDescriptor.equals(e.editRatingDescriptor)"},{"lineNumber":173,"author":{"gitID":"kexiaowen"},"content":"                \u0026\u0026 Objects.equals(personToEdit, e.personToEdit);"},{"lineNumber":174,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":175,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":176,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":177,"author":{"gitID":"kexiaowen"},"content":"     * Stores the details to edit the rating with. Each non-empty field value will replace the"},{"lineNumber":178,"author":{"gitID":"kexiaowen"},"content":"     * corresponding field value of the rating."},{"lineNumber":179,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":180,"author":{"gitID":"kexiaowen"},"content":"    public static class EditRatingDescriptor {"},{"lineNumber":181,"author":{"gitID":"kexiaowen"},"content":"        private double technicalSkillsScore \u003d Rating.DEFAULT_SCORE;"},{"lineNumber":182,"author":{"gitID":"kexiaowen"},"content":"        private double communicationSkillsScore \u003d Rating.DEFAULT_SCORE;"},{"lineNumber":183,"author":{"gitID":"kexiaowen"},"content":"        private double problemSolvingSkillsScore \u003d Rating.DEFAULT_SCORE;"},{"lineNumber":184,"author":{"gitID":"kexiaowen"},"content":"        private double experienceScore \u003d Rating.DEFAULT_SCORE;"},{"lineNumber":185,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":186,"author":{"gitID":"kexiaowen"},"content":"        public EditRatingDescriptor() {}"},{"lineNumber":187,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":188,"author":{"gitID":"kexiaowen"},"content":"        /**"},{"lineNumber":189,"author":{"gitID":"kexiaowen"},"content":"         * Copy constructor."},{"lineNumber":190,"author":{"gitID":"kexiaowen"},"content":"         */"},{"lineNumber":191,"author":{"gitID":"kexiaowen"},"content":"        public EditRatingDescriptor(EditRatingDescriptor toCopy) {"},{"lineNumber":192,"author":{"gitID":"kexiaowen"},"content":"            setTechnicalSkillsScore(toCopy.technicalSkillsScore);"},{"lineNumber":193,"author":{"gitID":"kexiaowen"},"content":"            setCommunicationSkillsScore(toCopy.communicationSkillsScore);"},{"lineNumber":194,"author":{"gitID":"kexiaowen"},"content":"            setProblemSolvingSkillsScore(toCopy.problemSolvingSkillsScore);"},{"lineNumber":195,"author":{"gitID":"kexiaowen"},"content":"            setExperienceScore(toCopy.experienceScore);"},{"lineNumber":196,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":197,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":198,"author":{"gitID":"kexiaowen"},"content":"        /**"},{"lineNumber":199,"author":{"gitID":"kexiaowen"},"content":"         * Returns true if at least one field is edited."},{"lineNumber":200,"author":{"gitID":"kexiaowen"},"content":"         */"},{"lineNumber":201,"author":{"gitID":"kexiaowen"},"content":"        public boolean isAnyFieldEdited() {"},{"lineNumber":202,"author":{"gitID":"kexiaowen"},"content":"            return isTechnicalSkillsScoreEdited() || isCommunicationSkillsScoreEdited()"},{"lineNumber":203,"author":{"gitID":"kexiaowen"},"content":"                    || isProblemSolvingSkillsScoreEdited() || isExperienceScoreEdited();"},{"lineNumber":204,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":205,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":206,"author":{"gitID":"kexiaowen"},"content":"        /**"},{"lineNumber":207,"author":{"gitID":"kexiaowen"},"content":"         * Returns true if technical skills score is edited."},{"lineNumber":208,"author":{"gitID":"kexiaowen"},"content":"         */"},{"lineNumber":209,"author":{"gitID":"kexiaowen"},"content":"        public boolean isTechnicalSkillsScoreEdited() {"},{"lineNumber":210,"author":{"gitID":"kexiaowen"},"content":"            return technicalSkillsScore !\u003d Rating.DEFAULT_SCORE;"},{"lineNumber":211,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":212,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":213,"author":{"gitID":"kexiaowen"},"content":"        /**"},{"lineNumber":214,"author":{"gitID":"kexiaowen"},"content":"         * Returns true if communication skills score is edited."},{"lineNumber":215,"author":{"gitID":"kexiaowen"},"content":"         */"},{"lineNumber":216,"author":{"gitID":"kexiaowen"},"content":"        public boolean isCommunicationSkillsScoreEdited() {"},{"lineNumber":217,"author":{"gitID":"kexiaowen"},"content":"            return communicationSkillsScore !\u003d Rating.DEFAULT_SCORE;"},{"lineNumber":218,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":219,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":220,"author":{"gitID":"kexiaowen"},"content":"        /**"},{"lineNumber":221,"author":{"gitID":"kexiaowen"},"content":"         * Returns true if problem solving skills score is edited."},{"lineNumber":222,"author":{"gitID":"kexiaowen"},"content":"         */"},{"lineNumber":223,"author":{"gitID":"kexiaowen"},"content":"        public boolean isProblemSolvingSkillsScoreEdited() {"},{"lineNumber":224,"author":{"gitID":"kexiaowen"},"content":"            return problemSolvingSkillsScore !\u003d Rating.DEFAULT_SCORE;"},{"lineNumber":225,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":226,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":227,"author":{"gitID":"kexiaowen"},"content":"        /**"},{"lineNumber":228,"author":{"gitID":"kexiaowen"},"content":"         * Returns true if experience score is edited."},{"lineNumber":229,"author":{"gitID":"kexiaowen"},"content":"         */"},{"lineNumber":230,"author":{"gitID":"kexiaowen"},"content":"        public boolean isExperienceScoreEdited() {"},{"lineNumber":231,"author":{"gitID":"kexiaowen"},"content":"            return experienceScore !\u003d Rating.DEFAULT_SCORE;"},{"lineNumber":232,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":233,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":234,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":235,"author":{"gitID":"kexiaowen"},"content":"        public void setTechnicalSkillsScore(double technicalSkillsScore) {"},{"lineNumber":236,"author":{"gitID":"kexiaowen"},"content":"            this.technicalSkillsScore \u003d technicalSkillsScore;"},{"lineNumber":237,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":238,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":239,"author":{"gitID":"kexiaowen"},"content":"        public Optional\u003cDouble\u003e getTechnicalSkillsScore() {"},{"lineNumber":240,"author":{"gitID":"kexiaowen"},"content":"            return Optional.ofNullable(technicalSkillsScore);"},{"lineNumber":241,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":242,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":243,"author":{"gitID":"kexiaowen"},"content":"        public void setCommunicationSkillsScore(double communicationSkillsScore) {"},{"lineNumber":244,"author":{"gitID":"kexiaowen"},"content":"            this.communicationSkillsScore \u003d communicationSkillsScore;"},{"lineNumber":245,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":246,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":247,"author":{"gitID":"kexiaowen"},"content":"        public Optional\u003cDouble\u003e getCommunicationSkillsScore() {"},{"lineNumber":248,"author":{"gitID":"kexiaowen"},"content":"            return Optional.ofNullable(communicationSkillsScore);"},{"lineNumber":249,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":250,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":251,"author":{"gitID":"kexiaowen"},"content":"        public void setProblemSolvingSkillsScore(double problemSolvingSkillsScore) {"},{"lineNumber":252,"author":{"gitID":"kexiaowen"},"content":"            this.problemSolvingSkillsScore \u003d problemSolvingSkillsScore;"},{"lineNumber":253,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":254,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":255,"author":{"gitID":"kexiaowen"},"content":"        public Optional\u003cDouble\u003e getProblemSolvingSkillsScore() {"},{"lineNumber":256,"author":{"gitID":"kexiaowen"},"content":"            return Optional.ofNullable(problemSolvingSkillsScore);"},{"lineNumber":257,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":258,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":259,"author":{"gitID":"kexiaowen"},"content":"        public void setExperienceScore(double experienceScore) {"},{"lineNumber":260,"author":{"gitID":"kexiaowen"},"content":"            this.experienceScore \u003d experienceScore;"},{"lineNumber":261,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":262,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":263,"author":{"gitID":"kexiaowen"},"content":"        public Optional\u003cDouble\u003e getExperienceScore() {"},{"lineNumber":264,"author":{"gitID":"kexiaowen"},"content":"            return Optional.ofNullable(experienceScore);"},{"lineNumber":265,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":266,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":267,"author":{"gitID":"kexiaowen"},"content":"        @Override"},{"lineNumber":268,"author":{"gitID":"kexiaowen"},"content":"        public boolean equals(Object other) {"},{"lineNumber":269,"author":{"gitID":"kexiaowen"},"content":"            // short circuit if same object"},{"lineNumber":270,"author":{"gitID":"kexiaowen"},"content":"            if (other \u003d\u003d this) {"},{"lineNumber":271,"author":{"gitID":"kexiaowen"},"content":"                return true;"},{"lineNumber":272,"author":{"gitID":"kexiaowen"},"content":"            }"},{"lineNumber":273,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":274,"author":{"gitID":"kexiaowen"},"content":"            // instanceof handles nulls"},{"lineNumber":275,"author":{"gitID":"kexiaowen"},"content":"            if (!(other instanceof EditRatingDescriptor)) {"},{"lineNumber":276,"author":{"gitID":"kexiaowen"},"content":"                return false;"},{"lineNumber":277,"author":{"gitID":"kexiaowen"},"content":"            }"},{"lineNumber":278,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":279,"author":{"gitID":"kexiaowen"},"content":"            // state check"},{"lineNumber":280,"author":{"gitID":"kexiaowen"},"content":"            EditRatingDescriptor e \u003d (EditRatingDescriptor) other;"},{"lineNumber":281,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":282,"author":{"gitID":"kexiaowen"},"content":"            return getTechnicalSkillsScore().equals(e.getTechnicalSkillsScore())"},{"lineNumber":283,"author":{"gitID":"kexiaowen"},"content":"                    \u0026\u0026 getCommunicationSkillsScore().equals(e.getCommunicationSkillsScore())"},{"lineNumber":284,"author":{"gitID":"kexiaowen"},"content":"                    \u0026\u0026 getProblemSolvingSkillsScore().equals(e.getProblemSolvingSkillsScore())"},{"lineNumber":285,"author":{"gitID":"kexiaowen"},"content":"                    \u0026\u0026 getExperienceScore().equals(e.getExperienceScore());"},{"lineNumber":286,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":287,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":288,"author":{"gitID":"kexiaowen"},"content":"}"}],"authorContributionMap":{"kexiaowen":275,"-":13}},{"path":"src/main/java/seedu/address/storage/DataFileStorage.java","lines":[{"lineNumber":1,"author":{"gitID":"mhq199657"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.nio.file.Files;"},{"lineNumber":6,"author":{"gitID":"mhq199657"},"content":"import java.nio.file.Path;"},{"lineNumber":7,"author":{"gitID":"mhq199657"},"content":"import java.nio.file.StandardCopyOption;"},{"lineNumber":8,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":9,"author":{"gitID":"mhq199657"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":"/**"},{"lineNumber":12,"author":{"gitID":"mhq199657"},"content":" * Handles file operation for resume folder"},{"lineNumber":13,"author":{"gitID":"mhq199657"},"content":" */"},{"lineNumber":14,"author":{"gitID":"mhq199657"},"content":"public class DataFileStorage {"},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":"    private static final String JAR_FOLDER \u003d System.getProperty(\"user.dir\");"},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":"    private static final String DATA_FOLDER \u003d JAR_FOLDER + File.separator + \"data\";"},{"lineNumber":17,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":18,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":"     * Copies the resume file to the data folder"},{"lineNumber":20,"author":{"gitID":"mhq199657"},"content":"     * @param fullPath of resume file"},{"lineNumber":21,"author":{"gitID":"mhq199657"},"content":"     * @param newFileName of destination file"},{"lineNumber":22,"author":{"gitID":"mhq199657"},"content":"     * @throws IOException"},{"lineNumber":23,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":24,"author":{"gitID":"mhq199657"},"content":"    public static void copyResumeFileToDataFolder(String fullPath, String newFileName) throws IOException {"},{"lineNumber":25,"author":{"gitID":"mhq199657"},"content":"        File srcFile \u003d new File(fullPath);"},{"lineNumber":26,"author":{"gitID":"mhq199657"},"content":"        assert(srcFile.exists());"},{"lineNumber":27,"author":{"gitID":"mhq199657"},"content":"        ensureDataFolderExists();"},{"lineNumber":28,"author":{"gitID":"mhq199657"},"content":"        Files.copy(srcFile.toPath(), formDestPath(newFileName), StandardCopyOption.REPLACE_EXISTING);"},{"lineNumber":29,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":30,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":31,"author":{"gitID":"mhq199657"},"content":"    private static Path formDestPath(String newFileName) {"},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":"        return new File(DATA_FOLDER + File.separator + newFileName).toPath();"},{"lineNumber":33,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":35,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":36,"author":{"gitID":"mhq199657"},"content":"     * Ensures the data folder exists"},{"lineNumber":37,"author":{"gitID":"mhq199657"},"content":"     * @throws IOException"},{"lineNumber":38,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":39,"author":{"gitID":"mhq199657"},"content":"    private static void ensureDataFolderExists() throws IOException {"},{"lineNumber":40,"author":{"gitID":"mhq199657"},"content":"        File dataFolder \u003d new File(DATA_FOLDER);"},{"lineNumber":41,"author":{"gitID":"mhq199657"},"content":"        if (dataFolder.exists() \u0026\u0026 dataFolder.isDirectory()) {"},{"lineNumber":42,"author":{"gitID":"mhq199657"},"content":"            return;"},{"lineNumber":43,"author":{"gitID":"mhq199657"},"content":"        } else {"},{"lineNumber":44,"author":{"gitID":"mhq199657"},"content":"            boolean hasCreated \u003d dataFolder.mkdirs();"},{"lineNumber":45,"author":{"gitID":"mhq199657"},"content":"            if (!hasCreated) {"},{"lineNumber":46,"author":{"gitID":"mhq199657"},"content":"                throw new IOException(\"HR+ cannot create data folder in the same directory as the jar file!\");"},{"lineNumber":47,"author":{"gitID":"mhq199657"},"content":"            }"},{"lineNumber":48,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":49,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":51,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":52,"author":{"gitID":"mhq199657"},"content":"     * Deletes the unreferenced data file"},{"lineNumber":53,"author":{"gitID":"mhq199657"},"content":"     * @param dataFileName"},{"lineNumber":54,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":55,"author":{"gitID":"mhq199657"},"content":"    public static void deleteUnreferencedDataFile(String dataFileName) {"},{"lineNumber":56,"author":{"gitID":"mhq199657"},"content":"        File unreferencedDataFile \u003d new File(JAR_FOLDER + File.separator + dataFileName);"},{"lineNumber":57,"author":{"gitID":"mhq199657"},"content":"        assert(unreferencedDataFile.exists() \u0026\u0026 unreferencedDataFile.isFile());"},{"lineNumber":58,"author":{"gitID":"mhq199657"},"content":"        boolean isDeleted \u003d unreferencedDataFile.delete();"},{"lineNumber":59,"author":{"gitID":"mhq199657"},"content":"        if (!isDeleted) {"},{"lineNumber":60,"author":{"gitID":"mhq199657"},"content":"            LogsCenter.getLogger(DataFileStorage.class)"},{"lineNumber":61,"author":{"gitID":"mhq199657"},"content":"                    .warning(\"Clean up of Unreferenced Resume file unsuccessful.\");"},{"lineNumber":62,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":63,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"mhq199657"},"content":"}"}],"authorContributionMap":{"mhq199657":60,"-":4}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.util;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.HashSet;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.Set;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import seedu.address.model.AddressBook;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;"},{"lineNumber":8,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Address;"},{"lineNumber":9,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.model.person.Comment;"},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Email;"},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.ExpectedGraduationYear;"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.person.GradePointAverage;"},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.model.person.InterviewDate;"},{"lineNumber":14,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.JobApplied;"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.person.Major;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Name;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Phone;"},{"lineNumber":19,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.model.person.ProfileImage;"},{"lineNumber":20,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.Rating;"},{"lineNumber":21,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Resume;"},{"lineNumber":22,"author":{"gitID":"mhq199657"},"content":"import seedu.address.model.person.Status;"},{"lineNumber":23,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.model.person.University;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.address.model.tag.Tag;"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":28,"author":{"gitID":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data."},{"lineNumber":29,"author":{"gitID":"-"},"content":" */"},{"lineNumber":30,"author":{"gitID":"-"},"content":"public class SampleDataUtil {"},{"lineNumber":31,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"    public static Person[] getSamplePersons() {"},{"lineNumber":33,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"        return new Person[] {"},{"lineNumber":35,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":36,"author":{"gitID":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),"},{"lineNumber":37,"author":{"gitID":"kexiaowen"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),"},{"lineNumber":38,"author":{"gitID":"kexiaowen"},"content":"                new University(\"NUS\"),"},{"lineNumber":39,"author":{"gitID":"kexiaowen"},"content":"                new ExpectedGraduationYear(\"2018\"),"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":"                new Major(\"Computer Science\"),"},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"                new GradePointAverage(\"4.84\"),"},{"lineNumber":42,"author":{"gitID":"kexiaowen"},"content":"                new JobApplied(\"Software Engineer\"),"},{"lineNumber":43,"author":{"gitID":"kexiaowen"},"content":"                new Rating(4.3, 4.8,"},{"lineNumber":44,"author":{"gitID":"kexiaowen"},"content":"                            4.0, 4.1),"},{"lineNumber":45,"author":{"gitID":"-"},"content":"                new Resume(null),"},{"lineNumber":46,"author":{"gitID":"Ang-YC"},"content":"                new ProfileImage(null),"},{"lineNumber":47,"author":{"gitID":"Ang-YC"},"content":"                new Comment(\"Alex is great\"), new InterviewDate(1540814400L),"},{"lineNumber":48,"author":{"gitID":"mhq199657"},"content":"                new Status(), getTagSet(\"friendly\")),"},{"lineNumber":49,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":50,"author":{"gitID":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),"},{"lineNumber":51,"author":{"gitID":"kexiaowen"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),"},{"lineNumber":52,"author":{"gitID":"kexiaowen"},"content":"                new University(\"NTU\"),"},{"lineNumber":53,"author":{"gitID":"kexiaowen"},"content":"                new ExpectedGraduationYear(\"2019\"),"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"                new Major(\"Computer Science\"),"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"                new GradePointAverage(\"4.73\"),"},{"lineNumber":56,"author":{"gitID":"kexiaowen"},"content":"                new JobApplied(\"Data Analyst\"),"},{"lineNumber":57,"author":{"gitID":"kexiaowen"},"content":"                new Rating(-1, -1,"},{"lineNumber":58,"author":{"gitID":"kexiaowen"},"content":"                        -1, -1),"},{"lineNumber":59,"author":{"gitID":"Ang-YC"},"content":"                new Resume(null), new ProfileImage(null),"},{"lineNumber":60,"author":{"gitID":"Ang-YC"},"content":"                new Comment(null), new InterviewDate(),"},{"lineNumber":61,"author":{"gitID":"mhq199657"},"content":"                new Status(1), getTagSet(\"smart\", \"friendly\")),"},{"lineNumber":62,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":63,"author":{"gitID":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),"},{"lineNumber":64,"author":{"gitID":"kexiaowen"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),"},{"lineNumber":65,"author":{"gitID":"kexiaowen"},"content":"                new University(\"SMU\"),"},{"lineNumber":66,"author":{"gitID":"kexiaowen"},"content":"                new ExpectedGraduationYear(\"2020\"),"},{"lineNumber":67,"author":{"gitID":"kexiaowen"},"content":"                new Major(\"Computer Science\"), new GradePointAverage(\"4.92\"),"},{"lineNumber":68,"author":{"gitID":"kexiaowen"},"content":"                new JobApplied(\"Software Tester\"),"},{"lineNumber":69,"author":{"gitID":"kexiaowen"},"content":"                new Rating(4.5, 3,"},{"lineNumber":70,"author":{"gitID":"kexiaowen"},"content":"                        4.5, 2.5),"},{"lineNumber":71,"author":{"gitID":"Ang-YC"},"content":"                new Resume(null),"},{"lineNumber":72,"author":{"gitID":"Ang-YC"},"content":"                new ProfileImage(null),"},{"lineNumber":73,"author":{"gitID":"Ang-YC"},"content":"                new Comment(null), new InterviewDate(),"},{"lineNumber":74,"author":{"gitID":"mhq199657"},"content":"                new Status(5), getTagSet(\"referredbyBoss\")),"},{"lineNumber":75,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":76,"author":{"gitID":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),"},{"lineNumber":77,"author":{"gitID":"kexiaowen"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),"},{"lineNumber":78,"author":{"gitID":"kexiaowen"},"content":"                new University(\"SUTD\"),"},{"lineNumber":79,"author":{"gitID":"kexiaowen"},"content":"                new ExpectedGraduationYear(\"2020\"),"},{"lineNumber":80,"author":{"gitID":"tanhengyeow"},"content":"                new Major(\"Computer Science\"),"},{"lineNumber":81,"author":{"gitID":"tanhengyeow"},"content":"                new GradePointAverage(\"4.24\"),"},{"lineNumber":82,"author":{"gitID":"kexiaowen"},"content":"                new JobApplied(\"Network Administrator\"),"},{"lineNumber":83,"author":{"gitID":"kexiaowen"},"content":"                new Rating(-1, -1,"},{"lineNumber":84,"author":{"gitID":"kexiaowen"},"content":"                        -1, -1),"},{"lineNumber":85,"author":{"gitID":"Ang-YC"},"content":"                new Resume(null), new ProfileImage(null),"},{"lineNumber":86,"author":{"gitID":"Ang-YC"},"content":"                new Comment(null), new InterviewDate(),"},{"lineNumber":87,"author":{"gitID":"mhq199657"},"content":"                new Status(3), getTagSet(\"referredbyBoss\")),"},{"lineNumber":88,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":89,"author":{"gitID":"mhq199657"},"content":"            new Person(new Name(\"Edward Lee\"), new Phone(\"85593322\"), new Email(\"ed@lee.com\"),"},{"lineNumber":90,"author":{"gitID":"mhq199657"},"content":"                new Address(\"King Edward VII hall\"),"},{"lineNumber":91,"author":{"gitID":"kexiaowen"},"content":"                new University(\"NUS\"),"},{"lineNumber":92,"author":{"gitID":"kexiaowen"},"content":"                new ExpectedGraduationYear(\"2021\"),"},{"lineNumber":93,"author":{"gitID":"mhq199657"},"content":"                new Major(\"Computer and Electrical Engineering\"), new GradePointAverage(\"4.28\"),"},{"lineNumber":94,"author":{"gitID":"mhq199657"},"content":"                new JobApplied(\"System Engineer\"),"},{"lineNumber":95,"author":{"gitID":"mhq199657"},"content":"                new Rating(3.32, 5, 4.53, 3.23),"},{"lineNumber":96,"author":{"gitID":"Ang-YC"},"content":"                new Resume(null), new ProfileImage(null),"},{"lineNumber":97,"author":{"gitID":"Ang-YC"},"content":"                new Comment(null), new InterviewDate(),"},{"lineNumber":98,"author":{"gitID":"mhq199657"},"content":"                new Status(4), getTagSet(\"serious\")),"},{"lineNumber":99,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":100,"author":{"gitID":"mhq199657"},"content":"            new Person(new Name(\"Fiona Lina\"), new Phone(\"95585859\"), new Email(\"fionalina@example.com\"),"},{"lineNumber":101,"author":{"gitID":"mhq199657"},"content":"                new Address(\"Sentosa Island\"),"},{"lineNumber":102,"author":{"gitID":"mhq199657"},"content":"                new University(\"NTU\"),"},{"lineNumber":103,"author":{"gitID":"kexiaowen"},"content":"                new ExpectedGraduationYear(\"2018\"),"},{"lineNumber":104,"author":{"gitID":"tanhengyeow"},"content":"                new Major(\"Computer Science\"),"},{"lineNumber":105,"author":{"gitID":"mhq199657"},"content":"                new GradePointAverage(\"4.42\"),"},{"lineNumber":106,"author":{"gitID":"kexiaowen"},"content":"                new JobApplied(\"Software Engineer\"),"},{"lineNumber":107,"author":{"gitID":"mhq199657"},"content":"                new Rating(4.0, 4.8,"},{"lineNumber":108,"author":{"gitID":"mhq199657"},"content":"                            4.0, 4.0),"},{"lineNumber":109,"author":{"gitID":"-"},"content":"                new Resume(null),"},{"lineNumber":110,"author":{"gitID":"Ang-YC"},"content":"                new ProfileImage(null),"},{"lineNumber":111,"author":{"gitID":"mhq199657"},"content":"                new Comment(\"Fiona is pretty.\"), new InterviewDate(1540824400L),"},{"lineNumber":112,"author":{"gitID":"mhq199657"},"content":"                new Status(), getTagSet(\"friendly\")),"},{"lineNumber":113,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":114,"author":{"gitID":"mhq199657"},"content":"            new Person(new Name(\"George Yeo\"), new Phone(\"24499944\"), new Email(\"gyeo@example.com\"),"},{"lineNumber":115,"author":{"gitID":"mhq199657"},"content":"                new Address(\"Kent Ridge Hall\"),"},{"lineNumber":116,"author":{"gitID":"kexiaowen"},"content":"                new University(\"NTU\"),"},{"lineNumber":117,"author":{"gitID":"kexiaowen"},"content":"                new ExpectedGraduationYear(\"2019\"),"},{"lineNumber":118,"author":{"gitID":"mhq199657"},"content":"                new Major(\"Business Analytics\"),"},{"lineNumber":119,"author":{"gitID":"mhq199657"},"content":"                new GradePointAverage(\"3.43\"),"},{"lineNumber":120,"author":{"gitID":"kexiaowen"},"content":"                new JobApplied(\"Data Analyst\"),"},{"lineNumber":121,"author":{"gitID":"kexiaowen"},"content":"                new Rating(-1, -1,"},{"lineNumber":122,"author":{"gitID":"kexiaowen"},"content":"                        -1, -1),"},{"lineNumber":123,"author":{"gitID":"Ang-YC"},"content":"                new Resume(null), new ProfileImage(null),"},{"lineNumber":124,"author":{"gitID":"Ang-YC"},"content":"                new Comment(null), new InterviewDate(),"},{"lineNumber":125,"author":{"gitID":"mhq199657"},"content":"                new Status(1), getTagSet(\"smart\", \"friendly\")),"},{"lineNumber":126,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":127,"author":{"gitID":"mhq199657"},"content":"            new Person(new Name(\"How Rae Yeo\"), new Phone(\"35953842\"), new Email(\"how@are.you\"),"},{"lineNumber":128,"author":{"gitID":"mhq199657"},"content":"                new Address(\"13 Methodist Street\"),"},{"lineNumber":129,"author":{"gitID":"mhq199657"},"content":"                new University(\"SMU\"),"},{"lineNumber":130,"author":{"gitID":"mhq199657"},"content":"                new ExpectedGraduationYear(\"2023\"),"},{"lineNumber":131,"author":{"gitID":"mhq199657"},"content":"                new Major(\"Computer Science and Applied Math\"), new GradePointAverage(\"4.92\"),"},{"lineNumber":132,"author":{"gitID":"kexiaowen"},"content":"                new JobApplied(\"Software Tester\"),"},{"lineNumber":133,"author":{"gitID":"kexiaowen"},"content":"                new Rating(4.5, 3,"},{"lineNumber":134,"author":{"gitID":"kexiaowen"},"content":"                        4.5, 2.5),"},{"lineNumber":135,"author":{"gitID":"Ang-YC"},"content":"                new Resume(null),"},{"lineNumber":136,"author":{"gitID":"Ang-YC"},"content":"                new ProfileImage(null),"},{"lineNumber":137,"author":{"gitID":"Ang-YC"},"content":"                new Comment(null), new InterviewDate(),"},{"lineNumber":138,"author":{"gitID":"mhq199657"},"content":"                new Status(5), getTagSet(\"referredbyBoss\")),"},{"lineNumber":139,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":140,"author":{"gitID":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),"},{"lineNumber":141,"author":{"gitID":"kexiaowen"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),"},{"lineNumber":142,"author":{"gitID":"kexiaowen"},"content":"                new University(\"NUS\"),"},{"lineNumber":143,"author":{"gitID":"kexiaowen"},"content":"                new ExpectedGraduationYear(\"2021\"),"},{"lineNumber":144,"author":{"gitID":"kexiaowen"},"content":"                new Major(\"Computer Science\"), new GradePointAverage(\"4.33\"),"},{"lineNumber":145,"author":{"gitID":"kexiaowen"},"content":"                new JobApplied(\"Database Administrator\"),"},{"lineNumber":146,"author":{"gitID":"kexiaowen"},"content":"                new Rating(3, 5, 3.5, 3),"},{"lineNumber":147,"author":{"gitID":"Ang-YC"},"content":"                new Resume(null), new ProfileImage(null),"},{"lineNumber":148,"author":{"gitID":"Ang-YC"},"content":"                new Comment(null), new InterviewDate(),"},{"lineNumber":149,"author":{"gitID":"mhq199657"},"content":"                new Status(4), getTagSet(\"serious\")),"},{"lineNumber":150,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":151,"author":{"gitID":"mhq199657"},"content":"            new Person(new Name(\"Julius Hassange\"), new Phone(\"9103454\"), new Email(\"jh@example.com\"),"},{"lineNumber":152,"author":{"gitID":"mhq199657"},"content":"                new Address(\"300 Lead Street\"),"},{"lineNumber":153,"author":{"gitID":"kexiaowen"},"content":"                new University(\"SUTD\"),"},{"lineNumber":154,"author":{"gitID":"kexiaowen"},"content":"                new ExpectedGraduationYear(\"2020\"),"},{"lineNumber":155,"author":{"gitID":"mhq199657"},"content":"                new Major(\"Information System\"),"},{"lineNumber":156,"author":{"gitID":"mhq199657"},"content":"                new GradePointAverage(\"4.28\"),"},{"lineNumber":157,"author":{"gitID":"kexiaowen"},"content":"                new JobApplied(\"Network Administrator\"),"},{"lineNumber":158,"author":{"gitID":"kexiaowen"},"content":"                new Rating(-1, -1,"},{"lineNumber":159,"author":{"gitID":"kexiaowen"},"content":"                        -1, -1),"},{"lineNumber":160,"author":{"gitID":"Ang-YC"},"content":"                new Resume(null), new ProfileImage(null),"},{"lineNumber":161,"author":{"gitID":"Ang-YC"},"content":"                new Comment(null), new InterviewDate(),"},{"lineNumber":162,"author":{"gitID":"mhq199657"},"content":"                new Status(3), getTagSet(\"referredbyBoss\")),"},{"lineNumber":163,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":164,"author":{"gitID":"mhq199657"},"content":"            new Person(new Name(\"Koh Kok Koon\"), new Phone(\"85593323\"), new Email(\"kkk@example.com\"),"},{"lineNumber":165,"author":{"gitID":"mhq199657"},"content":"                new Address(\"King Kong Lane\"),"},{"lineNumber":166,"author":{"gitID":"mhq199657"},"content":"                new University(\"SMU\"),"},{"lineNumber":167,"author":{"gitID":"kexiaowen"},"content":"                new ExpectedGraduationYear(\"2021\"),"},{"lineNumber":168,"author":{"gitID":"mhq199657"},"content":"                new Major(\"Electrical Engineering\"), new GradePointAverage(\"4.83\"),"},{"lineNumber":169,"author":{"gitID":"mhq199657"},"content":"                new JobApplied(\"System Engineer\"),"},{"lineNumber":170,"author":{"gitID":"mhq199657"},"content":"                new Rating(3.32, 3.3, 4.53, 3),"},{"lineNumber":171,"author":{"gitID":"Ang-YC"},"content":"                new Resume(null), new ProfileImage(null),"},{"lineNumber":172,"author":{"gitID":"Ang-YC"},"content":"                new Comment(null), new InterviewDate(),"},{"lineNumber":173,"author":{"gitID":"mhq199657"},"content":"                new Status(4), getTagSet(\"serious\")),"},{"lineNumber":174,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":175,"author":{"gitID":"mhq199657"},"content":"            new Person(new Name(\"Lee Lil Lol\"), new Phone(\"87438870\"), new Email(\"lol@lel.com\"),"},{"lineNumber":176,"author":{"gitID":"mhq199657"},"content":"                new Address(\"101 First Avenue\"),"},{"lineNumber":177,"author":{"gitID":"kexiaowen"},"content":"                new University(\"NUS\"),"},{"lineNumber":178,"author":{"gitID":"mhq199657"},"content":"                new ExpectedGraduationYear(\"2017\"),"},{"lineNumber":179,"author":{"gitID":"mhq199657"},"content":"                new Major(\"Computer Security\"),"},{"lineNumber":180,"author":{"gitID":"mhq199657"},"content":"                new GradePointAverage(\"4.41\"),"},{"lineNumber":181,"author":{"gitID":"kexiaowen"},"content":"                new JobApplied(\"Software Engineer\"),"},{"lineNumber":182,"author":{"gitID":"mhq199657"},"content":"                new Rating(3.4, 4.82,"},{"lineNumber":183,"author":{"gitID":"mhq199657"},"content":"                            4.0, 4.13),"},{"lineNumber":184,"author":{"gitID":"-"},"content":"                new Resume(null),"},{"lineNumber":185,"author":{"gitID":"Ang-YC"},"content":"                new ProfileImage(null),"},{"lineNumber":186,"author":{"gitID":"mhq199657"},"content":"                new Comment(\"LOL\"), new InterviewDate(1540914400L),"},{"lineNumber":187,"author":{"gitID":"mhq199657"},"content":"                new Status(), getTagSet(\"friendly\")),"},{"lineNumber":188,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":189,"author":{"gitID":"mhq199657"},"content":"            new Person(new Name(\"Mohammed Lee\"), new Phone(\"99275885\"), new Email(\"mlee@example.com\"),"},{"lineNumber":190,"author":{"gitID":"mhq199657"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #08-18\"),"},{"lineNumber":191,"author":{"gitID":"mhq199657"},"content":"                new University(\"NTU\"),"},{"lineNumber":192,"author":{"gitID":"kexiaowen"},"content":"                new ExpectedGraduationYear(\"2019\"),"},{"lineNumber":193,"author":{"gitID":"tanhengyeow"},"content":"                new Major(\"Computer Science\"),"},{"lineNumber":194,"author":{"gitID":"mhq199657"},"content":"                new GradePointAverage(\"4.39\"),"},{"lineNumber":195,"author":{"gitID":"kexiaowen"},"content":"                new JobApplied(\"Data Analyst\"),"},{"lineNumber":196,"author":{"gitID":"kexiaowen"},"content":"                new Rating(-1, -1,"},{"lineNumber":197,"author":{"gitID":"kexiaowen"},"content":"                        -1, -1),"},{"lineNumber":198,"author":{"gitID":"Ang-YC"},"content":"                new Resume(null), new ProfileImage(null),"},{"lineNumber":199,"author":{"gitID":"Ang-YC"},"content":"                new Comment(null), new InterviewDate(),"},{"lineNumber":200,"author":{"gitID":"mhq199657"},"content":"                new Status(1), getTagSet(\"smart\", \"friendly\")),"},{"lineNumber":201,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":202,"author":{"gitID":"mhq199657"},"content":"            new Person(new Name(\"Neo Mui Leo\"), new Phone(\"93330283\"), new Email(\"nml@example.com\"),"},{"lineNumber":203,"author":{"gitID":"mhq199657"},"content":"                new Address(\"Blk 11 Ho Ching Road, 74, #11-04\"),"},{"lineNumber":204,"author":{"gitID":"kexiaowen"},"content":"                new University(\"SMU\"),"},{"lineNumber":205,"author":{"gitID":"kexiaowen"},"content":"                new ExpectedGraduationYear(\"2020\"),"},{"lineNumber":206,"author":{"gitID":"mhq199657"},"content":"                new Major(\"Computer Science\"), new GradePointAverage(\"4.12\"),"},{"lineNumber":207,"author":{"gitID":"kexiaowen"},"content":"                new JobApplied(\"Software Tester\"),"},{"lineNumber":208,"author":{"gitID":"mhq199657"},"content":"                new Rating(4.5, 3.3,"},{"lineNumber":209,"author":{"gitID":"kexiaowen"},"content":"                        4.5, 2.5),"},{"lineNumber":210,"author":{"gitID":"Ang-YC"},"content":"                new Resume(null),"},{"lineNumber":211,"author":{"gitID":"Ang-YC"},"content":"                new ProfileImage(null),"},{"lineNumber":212,"author":{"gitID":"Ang-YC"},"content":"                new Comment(null), new InterviewDate(),"},{"lineNumber":213,"author":{"gitID":"mhq199657"},"content":"                new Status(5), getTagSet(\"referredbyBoss\")),"},{"lineNumber":214,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":215,"author":{"gitID":"mhq199657"},"content":"            new Person(new Name(\"Olivia Quek\"), new Phone(\"86031282\"), new Email(\"olivia@example.com\"),"},{"lineNumber":216,"author":{"gitID":"mhq199657"},"content":"                new Address(\"Blk 437 Serangoon Gardens Street 26, #16-43\"),"},{"lineNumber":217,"author":{"gitID":"kexiaowen"},"content":"                new University(\"SUTD\"),"},{"lineNumber":218,"author":{"gitID":"kexiaowen"},"content":"                new ExpectedGraduationYear(\"2020\"),"},{"lineNumber":219,"author":{"gitID":"tanhengyeow"},"content":"                new Major(\"Computer Science\"),"},{"lineNumber":220,"author":{"gitID":"mhq199657"},"content":"                new GradePointAverage(\"3.83\"),"},{"lineNumber":221,"author":{"gitID":"kexiaowen"},"content":"                new JobApplied(\"Network Administrator\"),"},{"lineNumber":222,"author":{"gitID":"kexiaowen"},"content":"                new Rating(-1, -1,"},{"lineNumber":223,"author":{"gitID":"kexiaowen"},"content":"                        -1, -1),"},{"lineNumber":224,"author":{"gitID":"Ang-YC"},"content":"                new Resume(null), new ProfileImage(null),"},{"lineNumber":225,"author":{"gitID":"Ang-YC"},"content":"                new Comment(null), new InterviewDate(),"},{"lineNumber":226,"author":{"gitID":"mhq199657"},"content":"                new Status(3), getTagSet(\"referredbyBoss\")),"},{"lineNumber":227,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":228,"author":{"gitID":"mhq199657"},"content":"            new Person(new Name(\"Pek Yi Ling\"), new Phone(\"85542322\"), new Email(\"pekyl@gmail.com\"),"},{"lineNumber":229,"author":{"gitID":"mhq199657"},"content":"                new Address(\"RVRC\"),"},{"lineNumber":230,"author":{"gitID":"kexiaowen"},"content":"                new University(\"NUS\"),"},{"lineNumber":231,"author":{"gitID":"kexiaowen"},"content":"                new ExpectedGraduationYear(\"2021\"),"},{"lineNumber":232,"author":{"gitID":"mhq199657"},"content":"                new Major(\"Computer and Electrical Engineering\"), new GradePointAverage(\"4.38\"),"},{"lineNumber":233,"author":{"gitID":"mhq199657"},"content":"                new JobApplied(\"System Engineer\"),"},{"lineNumber":234,"author":{"gitID":"mhq199657"},"content":"                new Rating(4.32, 5, 4.53, 2.23),"},{"lineNumber":235,"author":{"gitID":"Ang-YC"},"content":"                new Resume(null), new ProfileImage(null),"},{"lineNumber":236,"author":{"gitID":"Ang-YC"},"content":"                new Comment(null), new InterviewDate(),"},{"lineNumber":237,"author":{"gitID":"mhq199657"},"content":"                new Status(4), getTagSet(\"serious\")),"},{"lineNumber":238,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":239,"author":{"gitID":"mhq199657"},"content":"            new Person(new Name(\"Qoo Io\"), new Phone(\"93285859\"), new Email(\"qoo10@example.com\"),"},{"lineNumber":240,"author":{"gitID":"mhq199657"},"content":"                new Address(\"Central Business Distrinct\"),"},{"lineNumber":241,"author":{"gitID":"mhq199657"},"content":"                new University(\"NTU\"),"},{"lineNumber":242,"author":{"gitID":"kexiaowen"},"content":"                new ExpectedGraduationYear(\"2018\"),"},{"lineNumber":243,"author":{"gitID":"tanhengyeow"},"content":"                new Major(\"Computer Science\"),"},{"lineNumber":244,"author":{"gitID":"mhq199657"},"content":"                new GradePointAverage(\"3.92\"),"},{"lineNumber":245,"author":{"gitID":"kexiaowen"},"content":"                new JobApplied(\"Software Engineer\"),"},{"lineNumber":246,"author":{"gitID":"mhq199657"},"content":"                new Rating(3.8, 4.7,"},{"lineNumber":247,"author":{"gitID":"mhq199657"},"content":"                            4.0, 4.0),"},{"lineNumber":248,"author":{"gitID":"-"},"content":"                new Resume(null),"},{"lineNumber":249,"author":{"gitID":"Ang-YC"},"content":"                new ProfileImage(null),"},{"lineNumber":250,"author":{"gitID":"mhq199657"},"content":"                new Comment(\"Qoo Io is rich.\"), new InterviewDate(1540844400L),"},{"lineNumber":251,"author":{"gitID":"mhq199657"},"content":"                new Status(), getTagSet(\"friendly\")),"},{"lineNumber":252,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":253,"author":{"gitID":"mhq199657"},"content":"            new Person(new Name(\"Rar Teh Cat\"), new Phone(\"24499235\"), new Email(\"rtc@example.com\"),"},{"lineNumber":254,"author":{"gitID":"mhq199657"},"content":"                new Address(\"Sheares Hall\"),"},{"lineNumber":255,"author":{"gitID":"kexiaowen"},"content":"                new University(\"NTU\"),"},{"lineNumber":256,"author":{"gitID":"kexiaowen"},"content":"                new ExpectedGraduationYear(\"2019\"),"},{"lineNumber":257,"author":{"gitID":"mhq199657"},"content":"                new Major(\"Business Analytics\"),"},{"lineNumber":258,"author":{"gitID":"mhq199657"},"content":"                new GradePointAverage(\"2.43\"),"},{"lineNumber":259,"author":{"gitID":"kexiaowen"},"content":"                new JobApplied(\"Data Analyst\"),"},{"lineNumber":260,"author":{"gitID":"kexiaowen"},"content":"                new Rating(-1, -1,"},{"lineNumber":261,"author":{"gitID":"kexiaowen"},"content":"                        -1, -1),"},{"lineNumber":262,"author":{"gitID":"Ang-YC"},"content":"                new Resume(null), new ProfileImage(null),"},{"lineNumber":263,"author":{"gitID":"Ang-YC"},"content":"                new Comment(null), new InterviewDate(),"},{"lineNumber":264,"author":{"gitID":"mhq199657"},"content":"                new Status(1), getTagSet(\"smart\", \"friendly\")),"},{"lineNumber":265,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":266,"author":{"gitID":"mhq199657"},"content":"            new Person(new Name(\"Stuart\"), new Phone(\"35933842\"), new Email(\"stuart@are.you\"),"},{"lineNumber":267,"author":{"gitID":"mhq199657"},"content":"                new Address(\"14 Methodist Street\"),"},{"lineNumber":268,"author":{"gitID":"mhq199657"},"content":"                new University(\"SMU\"),"},{"lineNumber":269,"author":{"gitID":"mhq199657"},"content":"                new ExpectedGraduationYear(\"2023\"),"},{"lineNumber":270,"author":{"gitID":"mhq199657"},"content":"                new Major(\"Computer Science and Economics\"), new GradePointAverage(\"4.99\"),"},{"lineNumber":271,"author":{"gitID":"kexiaowen"},"content":"                new JobApplied(\"Software Tester\"),"},{"lineNumber":272,"author":{"gitID":"mhq199657"},"content":"                new Rating(4.5, 3.5,"},{"lineNumber":273,"author":{"gitID":"mhq199657"},"content":"                        4.5, 4.5),"},{"lineNumber":274,"author":{"gitID":"Ang-YC"},"content":"                new Resume(null),"},{"lineNumber":275,"author":{"gitID":"Ang-YC"},"content":"                new ProfileImage(null),"},{"lineNumber":276,"author":{"gitID":"Ang-YC"},"content":"                new Comment(null), new InterviewDate(),"},{"lineNumber":277,"author":{"gitID":"mhq199657"},"content":"                new Status(5), getTagSet(\"referredbyBoss\")),"},{"lineNumber":278,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":279,"author":{"gitID":"mhq199657"},"content":"            new Person(new Name(\"Tauto Loggi\"), new Phone(\"11111111\"), new Email(\"tautology@always.true\"),"},{"lineNumber":280,"author":{"gitID":"mhq199657"},"content":"                new Address(\"1 Truth Lane\"),"},{"lineNumber":281,"author":{"gitID":"mhq199657"},"content":"                new University(\"NTU\"),"},{"lineNumber":282,"author":{"gitID":"mhq199657"},"content":"                new ExpectedGraduationYear(\"2022\"),"},{"lineNumber":283,"author":{"gitID":"mhq199657"},"content":"                new Major(\"Computer Science and Philosophy\"), new GradePointAverage(\"1.00\"),"},{"lineNumber":284,"author":{"gitID":"kexiaowen"},"content":"                new JobApplied(\"Software Tester\"),"},{"lineNumber":285,"author":{"gitID":"mhq199657"},"content":"                new Rating(4.5, 3.5,"},{"lineNumber":286,"author":{"gitID":"mhq199657"},"content":"                        4.5, 4.5),"},{"lineNumber":287,"author":{"gitID":"Ang-YC"},"content":"                new Resume(null),"},{"lineNumber":288,"author":{"gitID":"Ang-YC"},"content":"                new ProfileImage(null),"},{"lineNumber":289,"author":{"gitID":"Ang-YC"},"content":"                new Comment(null), new InterviewDate(),"},{"lineNumber":290,"author":{"gitID":"mhq199657"},"content":"                new Status(2), getTagSet(\"referredbyBoss\")),"},{"lineNumber":291,"author":{"gitID":"-"},"content":"        };"},{"lineNumber":292,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":293,"author":{"gitID":"-"},"content":""},{"lineNumber":294,"author":{"gitID":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {"},{"lineNumber":295,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":296,"author":{"gitID":"-"},"content":"            AddressBook sampleAb \u003d new AddressBook();"},{"lineNumber":297,"author":{"gitID":"-"},"content":"            for (Person samplePerson : getSamplePersons()) {"},{"lineNumber":298,"author":{"gitID":"-"},"content":"                sampleAb.addPerson(samplePerson);"},{"lineNumber":299,"author":{"gitID":"-"},"content":"            }"},{"lineNumber":300,"author":{"gitID":"-"},"content":"            return sampleAb;"},{"lineNumber":301,"author":{"gitID":"-"},"content":"        } catch (DuplicatePersonException e) {"},{"lineNumber":302,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"sample data cannot contain duplicate persons\", e);"},{"lineNumber":303,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":304,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":305,"author":{"gitID":"-"},"content":""},{"lineNumber":306,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":307,"author":{"gitID":"-"},"content":"     * Returns a tag set containing the list of strings given."},{"lineNumber":308,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":309,"author":{"gitID":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {"},{"lineNumber":310,"author":{"gitID":"-"},"content":"        HashSet\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();"},{"lineNumber":311,"author":{"gitID":"-"},"content":"        for (String s : strings) {"},{"lineNumber":312,"author":{"gitID":"-"},"content":"            tags.add(new Tag(s));"},{"lineNumber":313,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":314,"author":{"gitID":"-"},"content":""},{"lineNumber":315,"author":{"gitID":"-"},"content":"        return tags;"},{"lineNumber":316,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":317,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"kexiaowen":78,"mhq199657":119,"-":55,"Ang-YC":53,"tanhengyeow":12}},{"path":"src/main/java/seedu/address/model/person/AddressContainsKeywordsPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.logic.commands.FindCommand;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.FindResults;"},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" * Tests that a {@code Person}\u0027s {@code Address} matches any of the keywords given."},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"public class AddressContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private final List\u003cString\u003e keywords;"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"    private final String commandPrefix \u003d \"a/\";"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    public AddressContainsKeywordsPredicate(List\u003cString\u003e keywords) {"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"        this.keywords \u003d keywords;"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"    public boolean test(Person person) {"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"        return keywords.stream()"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                .anyMatch(keyword -\u003e FindResults.getInstance()"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                        .containsWordIgnoreCase(person.getAddress().value, keyword, commandPrefix)"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":"                    || keywords.stream()"},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"                        .anyMatch(fuzzyKeyword -\u003e FindResults.getInstance().containsFuzzyMatchIgnoreCase("},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"                                person.getAddress().value, fuzzyKeyword, commandPrefix,"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"                                FindCommand.LEVENSHTEIN_DISTANCE_THRESHOLD)));"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof AddressContainsKeywordsPredicate // instanceof handles nulls"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.keywords.equals(((AddressContainsKeywordsPredicate) other).keywords)); // state check"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":5,"tanhengyeow":34}},{"path":"src/main/java/seedu/address/logic/commands/ShowCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.EventsCenter;"},{"lineNumber":6,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.commons.events.ui.ShowPanelRequestEvent;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":9,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.ui.InfoPanel;"},{"lineNumber":10,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.ui.PdfPanel;"},{"lineNumber":11,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":12,"author":{"gitID":"Ang-YC"},"content":"//@@author Ang-YC"},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":"/**"},{"lineNumber":14,"author":{"gitID":"Ang-YC"},"content":" * Shows a specific panel"},{"lineNumber":15,"author":{"gitID":"Ang-YC"},"content":" */"},{"lineNumber":16,"author":{"gitID":"Ang-YC"},"content":"public class ShowCommand extends Command {"},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":18,"author":{"gitID":"Ang-YC"},"content":"    public static final String COMMAND_WORD \u003d \"show\";"},{"lineNumber":19,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":20,"author":{"gitID":"Ang-YC"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":"            + \": Shows a specific panel. The panel can be either \u0027info\u0027 or \u0027resume\u0027.\\n\""},{"lineNumber":22,"author":{"gitID":"Ang-YC"},"content":"            + \"Make sure person are selected before calling this command.\\n\""},{"lineNumber":23,"author":{"gitID":"Ang-YC"},"content":"            + \"When resume is requested, it will only shows when it is available.\\n\""},{"lineNumber":24,"author":{"gitID":"Ang-YC"},"content":"            + \"Parameters: PANEL (must be either \u0027info\u0027 or \u0027resume\u0027, case sensitive)\\n\""},{"lineNumber":25,"author":{"gitID":"Ang-YC"},"content":"            + \"Example: \" + COMMAND_WORD + \" info\";"},{"lineNumber":26,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":27,"author":{"gitID":"Ang-YC"},"content":"    public static final String PANEL_INFO \u003d \"info\";"},{"lineNumber":28,"author":{"gitID":"Ang-YC"},"content":"    public static final String PANEL_RESUME \u003d \"resume\";"},{"lineNumber":29,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":30,"author":{"gitID":"Ang-YC"},"content":"    public static final String MESSAGE_NOT_SELECTED \u003d \"A person must be selected before showing a panel.\";"},{"lineNumber":31,"author":{"gitID":"Ang-YC"},"content":"    public static final String MESSAGE_RESUME_NA \u003d \"The selected person doesn\u0027t have a resume\";"},{"lineNumber":32,"author":{"gitID":"Ang-YC"},"content":"    public static final String MESSAGE_SHOW_SUCCESS \u003d \"Showing the requested panel\";"},{"lineNumber":33,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":34,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":35,"author":{"gitID":"Ang-YC"},"content":"     * Enumeration of acceptable panel"},{"lineNumber":36,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":37,"author":{"gitID":"Ang-YC"},"content":"    public enum Panel {"},{"lineNumber":38,"author":{"gitID":"Ang-YC"},"content":"        INFO, RESUME"},{"lineNumber":39,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":41,"author":{"gitID":"Ang-YC"},"content":"    private final Panel panel;"},{"lineNumber":42,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":43,"author":{"gitID":"Ang-YC"},"content":"    public ShowCommand(Panel panel) {"},{"lineNumber":44,"author":{"gitID":"Ang-YC"},"content":"        requireNonNull(panel);"},{"lineNumber":45,"author":{"gitID":"Ang-YC"},"content":"        this.panel \u003d panel;"},{"lineNumber":46,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":47,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":48,"author":{"gitID":"Ang-YC"},"content":"    @Override"},{"lineNumber":49,"author":{"gitID":"Ang-YC"},"content":"    public CommandResult execute() throws CommandException {"},{"lineNumber":50,"author":{"gitID":"Ang-YC"},"content":"        Person selectedPerson \u003d model.getSelectedPerson();"},{"lineNumber":51,"author":{"gitID":"Ang-YC"},"content":"        if (selectedPerson \u003d\u003d null) {"},{"lineNumber":52,"author":{"gitID":"Ang-YC"},"content":"            throw new CommandException(MESSAGE_NOT_SELECTED);"},{"lineNumber":53,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":54,"author":{"gitID":"Ang-YC"},"content":"        } else {"},{"lineNumber":55,"author":{"gitID":"Ang-YC"},"content":"            switch (panel) {"},{"lineNumber":56,"author":{"gitID":"Ang-YC"},"content":"            case INFO:"},{"lineNumber":57,"author":{"gitID":"Ang-YC"},"content":"                EventsCenter.getInstance().post(new ShowPanelRequestEvent(InfoPanel.PANEL_NAME));"},{"lineNumber":58,"author":{"gitID":"Ang-YC"},"content":"                break;"},{"lineNumber":59,"author":{"gitID":"Ang-YC"},"content":"            case RESUME:"},{"lineNumber":60,"author":{"gitID":"Ang-YC"},"content":"                if (selectedPerson.getResume().value !\u003d null) {"},{"lineNumber":61,"author":{"gitID":"Ang-YC"},"content":"                    EventsCenter.getInstance().post(new ShowPanelRequestEvent(PdfPanel.PANEL_NAME));"},{"lineNumber":62,"author":{"gitID":"Ang-YC"},"content":"                } else {"},{"lineNumber":63,"author":{"gitID":"Ang-YC"},"content":"                    throw new CommandException(MESSAGE_RESUME_NA);"},{"lineNumber":64,"author":{"gitID":"Ang-YC"},"content":"                }"},{"lineNumber":65,"author":{"gitID":"Ang-YC"},"content":"                break;"},{"lineNumber":66,"author":{"gitID":"Ang-YC"},"content":"            default:"},{"lineNumber":67,"author":{"gitID":"Ang-YC"},"content":"                break;"},{"lineNumber":68,"author":{"gitID":"Ang-YC"},"content":"            }"},{"lineNumber":69,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":70,"author":{"gitID":"Ang-YC"},"content":"            return new CommandResult(MESSAGE_SHOW_SUCCESS);"},{"lineNumber":71,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":72,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":74,"author":{"gitID":"Ang-YC"},"content":"    @Override"},{"lineNumber":75,"author":{"gitID":"Ang-YC"},"content":"    public boolean equals(Object other) {"},{"lineNumber":76,"author":{"gitID":"Ang-YC"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":77,"author":{"gitID":"Ang-YC"},"content":"                || (other instanceof ShowCommand // instanceof handles nulls"},{"lineNumber":78,"author":{"gitID":"Ang-YC"},"content":"                \u0026\u0026 this.panel.equals(((ShowCommand) other).panel)); // state check"},{"lineNumber":79,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":80,"author":{"gitID":"Ang-YC"},"content":"}"}],"authorContributionMap":{"-":6,"Ang-YC":74}},{"path":"src/main/java/seedu/address/model/person/InterviewDate.java","lines":[{"lineNumber":1,"author":{"gitID":"Ang-YC"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":3,"author":{"gitID":"Ang-YC"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitID":"Ang-YC"},"content":"import java.time.ZoneId;"},{"lineNumber":5,"author":{"gitID":"Ang-YC"},"content":"import java.time.ZoneOffset;"},{"lineNumber":6,"author":{"gitID":"Ang-YC"},"content":"import java.util.Objects;"},{"lineNumber":7,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":8,"author":{"gitID":"Ang-YC"},"content":"//@@author Ang-YC"},{"lineNumber":9,"author":{"gitID":"Ang-YC"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"Ang-YC"},"content":" * Represents a Person\u0027s interview date in the address book."},{"lineNumber":11,"author":{"gitID":"Ang-YC"},"content":" * Guarantees: immutable"},{"lineNumber":12,"author":{"gitID":"Ang-YC"},"content":" */"},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":"public class InterviewDate {"},{"lineNumber":14,"author":{"gitID":"Ang-YC"},"content":"    public static final String MESSAGE_INTERVIEW_DATE_XML_ERROR \u003d"},{"lineNumber":15,"author":{"gitID":"Ang-YC"},"content":"            \"Interview date must be in epoch format, failed to parse from XML\";"},{"lineNumber":16,"author":{"gitID":"Ang-YC"},"content":"    public static final ZoneOffset LOCAL_ZONE_OFFSET \u003d ZoneId.systemDefault().getRules().getOffset(LocalDateTime.now());"},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":18,"author":{"gitID":"Ang-YC"},"content":"    public final LocalDateTime dateTime;"},{"lineNumber":19,"author":{"gitID":"Ang-YC"},"content":"    public final String value;"},{"lineNumber":20,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":22,"author":{"gitID":"Ang-YC"},"content":"     * Constructs a {@code InterviewDate}."},{"lineNumber":23,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":24,"author":{"gitID":"Ang-YC"},"content":"    public InterviewDate() {"},{"lineNumber":25,"author":{"gitID":"Ang-YC"},"content":"        this((LocalDateTime) null);"},{"lineNumber":26,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":28,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":29,"author":{"gitID":"Ang-YC"},"content":"     * Constructs a {@code InterviewDate}."},{"lineNumber":30,"author":{"gitID":"Ang-YC"},"content":"     * @param timestamp A epoch timestamp"},{"lineNumber":31,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":32,"author":{"gitID":"Ang-YC"},"content":"    public InterviewDate(Long timestamp) {"},{"lineNumber":33,"author":{"gitID":"Ang-YC"},"content":"        this(LocalDateTime.ofEpochSecond(timestamp, 0, ZoneOffset.UTC));"},{"lineNumber":34,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":36,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":37,"author":{"gitID":"Ang-YC"},"content":"     * Constructs a {@code InterviewDate}."},{"lineNumber":38,"author":{"gitID":"Ang-YC"},"content":"     * @param dateTime of the person"},{"lineNumber":39,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":40,"author":{"gitID":"Ang-YC"},"content":"    public InterviewDate(LocalDateTime dateTime) {"},{"lineNumber":41,"author":{"gitID":"Ang-YC"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":42,"author":{"gitID":"Ang-YC"},"content":"        if (dateTime !\u003d null) {"},{"lineNumber":43,"author":{"gitID":"Ang-YC"},"content":"            this.value \u003d String.valueOf(dateTime.toEpochSecond(ZoneOffset.UTC));"},{"lineNumber":44,"author":{"gitID":"Ang-YC"},"content":"        } else {"},{"lineNumber":45,"author":{"gitID":"Ang-YC"},"content":"            this.value \u003d null;"},{"lineNumber":46,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":47,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":48,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":49,"author":{"gitID":"Ang-YC"},"content":"    public LocalDateTime getDateTime() {"},{"lineNumber":50,"author":{"gitID":"Ang-YC"},"content":"        return dateTime;"},{"lineNumber":51,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":53,"author":{"gitID":"Ang-YC"},"content":"    @Override"},{"lineNumber":54,"author":{"gitID":"Ang-YC"},"content":"    public String toString() {"},{"lineNumber":55,"author":{"gitID":"Ang-YC"},"content":"        return value;"},{"lineNumber":56,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":58,"author":{"gitID":"Ang-YC"},"content":"    @Override"},{"lineNumber":59,"author":{"gitID":"Ang-YC"},"content":"    public boolean equals(Object other) {"},{"lineNumber":60,"author":{"gitID":"Ang-YC"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":61,"author":{"gitID":"Ang-YC"},"content":"            return true;"},{"lineNumber":62,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":63,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":64,"author":{"gitID":"Ang-YC"},"content":"        if (!(other instanceof InterviewDate)) {"},{"lineNumber":65,"author":{"gitID":"Ang-YC"},"content":"            return false;"},{"lineNumber":66,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":67,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":68,"author":{"gitID":"Ang-YC"},"content":"        InterviewDate i \u003d (InterviewDate) other;"},{"lineNumber":69,"author":{"gitID":"Ang-YC"},"content":"        return Objects.equals(getDateTime(), i.getDateTime());"},{"lineNumber":70,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":71,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":72,"author":{"gitID":"Ang-YC"},"content":"    @Override"},{"lineNumber":73,"author":{"gitID":"Ang-YC"},"content":"    public int hashCode() {"},{"lineNumber":74,"author":{"gitID":"Ang-YC"},"content":"        return getDateTime().hashCode();"},{"lineNumber":75,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":76,"author":{"gitID":"Ang-YC"},"content":"}"}],"authorContributionMap":{"Ang-YC":76}},{"path":"src/main/java/seedu/address/model/FindResults.java","lines":[{"lineNumber":1,"author":{"gitID":"tanhengyeow"},"content":"package seedu.address.model;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"mhq199657"},"content":"import java.util.HashMap;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":"import java.util.HashSet;"},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"import java.util.logging.Logger;"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":"import org.apache.commons.lang.StringUtils;"},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":" * Singleton pattern class that stores the find results of exact, fuzzy and wildcard matches."},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":" * The class also provides string utility functions for predicates"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"public class FindResults {"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"    private static FindResults instance;"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"    private HashMap\u003cString, HashSet\u003cString\u003e\u003e exactResults;"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"    private HashMap\u003cString, HashSet\u003cString\u003e\u003e fuzzyResults;"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"    private HashMap\u003cString, HashSet\u003cString\u003e\u003e wildcardResults;"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"    private HashMap\u003cString, HashSet\u003cString\u003e\u003e currResults;"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"    private StringBuilder textResults;"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(this.getClass());"},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"    public FindResults() {"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        this.exactResults \u003d new HashMap\u003c\u003e();"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        this.fuzzyResults \u003d new HashMap\u003c\u003e();"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        this.wildcardResults \u003d new HashMap\u003c\u003e();"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"        this.currResults \u003d new HashMap\u003c\u003e();"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        this.textResults \u003d new StringBuilder();"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"    public static FindResults getInstance() {"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":"        if (instance \u003d\u003d null) {"},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"            instance \u003d new FindResults();"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":"        return instance;"},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"    public HashMap\u003cString, HashSet\u003cString\u003e\u003e getExactResults() {"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":"        return exactResults;"},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"    public HashMap\u003cString, HashSet\u003cString\u003e\u003e getFuzzyResults() {"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"        return fuzzyResults;"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":"    public HashMap\u003cString, HashSet\u003cString\u003e\u003e getWildcardResults() {"},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"        return wildcardResults;"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":"     * Clear contents of data structures storing find results"},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"    public void clearResults() {"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":"        this.exactResults \u003d new HashMap\u003c\u003e();"},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"        this.fuzzyResults \u003d new HashMap\u003c\u003e();"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"        this.wildcardResults \u003d new HashMap\u003c\u003e();"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"    public String getTextResults() {"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"        return textResults.toString();"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":69,"author":{"gitID":"tanhengyeow"},"content":"     * Form a StringBuilder containing the find results to display to the user. This is the driver method."},{"lineNumber":70,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":71,"author":{"gitID":"tanhengyeow"},"content":"    public void formTextResults() {"},{"lineNumber":72,"author":{"gitID":"tanhengyeow"},"content":"        logger.info(\"Forming text results to be displayed in application console\");"},{"lineNumber":73,"author":{"gitID":"tanhengyeow"},"content":"        textResults.setLength(0); //reset from last search"},{"lineNumber":74,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":75,"author":{"gitID":"tanhengyeow"},"content":"        textResults.append(\"Exact word search matches:\\n\");"},{"lineNumber":76,"author":{"gitID":"tanhengyeow"},"content":"        parseTextResults(\"exact\");"},{"lineNumber":77,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":78,"author":{"gitID":"tanhengyeow"},"content":"        textResults.append(\"\\nFuzzy search matches:\\n\");"},{"lineNumber":79,"author":{"gitID":"tanhengyeow"},"content":"        parseTextResults(\"fuzzy\");"},{"lineNumber":80,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":81,"author":{"gitID":"tanhengyeow"},"content":"        textResults.append(\"\\nWildcard search matches:\\n\");"},{"lineNumber":82,"author":{"gitID":"tanhengyeow"},"content":"        parseTextResults(\"wildcard\");"},{"lineNumber":83,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":84,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":85,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":86,"author":{"gitID":"tanhengyeow"},"content":"     * Returns true if the {@code sentence} contains the {@code word}."},{"lineNumber":87,"author":{"gitID":"tanhengyeow"},"content":"     *   Ignores case, but a full word match is required."},{"lineNumber":88,"author":{"gitID":"tanhengyeow"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e"},{"lineNumber":89,"author":{"gitID":"tanhengyeow"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true"},{"lineNumber":90,"author":{"gitID":"tanhengyeow"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true"},{"lineNumber":91,"author":{"gitID":"tanhengyeow"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match"},{"lineNumber":92,"author":{"gitID":"tanhengyeow"},"content":"     *       \u003c/pre\u003e"},{"lineNumber":93,"author":{"gitID":"tanhengyeow"},"content":"     * @param sentence cannot be null"},{"lineNumber":94,"author":{"gitID":"tanhengyeow"},"content":"     * @param word cannot be null, cannot be empty, must be a single word"},{"lineNumber":95,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":96,"author":{"gitID":"tanhengyeow"},"content":"    public boolean containsWordIgnoreCase(String sentence, String word, String commandPrefix) {"},{"lineNumber":97,"author":{"gitID":"tanhengyeow"},"content":"        //requireNonNull(sentence);"},{"lineNumber":98,"author":{"gitID":"tanhengyeow"},"content":"        if (sentence \u003d\u003d null) {"},{"lineNumber":99,"author":{"gitID":"tanhengyeow"},"content":"            sentence \u003d \"\";"},{"lineNumber":100,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":101,"author":{"gitID":"tanhengyeow"},"content":"        requireNonNull(word);"},{"lineNumber":102,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":103,"author":{"gitID":"tanhengyeow"},"content":"        String preppedWord \u003d word.trim();"},{"lineNumber":104,"author":{"gitID":"tanhengyeow"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");"},{"lineNumber":105,"author":{"gitID":"tanhengyeow"},"content":"        checkArgument(preppedWord.split(\",\").length \u003d\u003d 1, \"Word parameter should be a single word\");"},{"lineNumber":106,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":107,"author":{"gitID":"tanhengyeow"},"content":"        String preppedSentence \u003d sentence;"},{"lineNumber":108,"author":{"gitID":"tanhengyeow"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");"},{"lineNumber":109,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":110,"author":{"gitID":"tanhengyeow"},"content":"        for (String wordInSentence: wordsInPreppedSentence) {"},{"lineNumber":111,"author":{"gitID":"tanhengyeow"},"content":"            if (wordInSentence.equalsIgnoreCase(preppedWord)) {"},{"lineNumber":112,"author":{"gitID":"tanhengyeow"},"content":"                String value \u003d \"(\" + commandPrefix + \")\" + wordInSentence;"},{"lineNumber":113,"author":{"gitID":"tanhengyeow"},"content":"                parseFindResults(preppedWord, value, \"exact\");"},{"lineNumber":114,"author":{"gitID":"tanhengyeow"},"content":"                return true;"},{"lineNumber":115,"author":{"gitID":"tanhengyeow"},"content":"            }"},{"lineNumber":116,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":117,"author":{"gitID":"tanhengyeow"},"content":"        parseFindResults(preppedWord, \"-\", \"exact\"); //not found"},{"lineNumber":118,"author":{"gitID":"tanhengyeow"},"content":"        return false;"},{"lineNumber":119,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":120,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":121,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":122,"author":{"gitID":"tanhengyeow"},"content":"     * Returns true if the {@code sentence} is a fuzzy match with the {@code word}."},{"lineNumber":123,"author":{"gitID":"tanhengyeow"},"content":"     *   Ignores case, and a threshold is required"},{"lineNumber":124,"author":{"gitID":"tanhengyeow"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e"},{"lineNumber":125,"author":{"gitID":"tanhengyeow"},"content":"     *       containsFuzzyMatchIgnoreCase(\"aaapppp\", \"\", 8) \u003d\u003d true"},{"lineNumber":126,"author":{"gitID":"tanhengyeow"},"content":"     *       containsWordIgnoreCase(\"aaapppp\", \"\", 6) \u003d\u003d false"},{"lineNumber":127,"author":{"gitID":"tanhengyeow"},"content":"     *       containsWordIgnoreCase(\"hippo\", \"elephant\", 7) \u003d\u003d true"},{"lineNumber":128,"author":{"gitID":"tanhengyeow"},"content":"     *       \u003c/pre\u003e"},{"lineNumber":129,"author":{"gitID":"tanhengyeow"},"content":"     * @param sentence cannot be null"},{"lineNumber":130,"author":{"gitID":"tanhengyeow"},"content":"     * @param word cannot be null, cannot be empty, must be a single word"},{"lineNumber":131,"author":{"gitID":"tanhengyeow"},"content":"     * @param threshold cannot be null"},{"lineNumber":132,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":133,"author":{"gitID":"tanhengyeow"},"content":"    public boolean containsFuzzyMatchIgnoreCase(String sentence, String word,"},{"lineNumber":134,"author":{"gitID":"tanhengyeow"},"content":"                                                String commandPrefix,"},{"lineNumber":135,"author":{"gitID":"tanhengyeow"},"content":"                                                int threshold) {"},{"lineNumber":136,"author":{"gitID":"tanhengyeow"},"content":"        //requireNonNull(sentence);"},{"lineNumber":137,"author":{"gitID":"tanhengyeow"},"content":"        if (sentence \u003d\u003d null) {"},{"lineNumber":138,"author":{"gitID":"tanhengyeow"},"content":"            sentence \u003d \"\";"},{"lineNumber":139,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":140,"author":{"gitID":"tanhengyeow"},"content":"        requireNonNull(word);"},{"lineNumber":141,"author":{"gitID":"tanhengyeow"},"content":"        requireNonNull(threshold);"},{"lineNumber":142,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":143,"author":{"gitID":"tanhengyeow"},"content":"        String preppedWord \u003d word.trim();"},{"lineNumber":144,"author":{"gitID":"tanhengyeow"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");"},{"lineNumber":145,"author":{"gitID":"tanhengyeow"},"content":"        checkArgument(preppedWord.split(\",\").length \u003d\u003d 1, \"Word parameter should be a single word\");"},{"lineNumber":146,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":147,"author":{"gitID":"tanhengyeow"},"content":"        String preppedSentence \u003d sentence;"},{"lineNumber":148,"author":{"gitID":"tanhengyeow"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");"},{"lineNumber":149,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":150,"author":{"gitID":"tanhengyeow"},"content":"        for (String wordInSentence: wordsInPreppedSentence) {"},{"lineNumber":151,"author":{"gitID":"tanhengyeow"},"content":"            int levenshteinDistance \u003d StringUtils.getLevenshteinDistance("},{"lineNumber":152,"author":{"gitID":"tanhengyeow"},"content":"                    wordInSentence.toLowerCase(),"},{"lineNumber":153,"author":{"gitID":"tanhengyeow"},"content":"                    preppedWord.toLowerCase());"},{"lineNumber":154,"author":{"gitID":"tanhengyeow"},"content":"            if (levenshteinDistance \u003c\u003d threshold \u0026\u0026 levenshteinDistance !\u003d 0) {"},{"lineNumber":155,"author":{"gitID":"tanhengyeow"},"content":"                String value \u003d \"(\" + commandPrefix + \")\" + wordInSentence;"},{"lineNumber":156,"author":{"gitID":"tanhengyeow"},"content":"                parseFindResults(preppedWord, value, \"fuzzy\");"},{"lineNumber":157,"author":{"gitID":"tanhengyeow"},"content":"                return true;"},{"lineNumber":158,"author":{"gitID":"tanhengyeow"},"content":"            }"},{"lineNumber":159,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":160,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":161,"author":{"gitID":"tanhengyeow"},"content":"        parseFindResults(preppedWord, \"-\", \"fuzzy\"); // keyword not found"},{"lineNumber":162,"author":{"gitID":"tanhengyeow"},"content":"        return false;"},{"lineNumber":163,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":164,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":165,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":166,"author":{"gitID":"tanhengyeow"},"content":"     * Returns true if the {@code sentence} contains the {@code substring}."},{"lineNumber":167,"author":{"gitID":"tanhengyeow"},"content":"     *   Ignores case and matches the substring. Substring ignores spaces in between."},{"lineNumber":168,"author":{"gitID":"tanhengyeow"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e"},{"lineNumber":169,"author":{"gitID":"tanhengyeow"},"content":"     *       containsSubstringIgnoreCase(\"Tes ting\", \"e ting\") \u003d\u003d true"},{"lineNumber":170,"author":{"gitID":"tanhengyeow"},"content":"     *       containsSubstringIgnoreCase(\"TES ting\", \"e tin\") \u003d\u003d true"},{"lineNumber":171,"author":{"gitID":"tanhengyeow"},"content":"     *       containsSubstringIgnoreCase(\"TeS Ting\", \"ef\") \u003d\u003d false //not a substring"},{"lineNumber":172,"author":{"gitID":"tanhengyeow"},"content":"     *       \u003c/pre\u003e"},{"lineNumber":173,"author":{"gitID":"tanhengyeow"},"content":"     * @param sentence cannot be null"},{"lineNumber":174,"author":{"gitID":"tanhengyeow"},"content":"     * @param substring cannot be null, cannot be empty"},{"lineNumber":175,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":176,"author":{"gitID":"tanhengyeow"},"content":"    public boolean containsSubstringIgnoreCase(String sentence, String substring, String commandPrefix) {"},{"lineNumber":177,"author":{"gitID":"tanhengyeow"},"content":"        //requireNonNull(sentence);"},{"lineNumber":178,"author":{"gitID":"tanhengyeow"},"content":"        if (sentence \u003d\u003d null) {"},{"lineNumber":179,"author":{"gitID":"tanhengyeow"},"content":"            sentence \u003d \"\";"},{"lineNumber":180,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":181,"author":{"gitID":"tanhengyeow"},"content":"        requireNonNull(substring);"},{"lineNumber":182,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":183,"author":{"gitID":"tanhengyeow"},"content":"        String preppedSubstring \u003d substring;"},{"lineNumber":184,"author":{"gitID":"tanhengyeow"},"content":"        checkArgument(!preppedSubstring.isEmpty(), \"Substring parameter cannot be empty\");"},{"lineNumber":185,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":186,"author":{"gitID":"tanhengyeow"},"content":"        boolean isSubstringPresent \u003d StringUtils.containsIgnoreCase(sentence, preppedSubstring);"},{"lineNumber":187,"author":{"gitID":"tanhengyeow"},"content":"        String currKey \u003d \"\\\"\" + preppedSubstring + \"\\\"\";"},{"lineNumber":188,"author":{"gitID":"tanhengyeow"},"content":"        if (isSubstringPresent) {"},{"lineNumber":189,"author":{"gitID":"tanhengyeow"},"content":"            String value \u003d \"(\" + commandPrefix + \")\" + sentence;"},{"lineNumber":190,"author":{"gitID":"tanhengyeow"},"content":"            parseFindResults(currKey, value, \"wildcard\");"},{"lineNumber":191,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":192,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":193,"author":{"gitID":"tanhengyeow"},"content":"        parseFindResults(currKey, \"-\", \"wildcard\");"},{"lineNumber":194,"author":{"gitID":"tanhengyeow"},"content":"        return isSubstringPresent;"},{"lineNumber":195,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":196,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":197,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":198,"author":{"gitID":"tanhengyeow"},"content":"     * Returns true if the {@code sentence} contains the {@code prefix}."},{"lineNumber":199,"author":{"gitID":"tanhengyeow"},"content":"     *   Ignores case and matches the prefix."},{"lineNumber":200,"author":{"gitID":"tanhengyeow"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e"},{"lineNumber":201,"author":{"gitID":"tanhengyeow"},"content":"     *       containsPrefixIgnoreCase(\"Tes ting\", \"tes\") \u003d\u003d true"},{"lineNumber":202,"author":{"gitID":"tanhengyeow"},"content":"     *       containsPrefixIgnoreCase(\"TES ting\", \"TeS\") \u003d\u003d true"},{"lineNumber":203,"author":{"gitID":"tanhengyeow"},"content":"     *       containsPrefixIgnoreCase(\"TeS Ting\", \"ti\") \u003d\u003d false"},{"lineNumber":204,"author":{"gitID":"tanhengyeow"},"content":"     *       \u003c/pre\u003e"},{"lineNumber":205,"author":{"gitID":"tanhengyeow"},"content":"     * @param sentence cannot be null"},{"lineNumber":206,"author":{"gitID":"tanhengyeow"},"content":"     * @param prefix cannot be null, cannot be empty"},{"lineNumber":207,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":208,"author":{"gitID":"tanhengyeow"},"content":"    public boolean containsPrefixIgnoreCase(String sentence, String prefix, String commandPrefix) {"},{"lineNumber":209,"author":{"gitID":"tanhengyeow"},"content":"        //requireNonNull(sentence);"},{"lineNumber":210,"author":{"gitID":"tanhengyeow"},"content":"        if (sentence \u003d\u003d null) {"},{"lineNumber":211,"author":{"gitID":"tanhengyeow"},"content":"            sentence \u003d \"\";"},{"lineNumber":212,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":213,"author":{"gitID":"tanhengyeow"},"content":"        requireNonNull(prefix);"},{"lineNumber":214,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":215,"author":{"gitID":"tanhengyeow"},"content":"        String preppedPrefix \u003d prefix.trim();"},{"lineNumber":216,"author":{"gitID":"tanhengyeow"},"content":"        checkArgument(!preppedPrefix.isEmpty(), \"Prefix parameter cannot be empty\");"},{"lineNumber":217,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":218,"author":{"gitID":"tanhengyeow"},"content":"        boolean isPrefixPresent \u003d StringUtils.startsWithIgnoreCase(sentence, preppedPrefix);"},{"lineNumber":219,"author":{"gitID":"tanhengyeow"},"content":"        String currKey \u003d prefix + \"*\";"},{"lineNumber":220,"author":{"gitID":"tanhengyeow"},"content":"        if (isPrefixPresent) {"},{"lineNumber":221,"author":{"gitID":"tanhengyeow"},"content":"            String value \u003d \"(\" + commandPrefix + \")\" + sentence;"},{"lineNumber":222,"author":{"gitID":"tanhengyeow"},"content":"            parseFindResults(currKey, value, \"wildcard\");"},{"lineNumber":223,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":224,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":225,"author":{"gitID":"tanhengyeow"},"content":"        parseFindResults(currKey, \"-\", \"wildcard\");"},{"lineNumber":226,"author":{"gitID":"tanhengyeow"},"content":"        return isPrefixPresent;"},{"lineNumber":227,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":228,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":229,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":230,"author":{"gitID":"tanhengyeow"},"content":"     * Returns true if the {@code sentence} contains the {@code suffix}."},{"lineNumber":231,"author":{"gitID":"tanhengyeow"},"content":"     *   Ignores case and matches the suffix."},{"lineNumber":232,"author":{"gitID":"tanhengyeow"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e"},{"lineNumber":233,"author":{"gitID":"tanhengyeow"},"content":"     *       containsSuffixIgnoreCase(\"Tes ting\", \"ing\") \u003d\u003d true"},{"lineNumber":234,"author":{"gitID":"tanhengyeow"},"content":"     *       containsSuffixIgnoreCase(\"TES ting\", \"NG\") \u003d\u003d true"},{"lineNumber":235,"author":{"gitID":"tanhengyeow"},"content":"     *       containsSuffixIgnoreCase(\"TeS Ting\", \"es\") \u003d\u003d false"},{"lineNumber":236,"author":{"gitID":"tanhengyeow"},"content":"     *       \u003c/pre\u003e"},{"lineNumber":237,"author":{"gitID":"tanhengyeow"},"content":"     * @param sentence cannot be null"},{"lineNumber":238,"author":{"gitID":"tanhengyeow"},"content":"     * @param suffix cannot be null, cannot be empty"},{"lineNumber":239,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":240,"author":{"gitID":"tanhengyeow"},"content":"    public boolean containsSuffixIgnoreCase(String sentence, String suffix, String commandPrefix) {"},{"lineNumber":241,"author":{"gitID":"tanhengyeow"},"content":"        //requireNonNull(sentence);"},{"lineNumber":242,"author":{"gitID":"tanhengyeow"},"content":"        if (sentence \u003d\u003d null) {"},{"lineNumber":243,"author":{"gitID":"tanhengyeow"},"content":"            sentence \u003d \"\";"},{"lineNumber":244,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":245,"author":{"gitID":"tanhengyeow"},"content":"        requireNonNull(suffix);"},{"lineNumber":246,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":247,"author":{"gitID":"tanhengyeow"},"content":"        String preppedSuffix \u003d suffix.trim();"},{"lineNumber":248,"author":{"gitID":"tanhengyeow"},"content":"        checkArgument(!preppedSuffix.isEmpty(), \"Suffix parameter cannot be empty\");"},{"lineNumber":249,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":250,"author":{"gitID":"tanhengyeow"},"content":"        boolean isSuffixPresent \u003d StringUtils.endsWithIgnoreCase(sentence, preppedSuffix);"},{"lineNumber":251,"author":{"gitID":"tanhengyeow"},"content":"        String currKey \u003d  \"*\" + suffix;"},{"lineNumber":252,"author":{"gitID":"tanhengyeow"},"content":"        if (isSuffixPresent) {"},{"lineNumber":253,"author":{"gitID":"tanhengyeow"},"content":"            String value \u003d \"(\" + commandPrefix + \")\" + sentence;"},{"lineNumber":254,"author":{"gitID":"tanhengyeow"},"content":"            parseFindResults(currKey, value, \"wildcard\");"},{"lineNumber":255,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":256,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":257,"author":{"gitID":"tanhengyeow"},"content":"        parseFindResults(currKey, \"-\", \"wildcard\");"},{"lineNumber":258,"author":{"gitID":"tanhengyeow"},"content":"        return isSuffixPresent;"},{"lineNumber":259,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":260,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":261,"author":{"gitID":"tanhengyeow"},"content":"    private void parseFindResults(String key, String value, String resultsType) {"},{"lineNumber":262,"author":{"gitID":"tanhengyeow"},"content":"        chooseResultsType(resultsType);"},{"lineNumber":263,"author":{"gitID":"tanhengyeow"},"content":"        insertKeyValuePair(key, value);"},{"lineNumber":264,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":265,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":266,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":267,"author":{"gitID":"tanhengyeow"},"content":"     * Inserts a key pair value a HashMap according to the search option"},{"lineNumber":268,"author":{"gitID":"tanhengyeow"},"content":"     * @param key represents the keyword being search"},{"lineNumber":269,"author":{"gitID":"tanhengyeow"},"content":"     * @param value represents the search results that corresponds to the keyword being search"},{"lineNumber":270,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":271,"author":{"gitID":"tanhengyeow"},"content":"    private void insertKeyValuePair(String key, String value) {"},{"lineNumber":272,"author":{"gitID":"tanhengyeow"},"content":"        HashSet\u003cString\u003e resultsSet \u003d new HashSet\u003c\u003e();"},{"lineNumber":273,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":274,"author":{"gitID":"tanhengyeow"},"content":"        // insert new key value pair into currResults"},{"lineNumber":275,"author":{"gitID":"tanhengyeow"},"content":"        if (currResults.containsKey(key)) {"},{"lineNumber":276,"author":{"gitID":"tanhengyeow"},"content":"            resultsSet \u003d currResults.get(key);"},{"lineNumber":277,"author":{"gitID":"tanhengyeow"},"content":"            resultsSet.add(value);"},{"lineNumber":278,"author":{"gitID":"tanhengyeow"},"content":"            currResults.put(key, resultsSet);"},{"lineNumber":279,"author":{"gitID":"tanhengyeow"},"content":"        } else {"},{"lineNumber":280,"author":{"gitID":"tanhengyeow"},"content":"            resultsSet.add(value);"},{"lineNumber":281,"author":{"gitID":"tanhengyeow"},"content":"            currResults.put(key, resultsSet);"},{"lineNumber":282,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":283,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":284,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":285,"author":{"gitID":"tanhengyeow"},"content":"    private void parseTextResults(String resultsType) {"},{"lineNumber":286,"author":{"gitID":"tanhengyeow"},"content":"        chooseResultsType(resultsType);"},{"lineNumber":287,"author":{"gitID":"tanhengyeow"},"content":"        buildTextResults();"},{"lineNumber":288,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":289,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":290,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":291,"author":{"gitID":"tanhengyeow"},"content":"     * Form a StringBuilder containing the find results to display to the user. This method parses the current HashMap."},{"lineNumber":292,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":293,"author":{"gitID":"tanhengyeow"},"content":"    private void buildTextResults() {"},{"lineNumber":294,"author":{"gitID":"tanhengyeow"},"content":"        HashSet\u003cString\u003e resultsSet;"},{"lineNumber":295,"author":{"gitID":"tanhengyeow"},"content":"        for (String key: currResults.keySet()) {"},{"lineNumber":296,"author":{"gitID":"tanhengyeow"},"content":"            resultsSet \u003d currResults.get(key);"},{"lineNumber":297,"author":{"gitID":"tanhengyeow"},"content":"            textResults.append(key + \": \");"},{"lineNumber":298,"author":{"gitID":"tanhengyeow"},"content":"            for (String value: resultsSet) {"},{"lineNumber":299,"author":{"gitID":"tanhengyeow"},"content":"                if (resultsSet.size() \u003d\u003d 1 || !value.equals(\"-\")) {"},{"lineNumber":300,"author":{"gitID":"tanhengyeow"},"content":"                    textResults.append(value + \" \");"},{"lineNumber":301,"author":{"gitID":"tanhengyeow"},"content":"                }"},{"lineNumber":302,"author":{"gitID":"tanhengyeow"},"content":"            }"},{"lineNumber":303,"author":{"gitID":"tanhengyeow"},"content":"            textResults.append(\"\\n\");"},{"lineNumber":304,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":305,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":306,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":307,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":308,"author":{"gitID":"tanhengyeow"},"content":"     * Chooses the corresponding HashMap according to the option."},{"lineNumber":309,"author":{"gitID":"tanhengyeow"},"content":"     * @param resultsType represents the type of HashMap to choose from"},{"lineNumber":310,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":311,"author":{"gitID":"tanhengyeow"},"content":"    private void chooseResultsType(String resultsType) {"},{"lineNumber":312,"author":{"gitID":"tanhengyeow"},"content":"        switch(resultsType) {"},{"lineNumber":313,"author":{"gitID":"tanhengyeow"},"content":"        case \"exact\":"},{"lineNumber":314,"author":{"gitID":"tanhengyeow"},"content":"            currResults \u003d exactResults;"},{"lineNumber":315,"author":{"gitID":"tanhengyeow"},"content":"            break;"},{"lineNumber":316,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":317,"author":{"gitID":"tanhengyeow"},"content":"        case \"fuzzy\":"},{"lineNumber":318,"author":{"gitID":"tanhengyeow"},"content":"            currResults \u003d fuzzyResults;"},{"lineNumber":319,"author":{"gitID":"tanhengyeow"},"content":"            break;"},{"lineNumber":320,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":321,"author":{"gitID":"tanhengyeow"},"content":"        case \"wildcard\":"},{"lineNumber":322,"author":{"gitID":"tanhengyeow"},"content":"            currResults \u003d wildcardResults;"},{"lineNumber":323,"author":{"gitID":"tanhengyeow"},"content":"            break;"},{"lineNumber":324,"author":{"gitID":"tanhengyeow"},"content":"        default:"},{"lineNumber":325,"author":{"gitID":"tanhengyeow"},"content":"            break;"},{"lineNumber":326,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":327,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":328,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"mhq199657":1,"-":4,"tanhengyeow":323}},{"path":"src/main/java/seedu/address/model/person/MajorContainsSubstringsPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.FindResults;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":" * Tests that a {@code Person}\u0027s {@code Major} matches the substring given."},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"public class MajorContainsSubstringsPredicate implements Predicate\u003cPerson\u003e {"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"    private final List\u003cString\u003e substringKeywords;"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private final String commandPrefix \u003d \"m/\";"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"    public MajorContainsSubstringsPredicate(List\u003cString\u003e substringKeywords) {"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"        this.substringKeywords \u003d substringKeywords;"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"    public boolean test(Person person) {"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        return substringKeywords.stream()"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                .anyMatch(substring -\u003e FindResults.getInstance().containsSubstringIgnoreCase("},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                        person.getMajor().value, substring, commandPrefix));"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof MajorContainsSubstringsPredicate // instanceof handles nulls"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.substringKeywords.equals(("},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                        (MajorContainsSubstringsPredicate) other).substringKeywords)); // state check"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":5,"tanhengyeow":30}},{"path":"src/main/java/seedu/address/model/person/JobAppliedContainsPrefixesPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.FindResults;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":" * Tests that a {@code Person}\u0027s {@code JobApplied} matches the prefix string given."},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"public class JobAppliedContainsPrefixesPredicate implements Predicate\u003cPerson\u003e {"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"    private final List\u003cString\u003e prefixKeywords;"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private final String commandPrefix \u003d \"j/\";"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"    public JobAppliedContainsPrefixesPredicate(List\u003cString\u003e prefixKeywords) {"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"        this.prefixKeywords \u003d prefixKeywords;"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"    public boolean test(Person person) {"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        return prefixKeywords.stream()"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                .anyMatch(prefix -\u003e FindResults.getInstance().containsPrefixIgnoreCase("},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                        person.getJobApplied().value, prefix, commandPrefix));"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof JobAppliedContainsPrefixesPredicate // instanceof handles nulls"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.prefixKeywords.equals(("},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                (JobAppliedContainsPrefixesPredicate) other).prefixKeywords)); // state check"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":5,"tanhengyeow":30}},{"path":"src/main/java/seedu/address/model/person/Resume.java","lines":[{"lineNumber":1,"author":{"gitID":"mhq199657"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":3,"author":{"gitID":"mhq199657"},"content":"import static java.util.Objects.isNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.io.File;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.nio.file.Files;"},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":"//@@author mhq199657"},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":"/**"},{"lineNumber":12,"author":{"gitID":"mhq199657"},"content":" * Represents a Person\u0027s resume\u0027s file name in the address book."},{"lineNumber":13,"author":{"gitID":"mhq199657"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidResume(String)}"},{"lineNumber":14,"author":{"gitID":"mhq199657"},"content":" */"},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":"public class Resume {"},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":"    public static final String MESSAGE_RESUME_CONSTRAINTS \u003d"},{"lineNumber":17,"author":{"gitID":"mhq199657"},"content":"            \"Resume file should be at least 1 character long, exist in the same directory as the jar programme, \""},{"lineNumber":18,"author":{"gitID":"mhq199657"},"content":"                    + \"smaller than 1MB and should be a valid PDF.\";"},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":"    private static final int ONEMEGABYTE \u003d 1 * 1024 * 1024;"},{"lineNumber":20,"author":{"gitID":"mhq199657"},"content":"    private static final String RESUME_VALIDATION_REGEX \u003d \".*\\\\S.*\";"},{"lineNumber":21,"author":{"gitID":"mhq199657"},"content":"    public final String value;"},{"lineNumber":22,"author":{"gitID":"mhq199657"},"content":"    public final String userInput;"},{"lineNumber":23,"author":{"gitID":"mhq199657"},"content":"    private boolean isHashed;"},{"lineNumber":24,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":25,"author":{"gitID":"mhq199657"},"content":"     * Constructs a {@code Resume}."},{"lineNumber":26,"author":{"gitID":"mhq199657"},"content":"     *"},{"lineNumber":27,"author":{"gitID":"mhq199657"},"content":"     * @param fileName A valid fileName."},{"lineNumber":28,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":29,"author":{"gitID":"mhq199657"},"content":"    public Resume(String fileName) {"},{"lineNumber":30,"author":{"gitID":"mhq199657"},"content":"        isHashed \u003d false;"},{"lineNumber":31,"author":{"gitID":"mhq199657"},"content":"        if (isNull(fileName)) {"},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":"            this.value \u003d null;"},{"lineNumber":33,"author":{"gitID":"mhq199657"},"content":"            this.userInput \u003d null;"},{"lineNumber":34,"author":{"gitID":"mhq199657"},"content":"        } else {"},{"lineNumber":35,"author":{"gitID":"mhq199657"},"content":"            checkArgument(isValidResume(fileName), MESSAGE_RESUME_CONSTRAINTS);"},{"lineNumber":36,"author":{"gitID":"mhq199657"},"content":"            this.value \u003d fileName;"},{"lineNumber":37,"author":{"gitID":"mhq199657"},"content":"            userInput \u003d fileName;"},{"lineNumber":38,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":39,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":41,"author":{"gitID":"mhq199657"},"content":"    public Resume(String storageFileName, String userFileName) {"},{"lineNumber":42,"author":{"gitID":"mhq199657"},"content":"        isHashed \u003d true;"},{"lineNumber":43,"author":{"gitID":"mhq199657"},"content":"        if (isNull(storageFileName)) {"},{"lineNumber":44,"author":{"gitID":"mhq199657"},"content":"            this.value \u003d null;"},{"lineNumber":45,"author":{"gitID":"mhq199657"},"content":"            this.userInput \u003d null;"},{"lineNumber":46,"author":{"gitID":"mhq199657"},"content":"        } else {"},{"lineNumber":47,"author":{"gitID":"mhq199657"},"content":"            checkArgument(isValidResume(storageFileName), MESSAGE_RESUME_CONSTRAINTS);"},{"lineNumber":48,"author":{"gitID":"mhq199657"},"content":"            this.value \u003d storageFileName;"},{"lineNumber":49,"author":{"gitID":"mhq199657"},"content":"            userInput \u003d userFileName;"},{"lineNumber":50,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":51,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":53,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":54,"author":{"gitID":"mhq199657"},"content":"     * Returns true if a given string is a valid person resume."},{"lineNumber":55,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":56,"author":{"gitID":"mhq199657"},"content":"    public static boolean isValidResume(String test) {"},{"lineNumber":57,"author":{"gitID":"mhq199657"},"content":"        requireNonNull(test);"},{"lineNumber":58,"author":{"gitID":"mhq199657"},"content":"        if (!test.matches(RESUME_VALIDATION_REGEX)) {"},{"lineNumber":59,"author":{"gitID":"mhq199657"},"content":"            return false;"},{"lineNumber":60,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":61,"author":{"gitID":"mhq199657"},"content":"        String userDir \u003d System.getProperty(\"user.dir\");"},{"lineNumber":62,"author":{"gitID":"mhq199657"},"content":"        File resumeFile \u003d new File(userDir + File.separator + test);"},{"lineNumber":63,"author":{"gitID":"mhq199657"},"content":"        if (resumeFile.isDirectory()) {"},{"lineNumber":64,"author":{"gitID":"mhq199657"},"content":"            return false;"},{"lineNumber":65,"author":{"gitID":"mhq199657"},"content":"        } else if (!resumeFile.exists()) {"},{"lineNumber":66,"author":{"gitID":"mhq199657"},"content":"            return false;"},{"lineNumber":67,"author":{"gitID":"mhq199657"},"content":"        } else {"},{"lineNumber":68,"author":{"gitID":"mhq199657"},"content":"            if (resumeFile.length() \u003e ONEMEGABYTE) {"},{"lineNumber":69,"author":{"gitID":"mhq199657"},"content":"                return false;"},{"lineNumber":70,"author":{"gitID":"mhq199657"},"content":"            } else {"},{"lineNumber":71,"author":{"gitID":"mhq199657"},"content":"                try {"},{"lineNumber":72,"author":{"gitID":"mhq199657"},"content":"                    byte[] resumeBytes \u003d Files.readAllBytes(resumeFile.toPath());"},{"lineNumber":73,"author":{"gitID":"mhq199657"},"content":"                    return isPdf(resumeBytes);"},{"lineNumber":74,"author":{"gitID":"mhq199657"},"content":"                } catch (IOException ioe) {"},{"lineNumber":75,"author":{"gitID":"mhq199657"},"content":"                    return false;"},{"lineNumber":76,"author":{"gitID":"mhq199657"},"content":"                }"},{"lineNumber":77,"author":{"gitID":"mhq199657"},"content":"            }"},{"lineNumber":78,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":79,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":80,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":81,"author":{"gitID":"mhq199657"},"content":"     * Returns true if a given byte array is of pdf type."},{"lineNumber":82,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":83,"author":{"gitID":"mhq199657"},"content":"    private static boolean isPdf(byte[] data) {"},{"lineNumber":84,"author":{"gitID":"mhq199657"},"content":"        if (data !\u003d null \u0026\u0026 data.length \u003e 4"},{"lineNumber":85,"author":{"gitID":"mhq199657"},"content":"                \u0026\u0026 data[0] \u003d\u003d 0x25 \u0026\u0026 // %"},{"lineNumber":86,"author":{"gitID":"mhq199657"},"content":"                data[1] \u003d\u003d 0x50 \u0026\u0026 // P"},{"lineNumber":87,"author":{"gitID":"mhq199657"},"content":"                data[2] \u003d\u003d 0x44 \u0026\u0026 // D"},{"lineNumber":88,"author":{"gitID":"mhq199657"},"content":"                data[3] \u003d\u003d 0x46 \u0026\u0026 // F"},{"lineNumber":89,"author":{"gitID":"mhq199657"},"content":"                data[4] \u003d\u003d 0x2D) { // -"},{"lineNumber":90,"author":{"gitID":"mhq199657"},"content":"            // version 1.3 file terminator"},{"lineNumber":91,"author":{"gitID":"mhq199657"},"content":"            if (data[5] \u003d\u003d 0x31 \u0026\u0026 data[6] \u003d\u003d 0x2E \u0026\u0026 data[7] \u003d\u003d 0x33"},{"lineNumber":92,"author":{"gitID":"mhq199657"},"content":"                    \u0026\u0026 data[data.length - 7] \u003d\u003d 0x25 \u0026\u0026 // %"},{"lineNumber":93,"author":{"gitID":"mhq199657"},"content":"                    data[data.length - 6] \u003d\u003d 0x25 \u0026\u0026 // %"},{"lineNumber":94,"author":{"gitID":"mhq199657"},"content":"                    data[data.length - 5] \u003d\u003d 0x45 \u0026\u0026 // E"},{"lineNumber":95,"author":{"gitID":"mhq199657"},"content":"                    data[data.length - 4] \u003d\u003d 0x4F \u0026\u0026 // O"},{"lineNumber":96,"author":{"gitID":"mhq199657"},"content":"                    data[data.length - 3] \u003d\u003d 0x46 \u0026\u0026 // F"},{"lineNumber":97,"author":{"gitID":"mhq199657"},"content":"                    data[data.length - 2] \u003d\u003d 0x20 \u0026\u0026 (// SPACE"},{"lineNumber":98,"author":{"gitID":"mhq199657"},"content":"                    data[data.length - 1] \u003d\u003d 0x0A || data[data.length - 1] \u003d\u003d 0x0D)) { // EOL or CR"},{"lineNumber":99,"author":{"gitID":"mhq199657"},"content":"                return true;"},{"lineNumber":100,"author":{"gitID":"mhq199657"},"content":"            }"},{"lineNumber":101,"author":{"gitID":"mhq199657"},"content":"            // version 1.3 file terminator"},{"lineNumber":102,"author":{"gitID":"mhq199657"},"content":"            if (data[5] \u003d\u003d 0x31 \u0026\u0026 data[6] \u003d\u003d 0x2E \u0026\u0026 data[7] \u003d\u003d 0x33"},{"lineNumber":103,"author":{"gitID":"mhq199657"},"content":"                    \u0026\u0026 data[data.length - 6] \u003d\u003d 0x25 \u0026\u0026 // %"},{"lineNumber":104,"author":{"gitID":"mhq199657"},"content":"                    data[data.length - 5] \u003d\u003d 0x25 \u0026\u0026 // %"},{"lineNumber":105,"author":{"gitID":"mhq199657"},"content":"                    data[data.length - 4] \u003d\u003d 0x45 \u0026\u0026 // E"},{"lineNumber":106,"author":{"gitID":"mhq199657"},"content":"                    data[data.length - 3] \u003d\u003d 0x4F \u0026\u0026 // O"},{"lineNumber":107,"author":{"gitID":"mhq199657"},"content":"                    data[data.length - 2] \u003d\u003d 0x46 \u0026\u0026 (// F"},{"lineNumber":108,"author":{"gitID":"mhq199657"},"content":"                    data[data.length - 1] \u003d\u003d 0x0A || data[data.length - 1] \u003d\u003d 0x0D)) { // EOL"},{"lineNumber":109,"author":{"gitID":"mhq199657"},"content":"                return true;"},{"lineNumber":110,"author":{"gitID":"mhq199657"},"content":"            }"},{"lineNumber":111,"author":{"gitID":"mhq199657"},"content":"            // version 1.4 file terminator"},{"lineNumber":112,"author":{"gitID":"mhq199657"},"content":"            if (data[5] \u003d\u003d 0x31 \u0026\u0026 data[6] \u003d\u003d 0x2E \u0026\u0026 data[7] \u003d\u003d 0x34"},{"lineNumber":113,"author":{"gitID":"mhq199657"},"content":"                    \u0026\u0026 data[data.length - 6] \u003d\u003d 0x25 \u0026\u0026 // %"},{"lineNumber":114,"author":{"gitID":"mhq199657"},"content":"                    data[data.length - 5] \u003d\u003d 0x25 \u0026\u0026 // %"},{"lineNumber":115,"author":{"gitID":"mhq199657"},"content":"                    data[data.length - 4] \u003d\u003d 0x45 \u0026\u0026 // E"},{"lineNumber":116,"author":{"gitID":"mhq199657"},"content":"                    data[data.length - 3] \u003d\u003d 0x4F \u0026\u0026 // O"},{"lineNumber":117,"author":{"gitID":"mhq199657"},"content":"                    data[data.length - 2] \u003d\u003d 0x46 \u0026\u0026 (// F"},{"lineNumber":118,"author":{"gitID":"mhq199657"},"content":"                    data[data.length - 1] \u003d\u003d 0x0A || data[data.length - 1] \u003d\u003d 0x0D)) { // EOL"},{"lineNumber":119,"author":{"gitID":"mhq199657"},"content":"                return true;"},{"lineNumber":120,"author":{"gitID":"mhq199657"},"content":"            }"},{"lineNumber":121,"author":{"gitID":"mhq199657"},"content":"            // version 1.5 file terminator"},{"lineNumber":122,"author":{"gitID":"mhq199657"},"content":"            if (data[5] \u003d\u003d 0x31 \u0026\u0026 data[6] \u003d\u003d 0x2E \u0026\u0026 data[7] \u003d\u003d 0x35"},{"lineNumber":123,"author":{"gitID":"mhq199657"},"content":"                    \u0026\u0026 data[data.length - 6] \u003d\u003d 0x25 \u0026\u0026 // %"},{"lineNumber":124,"author":{"gitID":"mhq199657"},"content":"                    data[data.length - 5] \u003d\u003d 0x25 \u0026\u0026 // %"},{"lineNumber":125,"author":{"gitID":"mhq199657"},"content":"                    data[data.length - 4] \u003d\u003d 0x45 \u0026\u0026 // E"},{"lineNumber":126,"author":{"gitID":"mhq199657"},"content":"                    data[data.length - 3] \u003d\u003d 0x4F \u0026\u0026 // O"},{"lineNumber":127,"author":{"gitID":"mhq199657"},"content":"                    data[data.length - 2] \u003d\u003d 0x46 \u0026\u0026 (// F"},{"lineNumber":128,"author":{"gitID":"mhq199657"},"content":"                    data[data.length - 1] \u003d\u003d 0x0A || data[data.length - 1] \u003d\u003d 0x0D)) { // EOL"},{"lineNumber":129,"author":{"gitID":"mhq199657"},"content":"                return true;"},{"lineNumber":130,"author":{"gitID":"mhq199657"},"content":"            }"},{"lineNumber":131,"author":{"gitID":"mhq199657"},"content":"            if (data[5] \u003d\u003d 0x31 \u0026\u0026 data[6] \u003d\u003d 0x2E \u0026\u0026 data[7] \u003d\u003d 0x35"},{"lineNumber":132,"author":{"gitID":"mhq199657"},"content":"                    \u0026\u0026 data[data.length - 5] \u003d\u003d 0x25 \u0026\u0026 // %"},{"lineNumber":133,"author":{"gitID":"mhq199657"},"content":"                    data[data.length - 4] \u003d\u003d 0x25 \u0026\u0026 // %"},{"lineNumber":134,"author":{"gitID":"mhq199657"},"content":"                    data[data.length - 3] \u003d\u003d 0x45 \u0026\u0026 // E"},{"lineNumber":135,"author":{"gitID":"mhq199657"},"content":"                    data[data.length - 2] \u003d\u003d 0x4F \u0026\u0026 // O"},{"lineNumber":136,"author":{"gitID":"mhq199657"},"content":"                    data[data.length - 1] \u003d\u003d 0x46) { // F"},{"lineNumber":137,"author":{"gitID":"mhq199657"},"content":"                return true;"},{"lineNumber":138,"author":{"gitID":"mhq199657"},"content":"            }"},{"lineNumber":139,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":140,"author":{"gitID":"mhq199657"},"content":"        return false;"},{"lineNumber":141,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":142,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":143,"author":{"gitID":"mhq199657"},"content":"    public boolean isHashed() {"},{"lineNumber":144,"author":{"gitID":"mhq199657"},"content":"        return isHashed;"},{"lineNumber":145,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":146,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":147,"author":{"gitID":"mhq199657"},"content":"    @Override"},{"lineNumber":148,"author":{"gitID":"mhq199657"},"content":"    public String toString() {"},{"lineNumber":149,"author":{"gitID":"mhq199657"},"content":"        return userInput;"},{"lineNumber":150,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":151,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":152,"author":{"gitID":"mhq199657"},"content":"    @Override"},{"lineNumber":153,"author":{"gitID":"mhq199657"},"content":"    public boolean equals(Object other) {"},{"lineNumber":154,"author":{"gitID":"mhq199657"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":155,"author":{"gitID":"mhq199657"},"content":"                || (other instanceof Resume // instanceof handles nulls"},{"lineNumber":156,"author":{"gitID":"mhq199657"},"content":"                \u0026\u0026 ((this.value \u003d\u003d null \u0026\u0026 ((Resume) other).value \u003d\u003d null) //both value are null"},{"lineNumber":157,"author":{"gitID":"mhq199657"},"content":"                    || (isHashed \u0026\u0026 ((Resume) other).isHashed) ? isHashEqual(this.value, ((Resume) other).value)"},{"lineNumber":158,"author":{"gitID":"mhq199657"},"content":"                                : this.userInput.equals(((Resume) other).userInput))); // state check"},{"lineNumber":159,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":160,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":161,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":162,"author":{"gitID":"mhq199657"},"content":"     * Checks whether the hash of two resume are the same"},{"lineNumber":163,"author":{"gitID":"mhq199657"},"content":"     * @param first resume"},{"lineNumber":164,"author":{"gitID":"mhq199657"},"content":"     * @param second resume"},{"lineNumber":165,"author":{"gitID":"mhq199657"},"content":"     * @return same as true or false otherwise"},{"lineNumber":166,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":167,"author":{"gitID":"mhq199657"},"content":"    private boolean isHashEqual(String first, String second) {"},{"lineNumber":168,"author":{"gitID":"mhq199657"},"content":"        assert(first.split(\"_\").length \u003d\u003d 2);"},{"lineNumber":169,"author":{"gitID":"mhq199657"},"content":"        String firstHash \u003d first.split(\"_\")[1];"},{"lineNumber":170,"author":{"gitID":"mhq199657"},"content":"        String secondHash \u003d second.split(\"_\")[1];"},{"lineNumber":171,"author":{"gitID":"mhq199657"},"content":"        return firstHash.equals(secondHash);"},{"lineNumber":172,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":173,"author":{"gitID":"mhq199657"},"content":"    @Override"},{"lineNumber":174,"author":{"gitID":"mhq199657"},"content":"    public int hashCode() {"},{"lineNumber":175,"author":{"gitID":"mhq199657"},"content":"        return value.hashCode();"},{"lineNumber":176,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":177,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":178,"author":{"gitID":"mhq199657"},"content":"}"}],"authorContributionMap":{"mhq199657":172,"-":6}},{"path":"src/main/java/seedu/address/model/person/MajorContainsPrefixesPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.FindResults;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":" * Tests that a {@code Person}\u0027s {@code Major} matches the prefix string given."},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"public class MajorContainsPrefixesPredicate implements Predicate\u003cPerson\u003e {"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"    private final List\u003cString\u003e prefixKeywords;"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private final String commandPrefix \u003d \"m/\";"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"    public MajorContainsPrefixesPredicate(List\u003cString\u003e prefixKeywords) {"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"        this.prefixKeywords \u003d prefixKeywords;"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"    public boolean test(Person person) {"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        return prefixKeywords.stream()"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                .anyMatch(prefix -\u003e FindResults.getInstance().containsPrefixIgnoreCase("},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                        person.getMajor().value, prefix, commandPrefix));"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof MajorContainsPrefixesPredicate // instanceof handles nulls"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.prefixKeywords.equals(((MajorContainsPrefixesPredicate) other).prefixKeywords)); // state check"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":5,"tanhengyeow":29}},{"path":"src/main/java/seedu/address/model/person/Status.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"mhq199657"},"content":"import java.util.HashMap;"},{"lineNumber":7,"author":{"gitID":"mhq199657"},"content":"import java.util.Map;"},{"lineNumber":8,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":9,"author":{"gitID":"mhq199657"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":"//@@author mhq199657"},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":"/**"},{"lineNumber":12,"author":{"gitID":"mhq199657"},"content":" * Represents a candidate\u0027s status of his/her application."},{"lineNumber":13,"author":{"gitID":"mhq199657"},"content":" * Guarantees: Status value is one of the seven predefined values."},{"lineNumber":14,"author":{"gitID":"mhq199657"},"content":" */"},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":"public class Status {"},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":"    public static final String MESSAGE_STATUS_CONSTRAINTS \u003d"},{"lineNumber":17,"author":{"gitID":"mhq199657"},"content":"            \"Person status should only be specified by one of the predefined status indices.\";"},{"lineNumber":18,"author":{"gitID":"mhq199657"},"content":"    public static final String STATUS_NEW \u003d \"New\";"},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":"    public static final String STATUS_INTERVIEW_FIRST_ROUND \u003d \"1st round\";"},{"lineNumber":20,"author":{"gitID":"mhq199657"},"content":"    public static final String STATUS_INTERVIEW_SECOND_ROUND \u003d \"2nd round\";"},{"lineNumber":21,"author":{"gitID":"mhq199657"},"content":"    public static final String STATUS_REJECTED \u003d \"Rejected\";"},{"lineNumber":22,"author":{"gitID":"mhq199657"},"content":"    public static final String STATUS_WAITLIST \u003d \"Waitlist\";"},{"lineNumber":23,"author":{"gitID":"mhq199657"},"content":"    public static final String STATUS_OFFERED \u003d \"Offered\";"},{"lineNumber":24,"author":{"gitID":"mhq199657"},"content":"    public static final String STATUS_ACCEPTED \u003d \"Accepted\";"},{"lineNumber":25,"author":{"gitID":"mhq199657"},"content":"    public static final String STATUS_WITHDRAWN \u003d \"Withdrawn\";"},{"lineNumber":26,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":27,"author":{"gitID":"mhq199657"},"content":"    public static final int STATUS_TYPE_CONUT \u003d 8;"},{"lineNumber":28,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":29,"author":{"gitID":"mhq199657"},"content":"    public static final int INDEX_STATUS_NEW \u003d 1;"},{"lineNumber":30,"author":{"gitID":"mhq199657"},"content":"    public static final int INDEX_STATUS_INTERVIEW_FIRST_ROUND \u003d 2;"},{"lineNumber":31,"author":{"gitID":"mhq199657"},"content":"    public static final int INDEX_STATUS_INTERVIEW_SECOND_ROUND \u003d 3;"},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":"    public static final int INDEX_STATUS_REJECTED \u003d 4;"},{"lineNumber":33,"author":{"gitID":"mhq199657"},"content":"    public static final int INDEX_STATUS_WAITLIST \u003d 5;"},{"lineNumber":34,"author":{"gitID":"mhq199657"},"content":"    public static final int INDEX_STATUS_OFFERED \u003d 6;"},{"lineNumber":35,"author":{"gitID":"mhq199657"},"content":"    public static final int INDEX_STATUS_ACCEPTED \u003d 7;"},{"lineNumber":36,"author":{"gitID":"mhq199657"},"content":"    public static final int INDEX_STATUS_WITHDRAWN \u003d 8;"},{"lineNumber":37,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":38,"author":{"gitID":"mhq199657"},"content":"    public static final Color COLOR_NEW \u003d Color.web(\"#795548\");"},{"lineNumber":39,"author":{"gitID":"mhq199657"},"content":"    public static final Color COLOR_INTERVIEW_FIRST_ROUND \u003d Color.web(\"#AB47BC\");"},{"lineNumber":40,"author":{"gitID":"mhq199657"},"content":"    public static final Color COLOR_INTERVIEW_SECOND_ROUND \u003d Color.web(\"#7E57C2\");"},{"lineNumber":41,"author":{"gitID":"mhq199657"},"content":"    public static final Color COLOR_REJECTED \u003d Color.web(\"#EF5350\");"},{"lineNumber":42,"author":{"gitID":"mhq199657"},"content":"    public static final Color COLOR_WAITLIST \u003d Color.web(\"#FFA726\");"},{"lineNumber":43,"author":{"gitID":"mhq199657"},"content":"    public static final Color COLOR_OFFERED \u003d Color.web(\"#42A5F5\");"},{"lineNumber":44,"author":{"gitID":"mhq199657"},"content":"    public static final Color COLOR_ACCEPTED \u003d Color.web(\"#8BC34A\");"},{"lineNumber":45,"author":{"gitID":"mhq199657"},"content":"    public static final Color COLOR_WITHDRAWN \u003d Color.web(\"#9E9E9E\");"},{"lineNumber":46,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":47,"author":{"gitID":"mhq199657"},"content":"    private static final HashMap\u003cInteger, String\u003e STATUS_MAP;"},{"lineNumber":48,"author":{"gitID":"mhq199657"},"content":"    static {"},{"lineNumber":49,"author":{"gitID":"mhq199657"},"content":"        Map\u003cInteger, String\u003e initMap \u003d new HashMap\u003cInteger, String\u003e();"},{"lineNumber":50,"author":{"gitID":"mhq199657"},"content":"        initMap.put(INDEX_STATUS_NEW, STATUS_NEW);"},{"lineNumber":51,"author":{"gitID":"mhq199657"},"content":"        initMap.put(INDEX_STATUS_INTERVIEW_FIRST_ROUND, STATUS_INTERVIEW_FIRST_ROUND);"},{"lineNumber":52,"author":{"gitID":"mhq199657"},"content":"        initMap.put(INDEX_STATUS_INTERVIEW_SECOND_ROUND, STATUS_INTERVIEW_SECOND_ROUND);"},{"lineNumber":53,"author":{"gitID":"mhq199657"},"content":"        initMap.put(INDEX_STATUS_REJECTED, STATUS_REJECTED);"},{"lineNumber":54,"author":{"gitID":"mhq199657"},"content":"        initMap.put(INDEX_STATUS_WAITLIST, STATUS_WAITLIST);"},{"lineNumber":55,"author":{"gitID":"mhq199657"},"content":"        initMap.put(INDEX_STATUS_OFFERED, STATUS_OFFERED);"},{"lineNumber":56,"author":{"gitID":"mhq199657"},"content":"        initMap.put(INDEX_STATUS_ACCEPTED, STATUS_ACCEPTED);"},{"lineNumber":57,"author":{"gitID":"mhq199657"},"content":"        initMap.put(INDEX_STATUS_WITHDRAWN, STATUS_WITHDRAWN);"},{"lineNumber":58,"author":{"gitID":"mhq199657"},"content":"        STATUS_MAP \u003d new HashMap\u003c\u003e(initMap);"},{"lineNumber":59,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":60,"author":{"gitID":"mhq199657"},"content":"    private static final HashMap\u003cString, Color\u003e COLOR_MAP;"},{"lineNumber":61,"author":{"gitID":"mhq199657"},"content":"    static {"},{"lineNumber":62,"author":{"gitID":"mhq199657"},"content":"        Map\u003cString, Color\u003e initMap \u003d new HashMap\u003cString, Color\u003e();"},{"lineNumber":63,"author":{"gitID":"mhq199657"},"content":"        initMap.put(STATUS_NEW, COLOR_NEW);"},{"lineNumber":64,"author":{"gitID":"mhq199657"},"content":"        initMap.put(STATUS_INTERVIEW_FIRST_ROUND, COLOR_INTERVIEW_FIRST_ROUND);"},{"lineNumber":65,"author":{"gitID":"mhq199657"},"content":"        initMap.put(STATUS_INTERVIEW_SECOND_ROUND, COLOR_INTERVIEW_SECOND_ROUND);"},{"lineNumber":66,"author":{"gitID":"mhq199657"},"content":"        initMap.put(STATUS_REJECTED, COLOR_REJECTED);"},{"lineNumber":67,"author":{"gitID":"mhq199657"},"content":"        initMap.put(STATUS_WAITLIST, COLOR_WAITLIST);"},{"lineNumber":68,"author":{"gitID":"mhq199657"},"content":"        initMap.put(STATUS_OFFERED, COLOR_OFFERED);"},{"lineNumber":69,"author":{"gitID":"mhq199657"},"content":"        initMap.put(STATUS_ACCEPTED, COLOR_ACCEPTED);"},{"lineNumber":70,"author":{"gitID":"mhq199657"},"content":"        initMap.put(STATUS_WITHDRAWN, COLOR_WITHDRAWN);"},{"lineNumber":71,"author":{"gitID":"mhq199657"},"content":"        COLOR_MAP \u003d new HashMap\u003cString, Color\u003e(initMap);"},{"lineNumber":72,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"mhq199657"},"content":"    public final String value;"},{"lineNumber":74,"author":{"gitID":"mhq199657"},"content":"    public final Color color;"},{"lineNumber":75,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":76,"author":{"gitID":"mhq199657"},"content":"     * Constructs a {@code Status}."},{"lineNumber":77,"author":{"gitID":"mhq199657"},"content":"     *"},{"lineNumber":78,"author":{"gitID":"mhq199657"},"content":"     * @param statusIndex A valid status index."},{"lineNumber":79,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":80,"author":{"gitID":"mhq199657"},"content":"    public Status(int statusIndex) {"},{"lineNumber":81,"author":{"gitID":"mhq199657"},"content":"        checkArgument(isValidStatus(statusIndex), MESSAGE_STATUS_CONSTRAINTS);"},{"lineNumber":82,"author":{"gitID":"mhq199657"},"content":"        this.value \u003d getStatus(statusIndex);"},{"lineNumber":83,"author":{"gitID":"mhq199657"},"content":"        this.color \u003d getColor(value);"},{"lineNumber":84,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":85,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":86,"author":{"gitID":"mhq199657"},"content":"    public Status(String status) {"},{"lineNumber":87,"author":{"gitID":"mhq199657"},"content":"        requireNonNull(status);"},{"lineNumber":88,"author":{"gitID":"mhq199657"},"content":"        checkArgument(isValidXmlStatus(status), MESSAGE_STATUS_CONSTRAINTS);"},{"lineNumber":89,"author":{"gitID":"mhq199657"},"content":"        this.value \u003d status;"},{"lineNumber":90,"author":{"gitID":"mhq199657"},"content":"        this.color \u003d getColor(value);"},{"lineNumber":91,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":92,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":93,"author":{"gitID":"mhq199657"},"content":"    public Status() {"},{"lineNumber":94,"author":{"gitID":"mhq199657"},"content":"        this.value \u003d getStatus(INDEX_STATUS_NEW);"},{"lineNumber":95,"author":{"gitID":"mhq199657"},"content":"        this.color \u003d getColor(value);"},{"lineNumber":96,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":97,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":98,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":99,"author":{"gitID":"mhq199657"},"content":"     * Returns true if a given string is a valid person major."},{"lineNumber":100,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":101,"author":{"gitID":"mhq199657"},"content":"    public static boolean isValidStatus (int test) {"},{"lineNumber":102,"author":{"gitID":"mhq199657"},"content":"        return STATUS_MAP.containsKey(test);"},{"lineNumber":103,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":104,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":105,"author":{"gitID":"mhq199657"},"content":"    public static boolean isValidXmlStatus(String test) {"},{"lineNumber":106,"author":{"gitID":"mhq199657"},"content":"        return COLOR_MAP.containsKey(test);"},{"lineNumber":107,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":108,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":109,"author":{"gitID":"mhq199657"},"content":"    private static String getStatus(int statusIndex) {"},{"lineNumber":110,"author":{"gitID":"mhq199657"},"content":"        return STATUS_MAP.get(statusIndex);"},{"lineNumber":111,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":112,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":113,"author":{"gitID":"mhq199657"},"content":"    private static Color getColor(String status) {"},{"lineNumber":114,"author":{"gitID":"mhq199657"},"content":"        return COLOR_MAP.get(status);"},{"lineNumber":115,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":116,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":117,"author":{"gitID":"mhq199657"},"content":"    @Override"},{"lineNumber":118,"author":{"gitID":"mhq199657"},"content":"    public String toString() {"},{"lineNumber":119,"author":{"gitID":"mhq199657"},"content":"        return value;"},{"lineNumber":120,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":121,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":122,"author":{"gitID":"mhq199657"},"content":"    @Override"},{"lineNumber":123,"author":{"gitID":"mhq199657"},"content":"    public boolean equals(Object other) {"},{"lineNumber":124,"author":{"gitID":"mhq199657"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":125,"author":{"gitID":"mhq199657"},"content":"                || (other instanceof Status // instanceof handles nulls"},{"lineNumber":126,"author":{"gitID":"mhq199657"},"content":"                \u0026\u0026 this.value.equals(((Status) other).value)); // state check"},{"lineNumber":127,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":128,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":129,"author":{"gitID":"mhq199657"},"content":"    @Override"},{"lineNumber":130,"author":{"gitID":"mhq199657"},"content":"    public int hashCode() {"},{"lineNumber":131,"author":{"gitID":"mhq199657"},"content":"        return value.hashCode();"},{"lineNumber":132,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":133,"author":{"gitID":"mhq199657"},"content":"}"}],"authorContributionMap":{"mhq199657":128,"-":5}},{"path":"src/main/java/seedu/address/model/person/University.java","lines":[{"lineNumber":1,"author":{"gitID":"kexiaowen"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"kexiaowen"},"content":" * Represents a Person\u0027s university in HR+."},{"lineNumber":8,"author":{"gitID":"kexiaowen"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidUniversity(String)}"},{"lineNumber":9,"author":{"gitID":"kexiaowen"},"content":" */"},{"lineNumber":10,"author":{"gitID":"kexiaowen"},"content":"public class University {"},{"lineNumber":11,"author":{"gitID":"kexiaowen"},"content":"    public static final String MESSAGE_UNIVERSITY_CONSTRAINTS \u003d"},{"lineNumber":12,"author":{"gitID":"kexiaowen"},"content":"            \"Universities should only contain alphanumeric characters and spaces, and it should not be blank\";"},{"lineNumber":13,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":14,"author":{"gitID":"kexiaowen"},"content":"    /*"},{"lineNumber":15,"author":{"gitID":"kexiaowen"},"content":"     * The first character of the university must not be a whitespace,"},{"lineNumber":16,"author":{"gitID":"kexiaowen"},"content":"     * otherwise \" \" (a blank string) becomes a valid input."},{"lineNumber":17,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":18,"author":{"gitID":"kexiaowen"},"content":"    public static final String UNIVERSITY_VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";"},{"lineNumber":19,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":20,"author":{"gitID":"kexiaowen"},"content":"    public final String value;"},{"lineNumber":21,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":22,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":23,"author":{"gitID":"kexiaowen"},"content":"     * Constructs a {@code University}."},{"lineNumber":24,"author":{"gitID":"kexiaowen"},"content":"     *"},{"lineNumber":25,"author":{"gitID":"kexiaowen"},"content":"     * @param university A valid university."},{"lineNumber":26,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":27,"author":{"gitID":"kexiaowen"},"content":"    public University(String university) {"},{"lineNumber":28,"author":{"gitID":"kexiaowen"},"content":"        requireNonNull(university);"},{"lineNumber":29,"author":{"gitID":"kexiaowen"},"content":"        checkArgument(isValidUniversity(university), MESSAGE_UNIVERSITY_CONSTRAINTS);"},{"lineNumber":30,"author":{"gitID":"kexiaowen"},"content":"        this.value \u003d university;"},{"lineNumber":31,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":32,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":33,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":34,"author":{"gitID":"kexiaowen"},"content":"     * Returns true if a given string is a valid person university."},{"lineNumber":35,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":36,"author":{"gitID":"kexiaowen"},"content":"    public static boolean isValidUniversity(String test) {"},{"lineNumber":37,"author":{"gitID":"kexiaowen"},"content":"        return test.matches(UNIVERSITY_VALIDATION_REGEX);"},{"lineNumber":38,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":40,"author":{"gitID":"kexiaowen"},"content":"    @Override"},{"lineNumber":41,"author":{"gitID":"kexiaowen"},"content":"    public String toString() {"},{"lineNumber":42,"author":{"gitID":"kexiaowen"},"content":"        return value;"},{"lineNumber":43,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":46,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":48,"author":{"gitID":"kexiaowen"},"content":"                || (other instanceof University // instanceof handles nulls"},{"lineNumber":49,"author":{"gitID":"kexiaowen"},"content":"                \u0026\u0026 this.value.equals(((University) other).value)); // state check"},{"lineNumber":50,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":51,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":52,"author":{"gitID":"kexiaowen"},"content":"    @Override"},{"lineNumber":53,"author":{"gitID":"kexiaowen"},"content":"    public int hashCode() {"},{"lineNumber":54,"author":{"gitID":"kexiaowen"},"content":"        return value.hashCode();"},{"lineNumber":55,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"kexiaowen"},"content":"}"}],"authorContributionMap":{"kexiaowen":47,"-":9}},{"path":"src/main/java/seedu/address/model/person/PhoneContainsPrefixesPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.FindResults;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":" * Tests that a {@code Person}\u0027s {@code Phone} matches the prefix string given."},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"public class PhoneContainsPrefixesPredicate implements Predicate\u003cPerson\u003e {"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"    private final List\u003cString\u003e prefixKeywords;"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private final String commandPrefix \u003d \"p/\";"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"    public PhoneContainsPrefixesPredicate(List\u003cString\u003e prefixKeywords) {"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"        this.prefixKeywords \u003d prefixKeywords;"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"    public boolean test(Person person) {"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        return prefixKeywords.stream()"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                .anyMatch(prefix -\u003e FindResults.getInstance().containsPrefixIgnoreCase("},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                        person.getPhone().value, prefix, commandPrefix));"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof PhoneContainsPrefixesPredicate // instanceof handles nulls"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.prefixKeywords.equals(((PhoneContainsPrefixesPredicate) other).prefixKeywords)); // state check"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":5,"tanhengyeow":29}},{"path":"src/main/java/seedu/address/model/person/ProfileImage.java","lines":[{"lineNumber":1,"author":{"gitID":"mhq199657"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":3,"author":{"gitID":"mhq199657"},"content":"import static java.util.Objects.isNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"Ang-YC"},"content":"import java.awt.Graphics2D;"},{"lineNumber":8,"author":{"gitID":"Ang-YC"},"content":"import java.awt.RenderingHints;"},{"lineNumber":9,"author":{"gitID":"Ang-YC"},"content":"import java.awt.image.BufferedImage;"},{"lineNumber":10,"author":{"gitID":"Ang-YC"},"content":"import java.io.File;"},{"lineNumber":11,"author":{"gitID":"Ang-YC"},"content":"import javax.imageio.ImageIO;"},{"lineNumber":12,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":"import javafx.embed.swing.SwingFXUtils;"},{"lineNumber":14,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.image.Image;"},{"lineNumber":15,"author":{"gitID":"Ang-YC"},"content":"import javafx.scene.image.WritableImage;"},{"lineNumber":16,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":"//@@author Ang-YC"},{"lineNumber":18,"author":{"gitID":"Ang-YC"},"content":"/**"},{"lineNumber":19,"author":{"gitID":"Ang-YC"},"content":" * Represents a Person\u0027s profile image in the address book."},{"lineNumber":20,"author":{"gitID":"Ang-YC"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidFile(String)}"},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":" */"},{"lineNumber":22,"author":{"gitID":"Ang-YC"},"content":"public class ProfileImage {"},{"lineNumber":23,"author":{"gitID":"Ang-YC"},"content":"    public static final String MESSAGE_IMAGE_CONSTRAINTS \u003d"},{"lineNumber":24,"author":{"gitID":"Ang-YC"},"content":"            \"Profile image file should be at least 1 character long, exist in the same directory \""},{"lineNumber":25,"author":{"gitID":"Ang-YC"},"content":"                    + \"as the jar executable, smaller than 1MB and readable\";"},{"lineNumber":26,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":27,"author":{"gitID":"Ang-YC"},"content":"    private static final int ONEMEGABYTE \u003d 1 * 1024 * 1024;"},{"lineNumber":28,"author":{"gitID":"Ang-YC"},"content":"    private static final String IMAGE_VALIDATION_REGEX \u003d \".*\\\\S.*\";"},{"lineNumber":29,"author":{"gitID":"Ang-YC"},"content":"    private static final int CROP_DIMENSION \u003d 100;"},{"lineNumber":30,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":31,"author":{"gitID":"Ang-YC"},"content":"    public final String value;"},{"lineNumber":32,"author":{"gitID":"Ang-YC"},"content":"    public final String userInput;"},{"lineNumber":33,"author":{"gitID":"Ang-YC"},"content":"    private boolean isHashed;"},{"lineNumber":34,"author":{"gitID":"Ang-YC"},"content":"    private final Image image;"},{"lineNumber":35,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":36,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":37,"author":{"gitID":"Ang-YC"},"content":"     * Constructs a {@code ProfileImage}."},{"lineNumber":38,"author":{"gitID":"Ang-YC"},"content":"     *"},{"lineNumber":39,"author":{"gitID":"Ang-YC"},"content":"     * @param fileName A valid fileName."},{"lineNumber":40,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":41,"author":{"gitID":"Ang-YC"},"content":"    public ProfileImage(String fileName) {"},{"lineNumber":42,"author":{"gitID":"Ang-YC"},"content":"        isHashed \u003d false;"},{"lineNumber":43,"author":{"gitID":"Ang-YC"},"content":"        if (isNull(fileName)) {"},{"lineNumber":44,"author":{"gitID":"Ang-YC"},"content":"            this.value \u003d null;"},{"lineNumber":45,"author":{"gitID":"Ang-YC"},"content":"            this.userInput \u003d null;"},{"lineNumber":46,"author":{"gitID":"Ang-YC"},"content":"            this.image \u003d null;"},{"lineNumber":47,"author":{"gitID":"Ang-YC"},"content":"        } else {"},{"lineNumber":48,"author":{"gitID":"Ang-YC"},"content":"            checkArgument(isValidFile(fileName), MESSAGE_IMAGE_CONSTRAINTS);"},{"lineNumber":49,"author":{"gitID":"Ang-YC"},"content":"            this.value \u003d fileName;"},{"lineNumber":50,"author":{"gitID":"Ang-YC"},"content":"            this.userInput \u003d fileName;"},{"lineNumber":51,"author":{"gitID":"Ang-YC"},"content":"            this.image \u003d loadImage();"},{"lineNumber":52,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":53,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":54,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":55,"author":{"gitID":"Ang-YC"},"content":"    public ProfileImage(String storageFileName, String userFileName) {"},{"lineNumber":56,"author":{"gitID":"Ang-YC"},"content":"        isHashed \u003d true;"},{"lineNumber":57,"author":{"gitID":"Ang-YC"},"content":"        if (isNull(storageFileName)) {"},{"lineNumber":58,"author":{"gitID":"Ang-YC"},"content":"            this.value \u003d null;"},{"lineNumber":59,"author":{"gitID":"Ang-YC"},"content":"            this.userInput \u003d null;"},{"lineNumber":60,"author":{"gitID":"Ang-YC"},"content":"            this.image \u003d null;"},{"lineNumber":61,"author":{"gitID":"Ang-YC"},"content":"        } else {"},{"lineNumber":62,"author":{"gitID":"Ang-YC"},"content":"            checkArgument(isValidFile(storageFileName), MESSAGE_IMAGE_CONSTRAINTS);"},{"lineNumber":63,"author":{"gitID":"Ang-YC"},"content":"            this.value \u003d storageFileName;"},{"lineNumber":64,"author":{"gitID":"Ang-YC"},"content":"            this.userInput \u003d userFileName;"},{"lineNumber":65,"author":{"gitID":"Ang-YC"},"content":"            this.image \u003d loadImage();"},{"lineNumber":66,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":67,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":69,"author":{"gitID":"Ang-YC"},"content":"    public Image getImage() {"},{"lineNumber":70,"author":{"gitID":"Ang-YC"},"content":"        return image;"},{"lineNumber":71,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":72,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":73,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":74,"author":{"gitID":"Ang-YC"},"content":"     * Return the loaded {@code Image} of the person\u0027s Profile Image,"},{"lineNumber":75,"author":{"gitID":"Ang-YC"},"content":"     * resized to 100px for performance issue"},{"lineNumber":76,"author":{"gitID":"Ang-YC"},"content":"     * @return the image in {@code Image}"},{"lineNumber":77,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":78,"author":{"gitID":"Ang-YC"},"content":"    private Image loadImage() {"},{"lineNumber":79,"author":{"gitID":"Ang-YC"},"content":"        try {"},{"lineNumber":80,"author":{"gitID":"Ang-YC"},"content":"            File file \u003d getFile();"},{"lineNumber":81,"author":{"gitID":"Ang-YC"},"content":"            if (file !\u003d null) {"},{"lineNumber":82,"author":{"gitID":"Ang-YC"},"content":"                //Image image \u003d new Image(file.toURI().toString(), 0, 0, true, true, true);"},{"lineNumber":83,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":84,"author":{"gitID":"Ang-YC"},"content":"                // Load image"},{"lineNumber":85,"author":{"gitID":"Ang-YC"},"content":"                BufferedImage image \u003d ImageIO.read(file);"},{"lineNumber":86,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":87,"author":{"gitID":"Ang-YC"},"content":"                // Scaling amd resizing calculation"},{"lineNumber":88,"author":{"gitID":"Ang-YC"},"content":"                int width \u003d image.getWidth();"},{"lineNumber":89,"author":{"gitID":"Ang-YC"},"content":"                int height \u003d image.getHeight();"},{"lineNumber":90,"author":{"gitID":"Ang-YC"},"content":"                int shorter \u003d Math.min(width, height);"},{"lineNumber":91,"author":{"gitID":"Ang-YC"},"content":"                double scale \u003d (double) shorter / (double) CROP_DIMENSION;"},{"lineNumber":92,"author":{"gitID":"Ang-YC"},"content":"                int x \u003d 0;"},{"lineNumber":93,"author":{"gitID":"Ang-YC"},"content":"                int y \u003d 0;"},{"lineNumber":94,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":95,"author":{"gitID":"Ang-YC"},"content":"                if (width \u003c height) {"},{"lineNumber":96,"author":{"gitID":"Ang-YC"},"content":"                    width \u003d CROP_DIMENSION;"},{"lineNumber":97,"author":{"gitID":"Ang-YC"},"content":"                    height \u003d (int) Math.round((double) height / scale);"},{"lineNumber":98,"author":{"gitID":"Ang-YC"},"content":"                    y \u003d (CROP_DIMENSION - height) / 2;"},{"lineNumber":99,"author":{"gitID":"Ang-YC"},"content":"                } else {"},{"lineNumber":100,"author":{"gitID":"Ang-YC"},"content":"                    height \u003d CROP_DIMENSION;"},{"lineNumber":101,"author":{"gitID":"Ang-YC"},"content":"                    width \u003d (int) Math.round((double) width / scale);"},{"lineNumber":102,"author":{"gitID":"Ang-YC"},"content":"                    x \u003d (CROP_DIMENSION - width) / 2;"},{"lineNumber":103,"author":{"gitID":"Ang-YC"},"content":"                }"},{"lineNumber":104,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":105,"author":{"gitID":"Ang-YC"},"content":"                // Resize start"},{"lineNumber":106,"author":{"gitID":"Ang-YC"},"content":"                BufferedImage resized \u003d new BufferedImage(CROP_DIMENSION, CROP_DIMENSION,"},{"lineNumber":107,"author":{"gitID":"Ang-YC"},"content":"                        BufferedImage.TYPE_4BYTE_ABGR);"},{"lineNumber":108,"author":{"gitID":"Ang-YC"},"content":"                Graphics2D g2d \u003d resized.createGraphics();"},{"lineNumber":109,"author":{"gitID":"Ang-YC"},"content":"                g2d.addRenderingHints(new RenderingHints(RenderingHints.KEY_RENDERING,"},{"lineNumber":110,"author":{"gitID":"Ang-YC"},"content":"                        RenderingHints.VALUE_RENDER_SPEED));"},{"lineNumber":111,"author":{"gitID":"Ang-YC"},"content":"                g2d.drawImage(image, x, y, width, height, null);"},{"lineNumber":112,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":113,"author":{"gitID":"Ang-YC"},"content":"                // Output"},{"lineNumber":114,"author":{"gitID":"Ang-YC"},"content":"                WritableImage output \u003d new WritableImage(CROP_DIMENSION, CROP_DIMENSION);"},{"lineNumber":115,"author":{"gitID":"Ang-YC"},"content":"                SwingFXUtils.toFXImage(resized, output);"},{"lineNumber":116,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":117,"author":{"gitID":"Ang-YC"},"content":"                // Clean up"},{"lineNumber":118,"author":{"gitID":"Ang-YC"},"content":"                image.flush();"},{"lineNumber":119,"author":{"gitID":"Ang-YC"},"content":"                resized.flush();"},{"lineNumber":120,"author":{"gitID":"Ang-YC"},"content":"                g2d.dispose();"},{"lineNumber":121,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":122,"author":{"gitID":"Ang-YC"},"content":"                return output;"},{"lineNumber":123,"author":{"gitID":"Ang-YC"},"content":"            }"},{"lineNumber":124,"author":{"gitID":"Ang-YC"},"content":"        } catch (Exception e) {"},{"lineNumber":125,"author":{"gitID":"Ang-YC"},"content":"            return null;"},{"lineNumber":126,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":127,"author":{"gitID":"Ang-YC"},"content":"        return null;"},{"lineNumber":128,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":129,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":130,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":131,"author":{"gitID":"Ang-YC"},"content":"     * Return the {@code File} of the image"},{"lineNumber":132,"author":{"gitID":"Ang-YC"},"content":"     * @return the image in {@code File}"},{"lineNumber":133,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":134,"author":{"gitID":"Ang-YC"},"content":"    private File getFile() {"},{"lineNumber":135,"author":{"gitID":"Ang-YC"},"content":"        if (this.value \u003d\u003d null) {"},{"lineNumber":136,"author":{"gitID":"Ang-YC"},"content":"            return null;"},{"lineNumber":137,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":138,"author":{"gitID":"Ang-YC"},"content":"        return getFileFromPath(this.value);"},{"lineNumber":139,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":140,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":141,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":142,"author":{"gitID":"Ang-YC"},"content":"     * Return the {@code File} representation of the path"},{"lineNumber":143,"author":{"gitID":"Ang-YC"},"content":"     * @param path of the image"},{"lineNumber":144,"author":{"gitID":"Ang-YC"},"content":"     * @return the {@code File} representation"},{"lineNumber":145,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":146,"author":{"gitID":"Ang-YC"},"content":"    private static File getFileFromPath(String path) {"},{"lineNumber":147,"author":{"gitID":"Ang-YC"},"content":"        String userDir \u003d System.getProperty(\"user.dir\");"},{"lineNumber":148,"author":{"gitID":"Ang-YC"},"content":"        return new File(userDir + File.separator + path);"},{"lineNumber":149,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":150,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":151,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":152,"author":{"gitID":"Ang-YC"},"content":"     * Returns true if a given string is a valid file path,"},{"lineNumber":153,"author":{"gitID":"Ang-YC"},"content":"     * however it doesn\u0027t validate if it is a valid image file"},{"lineNumber":154,"author":{"gitID":"Ang-YC"},"content":"     * due to there are too many different image types"},{"lineNumber":155,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":156,"author":{"gitID":"Ang-YC"},"content":"    public static boolean isValidFile(String test) {"},{"lineNumber":157,"author":{"gitID":"Ang-YC"},"content":"        requireNonNull(test);"},{"lineNumber":158,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":159,"author":{"gitID":"Ang-YC"},"content":"        if (!test.matches(IMAGE_VALIDATION_REGEX)) {"},{"lineNumber":160,"author":{"gitID":"Ang-YC"},"content":"            return false;"},{"lineNumber":161,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":162,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":163,"author":{"gitID":"Ang-YC"},"content":"        File imageFile \u003d getFileFromPath(test);"},{"lineNumber":164,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":165,"author":{"gitID":"Ang-YC"},"content":"        if (imageFile.isDirectory() || !imageFile.exists() || imageFile.length() \u003e ONEMEGABYTE) {"},{"lineNumber":166,"author":{"gitID":"Ang-YC"},"content":"            return false;"},{"lineNumber":167,"author":{"gitID":"Ang-YC"},"content":"        } else {"},{"lineNumber":168,"author":{"gitID":"Ang-YC"},"content":"            return true;"},{"lineNumber":169,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":170,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":171,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":172,"author":{"gitID":"Ang-YC"},"content":"    public boolean isHashed() {"},{"lineNumber":173,"author":{"gitID":"Ang-YC"},"content":"        return isHashed;"},{"lineNumber":174,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":175,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":176,"author":{"gitID":"Ang-YC"},"content":"    @Override"},{"lineNumber":177,"author":{"gitID":"Ang-YC"},"content":"    public String toString() {"},{"lineNumber":178,"author":{"gitID":"Ang-YC"},"content":"        return userInput;"},{"lineNumber":179,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":180,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":181,"author":{"gitID":"Ang-YC"},"content":"    @Override"},{"lineNumber":182,"author":{"gitID":"Ang-YC"},"content":"    public boolean equals(Object other) {"},{"lineNumber":183,"author":{"gitID":"Ang-YC"},"content":"        return other \u003d\u003d this // Short circuit if same object"},{"lineNumber":184,"author":{"gitID":"Ang-YC"},"content":"                || (other instanceof ProfileImage // instanceof handles nulls"},{"lineNumber":185,"author":{"gitID":"Ang-YC"},"content":"                \u0026\u0026 ((this.value \u003d\u003d null \u0026\u0026 ((ProfileImage) other).value \u003d\u003d null) //both value are null"},{"lineNumber":186,"author":{"gitID":"Ang-YC"},"content":"                || (isHashed \u0026\u0026 ((ProfileImage) other).isHashed) ? isHashEqual(this.value, ((ProfileImage) other).value)"},{"lineNumber":187,"author":{"gitID":"Ang-YC"},"content":"                : this.userInput.equals(((ProfileImage) other).userInput))); // state check"},{"lineNumber":188,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":189,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":190,"author":{"gitID":"Ang-YC"},"content":"     * Checks whether the hash of two resume are the same"},{"lineNumber":191,"author":{"gitID":"Ang-YC"},"content":"     * @param first resume"},{"lineNumber":192,"author":{"gitID":"Ang-YC"},"content":"     * @param second resume"},{"lineNumber":193,"author":{"gitID":"Ang-YC"},"content":"     * @return same as true or false otherwise"},{"lineNumber":194,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":195,"author":{"gitID":"Ang-YC"},"content":"    private boolean isHashEqual(String first, String second) {"},{"lineNumber":196,"author":{"gitID":"Ang-YC"},"content":"        assert(first.split(\"_\").length \u003d\u003d 2);"},{"lineNumber":197,"author":{"gitID":"Ang-YC"},"content":"        String firstHash \u003d first.split(\"_\")[1];"},{"lineNumber":198,"author":{"gitID":"Ang-YC"},"content":"        String secondHash \u003d second.split(\"_\")[1];"},{"lineNumber":199,"author":{"gitID":"Ang-YC"},"content":"        return firstHash.equals(secondHash);"},{"lineNumber":200,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":201,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":202,"author":{"gitID":"Ang-YC"},"content":"    @Override"},{"lineNumber":203,"author":{"gitID":"Ang-YC"},"content":"    public int hashCode() {"},{"lineNumber":204,"author":{"gitID":"Ang-YC"},"content":"        return value.hashCode();"},{"lineNumber":205,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":206,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":207,"author":{"gitID":"Ang-YC"},"content":"}"}],"authorContributionMap":{"mhq199657":3,"-":3,"Ang-YC":201}},{"path":"src/main/java/seedu/address/model/person/FieldPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"mhq199657"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":3,"author":{"gitID":"mhq199657"},"content":"import java.util.function.Predicate;"},{"lineNumber":4,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":5,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":" * Immutable interface for all predicates in AllPredicate"},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"public interface FieldPredicate {"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":"    Predicate\u003cPerson\u003e getPredicate();"},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"mhq199657":4,"tanhengyeow":7}},{"path":"src/main/java/seedu/address/model/person/NameContainsPrefixesPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.FindResults;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches the prefix string given."},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"public class NameContainsPrefixesPredicate implements Predicate\u003cPerson\u003e {"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"    private final List\u003cString\u003e prefixKeywords;"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private final String commandPrefix \u003d \"n/\";"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"    public NameContainsPrefixesPredicate(List\u003cString\u003e prefixKeywords) {"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"        this.prefixKeywords \u003d prefixKeywords;"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"    public boolean test(Person person) {"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        return prefixKeywords.stream()"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                .anyMatch(prefix -\u003e FindResults.getInstance().containsPrefixIgnoreCase("},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                        person.getName().fullName, prefix, commandPrefix));"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof NameContainsPrefixesPredicate // instanceof handles nulls"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.prefixKeywords.equals(((NameContainsPrefixesPredicate) other).prefixKeywords)); // state check"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":5,"tanhengyeow":29}},{"path":"src/main/java/seedu/address/model/person/GradePointAverageInKeywordsRangePredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"mhq199657"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":3,"author":{"gitID":"mhq199657"},"content":"import java.util.function.Predicate;"},{"lineNumber":4,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":5,"author":{"gitID":"mhq199657"},"content":"import seedu.address.logic.parser.FilterRange;"},{"lineNumber":6,"author":{"gitID":"mhq199657"},"content":"//@@author mhq199657"},{"lineNumber":7,"author":{"gitID":"mhq199657"},"content":"/**"},{"lineNumber":8,"author":{"gitID":"mhq199657"},"content":" * A Predicate testing whether a person has his/her grade point average in the keywords range"},{"lineNumber":9,"author":{"gitID":"mhq199657"},"content":" */"},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":"public class GradePointAverageInKeywordsRangePredicate implements Predicate\u003cPerson\u003e {"},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":"    private final String low;"},{"lineNumber":12,"author":{"gitID":"mhq199657"},"content":"    private final String high;"},{"lineNumber":13,"author":{"gitID":"mhq199657"},"content":"    public GradePointAverageInKeywordsRangePredicate(GradePointAverage low, GradePointAverage high) {"},{"lineNumber":14,"author":{"gitID":"mhq199657"},"content":"        this.low \u003d low.value;"},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":"        this.high \u003d high.value;"},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":17,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":18,"author":{"gitID":"mhq199657"},"content":"    public GradePointAverageInKeywordsRangePredicate(FilterRange\u003cGradePointAverage\u003e filterRange) {"},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":"        if (filterRange.isRange()) {"},{"lineNumber":20,"author":{"gitID":"mhq199657"},"content":"            this.low \u003d filterRange.getLowValue().value;"},{"lineNumber":21,"author":{"gitID":"mhq199657"},"content":"            this.high \u003d filterRange.getHighValue().value;"},{"lineNumber":22,"author":{"gitID":"mhq199657"},"content":"        } else {"},{"lineNumber":23,"author":{"gitID":"mhq199657"},"content":"            this.low \u003d filterRange.getExactValue().value;"},{"lineNumber":24,"author":{"gitID":"mhq199657"},"content":"            this.high \u003d filterRange.getExactValue().value;"},{"lineNumber":25,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":26,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":28,"author":{"gitID":"mhq199657"},"content":"    @Override"},{"lineNumber":29,"author":{"gitID":"mhq199657"},"content":"    public boolean test(Person person) {"},{"lineNumber":30,"author":{"gitID":"mhq199657"},"content":"        return Double.valueOf(person.getGradePointAverage().value).compareTo(Double.valueOf(high)) \u003c\u003d 0"},{"lineNumber":31,"author":{"gitID":"mhq199657"},"content":"                \u0026\u0026 Double.valueOf(person.getGradePointAverage().value).compareTo(Double.valueOf(low)) \u003e\u003d 0;"},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":34,"author":{"gitID":"mhq199657"},"content":"    @Override"},{"lineNumber":35,"author":{"gitID":"mhq199657"},"content":"    public boolean equals(Object other) {"},{"lineNumber":36,"author":{"gitID":"mhq199657"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":37,"author":{"gitID":"mhq199657"},"content":"                || (other instanceof GradePointAverageInKeywordsRangePredicate // instanceof handles nulls"},{"lineNumber":38,"author":{"gitID":"mhq199657"},"content":"                \u0026\u0026 this.low.equals(((GradePointAverageInKeywordsRangePredicate) other).low)"},{"lineNumber":39,"author":{"gitID":"mhq199657"},"content":"                \u0026\u0026 this.high.equals(((GradePointAverageInKeywordsRangePredicate) other).high)); // state check"},{"lineNumber":40,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":41,"author":{"gitID":"mhq199657"},"content":"}"}],"authorContributionMap":{"mhq199657":41}},{"path":"src/main/java/seedu/address/model/person/CommentContainsKeywordsPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.FindCommand;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.FindResults;"},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" * Tests that a {@code Person}\u0027s {@code Comment} matches any of the keywords given."},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"public class CommentContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private final List\u003cString\u003e keywords;"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"    private final String commandPrefix \u003d \"c/\";"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    public CommentContainsKeywordsPredicate(List\u003cString\u003e keywords) {"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"        this.keywords \u003d keywords;"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"    public boolean test(Person person) {"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"        return keywords.stream()"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                .anyMatch(keyword -\u003e FindResults.getInstance()"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                        .containsWordIgnoreCase(person.getComment().value, keyword, commandPrefix)"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":"                        || keywords.stream()"},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"                        .anyMatch(fuzzyKeyword -\u003e FindResults.getInstance().containsFuzzyMatchIgnoreCase("},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"                                person.getComment().value, fuzzyKeyword, commandPrefix,"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"                                FindCommand.LEVENSHTEIN_DISTANCE_THRESHOLD)));"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof CommentContainsKeywordsPredicate // instanceof handles nulls"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.keywords.equals(((CommentContainsKeywordsPredicate) other).keywords)); // state check"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":6,"tanhengyeow":33}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"kexiaowen"},"content":"import java.util.Collections;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Iterator;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.CollectionUtil;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":17,"author":{"gitID":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls."},{"lineNumber":18,"author":{"gitID":"-"},"content":" *"},{"lineNumber":19,"author":{"gitID":"-"},"content":" * Supports a minimal set of list operations."},{"lineNumber":20,"author":{"gitID":"-"},"content":" *"},{"lineNumber":21,"author":{"gitID":"-"},"content":" * @see Person#equals(Object)"},{"lineNumber":22,"author":{"gitID":"-"},"content":" * @see CollectionUtil#elementsAreUnique(Collection)"},{"lineNumber":23,"author":{"gitID":"-"},"content":" */"},{"lineNumber":24,"author":{"gitID":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":29,"author":{"gitID":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument."},{"lineNumber":30,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":31,"author":{"gitID":"-"},"content":"    public boolean contains(Person toCheck) {"},{"lineNumber":32,"author":{"gitID":"-"},"content":"        requireNonNull(toCheck);"},{"lineNumber":33,"author":{"gitID":"-"},"content":"        return internalList.contains(toCheck);"},{"lineNumber":34,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"-"},"content":""},{"lineNumber":36,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":37,"author":{"gitID":"-"},"content":"     * Adds a person to the list."},{"lineNumber":38,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":39,"author":{"gitID":"-"},"content":"     * @throws DuplicatePersonException if the person to add is a duplicate of an existing person in the list."},{"lineNumber":40,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    public void add(Person toAdd) throws DuplicatePersonException {"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        requireNonNull(toAdd);"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        if (contains(toAdd)) {"},{"lineNumber":44,"author":{"gitID":"-"},"content":"            throw new DuplicatePersonException();"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        internalList.add(toAdd);"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":50,"author":{"gitID":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}."},{"lineNumber":51,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":52,"author":{"gitID":"-"},"content":"     * @throws DuplicatePersonException if the replacement is equivalent to another existing person in the list."},{"lineNumber":53,"author":{"gitID":"-"},"content":"     * @throws PersonNotFoundException if {@code target} could not be found in the list."},{"lineNumber":54,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    public void setPerson(Person target, Person editedPerson)"},{"lineNumber":56,"author":{"gitID":"-"},"content":"            throws DuplicatePersonException, PersonNotFoundException {"},{"lineNumber":57,"author":{"gitID":"-"},"content":"        requireNonNull(editedPerson);"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"-"},"content":"        int index \u003d internalList.indexOf(target);"},{"lineNumber":60,"author":{"gitID":"-"},"content":"        if (index \u003d\u003d -1) {"},{"lineNumber":61,"author":{"gitID":"-"},"content":"            throw new PersonNotFoundException();"},{"lineNumber":62,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":63,"author":{"gitID":"-"},"content":""},{"lineNumber":64,"author":{"gitID":"-"},"content":"        if (!target.equals(editedPerson) \u0026\u0026 internalList.contains(editedPerson)) {"},{"lineNumber":65,"author":{"gitID":"-"},"content":"            throw new DuplicatePersonException();"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":67,"author":{"gitID":"-"},"content":""},{"lineNumber":68,"author":{"gitID":"-"},"content":"        internalList.set(index, editedPerson);"},{"lineNumber":69,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":70,"author":{"gitID":"-"},"content":""},{"lineNumber":71,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":72,"author":{"gitID":"-"},"content":"     * Removes the equivalent person from the list."},{"lineNumber":73,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":74,"author":{"gitID":"-"},"content":"     * @throws PersonNotFoundException if no such person could be found in the list."},{"lineNumber":75,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":76,"author":{"gitID":"-"},"content":"    public boolean remove(Person toRemove) throws PersonNotFoundException {"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        requireNonNull(toRemove);"},{"lineNumber":78,"author":{"gitID":"-"},"content":"        final boolean personFoundAndDeleted \u003d internalList.remove(toRemove);"},{"lineNumber":79,"author":{"gitID":"-"},"content":"        if (!personFoundAndDeleted) {"},{"lineNumber":80,"author":{"gitID":"-"},"content":"            throw new PersonNotFoundException();"},{"lineNumber":81,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":82,"author":{"gitID":"-"},"content":"        return personFoundAndDeleted;"},{"lineNumber":83,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":84,"author":{"gitID":"-"},"content":""},{"lineNumber":85,"author":{"gitID":"-"},"content":"    public void setPersons(UniquePersonList replacement) {"},{"lineNumber":86,"author":{"gitID":"-"},"content":"        this.internalList.setAll(replacement.internalList);"},{"lineNumber":87,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":88,"author":{"gitID":"-"},"content":""},{"lineNumber":89,"author":{"gitID":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) throws DuplicatePersonException {"},{"lineNumber":90,"author":{"gitID":"-"},"content":"        requireAllNonNull(persons);"},{"lineNumber":91,"author":{"gitID":"-"},"content":"        final UniquePersonList replacement \u003d new UniquePersonList();"},{"lineNumber":92,"author":{"gitID":"-"},"content":"        for (final Person person : persons) {"},{"lineNumber":93,"author":{"gitID":"-"},"content":"            replacement.add(person);"},{"lineNumber":94,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":95,"author":{"gitID":"-"},"content":"        setPersons(replacement);"},{"lineNumber":96,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":97,"author":{"gitID":"-"},"content":""},{"lineNumber":98,"author":{"gitID":"kexiaowen"},"content":"    //@@author kexiaowen"},{"lineNumber":99,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":100,"author":{"gitID":"kexiaowen"},"content":"     * Sorts the list based on overall rating in ascending order"},{"lineNumber":101,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":102,"author":{"gitID":"kexiaowen"},"content":"    public void sortPersonsRatingAsc() {"},{"lineNumber":103,"author":{"gitID":"kexiaowen"},"content":"        Collections.sort(internalList, Person::compareByOverallRating);"},{"lineNumber":104,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":105,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":106,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":107,"author":{"gitID":"kexiaowen"},"content":"     * Sorts the list based on overall rating in descending order"},{"lineNumber":108,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":109,"author":{"gitID":"kexiaowen"},"content":"    public void sortPersonsRatingDesc() {"},{"lineNumber":110,"author":{"gitID":"kexiaowen"},"content":"        Collections.sort(internalList, Collections.reverseOrder(Person::compareByOverallRating));"},{"lineNumber":111,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":112,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":113,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":114,"author":{"gitID":"kexiaowen"},"content":"     * Sorts the list based on GPA in ascending order"},{"lineNumber":115,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":116,"author":{"gitID":"kexiaowen"},"content":"    public void sortPersonsGradePointAverageAsc() {"},{"lineNumber":117,"author":{"gitID":"kexiaowen"},"content":"        Collections.sort(internalList, Person::compareByGradePointAverage);"},{"lineNumber":118,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":119,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":120,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":121,"author":{"gitID":"kexiaowen"},"content":"     * Sorts the list based on GPA in descending order"},{"lineNumber":122,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":123,"author":{"gitID":"kexiaowen"},"content":"    public void sortPersonsGradePointAverageDesc() {"},{"lineNumber":124,"author":{"gitID":"kexiaowen"},"content":"        Collections.sort(internalList, Collections.reverseOrder(Person::compareByGradePointAverage));"},{"lineNumber":125,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":126,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":127,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":128,"author":{"gitID":"kexiaowen"},"content":"     * Sorts the list based on name in ascending order"},{"lineNumber":129,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":130,"author":{"gitID":"kexiaowen"},"content":"    public void sortPersonsNameAsc() {"},{"lineNumber":131,"author":{"gitID":"kexiaowen"},"content":"        Collections.sort(internalList, Person::compareByName);"},{"lineNumber":132,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":133,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":134,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":135,"author":{"gitID":"kexiaowen"},"content":"     * Sorts the list based on name in descending order"},{"lineNumber":136,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":137,"author":{"gitID":"kexiaowen"},"content":"    public void sortPersonsNameDesc() {"},{"lineNumber":138,"author":{"gitID":"kexiaowen"},"content":"        Collections.sort(internalList, Collections.reverseOrder(Person::compareByName));"},{"lineNumber":139,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":140,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":141,"author":{"gitID":"kexiaowen"},"content":"    //@@author"},{"lineNumber":142,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":143,"author":{"gitID":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}."},{"lineNumber":144,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":145,"author":{"gitID":"-"},"content":"    public ObservableList\u003cPerson\u003e asObservableList() {"},{"lineNumber":146,"author":{"gitID":"-"},"content":"        return FXCollections.unmodifiableObservableList(internalList);"},{"lineNumber":147,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":148,"author":{"gitID":"-"},"content":""},{"lineNumber":149,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":150,"author":{"gitID":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {"},{"lineNumber":151,"author":{"gitID":"-"},"content":"        return internalList.iterator();"},{"lineNumber":152,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":153,"author":{"gitID":"-"},"content":""},{"lineNumber":154,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":155,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":156,"author":{"gitID":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":157,"author":{"gitID":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls"},{"lineNumber":158,"author":{"gitID":"-"},"content":"                        \u0026\u0026 this.internalList.equals(((UniquePersonList) other).internalList));"},{"lineNumber":159,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":160,"author":{"gitID":"-"},"content":""},{"lineNumber":161,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":162,"author":{"gitID":"-"},"content":"    public int hashCode() {"},{"lineNumber":163,"author":{"gitID":"-"},"content":"        return internalList.hashCode();"},{"lineNumber":164,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":165,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"kexiaowen":45,"-":120}},{"path":"src/main/java/seedu/address/model/person/InterviewDateInKeywordsRangePredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"mhq199657"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":3,"author":{"gitID":"mhq199657"},"content":"import static java.util.Objects.isNull;"},{"lineNumber":4,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":5,"author":{"gitID":"mhq199657"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitID":"mhq199657"},"content":"import java.util.function.Predicate;"},{"lineNumber":7,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":8,"author":{"gitID":"mhq199657"},"content":"import seedu.address.logic.parser.FilterRange;"},{"lineNumber":9,"author":{"gitID":"mhq199657"},"content":"//@@author mhq199657"},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":"/**"},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":" * A Predicate testing whether a person has his/her interview date in the keywords range"},{"lineNumber":12,"author":{"gitID":"mhq199657"},"content":" */"},{"lineNumber":13,"author":{"gitID":"mhq199657"},"content":"public class InterviewDateInKeywordsRangePredicate implements Predicate\u003cPerson\u003e {"},{"lineNumber":14,"author":{"gitID":"mhq199657"},"content":"    private final LocalDateTime low;"},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":"    private final LocalDateTime high;"},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":"    public InterviewDateInKeywordsRangePredicate(InterviewDate low, InterviewDate high) {"},{"lineNumber":17,"author":{"gitID":"mhq199657"},"content":"        this.low \u003d low.dateTime;"},{"lineNumber":18,"author":{"gitID":"mhq199657"},"content":"        this.high \u003d high.dateTime;"},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":20,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":21,"author":{"gitID":"mhq199657"},"content":"    public InterviewDateInKeywordsRangePredicate(FilterRange\u003cInterviewDate\u003e filterRange) {"},{"lineNumber":22,"author":{"gitID":"mhq199657"},"content":"        if (filterRange.isRange()) {"},{"lineNumber":23,"author":{"gitID":"mhq199657"},"content":"            this.low \u003d filterRange.getLowValue().dateTime;"},{"lineNumber":24,"author":{"gitID":"mhq199657"},"content":"            this.high \u003d filterRange.getHighValue().dateTime;"},{"lineNumber":25,"author":{"gitID":"mhq199657"},"content":"        } else {"},{"lineNumber":26,"author":{"gitID":"mhq199657"},"content":"            this.low \u003d filterRange.getExactValue().dateTime;"},{"lineNumber":27,"author":{"gitID":"mhq199657"},"content":"            this.high \u003d filterRange.getExactValue().dateTime;"},{"lineNumber":28,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":29,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":30,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":31,"author":{"gitID":"mhq199657"},"content":"    @Override"},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":"    public boolean test(Person person) {"},{"lineNumber":33,"author":{"gitID":"mhq199657"},"content":"        if (isNull(person.getInterviewDate().dateTime)) {"},{"lineNumber":34,"author":{"gitID":"mhq199657"},"content":"            return false;"},{"lineNumber":35,"author":{"gitID":"mhq199657"},"content":"        } else {"},{"lineNumber":36,"author":{"gitID":"mhq199657"},"content":"            return person.getInterviewDate().dateTime.compareTo(high) \u003c\u003d 0"},{"lineNumber":37,"author":{"gitID":"mhq199657"},"content":"                    \u0026\u0026 person.getInterviewDate().dateTime.compareTo(low) \u003e\u003d 0;"},{"lineNumber":38,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":39,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":41,"author":{"gitID":"mhq199657"},"content":"    @Override"},{"lineNumber":42,"author":{"gitID":"mhq199657"},"content":"    public boolean equals(Object other) {"},{"lineNumber":43,"author":{"gitID":"mhq199657"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":44,"author":{"gitID":"mhq199657"},"content":"                || (other instanceof InterviewDateInKeywordsRangePredicate // instanceof handles nulls"},{"lineNumber":45,"author":{"gitID":"mhq199657"},"content":"                \u0026\u0026 this.low.equals(((InterviewDateInKeywordsRangePredicate) other).low)"},{"lineNumber":46,"author":{"gitID":"mhq199657"},"content":"                \u0026\u0026 this.high.equals(((InterviewDateInKeywordsRangePredicate) other).high)); // state check"},{"lineNumber":47,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":48,"author":{"gitID":"mhq199657"},"content":"}"}],"authorContributionMap":{"mhq199657":48}},{"path":"src/main/java/seedu/address/model/person/EmailContainsPrefixesPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.FindResults;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":" * Tests that a {@code Person}\u0027s {@code Email} matches the prefix string given."},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"public class EmailContainsPrefixesPredicate implements Predicate\u003cPerson\u003e {"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"    private final List\u003cString\u003e prefixKeywords;"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private final String commandPrefix \u003d \"e/\";"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"    public EmailContainsPrefixesPredicate(List\u003cString\u003e prefixKeywords) {"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"        this.prefixKeywords \u003d prefixKeywords;"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"    public boolean test(Person person) {"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        return prefixKeywords.stream()"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                .anyMatch(prefix -\u003e FindResults.getInstance().containsPrefixIgnoreCase("},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                        person.getEmail().value, prefix, commandPrefix));"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof EmailContainsPrefixesPredicate // instanceof handles nulls"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.prefixKeywords.equals(((EmailContainsPrefixesPredicate) other).prefixKeywords)); // state check"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":5,"tanhengyeow":29}},{"path":"src/main/java/seedu/address/model/person/EmailPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"tanhengyeow"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":3,"author":{"gitID":"tanhengyeow"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitID":"tanhengyeow"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.logic.parser.PredicateUtil;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":" * Represents an Email predicate"},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"public class EmailPredicate implements FieldPredicate {"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private Predicate\u003cPerson\u003e emailPredicate \u003d null;"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"     * Constructs an {@code EmailPredicate}."},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"     * @param substringKeywords stores user argument that matches substring"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"     * @param exactKeywords stores user argument that matches exact keywords"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"     * @param prefixKeywords stores user argument that matches prefix"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"     * @param suffixKeywords stores user argument that matches suffix"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"    public EmailPredicate(ArrayList\u003cString\u003e exactKeywords, ArrayList\u003cString\u003e substringKeywords,"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                          ArrayList\u003cString\u003e prefixKeywords, ArrayList\u003cString\u003e suffixKeywords) {"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":"        EmailContainsKeywordsPredicate emailContainsKeywordsPredicate \u003d null;"},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        EmailContainsSubstringsPredicate emailContainsSubstringsPredicate \u003d null;"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        EmailContainsPrefixesPredicate emailContainsPrefixesPredicate \u003d null;"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        EmailContainsSuffixesPredicate emailContainsSuffixesPredicate \u003d null;"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        if (!exactKeywords.isEmpty()) {"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"            emailContainsKeywordsPredicate \u003d new EmailContainsKeywordsPredicate(exactKeywords);"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":"        if (!substringKeywords.isEmpty()) {"},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"            emailContainsSubstringsPredicate \u003d new EmailContainsSubstringsPredicate(substringKeywords);"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":"        if (!prefixKeywords.isEmpty()) {"},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"            emailContainsPrefixesPredicate \u003d new EmailContainsPrefixesPredicate(prefixKeywords);"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":"        if (!suffixKeywords.isEmpty()) {"},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"            emailContainsSuffixesPredicate \u003d new EmailContainsSuffixesPredicate(suffixKeywords);"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"        if (!exactKeywords.isEmpty() || !substringKeywords.isEmpty()"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":"                || !prefixKeywords.isEmpty() || !suffixKeywords.isEmpty()) {"},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"            emailPredicate \u003d new PredicateUtil().formOrPredicate(emailContainsKeywordsPredicate,"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"                    emailContainsSubstringsPredicate, emailContainsPrefixesPredicate,"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"                    emailContainsSuffixesPredicate);"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"    public Predicate\u003cPerson\u003e getPredicate() {"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"        return emailPredicate;"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"    public String toString() {"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"        return emailPredicate.toString();"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof EmailPredicate // instanceof handles nulls"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.emailPredicate.equals(((EmailPredicate) other).emailPredicate)); // state check"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":69,"author":{"gitID":"tanhengyeow"},"content":"    public int hashCode() {"},{"lineNumber":70,"author":{"gitID":"tanhengyeow"},"content":"        return emailPredicate.hashCode();"},{"lineNumber":71,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":72,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":73,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"tanhengyeow":73}},{"path":"src/main/java/seedu/address/model/person/MajorPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"tanhengyeow"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":3,"author":{"gitID":"tanhengyeow"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitID":"tanhengyeow"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.logic.parser.PredicateUtil;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":" * Represents an Major predicate"},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"public class MajorPredicate implements FieldPredicate {"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private Predicate\u003cPerson\u003e majorPredicate \u003d null;"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"     * Constructs an {@code MajorPredicate}."},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"     * @param substringKeywords stores user argument that matches substring"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"     * @param exactKeywords stores user argument that matches exact keywords"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"     * @param prefixKeywords stores user argument that matches prefix"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"     * @param suffixKeywords stores user argument that matches suffix"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"    public MajorPredicate(ArrayList\u003cString\u003e exactKeywords, ArrayList\u003cString\u003e substringKeywords,"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                          ArrayList\u003cString\u003e prefixKeywords, ArrayList\u003cString\u003e suffixKeywords) {"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"        MajorContainsKeywordsPredicate majorContainsKeywordsPredicate \u003d null;"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":"        MajorContainsSubstringsPredicate majorContainsSubstringsPredicate \u003d null;"},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        MajorContainsPrefixesPredicate majorContainsPrefixesPredicate \u003d null;"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        MajorContainsSuffixesPredicate majorContainsSuffixesPredicate \u003d null;"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        if (!exactKeywords.isEmpty()) {"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"            majorContainsKeywordsPredicate \u003d new MajorContainsKeywordsPredicate(exactKeywords);"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        if (!substringKeywords.isEmpty()) {"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":"            majorContainsSubstringsPredicate \u003d new MajorContainsSubstringsPredicate(substringKeywords);"},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        if (!prefixKeywords.isEmpty()) {"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":"            majorContainsPrefixesPredicate \u003d new MajorContainsPrefixesPredicate(prefixKeywords);"},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        if (!suffixKeywords.isEmpty()) {"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":"            majorContainsSuffixesPredicate \u003d new MajorContainsSuffixesPredicate(suffixKeywords);"},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        if (!exactKeywords.isEmpty() || !substringKeywords.isEmpty()"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"                || !prefixKeywords.isEmpty() || !suffixKeywords.isEmpty()) {"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":"            this.majorPredicate \u003d new PredicateUtil().formOrPredicate(majorContainsKeywordsPredicate,"},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"                    majorContainsSubstringsPredicate, majorContainsPrefixesPredicate,"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"                    majorContainsSuffixesPredicate);"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":"    public Predicate\u003cPerson\u003e getPredicate() {"},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"        return majorPredicate;"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":"    public String toString() {"},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"        return majorPredicate.toString();"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof MajorPredicate // instanceof handles nulls"},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.majorPredicate.equals(((MajorPredicate) other).majorPredicate)); // state check"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":"    public int hashCode() {"},{"lineNumber":69,"author":{"gitID":"tanhengyeow"},"content":"        return majorPredicate.hashCode();"},{"lineNumber":70,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":71,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":72,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"tanhengyeow":72}},{"path":"src/main/java/seedu/address/model/person/NamePredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"tanhengyeow"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":3,"author":{"gitID":"tanhengyeow"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitID":"tanhengyeow"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.logic.parser.PredicateUtil;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":" * Represents an Name predicate"},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"public class NamePredicate implements FieldPredicate {"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private Predicate\u003cPerson\u003e namePredicate \u003d null;"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"     * Constructs an {@code NamePredicate}."},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"     * @param substringKeywords stores user argument that matches substring"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"     * @param exactKeywords stores user argument that matches exact keywords"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"     * @param prefixKeywords stores user argument that matches prefix"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"     * @param suffixKeywords stores user argument that matches suffix"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"    public NamePredicate(ArrayList\u003cString\u003e exactKeywords, ArrayList\u003cString\u003e substringKeywords,"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                         ArrayList\u003cString\u003e prefixKeywords, ArrayList\u003cString\u003e suffixKeywords) {"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":"        NameContainsKeywordsPredicate nameContainsKeywordsPredicate \u003d null;"},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        NameContainsSubstringsPredicate nameContainsSubstringsPredicate \u003d null;"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        NameContainsPrefixesPredicate nameContainsPrefixesPredicate \u003d null;"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        NameContainsSuffixesPredicate nameContainsSuffixesPredicate \u003d null;"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        if (!exactKeywords.isEmpty()) {"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"            nameContainsKeywordsPredicate \u003d new NameContainsKeywordsPredicate(exactKeywords);"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":"        if (!substringKeywords.isEmpty()) {"},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"            nameContainsSubstringsPredicate \u003d new NameContainsSubstringsPredicate(substringKeywords);"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":"        if (!prefixKeywords.isEmpty()) {"},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"            nameContainsPrefixesPredicate \u003d new NameContainsPrefixesPredicate(prefixKeywords);"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":"        if (!suffixKeywords.isEmpty()) {"},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"            nameContainsSuffixesPredicate \u003d new NameContainsSuffixesPredicate(suffixKeywords);"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"        if (!exactKeywords.isEmpty() || !substringKeywords.isEmpty()"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":"                || !prefixKeywords.isEmpty() || !suffixKeywords.isEmpty()) {"},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"            this.namePredicate \u003d new PredicateUtil().formOrPredicate(nameContainsKeywordsPredicate,"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"                    nameContainsSubstringsPredicate, nameContainsPrefixesPredicate,"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"                    nameContainsSuffixesPredicate);"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"    public Predicate\u003cPerson\u003e getPredicate() {"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"        return namePredicate;"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"    public String toString() {"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"        return namePredicate.toString();"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof NamePredicate // instanceof handles nulls"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.namePredicate.equals(((NamePredicate) other).namePredicate)); // state check"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":69,"author":{"gitID":"tanhengyeow"},"content":"    public int hashCode() {"},{"lineNumber":70,"author":{"gitID":"tanhengyeow"},"content":"        return namePredicate.hashCode();"},{"lineNumber":71,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":72,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":73,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"tanhengyeow":73}},{"path":"src/main/java/seedu/address/model/person/GradePointAverage.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":" * Represents a Person\u0027s GradePointAverage in the address book."},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGradePointAverage(String)}"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":"public class GradePointAverage {"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"    public static final String MESSAGE_GRADE_POINT_AVERAGE_CONSTRAINTS \u003d"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"            \"Grade point average can only floating point numbers, and should be between 0.00 and 5.00 \""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"                    + \"(in 2 decimal point).\";"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"    public static final double GPA_LOWER_BOUND \u003d 0.0;"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"    public static final double GPA_UPPER_BOUND \u003d 5.0;"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    private static final String EXPECTED_GRADE_POINT_AVERAGE_REGEX \u003d \"\\\\d+([.]\\\\d{2})?\";"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    public final String value;"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"     * Constructs a {@code gradePointAverage}."},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"     *"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"     * @param gradePointAverage A valid gradePointAverage."},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"    public GradePointAverage(String gradePointAverage) {"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":"        requireNonNull(gradePointAverage);"},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        checkArgument(isValidGradePointAverage(gradePointAverage),"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"                MESSAGE_GRADE_POINT_AVERAGE_CONSTRAINTS);"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        this.value \u003d gradePointAverage;"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"     * Returns true if a given string is a valid gradePointAverage."},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"    public static boolean isValidGradePointAverage(String test) {"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        return test.matches(EXPECTED_GRADE_POINT_AVERAGE_REGEX) \u0026\u0026 isInValidRange(test);"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":"     *"},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"     * @param test A grade point average matching regex"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"     * @return whether the grade point average is in valid range"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":"    private static boolean isInValidRange(String test) {"},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"        double gradePointAverage \u003d Double.parseDouble(test);"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"        return gradePointAverage \u003e\u003d GPA_LOWER_BOUND \u0026\u0026 gradePointAverage \u003c\u003d GPA_UPPER_BOUND;"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"    public String toString() {"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":"        return value;"},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof GradePointAverage // instanceof handles nulls"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.value.equals(((GradePointAverage) other).value)); // state check"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"    public int hashCode() {"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":"        return value.hashCode();"},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":5,"tanhengyeow":60}},{"path":"src/main/java/seedu/address/model/person/PhoneContainsSubstringsPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.FindResults;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":" * Tests that a {@code Person}\u0027s {@code Phone} matches the substring given."},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"public class PhoneContainsSubstringsPredicate implements Predicate\u003cPerson\u003e {"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"    private final List\u003cString\u003e substringKeywords;"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private final String commandPrefix \u003d \"p/\";"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"    public PhoneContainsSubstringsPredicate(List\u003cString\u003e substringKeywords) {"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"        this.substringKeywords \u003d substringKeywords;"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"    public boolean test(Person person) {"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        return substringKeywords.stream()"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                .anyMatch(substring -\u003e FindResults.getInstance().containsSubstringIgnoreCase("},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                        person.getPhone().value, substring, commandPrefix));"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof PhoneContainsSubstringsPredicate // instanceof handles nulls"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.substringKeywords.equals(("},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                        (PhoneContainsSubstringsPredicate) other).substringKeywords)); // state check"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":5,"tanhengyeow":30}},{"path":"src/main/java/seedu/address/model/person/CommentContainsSuffixesPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.FindResults;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":" * Tests that a {@code Person}\u0027s {@code Comment} matches the suffix string given."},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"public class CommentContainsSuffixesPredicate implements Predicate\u003cPerson\u003e {"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"    private final List\u003cString\u003e suffixKeywords;"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private final String commandPrefix \u003d \"c/\";"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"    public CommentContainsSuffixesPredicate(List\u003cString\u003e suffixKeywords) {"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"        this.suffixKeywords \u003d suffixKeywords;"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"    public boolean test(Person person) {"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        return suffixKeywords.stream()"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                .anyMatch(suffix -\u003e FindResults.getInstance().containsSuffixIgnoreCase("},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                        person.getComment().value, suffix, commandPrefix));"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof CommentContainsSuffixesPredicate // instanceof handles nulls"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.suffixKeywords.equals(("},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                (CommentContainsSuffixesPredicate) other).suffixKeywords)); // state check"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":5,"tanhengyeow":30}},{"path":"src/main/java/seedu/address/model/person/CommentContainsSubstringsPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.FindResults;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":" * Tests that a {@code Person}\u0027s {@code Comment} matches the substring given."},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"public class CommentContainsSubstringsPredicate implements Predicate\u003cPerson\u003e {"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"    private final List\u003cString\u003e substringKeywords;"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private final String commandPrefix \u003d \"c/\";"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"    public CommentContainsSubstringsPredicate(List\u003cString\u003e substringKeywords) {"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"        this.substringKeywords \u003d substringKeywords;"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"    public boolean test(Person person) {"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        return substringKeywords.stream()"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                .anyMatch(substring -\u003e FindResults.getInstance().containsSubstringIgnoreCase("},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                        person.getComment().value, substring, commandPrefix));"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof CommentContainsSubstringsPredicate // instanceof handles nulls"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.substringKeywords.equals(("},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                (CommentContainsSubstringsPredicate) other).substringKeywords)); // state check"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":5,"tanhengyeow":30}},{"path":"src/main/java/seedu/address/model/person/AddressContainsSuffixesPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.FindResults;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":" * Tests that a {@code Person}\u0027s {@code Address} matches the suffix string given."},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"public class AddressContainsSuffixesPredicate implements Predicate\u003cPerson\u003e {"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"    private final List\u003cString\u003e suffixKeywords;"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private final String commandPrefix \u003d \"a/\";"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"    public AddressContainsSuffixesPredicate(List\u003cString\u003e suffixKeywords) {"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"        this.suffixKeywords \u003d suffixKeywords;"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"    public boolean test(Person person) {"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        return suffixKeywords.stream()"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                .anyMatch(suffix -\u003e FindResults.getInstance().containsSuffixIgnoreCase("},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                        person.getAddress().value, suffix, commandPrefix));"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof AddressContainsSuffixesPredicate // instanceof handles nulls"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.suffixKeywords.equals(("},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                        (AddressContainsSuffixesPredicate) other).suffixKeywords)); // state check"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":5,"tanhengyeow":30}},{"path":"src/main/java/seedu/address/model/person/UniversityContainsPrefixesPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.FindResults;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":" * Tests that a {@code Person}\u0027s {@code University} matches the prefix string given."},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"public class UniversityContainsPrefixesPredicate implements Predicate\u003cPerson\u003e {"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"    private final List\u003cString\u003e prefixKeywords;"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private final String commandPrefix \u003d \"u/\";"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"    public UniversityContainsPrefixesPredicate(List\u003cString\u003e prefixKeywords) {"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"        this.prefixKeywords \u003d prefixKeywords;"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"    public boolean test(Person person) {"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        return prefixKeywords.stream()"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                .anyMatch(prefix -\u003e FindResults.getInstance().containsPrefixIgnoreCase("},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                        person.getUniversity().value, prefix, commandPrefix));"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof UniversityContainsPrefixesPredicate // instanceof handles nulls"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.prefixKeywords.equals(("},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                (UniversityContainsPrefixesPredicate) other).prefixKeywords)); // state check"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":5,"tanhengyeow":30}},{"path":"src/main/java/seedu/address/model/person/EmailContainsSubstringsPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.FindResults;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":" * Tests that a {@code Person}\u0027s {@code Email} matches the substring given."},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"public class EmailContainsSubstringsPredicate implements Predicate\u003cPerson\u003e {"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"    private final List\u003cString\u003e substringKeywords;"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private final String commandPrefix \u003d \"e/\";"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"    public EmailContainsSubstringsPredicate(List\u003cString\u003e substringKeywords) {"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"        this.substringKeywords \u003d substringKeywords;"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"    public boolean test(Person person) {"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        return substringKeywords.stream()"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                .anyMatch(substring -\u003e FindResults.getInstance().containsSubstringIgnoreCase("},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                        person.getEmail().value, substring, commandPrefix));"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof EmailContainsSubstringsPredicate // instanceof handles nulls"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.substringKeywords.equals(("},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                        (EmailContainsSubstringsPredicate) other).substringKeywords)); // state check"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":5,"tanhengyeow":30}},{"path":"src/main/java/seedu/address/model/person/UniversityContainsSubstringsPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.FindResults;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":" * Tests that a {@code Person}\u0027s {@code University} matches the substring given."},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"public class UniversityContainsSubstringsPredicate implements Predicate\u003cPerson\u003e {"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"    private final List\u003cString\u003e substringKeywords;"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private final String commandPrefix \u003d \"u/\";"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"    public UniversityContainsSubstringsPredicate(List\u003cString\u003e substringKeywords) {"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"        this.substringKeywords \u003d substringKeywords;"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"    public boolean test(Person person) {"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        return substringKeywords.stream()"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                .anyMatch(substring -\u003e FindResults.getInstance().containsSubstringIgnoreCase("},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                        person.getUniversity().value, substring, commandPrefix));"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof UniversityContainsSubstringsPredicate // instanceof handles nulls"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.substringKeywords.equals(("},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                (UniversityContainsSubstringsPredicate) other).substringKeywords)); // state check"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":5,"tanhengyeow":30}},{"path":"src/main/java/seedu/address/model/person/JobApplied.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"kexiaowen"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"kexiaowen"},"content":" * Represents a candidate\u0027s job applied in HR+."},{"lineNumber":8,"author":{"gitID":"kexiaowen"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidJobApplied(String)}"},{"lineNumber":9,"author":{"gitID":"kexiaowen"},"content":" */"},{"lineNumber":10,"author":{"gitID":"kexiaowen"},"content":"public class JobApplied {"},{"lineNumber":11,"author":{"gitID":"kexiaowen"},"content":"    public static final String MESSAGE_JOB_APPLIED_CONSTRAINTS \u003d"},{"lineNumber":12,"author":{"gitID":"kexiaowen"},"content":"            \"Job applied can take any values, and it should not be blank\";"},{"lineNumber":13,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":14,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":15,"author":{"gitID":"kexiaowen"},"content":"     * The first character of the job applied must not be a whitespace,"},{"lineNumber":16,"author":{"gitID":"kexiaowen"},"content":"     * otherwise \" \" (a blank string) becomes a valid input."},{"lineNumber":17,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":18,"author":{"gitID":"kexiaowen"},"content":"    public static final String JOB_APPLIED_VALIDATION_REGEX \u003d \"[^\\\\s].*\";"},{"lineNumber":19,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":20,"author":{"gitID":"kexiaowen"},"content":"    public final String value;"},{"lineNumber":21,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":22,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":23,"author":{"gitID":"kexiaowen"},"content":"     * Constructs a {@code JobApplied}."},{"lineNumber":24,"author":{"gitID":"kexiaowen"},"content":"     *"},{"lineNumber":25,"author":{"gitID":"kexiaowen"},"content":"     * @param jobApplied A valid job title."},{"lineNumber":26,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":27,"author":{"gitID":"kexiaowen"},"content":"    public JobApplied(String jobApplied) {"},{"lineNumber":28,"author":{"gitID":"kexiaowen"},"content":"        requireNonNull(jobApplied);"},{"lineNumber":29,"author":{"gitID":"kexiaowen"},"content":"        checkArgument(isValidJobApplied(jobApplied), MESSAGE_JOB_APPLIED_CONSTRAINTS);"},{"lineNumber":30,"author":{"gitID":"kexiaowen"},"content":"        this.value \u003d jobApplied;"},{"lineNumber":31,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":32,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":33,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":34,"author":{"gitID":"kexiaowen"},"content":"     * Returns true if a given string is a valid job title."},{"lineNumber":35,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":36,"author":{"gitID":"kexiaowen"},"content":"    public static boolean isValidJobApplied(String test) {"},{"lineNumber":37,"author":{"gitID":"kexiaowen"},"content":"        return test.matches(JOB_APPLIED_VALIDATION_REGEX);"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    public String toString() {"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        return value;"},{"lineNumber":43,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":46,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":48,"author":{"gitID":"kexiaowen"},"content":"                || (other instanceof JobApplied // instanceof handles nulls"},{"lineNumber":49,"author":{"gitID":"kexiaowen"},"content":"                \u0026\u0026 this.value.equals(((JobApplied) other).value)); // state check"},{"lineNumber":50,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":53,"author":{"gitID":"-"},"content":"    public int hashCode() {"},{"lineNumber":54,"author":{"gitID":"-"},"content":"        return value.hashCode();"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"mhq199657"},"content":"}"}],"authorContributionMap":{"kexiaowen":34,"mhq199657":1,"-":21}},{"path":"src/main/java/seedu/address/model/person/ExpectedGraduationYearInKeywordsRangePredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"mhq199657"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":3,"author":{"gitID":"mhq199657"},"content":"import java.util.function.Predicate;"},{"lineNumber":4,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":5,"author":{"gitID":"mhq199657"},"content":"import seedu.address.logic.parser.FilterRange;"},{"lineNumber":6,"author":{"gitID":"mhq199657"},"content":"//@@author mhq199657"},{"lineNumber":7,"author":{"gitID":"mhq199657"},"content":"/**"},{"lineNumber":8,"author":{"gitID":"mhq199657"},"content":" * A Predicate testing whether a person has his/her expected graduation year in the keywords range"},{"lineNumber":9,"author":{"gitID":"mhq199657"},"content":" */"},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":"public class ExpectedGraduationYearInKeywordsRangePredicate implements Predicate\u003cPerson\u003e {"},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":"    private final String low;"},{"lineNumber":12,"author":{"gitID":"mhq199657"},"content":"    private final String high;"},{"lineNumber":13,"author":{"gitID":"mhq199657"},"content":"    public ExpectedGraduationYearInKeywordsRangePredicate(ExpectedGraduationYear low, ExpectedGraduationYear high) {"},{"lineNumber":14,"author":{"gitID":"mhq199657"},"content":"        this.low \u003d low.value;"},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":"        this.high \u003d high.value;"},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":17,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":18,"author":{"gitID":"mhq199657"},"content":"    public ExpectedGraduationYearInKeywordsRangePredicate(FilterRange\u003cExpectedGraduationYear\u003e filterRange) {"},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":"        if (filterRange.isRange()) {"},{"lineNumber":20,"author":{"gitID":"mhq199657"},"content":"            this.low \u003d filterRange.getLowValue().value;"},{"lineNumber":21,"author":{"gitID":"mhq199657"},"content":"            this.high \u003d filterRange.getHighValue().value;"},{"lineNumber":22,"author":{"gitID":"mhq199657"},"content":"        } else {"},{"lineNumber":23,"author":{"gitID":"mhq199657"},"content":"            this.low \u003d filterRange.getExactValue().value;"},{"lineNumber":24,"author":{"gitID":"mhq199657"},"content":"            this.high \u003d filterRange.getExactValue().value;"},{"lineNumber":25,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":26,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":28,"author":{"gitID":"mhq199657"},"content":"    @Override"},{"lineNumber":29,"author":{"gitID":"mhq199657"},"content":"    public boolean test(Person person) {"},{"lineNumber":30,"author":{"gitID":"mhq199657"},"content":"        return person.getExpectedGraduationYear().value.compareTo(high) \u003c\u003d 0"},{"lineNumber":31,"author":{"gitID":"mhq199657"},"content":"                \u0026\u0026 person.getExpectedGraduationYear().value.compareTo(low) \u003e\u003d 0;"},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":34,"author":{"gitID":"mhq199657"},"content":"    @Override"},{"lineNumber":35,"author":{"gitID":"mhq199657"},"content":"    public boolean equals(Object other) {"},{"lineNumber":36,"author":{"gitID":"mhq199657"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":37,"author":{"gitID":"mhq199657"},"content":"                || (other instanceof ExpectedGraduationYearInKeywordsRangePredicate // instanceof handles nulls"},{"lineNumber":38,"author":{"gitID":"mhq199657"},"content":"                \u0026\u0026 this.low.equals(((ExpectedGraduationYearInKeywordsRangePredicate) other).low)"},{"lineNumber":39,"author":{"gitID":"mhq199657"},"content":"                \u0026\u0026 this.high.equals(((ExpectedGraduationYearInKeywordsRangePredicate) other).high)); // state check"},{"lineNumber":40,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":41,"author":{"gitID":"mhq199657"},"content":"}"}],"authorContributionMap":{"mhq199657":41}},{"path":"src/main/java/seedu/address/model/person/Person.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Set;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.address.model.tag.Tag;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.model.tag.UniqueTagList;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":13,"author":{"gitID":"-"},"content":" * Represents a Person in the address book."},{"lineNumber":14,"author":{"gitID":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable."},{"lineNumber":15,"author":{"gitID":"-"},"content":" */"},{"lineNumber":16,"author":{"gitID":"-"},"content":"public class Person {"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"    private final Name name;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"    private final Phone phone;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"    private final Email email;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"    private final Address address;"},{"lineNumber":22,"author":{"gitID":"kexiaowen"},"content":"    private final University university;"},{"lineNumber":23,"author":{"gitID":"mhq199657"},"content":"    private final ExpectedGraduationYear expectedGraduationYear;"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"    private final Major major;"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"    private final GradePointAverage gradePointAverage;"},{"lineNumber":26,"author":{"gitID":"kexiaowen"},"content":"    private final JobApplied jobApplied;"},{"lineNumber":27,"author":{"gitID":"kexiaowen"},"content":"    private final Rating rating;"},{"lineNumber":28,"author":{"gitID":"mhq199657"},"content":"    private final Resume resume;"},{"lineNumber":29,"author":{"gitID":"Ang-YC"},"content":"    private final ProfileImage profileImage;"},{"lineNumber":30,"author":{"gitID":"Ang-YC"},"content":"    private final Comment comment;"},{"lineNumber":31,"author":{"gitID":"Ang-YC"},"content":"    private final InterviewDate interviewDate;"},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":"    private final Status status;"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"    private final UniqueTagList tags;"},{"lineNumber":35,"author":{"gitID":"-"},"content":""},{"lineNumber":36,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":37,"author":{"gitID":"-"},"content":"     * Every field must be present and not null."},{"lineNumber":38,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":39,"author":{"gitID":"kexiaowen"},"content":"    public Person(Name name, Phone phone, Email email, Address address, University university,"},{"lineNumber":40,"author":{"gitID":"kexiaowen"},"content":"                  ExpectedGraduationYear expectedGraduationYear,"},{"lineNumber":41,"author":{"gitID":"kexiaowen"},"content":"                  Major major, GradePointAverage gradePointAverage, JobApplied jobApplied, Rating rating,"},{"lineNumber":42,"author":{"gitID":"Ang-YC"},"content":"                  Resume resume, ProfileImage profileImage, Comment comment, InterviewDate interviewDate, Status status,"},{"lineNumber":43,"author":{"gitID":"Ang-YC"},"content":"                  Set\u003cTag\u003e tags) {"},{"lineNumber":44,"author":{"gitID":"kexiaowen"},"content":"        requireAllNonNull(name, phone, email, address, university, expectedGraduationYear, major, gradePointAverage,"},{"lineNumber":45,"author":{"gitID":"kexiaowen"},"content":"                jobApplied, rating, resume, profileImage, comment, interviewDate, status, tags);"},{"lineNumber":46,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":"        this.name \u003d name;"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        this.phone \u003d phone;"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        this.email \u003d email;"},{"lineNumber":50,"author":{"gitID":"-"},"content":"        this.address \u003d address;"},{"lineNumber":51,"author":{"gitID":"kexiaowen"},"content":"        this.university \u003d university;"},{"lineNumber":52,"author":{"gitID":"mhq199657"},"content":"        this.expectedGraduationYear \u003d expectedGraduationYear;"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"        this.major \u003d major;"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"        this.gradePointAverage \u003d gradePointAverage;"},{"lineNumber":55,"author":{"gitID":"kexiaowen"},"content":"        this.jobApplied \u003d jobApplied;"},{"lineNumber":56,"author":{"gitID":"kexiaowen"},"content":"        this.rating \u003d rating;"},{"lineNumber":57,"author":{"gitID":"mhq199657"},"content":"        this.resume \u003d resume;"},{"lineNumber":58,"author":{"gitID":"Ang-YC"},"content":"        this.profileImage \u003d profileImage;"},{"lineNumber":59,"author":{"gitID":"Ang-YC"},"content":"        this.comment \u003d comment;"},{"lineNumber":60,"author":{"gitID":"Ang-YC"},"content":"        this.interviewDate \u003d interviewDate;"},{"lineNumber":61,"author":{"gitID":"mhq199657"},"content":"        this.status \u003d status;"},{"lineNumber":62,"author":{"gitID":"-"},"content":"        // protect internal tags from changes in the arg list"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        this.tags \u003d new UniqueTagList(tags);"},{"lineNumber":64,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitID":"-"},"content":""},{"lineNumber":66,"author":{"gitID":"-"},"content":"    public Name getName() {"},{"lineNumber":67,"author":{"gitID":"-"},"content":"        return name;"},{"lineNumber":68,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitID":"-"},"content":""},{"lineNumber":70,"author":{"gitID":"-"},"content":"    public Phone getPhone() {"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        return phone;"},{"lineNumber":72,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"-"},"content":""},{"lineNumber":74,"author":{"gitID":"-"},"content":"    public Email getEmail() {"},{"lineNumber":75,"author":{"gitID":"-"},"content":"        return email;"},{"lineNumber":76,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":77,"author":{"gitID":"-"},"content":""},{"lineNumber":78,"author":{"gitID":"-"},"content":"    public Address getAddress() {"},{"lineNumber":79,"author":{"gitID":"-"},"content":"        return address;"},{"lineNumber":80,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":81,"author":{"gitID":"-"},"content":""},{"lineNumber":82,"author":{"gitID":"kexiaowen"},"content":"    public University getUniversity() {"},{"lineNumber":83,"author":{"gitID":"kexiaowen"},"content":"        return university;"},{"lineNumber":84,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":85,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":86,"author":{"gitID":"mhq199657"},"content":"    public ExpectedGraduationYear getExpectedGraduationYear() {"},{"lineNumber":87,"author":{"gitID":"mhq199657"},"content":"        return expectedGraduationYear;"},{"lineNumber":88,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":89,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":90,"author":{"gitID":"tanhengyeow"},"content":"    public Major getMajor() {"},{"lineNumber":91,"author":{"gitID":"tanhengyeow"},"content":"        return major;"},{"lineNumber":92,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":93,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":94,"author":{"gitID":"tanhengyeow"},"content":"    public GradePointAverage getGradePointAverage() {"},{"lineNumber":95,"author":{"gitID":"tanhengyeow"},"content":"        return gradePointAverage;"},{"lineNumber":96,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":97,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":98,"author":{"gitID":"kexiaowen"},"content":"    public JobApplied getJobApplied() {"},{"lineNumber":99,"author":{"gitID":"kexiaowen"},"content":"        return jobApplied;"},{"lineNumber":100,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":101,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":102,"author":{"gitID":"kexiaowen"},"content":"    public Rating getRating() {"},{"lineNumber":103,"author":{"gitID":"kexiaowen"},"content":"        return rating;"},{"lineNumber":104,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":105,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":106,"author":{"gitID":"mhq199657"},"content":"    public Resume getResume() {"},{"lineNumber":107,"author":{"gitID":"mhq199657"},"content":"        return resume;"},{"lineNumber":108,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":109,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":110,"author":{"gitID":"Ang-YC"},"content":"    public ProfileImage getProfileImage() {"},{"lineNumber":111,"author":{"gitID":"Ang-YC"},"content":"        return profileImage;"},{"lineNumber":112,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":113,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":114,"author":{"gitID":"Ang-YC"},"content":"    public Comment getComment() {"},{"lineNumber":115,"author":{"gitID":"Ang-YC"},"content":"        return comment;"},{"lineNumber":116,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":117,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":118,"author":{"gitID":"Ang-YC"},"content":"    public InterviewDate getInterviewDate() {"},{"lineNumber":119,"author":{"gitID":"Ang-YC"},"content":"        return interviewDate;"},{"lineNumber":120,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":121,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":122,"author":{"gitID":"mhq199657"},"content":"    public Status getStatus() {"},{"lineNumber":123,"author":{"gitID":"mhq199657"},"content":"        return status;"},{"lineNumber":124,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":125,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":126,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":127,"author":{"gitID":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}"},{"lineNumber":128,"author":{"gitID":"-"},"content":"     * if modification is attempted."},{"lineNumber":129,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":130,"author":{"gitID":"-"},"content":"    public Set\u003cTag\u003e getTags() {"},{"lineNumber":131,"author":{"gitID":"-"},"content":"        return Collections.unmodifiableSet(tags.toSet());"},{"lineNumber":132,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":133,"author":{"gitID":"-"},"content":""},{"lineNumber":134,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":135,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":136,"author":{"gitID":"-"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":137,"author":{"gitID":"-"},"content":"            return true;"},{"lineNumber":138,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":139,"author":{"gitID":"-"},"content":""},{"lineNumber":140,"author":{"gitID":"-"},"content":"        if (!(other instanceof Person)) {"},{"lineNumber":141,"author":{"gitID":"-"},"content":"            return false;"},{"lineNumber":142,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":143,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":144,"author":{"gitID":"Ang-YC"},"content":"        // Resume and Profile image does not constitute the equality condition"},{"lineNumber":145,"author":{"gitID":"-"},"content":"        Person otherPerson \u003d (Person) other;"},{"lineNumber":146,"author":{"gitID":"-"},"content":"        return otherPerson.getName().equals(this.getName())"},{"lineNumber":147,"author":{"gitID":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(this.getPhone())"},{"lineNumber":148,"author":{"gitID":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(this.getEmail())"},{"lineNumber":149,"author":{"gitID":"mhq199657"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(this.getAddress())"},{"lineNumber":150,"author":{"gitID":"kexiaowen"},"content":"                \u0026\u0026 otherPerson.getUniversity().equals(this.getUniversity())"},{"lineNumber":151,"author":{"gitID":"Ang-YC"},"content":"                \u0026\u0026 otherPerson.getExpectedGraduationYear().equals(this.getExpectedGraduationYear())"},{"lineNumber":152,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 otherPerson.getMajor().equals(this.getMajor())"},{"lineNumber":153,"author":{"gitID":"kexiaowen"},"content":"                \u0026\u0026 otherPerson.getGradePointAverage().equals(this.getGradePointAverage());"},{"lineNumber":154,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":155,"author":{"gitID":"-"},"content":""},{"lineNumber":156,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":157,"author":{"gitID":"Ang-YC"},"content":"     * Equals everything that is significant to change InfoPanel (Every fields except profile picture)"},{"lineNumber":158,"author":{"gitID":"Ang-YC"},"content":"     * @param other object to compare with"},{"lineNumber":159,"author":{"gitID":"Ang-YC"},"content":"     * @return true if both are equals"},{"lineNumber":160,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":161,"author":{"gitID":"Ang-YC"},"content":"    public boolean infoEquals(Object other) {"},{"lineNumber":162,"author":{"gitID":"Ang-YC"},"content":"        if (!equals(other)) {"},{"lineNumber":163,"author":{"gitID":"Ang-YC"},"content":"            return false;"},{"lineNumber":164,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":165,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":166,"author":{"gitID":"-"},"content":"        Person otherPerson \u003d (Person) other;"},{"lineNumber":167,"author":{"gitID":"Ang-YC"},"content":"        return otherPerson.getJobApplied().equals(this.getJobApplied())"},{"lineNumber":168,"author":{"gitID":"Ang-YC"},"content":"                \u0026\u0026 otherPerson.getRating().equals(this.getRating())"},{"lineNumber":169,"author":{"gitID":"Ang-YC"},"content":"                \u0026\u0026 otherPerson.getResume().equals(this.getResume())"},{"lineNumber":170,"author":{"gitID":"Ang-YC"},"content":"                \u0026\u0026 otherPerson.getInterviewDate().equals(this.getInterviewDate())"},{"lineNumber":171,"author":{"gitID":"kexiaowen"},"content":"                \u0026\u0026 otherPerson.getStatus().equals(this.getStatus())"},{"lineNumber":172,"author":{"gitID":"mhq199657"},"content":"                \u0026\u0026 otherPerson.getComment().equals(this.getComment());"},{"lineNumber":173,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":174,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":175,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":176,"author":{"gitID":"-"},"content":"    public int hashCode() {"},{"lineNumber":177,"author":{"gitID":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own"},{"lineNumber":178,"author":{"gitID":"kexiaowen"},"content":"        return Objects.hash(name, phone, email, address, university, expectedGraduationYear, major,"},{"lineNumber":179,"author":{"gitID":"Ang-YC"},"content":"                gradePointAverage, jobApplied, rating, resume, profileImage, comment, interviewDate, status, tags);"},{"lineNumber":180,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":181,"author":{"gitID":"-"},"content":""},{"lineNumber":182,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":183,"author":{"gitID":"-"},"content":"    public String toString() {"},{"lineNumber":184,"author":{"gitID":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();"},{"lineNumber":185,"author":{"gitID":"-"},"content":"        builder.append(getName())"},{"lineNumber":186,"author":{"gitID":"-"},"content":"                .append(\" Phone: \")"},{"lineNumber":187,"author":{"gitID":"-"},"content":"                .append(getPhone())"},{"lineNumber":188,"author":{"gitID":"-"},"content":"                .append(\" Email: \")"},{"lineNumber":189,"author":{"gitID":"-"},"content":"                .append(getEmail())"},{"lineNumber":190,"author":{"gitID":"-"},"content":"                .append(\" Address: \")"},{"lineNumber":191,"author":{"gitID":"-"},"content":"                .append(getAddress())"},{"lineNumber":192,"author":{"gitID":"kexiaowen"},"content":"                .append(\" University: \")"},{"lineNumber":193,"author":{"gitID":"kexiaowen"},"content":"                .append(getUniversity())"},{"lineNumber":194,"author":{"gitID":"Ang-YC"},"content":"                .append(\" Expected graduation year: \")"},{"lineNumber":195,"author":{"gitID":"mhq199657"},"content":"                .append(getExpectedGraduationYear())"},{"lineNumber":196,"author":{"gitID":"tanhengyeow"},"content":"                .append(\" Major: \")"},{"lineNumber":197,"author":{"gitID":"tanhengyeow"},"content":"                .append(getMajor())"},{"lineNumber":198,"author":{"gitID":"tanhengyeow"},"content":"                .append(\" Grade point average: \")"},{"lineNumber":199,"author":{"gitID":"tanhengyeow"},"content":"                .append(getGradePointAverage())"},{"lineNumber":200,"author":{"gitID":"kexiaowen"},"content":"                .append(\" Job applied: \")"},{"lineNumber":201,"author":{"gitID":"kexiaowen"},"content":"                .append(getJobApplied())"},{"lineNumber":202,"author":{"gitID":"mhq199657"},"content":"                .append(\" Resume: \")"},{"lineNumber":203,"author":{"gitID":"mhq199657"},"content":"                .append(getResume())"},{"lineNumber":204,"author":{"gitID":"Ang-YC"},"content":"                .append(\" Profile image: \")"},{"lineNumber":205,"author":{"gitID":"Ang-YC"},"content":"                .append(getProfileImage())"},{"lineNumber":206,"author":{"gitID":"Ang-YC"},"content":"                .append(\" Comment: \")"},{"lineNumber":207,"author":{"gitID":"Ang-YC"},"content":"                .append(getComment())"},{"lineNumber":208,"author":{"gitID":"mhq199657"},"content":"                .append(\" Status: \")"},{"lineNumber":209,"author":{"gitID":"mhq199657"},"content":"                .append(getStatus())"},{"lineNumber":210,"author":{"gitID":"-"},"content":"                .append(\" Tags: \");"},{"lineNumber":211,"author":{"gitID":"-"},"content":"        getTags().forEach(builder::append);"},{"lineNumber":212,"author":{"gitID":"-"},"content":"        return builder.toString();"},{"lineNumber":213,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":214,"author":{"gitID":"-"},"content":""},{"lineNumber":215,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":216,"author":{"gitID":"kexiaowen"},"content":"     * Compares the overall ratings of two {@code Person} objects."},{"lineNumber":217,"author":{"gitID":"kexiaowen"},"content":"     * @param p1"},{"lineNumber":218,"author":{"gitID":"kexiaowen"},"content":"     * @param p2"},{"lineNumber":219,"author":{"gitID":"kexiaowen"},"content":"     * @return 1 if p1 has a higher overall rating, 0 if p1 and p2 have equal overall rating and -1 otherwise."},{"lineNumber":220,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":221,"author":{"gitID":"kexiaowen"},"content":"    public static int compareByOverallRating(Person p1, Person p2) {"},{"lineNumber":222,"author":{"gitID":"kexiaowen"},"content":"        return Double.compare(p1.getRating().getOverallScore(),"},{"lineNumber":223,"author":{"gitID":"kexiaowen"},"content":"                p2.getRating().getOverallScore());"},{"lineNumber":224,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":225,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":226,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":227,"author":{"gitID":"kexiaowen"},"content":"     * Compares the GPAs of two {@code Person} objects."},{"lineNumber":228,"author":{"gitID":"kexiaowen"},"content":"     * @param p1"},{"lineNumber":229,"author":{"gitID":"kexiaowen"},"content":"     * @param p2"},{"lineNumber":230,"author":{"gitID":"kexiaowen"},"content":"     * @return 1 if p1 has a higher GPA, 0 if p1 and p2 have equal GPA and -1 otherwise."},{"lineNumber":231,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":232,"author":{"gitID":"kexiaowen"},"content":"    public static int compareByGradePointAverage(Person p1, Person p2) {"},{"lineNumber":233,"author":{"gitID":"kexiaowen"},"content":"        double gpa1 \u003d Double.parseDouble(p1.getGradePointAverage().value);"},{"lineNumber":234,"author":{"gitID":"kexiaowen"},"content":"        double gpa2 \u003d Double.parseDouble(p2.getGradePointAverage().value);"},{"lineNumber":235,"author":{"gitID":"kexiaowen"},"content":"        return Double.compare(gpa1, gpa2);"},{"lineNumber":236,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":237,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":238,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":239,"author":{"gitID":"kexiaowen"},"content":"     * Compares the names of two {@code Person} objects lexicographically, ignoring case differences."},{"lineNumber":240,"author":{"gitID":"kexiaowen"},"content":"     * @param p1"},{"lineNumber":241,"author":{"gitID":"kexiaowen"},"content":"     * @param p2"},{"lineNumber":242,"author":{"gitID":"kexiaowen"},"content":"     * @return 1 if p1\u0027s name lexicographically precedes p2\u0027s name, 0 if p1 and p2 have the same name,"},{"lineNumber":243,"author":{"gitID":"kexiaowen"},"content":"     *         and -1 otherwise."},{"lineNumber":244,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":245,"author":{"gitID":"kexiaowen"},"content":"    public static int compareByName(Person p1, Person p2) {"},{"lineNumber":246,"author":{"gitID":"kexiaowen"},"content":"        String name1 \u003d p1.getName().fullName;"},{"lineNumber":247,"author":{"gitID":"kexiaowen"},"content":"        String name2 \u003d p2.getName().fullName;"},{"lineNumber":248,"author":{"gitID":"kexiaowen"},"content":"        return name1.compareToIgnoreCase(name2);"},{"lineNumber":249,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":250,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"kexiaowen":66,"mhq199657":25,"-":96,"tanhengyeow":17,"Ang-YC":46}},{"path":"src/main/java/seedu/address/model/person/AddressPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"tanhengyeow"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":3,"author":{"gitID":"tanhengyeow"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitID":"tanhengyeow"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.logic.parser.PredicateUtil;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":" * Represents a Address predicate"},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"public class AddressPredicate implements FieldPredicate {"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private Predicate\u003cPerson\u003e addressPredicate \u003d null;"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"     * Constructs an {@code AddressPredicate}."},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"     * @param substringKeywords stores user argument that matches substring"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"     * @param exactKeywords stores user argument that matches exact keywords"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"     * @param prefixKeywords stores user argument that matches prefix"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"     * @param suffixKeywords stores user argument that matches suffix"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"    public AddressPredicate(ArrayList\u003cString\u003e exactKeywords, ArrayList\u003cString\u003e substringKeywords,"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                            ArrayList\u003cString\u003e prefixKeywords, ArrayList\u003cString\u003e suffixKeywords) {"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":"        AddressContainsKeywordsPredicate addressContainsKeywordsPredicate \u003d null;"},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        AddressContainsSubstringsPredicate addressContainsSubstringsPredicate \u003d null;"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        AddressContainsPrefixesPredicate addressContainsPrefixesPredicate \u003d null;"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        AddressContainsSuffixesPredicate addressContainsSuffixesPredicate \u003d null;"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        if (!exactKeywords.isEmpty()) {"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"            addressContainsKeywordsPredicate \u003d"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"                    new AddressContainsKeywordsPredicate(exactKeywords);"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        if (!substringKeywords.isEmpty()) {"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"            addressContainsSubstringsPredicate \u003d new AddressContainsSubstringsPredicate(substringKeywords);"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        if (!prefixKeywords.isEmpty()) {"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"            addressContainsPrefixesPredicate \u003d new AddressContainsPrefixesPredicate(prefixKeywords);"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        if (!suffixKeywords.isEmpty()) {"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"            addressContainsSuffixesPredicate \u003d new AddressContainsSuffixesPredicate(suffixKeywords);"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":"        if (!exactKeywords.isEmpty() || !substringKeywords.isEmpty()"},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"                || !prefixKeywords.isEmpty() || !suffixKeywords.isEmpty()) {"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"            this.addressPredicate \u003d new PredicateUtil().formOrPredicate(addressContainsKeywordsPredicate,"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"                    addressContainsSubstringsPredicate, addressContainsPrefixesPredicate,"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"                    addressContainsSuffixesPredicate);"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"    public Predicate\u003cPerson\u003e getPredicate() {"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"        return addressPredicate;"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"    public String toString() {"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":"        return addressPredicate.toString();"},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof AddressPredicate // instanceof handles nulls"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.addressPredicate.equals(((AddressPredicate) other).addressPredicate)); // state check"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":69,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":70,"author":{"gitID":"tanhengyeow"},"content":"    public int hashCode() {"},{"lineNumber":71,"author":{"gitID":"tanhengyeow"},"content":"        return addressPredicate.hashCode();"},{"lineNumber":72,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":74,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"tanhengyeow":74}},{"path":"src/main/java/seedu/address/model/person/JobAppliedPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"tanhengyeow"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":3,"author":{"gitID":"tanhengyeow"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitID":"tanhengyeow"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.logic.parser.PredicateUtil;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":" * Represents a JobApplied predicate"},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"public class JobAppliedPredicate implements FieldPredicate {"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private Predicate\u003cPerson\u003e jobAppliedPredicate \u003d null;"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"     * Constructs an {@code JobAppliedPredicate}."},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"     * @param substringKeywords stores user argument that matches substring"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"     * @param exactKeywords stores user argument that matches exact keywords"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"     * @param prefixKeywords stores user argument that matches prefix"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"     * @param suffixKeywords stores user argument that matches suffix"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"    public JobAppliedPredicate(ArrayList\u003cString\u003e exactKeywords, ArrayList\u003cString\u003e substringKeywords,"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                            ArrayList\u003cString\u003e prefixKeywords, ArrayList\u003cString\u003e suffixKeywords) {"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":"        JobAppliedContainsKeywordsPredicate jobAppliedContainsKeywordsPredicate \u003d null;"},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        JobAppliedContainsSubstringsPredicate jobAppliedContainsSubstringsPredicate \u003d null;"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        JobAppliedContainsPrefixesPredicate jobAppliedContainsPrefixesPredicate \u003d null;"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        JobAppliedContainsSuffixesPredicate jobAppliedContainsSuffixesPredicate \u003d null;"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        if (!exactKeywords.isEmpty()) {"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"            jobAppliedContainsKeywordsPredicate \u003d"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"                    new JobAppliedContainsKeywordsPredicate(exactKeywords);"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        if (!substringKeywords.isEmpty()) {"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"            jobAppliedContainsSubstringsPredicate \u003d new JobAppliedContainsSubstringsPredicate(substringKeywords);"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        if (!prefixKeywords.isEmpty()) {"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"            jobAppliedContainsPrefixesPredicate \u003d new JobAppliedContainsPrefixesPredicate(prefixKeywords);"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        if (!suffixKeywords.isEmpty()) {"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"            jobAppliedContainsSuffixesPredicate \u003d new JobAppliedContainsSuffixesPredicate(suffixKeywords);"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":"        if (!exactKeywords.isEmpty() || !substringKeywords.isEmpty()"},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"                || !prefixKeywords.isEmpty() || !suffixKeywords.isEmpty()) {"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"            this.jobAppliedPredicate \u003d new PredicateUtil().formOrPredicate(jobAppliedContainsKeywordsPredicate,"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"                    jobAppliedContainsSubstringsPredicate, jobAppliedContainsPrefixesPredicate,"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"                    jobAppliedContainsSuffixesPredicate);"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"    public Predicate\u003cPerson\u003e getPredicate() {"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"        return jobAppliedPredicate;"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"    public String toString() {"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":"        return jobAppliedPredicate.toString();"},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof JobAppliedPredicate // instanceof handles nulls"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.jobAppliedPredicate.equals(((JobAppliedPredicate) other).jobAppliedPredicate)); // state check"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":69,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":70,"author":{"gitID":"tanhengyeow"},"content":"    public int hashCode() {"},{"lineNumber":71,"author":{"gitID":"tanhengyeow"},"content":"        return jobAppliedPredicate.hashCode();"},{"lineNumber":72,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":74,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"tanhengyeow":74}},{"path":"src/main/java/seedu/address/model/person/JobAppliedContainsSubstringsPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.FindResults;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":" * Tests that a {@code Person}\u0027s {@code JobApplied} matches the substring given."},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"public class JobAppliedContainsSubstringsPredicate implements Predicate\u003cPerson\u003e {"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"    private final List\u003cString\u003e substringKeywords;"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private final String commandPrefix \u003d \"j/\";"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"    public JobAppliedContainsSubstringsPredicate(List\u003cString\u003e substringKeywords) {"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"        this.substringKeywords \u003d substringKeywords;"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"    public boolean test(Person person) {"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        return substringKeywords.stream()"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                .anyMatch(substring -\u003e FindResults.getInstance().containsSubstringIgnoreCase("},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                        person.getJobApplied().value, substring, commandPrefix));"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof JobAppliedContainsSubstringsPredicate // instanceof handles nulls"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.substringKeywords.equals(("},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                (JobAppliedContainsSubstringsPredicate) other).substringKeywords)); // state check"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":5,"tanhengyeow":30}},{"path":"src/main/java/seedu/address/model/person/AddressContainsSubstringsPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.FindResults;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":" * Tests that a {@code Person}\u0027s {@code Address} matches the substring given."},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"public class AddressContainsSubstringsPredicate implements Predicate\u003cPerson\u003e {"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"    private final List\u003cString\u003e substringKeywords;"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private final String commandPrefix \u003d \"a/\";"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"    public AddressContainsSubstringsPredicate(List\u003cString\u003e substringKeywords) {"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"        this.substringKeywords \u003d substringKeywords;"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"    public boolean test(Person person) {"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        return substringKeywords.stream()"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                .anyMatch(substring -\u003e FindResults.getInstance().containsSubstringIgnoreCase("},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                        person.getAddress().value, substring, commandPrefix));"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof AddressContainsSubstringsPredicate // instanceof handles nulls"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.substringKeywords.equals(("},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                        (AddressContainsSubstringsPredicate) other).substringKeywords)); // state check"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":5,"tanhengyeow":30}},{"path":"src/main/java/seedu/address/model/person/ExpectedGraduationYear.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;"},{"lineNumber":5,"author":{"gitID":"mhq199657"},"content":"//@@author mhq199657"},{"lineNumber":6,"author":{"gitID":"mhq199657"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"mhq199657"},"content":" * Represents a Person\u0027s expectedGraduationYear in the address book."},{"lineNumber":8,"author":{"gitID":"mhq199657"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidExpectedGraduationYear(String)}"},{"lineNumber":9,"author":{"gitID":"mhq199657"},"content":" */"},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":"public class ExpectedGraduationYear {"},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":"    public static final String MESSAGE_EXPECTED_GRADUATION_YEAR_CONSTRAINTS \u003d"},{"lineNumber":12,"author":{"gitID":"mhq199657"},"content":"            \"Expected graduation year can only contain numbers, and should be between 2017 to 2025.\";"},{"lineNumber":13,"author":{"gitID":"mhq199657"},"content":"    private static final String EXPECTED_GRADUATION_YEAR_VALIDATION_REGEX \u003d \"\\\\d{4}\";"},{"lineNumber":14,"author":{"gitID":"mhq199657"},"content":"    private static final int YEAR_LOWER_BOUND \u003d 2017;"},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":"    private static final int YEAR_UPPER_BOUND \u003d 2025;"},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":"    public final String value;"},{"lineNumber":17,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":18,"author":{"gitID":"mhq199657"},"content":"     * Constructs a {@code expectedGraduationYear}."},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":"     *"},{"lineNumber":20,"author":{"gitID":"mhq199657"},"content":"     * @param expectedGraduationYear A valid expectedGraduationYear."},{"lineNumber":21,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":22,"author":{"gitID":"mhq199657"},"content":"    public ExpectedGraduationYear(String expectedGraduationYear) {"},{"lineNumber":23,"author":{"gitID":"mhq199657"},"content":"        requireNonNull(expectedGraduationYear);"},{"lineNumber":24,"author":{"gitID":"mhq199657"},"content":"        checkArgument(isValidExpectedGraduationYear(expectedGraduationYear),"},{"lineNumber":25,"author":{"gitID":"mhq199657"},"content":"                MESSAGE_EXPECTED_GRADUATION_YEAR_CONSTRAINTS);"},{"lineNumber":26,"author":{"gitID":"mhq199657"},"content":"        this.value \u003d expectedGraduationYear;"},{"lineNumber":27,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":28,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":29,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":30,"author":{"gitID":"mhq199657"},"content":"     * Returns true if a given string is a valid expectedGraduationYear."},{"lineNumber":31,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":"    public static boolean isValidExpectedGraduationYear(String test) {"},{"lineNumber":33,"author":{"gitID":"mhq199657"},"content":"        return test.matches(EXPECTED_GRADUATION_YEAR_VALIDATION_REGEX) \u0026\u0026 isInValidRange(test);"},{"lineNumber":34,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":36,"author":{"gitID":"mhq199657"},"content":"    /**"},{"lineNumber":37,"author":{"gitID":"mhq199657"},"content":"     *"},{"lineNumber":38,"author":{"gitID":"mhq199657"},"content":"     * @param test An expected graduation year matching regex"},{"lineNumber":39,"author":{"gitID":"mhq199657"},"content":"     * @return whether the graduation year is in valid range"},{"lineNumber":40,"author":{"gitID":"mhq199657"},"content":"     */"},{"lineNumber":41,"author":{"gitID":"mhq199657"},"content":"    private static boolean isInValidRange(String test) {"},{"lineNumber":42,"author":{"gitID":"mhq199657"},"content":"        int year \u003d Integer.parseInt(test);"},{"lineNumber":43,"author":{"gitID":"mhq199657"},"content":"        return year \u003e\u003d YEAR_LOWER_BOUND \u0026\u0026 year \u003c\u003d YEAR_UPPER_BOUND;"},{"lineNumber":44,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":46,"author":{"gitID":"mhq199657"},"content":"    @Override"},{"lineNumber":47,"author":{"gitID":"mhq199657"},"content":"    public String toString() {"},{"lineNumber":48,"author":{"gitID":"mhq199657"},"content":"        return value;"},{"lineNumber":49,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":51,"author":{"gitID":"mhq199657"},"content":"    @Override"},{"lineNumber":52,"author":{"gitID":"mhq199657"},"content":"    public boolean equals(Object other) {"},{"lineNumber":53,"author":{"gitID":"mhq199657"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":54,"author":{"gitID":"mhq199657"},"content":"                || (other instanceof ExpectedGraduationYear // instanceof handles nulls"},{"lineNumber":55,"author":{"gitID":"mhq199657"},"content":"                \u0026\u0026 this.value.equals(((ExpectedGraduationYear) other).value)); // state check"},{"lineNumber":56,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":58,"author":{"gitID":"mhq199657"},"content":"    @Override"},{"lineNumber":59,"author":{"gitID":"mhq199657"},"content":"    public int hashCode() {"},{"lineNumber":60,"author":{"gitID":"mhq199657"},"content":"        return value.hashCode();"},{"lineNumber":61,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":62,"author":{"gitID":"mhq199657"},"content":"}"}],"authorContributionMap":{"mhq199657":58,"-":4}},{"path":"src/main/java/seedu/address/model/person/UniversityContainsSuffixesPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.FindResults;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":" * Tests that a {@code Person}\u0027s {@code University} matches the suffix string given."},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"public class UniversityContainsSuffixesPredicate implements Predicate\u003cPerson\u003e {"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"    private final List\u003cString\u003e suffixKeywords;"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private final String commandPrefix \u003d \"u/\";"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"    public UniversityContainsSuffixesPredicate(List\u003cString\u003e suffixKeywords) {"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"        this.suffixKeywords \u003d suffixKeywords;"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"    public boolean test(Person person) {"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        return suffixKeywords.stream()"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                .anyMatch(suffix -\u003e FindResults.getInstance().containsSuffixIgnoreCase("},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                        person.getUniversity().value, suffix, commandPrefix));"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof UniversityContainsSuffixesPredicate // instanceof handles nulls"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.suffixKeywords.equals(("},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                (UniversityContainsSuffixesPredicate) other).suffixKeywords)); // state check"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":5,"tanhengyeow":30}},{"path":"src/main/java/seedu/address/model/person/AddressContainsPrefixesPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.FindResults;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":" * Tests that a {@code Person}\u0027s {@code Address} matches the prefix string given."},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"public class AddressContainsPrefixesPredicate implements Predicate\u003cPerson\u003e {"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"    private final List\u003cString\u003e prefixKeywords;"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private final String commandPrefix \u003d \"a/\";"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"    public AddressContainsPrefixesPredicate(List\u003cString\u003e prefixKeywords) {"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"        this.prefixKeywords \u003d prefixKeywords;"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"    public boolean test(Person person) {"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        return prefixKeywords.stream()"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                .anyMatch(prefix -\u003e FindResults.getInstance().containsPrefixIgnoreCase("},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                        person.getAddress().value, prefix, commandPrefix));"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof AddressContainsPrefixesPredicate // instanceof handles nulls"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.prefixKeywords.equals(("},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                        (AddressContainsPrefixesPredicate) other).prefixKeywords)); // state check"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":5,"tanhengyeow":30}},{"path":"src/main/java/seedu/address/model/person/PhonePredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"tanhengyeow"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":3,"author":{"gitID":"tanhengyeow"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitID":"tanhengyeow"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.logic.parser.PredicateUtil;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":" * Represents an Phone predicate"},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"public class PhonePredicate implements FieldPredicate {"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private Predicate\u003cPerson\u003e phonePredicate \u003d null;"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"     * Constructs an {@code PhonePredicate}."},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"     * @param substringKeywords stores user argument that matches substring"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"     * @param exactKeywords stores user argument that matches exact keywords"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"     * @param prefixKeywords stores user argument that matches prefix"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"     * @param suffixKeywords stores user argument that matches suffix"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"    public PhonePredicate(ArrayList\u003cString\u003e exactKeywords, ArrayList\u003cString\u003e substringKeywords,"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                          ArrayList\u003cString\u003e prefixKeywords, ArrayList\u003cString\u003e suffixKeywords) {"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"        PhoneContainsKeywordsPredicate phoneContainsKeywordsPredicate \u003d null;"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":"        PhoneContainsSubstringsPredicate phoneContainsSubstringsPredicate \u003d null;"},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        PhoneContainsPrefixesPredicate phoneContainsPrefixesPredicate \u003d null;"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        PhoneContainsSuffixesPredicate phoneContainsSuffixesPredicate \u003d null;"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        if (!exactKeywords.isEmpty()) {"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"            phoneContainsKeywordsPredicate \u003d new PhoneContainsKeywordsPredicate(exactKeywords);"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        if (!substringKeywords.isEmpty()) {"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":"            phoneContainsSubstringsPredicate \u003d new PhoneContainsSubstringsPredicate(substringKeywords);"},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"        if (!prefixKeywords.isEmpty()) {"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":"            phoneContainsPrefixesPredicate \u003d new PhoneContainsPrefixesPredicate(prefixKeywords);"},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        if (!suffixKeywords.isEmpty()) {"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":"            phoneContainsSuffixesPredicate \u003d new PhoneContainsSuffixesPredicate(suffixKeywords);"},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"        if (!exactKeywords.isEmpty() || !substringKeywords.isEmpty()"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"                || !prefixKeywords.isEmpty() || !suffixKeywords.isEmpty()) {"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":"            this.phonePredicate \u003d new PredicateUtil().formOrPredicate(phoneContainsKeywordsPredicate,"},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"                    phoneContainsSubstringsPredicate, phoneContainsPrefixesPredicate,"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"                    phoneContainsSuffixesPredicate);"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":"    public Predicate\u003cPerson\u003e getPredicate() {"},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"        return phonePredicate;"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":"    public String toString() {"},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"        return phonePredicate.toString();"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof PhonePredicate // instanceof handles nulls"},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.phonePredicate.equals(((PhonePredicate) other).phonePredicate)); // state check"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":"    public int hashCode() {"},{"lineNumber":69,"author":{"gitID":"tanhengyeow"},"content":"        return phonePredicate.hashCode();"},{"lineNumber":70,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":71,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":72,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"tanhengyeow":72}},{"path":"src/main/java/seedu/address/model/person/JobAppliedContainsKeywordsPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.FindCommand;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.FindResults;"},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" * Tests that a {@code Person}\u0027s {@code JobApplied} matches any of the keywords given."},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"public class JobAppliedContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private final List\u003cString\u003e keywords;"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"    private final String commandPrefix \u003d \"j/\";"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    public JobAppliedContainsKeywordsPredicate(List\u003cString\u003e keywords) {"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"        this.keywords \u003d keywords;"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"    public boolean test(Person person) {"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"        return keywords.stream()"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                .anyMatch(keyword -\u003e FindResults.getInstance()"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                        .containsWordIgnoreCase(person.getJobApplied().value, keyword, commandPrefix)"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":"                        || keywords.stream()"},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"                        .anyMatch(fuzzyKeyword -\u003e FindResults.getInstance().containsFuzzyMatchIgnoreCase("},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"                                person.getJobApplied().value, fuzzyKeyword, commandPrefix,"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"                                FindCommand.LEVENSHTEIN_DISTANCE_THRESHOLD)));"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof JobAppliedContainsKeywordsPredicate // instanceof handles nulls"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.keywords.equals(((JobAppliedContainsKeywordsPredicate) other).keywords)); // state check"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":6,"tanhengyeow":33}},{"path":"src/main/java/seedu/address/model/person/MajorContainsKeywordsPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.logic.commands.FindCommand;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.FindResults;"},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" * Tests that a {@code Person}\u0027s {@code Major} matches any of the keywords given."},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"public class MajorContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private final List\u003cString\u003e keywords;"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"    private final String commandPrefix \u003d \"m/\";"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    public MajorContainsKeywordsPredicate(List\u003cString\u003e keywords) {"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"        this.keywords \u003d keywords;"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"    public boolean test(Person person) {"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"        return keywords.stream()"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                .anyMatch(keyword -\u003e FindResults.getInstance()"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                        .containsWordIgnoreCase(person.getMajor().value, keyword, commandPrefix)"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":"                        || keywords.stream()"},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"                            .anyMatch(fuzzyKeyword -\u003e FindResults.getInstance().containsFuzzyMatchIgnoreCase("},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"                                person.getMajor().value, fuzzyKeyword, commandPrefix,"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"                                    FindCommand.LEVENSHTEIN_DISTANCE_THRESHOLD)));"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof MajorContainsKeywordsPredicate // instanceof handles nulls"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.keywords.equals(((MajorContainsKeywordsPredicate) other).keywords)); // state check"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":5,"tanhengyeow":34}},{"path":"src/main/java/seedu/address/model/person/Comment.java","lines":[{"lineNumber":1,"author":{"gitID":"mhq199657"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":3,"author":{"gitID":"mhq199657"},"content":"import static java.util.Objects.isNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"Ang-YC"},"content":"import java.util.Objects;"},{"lineNumber":7,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":8,"author":{"gitID":"Ang-YC"},"content":"//@@author Ang-YC"},{"lineNumber":9,"author":{"gitID":"Ang-YC"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"Ang-YC"},"content":" * Represents a Person\u0027s comment in the address book."},{"lineNumber":11,"author":{"gitID":"Ang-YC"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidComment(String)}"},{"lineNumber":12,"author":{"gitID":"Ang-YC"},"content":" */"},{"lineNumber":13,"author":{"gitID":"Ang-YC"},"content":"public class Comment {"},{"lineNumber":14,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":15,"author":{"gitID":"Ang-YC"},"content":"    public static final String MESSAGE_COMMENT_CONSTRAINTS \u003d \"Person comment can take any values\";"},{"lineNumber":16,"author":{"gitID":"Ang-YC"},"content":"    public static final String COMMENT_VALIDATION_REGEX \u003d \".*\";"},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":18,"author":{"gitID":"Ang-YC"},"content":"    public final String value;"},{"lineNumber":19,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":20,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":21,"author":{"gitID":"Ang-YC"},"content":"     * Constructs a {@code Comment}."},{"lineNumber":22,"author":{"gitID":"Ang-YC"},"content":"     *"},{"lineNumber":23,"author":{"gitID":"Ang-YC"},"content":"     * @param comment A valid comment."},{"lineNumber":24,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":25,"author":{"gitID":"Ang-YC"},"content":"    public Comment(String comment) {"},{"lineNumber":26,"author":{"gitID":"Ang-YC"},"content":"        if (isNull(comment)) {"},{"lineNumber":27,"author":{"gitID":"Ang-YC"},"content":"            this.value \u003d null;"},{"lineNumber":28,"author":{"gitID":"Ang-YC"},"content":"        } else {"},{"lineNumber":29,"author":{"gitID":"Ang-YC"},"content":"            checkArgument(isValidComment(comment), MESSAGE_COMMENT_CONSTRAINTS);"},{"lineNumber":30,"author":{"gitID":"Ang-YC"},"content":"            this.value \u003d comment;"},{"lineNumber":31,"author":{"gitID":"Ang-YC"},"content":"        }"},{"lineNumber":32,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":34,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":35,"author":{"gitID":"Ang-YC"},"content":"     * Returns true if a given string is a valid comment."},{"lineNumber":36,"author":{"gitID":"Ang-YC"},"content":"     * By default any string are valid"},{"lineNumber":37,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":38,"author":{"gitID":"Ang-YC"},"content":"    public static boolean isValidComment(String test) {"},{"lineNumber":39,"author":{"gitID":"Ang-YC"},"content":"        return test.matches(COMMENT_VALIDATION_REGEX);"},{"lineNumber":40,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":41,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":42,"author":{"gitID":"Ang-YC"},"content":"    @Override"},{"lineNumber":43,"author":{"gitID":"Ang-YC"},"content":"    public String toString() {"},{"lineNumber":44,"author":{"gitID":"Ang-YC"},"content":"        return value;"},{"lineNumber":45,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":47,"author":{"gitID":"Ang-YC"},"content":"    @Override"},{"lineNumber":48,"author":{"gitID":"Ang-YC"},"content":"    public boolean equals(Object other) {"},{"lineNumber":49,"author":{"gitID":"Ang-YC"},"content":"        return other \u003d\u003d this // Short circuit if same object"},{"lineNumber":50,"author":{"gitID":"Ang-YC"},"content":"                || (other instanceof Comment // instanceof handles nulls"},{"lineNumber":51,"author":{"gitID":"Ang-YC"},"content":"                \u0026\u0026 Objects.equals(this.value, ((Comment) other).value)); // State check"},{"lineNumber":52,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":53,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":54,"author":{"gitID":"Ang-YC"},"content":"    @Override"},{"lineNumber":55,"author":{"gitID":"Ang-YC"},"content":"    public int hashCode() {"},{"lineNumber":56,"author":{"gitID":"Ang-YC"},"content":"        return value.hashCode();"},{"lineNumber":57,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":58,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":59,"author":{"gitID":"Ang-YC"},"content":"}"}],"authorContributionMap":{"mhq199657":3,"-":2,"Ang-YC":54}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.logic.commands.FindCommand;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.FindResults;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given."},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private final List\u003cString\u003e keywords;"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"    private final String commandPrefix \u003d \"n/\";"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"        this.keywords \u003d keywords;"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"    public boolean test(Person person) {"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"        return keywords.stream()"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                .anyMatch(keyword -\u003e FindResults.getInstance()"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                        .containsWordIgnoreCase(person.getName().fullName, keyword, commandPrefix)"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":"                    || keywords.stream()"},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"                        .anyMatch(fuzzyKeyword -\u003e FindResults.getInstance().containsFuzzyMatchIgnoreCase("},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"                                person.getName().fullName, fuzzyKeyword, commandPrefix,"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"                                FindCommand.LEVENSHTEIN_DISTANCE_THRESHOLD)));"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":6,"tanhengyeow":33}},{"path":"src/main/java/seedu/address/model/person/Name.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"-"},"content":" * Represents a Person\u0027s name in the address book."},{"lineNumber":8,"author":{"gitID":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}"},{"lineNumber":9,"author":{"gitID":"-"},"content":" */"},{"lineNumber":10,"author":{"gitID":"-"},"content":"public class Name {"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"    public static final String MESSAGE_NAME_CONSTRAINTS \u003d"},{"lineNumber":13,"author":{"gitID":"-"},"content":"            \"Person names should only contain alphanumeric characters and spaces, and it should not be blank\";"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"    /*"},{"lineNumber":16,"author":{"gitID":"kexiaowen"},"content":"     * The first character of the name must not be a whitespace,"},{"lineNumber":17,"author":{"gitID":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input."},{"lineNumber":18,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":19,"author":{"gitID":"-"},"content":"    public static final String NAME_VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":"    public final String fullName;"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":24,"author":{"gitID":"-"},"content":"     * Constructs a {@code Name}."},{"lineNumber":25,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":26,"author":{"gitID":"-"},"content":"     * @param name A valid name."},{"lineNumber":27,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":28,"author":{"gitID":"-"},"content":"    public Name(String name) {"},{"lineNumber":29,"author":{"gitID":"-"},"content":"        requireNonNull(name);"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_NAME_CONSTRAINTS);"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        this.fullName \u003d name;"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":35,"author":{"gitID":"-"},"content":"     * Returns true if a given string is a valid person name."},{"lineNumber":36,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    public static boolean isValidName(String test) {"},{"lineNumber":38,"author":{"gitID":"-"},"content":"        return test.matches(NAME_VALIDATION_REGEX);"},{"lineNumber":39,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"-"},"content":""},{"lineNumber":41,"author":{"gitID":"-"},"content":""},{"lineNumber":42,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":43,"author":{"gitID":"-"},"content":"    public String toString() {"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        return fullName;"},{"lineNumber":45,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"-"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":48,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":50,"author":{"gitID":"-"},"content":"                || (other instanceof Name // instanceof handles nulls"},{"lineNumber":51,"author":{"gitID":"-"},"content":"                \u0026\u0026 this.fullName.equals(((Name) other).fullName)); // state check"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    public int hashCode() {"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        return fullName.hashCode();"},{"lineNumber":57,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"kexiaowen":1,"-":58}},{"path":"src/main/java/seedu/address/model/person/PhoneContainsKeywordsPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.logic.commands.FindCommand;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.FindResults;"},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" * Tests that a {@code Person}\u0027s {@code Phone} matches any of the keywords given."},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"public class PhoneContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private final List\u003cString\u003e keywords;"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"    private final String commandPrefix \u003d \"p/\";"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    public PhoneContainsKeywordsPredicate(List\u003cString\u003e keywords) {"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"        this.keywords \u003d keywords;"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"    public boolean test(Person person) {"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"        return keywords.stream()"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                .anyMatch(keyword -\u003e FindResults.getInstance()"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                        .containsWordIgnoreCase(person.getPhone().value, keyword, commandPrefix)"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":"                        || keywords.stream()"},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"                            .anyMatch(fuzzyKeyword -\u003e FindResults.getInstance().containsFuzzyMatchIgnoreCase("},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"                                person.getPhone().value, fuzzyKeyword, commandPrefix,"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"                                    FindCommand.LEVENSHTEIN_DISTANCE_THRESHOLD)));"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof PhoneContainsKeywordsPredicate // instanceof handles nulls"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.keywords.equals(((PhoneContainsKeywordsPredicate) other).keywords)); // state check"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":5,"tanhengyeow":34}},{"path":"src/main/java/seedu/address/model/person/EmailContainsSuffixesPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.FindResults;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":" * Tests that a {@code Person}\u0027s {@code Email} matches the suffix string given."},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"public class EmailContainsSuffixesPredicate implements Predicate\u003cPerson\u003e {"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"    private final List\u003cString\u003e suffixKeywords;"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private final String commandPrefix \u003d \"e/\";"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"    public EmailContainsSuffixesPredicate(List\u003cString\u003e suffixKeywords) {"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"        this.suffixKeywords \u003d suffixKeywords;"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"    public boolean test(Person person) {"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        return suffixKeywords.stream()"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                .anyMatch(suffix -\u003e FindResults.getInstance().containsSuffixIgnoreCase("},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                        person.getEmail().value, suffix, commandPrefix));"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof EmailContainsSuffixesPredicate // instanceof handles nulls"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.suffixKeywords.equals(((EmailContainsSuffixesPredicate) other).suffixKeywords)); // state check"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":5,"tanhengyeow":29}},{"path":"src/main/java/seedu/address/model/person/Rating.java","lines":[{"lineNumber":1,"author":{"gitID":"kexiaowen"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"kexiaowen"},"content":"import java.util.Objects;"},{"lineNumber":6,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":7,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.commons.util.DoubleUtil;"},{"lineNumber":8,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":9,"author":{"gitID":"kexiaowen"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"kexiaowen"},"content":" * Represents a candidate\u0027s rating after an interview."},{"lineNumber":11,"author":{"gitID":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable."},{"lineNumber":12,"author":{"gitID":"-"},"content":" */"},{"lineNumber":13,"author":{"gitID":"kexiaowen"},"content":"public class Rating {"},{"lineNumber":14,"author":{"gitID":"kexiaowen"},"content":"    public static final String MESSAGE_RATING_CONSTRAINTS \u003d"},{"lineNumber":15,"author":{"gitID":"kexiaowen"},"content":"            \"The scores should be numbers between 1 to 5.\";"},{"lineNumber":16,"author":{"gitID":"kexiaowen"},"content":"    public static final double DEFAULT_SCORE \u003d -1;"},{"lineNumber":17,"author":{"gitID":"kexiaowen"},"content":"    public static final double MAXIMUM_SCORE \u003d 5;"},{"lineNumber":18,"author":{"gitID":"kexiaowen"},"content":"    public static final double MINIMUM_SCORE \u003d 1;"},{"lineNumber":19,"author":{"gitID":"kexiaowen"},"content":"    private static final double NUMBER_OF_SCORES \u003d 4.0;"},{"lineNumber":20,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":21,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":22,"author":{"gitID":"kexiaowen"},"content":"    public final double technicalSkillsScore;"},{"lineNumber":23,"author":{"gitID":"kexiaowen"},"content":"    public final double communicationSkillsScore;"},{"lineNumber":24,"author":{"gitID":"kexiaowen"},"content":"    public final double problemSolvingSkillsScore;"},{"lineNumber":25,"author":{"gitID":"kexiaowen"},"content":"    public final double experienceScore;"},{"lineNumber":26,"author":{"gitID":"kexiaowen"},"content":"    public final double overallScore;"},{"lineNumber":27,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":28,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":29,"author":{"gitID":"kexiaowen"},"content":"     * Constructs a {@code Rating}."},{"lineNumber":30,"author":{"gitID":"kexiaowen"},"content":"     * @param technicalSkillsScore A valid technical skills score."},{"lineNumber":31,"author":{"gitID":"kexiaowen"},"content":"     * @param communicationSkillsScore A valid communications skills score."},{"lineNumber":32,"author":{"gitID":"kexiaowen"},"content":"     * @param problemSolvingSkillsScore A valid problem solving skills score."},{"lineNumber":33,"author":{"gitID":"kexiaowen"},"content":"     * @param experienceScore A valid experience score."},{"lineNumber":34,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":35,"author":{"gitID":"kexiaowen"},"content":"    public Rating(double technicalSkillsScore, double communicationSkillsScore, double problemSolvingSkillsScore,"},{"lineNumber":36,"author":{"gitID":"kexiaowen"},"content":"                  double experienceScore) {"},{"lineNumber":37,"author":{"gitID":"kexiaowen"},"content":"        requireAllNonNull(technicalSkillsScore, communicationSkillsScore, problemSolvingSkillsScore,"},{"lineNumber":38,"author":{"gitID":"kexiaowen"},"content":"                experienceScore);"},{"lineNumber":39,"author":{"gitID":"kexiaowen"},"content":"        this.technicalSkillsScore \u003d technicalSkillsScore;"},{"lineNumber":40,"author":{"gitID":"kexiaowen"},"content":"        this.communicationSkillsScore \u003d communicationSkillsScore;"},{"lineNumber":41,"author":{"gitID":"kexiaowen"},"content":"        this.problemSolvingSkillsScore \u003d problemSolvingSkillsScore;"},{"lineNumber":42,"author":{"gitID":"kexiaowen"},"content":"        this.experienceScore \u003d experienceScore;"},{"lineNumber":43,"author":{"gitID":"kexiaowen"},"content":"        this.overallScore \u003d calculateOverallScore(this.technicalSkillsScore,"},{"lineNumber":44,"author":{"gitID":"kexiaowen"},"content":"                this.communicationSkillsScore, this.problemSolvingSkillsScore, this.experienceScore);"},{"lineNumber":45,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":47,"author":{"gitID":"kexiaowen"},"content":"    public double getTechnicalSkillsScore() {"},{"lineNumber":48,"author":{"gitID":"kexiaowen"},"content":"        return technicalSkillsScore;"},{"lineNumber":49,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":51,"author":{"gitID":"kexiaowen"},"content":"    public double getCommunicationSkillsScore() {"},{"lineNumber":52,"author":{"gitID":"kexiaowen"},"content":"        return communicationSkillsScore;"},{"lineNumber":53,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":54,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":55,"author":{"gitID":"kexiaowen"},"content":"    public double getProblemSolvingSkillsScore() {"},{"lineNumber":56,"author":{"gitID":"kexiaowen"},"content":"        return problemSolvingSkillsScore;"},{"lineNumber":57,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":58,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":59,"author":{"gitID":"kexiaowen"},"content":"    public double getExperienceScore() {"},{"lineNumber":60,"author":{"gitID":"kexiaowen"},"content":"        return experienceScore;"},{"lineNumber":61,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":62,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":63,"author":{"gitID":"kexiaowen"},"content":"    public double getOverallScore() {"},{"lineNumber":64,"author":{"gitID":"kexiaowen"},"content":"        return overallScore;"},{"lineNumber":65,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":66,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":67,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":68,"author":{"gitID":"kexiaowen"},"content":"     * Returns the average of {@code technicalSkillsScore}, {@code communicationSkillsScore},"},{"lineNumber":69,"author":{"gitID":"kexiaowen"},"content":"     * {@code problemSolvingSkillsScore} and {@code experienceScore}, rounded to two decimal places"},{"lineNumber":70,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":71,"author":{"gitID":"kexiaowen"},"content":"    public static double calculateOverallScore(double technicalSkillsScore, double communicationSkillsScore,"},{"lineNumber":72,"author":{"gitID":"kexiaowen"},"content":"                                         double problemSolvingSkillsScore, double experienceScore) {"},{"lineNumber":73,"author":{"gitID":"kexiaowen"},"content":"        return DoubleUtil.roundToTwoDecimalPlaces((technicalSkillsScore + communicationSkillsScore"},{"lineNumber":74,"author":{"gitID":"kexiaowen"},"content":"                + problemSolvingSkillsScore + experienceScore) / NUMBER_OF_SCORES);"},{"lineNumber":75,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":76,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":77,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":78,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":79,"author":{"gitID":"-"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":80,"author":{"gitID":"-"},"content":"            return true;"},{"lineNumber":81,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":82,"author":{"gitID":"-"},"content":""},{"lineNumber":83,"author":{"gitID":"kexiaowen"},"content":"        if (!(other instanceof Rating)) {"},{"lineNumber":84,"author":{"gitID":"kexiaowen"},"content":"            return false;"},{"lineNumber":85,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":86,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":87,"author":{"gitID":"kexiaowen"},"content":"        Rating otherRating \u003d (Rating) other;"},{"lineNumber":88,"author":{"gitID":"kexiaowen"},"content":"        return otherRating.getTechnicalSkillsScore() \u003d\u003d this.getTechnicalSkillsScore()"},{"lineNumber":89,"author":{"gitID":"kexiaowen"},"content":"                \u0026\u0026 otherRating.getCommunicationSkillsScore() \u003d\u003d this.getCommunicationSkillsScore()"},{"lineNumber":90,"author":{"gitID":"kexiaowen"},"content":"                \u0026\u0026 otherRating.getProblemSolvingSkillsScore() \u003d\u003d this.getProblemSolvingSkillsScore()"},{"lineNumber":91,"author":{"gitID":"kexiaowen"},"content":"                \u0026\u0026 otherRating.getExperienceScore() \u003d\u003d this.getExperienceScore();"},{"lineNumber":92,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":93,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":94,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":95,"author":{"gitID":"kexiaowen"},"content":"     * Returns true if a given double is a valid score."},{"lineNumber":96,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":97,"author":{"gitID":"kexiaowen"},"content":"    public static boolean isValidScore(Double test) {"},{"lineNumber":98,"author":{"gitID":"kexiaowen"},"content":"        return test \u003e\u003d MINIMUM_SCORE \u0026\u0026 test \u003c\u003d MAXIMUM_SCORE;"},{"lineNumber":99,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":100,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":101,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":102,"author":{"gitID":"kexiaowen"},"content":"     * Returns true if a given double is a default score."},{"lineNumber":103,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":104,"author":{"gitID":"kexiaowen"},"content":"    public static boolean isDefaultScore(Double test) {"},{"lineNumber":105,"author":{"gitID":"kexiaowen"},"content":"        return test \u003d\u003d DEFAULT_SCORE;"},{"lineNumber":106,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":107,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":108,"author":{"gitID":"kexiaowen"},"content":"    public static boolean isValidOrDefaultScore(Double test) {"},{"lineNumber":109,"author":{"gitID":"kexiaowen"},"content":"        return isValidScore(test) || isDefaultScore(test);"},{"lineNumber":110,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":111,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":112,"author":{"gitID":"kexiaowen"},"content":"    @Override"},{"lineNumber":113,"author":{"gitID":"kexiaowen"},"content":"    public int hashCode() {"},{"lineNumber":114,"author":{"gitID":"kexiaowen"},"content":"        return Objects.hash(technicalSkillsScore, communicationSkillsScore, problemSolvingSkillsScore,"},{"lineNumber":115,"author":{"gitID":"kexiaowen"},"content":"                experienceScore);"},{"lineNumber":116,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":117,"author":{"gitID":"kexiaowen"},"content":"}"}],"authorContributionMap":{"kexiaowen":107,"-":10}},{"path":"src/main/java/seedu/address/model/person/PhoneContainsSuffixesPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.FindResults;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":" * Tests that a {@code Person}\u0027s {@code Phone} matches the suffix string given."},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"public class PhoneContainsSuffixesPredicate implements Predicate\u003cPerson\u003e {"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"    private final List\u003cString\u003e suffixKeywords;"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private final String commandPrefix \u003d \"p/\";"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"    public PhoneContainsSuffixesPredicate(List\u003cString\u003e suffixKeywords) {"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"        this.suffixKeywords \u003d suffixKeywords;"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"    public boolean test(Person person) {"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        return suffixKeywords.stream()"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                .anyMatch(suffix -\u003e FindResults.getInstance().containsSuffixIgnoreCase("},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                        person.getPhone().value, suffix, commandPrefix));"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof PhoneContainsSuffixesPredicate // instanceof handles nulls"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.suffixKeywords.equals(((PhoneContainsSuffixesPredicate) other).suffixKeywords)); // state check"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":5,"tanhengyeow":29}},{"path":"src/main/java/seedu/address/model/person/NameContainsSuffixesPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.FindResults;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches the suffix string given."},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"public class NameContainsSuffixesPredicate implements Predicate\u003cPerson\u003e {"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"    private final List\u003cString\u003e suffixKeywords;"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private final String commandPrefix \u003d \"n/\";"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"    public NameContainsSuffixesPredicate(List\u003cString\u003e suffixKeywords) {"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"        this.suffixKeywords \u003d suffixKeywords;"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"    public boolean test(Person person) {"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        return suffixKeywords.stream()"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                .anyMatch(suffix -\u003e FindResults.getInstance().containsSuffixIgnoreCase("},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                        person.getName().fullName, suffix, commandPrefix));"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof NameContainsSuffixesPredicate // instanceof handles nulls"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.suffixKeywords.equals(((NameContainsSuffixesPredicate) other).suffixKeywords)); // state check"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":5,"tanhengyeow":29}},{"path":"src/main/java/seedu/address/model/person/EmailContainsKeywordsPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.logic.commands.FindCommand;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.FindResults;"},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" * Tests that a {@code Person}\u0027s {@code Email} matches any of the keywords given."},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"public class EmailContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private final List\u003cString\u003e keywords;"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"    private final String commandPrefix \u003d \"e/\";"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    public EmailContainsKeywordsPredicate(List\u003cString\u003e keywords) {"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"        this.keywords \u003d keywords;"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"    public boolean test(Person person) {"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"        return keywords.stream()"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                .anyMatch(keyword -\u003e FindResults.getInstance()"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                        .containsWordIgnoreCase(person.getEmail().value, keyword, commandPrefix)"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":"                    || keywords.stream()"},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"                        .anyMatch(fuzzyKeyword -\u003e FindResults.getInstance().containsFuzzyMatchIgnoreCase("},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"                                person.getEmail().value, fuzzyKeyword, commandPrefix,"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"                                FindCommand.LEVENSHTEIN_DISTANCE_THRESHOLD)));"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof EmailContainsKeywordsPredicate // instanceof handles nulls"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.keywords.equals(((EmailContainsKeywordsPredicate) other).keywords)); // state check"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":5,"tanhengyeow":34}},{"path":"src/main/java/seedu/address/model/person/CommentContainsPrefixesPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.FindResults;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":" * Tests that a {@code Person}\u0027s {@code Comment} matches the prefix string given."},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"public class CommentContainsPrefixesPredicate implements Predicate\u003cPerson\u003e {"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"    private final List\u003cString\u003e prefixKeywords;"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private final String commandPrefix \u003d \"c/\";"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"    public CommentContainsPrefixesPredicate(List\u003cString\u003e prefixKeywords) {"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"        this.prefixKeywords \u003d prefixKeywords;"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"    public boolean test(Person person) {"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        return prefixKeywords.stream()"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                .anyMatch(prefix -\u003e FindResults.getInstance().containsPrefixIgnoreCase("},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                        person.getComment().value, prefix, commandPrefix));"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof CommentContainsPrefixesPredicate // instanceof handles nulls"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.prefixKeywords.equals(("},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                (CommentContainsPrefixesPredicate) other).prefixKeywords)); // state check"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":5,"tanhengyeow":30}},{"path":"src/main/java/seedu/address/model/person/AllPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"tanhengyeow"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":3,"author":{"gitID":"tanhengyeow"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitID":"tanhengyeow"},"content":"import java.util.Objects;"},{"lineNumber":5,"author":{"gitID":"tanhengyeow"},"content":"import java.util.logging.Logger;"},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" * Represents all predicates to form {@code Predicate\u003cPerson\u003e}"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"public class AllPredicate {"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(this.getClass());"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    private NamePredicate namePredicate;"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    private PhonePredicate phonePredicate;"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"    private EmailPredicate emailPredicate;"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"    private AddressPredicate addressPredicate;"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"    private UniversityPredicate universityPredicate;"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"    private MajorPredicate majorPredicate;"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"    private JobAppliedPredicate jobAppliedPredicate;"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"    private CommentPredicate commentPredicate;"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"     * Default constructor for no arguments"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"    public AllPredicate() {"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        logger.info(\"Parsing selected predicates in find command\");"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        this.namePredicate \u003d new NamePredicate(new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(),"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"        this.phonePredicate \u003d new PhonePredicate(new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(),"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":"                new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());"},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        this.emailPredicate \u003d new EmailPredicate(new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(),"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"                new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":"        this.addressPredicate \u003d new AddressPredicate(new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(),"},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"                new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        this.universityPredicate \u003d new UniversityPredicate(new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(),"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":"                new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());"},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        this.majorPredicate \u003d new MajorPredicate(new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(),"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"                new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"        this.jobAppliedPredicate \u003d new JobAppliedPredicate(new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(),"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":"                new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());"},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"        this.commentPredicate \u003d new CommentPredicate(new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(),"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"                new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"     * Constructor to initialize all predicates"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":"    public AllPredicate(ArrayList\u003cString\u003e exactKeywords, ArrayList\u003cString\u003e substringKeywords,"},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"                        ArrayList\u003cString\u003e prefixKeywords, ArrayList\u003cString\u003e suffixKeywords) {"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"        logger.info(\"Parsing all predicates in find command\");"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"        this.namePredicate \u003d new NamePredicate(exactKeywords, substringKeywords,"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"                prefixKeywords, suffixKeywords);"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":"        this.phonePredicate \u003d new PhonePredicate(exactKeywords, substringKeywords,"},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"                prefixKeywords, suffixKeywords);"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"        this.emailPredicate \u003d new EmailPredicate(exactKeywords, substringKeywords,"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":"                prefixKeywords, suffixKeywords);"},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"        this.addressPredicate \u003d new AddressPredicate(exactKeywords, substringKeywords,"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":"                prefixKeywords, suffixKeywords);"},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"        this.universityPredicate \u003d new UniversityPredicate(exactKeywords, substringKeywords,"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":"                prefixKeywords, suffixKeywords);"},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"        this.majorPredicate \u003d new MajorPredicate(exactKeywords, substringKeywords,"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"                prefixKeywords, suffixKeywords);"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"        this.jobAppliedPredicate \u003d new JobAppliedPredicate(exactKeywords, substringKeywords,"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"                prefixKeywords, suffixKeywords);"},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":"        this.commentPredicate \u003d new CommentPredicate(exactKeywords, substringKeywords,"},{"lineNumber":69,"author":{"gitID":"tanhengyeow"},"content":"                prefixKeywords, suffixKeywords);"},{"lineNumber":70,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":71,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":72,"author":{"gitID":"tanhengyeow"},"content":"    public NamePredicate getNamePredicate() {"},{"lineNumber":73,"author":{"gitID":"tanhengyeow"},"content":"        return namePredicate;"},{"lineNumber":74,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":75,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":76,"author":{"gitID":"tanhengyeow"},"content":"    public void setNamePredicate(ArrayList\u003cString\u003e exactKeywords,"},{"lineNumber":77,"author":{"gitID":"tanhengyeow"},"content":"                                 ArrayList\u003cString\u003e substringKeywords,"},{"lineNumber":78,"author":{"gitID":"tanhengyeow"},"content":"                                 ArrayList\u003cString\u003e prefixKeywords,"},{"lineNumber":79,"author":{"gitID":"tanhengyeow"},"content":"                                 ArrayList\u003cString\u003e suffixKeywords) {"},{"lineNumber":80,"author":{"gitID":"tanhengyeow"},"content":"        this.namePredicate \u003d new NamePredicate(exactKeywords, substringKeywords,"},{"lineNumber":81,"author":{"gitID":"tanhengyeow"},"content":"                prefixKeywords, suffixKeywords);"},{"lineNumber":82,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":83,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":84,"author":{"gitID":"tanhengyeow"},"content":"    public PhonePredicate getPhonePredicate() {"},{"lineNumber":85,"author":{"gitID":"tanhengyeow"},"content":"        return phonePredicate;"},{"lineNumber":86,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":87,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":88,"author":{"gitID":"tanhengyeow"},"content":"    public void setPhonePredicate(ArrayList\u003cString\u003e exactKeywords,"},{"lineNumber":89,"author":{"gitID":"tanhengyeow"},"content":"                                  ArrayList\u003cString\u003e substringKeywords,"},{"lineNumber":90,"author":{"gitID":"tanhengyeow"},"content":"                                  ArrayList\u003cString\u003e prefixKeywords,"},{"lineNumber":91,"author":{"gitID":"tanhengyeow"},"content":"                                  ArrayList\u003cString\u003e suffixKeywords) {"},{"lineNumber":92,"author":{"gitID":"tanhengyeow"},"content":"        this.phonePredicate \u003d new PhonePredicate(exactKeywords, substringKeywords,"},{"lineNumber":93,"author":{"gitID":"tanhengyeow"},"content":"                prefixKeywords, suffixKeywords);"},{"lineNumber":94,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":95,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":96,"author":{"gitID":"tanhengyeow"},"content":"    public EmailPredicate getEmailPredicate() {"},{"lineNumber":97,"author":{"gitID":"tanhengyeow"},"content":"        return emailPredicate;"},{"lineNumber":98,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":99,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":100,"author":{"gitID":"tanhengyeow"},"content":"    public void setEmailPredicate(ArrayList\u003cString\u003e exactKeywords,"},{"lineNumber":101,"author":{"gitID":"tanhengyeow"},"content":"                                  ArrayList\u003cString\u003e substringKeywords,"},{"lineNumber":102,"author":{"gitID":"tanhengyeow"},"content":"                                  ArrayList\u003cString\u003e prefixKeywords,"},{"lineNumber":103,"author":{"gitID":"tanhengyeow"},"content":"                                  ArrayList\u003cString\u003e suffixKeywords) {"},{"lineNumber":104,"author":{"gitID":"tanhengyeow"},"content":"        this.emailPredicate \u003d new EmailPredicate(exactKeywords, substringKeywords,"},{"lineNumber":105,"author":{"gitID":"tanhengyeow"},"content":"                prefixKeywords, suffixKeywords);"},{"lineNumber":106,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":107,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":108,"author":{"gitID":"tanhengyeow"},"content":"    public AddressPredicate getAddressPredicate() {"},{"lineNumber":109,"author":{"gitID":"tanhengyeow"},"content":"        return addressPredicate;"},{"lineNumber":110,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":111,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":112,"author":{"gitID":"tanhengyeow"},"content":"    public void setAddressPredicate(ArrayList\u003cString\u003e exactKeywords,"},{"lineNumber":113,"author":{"gitID":"tanhengyeow"},"content":"                                    ArrayList\u003cString\u003e substringKeywords,"},{"lineNumber":114,"author":{"gitID":"tanhengyeow"},"content":"                                    ArrayList\u003cString\u003e prefixKeywords,"},{"lineNumber":115,"author":{"gitID":"tanhengyeow"},"content":"                                    ArrayList\u003cString\u003e suffixKeywords) {"},{"lineNumber":116,"author":{"gitID":"tanhengyeow"},"content":"        this.addressPredicate \u003d new AddressPredicate(exactKeywords, substringKeywords,"},{"lineNumber":117,"author":{"gitID":"tanhengyeow"},"content":"                prefixKeywords, suffixKeywords);"},{"lineNumber":118,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":119,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":120,"author":{"gitID":"tanhengyeow"},"content":"    public UniversityPredicate getUniversityPredicate() {"},{"lineNumber":121,"author":{"gitID":"tanhengyeow"},"content":"        return universityPredicate;"},{"lineNumber":122,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":123,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":124,"author":{"gitID":"tanhengyeow"},"content":"    public void setUniversityPredicate(ArrayList\u003cString\u003e exactKeywords,"},{"lineNumber":125,"author":{"gitID":"tanhengyeow"},"content":"                                    ArrayList\u003cString\u003e substringKeywords,"},{"lineNumber":126,"author":{"gitID":"tanhengyeow"},"content":"                                    ArrayList\u003cString\u003e prefixKeywords,"},{"lineNumber":127,"author":{"gitID":"tanhengyeow"},"content":"                                    ArrayList\u003cString\u003e suffixKeywords) {"},{"lineNumber":128,"author":{"gitID":"tanhengyeow"},"content":"        this.universityPredicate \u003d new UniversityPredicate(exactKeywords, substringKeywords,"},{"lineNumber":129,"author":{"gitID":"tanhengyeow"},"content":"                prefixKeywords, suffixKeywords);"},{"lineNumber":130,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":131,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":132,"author":{"gitID":"tanhengyeow"},"content":"    public MajorPredicate getMajorPredicate() {"},{"lineNumber":133,"author":{"gitID":"tanhengyeow"},"content":"        return majorPredicate;"},{"lineNumber":134,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":135,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":136,"author":{"gitID":"tanhengyeow"},"content":"    public void setMajorPredicate(ArrayList\u003cString\u003e exactKeywords,"},{"lineNumber":137,"author":{"gitID":"tanhengyeow"},"content":"                                  ArrayList\u003cString\u003e substringKeywords,"},{"lineNumber":138,"author":{"gitID":"tanhengyeow"},"content":"                                  ArrayList\u003cString\u003e prefixKeywords,"},{"lineNumber":139,"author":{"gitID":"tanhengyeow"},"content":"                                  ArrayList\u003cString\u003e suffixKeywords) {"},{"lineNumber":140,"author":{"gitID":"tanhengyeow"},"content":"        this.majorPredicate \u003d new MajorPredicate(exactKeywords, substringKeywords,"},{"lineNumber":141,"author":{"gitID":"tanhengyeow"},"content":"                prefixKeywords, suffixKeywords);"},{"lineNumber":142,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":143,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":144,"author":{"gitID":"tanhengyeow"},"content":"    public JobAppliedPredicate getJobAppliedPredicate() {"},{"lineNumber":145,"author":{"gitID":"tanhengyeow"},"content":"        return jobAppliedPredicate;"},{"lineNumber":146,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":147,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":148,"author":{"gitID":"tanhengyeow"},"content":"    public void setJobAppliedPredicate(ArrayList\u003cString\u003e exactKeywords,"},{"lineNumber":149,"author":{"gitID":"tanhengyeow"},"content":"                                       ArrayList\u003cString\u003e substringKeywords,"},{"lineNumber":150,"author":{"gitID":"tanhengyeow"},"content":"                                       ArrayList\u003cString\u003e prefixKeywords,"},{"lineNumber":151,"author":{"gitID":"tanhengyeow"},"content":"                                       ArrayList\u003cString\u003e suffixKeywords) {"},{"lineNumber":152,"author":{"gitID":"tanhengyeow"},"content":"        this.jobAppliedPredicate \u003d new JobAppliedPredicate(exactKeywords, substringKeywords,"},{"lineNumber":153,"author":{"gitID":"tanhengyeow"},"content":"                prefixKeywords, suffixKeywords);"},{"lineNumber":154,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":155,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":156,"author":{"gitID":"tanhengyeow"},"content":"    public CommentPredicate getCommentPredicate() {"},{"lineNumber":157,"author":{"gitID":"tanhengyeow"},"content":"        return commentPredicate;"},{"lineNumber":158,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":159,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":160,"author":{"gitID":"tanhengyeow"},"content":"    public void setCommentPredicate(ArrayList\u003cString\u003e exactKeywords,"},{"lineNumber":161,"author":{"gitID":"tanhengyeow"},"content":"                                       ArrayList\u003cString\u003e substringKeywords,"},{"lineNumber":162,"author":{"gitID":"tanhengyeow"},"content":"                                       ArrayList\u003cString\u003e prefixKeywords,"},{"lineNumber":163,"author":{"gitID":"tanhengyeow"},"content":"                                       ArrayList\u003cString\u003e suffixKeywords) {"},{"lineNumber":164,"author":{"gitID":"tanhengyeow"},"content":"        this.commentPredicate \u003d new CommentPredicate(exactKeywords, substringKeywords,"},{"lineNumber":165,"author":{"gitID":"tanhengyeow"},"content":"                prefixKeywords, suffixKeywords);"},{"lineNumber":166,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":167,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":168,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":169,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":170,"author":{"gitID":"tanhengyeow"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":171,"author":{"gitID":"tanhengyeow"},"content":"            return true;"},{"lineNumber":172,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":173,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":174,"author":{"gitID":"tanhengyeow"},"content":"        if (!(other instanceof AllPredicate)) {"},{"lineNumber":175,"author":{"gitID":"tanhengyeow"},"content":"            return false;"},{"lineNumber":176,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":177,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":178,"author":{"gitID":"tanhengyeow"},"content":"        AllPredicate otherPerson \u003d (AllPredicate) other;"},{"lineNumber":179,"author":{"gitID":"tanhengyeow"},"content":"        return otherPerson.getNamePredicate().equals(this.getNamePredicate())"},{"lineNumber":180,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 otherPerson.getPhonePredicate().equals(this.getPhonePredicate())"},{"lineNumber":181,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 otherPerson.getEmailPredicate().equals(this.getEmailPredicate())"},{"lineNumber":182,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 otherPerson.getAddressPredicate().equals(this.getAddressPredicate())"},{"lineNumber":183,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 otherPerson.getUniversityPredicate().equals(this.getUniversityPredicate())"},{"lineNumber":184,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 otherPerson.getMajorPredicate().equals(this.getMajorPredicate())"},{"lineNumber":185,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 otherPerson.getJobAppliedPredicate().equals(this.getJobAppliedPredicate())"},{"lineNumber":186,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 otherPerson.getCommentPredicate().equals(this.getCommentPredicate());"},{"lineNumber":187,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":188,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":189,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":190,"author":{"gitID":"tanhengyeow"},"content":"    public int hashCode() {"},{"lineNumber":191,"author":{"gitID":"tanhengyeow"},"content":"        // use this method for custom fields hashing instead of implementing your own"},{"lineNumber":192,"author":{"gitID":"tanhengyeow"},"content":"        return Objects.hash(namePredicate, phonePredicate, emailPredicate,"},{"lineNumber":193,"author":{"gitID":"tanhengyeow"},"content":"                addressPredicate, universityPredicate, majorPredicate,"},{"lineNumber":194,"author":{"gitID":"tanhengyeow"},"content":"                jobAppliedPredicate, commentPredicate);"},{"lineNumber":195,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":196,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"tanhengyeow":196}},{"path":"src/main/java/seedu/address/model/person/NameContainsSubstringsPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.FindResults;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches the substring given."},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"public class NameContainsSubstringsPredicate implements Predicate\u003cPerson\u003e {"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"    private final List\u003cString\u003e substringKeywords;"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private final String commandPrefix \u003d \"n/\";"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"    public NameContainsSubstringsPredicate(List\u003cString\u003e substringKeywords) {"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"        this.substringKeywords \u003d substringKeywords;"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"    public boolean test(Person person) {"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        return substringKeywords.stream()"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                .anyMatch(substring -\u003e FindResults.getInstance().containsSubstringIgnoreCase("},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                        person.getName().fullName, substring, commandPrefix));"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof NameContainsSubstringsPredicate // instanceof handles nulls"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.substringKeywords.equals(("},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                        (NameContainsSubstringsPredicate) other).substringKeywords)); // state check"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":5,"tanhengyeow":30}},{"path":"src/main/java/seedu/address/model/person/MajorContainsSuffixesPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.FindResults;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":" * Tests that a {@code Person}\u0027s {@code Major} matches the suffix string given."},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"public class MajorContainsSuffixesPredicate implements Predicate\u003cPerson\u003e {"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"    private final List\u003cString\u003e suffixKeywords;"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private final String commandPrefix \u003d \"m/\";"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"    public MajorContainsSuffixesPredicate(List\u003cString\u003e suffixKeywords) {"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"        this.suffixKeywords \u003d suffixKeywords;"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"    public boolean test(Person person) {"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        return suffixKeywords.stream()"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                .anyMatch(suffix -\u003e FindResults.getInstance().containsSuffixIgnoreCase("},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                        person.getMajor().value, suffix, commandPrefix));"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof MajorContainsSuffixesPredicate // instanceof handles nulls"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.suffixKeywords.equals(((MajorContainsSuffixesPredicate) other).suffixKeywords)); // state check"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":5,"tanhengyeow":29}},{"path":"src/main/java/seedu/address/model/person/RatingInKeywordsRangePredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"mhq199657"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":3,"author":{"gitID":"mhq199657"},"content":"import java.util.function.Predicate;"},{"lineNumber":4,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":5,"author":{"gitID":"mhq199657"},"content":"import seedu.address.logic.parser.FilterRange;"},{"lineNumber":6,"author":{"gitID":"mhq199657"},"content":"//@@author mhq199657"},{"lineNumber":7,"author":{"gitID":"mhq199657"},"content":"/**"},{"lineNumber":8,"author":{"gitID":"mhq199657"},"content":" * A Predicate testing whether a person has his/her rating in the keywords range"},{"lineNumber":9,"author":{"gitID":"mhq199657"},"content":" */"},{"lineNumber":10,"author":{"gitID":"mhq199657"},"content":"public class RatingInKeywordsRangePredicate implements Predicate\u003cPerson\u003e {"},{"lineNumber":11,"author":{"gitID":"mhq199657"},"content":"    private final double low;"},{"lineNumber":12,"author":{"gitID":"mhq199657"},"content":"    private final double high;"},{"lineNumber":13,"author":{"gitID":"mhq199657"},"content":"    public RatingInKeywordsRangePredicate(Rating low, Rating high) {"},{"lineNumber":14,"author":{"gitID":"mhq199657"},"content":"        this.low \u003d low.getOverallScore();"},{"lineNumber":15,"author":{"gitID":"mhq199657"},"content":"        this.high \u003d high.getOverallScore();"},{"lineNumber":16,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":17,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":18,"author":{"gitID":"mhq199657"},"content":"    public RatingInKeywordsRangePredicate(FilterRange\u003cRating\u003e filterRange) {"},{"lineNumber":19,"author":{"gitID":"mhq199657"},"content":"        if (filterRange.isRange()) {"},{"lineNumber":20,"author":{"gitID":"mhq199657"},"content":"            this.low \u003d filterRange.getLowValue().getOverallScore();"},{"lineNumber":21,"author":{"gitID":"mhq199657"},"content":"            this.high \u003d filterRange.getHighValue().getOverallScore();"},{"lineNumber":22,"author":{"gitID":"mhq199657"},"content":"        } else {"},{"lineNumber":23,"author":{"gitID":"mhq199657"},"content":"            this.low \u003d filterRange.getExactValue().getOverallScore();"},{"lineNumber":24,"author":{"gitID":"mhq199657"},"content":"            this.high \u003d filterRange.getExactValue().getOverallScore();"},{"lineNumber":25,"author":{"gitID":"mhq199657"},"content":"        }"},{"lineNumber":26,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":28,"author":{"gitID":"mhq199657"},"content":"    @Override"},{"lineNumber":29,"author":{"gitID":"mhq199657"},"content":"    public boolean test(Person person) {"},{"lineNumber":30,"author":{"gitID":"mhq199657"},"content":"        return person.getRating().getOverallScore() \u003c\u003d high"},{"lineNumber":31,"author":{"gitID":"mhq199657"},"content":"                \u0026\u0026 person.getRating().getOverallScore() \u003e\u003d low;"},{"lineNumber":32,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":34,"author":{"gitID":"mhq199657"},"content":"    @Override"},{"lineNumber":35,"author":{"gitID":"mhq199657"},"content":"    public boolean equals(Object other) {"},{"lineNumber":36,"author":{"gitID":"mhq199657"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":37,"author":{"gitID":"mhq199657"},"content":"                || (other instanceof RatingInKeywordsRangePredicate // instanceof handles nulls"},{"lineNumber":38,"author":{"gitID":"mhq199657"},"content":"                \u0026\u0026 this.low \u003d\u003d ((RatingInKeywordsRangePredicate) other).low"},{"lineNumber":39,"author":{"gitID":"mhq199657"},"content":"                \u0026\u0026 this.high \u003d\u003d ((RatingInKeywordsRangePredicate) other).high); // state check"},{"lineNumber":40,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":41,"author":{"gitID":"mhq199657"},"content":"}"}],"authorContributionMap":{"mhq199657":41}},{"path":"src/main/java/seedu/address/model/person/Major.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":" * Represents a Person\u0027s major in the address book."},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidMajor(String)}"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":"public class Major {"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"    public static final String MESSAGE_MAJOR_CONSTRAINTS \u003d"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"            \"Person major should only contain alphanumeric characters and spaces, and it should not be blank\";"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"    /*"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"     * The first character of the address must not be a whitespace,"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"     * otherwise \" \" (a blank string) becomes a valid input."},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"    public static final String MAJOR_VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"    public final String value;"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"     * Constructs a {@code Major}."},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":"     *"},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"     * @param major A valid major."},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"    public Major(String major) {"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"        requireNonNull(major);"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        checkArgument(isValidMajor(major), MESSAGE_MAJOR_CONSTRAINTS);"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"        this.value \u003d major;"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"     * Returns true if a given string is a valid person major."},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"    public static boolean isValidMajor(String test) {"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"        return test.matches(MAJOR_VALIDATION_REGEX);"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":"    public String toString() {"},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"        return value;"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof Major // instanceof handles nulls"},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.value.equals(((Major) other).value)); // state check"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":"    public int hashCode() {"},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"        return value.hashCode();"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":5,"tanhengyeow":55}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.GuiSettings;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":8,"author":{"gitID":"-"},"content":" * Represents User\u0027s preferences."},{"lineNumber":9,"author":{"gitID":"-"},"content":" */"},{"lineNumber":10,"author":{"gitID":"-"},"content":"public class UserPrefs {"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"    private GuiSettings guiSettings;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"    private String addressBookFilePath \u003d \"data/addressbook.xml\";"},{"lineNumber":14,"author":{"gitID":"Ang-YC"},"content":"    private String addressBookName \u003d \"MainHR+\";"},{"lineNumber":15,"author":{"gitID":"Ang-YC"},"content":"    private boolean animated \u003d true;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"    public UserPrefs() {"},{"lineNumber":18,"author":{"gitID":"Ang-YC"},"content":"        this.setGuiSettings(800, 600, 0, 0);"},{"lineNumber":19,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":"    public GuiSettings getGuiSettings() {"},{"lineNumber":22,"author":{"gitID":"-"},"content":"        return guiSettings \u003d\u003d null ? new GuiSettings() : guiSettings;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"    public void updateLastUsedGuiSetting(GuiSettings guiSettings) {"},{"lineNumber":26,"author":{"gitID":"-"},"content":"        this.guiSettings \u003d guiSettings;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    public void setGuiSettings(double width, double height, int x, int y) {"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        guiSettings \u003d new GuiSettings(width, height, x, y);"},{"lineNumber":31,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"-"},"content":"    public String getAddressBookFilePath() {"},{"lineNumber":34,"author":{"gitID":"-"},"content":"        return addressBookFilePath;"},{"lineNumber":35,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"    public void setAddressBookFilePath(String addressBookFilePath) {"},{"lineNumber":38,"author":{"gitID":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;"},{"lineNumber":39,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"-"},"content":""},{"lineNumber":41,"author":{"gitID":"-"},"content":"    public String getAddressBookName() {"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        return addressBookName;"},{"lineNumber":43,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"-"},"content":"    public void setAddressBookName(String addressBookName) {"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        this.addressBookName \u003d addressBookName;"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"Ang-YC"},"content":"    public boolean isAnimated() {"},{"lineNumber":50,"author":{"gitID":"Ang-YC"},"content":"        return animated;"},{"lineNumber":51,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":53,"author":{"gitID":"Ang-YC"},"content":"    public void setAnimated(boolean animated) {"},{"lineNumber":54,"author":{"gitID":"Ang-YC"},"content":"        this.animated \u003d animated;"},{"lineNumber":55,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":58,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":59,"author":{"gitID":"-"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":60,"author":{"gitID":"-"},"content":"            return true;"},{"lineNumber":61,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":62,"author":{"gitID":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well."},{"lineNumber":63,"author":{"gitID":"-"},"content":"            return false;"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":65,"author":{"gitID":"-"},"content":""},{"lineNumber":66,"author":{"gitID":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;"},{"lineNumber":67,"author":{"gitID":"-"},"content":""},{"lineNumber":68,"author":{"gitID":"-"},"content":"        return Objects.equals(guiSettings, o.guiSettings)"},{"lineNumber":69,"author":{"gitID":"-"},"content":"                \u0026\u0026 Objects.equals(addressBookFilePath, o.addressBookFilePath)"},{"lineNumber":70,"author":{"gitID":"-"},"content":"                \u0026\u0026 Objects.equals(addressBookName, o.addressBookName);"},{"lineNumber":71,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":72,"author":{"gitID":"-"},"content":""},{"lineNumber":73,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":74,"author":{"gitID":"-"},"content":"    public int hashCode() {"},{"lineNumber":75,"author":{"gitID":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath, addressBookName);"},{"lineNumber":76,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":77,"author":{"gitID":"-"},"content":""},{"lineNumber":78,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":79,"author":{"gitID":"-"},"content":"    public String toString() {"},{"lineNumber":80,"author":{"gitID":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":81,"author":{"gitID":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings.toString());"},{"lineNumber":82,"author":{"gitID":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);"},{"lineNumber":83,"author":{"gitID":"-"},"content":"        sb.append(\"\\nAddressBook name : \" + addressBookName);"},{"lineNumber":84,"author":{"gitID":"-"},"content":"        return sb.toString();"},{"lineNumber":85,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":86,"author":{"gitID":"-"},"content":""},{"lineNumber":87,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"-":76,"Ang-YC":11}},{"path":"src/main/java/seedu/address/model/AddressBook.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"kexiaowen"},"content":"import static seedu.address.logic.commands.SortCommand.MESSAGE_INVALID_SORT_FIELD;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.HashMap;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.HashSet;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.util.Map;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import java.util.Set;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":15,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.logic.commands.SortCommand;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.model.person.UniquePersonList;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.model.tag.Tag;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.address.model.tag.UniqueTagList;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.address.model.tag.exceptions.TagNotFoundException;"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":25,"author":{"gitID":"-"},"content":" * Wraps all data at the address-book level"},{"lineNumber":26,"author":{"gitID":"-"},"content":" * Duplicates are not allowed (by .equals comparison)"},{"lineNumber":27,"author":{"gitID":"-"},"content":" */"},{"lineNumber":28,"author":{"gitID":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"-"},"content":"    private final UniquePersonList persons;"},{"lineNumber":31,"author":{"gitID":"-"},"content":"    private final UniqueTagList tags;"},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"-"},"content":"    /*"},{"lineNumber":34,"author":{"gitID":"-"},"content":"     * The \u0027unusual\u0027 code block below is an non-static initialization block, sometimes used to avoid duplication"},{"lineNumber":35,"author":{"gitID":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html"},{"lineNumber":36,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":37,"author":{"gitID":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication"},{"lineNumber":38,"author":{"gitID":"-"},"content":"     *   among constructors."},{"lineNumber":39,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    {"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        persons \u003d new UniquePersonList();"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        tags \u003d new UniqueTagList();"},{"lineNumber":43,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"-"},"content":"    public AddressBook() {}"},{"lineNumber":46,"author":{"gitID":"-"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":48,"author":{"gitID":"-"},"content":"     * Creates an AddressBook using the Persons and Tags in the {@code toBeCopied}"},{"lineNumber":49,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":50,"author":{"gitID":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        this();"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        resetData(toBeCopied);"},{"lineNumber":53,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitID":"-"},"content":""},{"lineNumber":55,"author":{"gitID":"-"},"content":"    //// list overwrite operations"},{"lineNumber":56,"author":{"gitID":"-"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) throws DuplicatePersonException {"},{"lineNumber":58,"author":{"gitID":"-"},"content":"        this.persons.setPersons(persons);"},{"lineNumber":59,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":60,"author":{"gitID":"-"},"content":""},{"lineNumber":61,"author":{"gitID":"-"},"content":"    public void setTags(Set\u003cTag\u003e tags) {"},{"lineNumber":62,"author":{"gitID":"-"},"content":"        this.tags.setTags(tags);"},{"lineNumber":63,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"-"},"content":""},{"lineNumber":65,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":66,"author":{"gitID":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}."},{"lineNumber":67,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":68,"author":{"gitID":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        requireNonNull(newData);"},{"lineNumber":70,"author":{"gitID":"-"},"content":"        setTags(new HashSet\u003c\u003e(newData.getTagList()));"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        List\u003cPerson\u003e syncedPersonList \u003d newData.getPersonList().stream()"},{"lineNumber":72,"author":{"gitID":"-"},"content":"                .map(this::syncWithMasterTagList)"},{"lineNumber":73,"author":{"gitID":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":74,"author":{"gitID":"-"},"content":""},{"lineNumber":75,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":76,"author":{"gitID":"-"},"content":"            setPersons(syncedPersonList);"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        } catch (DuplicatePersonException e) {"},{"lineNumber":78,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"AddressBooks should not have duplicate persons\");"},{"lineNumber":79,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":80,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":81,"author":{"gitID":"-"},"content":""},{"lineNumber":82,"author":{"gitID":"kexiaowen"},"content":"    //@@author kexiaowen"},{"lineNumber":83,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":84,"author":{"gitID":"kexiaowen"},"content":"     * Sorts all students in HR+ based on {@code sortField} in ascending order"},{"lineNumber":85,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":86,"author":{"gitID":"kexiaowen"},"content":"    public void sortAsc(SortCommand.SortField sortField) {"},{"lineNumber":87,"author":{"gitID":"kexiaowen"},"content":"        switch (sortField) {"},{"lineNumber":88,"author":{"gitID":"kexiaowen"},"content":"        case GPA:"},{"lineNumber":89,"author":{"gitID":"kexiaowen"},"content":"            persons.sortPersonsGradePointAverageAsc();"},{"lineNumber":90,"author":{"gitID":"kexiaowen"},"content":"            break;"},{"lineNumber":91,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":92,"author":{"gitID":"kexiaowen"},"content":"        case NAME:"},{"lineNumber":93,"author":{"gitID":"kexiaowen"},"content":"            persons.sortPersonsNameAsc();"},{"lineNumber":94,"author":{"gitID":"kexiaowen"},"content":"            break;"},{"lineNumber":95,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":96,"author":{"gitID":"kexiaowen"},"content":"        case RATING:"},{"lineNumber":97,"author":{"gitID":"kexiaowen"},"content":"            persons.sortPersonsRatingAsc();"},{"lineNumber":98,"author":{"gitID":"kexiaowen"},"content":"            break;"},{"lineNumber":99,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":100,"author":{"gitID":"kexiaowen"},"content":"        default:"},{"lineNumber":101,"author":{"gitID":"kexiaowen"},"content":"            throw new IllegalArgumentException(MESSAGE_INVALID_SORT_FIELD);"},{"lineNumber":102,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":103,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":104,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":105,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":106,"author":{"gitID":"kexiaowen"},"content":"     * Sorts all students in HR+ based on {@code sortField} in descending order"},{"lineNumber":107,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":108,"author":{"gitID":"kexiaowen"},"content":"    public void sortDesc(SortCommand.SortField sortField) {"},{"lineNumber":109,"author":{"gitID":"kexiaowen"},"content":"        switch (sortField) {"},{"lineNumber":110,"author":{"gitID":"kexiaowen"},"content":"        case GPA:"},{"lineNumber":111,"author":{"gitID":"kexiaowen"},"content":"            persons.sortPersonsGradePointAverageDesc();"},{"lineNumber":112,"author":{"gitID":"kexiaowen"},"content":"            break;"},{"lineNumber":113,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":114,"author":{"gitID":"kexiaowen"},"content":"        case NAME:"},{"lineNumber":115,"author":{"gitID":"kexiaowen"},"content":"            persons.sortPersonsNameDesc();"},{"lineNumber":116,"author":{"gitID":"kexiaowen"},"content":"            break;"},{"lineNumber":117,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":118,"author":{"gitID":"kexiaowen"},"content":"        case RATING:"},{"lineNumber":119,"author":{"gitID":"kexiaowen"},"content":"            persons.sortPersonsRatingDesc();"},{"lineNumber":120,"author":{"gitID":"kexiaowen"},"content":"            break;"},{"lineNumber":121,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":122,"author":{"gitID":"kexiaowen"},"content":"        default:"},{"lineNumber":123,"author":{"gitID":"kexiaowen"},"content":"            throw new IllegalArgumentException(MESSAGE_INVALID_SORT_FIELD);"},{"lineNumber":124,"author":{"gitID":"kexiaowen"},"content":"        }"},{"lineNumber":125,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":126,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":127,"author":{"gitID":"kexiaowen"},"content":"    //@@author"},{"lineNumber":128,"author":{"gitID":"-"},"content":"    //// person-level operations"},{"lineNumber":129,"author":{"gitID":"-"},"content":""},{"lineNumber":130,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":131,"author":{"gitID":"-"},"content":"     * Adds a person to the address book."},{"lineNumber":132,"author":{"gitID":"-"},"content":"     * Also checks the new person\u0027s tags and updates {@link #tags} with any new tags found,"},{"lineNumber":133,"author":{"gitID":"-"},"content":"     * and updates the Tag objects in the person to point to those in {@link #tags}."},{"lineNumber":134,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":135,"author":{"gitID":"-"},"content":"     * @throws DuplicatePersonException if an equivalent person already exists."},{"lineNumber":136,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":137,"author":{"gitID":"-"},"content":"    public void addPerson(Person p) throws DuplicatePersonException {"},{"lineNumber":138,"author":{"gitID":"-"},"content":"        Person person \u003d syncWithMasterTagList(p);"},{"lineNumber":139,"author":{"gitID":"-"},"content":"        // TODO: the tags master list will be updated even though the below line fails."},{"lineNumber":140,"author":{"gitID":"-"},"content":"        // This can cause the tags master list to have additional tags that are not tagged to any person"},{"lineNumber":141,"author":{"gitID":"-"},"content":"        // in the person list."},{"lineNumber":142,"author":{"gitID":"-"},"content":"        persons.add(person);"},{"lineNumber":143,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":144,"author":{"gitID":"-"},"content":""},{"lineNumber":145,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":146,"author":{"gitID":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}."},{"lineNumber":147,"author":{"gitID":"-"},"content":"     * {@code AddressBook}\u0027s tag list will be updated with the tags of {@code editedPerson}."},{"lineNumber":148,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":149,"author":{"gitID":"-"},"content":"     * @throws DuplicatePersonException if updating the person\u0027s details causes the person to be equivalent to"},{"lineNumber":150,"author":{"gitID":"-"},"content":"     *      another existing person in the list."},{"lineNumber":151,"author":{"gitID":"-"},"content":"     * @throws PersonNotFoundException if {@code target} could not be found in the list."},{"lineNumber":152,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":153,"author":{"gitID":"-"},"content":"     * @see #syncWithMasterTagList(Person)"},{"lineNumber":154,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":155,"author":{"gitID":"-"},"content":"    public void updatePerson(Person target, Person editedPerson)"},{"lineNumber":156,"author":{"gitID":"-"},"content":"            throws DuplicatePersonException, PersonNotFoundException {"},{"lineNumber":157,"author":{"gitID":"-"},"content":"        requireNonNull(editedPerson);"},{"lineNumber":158,"author":{"gitID":"-"},"content":""},{"lineNumber":159,"author":{"gitID":"-"},"content":"        Person syncedEditedPerson \u003d syncWithMasterTagList(editedPerson);"},{"lineNumber":160,"author":{"gitID":"-"},"content":"        // TODO: the tags master list will be updated even though the below line fails."},{"lineNumber":161,"author":{"gitID":"-"},"content":"        // This can cause the tags master list to have additional tags that are not tagged to any person"},{"lineNumber":162,"author":{"gitID":"-"},"content":"        // in the person list."},{"lineNumber":163,"author":{"gitID":"-"},"content":"        persons.setPerson(target, syncedEditedPerson);"},{"lineNumber":164,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":165,"author":{"gitID":"-"},"content":""},{"lineNumber":166,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":167,"author":{"gitID":"-"},"content":"     *  Updates the master tag list to include tags in {@code person} that are not in the list."},{"lineNumber":168,"author":{"gitID":"-"},"content":"     *  @return a copy of this {@code person} such that every tag in this person points to a Tag object in the master"},{"lineNumber":169,"author":{"gitID":"-"},"content":"     *  list."},{"lineNumber":170,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":171,"author":{"gitID":"-"},"content":"    private Person syncWithMasterTagList(Person person) {"},{"lineNumber":172,"author":{"gitID":"-"},"content":"        final UniqueTagList personTags \u003d new UniqueTagList(person.getTags());"},{"lineNumber":173,"author":{"gitID":"-"},"content":"        tags.mergeFrom(personTags);"},{"lineNumber":174,"author":{"gitID":"-"},"content":""},{"lineNumber":175,"author":{"gitID":"-"},"content":"        // Create map with values \u003d tag object references in the master list"},{"lineNumber":176,"author":{"gitID":"-"},"content":"        // used for checking person tag references"},{"lineNumber":177,"author":{"gitID":"-"},"content":"        final Map\u003cTag, Tag\u003e masterTagObjects \u003d new HashMap\u003c\u003e();"},{"lineNumber":178,"author":{"gitID":"-"},"content":"        tags.forEach(tag -\u003e masterTagObjects.put(tag, tag));"},{"lineNumber":179,"author":{"gitID":"-"},"content":""},{"lineNumber":180,"author":{"gitID":"-"},"content":"        // Rebuild the list of person tags to point to the relevant tags in the master tag list."},{"lineNumber":181,"author":{"gitID":"-"},"content":"        final Set\u003cTag\u003e correctTagReferences \u003d new HashSet\u003c\u003e();"},{"lineNumber":182,"author":{"gitID":"-"},"content":"        personTags.forEach(tag -\u003e correctTagReferences.add(masterTagObjects.get(tag)));"},{"lineNumber":183,"author":{"gitID":"-"},"content":"        return new Person("},{"lineNumber":184,"author":{"gitID":"kexiaowen"},"content":"                person.getName(), person.getPhone(), person.getEmail(), person.getAddress(), person.getUniversity(),"},{"lineNumber":185,"author":{"gitID":"tanhengyeow"},"content":"                person.getExpectedGraduationYear(), person.getMajor(), person.getGradePointAverage(),"},{"lineNumber":186,"author":{"gitID":"Ang-YC"},"content":"                person.getJobApplied(), person.getRating(), person.getResume(), person.getProfileImage(),"},{"lineNumber":187,"author":{"gitID":"Ang-YC"},"content":"                person.getComment(), person.getInterviewDate(), person.getStatus(), correctTagReferences);"},{"lineNumber":188,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":189,"author":{"gitID":"-"},"content":""},{"lineNumber":190,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":191,"author":{"gitID":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}."},{"lineNumber":192,"author":{"gitID":"-"},"content":"     * @throws PersonNotFoundException if the {@code key} is not in this {@code AddressBook}."},{"lineNumber":193,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":194,"author":{"gitID":"-"},"content":"    public boolean removePerson(Person key) throws PersonNotFoundException {"},{"lineNumber":195,"author":{"gitID":"-"},"content":"        if (persons.remove(key)) {"},{"lineNumber":196,"author":{"gitID":"-"},"content":"            return true;"},{"lineNumber":197,"author":{"gitID":"-"},"content":"        } else {"},{"lineNumber":198,"author":{"gitID":"-"},"content":"            throw new PersonNotFoundException();"},{"lineNumber":199,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":200,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":201,"author":{"gitID":"-"},"content":""},{"lineNumber":202,"author":{"gitID":"-"},"content":"    //// tag-level operations"},{"lineNumber":203,"author":{"gitID":"-"},"content":""},{"lineNumber":204,"author":{"gitID":"-"},"content":"    public void addTag(Tag t) throws UniqueTagList.DuplicateTagException {"},{"lineNumber":205,"author":{"gitID":"-"},"content":"        tags.add(t);"},{"lineNumber":206,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":207,"author":{"gitID":"-"},"content":""},{"lineNumber":208,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":209,"author":{"gitID":"-"},"content":"     * Removes {@code tag} from this {@code AddressBook}."},{"lineNumber":210,"author":{"gitID":"-"},"content":"     * @throws TagNotFoundException if the {@code tag} is not in this {@code AddressBook}."},{"lineNumber":211,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":212,"author":{"gitID":"-"},"content":"    public void removeTag(Tag tag) throws TagNotFoundException {"},{"lineNumber":213,"author":{"gitID":"-"},"content":"        if (tags.contains(tag)) {"},{"lineNumber":214,"author":{"gitID":"-"},"content":"            for (Person person: persons) {"},{"lineNumber":215,"author":{"gitID":"-"},"content":"                removeTagFromEachPerson(person, tag);"},{"lineNumber":216,"author":{"gitID":"-"},"content":"            }"},{"lineNumber":217,"author":{"gitID":"-"},"content":"            removeUnusedTags();"},{"lineNumber":218,"author":{"gitID":"-"},"content":"        } else {"},{"lineNumber":219,"author":{"gitID":"-"},"content":"            throw new TagNotFoundException();"},{"lineNumber":220,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":221,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":222,"author":{"gitID":"-"},"content":""},{"lineNumber":223,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":224,"author":{"gitID":"-"},"content":"     * Removes {@code tag} from this {@code person} if the person has that tag."},{"lineNumber":225,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":226,"author":{"gitID":"-"},"content":"    private void removeTagFromEachPerson(Person person, Tag tag) {"},{"lineNumber":227,"author":{"gitID":"-"},"content":"        Set\u003cTag\u003e editedTags \u003d new HashSet\u003c\u003e(person.getTags());"},{"lineNumber":228,"author":{"gitID":"-"},"content":"        if (editedTags.remove(tag)) {"},{"lineNumber":229,"author":{"gitID":"mhq199657"},"content":"            Person editedPerson \u003d new Person(person.getName(), person.getPhone(), person.getEmail(),"},{"lineNumber":230,"author":{"gitID":"kexiaowen"},"content":"                    person.getAddress(), person.getUniversity(), person.getExpectedGraduationYear(), person.getMajor(),"},{"lineNumber":231,"author":{"gitID":"Ang-YC"},"content":"                    person.getGradePointAverage(), person.getJobApplied(), person.getRating(), person.getResume(),"},{"lineNumber":232,"author":{"gitID":"Ang-YC"},"content":"                    person.getProfileImage(), person.getComment(), person.getInterviewDate(), person.getStatus(),"},{"lineNumber":233,"author":{"gitID":"Ang-YC"},"content":"                    editedTags);"},{"lineNumber":234,"author":{"gitID":"-"},"content":"            try {"},{"lineNumber":235,"author":{"gitID":"-"},"content":"                updatePerson(person, editedPerson);"},{"lineNumber":236,"author":{"gitID":"-"},"content":"            } catch (DuplicatePersonException dpe) {"},{"lineNumber":237,"author":{"gitID":"-"},"content":"                throw new AssertionError(\"Deleting a tag should not result in duplicate persons.\");"},{"lineNumber":238,"author":{"gitID":"-"},"content":"            } catch (PersonNotFoundException pnfe) {"},{"lineNumber":239,"author":{"gitID":"-"},"content":"                throw new AssertionError(\"The target person cannot be missing.\");"},{"lineNumber":240,"author":{"gitID":"-"},"content":"            }"},{"lineNumber":241,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":242,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":243,"author":{"gitID":"-"},"content":""},{"lineNumber":244,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":245,"author":{"gitID":"-"},"content":"     * Removes unreferenced tags from {@code tags}."},{"lineNumber":246,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":247,"author":{"gitID":"-"},"content":"    public void removeUnusedTags() {"},{"lineNumber":248,"author":{"gitID":"-"},"content":"        Set\u003cTag\u003e referencedTags \u003d new HashSet\u003c\u003e();"},{"lineNumber":249,"author":{"gitID":"-"},"content":"        for (Person person: persons) {"},{"lineNumber":250,"author":{"gitID":"-"},"content":"            person.getTags().forEach(tag -\u003e referencedTags.add(tag));"},{"lineNumber":251,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":252,"author":{"gitID":"-"},"content":"        tags.setTags(referencedTags);"},{"lineNumber":253,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":254,"author":{"gitID":"-"},"content":""},{"lineNumber":255,"author":{"gitID":"-"},"content":"    //// util methods"},{"lineNumber":256,"author":{"gitID":"-"},"content":""},{"lineNumber":257,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":258,"author":{"gitID":"-"},"content":"    public String toString() {"},{"lineNumber":259,"author":{"gitID":"-"},"content":"        return persons.asObservableList().size() + \" persons, \" + tags.asObservableList().size() +  \" tags\";"},{"lineNumber":260,"author":{"gitID":"-"},"content":"        // TODO: refine later"},{"lineNumber":261,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":262,"author":{"gitID":"-"},"content":""},{"lineNumber":263,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":264,"author":{"gitID":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {"},{"lineNumber":265,"author":{"gitID":"-"},"content":"        return persons.asObservableList();"},{"lineNumber":266,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":267,"author":{"gitID":"-"},"content":""},{"lineNumber":268,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":269,"author":{"gitID":"-"},"content":"    public ObservableList\u003cTag\u003e getTagList() {"},{"lineNumber":270,"author":{"gitID":"-"},"content":"        return tags.asObservableList();"},{"lineNumber":271,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":272,"author":{"gitID":"-"},"content":""},{"lineNumber":273,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":274,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":275,"author":{"gitID":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":276,"author":{"gitID":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls"},{"lineNumber":277,"author":{"gitID":"-"},"content":"                \u0026\u0026 this.persons.equals(((AddressBook) other).persons)"},{"lineNumber":278,"author":{"gitID":"-"},"content":"                \u0026\u0026 this.tags.equalsOrderInsensitive(((AddressBook) other).tags));"},{"lineNumber":279,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":280,"author":{"gitID":"-"},"content":""},{"lineNumber":281,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":282,"author":{"gitID":"-"},"content":"    public int hashCode() {"},{"lineNumber":283,"author":{"gitID":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own"},{"lineNumber":284,"author":{"gitID":"-"},"content":"        return Objects.hash(persons, tags);"},{"lineNumber":285,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":286,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"kexiaowen":50,"mhq199657":1,"-":229,"tanhengyeow":1,"Ang-YC":5}},{"path":"src/main/java/seedu/address/model/ModelManager.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"mhq199657"},"content":"import static java.util.Objects.isNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":11,"author":{"gitID":"Ang-YC"},"content":"import javafx.collections.ListChangeListener;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import javafx.collections.transformation.FilteredList;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.ComponentManager;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.model.AddressBookChangedEvent;"},{"lineNumber":17,"author":{"gitID":"Ang-YC"},"content":"import seedu.address.commons.events.ui.PersonChangedEvent;"},{"lineNumber":18,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.logic.commands.SortCommand;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.address.model.tag.Tag;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.address.model.tag.exceptions.TagNotFoundException;"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":26,"author":{"gitID":"-"},"content":" * Represents the in-memory model of the address book data."},{"lineNumber":27,"author":{"gitID":"-"},"content":" * All changes to any model should be synchronized."},{"lineNumber":28,"author":{"gitID":"-"},"content":" */"},{"lineNumber":29,"author":{"gitID":"-"},"content":"public class ModelManager extends ComponentManager implements Model {"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"    private final AddressBook addressBook;"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;"},{"lineNumber":34,"author":{"gitID":"Ang-YC"},"content":"    private final ObservableList\u003cPerson\u003e personList;"},{"lineNumber":35,"author":{"gitID":"Ang-YC"},"content":"    private Person selectedPerson;"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":38,"author":{"gitID":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs."},{"lineNumber":39,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, UserPrefs userPrefs) {"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        super();"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"Ang-YC"},"content":"        logger.fine(\"Initializing with data file: \" + addressBook + \" and user prefs \" + userPrefs);"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());"},{"lineNumber":48,"author":{"gitID":"Ang-YC"},"content":"        filteredPersons.setPredicate(PREDICATE_SHOW_ALL_PERSONS);"},{"lineNumber":49,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":50,"author":{"gitID":"Ang-YC"},"content":"        // Actively listen to predicate changes"},{"lineNumber":51,"author":{"gitID":"Ang-YC"},"content":"        personList \u003d FXCollections.observableArrayList(filteredPersons);"},{"lineNumber":52,"author":{"gitID":"Ang-YC"},"content":"        filteredPersons.addListener((ListChangeListener\u003cPerson\u003e) c -\u003e {"},{"lineNumber":53,"author":{"gitID":"Ang-YC"},"content":"            personList.setAll(filteredPersons);"},{"lineNumber":54,"author":{"gitID":"Ang-YC"},"content":"        });"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"-"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":"    public ModelManager() {"},{"lineNumber":58,"author":{"gitID":"-"},"content":"        this(new AddressBook(), new UserPrefs());"},{"lineNumber":59,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":60,"author":{"gitID":"-"},"content":""},{"lineNumber":61,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":62,"author":{"gitID":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {"},{"lineNumber":63,"author":{"gitID":"Ang-YC"},"content":"        // Quickfix: Reset the filtered person"},{"lineNumber":64,"author":{"gitID":"Ang-YC"},"content":"        personList.clear();"},{"lineNumber":65,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":66,"author":{"gitID":"-"},"content":"        addressBook.resetData(newData);"},{"lineNumber":67,"author":{"gitID":"-"},"content":"        indicateAddressBookChanged();"},{"lineNumber":68,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitID":"-"},"content":""},{"lineNumber":70,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":71,"author":{"gitID":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {"},{"lineNumber":72,"author":{"gitID":"-"},"content":"        return addressBook;"},{"lineNumber":73,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitID":"-"},"content":""},{"lineNumber":75,"author":{"gitID":"-"},"content":"    /** Raises an event to indicate the model has changed */"},{"lineNumber":76,"author":{"gitID":"-"},"content":"    private void indicateAddressBookChanged() {"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        raise(new AddressBookChangedEvent(addressBook));"},{"lineNumber":78,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":79,"author":{"gitID":"-"},"content":""},{"lineNumber":80,"author":{"gitID":"Ang-YC"},"content":"    /** Raises an event to indicate the person has changed */"},{"lineNumber":81,"author":{"gitID":"Ang-YC"},"content":"    private void indicatePersonChanged(Person source, Person updated) {"},{"lineNumber":82,"author":{"gitID":"Ang-YC"},"content":"        raise(new PersonChangedEvent(source, updated));"},{"lineNumber":83,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":84,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":85,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":86,"author":{"gitID":"-"},"content":"    public synchronized void deletePerson(Person target) throws PersonNotFoundException {"},{"lineNumber":87,"author":{"gitID":"-"},"content":"        addressBook.removePerson(target);"},{"lineNumber":88,"author":{"gitID":"-"},"content":"        indicateAddressBookChanged();"},{"lineNumber":89,"author":{"gitID":"Ang-YC"},"content":"        indicatePersonChanged(target, null);"},{"lineNumber":90,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":91,"author":{"gitID":"-"},"content":""},{"lineNumber":92,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":93,"author":{"gitID":"-"},"content":"    public synchronized void addPerson(Person person) throws DuplicatePersonException {"},{"lineNumber":94,"author":{"gitID":"-"},"content":"        addressBook.addPerson(person);"},{"lineNumber":95,"author":{"gitID":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);"},{"lineNumber":96,"author":{"gitID":"-"},"content":"        indicateAddressBookChanged();"},{"lineNumber":97,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":98,"author":{"gitID":"-"},"content":""},{"lineNumber":99,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":100,"author":{"gitID":"-"},"content":"    public void updatePerson(Person target, Person editedPerson)"},{"lineNumber":101,"author":{"gitID":"-"},"content":"            throws DuplicatePersonException, PersonNotFoundException {"},{"lineNumber":102,"author":{"gitID":"-"},"content":"        requireAllNonNull(target, editedPerson);"},{"lineNumber":103,"author":{"gitID":"-"},"content":""},{"lineNumber":104,"author":{"gitID":"-"},"content":"        addressBook.updatePerson(target, editedPerson);"},{"lineNumber":105,"author":{"gitID":"-"},"content":"        indicateAddressBookChanged();"},{"lineNumber":106,"author":{"gitID":"Ang-YC"},"content":"        indicatePersonChanged(target, editedPerson);"},{"lineNumber":107,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":108,"author":{"gitID":"-"},"content":""},{"lineNumber":109,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":110,"author":{"gitID":"-"},"content":"    public void deleteTag(Tag tag) throws TagNotFoundException {"},{"lineNumber":111,"author":{"gitID":"-"},"content":"        addressBook.removeTag(tag);"},{"lineNumber":112,"author":{"gitID":"-"},"content":"        indicateAddressBookChanged();"},{"lineNumber":113,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":114,"author":{"gitID":"-"},"content":""},{"lineNumber":115,"author":{"gitID":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":116,"author":{"gitID":"-"},"content":""},{"lineNumber":117,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":118,"author":{"gitID":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of"},{"lineNumber":119,"author":{"gitID":"-"},"content":"     * {@code addressBook}"},{"lineNumber":120,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":121,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":122,"author":{"gitID":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {"},{"lineNumber":123,"author":{"gitID":"-"},"content":"        return FXCollections.unmodifiableObservableList(filteredPersons);"},{"lineNumber":124,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":125,"author":{"gitID":"-"},"content":""},{"lineNumber":126,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":127,"author":{"gitID":"Ang-YC"},"content":"     * Returns an active view of the list of {@code Person} backed by the internal list of {@code addressBook}"},{"lineNumber":128,"author":{"gitID":"Ang-YC"},"content":"     * The differences with {@link ModelManager#getFilteredPersonList}"},{"lineNumber":129,"author":{"gitID":"Ang-YC"},"content":"     * is the ability to actively listen to predicate change"},{"lineNumber":130,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":131,"author":{"gitID":"Ang-YC"},"content":"    @Override"},{"lineNumber":132,"author":{"gitID":"Ang-YC"},"content":"    public ObservableList\u003cPerson\u003e getActivePersonList() {"},{"lineNumber":133,"author":{"gitID":"Ang-YC"},"content":"        return personList;"},{"lineNumber":134,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":135,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":136,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":137,"author":{"gitID":"Ang-YC"},"content":"     * Set the currently selected person"},{"lineNumber":138,"author":{"gitID":"Ang-YC"},"content":"     * @param selectedPerson currently in the list"},{"lineNumber":139,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":140,"author":{"gitID":"Ang-YC"},"content":"    @Override"},{"lineNumber":141,"author":{"gitID":"Ang-YC"},"content":"    public void setSelectedPerson(Person selectedPerson) {"},{"lineNumber":142,"author":{"gitID":"Ang-YC"},"content":"        this.selectedPerson \u003d selectedPerson;"},{"lineNumber":143,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":144,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":145,"author":{"gitID":"Ang-YC"},"content":"    /**"},{"lineNumber":146,"author":{"gitID":"Ang-YC"},"content":"     * Get the currently selected person"},{"lineNumber":147,"author":{"gitID":"Ang-YC"},"content":"     */"},{"lineNumber":148,"author":{"gitID":"Ang-YC"},"content":"    @Override"},{"lineNumber":149,"author":{"gitID":"Ang-YC"},"content":"    public Person getSelectedPerson() {"},{"lineNumber":150,"author":{"gitID":"Ang-YC"},"content":"        return selectedPerson;"},{"lineNumber":151,"author":{"gitID":"Ang-YC"},"content":"    }"},{"lineNumber":152,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":153,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":154,"author":{"gitID":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {"},{"lineNumber":155,"author":{"gitID":"-"},"content":"        requireNonNull(predicate);"},{"lineNumber":156,"author":{"gitID":"-"},"content":"        filteredPersons.setPredicate(predicate);"},{"lineNumber":157,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":158,"author":{"gitID":"mhq199657"},"content":"    //@@author mhq199657"},{"lineNumber":159,"author":{"gitID":"mhq199657"},"content":"    @Override"},{"lineNumber":160,"author":{"gitID":"mhq199657"},"content":"    public void filterFilteredPersonList(Predicate\u003cPerson\u003e predicate) {"},{"lineNumber":161,"author":{"gitID":"mhq199657"},"content":"        requireNonNull(predicate);"},{"lineNumber":162,"author":{"gitID":"mhq199657"},"content":"        Predicate\u003c? super Person\u003e currPredicate \u003d filteredPersons.getPredicate();"},{"lineNumber":163,"author":{"gitID":"mhq199657"},"content":"        filteredPersons.setPredicate(isNull(currPredicate) ? predicate : predicate.and(currPredicate));"},{"lineNumber":164,"author":{"gitID":"mhq199657"},"content":"    }"},{"lineNumber":165,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":166,"author":{"gitID":"kexiaowen"},"content":"    //@@author kexiaowen"},{"lineNumber":167,"author":{"gitID":"kexiaowen"},"content":"    @Override"},{"lineNumber":168,"author":{"gitID":"kexiaowen"},"content":"    public void sortPersonListAscOrder(SortCommand.SortField sortField) {"},{"lineNumber":169,"author":{"gitID":"kexiaowen"},"content":"        addressBook.sortAsc(sortField);"},{"lineNumber":170,"author":{"gitID":"kexiaowen"},"content":"        Predicate\u003c? super Person\u003e currPredicate \u003d filteredPersons.getPredicate();"},{"lineNumber":171,"author":{"gitID":"kexiaowen"},"content":"        filteredPersons.setPredicate(currPredicate);"},{"lineNumber":172,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":173,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":174,"author":{"gitID":"kexiaowen"},"content":"    @Override"},{"lineNumber":175,"author":{"gitID":"kexiaowen"},"content":"    public void sortPersonListDescOrder(SortCommand.SortField sortField) {"},{"lineNumber":176,"author":{"gitID":"kexiaowen"},"content":"        addressBook.sortDesc(sortField);"},{"lineNumber":177,"author":{"gitID":"kexiaowen"},"content":"        Predicate\u003c? super Person\u003e currPredicate \u003d filteredPersons.getPredicate();"},{"lineNumber":178,"author":{"gitID":"kexiaowen"},"content":"        filteredPersons.setPredicate(currPredicate);"},{"lineNumber":179,"author":{"gitID":"kexiaowen"},"content":"    }"},{"lineNumber":180,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":181,"author":{"gitID":"kexiaowen"},"content":"    //@@author"},{"lineNumber":182,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":183,"author":{"gitID":"-"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":184,"author":{"gitID":"-"},"content":"        // short circuit if same object"},{"lineNumber":185,"author":{"gitID":"-"},"content":"        if (obj \u003d\u003d this) {"},{"lineNumber":186,"author":{"gitID":"-"},"content":"            return true;"},{"lineNumber":187,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":188,"author":{"gitID":"-"},"content":""},{"lineNumber":189,"author":{"gitID":"-"},"content":"        // instanceof handles nulls"},{"lineNumber":190,"author":{"gitID":"-"},"content":"        if (!(obj instanceof ModelManager)) {"},{"lineNumber":191,"author":{"gitID":"-"},"content":"            return false;"},{"lineNumber":192,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":193,"author":{"gitID":"-"},"content":""},{"lineNumber":194,"author":{"gitID":"-"},"content":"        // state check"},{"lineNumber":195,"author":{"gitID":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;"},{"lineNumber":196,"author":{"gitID":"-"},"content":"        return addressBook.equals(other.addressBook)"},{"lineNumber":197,"author":{"gitID":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);"},{"lineNumber":198,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":199,"author":{"gitID":"-"},"content":""},{"lineNumber":200,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"kexiaowen":17,"mhq199657":9,"-":125,"Ang-YC":49}},{"path":"src/main/java/seedu/address/model/person/JobAppliedContainsSuffixesPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.FindResults;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":" * Tests that a {@code Person}\u0027s {@code JobApplied} matches the suffix string given."},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"public class JobAppliedContainsSuffixesPredicate implements Predicate\u003cPerson\u003e {"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"    private final List\u003cString\u003e suffixKeywords;"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private final String commandPrefix \u003d \"j/\";"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"    public JobAppliedContainsSuffixesPredicate(List\u003cString\u003e suffixKeywords) {"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"        this.suffixKeywords \u003d suffixKeywords;"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"    public boolean test(Person person) {"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"        return suffixKeywords.stream()"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"                .anyMatch(suffix -\u003e FindResults.getInstance().containsSuffixIgnoreCase("},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                        person.getJobApplied().value, suffix, commandPrefix));"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof JobAppliedContainsSuffixesPredicate // instanceof handles nulls"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.suffixKeywords.equals(("},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"                (JobAppliedContainsSuffixesPredicate) other).suffixKeywords)); // state check"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":5,"tanhengyeow":30}},{"path":"src/main/java/seedu/address/model/Model.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitID":"kexiaowen"},"content":"import seedu.address.logic.commands.SortCommand;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.model.tag.Tag;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.model.tag.exceptions.TagNotFoundException;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":14,"author":{"gitID":"-"},"content":" * The API of the Model component."},{"lineNumber":15,"author":{"gitID":"-"},"content":" */"},{"lineNumber":16,"author":{"gitID":"-"},"content":"public interface Model {"},{"lineNumber":17,"author":{"gitID":"-"},"content":"    /** {@code Predicate} that always evaluate to true */"},{"lineNumber":18,"author":{"gitID":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":"    /** Clears existing backing model and replaces with the provided new data. */"},{"lineNumber":21,"author":{"gitID":"-"},"content":"    void resetData(ReadOnlyAddressBook newData);"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"-"},"content":"    /** Returns the AddressBook */"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    ReadOnlyAddressBook getAddressBook();"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"    /** Deletes the given person. */"},{"lineNumber":27,"author":{"gitID":"-"},"content":"    void deletePerson(Person target) throws PersonNotFoundException;"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    /** Adds the given person */"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    void addPerson(Person person) throws DuplicatePersonException;"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":33,"author":{"gitID":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}."},{"lineNumber":34,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":35,"author":{"gitID":"-"},"content":"     * @throws DuplicatePersonException if updating the person\u0027s details causes the person to be equivalent to"},{"lineNumber":36,"author":{"gitID":"-"},"content":"     *      another existing person in the list."},{"lineNumber":37,"author":{"gitID":"-"},"content":"     * @throws PersonNotFoundException if {@code target} could not be found in the list."},{"lineNumber":38,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":39,"author":{"gitID":"-"},"content":"    void updatePerson(Person target, Person editedPerson)"},{"lineNumber":40,"author":{"gitID":"-"},"content":"            throws DuplicatePersonException, PersonNotFoundException;"},{"lineNumber":41,"author":{"gitID":"-"},"content":""},{"lineNumber":42,"author":{"gitID":"-"},"content":"    /** Deletes the given tag. */"},{"lineNumber":43,"author":{"gitID":"-"},"content":"    void deleteTag(Tag tag) throws TagNotFoundException;"},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */"},{"lineNumber":46,"author":{"gitID":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();"},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"Ang-YC"},"content":"    /** Returns an active view of the filtered person list (With active predicate change listener) */"},{"lineNumber":49,"author":{"gitID":"Ang-YC"},"content":"    ObservableList\u003cPerson\u003e getActivePersonList();"},{"lineNumber":50,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":51,"author":{"gitID":"Ang-YC"},"content":"    /** Set the currently selected person */"},{"lineNumber":52,"author":{"gitID":"Ang-YC"},"content":"    void setSelectedPerson(Person selectedPerson);"},{"lineNumber":53,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":54,"author":{"gitID":"Ang-YC"},"content":"    /** Get the currently selected person */"},{"lineNumber":55,"author":{"gitID":"Ang-YC"},"content":"    Person getSelectedPerson();"},{"lineNumber":56,"author":{"gitID":"Ang-YC"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":58,"author":{"gitID":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}."},{"lineNumber":59,"author":{"gitID":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null."},{"lineNumber":60,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":61,"author":{"gitID":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);"},{"lineNumber":62,"author":{"gitID":"-"},"content":""},{"lineNumber":63,"author":{"gitID":"mhq199657"},"content":"    void filterFilteredPersonList(Predicate\u003cPerson\u003e predicate);"},{"lineNumber":64,"author":{"gitID":"mhq199657"},"content":""},{"lineNumber":65,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":66,"author":{"gitID":"kexiaowen"},"content":"     * Sorts the filtered person list based on {@code sortField} in ascending order"},{"lineNumber":67,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":68,"author":{"gitID":"kexiaowen"},"content":"    void sortPersonListAscOrder(SortCommand.SortField sortField);"},{"lineNumber":69,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":70,"author":{"gitID":"kexiaowen"},"content":"    /**"},{"lineNumber":71,"author":{"gitID":"kexiaowen"},"content":"     * Sorts the filtered person list based on {@code sortField} in descending order"},{"lineNumber":72,"author":{"gitID":"kexiaowen"},"content":"     */"},{"lineNumber":73,"author":{"gitID":"kexiaowen"},"content":"    void sortPersonListDescOrder(SortCommand.SortField sortField);"},{"lineNumber":74,"author":{"gitID":"kexiaowen"},"content":""},{"lineNumber":75,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"kexiaowen":11,"mhq199657":2,"-":53,"Ang-YC":9}},{"path":"src/main/java/seedu/address/model/person/UniversityContainsKeywordsPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.FindCommand;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.model.FindResults;"},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" * Tests that a {@code Person}\u0027s {@code University} matches any of the keywords given."},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":"public class UniversityContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {"},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private final List\u003cString\u003e keywords;"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":"    private final String commandPrefix \u003d \"u/\";"},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"    public UniversityContainsKeywordsPredicate(List\u003cString\u003e keywords) {"},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"        this.keywords \u003d keywords;"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"    public boolean test(Person person) {"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"        return keywords.stream()"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                .anyMatch(keyword -\u003e FindResults.getInstance()"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":"                        .containsWordIgnoreCase(person.getUniversity().value, keyword, commandPrefix)"},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":"                        || keywords.stream()"},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"                        .anyMatch(fuzzyKeyword -\u003e FindResults.getInstance().containsFuzzyMatchIgnoreCase("},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"                                person.getUniversity().value, fuzzyKeyword, commandPrefix,"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"                                FindCommand.LEVENSHTEIN_DISTANCE_THRESHOLD)));"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof UniversityContainsKeywordsPredicate // instanceof handles nulls"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.keywords.equals(((UniversityContainsKeywordsPredicate) other).keywords)); // state check"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"-":6,"tanhengyeow":33}},{"path":"src/main/java/seedu/address/model/person/CommentPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"tanhengyeow"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":3,"author":{"gitID":"tanhengyeow"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitID":"tanhengyeow"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.logic.parser.PredicateUtil;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":" * Represents a Comment predicate"},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"public class CommentPredicate implements FieldPredicate {"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private Predicate\u003cPerson\u003e commentPredicate \u003d null;"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"     * Constructs an {@code CommentPredicate}."},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"     * @param substringKeywords stores user argument that matches substring"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"     * @param exactKeywords stores user argument that matches exact keywords"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"     * @param prefixKeywords stores user argument that matches prefix"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"     * @param suffixKeywords stores user argument that matches suffix"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"    public CommentPredicate(ArrayList\u003cString\u003e exactKeywords, ArrayList\u003cString\u003e substringKeywords,"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                            ArrayList\u003cString\u003e prefixKeywords, ArrayList\u003cString\u003e suffixKeywords) {"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":"        CommentContainsKeywordsPredicate commentContainsKeywordsPredicate \u003d null;"},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        CommentContainsSubstringsPredicate commentContainsSubstringsPredicate \u003d null;"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        CommentContainsPrefixesPredicate commentContainsPrefixesPredicate \u003d null;"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        CommentContainsSuffixesPredicate commentContainsSuffixesPredicate \u003d null;"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        if (!exactKeywords.isEmpty()) {"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"            commentContainsKeywordsPredicate \u003d"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"                    new CommentContainsKeywordsPredicate(exactKeywords);"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        if (!substringKeywords.isEmpty()) {"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"            commentContainsSubstringsPredicate \u003d new CommentContainsSubstringsPredicate(substringKeywords);"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        if (!prefixKeywords.isEmpty()) {"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"            commentContainsPrefixesPredicate \u003d new CommentContainsPrefixesPredicate(prefixKeywords);"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        if (!suffixKeywords.isEmpty()) {"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"            commentContainsSuffixesPredicate \u003d new CommentContainsSuffixesPredicate(suffixKeywords);"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":"        if (!exactKeywords.isEmpty() || !substringKeywords.isEmpty()"},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"                || !prefixKeywords.isEmpty() || !suffixKeywords.isEmpty()) {"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"            this.commentPredicate \u003d new PredicateUtil().formOrPredicate(commentContainsKeywordsPredicate,"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"                    commentContainsSubstringsPredicate, commentContainsPrefixesPredicate,"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"                    commentContainsSuffixesPredicate);"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"    public Predicate\u003cPerson\u003e getPredicate() {"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"        return commentPredicate;"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"    public String toString() {"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":"        return commentPredicate.toString();"},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof CommentPredicate // instanceof handles nulls"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.commentPredicate.equals(((CommentPredicate) other).commentPredicate)); // state check"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":69,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":70,"author":{"gitID":"tanhengyeow"},"content":"    public int hashCode() {"},{"lineNumber":71,"author":{"gitID":"tanhengyeow"},"content":"        return commentPredicate.hashCode();"},{"lineNumber":72,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":74,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"tanhengyeow":74}},{"path":"src/main/java/seedu/address/model/person/UniversityPredicate.java","lines":[{"lineNumber":1,"author":{"gitID":"tanhengyeow"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":3,"author":{"gitID":"tanhengyeow"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitID":"tanhengyeow"},"content":"import java.util.function.Predicate;"},{"lineNumber":5,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":6,"author":{"gitID":"tanhengyeow"},"content":"import seedu.address.logic.parser.PredicateUtil;"},{"lineNumber":7,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":8,"author":{"gitID":"tanhengyeow"},"content":"//@@author tanhengyeow"},{"lineNumber":9,"author":{"gitID":"tanhengyeow"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"tanhengyeow"},"content":" * Represents a University predicate"},{"lineNumber":11,"author":{"gitID":"tanhengyeow"},"content":" */"},{"lineNumber":12,"author":{"gitID":"tanhengyeow"},"content":"public class UniversityPredicate implements FieldPredicate {"},{"lineNumber":13,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":14,"author":{"gitID":"tanhengyeow"},"content":"    private Predicate\u003cPerson\u003e universityPredicate \u003d null;"},{"lineNumber":15,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":16,"author":{"gitID":"tanhengyeow"},"content":"    /**"},{"lineNumber":17,"author":{"gitID":"tanhengyeow"},"content":"     * Constructs an {@code UniversityPredicate}."},{"lineNumber":18,"author":{"gitID":"tanhengyeow"},"content":"     * @param substringKeywords stores user argument that matches substring"},{"lineNumber":19,"author":{"gitID":"tanhengyeow"},"content":"     * @param exactKeywords stores user argument that matches exact keywords"},{"lineNumber":20,"author":{"gitID":"tanhengyeow"},"content":"     * @param prefixKeywords stores user argument that matches prefix"},{"lineNumber":21,"author":{"gitID":"tanhengyeow"},"content":"     * @param suffixKeywords stores user argument that matches suffix"},{"lineNumber":22,"author":{"gitID":"tanhengyeow"},"content":"     */"},{"lineNumber":23,"author":{"gitID":"tanhengyeow"},"content":"    public UniversityPredicate(ArrayList\u003cString\u003e exactKeywords, ArrayList\u003cString\u003e substringKeywords,"},{"lineNumber":24,"author":{"gitID":"tanhengyeow"},"content":"                               ArrayList\u003cString\u003e prefixKeywords, ArrayList\u003cString\u003e suffixKeywords) {"},{"lineNumber":25,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":26,"author":{"gitID":"tanhengyeow"},"content":"        UniversityContainsKeywordsPredicate universityContainsKeywordsPredicate \u003d null;"},{"lineNumber":27,"author":{"gitID":"tanhengyeow"},"content":"        UniversityContainsSubstringsPredicate universityContainsSubstringsPredicate \u003d null;"},{"lineNumber":28,"author":{"gitID":"tanhengyeow"},"content":"        UniversityContainsPrefixesPredicate universityContainsPrefixesPredicate \u003d null;"},{"lineNumber":29,"author":{"gitID":"tanhengyeow"},"content":"        UniversityContainsSuffixesPredicate universityContainsSuffixesPredicate \u003d null;"},{"lineNumber":30,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":31,"author":{"gitID":"tanhengyeow"},"content":"        if (!exactKeywords.isEmpty()) {"},{"lineNumber":32,"author":{"gitID":"tanhengyeow"},"content":"            universityContainsKeywordsPredicate \u003d"},{"lineNumber":33,"author":{"gitID":"tanhengyeow"},"content":"                    new UniversityContainsKeywordsPredicate(exactKeywords);"},{"lineNumber":34,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":35,"author":{"gitID":"tanhengyeow"},"content":"        if (!substringKeywords.isEmpty()) {"},{"lineNumber":36,"author":{"gitID":"tanhengyeow"},"content":"            universityContainsSubstringsPredicate \u003d new UniversityContainsSubstringsPredicate(substringKeywords);"},{"lineNumber":37,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":38,"author":{"gitID":"tanhengyeow"},"content":"        if (!prefixKeywords.isEmpty()) {"},{"lineNumber":39,"author":{"gitID":"tanhengyeow"},"content":"            universityContainsPrefixesPredicate \u003d new UniversityContainsPrefixesPredicate(prefixKeywords);"},{"lineNumber":40,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":41,"author":{"gitID":"tanhengyeow"},"content":"        if (!suffixKeywords.isEmpty()) {"},{"lineNumber":42,"author":{"gitID":"tanhengyeow"},"content":"            universityContainsSuffixesPredicate \u003d new UniversityContainsSuffixesPredicate(suffixKeywords);"},{"lineNumber":43,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":44,"author":{"gitID":"tanhengyeow"},"content":"        if (!exactKeywords.isEmpty() || !substringKeywords.isEmpty()"},{"lineNumber":45,"author":{"gitID":"tanhengyeow"},"content":"                || !prefixKeywords.isEmpty() || !suffixKeywords.isEmpty()) {"},{"lineNumber":46,"author":{"gitID":"tanhengyeow"},"content":"            this.universityPredicate \u003d new PredicateUtil().formOrPredicate(universityContainsKeywordsPredicate,"},{"lineNumber":47,"author":{"gitID":"tanhengyeow"},"content":"                    universityContainsSubstringsPredicate, universityContainsPrefixesPredicate,"},{"lineNumber":48,"author":{"gitID":"tanhengyeow"},"content":"                    universityContainsSuffixesPredicate);"},{"lineNumber":49,"author":{"gitID":"tanhengyeow"},"content":"        }"},{"lineNumber":50,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":51,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":52,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":53,"author":{"gitID":"tanhengyeow"},"content":"    public Predicate\u003cPerson\u003e getPredicate() {"},{"lineNumber":54,"author":{"gitID":"tanhengyeow"},"content":"        return universityPredicate;"},{"lineNumber":55,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":57,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":58,"author":{"gitID":"tanhengyeow"},"content":"    public String toString() {"},{"lineNumber":59,"author":{"gitID":"tanhengyeow"},"content":"        return universityPredicate.toString();"},{"lineNumber":60,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":61,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":62,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":63,"author":{"gitID":"tanhengyeow"},"content":"    public boolean equals(Object other) {"},{"lineNumber":64,"author":{"gitID":"tanhengyeow"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":65,"author":{"gitID":"tanhengyeow"},"content":"                || (other instanceof UniversityPredicate // instanceof handles nulls"},{"lineNumber":66,"author":{"gitID":"tanhengyeow"},"content":"                \u0026\u0026 this.universityPredicate.equals(((UniversityPredicate) other).universityPredicate)); // state check"},{"lineNumber":67,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":69,"author":{"gitID":"tanhengyeow"},"content":"    @Override"},{"lineNumber":70,"author":{"gitID":"tanhengyeow"},"content":"    public int hashCode() {"},{"lineNumber":71,"author":{"gitID":"tanhengyeow"},"content":"        return universityPredicate.hashCode();"},{"lineNumber":72,"author":{"gitID":"tanhengyeow"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"tanhengyeow"},"content":""},{"lineNumber":74,"author":{"gitID":"tanhengyeow"},"content":"}"}],"authorContributionMap":{"tanhengyeow":74}}]
