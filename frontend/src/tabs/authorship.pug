#authorship
  .panel-title
    span Code Panel
  .toolbar--multiline
    a(v-if="activeFilesCount < this.selectedFiles.length", v-on:click="expandAll()") show all file details
    a(v-if="activeFilesCount > 0", v-on:click="collapseAll()") hide all file details
  .panel-heading
    a.group-name(
      v-bind:href="info.location", target="_blank",
      v-bind:title="'Click to open the repo'"
    ) {{ info.repo }}
    .author(v-if="!info.isMergeGroup")
      span &#8627; &nbsp;
      span {{ info.name }} ({{ info.author }})
    .period
      span &#8627; &nbsp;
      span {{ info.minDate }} to {{ info.maxDate }} &nbsp;&nbsp; ({{ selectedFiles.length }} files changed)
  .title
    .contribution(v-if="isLoaded && files.length!=0")
      .sorting.mui-form--inline
        .mui-select
          select(v-model="filesSortType")
            option(value="lineOfCode") LoC
            option(value="path") Path
            option(value="fileName") File Name
            option(value="fileType") File Type
          label sort by
        .mui-select.sort-order
          select(v-model="toReverseSortFiles")
            option(v-bind:value='true') Descending
            option(v-bind:value='false') Ascending
          label order
      .searchbox
        input.radio-button--search(
          type="radio",
          value="search",
          v-model="filterType",
          v-on:change="indicateSearchBar(); updateSearchBarValue();"
        )
        .file-picker.mui-form--inline
          input#search(
            type="search",
            placeholder="Filter by glob",
            ref="searchBar",
            v-bind:value="searchBarValue",
            v-on:focus="indicateSearchBar",
            v-on:keyup.enter="updateSearchBarValue"
          )
          button#submit-button(
            type="button",
            v-on:click="indicateSearchBar(); updateSearchBarValue();"
          ) Filter
      .fileTypes
        input.radio-button--checkbox(
          type="radio",
          value="checkboxes",
          v-model="filterType",
          v-on:change="indicateCheckBoxes"
        )
        .checkboxes.mui-form--inline(v-if="files.length > 0")
          label(style='background-color: #000000; color: #ffffff')
            input.mui-checkbox--fileType(type="checkbox", v-model="isSelectAllChecked")
            span(v-bind:title="getTotalFileBlankLineInfo()")
              span All&nbsp;
              span {{ totalLineCount }}&nbsp;
              span ({{ totalBlankLineCount }})&nbsp;
          template(v-for="fileType in Object.keys(fileTypeLinesObj)")
            label(
              v-bind:key="fileType",
              v-bind:style="{\
                'background-color': info.fileTypeColors[fileType],\
                'color': this.getFontColor(info.fileTypeColors[fileType])\
                }"
            )
              input.mui-checkbox--fileType(type="checkbox", v-bind:id="fileType", v-bind:value="fileType",
                v-on:change="indicateCheckBoxes", v-model="selectedFileTypes")
              span(v-bind:title="getFileTypeBlankLineInfo(fileType)")
                span {{ fileType }}&nbsp;{{ fileTypeLinesObj[fileType] }}&nbsp;
                span ({{ fileTypeBlankLinesObj[fileType] }})&nbsp;

  .files(v-if="isLoaded")
    .empty(v-if="files.length === 0") nothing to see here :(
    template(v-for="(file, i) in selectedFiles")
      .file(v-bind:key="file.path")
        .title
          span.path(v-on:click="toggleFileActiveProperty(file)")
            font-awesome-icon(icon="caret-down", fixed-width, v-show="file.active")
            font-awesome-icon(icon="caret-right", fixed-width, v-show="!file.active")
            span {{ i + 1 }}. &nbsp;&nbsp; {{ file.path }} &nbsp;
          span.icons
            a(
              v-bind:href="getFileLink(file, 'commits')", target="_blank",
              title="click to view the history view of file"
            )
              font-awesome-icon.button(icon="history")
            a(
              v-bind:href="getFileLink(file, 'blame')", target="_blank",
              title="click to view the blame view of file"
            )
              font-awesome-icon.button(icon="user-edit")
          span.fileTypeLabel(
            v-bind:style="{\
              'background-color': info.fileTypeColors[file.fileType],\
              'color': this.getFontColor(info.fileTypeColors[file.fileType])\
              }"
          ) {{ file.fileType }}&nbsp;{{ file.lineCount }}&nbsp;({{ file.blankLineCount }})
        pre.hljs.file-content(v-if="file.wasCodeLoaded", v-show="file.active")
          template(v-for="segment in file.segments")
            v-segment(v-bind:segment="segment", v-bind:path="file.path")

  .empty(v-else) loading...
