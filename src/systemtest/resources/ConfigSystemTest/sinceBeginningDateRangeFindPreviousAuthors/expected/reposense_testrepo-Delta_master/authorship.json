[{"path":"README.adoc","fileType":"adoc","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003d My Team Manager","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"ifdef::env-github,env-browser[:relfileprefix: docs/]","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lithiumlkid"},"content":"https://travis-ci.org/CS2103JAN2018-F14-B1/main[image:https://travis-ci.org/CS2103JAN2018-F14-B1/main.svg?branch\u003dmaster[Build Status]]","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lithiumlkid"},"content":"https://ci.appveyor.com/project/lithiumlkid/main/branch/master[image:https://ci.appveyor.com/api/projects/status/2itvfqp2b8xnaqqn/branch/master?svg\u003dtrue[Build status]]","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lithiumlkid"},"content":"https://coveralls.io/github/CS2103JAN2018-F14-B1/main?branch\u003dmaster[image:https://coveralls.io/repos/github/CS2103JAN2018-F14-B1/main/badge.svg?branch\u003dmaster[Coverage Status]]","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lithiumlkid"},"content":"image:https://circleci.com/gh/CS2103JAN2018-F14-B1/main.svg?style\u003dsvg[\"CircleCI\", link\u003d\"https://circleci.com/gh/CS2103JAN2018-F14-B1/main\"]","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"https://gitter.im/se-edu/Lobby[image:https://badges.gitter.im/se-edu/Lobby.svg[Gitter chat]]","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"ifdef::env-github[]","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"image::docs/images/MyTeamManagerLogo.png[width\u003d\"100\", align\u003d\"center\"]","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"endif::[]","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"ifndef::env-github[]","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"image::images/MyTeamManagerLogo.png[width\u003d\"600\", align\u003d\"center\"]","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"endif::[]","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"ifdef::env-github[]","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"image::docs/images/Ui.png[width\u003d\"600\", align\u003d\"center\"]","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"endif::[]","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"ifndef::env-github[]","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"image::images/Ui.png[width\u003d\"600\", align\u003d\"center\"]","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"endif::[]","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003d\u003d Introduction to MTM","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"codeeong"},"content":"My Team Manager (MTM) is a desktop based team managing application for football team managers. +","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"codeeong"},"content":"It uses a Command Line Interface (CLI).","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"codeeong"},"content":"MTM is equipped with multiple features in helping you efficiently","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codeeong"},"content":"and effectively manage your players, while keeping track of the team\u0027s schedule. +","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codeeong"},"content":"With MTM\u0027s aesthetically pleasing graphical user interface, viewing critical information will be quick and painless.","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"codeeong"},"content":"Never lose track of your training schedule again! +","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codeeong"},"content":"Say goodbye to manual tracking of information on excel sheet after excel sheet!","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"codeeong"},"content":"\u003d\u003d What MTM Can Do - Key Features","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"codeeong"},"content":"* Set up Teams","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"codeeong"},"content":"* Add Players to Teams","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lithiumlkid"},"content":"* Add Player\u0027s personal details, position, rating, avatar etc.","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"codeeong"},"content":"* View, Edit and Delete Players","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"codeeong"},"content":"* Sort players by field of choice","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"Come and take a look at our \u003c\u003cUserGuide#, User Guide\u003e\u003e to get started with MTM now.","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003d\u003d Site Map","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"* \u003c\u003cUserGuide#, User Guide\u003e\u003e","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"* \u003c\u003cDeveloperGuide#, Developer Guide\u003e\u003e","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"* \u003c\u003cAboutUs#, About Us\u003e\u003e","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"* \u003c\u003cContactUs#, Contact Us\u003e\u003e","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003d\u003d Acknowledgements","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"* My Team Manager is morphed from https://github.com/se-edu/addressbook-level4[AddressBook-Level4] application, a project created by SE-EDU initiative.","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Some parts of this sample application were inspired by the excellent http://code.makery.ch/library/javafx-8-tutorial/[Java FX tutorial] by","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"_Marco Jakob_.","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Libraries used: https://github.com/TomasMikula/EasyBind[EasyBind], https://github.com/TestFX/TestFX[TextFX], https://bitbucket.org/controlsfx/controlsfx/[ControlsFX], https://github.com/FasterXML/jackson[Jackson], https://github.com/google/guava[Guava], https://github.com/junit-team/junit4[JUnit4]","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003d\u003d Licence : link:LICENSE[MIT]","isFullCredit":false}],"authorContributionMap":{"lithiumlkid":5,"codeeong":16,"-":41}},{"path":"docs/DeveloperGuide.adoc","fileType":"adoc","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003d My Team Manager - Developer Guide","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":":toc:","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":":toc-title:","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":":toclevels: 3","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":":toc-placement: preamble","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":":sectnums:","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":":imagesDir: images","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":":stylesDir: stylesheets","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":":xrefstyle: full","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"ifdef::env-github[]","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":":tip-caption: :bulb:","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":":note-caption: :information_source:","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"endif::[]","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lithiumlkid"},"content":":repoURL: https://github.com/CS2103JAN2018-F14-B1/main/tree/master","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"By: `F14-B1`      Since: `Mar 2018`      Licence: `MIT`","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"// tag::overview[]","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003d\u003d Overview","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"My Team Manager (MTM) is a team managing application for football coaches. MTM is designed to be quick and easy for you to manage a team of players without the need of a mouse.","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"This developer\u0027s guide provides information that will not only show the design principles of the project, but allow you to understand the different implementations, and give you the opportunity to get started with being a contributor or as a reference for experienced developer.","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"This developer\u0027s guide consist of the following sections:","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"* \u003c\u003cSetting up, Setting up\u003e\u003e","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"* \u003c\u003cDesign, Design\u003e\u003e","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"* \u003c\u003cImplementation, Implementation\u003e\u003e","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"* \u003c\u003cDocumentation, Documentation\u003e\u003e","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"* \u003c\u003cTesting, Testing\u003e\u003e","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"* \u003c\u003cDev Ops, Dev Ops\u003e\u003e","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"// end::overview[]","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003d\u003d Setting up","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"The following pointers teach you how to get started with developing on our application. You’ll learn how to prepare yourself with the project on IntelliJ and run it. Then, you’ll update configurations in IntelliJ to easily match the coding standards and you’ll be ready to start coding.","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"But before you start, there are two fundamental prerequisites you should know about MTM:","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Prerequisites","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"MTM is written in Java 8 and with the use of an integrated development environment (IDE) such as IntelliJ, it provides you as a developer with a better environment suited for developing MTM to maintain coding standards and provide continuous integration.","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":". You are required to have *JDK `1.8.0_60`* or later,","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"+","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"[NOTE]","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"Having any Java 8 version is not enough. +","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"This app will not work with earlier versions of Java 8. +","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"You can download Java 8 from link:http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151[here].","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"+","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":". and *IntelliJ* IDE.","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"+","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"[NOTE]","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"IntelliJ by default has Gradle and JavaFx plugins installed. +","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"Do not disable them. If you have disabled them, go to `File` \u003e `Settings` \u003e `Plugins` to re-enable them. +","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"You can download IntelliJ from link:https://www.jetbrains.com/idea/download/#section\u003dwindows[here].","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Setting up the project on your computer","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"Before you begin setting up the project, please ensure that you’ve done the following on our GitHub repository (repo).","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":". Fork this repo, and clone the fork to your computer","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"Upon completion of forking from our GitHub repo, you can proceed to set up your project on IntelliJ.","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":". Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":". Set up the correct JDK version for Gradle","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":".. Click `Configure` \u003e `Project Defaults` \u003e `Project Structure`","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":".. Click `New...` and find the directory of the JDK","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":". Click `Import Project`","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":". Locate the `build.gradle` file and select it. Click `OK`","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":". Click `Open as Project`","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":". Click `OK` to accept the default settings","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":". Open a console and run the command `gradlew processResources` (Mac/Linux: `./gradlew processResources`). It should finish with the `BUILD SUCCESSFUL` message which will generate all resources required by the application and tests.","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Verifying the setup","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"Now that you’ve properly setup your project, you can verify that you have done everything properly.","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":". Run the `seedu.address.MainApp` and try a few commands","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":". \u003c\u003cTesting,Run the tests\u003e\u003e to ensure they all pass.","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Configurations to do before writing code","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"You have verified the setup and you’re all ready to dive into the code, but before you do, check out the following configurations that will help you make your coding more integrated and accurate.","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Configuring the coding style","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"This project follows https://github.com/oss-generic/process/blob/master/docs/CodingStandards.adoc[oss-generic coding standards]. IntelliJ\u0027s default style is mostly compliant with ours but it uses a different import order from ours. To rectify,","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":". Go to `File` \u003e `Settings...` (Windows/Linux), or `IntelliJ IDEA` \u003e `Preferences...` (macOS)","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":". Select `Editor` \u003e `Code Style` \u003e `Java`","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":". Click on the `Imports` tab to set the order","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"* For `Class count to use import with \u0027\\*\u0027` and `Names count to use static import with \u0027*\u0027`: Set to `999` to prevent IntelliJ from contracting the import statements","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"* For `Import Layout`: The order is `import static all other imports`, `import java.\\*`, `import javax.*`, `import org.\\*`, `import com.*`, `import all other imports`. Add a `\u003cblank line\u003e` between each `import`","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"Optionally, you can follow the \u003c\u003cUsingCheckstyle#, UsingCheckstyle.adoc\u003e\u003e document to configure Intellij to check style-compliance as you write code.","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Updating documentation to match your fork","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"After forking the repo, links in the documentation will still point to the `se-edu/addressbook-level4` repo. If you plan to develop this as a separate product (i.e. instead of contributing to the `se-edu/addressbook-level4`) , you should replace the URL in the variable `repoURL` in `DeveloperGuide.adoc` and `UserGuide.adoc` with the URL of your fork.","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Setting up CI","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"Set up Travis to perform Continuous Integration (CI) for your fork. See \u003c\u003cUsingTravis#, UsingTravis.adoc\u003e\u003e to learn how to set it up.","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"After setting up Travis, you can optionally set up coverage reporting for your team fork (see \u003c\u003cUsingCoveralls#, UsingCoveralls.adoc\u003e\u003e).","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"[NOTE]","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"Coverage reporting could be useful for a team repository that hosts the final version but it is not that useful for your personal fork.","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"Optionally, you can set up AppVeyor as a second CI (see \u003c\u003cUsingAppVeyor#, UsingAppVeyor.adoc\u003e\u003e).","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"[NOTE]","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"Having both Travis and AppVeyor ensures your App works on both Unix-based platforms and Windows-based platforms (Travis is Unix-based and AppVeyor is Windows-based)","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Getting started with coding","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"When you are ready to start coding,","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"1. Get some sense of the overall design by reading \u003c\u003cDesign-Architecture\u003e\u003e.","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"2. Dive right in and get started with programming.","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"\u003d\u003d Design","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"lithiumlkid"},"content":"After you have successfully configured MTM, you are encouraged to read through the following section to understand the design of the software. The design section covers a high level overview the architecture and components of the software, as well as how common classes, configuration and logging throughout development are being used.","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"[[Design-Architecture]]","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"lithiumlkid"},"content":"\u003d\u003d\u003d Software Architecture","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"lithiumlkid"},"content":"The *_Architecture Diagram_* given below (Figure 1) explains the high-level design of the App.","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":".Architecture Diagram","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"image::Architecture.png[width\u003d\"600\"]","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"lithiumlkid"},"content":"Given below is a quick overview of each component.","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"[TIP]","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"The `.pptx` files used to create diagrams in this document can be found in the link:{repoURL}/docs/diagrams/[diagrams] folder. To update a diagram, modify the diagram in the pptx file, select the objects of the diagram, and choose `Save as picture`.","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"`Main` has only one class called link:{repoURL}/src/main/java/seedu/address/MainApp.java[`MainApp`]. It is responsible for,","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup method where necessary.","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"\u003c\u003cDesign-Commons,*`Commons`*\u003e\u003e represents a collection of classes used by multiple other components. Two of those classes play important roles at the architecture level.","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"* `EventsCenter` : This class (written using https://github.com/google/guava/wiki/EventBusExplained[Google\u0027s Event Bus library]) is used by components to communicate with other components using events (i.e. a form of _Event Driven_ design)","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"* `LogsCenter` : Used by many classes to write log messages to the App\u0027s log file.","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"* \u003c\u003cDesign-Ui,*`UI`*\u003e\u003e: The UI of the App.","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"* \u003c\u003cDesign-Logic,*`Logic`*\u003e\u003e: The command executor.","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"* \u003c\u003cDesign-Model,*`Model`*\u003e\u003e: Holds the data of the App in-memory.","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"* \u003c\u003cDesign-Storage,*`Storage`*\u003e\u003e: Reads data from, and writes data to, the hard disk.","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"Each of the four components","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"* Defines its _API_ in an `interface` with the same name as the Component.","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"* Exposes its functionality using a `{Component Name}Manager` class.","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"For example, the `Logic` component (see the class diagram given below) defines it\u0027s API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class.","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":".Class Diagram of the Logic Component","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"image::LogicClassDiagram.png[width\u003d\"800\"]","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"[discrete]","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Events-Driven nature of the design","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"The _Sequence Diagram_ below shows how the components interact for the scenario where the user issues the command `delete 1`.","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":".Component interactions for `delete 1` command (part 1)","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"image::SDforDeletePerson.png[width\u003d\"800\"]","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"[NOTE]","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"Note how the `Model` simply raises a `AddressBookChangedEvent` when the Address Book data are changed, instead of asking the `Storage` to save the updates to the hard disk.","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"The diagram below shows how the `EventsCenter` reacts to that event, which eventually results in the updates being saved to the hard disk and the status bar of the UI being updated to reflect the \u0027Last Updated\u0027 time.","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":".Component interactions for `delete 1` command (part 2)","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"image::SDforDeletePersonEventHandling.png[width\u003d\"800\"]","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"[NOTE]","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"Note how the event is propagated through the `EventsCenter` to the `Storage` and `UI` without `Model` having to be coupled to either of them. This is an example of how this Event Driven approach helps us reduce direct coupling between components.","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"[[Design-Ui]]","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d UI component","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"lithiumlkid"},"content":"The UI Component contains a MainWindow that consists of various parts e.g. CommandBox, ResultDisplayer, TeamDetails, PersonListPanel, PlayerDetails etc. The UI classes are all child classes of the abstract UiPart class.","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"lithiumlkid"},"content":"The structure of the UI component is shown in the figure below:","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":".Structure of the UI Component","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"image::UiClassDiagram.png[width\u003d\"800\"]","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"*API* : link:{repoURL}/src/main/java/seedu/address/ui/Ui.java[`Ui.java`]","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter`, `PlayerDetails` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class.","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the link:{repoURL}/src/main/java/seedu/address/ui/MainWindow.java[`MainWindow`] is specified in link:{repoURL}/src/main/resources/view/MainWindow.fxml[`MainWindow.fxml`]","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"The `UI` component,","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component.","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"* Binds itself to some data in the `Model` so that the UI can auto-update when data in the `Model` change.","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"* Responds to events raised from various parts of the App and updates the UI accordingly.","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"[[Design-Logic]]","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Logic component","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"lithiumlkid"},"content":"The Logic Component handles how each command would be parsed and executed. The class diagrams below illustrates the structure of the Logic Component and the structure of each individual commands.","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"[[fig-LogicClassDiagram]]","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":".Structure of the Logic Component","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"image::LogicClassDiagram.png[width\u003d\"800\"]","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":".Structure of Commands in the Logic Component. This diagram shows finer details concerning `XYZCommand` and `Command` in \u003c\u003cfig-LogicClassDiagram\u003e\u003e","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"image::LogicCommandClassDiagram.png[width\u003d\"800\"]","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"*API* :","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"link:{repoURL}/src/main/java/seedu/address/logic/Logic.java[`Logic.java`]","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":".  `Logic` uses the `AddressBookParser` class to parse the user command.","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":".  This results in a `Command` object which is executed by the `LogicManager`.","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":".  The command execution can affect the `Model` (e.g. adding a person) and/or raise events.","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":".  The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`.","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":".Interactions Inside the Logic Component for the `delete 1` Command","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"image::DeletePersonSdForLogic.png[width\u003d\"800\"]","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"[[Design-Model]]","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Model component","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"lithiumlkid"},"content":"The Model Component handles the players and teams data structures in My Team Manager.  These structures also provide APIs to create, read, update and delete the details of these objects. The class diagram below shows the structure of the Model Component.","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":".Structure of the Model Component","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"image::ModelClassDiagram.png[width\u003d\"800\"]","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"*API* : link:{repoURL}/src/main/java/seedu/address/model/Model.java[`Model.java`]","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"The `Model`,","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user\u0027s preferences.","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"* stores the Address Book data.","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components.","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"[[Design-Storage]]","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Storage component","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"lithiumlkid"},"content":"Any changes made to the data is retained and handled by the Storage Component. The structure of this component is shown in Figure 10 below.","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":".Structure of the Storage Component","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"image::StorageClassDiagram.png[width\u003d\"800\"]","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"*API* : link:{repoURL}/src/main/java/seedu/address/storage/Storage.java[`Storage.java`]","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"The `Storage` component,","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back.","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"* can save the Address Book data in xml format and read it back.","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"[[Design-Commons]]","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Common classes","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"lithiumlkid"},"content":"All classes used by the different components can be found in the `seedu.addressbook.commons` package.","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Configuration","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"Certain properties of the application can be controlled (e.g App name, logging level) through the configuration file (default: `config.json`).","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"// tag::logging[]","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Logging","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"We are using `java.util.logging` package for logging. The `LogsCenter` class is used to manage the logging levels and logging destinations.","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"lithiumlkid"},"content":"* The logging level can be controlled using the `logLevel` setting in the configuration file (See \u003c\u003cConfiguration,Configuration\u003e\u003e)","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"* The `Logger` for a class can be obtained using `LogsCenter.getLogger(Class)` which will log messages according to the specified logging level","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"* Currently log messages are output through: `Console` and to a `.log` file.","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"*Logging Levels*","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"* `SEVERE` : Critical problem detected which may possibly cause the termination of the application","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"* `WARNING` : Can continue, but with caution","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"* `INFO` : Information showing the noteworthy actions by the App","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"* `FINE` : Details that is not usually noteworthy but may be useful in debugging e.g. print the actual list instead of just its size","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"[[Implementation-Configuration]]","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"// end::logging[]","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003d\u003d Implementation","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Pre-existing","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"// tag::undoredo[]","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Undo/Redo feature","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Current Implementation","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"The undo/redo mechanism is facilitated by an `UndoRedoStack`, which resides inside `LogicManager`. It supports undoing and redoing of commands that modifies the state of the address book (e.g. `add`, `edit`). Such commands will inherit from `UndoableCommand`.","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"`UndoRedoStack` only deals with `UndoableCommands`. Commands that cannot be undone will inherit from `Command` instead. The following diagram shows the inheritance diagram for commands:","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"lohtianwei"},"content":".Logic Class Diagram","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"image::LogicCommandClassDiagram.png[width\u003d\"800\"]","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"As you can see from the diagram, `UndoableCommand` adds an extra layer between the abstract `Command` class and concrete commands that can be undone, such as the `DeleteCommand`. Note that extra tasks need to be done when executing a command in an _undoable_ way, such as saving the state of the address book before execution. `UndoableCommand` contains the high-level algorithm for those extra tasks while the child classes implements the details of how to execute the specific command. Note that this technique of putting the high-level algorithm in the parent class and lower-level steps of the algorithm in child classes is also known as the https://www.tutorialspoint.com/design_pattern/template_pattern.htm[template pattern].","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"Commands that are not undoable are implemented this way:","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"[source,java]","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"    public CommandResult execute() {","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"        // ... list logic ...","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"With the extra layer, the commands that are undoable are implemented this way:","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"[source,java]","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"public abstract class UndoableCommand extends Command {","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public CommandResult execute() {","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"        // ... undo logic ...","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"        executeUndoableCommand();","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"public class DeleteCommand extends UndoableCommand {","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"    public CommandResult executeUndoableCommand() {","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"        // ... delete logic ...","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"Suppose that the user has just launched the application. The `UndoRedoStack` will be empty at the beginning.","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"The user executes a new `UndoableCommand`, `delete 5`, to delete the 5th person in the address book. The current state of the address book is saved before the `delete 5` command executes. The `delete 5` command will then be pushed onto the `undoStack` (the current state is saved together with the command).","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"lohtianwei"},"content":".Undo/Redo Stack Diagram (Part 1)","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"image::UndoRedoStartingStackDiagram.png[width\u003d\"800\"]","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"As the user continues to use the program, more commands are added into the `undoStack`. For example, the user may execute `add n/David ...` to add a new person.","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"lohtianwei"},"content":".Undo/Redo New Command Stack Diagram (Part 1)","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"image::UndoRedoNewCommand1StackDiagram.png[width\u003d\"800\"]","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"[NOTE]","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"If a command fails its execution, it will not be pushed to the `UndoRedoStack` at all.","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"The user now decides that adding the person was a mistake, and decides to undo that action using `undo`.","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"We will pop the most recent command out of the `undoStack` and push it back to the `redoStack`. We will restore the address book to the state before the `add` command executed.","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"lohtianwei"},"content":".Undo/Redo Stack Diagram (Part 2)","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"image::UndoRedoExecuteUndoStackDiagram.png[width\u003d\"800\"]","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"[NOTE]","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"If the `undoStack` is empty, then there are no other commands left to be undone, and an `Exception` will be thrown when popping the `undoStack`.","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"lohtianwei"},"content":".Undo/Redo Sequence Diagram","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"image::UndoRedoSequenceDiagram.png[width\u003d\"800\"]","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"The redo does the exact opposite (pops from `redoStack`, push to `undoStack`, and restores the address book to the state after the command is executed).","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"[NOTE]","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"If the `redoStack` is empty, then there are no other commands left to be redone, and an `Exception` will be thrown when popping the `redoStack`.","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"The user now decides to execute a new command, `clear`. As before, `clear` will be pushed into the `undoStack`. This time the `redoStack` is no longer empty. It will be purged as it no longer make sense to redo the `add n/David` command (this is the behavior that most modern desktop applications follow).","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"lohtianwei"},"content":".Undo/Redo New Command Stack Diagram (Part 2)","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"image::UndoRedoNewCommand2StackDiagram.png[width\u003d\"800\"]","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"Commands that are not undoable are not added into the `undoStack`. For example, `list`, which inherits from `Command` rather than `UndoableCommand`, will not be added after execution:","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"lohtianwei"},"content":".Undo/Redo New Command Stack Diagram (Part 3)","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"image::UndoRedoNewCommand3StackDiagram.png[width\u003d\"800\"]","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"The following activity diagram summarize what happens inside the `UndoRedoStack` when a user executes a new command:","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"lohtianwei"},"content":".Undo/Redo Activity Diagram","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"image::UndoRedoActivityDiagram.png[width\u003d\"650\"]","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Design Considerations","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d Aspect: Implementation of `UndoableCommand`","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Add a new abstract method `executeUndoableCommand()`.","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"** Pros: We will not lose any undone/redone functionality as it is now part of the default behaviour. Classes that deal with `Command` do not have to know that `executeUndoableCommand()` exist.","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"** Cons: Hard for new developers to understand the template pattern.","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"* **Alternative 2:** Just override `execute()`.","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"** Pros: Does not involve the template pattern, easier for new developers to understand.","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"** Cons: Classes that inherit from `UndoableCommand` must remember to call `super.execute()`, or lose the ability to undo/redo.","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d Aspect: How undo \u0026 redo executes","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"-"},"content":"** Pros: Easy to implement.","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"-"},"content":"** Cons: May have performance issues in terms of memory usage.","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by itself.","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"** Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"** Cons: We must ensure that the implementation of each individual command are correct.","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d Aspect: Type of commands that can be undone/redone","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Only include commands that modifies the address book (`add`, `clear`, `edit`).","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"** Pros: We only revert changes that are hard to change back (the view can easily be re-modified as no data are * lost).","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"** Cons: User might think that undo also applies when the list is modified (undoing filtering for example), * only to realize that it does not do that, after executing `undo`.","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"* **Alternative 2:** Include all commands.","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"** Pros: Might be more intuitive for the user.","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"** Cons: User have no way of skipping such commands if he or she just want to reset the state of the address * book and not the view.","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"**Additional Info:** See our discussion  https://github.com/se-edu/addressbook-level4/issues/390#issuecomment-298936672[here].","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Aspect: Data structure to support the undo/redo commands","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Use separate stack for undo and redo.","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"** Pros: Easy to understand for new Computer Science student undergraduates to understand, who are likely to be * the new incoming developers of our project.","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"** Cons: Logic is duplicated twice. For example, when a new command is executed, we must remember to update * both `HistoryManager` and `UndoRedoStack`.","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"* **Alternative 2:** Use `HistoryManager` for undo/redo.","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"-"},"content":"** Pros: We do not need to maintain a separate stack, and just reuse what is already in the codebase.","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"-"},"content":"** Cons: Requires dealing with commands that have already been undone: We must remember to skip these commands. Violates Single Responsibility Principle and Separation of Concerns as `HistoryManager` now needs to do two * different things.","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"-"},"content":"// end::undoredo[]","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"codeeong"},"content":"\u003d\u003d\u003d Player-Related Enhancements","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"lithiumlkid"},"content":"// tag::player[]","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"lohtianwei"},"content":"\u003d\u003d\u003d\u003d Player Component `[since v1.3]`","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"lithiumlkid"},"content":"`Player` is one of the core components of MTM. To implement it, we used the same `Person` object and added additional attributes to it. Shown below is the","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"lithiumlkid"},"content":"new constructor for the Person object followed by the class diagram.","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"lithiumlkid"},"content":"[source, java]","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"lithiumlkid"},"content":"----","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"lithiumlkid"},"content":"public Person(Name name, Phone phone, Email email, Address address, Remark remark, TeamName teamName,","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"lithiumlkid"},"content":"                  Set\u003cTag\u003e tags, Rating rating, Position position, JerseyNumber jerseyNumber, Avatar avatar) {","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"lithiumlkid"},"content":"        ...","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"lithiumlkid"},"content":"        this.remark \u003d remark;","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"lithiumlkid"},"content":"        this.teamName \u003d teamName;","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"lithiumlkid"},"content":"        this.rating \u003d rating;","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"lithiumlkid"},"content":"        this.position \u003d position;","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"lithiumlkid"},"content":"        this.jerseyNumber \u003d jerseyNumber;","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"lithiumlkid"},"content":"        this.avatar \u003d avatar;","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"lithiumlkid"},"content":"    }","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"lithiumlkid"},"content":"----","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"lithiumlkid"},"content":".Person Class Diagram","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"lithiumlkid"},"content":"image::PlayerClassDiagram.png[width\u003d\"300\"]","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"lithiumlkid"},"content":"The additional attributes are: \u003c\u003cteam,teamName\u003e\u003e, \u003c\u003cremark,Remark\u003e\u003e, \u003c\u003crating,Rating\u003e\u003e, \u003c\u003cposition,Position\u003e\u003e, \u003c\u003cjersey,Jersey Number\u003e\u003e and \u003c\u003cavatar,Avatar\u003e\u003e.","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"lithiumlkid"},"content":"The add and edit command has also been updated to include \u003c\u003cteam,teamName\u003e\u003e,\u003c\u003crating,Rating\u003e\u003e, \u003c\u003cposition,Position\u003e\u003e, \u003c\u003cjersey,Jersey Number\u003e\u003e and \u003c\u003cavatar,Avatar\u003e\u003e.","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"lithiumlkid"},"content":"One thing to note is that in `executeUndoableCommand()`","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"lithiumlkid"},"content":"in both add and edit commands now does two additional things, setting the file path for players avatar, and assigning a player to a team","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"lithiumlkid"},"content":"and adding person to current filtered list. Shown below is the code snippet of the new `executeUndoableCommand()` and sequence diagram","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"lithiumlkid"},"content":"of the new add command as an example.","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"lithiumlkid"},"content":"[[AddSequence]]","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"lithiumlkid"},"content":"[source, java]","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"lithiumlkid"},"content":"----","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"lithiumlkid"},"content":" @Override","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"lithiumlkid"},"content":"    public CommandResult executeUndoableCommand() throws CommandException {","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"lithiumlkid"},"content":"        requireNonNull(model);","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"lithiumlkid"},"content":"        try {","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"lithiumlkid"},"content":"            if (!toAdd.getAvatar().toString().equals(UNSPECIFIED_FIELD)) {","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"lithiumlkid"},"content":"                toAdd.getAvatar().setFilePath(toAdd.getName().fullName);","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"lithiumlkid"},"content":"            }","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"lithiumlkid"},"content":"            model.addPerson(toAdd);","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"lithiumlkid"},"content":"            if (!toAdd.getTeamName().toString().equals(UNSPECIFIED_FIELD)) {","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"lithiumlkid"},"content":"                model.assignPersonToTeam(toAdd, toAdd.getTeamName());","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"lithiumlkid"},"content":"                model.updateFilteredPersonList(toAdd.getTeamName());","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"lithiumlkid"},"content":"                EventsCenter.getInstance().post(new HighlightSelectedTeamEvent(toAdd.getTeamName().toString()));","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"lithiumlkid"},"content":"            } else { ...","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"lithiumlkid"},"content":"----","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"lithiumlkid"},"content":".Add Sequence Diagram","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"lithiumlkid"},"content":"image::AddSequenceDiagram.png[width\u003d\"800\"]","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"lithiumlkid"},"content":"[[rating]]","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"lithiumlkid"},"content":"\u003d\u003d\u003d\u003d\u003d Rating Class","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"lithiumlkid"},"content":"The `Rating` class contains a `String value`. `value` holds the players rating, an integer from 0 to 5. It uses a validation regex `[0-5]`","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"lithiumlkid"},"content":"to ensure valid input.","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"lithiumlkid"},"content":"The prefix for `Rating` is `ra/`","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"lithiumlkid"},"content":"[[position]]","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"lithiumlkid"},"content":"\u003d\u003d\u003d\u003d\u003d Position Class","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"lithiumlkid"},"content":"The`Position` class contains a `String value`. `value` here holds the players position, an integer from 1 to 4. It uses a validation regex `[1-4]` to ensure valid input.","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"lithiumlkid"},"content":"The prefix for `Position` is `po/`.","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"lithiumlkid"},"content":"A static hashmap is used to store and retrieve the corresponding position names of the position values. The position name can be called using the method `getPositionName()` which returns `myMap.get(value)`.","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"lithiumlkid"},"content":"The code snippet for the `hashmap` and `getPositionName()` is shown below.","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"lithiumlkid"},"content":"[source, java]","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"lithiumlkid"},"content":"----","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"lithiumlkid"},"content":"private static final Map\u003cString, String\u003e myMap;","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"lithiumlkid"},"content":"static {","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"lithiumlkid"},"content":"    Map\u003cString, String\u003e aMap \u003d new HashMap\u003c\u003e();","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"lithiumlkid"},"content":"    aMap.put(\"1\", \"Striker\");","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"lithiumlkid"},"content":"    aMap.put(\"2\", \"Midfielder\");","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"lithiumlkid"},"content":"    aMap.put(\"3\", \"Defender\");","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"lithiumlkid"},"content":"    aMap.put(\"4\", \"Goalkeeper\");","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"lithiumlkid"},"content":"    myMap \u003d Collections.unmodifiableMap(aMap);","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"lithiumlkid"},"content":"}","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"lithiumlkid"},"content":"public String getPositionName() {","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"lithiumlkid"},"content":"    return myMap.get(value);","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"lithiumlkid"},"content":"}","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"lithiumlkid"},"content":"----","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"lithiumlkid"},"content":"[[jersey]]","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"lithiumlkid"},"content":"\u003d\u003d\u003d\u003d\u003d JerseyNumber Class","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"lithiumlkid"},"content":"The`JerseyNumber` class contains a `String value`. `value` here holds the players jersey number, an integer from 0 to 99. It uses a validation regex `[0-9]|[1-8][0-9]|9[0-9]` to ensure valid input.","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"lithiumlkid"},"content":"The prefix for `Position` is `j/`.","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"lithiumlkid"},"content":"[[avatar]]","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"lithiumlkid"},"content":"\u003d\u003d\u003d\u003d\u003d Avatar Class","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"lithiumlkid"},"content":"The`Avatar` class contains a `String value`. `value` here holds the absolute filepath to the players avatar image file, a png of jpeg file. It uses a validation regex `([^\\s]+(\\.(?i)(jpg|png))$)` to ensure valid input.","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"lithiumlkid"},"content":"The prefix for `Avatar` is `av/`.","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"lithiumlkid"},"content":"When the class is created, the `value` stores the original location of the players avatar image file eg. `C:\\image.png` or if not specified, stores \"\u003cUNSPECIFIED\u003e\".","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"lithiumlkid"},"content":"Thereafter, if the avatar is specified when \u003c\u003cAddSequence,adding\u003e\u003e or editing a player, `setFilePath()` is called which will attempt to copy the image file to a `/image` folder that is in the same directory as the `MTM.jar` file.","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"lithiumlkid"},"content":"`value` is then updated to the new file path.","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"lithiumlkid"},"content":"The code snippet for setFilePath() is shown below.","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"lithiumlkid"},"content":"[source, java]","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"lithiumlkid"},"content":"----","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"lithiumlkid"},"content":"public void setFilePath(String player) throws IOException {","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"lithiumlkid"},"content":"        if (value.equals(\"\u003cUNSPECIFIED\u003e\")) {","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"lithiumlkid"},"content":"            return;","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"lithiumlkid"},"content":"        }","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"lithiumlkid"},"content":"        final File file \u003d new File(value);","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"lithiumlkid"},"content":"        Path dest \u003d new File(\"images/\" + player.replaceAll(\"\\\\s+\", \"\") + \".png\").toPath();","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"lithiumlkid"},"content":"        Files.createDirectories(Paths.get(\"images\")); // Creates missing directories if any","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"lithiumlkid"},"content":"        Files.copy(file.toPath(), dest, StandardCopyOption.REPLACE_EXISTING);","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"lithiumlkid"},"content":"        this.value \u003d dest.toString();","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"lithiumlkid"},"content":"    }","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"lithiumlkid"},"content":"----","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"lithiumlkid"},"content":"// end::player[]","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"-"},"content":"// tag::remark[]","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Remark a Player `[since v1.1]`","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"-"},"content":"Leaving a remark would be ideal for the user to note down any important detail of a player that is useful in the future.","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"-"},"content":"Remarks given can be in any format and therefore would not look good if it was done using tags instead, as tags are used with minimal words.","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Current Implementation","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"-"},"content":"The remark mechanism is facilitated by `RemarkCommand` and it inherits from `UndoableCommand`, making it undoable. The mechanism allows user to perform the adding, editing, and deleting of a single remark to a specified `Person` via the `INDEX` from the list shown in the `UI`. The field `remark` is similar to the other fields of `Person`, hence some of its logic in `AddCommand.java` and `EditCommand.java` are updated.","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"-"},"content":"The mechanism uses the command `remark` and a `r/` prefix to add, edit, and delete a single remark of a `Person`. When the user leaves the remark as empty after the `r/` prefix, it is an indication to delete the remark, and when it is valid, it either create a new remark for that `Person` or overwrites the current existing remark. Only one `remark` is saved at a time. If the user `remark` on the same person, it will be overwritten.","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"-"},"content":"The field `remark` is found in `Person`, and it is not modified via `add` or `edit` commands. All functions related to `remark` is done strictly via the `remark` command.","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the operation of the `remark` command:","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"-"},"content":".Remark Activity Diagram","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"-"},"content":"image::RemarkActivityDiagram.png[width\u003d\"100%\"]","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"-"},"content":"The `remark` field is not required when adding or editing a `Person`, and it will be initialized to an empty string or retrieved to fit the implementation of the other fields.","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"-"},"content":"Code snippet from `AddCommandParser.java` that shows how remark is initialized as empty.","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"-"},"content":"[source, java]","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"-"},"content":"public AddCommand parse(String args) throws ParseException {","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"-"},"content":"    //...AddCommandParser code...","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"-"},"content":"    Remark remark \u003d new Remark(\"\");","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"-"},"content":"    Person person \u003d new Person(name, phone, email, address, remark, teamName, tagList, rating,","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"-"},"content":"        position, jerseyNumber, avatar);","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"-"},"content":"    //...AddCommandParser code...","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"lithiumlkid"},"content":"}","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"lithiumlkid"},"content":"----","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"-"},"content":"Code snippet from `EditCommand.java` that shows how remark is being retrieved.","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"-"},"content":"[source, java]","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"lithiumlkid"},"content":"----","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"-"},"content":"private static Person createEditedPerson(Person personToEdit,","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"-"},"content":"    EditPersonDescriptor editPersonDescriptor) {","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"-"},"content":"    //...EditCommand code...","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"-"},"content":"    Remark updatedRemark \u003d (personToEdit.getRemark().isPrivate()) ? personToEdit.getRemark()","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"-"},"content":"                                                                  : personToEdit.getRemark();","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"-"},"content":"    return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedRemark,","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"-"},"content":"        updatedTeamName, updatedTags, updatedRating, updatedPosition, updatedJerseyNumber,","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"-"},"content":"        updatedAvatar);","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"lithiumlkid"},"content":"----","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Design Considerations","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d Aspect: Implementation of `Remark` field","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Creates an additional `remark` field in `Person`.","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"-"},"content":"** Pros: Follows the existing style of similar fields, making implementation easier.","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"-"},"content":"** Cons: Could only have 1 remark per person, unless `remark` mechanism follows the `tag` mechanism to have multiple remarks.","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"-"},"content":"* **Alternative 2:** Have a list of remarks that associates with the specified `Person`.","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"-"},"content":"** Pros: Can have multiple remarks associating with a specific `Person`.","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"-"},"content":"** Cons: Harder to maintain, more complicated.","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d Aspect: Implementation of `Remark` command","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Create a specific command for remarking `Person`.","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"-"},"content":"** Pros: Optional for user to enter remark during add, and have an isolated command to give remarks to a player that works as an add and edit command for remark.","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"-"},"content":"** Cons: Increases the number of commands available for the user, and could mistaken that remark can be done using add/edit command.","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"-"},"content":"* **Alternative 2:** Make it similar to how other fields are implemented in `Person`.","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"-"},"content":"** Pros: Quick and easy implementation as it uses the same format as other fields, and can be added and modified through `add` and `edit` commands.","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"-"},"content":"** Cons: An additional field that can be input when adding a player, making the process longer to execute the command.","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"-"},"content":"// end::remark[]","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"-"},"content":"// tag::privatefield[]","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"lohtianwei"},"content":"\u003d\u003d\u003d\u003d Setting various player fields to private `[since v1.4]`","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Current Implementation","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"lohtianwei"},"content":"`Phone`, `Email`, `Remark`, `Rating` and `Address` of a player has an additional boolean attribute","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"lohtianwei"},"content":"`isPrivate` which tracks the privacy of the particular field. When a player is added into MTM, `isPrivate` of these","isFullCredit":false},{"lineNumber":645,"author":{"gitId":"lohtianwei"},"content":"fields are set to \u0027false\u0027 by default.","isFullCredit":false},{"lineNumber":646,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":647,"author":{"gitId":"lohtianwei"},"content":"Each of these fields have a different `toString` method which would return `\u003cPrivate \u0027FIELD\u0027\u003e` if privacy of","isFullCredit":false},{"lineNumber":648,"author":{"gitId":"lohtianwei"},"content":"the field is set to \u0027true\u0027, as shown in the following code snippet:","isFullCredit":false},{"lineNumber":649,"author":{"gitId":"lohtianwei"},"content":"[source, java]","isFullCredit":false},{"lineNumber":650,"author":{"gitId":"lohtianwei"},"content":"----","isFullCredit":false},{"lineNumber":651,"author":{"gitId":"lohtianwei"},"content":"@Override","isFullCredit":false},{"lineNumber":652,"author":{"gitId":"lohtianwei"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":653,"author":{"gitId":"lohtianwei"},"content":"        if (isPrivate) {","isFullCredit":false},{"lineNumber":654,"author":{"gitId":"lohtianwei"},"content":"            return \"\u003cPrivate Address\u003e\";","isFullCredit":false},{"lineNumber":655,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":656,"author":{"gitId":"lohtianwei"},"content":"        return value;","isFullCredit":false},{"lineNumber":657,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":658,"author":{"gitId":"lohtianwei"},"content":"----","isFullCredit":false},{"lineNumber":659,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":660,"author":{"gitId":"lohtianwei"},"content":"`XmlAdaptedPerson` under the storage portion has been edited to save the `isPrivate` value for the fields:","isFullCredit":false},{"lineNumber":661,"author":{"gitId":"lohtianwei"},"content":"[source, java]","isFullCredit":false},{"lineNumber":662,"author":{"gitId":"lohtianwei"},"content":"----","isFullCredit":false},{"lineNumber":663,"author":{"gitId":"lohtianwei"},"content":"@XmlElement(required \u003d true)","isFullCredit":false},{"lineNumber":664,"author":{"gitId":"lohtianwei"},"content":"    private Boolean phonePrivacy;","isFullCredit":false},{"lineNumber":665,"author":{"gitId":"lohtianwei"},"content":"----","isFullCredit":false},{"lineNumber":666,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":667,"author":{"gitId":"lohtianwei"},"content":"Toggling of privacy works in a similar way to `Edit`. New fields will be created with privacy settings of `EditPersonPrivacy`","isFullCredit":false},{"lineNumber":668,"author":{"gitId":"lohtianwei"},"content":" based on user input. This is done by first detecting if a particular prefix is present when command is","isFullCredit":false},{"lineNumber":669,"author":{"gitId":"lohtianwei"},"content":"entered in `TogglePrivacyCommandParser`:","isFullCredit":false},{"lineNumber":670,"author":{"gitId":"lohtianwei"},"content":"[source, java]","isFullCredit":false},{"lineNumber":671,"author":{"gitId":"lohtianwei"},"content":"----","isFullCredit":false},{"lineNumber":672,"author":{"gitId":"lohtianwei"},"content":"if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","isFullCredit":false},{"lineNumber":673,"author":{"gitId":"lohtianwei"},"content":"            epp.setPrivatePhone(false);","isFullCredit":false},{"lineNumber":674,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":675,"author":{"gitId":"lohtianwei"},"content":"----","isFullCredit":false},{"lineNumber":676,"author":{"gitId":"lohtianwei"},"content":"If prefix of a field is not present, the privacy setting of that particular field in `EditPersonPrivacy` would be null.","isFullCredit":false},{"lineNumber":677,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":678,"author":{"gitId":"lohtianwei"},"content":"In `TogglePrivacyCommand`, the new fields are created with this:","isFullCredit":false},{"lineNumber":679,"author":{"gitId":"lohtianwei"},"content":"[source, java]","isFullCredit":false},{"lineNumber":680,"author":{"gitId":"lohtianwei"},"content":"----","isFullCredit":false},{"lineNumber":681,"author":{"gitId":"lohtianwei"},"content":"private static Phone createPhonePrivacy(Person person, EditPersonPrivacy epp) {","isFullCredit":false},{"lineNumber":682,"author":{"gitId":"lohtianwei"},"content":"        Phone phone;","isFullCredit":false},{"lineNumber":683,"author":{"gitId":"lohtianwei"},"content":"        try {","isFullCredit":false},{"lineNumber":684,"author":{"gitId":"lohtianwei"},"content":"            if (person.getPhone().isPrivate()) {","isFullCredit":false},{"lineNumber":685,"author":{"gitId":"lohtianwei"},"content":"                person.getPhone().togglePrivacy();","isFullCredit":false},{"lineNumber":686,"author":{"gitId":"lohtianwei"},"content":"                phone \u003d new Phone(person.getPhone().toString());","isFullCredit":false},{"lineNumber":687,"author":{"gitId":"lohtianwei"},"content":"                person.getPhone().togglePrivacy();","isFullCredit":false},{"lineNumber":688,"author":{"gitId":"lohtianwei"},"content":"            } else {","isFullCredit":false},{"lineNumber":689,"author":{"gitId":"lohtianwei"},"content":"                phone \u003d new Phone(person.getPhone().toString());","isFullCredit":false},{"lineNumber":690,"author":{"gitId":"lohtianwei"},"content":"            }","isFullCredit":false},{"lineNumber":691,"author":{"gitId":"lohtianwei"},"content":"        } catch (Exception e) {","isFullCredit":false},{"lineNumber":692,"author":{"gitId":"lohtianwei"},"content":"            throw new AssertionError(\"Invalid Phone\");","isFullCredit":false},{"lineNumber":693,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":694,"author":{"gitId":"lohtianwei"},"content":"        if (epp.getPrivatePhone() !\u003d null) {","isFullCredit":false},{"lineNumber":695,"author":{"gitId":"lohtianwei"},"content":"            phone.setPrivate(person.getPhone().isPrivate());","isFullCredit":false},{"lineNumber":696,"author":{"gitId":"lohtianwei"},"content":"            phone.togglePrivacy();","isFullCredit":false},{"lineNumber":697,"author":{"gitId":"lohtianwei"},"content":"        } else {","isFullCredit":false},{"lineNumber":698,"author":{"gitId":"lohtianwei"},"content":"            phone.setPrivate(person.getPhone().isPrivate());","isFullCredit":false},{"lineNumber":699,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":700,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":701,"author":{"gitId":"lohtianwei"},"content":"        return phone;","isFullCredit":false},{"lineNumber":702,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":703,"author":{"gitId":"lohtianwei"},"content":"----","isFullCredit":false},{"lineNumber":704,"author":{"gitId":"lohtianwei"},"content":"Note that in the second portion of the code, if `epp.getPrivatePhone()` is null, this would mean that it\u0027s privacy","isFullCredit":false},{"lineNumber":705,"author":{"gitId":"lohtianwei"},"content":"setting was not toggled and thus is set to the same as it was before. Else, it would be toggled:","isFullCredit":false},{"lineNumber":706,"author":{"gitId":"lohtianwei"},"content":"[source, java]","isFullCredit":false},{"lineNumber":707,"author":{"gitId":"lohtianwei"},"content":"----","isFullCredit":false},{"lineNumber":708,"author":{"gitId":"lohtianwei"},"content":"public void togglePrivacy() {","isFullCredit":false},{"lineNumber":709,"author":{"gitId":"lohtianwei"},"content":"        this.isPrivate \u003d isPrivate ? false : true;","isFullCredit":false},{"lineNumber":710,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":711,"author":{"gitId":"lohtianwei"},"content":"----","isFullCredit":false},{"lineNumber":712,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":713,"author":{"gitId":"lohtianwei"},"content":"A new person object is then created:","isFullCredit":false},{"lineNumber":714,"author":{"gitId":"lohtianwei"},"content":"[source, java]","isFullCredit":false},{"lineNumber":715,"author":{"gitId":"lohtianwei"},"content":"----","isFullCredit":false},{"lineNumber":716,"author":{"gitId":"lohtianwei"},"content":"private static Person createEditedPrivacyPerson(Person personToEdit, EditPersonPrivacy epp)","isFullCredit":false},{"lineNumber":717,"author":{"gitId":"lohtianwei"},"content":"            throws IllegalValueException {","isFullCredit":false},{"lineNumber":718,"author":{"gitId":"lohtianwei"},"content":"        assert personToEdit !\u003d null;","isFullCredit":false},{"lineNumber":719,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":720,"author":{"gitId":"lohtianwei"},"content":"        Name updatedName \u003d personToEdit.getName();","isFullCredit":false},{"lineNumber":721,"author":{"gitId":"lohtianwei"},"content":"        Phone updatedPhone \u003d createPhonePrivacy(personToEdit, epp);","isFullCredit":false},{"lineNumber":722,"author":{"gitId":"lohtianwei"},"content":"        Email updatedEmail \u003d createEmailPrivacy(personToEdit, epp);","isFullCredit":false},{"lineNumber":723,"author":{"gitId":"lohtianwei"},"content":"        Address updatedAddress \u003d createAddressPrivacy(personToEdit, epp);","isFullCredit":false},{"lineNumber":724,"author":{"gitId":"lohtianwei"},"content":"        Remark updatedRemark \u003d createRemarkPrivacy(personToEdit, epp);","isFullCredit":false},{"lineNumber":725,"author":{"gitId":"lohtianwei"},"content":"        TeamName updatedTeamName \u003d personToEdit.getTeamName();","isFullCredit":false},{"lineNumber":726,"author":{"gitId":"lohtianwei"},"content":"        Set\u003cTag\u003e updatedTags \u003d personToEdit.getTags();","isFullCredit":false},{"lineNumber":727,"author":{"gitId":"lohtianwei"},"content":"        Rating updatedRating \u003d createRatingPrivacy(personToEdit, epp);","isFullCredit":false},{"lineNumber":728,"author":{"gitId":"lohtianwei"},"content":"        Position updatedPosition \u003d personToEdit.getPosition();","isFullCredit":false},{"lineNumber":729,"author":{"gitId":"lohtianwei"},"content":"        JerseyNumber updatedJerseyNumber \u003d personToEdit.getJerseyNumber();","isFullCredit":false},{"lineNumber":730,"author":{"gitId":"lohtianwei"},"content":"        Avatar updatedAvatar \u003d personToEdit.getAvatar();","isFullCredit":false},{"lineNumber":731,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":732,"author":{"gitId":"lohtianwei"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedRemark,","isFullCredit":false},{"lineNumber":733,"author":{"gitId":"lohtianwei"},"content":"                updatedTeamName, updatedTags, updatedRating, updatedPosition, updatedJerseyNumber, updatedAvatar);","isFullCredit":false},{"lineNumber":734,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":735,"author":{"gitId":"lohtianwei"},"content":"----","isFullCredit":false},{"lineNumber":736,"author":{"gitId":"lohtianwei"},"content":"and is used to update current person:","isFullCredit":false},{"lineNumber":737,"author":{"gitId":"lohtianwei"},"content":"[source, java]","isFullCredit":false},{"lineNumber":738,"author":{"gitId":"lohtianwei"},"content":"----","isFullCredit":false},{"lineNumber":739,"author":{"gitId":"lohtianwei"},"content":"model.updatePerson(personToEdit, editedPerson);","isFullCredit":false},{"lineNumber":740,"author":{"gitId":"lohtianwei"},"content":"----","isFullCredit":false},{"lineNumber":741,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":742,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Design Consideration","isFullCredit":false},{"lineNumber":743,"author":{"gitId":"lohtianwei"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d Aspect: How field privacy is implemented","isFullCredit":false},{"lineNumber":744,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":745,"author":{"gitId":"lohtianwei"},"content":"* **Alternative 1 (current choice):** Boolean `isPrivate` added to field classes.","isFullCredit":false},{"lineNumber":746,"author":{"gitId":"lohtianwei"},"content":"** Pros: Privacy settings can be obtained straight from class by calling getter method.","isFullCredit":false},{"lineNumber":747,"author":{"gitId":"lohtianwei"},"content":"** Cons: Adddtional methods are needed to set and get value of `isPrivate`.","isFullCredit":false},{"lineNumber":748,"author":{"gitId":"lohtianwei"},"content":"* **Alternative 2:** Field privacy settings stored in `Person` in a HashMap.","isFullCredit":false},{"lineNumber":749,"author":{"gitId":"lohtianwei"},"content":"** Pros: Field privacy can be accessed and modified easily","isFullCredit":false},{"lineNumber":750,"author":{"gitId":"lohtianwei"},"content":"** Cons: `Person` has to be accessed every time field privacy needs to be checked","isFullCredit":false},{"lineNumber":751,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":752,"author":{"gitId":"lohtianwei"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d Aspect: Privacy of fields upon adding of player","isFullCredit":false},{"lineNumber":753,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":754,"author":{"gitId":"lohtianwei"},"content":"* **Alternative 1 (current choice):** All newly added players\u0027 fields are not private by default.","isFullCredit":false},{"lineNumber":755,"author":{"gitId":"lohtianwei"},"content":"** Pros: `Add` command does not need to be tweaked to allow adding player with private fields.","isFullCredit":false},{"lineNumber":756,"author":{"gitId":"lohtianwei"},"content":"** Cons: After adding players, user has to do additional command to toggle privacy of fields.","isFullCredit":false},{"lineNumber":757,"author":{"gitId":"lohtianwei"},"content":"* **Alternative 2:** Include implementation of prefixes that denotes private field during `Add`.","isFullCredit":false},{"lineNumber":758,"author":{"gitId":"lohtianwei"},"content":"** Pros: Newly added players can have private fields right away.","isFullCredit":false},{"lineNumber":759,"author":{"gitId":"lohtianwei"},"content":"** Cons: Addtional changes has to be made to `Add` command.","isFullCredit":false},{"lineNumber":760,"author":{"gitId":"-"},"content":"// end::privatefield[]","isFullCredit":false},{"lineNumber":761,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":762,"author":{"gitId":"lohtianwei"},"content":"// tag::sort[]","isFullCredit":false},{"lineNumber":763,"author":{"gitId":"lohtianwei"},"content":"\u003d\u003d\u003d\u003d Sorting players by fields `[since v1.2]`","isFullCredit":false},{"lineNumber":764,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Current Implementation","isFullCredit":false},{"lineNumber":765,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":766,"author":{"gitId":"lohtianwei"},"content":"The `sort` command is currently able to sort players by name, email, address, rating, jersey and postition in either ascending or descending order. Support for more fields will be added in subsequent updates.","isFullCredit":false},{"lineNumber":767,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":768,"author":{"gitId":"lohtianwei"},"content":"* The `sort` command is parsed through `SortCommandParser` which hands control to the `SortCommand` class.","isFullCredit":false},{"lineNumber":769,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":770,"author":{"gitId":"lohtianwei"},"content":"* Java Collections Sort API is used together with a custom `Comparator` in this implementation","isFullCredit":false},{"lineNumber":771,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":772,"author":{"gitId":"lohtianwei"},"content":"Sorting is facilitated by the `SortCommand` which uses method `sortPlayers` to ultimately call method `sortBy` in UniquePersonList for the actual sorting as shown in this code snippet:","isFullCredit":false},{"lineNumber":773,"author":{"gitId":"lohtianwei"},"content":"[source, java]","isFullCredit":false},{"lineNumber":774,"author":{"gitId":"lohtianwei"},"content":"----","isFullCredit":false},{"lineNumber":775,"author":{"gitId":"lohtianwei"},"content":"        switch (field) {","isFullCredit":false},{"lineNumber":776,"author":{"gitId":"lohtianwei"},"content":"                case \"name\":","isFullCredit":false},{"lineNumber":777,"author":{"gitId":"lohtianwei"},"content":"                    comparator \u003d nameComparator;","isFullCredit":false},{"lineNumber":778,"author":{"gitId":"lohtianwei"},"content":"                    break;","isFullCredit":false},{"lineNumber":779,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":780,"author":{"gitId":"lohtianwei"},"content":"                //... code for other switch cases...","isFullCredit":false},{"lineNumber":781,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":782,"author":{"gitId":"lohtianwei"},"content":"                default:","isFullCredit":false},{"lineNumber":783,"author":{"gitId":"lohtianwei"},"content":"                    throw new AssertionError(\"Invalid field parameter entered...\\n\");","isFullCredit":false},{"lineNumber":784,"author":{"gitId":"lohtianwei"},"content":"                }","isFullCredit":false},{"lineNumber":785,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":786,"author":{"gitId":"lohtianwei"},"content":"        switch (order) {","isFullCredit":false},{"lineNumber":787,"author":{"gitId":"lohtianwei"},"content":"        case \"asc\":","isFullCredit":false},{"lineNumber":788,"author":{"gitId":"lohtianwei"},"content":"            Collections.sort(internalList, comparator);","isFullCredit":false},{"lineNumber":789,"author":{"gitId":"lohtianwei"},"content":"            break;","isFullCredit":false},{"lineNumber":790,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":791,"author":{"gitId":"lohtianwei"},"content":"        case \"desc\":","isFullCredit":false},{"lineNumber":792,"author":{"gitId":"lohtianwei"},"content":"            Collections.sort(internalList, Collections.reverseOrder(comparator));","isFullCredit":false},{"lineNumber":793,"author":{"gitId":"lohtianwei"},"content":"            break;","isFullCredit":false},{"lineNumber":794,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":795,"author":{"gitId":"lohtianwei"},"content":"        default:","isFullCredit":false},{"lineNumber":796,"author":{"gitId":"lohtianwei"},"content":"            throw new AssertionError(\"Invalid field parameter entered...\\n\");","isFullCredit":false},{"lineNumber":797,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":798,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":799,"author":{"gitId":"lohtianwei"},"content":"----","isFullCredit":false},{"lineNumber":800,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":801,"author":{"gitId":"lohtianwei"},"content":"The code above utilises a custom `Comparator` defined in the sample code below:","isFullCredit":false},{"lineNumber":802,"author":{"gitId":"lohtianwei"},"content":"[source, java]","isFullCredit":false},{"lineNumber":803,"author":{"gitId":"lohtianwei"},"content":"----","isFullCredit":false},{"lineNumber":804,"author":{"gitId":"lohtianwei"},"content":"        Comparator\u003cPerson\u003e nameComparator \u003d new Comparator\u003cPerson\u003e() {","isFullCredit":false},{"lineNumber":805,"author":{"gitId":"lohtianwei"},"content":"                    @Override","isFullCredit":false},{"lineNumber":806,"author":{"gitId":"lohtianwei"},"content":"                    public int compare(Person p1, Person p2) {","isFullCredit":false},{"lineNumber":807,"author":{"gitId":"lohtianwei"},"content":"                        return p1.getName().fullName.compareTo(p2.getName().fullName);","isFullCredit":false},{"lineNumber":808,"author":{"gitId":"lohtianwei"},"content":"                    }","isFullCredit":false},{"lineNumber":809,"author":{"gitId":"lohtianwei"},"content":"                };","isFullCredit":false},{"lineNumber":810,"author":{"gitId":"lohtianwei"},"content":"----","isFullCredit":false},{"lineNumber":811,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":812,"author":{"gitId":"lohtianwei"},"content":"The following sequence diagram shows the program flow when `sort` is used:","isFullCredit":false},{"lineNumber":813,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":814,"author":{"gitId":"lohtianwei"},"content":".Sort Sequence Diagram","isFullCredit":false},{"lineNumber":815,"author":{"gitId":"lohtianwei"},"content":"image::sortSeq.png[width\u003d\"900\"]","isFullCredit":false},{"lineNumber":816,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":817,"author":{"gitId":"lohtianwei"},"content":"[NOTE]","isFullCredit":false},{"lineNumber":818,"author":{"gitId":"lohtianwei"},"content":"If address book is empty, a `NoPlayerException` will be thrown by `sortBy` method in UniquePlayerList.","isFullCredit":false},{"lineNumber":819,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":820,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Design Consideration","isFullCredit":false},{"lineNumber":821,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d Aspect: Implementation of `sort`","isFullCredit":false},{"lineNumber":822,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":823,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Sorting is done in `UniquePersonList`.","isFullCredit":false},{"lineNumber":824,"author":{"gitId":"lohtianwei"},"content":"** Pros: Sorting methods resides in class that handles most operations done to list. Future changes to implementation would be easier.","isFullCredit":false},{"lineNumber":825,"author":{"gitId":"-"},"content":"** Cons: Complicated flow of control passed between classes.","isFullCredit":false},{"lineNumber":826,"author":{"gitId":"-"},"content":"* **Alternative 2:** Sorting is done in `SortCommand`.","isFullCredit":false},{"lineNumber":827,"author":{"gitId":"-"},"content":"** Pros: Easier to trace flow of control as lesser passing between classes.","isFullCredit":false},{"lineNumber":828,"author":{"gitId":"-"},"content":"** Cons: Unnecessary coupling if `UniquePersonList` has to rely on `SortCommand`.","isFullCredit":false},{"lineNumber":829,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":830,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d Aspect: Sort by multiple fields","isFullCredit":false},{"lineNumber":831,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":832,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Sort can only be done by 1 field.","isFullCredit":false},{"lineNumber":833,"author":{"gitId":"-"},"content":"** Pros: Easy to implement and input is straightforward.","isFullCredit":false},{"lineNumber":834,"author":{"gitId":"-"},"content":"** Cons: Unable to fine tune to great detail how teams are sorted and displayed.","isFullCredit":false},{"lineNumber":835,"author":{"gitId":"-"},"content":"* **Alternative 2:** Sort can be done by multiple fields.","isFullCredit":false},{"lineNumber":836,"author":{"gitId":"-"},"content":"** Pros:  Able to fine tune to great detail how teams are sorted and displayed.","isFullCredit":false},{"lineNumber":837,"author":{"gitId":"-"},"content":"** Cons: Unnecessary as team managers would not need to sort players by multiple fields.","isFullCredit":false},{"lineNumber":838,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":839,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d Aspect: Sort Persistence","isFullCredit":false},{"lineNumber":840,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":841,"author":{"gitId":"lohtianwei"},"content":"* **Alternative 1 (current choice):** Address book is saved after sorting.","isFullCredit":false},{"lineNumber":842,"author":{"gitId":"lohtianwei"},"content":"** Pros: Easy to implement. Allows team managers to use preferred sort pattern in every session.","isFullCredit":false},{"lineNumber":843,"author":{"gitId":"lohtianwei"},"content":"** Cons: Previous order of players will be lost.","isFullCredit":false},{"lineNumber":844,"author":{"gitId":"lohtianwei"},"content":"* **Alternative 2:** Address book is not saved after sorting.","isFullCredit":false},{"lineNumber":845,"author":{"gitId":"-"},"content":"** Pros: Good if team manager wants to sort players for current session only.","isFullCredit":false},{"lineNumber":846,"author":{"gitId":"lohtianwei"},"content":"** Cons: Sort order is lost when program exits. More memory is used to sort a list and reverse it after.","isFullCredit":false},{"lineNumber":847,"author":{"gitId":"lohtianwei"},"content":"// end::sort[]","isFullCredit":false},{"lineNumber":848,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":849,"author":{"gitId":"codeeong"},"content":"\u003d\u003d\u003d Team-Related Enhancements","isFullCredit":false},{"lineNumber":850,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":851,"author":{"gitId":"-"},"content":"// tag::team[]","isFullCredit":false},{"lineNumber":852,"author":{"gitId":"lithiumlkid"},"content":"[[team]]","isFullCredit":false},{"lineNumber":853,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Team Component `[since v1.2]`","isFullCredit":false},{"lineNumber":854,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":855,"author":{"gitId":"-"},"content":"One of the core components to MTM is `Team`, and it is the base to creating more commands for the user to access capability on team management. The `Team` component provides user with better organizational methods for organizing their players and interact with multiple teams to manage them effectively.","isFullCredit":false},{"lineNumber":856,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":857,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Current Implementation","isFullCredit":false},{"lineNumber":858,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":859,"author":{"gitId":"-"},"content":"We achieved the implementation of `Team` component by introducing a `UniqueTeamList` into the application which consists of a list of `Team` objects. `UniqueTeamList` is similar in context to `UniquePersonList` in which it keeps a unique list of all the `Team` objects. `Team` objects consist of `TeamName` object, which is used to uniquely identify the team. `Team` inherits `UniquePersonList` object which stores the a list of unique `Person` objects, containing information of the player.","isFullCredit":false},{"lineNumber":860,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":861,"author":{"gitId":"-"},"content":"The class diagrams below shoes the relationship between the related classes. The Team Class Diagrams are an extension to the current existing Designs of \u003c\u003cDesign-Model, `Model`\u003e\u003e, \u003c\u003cDesign-Storage, `Storage`\u003e\u003e, and \u003c\u003cDesign-Ui, `UI`\u003e\u003e.","isFullCredit":false},{"lineNumber":862,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":863,"author":{"gitId":"-"},"content":".Model Component: Team Class Diagram","isFullCredit":false},{"lineNumber":864,"author":{"gitId":"-"},"content":"image::TeamModelClassDiagram.png[width\u003d\"800\"]","isFullCredit":false},{"lineNumber":865,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":866,"author":{"gitId":"-"},"content":".Storage Component: Team Class Diagram","isFullCredit":false},{"lineNumber":867,"author":{"gitId":"-"},"content":"image::TeamStorageClassDiagram.png[width\u003d\"400\"]","isFullCredit":false},{"lineNumber":868,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":869,"author":{"gitId":"-"},"content":".UI Component: Team Class Diagram","isFullCredit":false},{"lineNumber":870,"author":{"gitId":"-"},"content":"image::TeamUiClassDiagram.png[width\u003d\"400\"]","isFullCredit":false},{"lineNumber":871,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":872,"author":{"gitId":"-"},"content":"Code snippet from `Team.java` that shows the constructor for `Team`.","isFullCredit":false},{"lineNumber":873,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":874,"author":{"gitId":"-"},"content":"[source, java]","isFullCredit":false},{"lineNumber":875,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":876,"author":{"gitId":"-"},"content":"public class Team {","isFullCredit":false},{"lineNumber":877,"author":{"gitId":"-"},"content":"    private final TeamName teamName;","isFullCredit":false},{"lineNumber":878,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":879,"author":{"gitId":"-"},"content":"    public Team(TeamName teamName) {","isFullCredit":false},{"lineNumber":880,"author":{"gitId":"-"},"content":"        this.teamName \u003d teamName;","isFullCredit":false},{"lineNumber":881,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":882,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":883,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":884,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":885,"author":{"gitId":"-"},"content":"For the application to store the information of `Team` into a list, we will need to introduce a new `UniqueTeamList` variable into the `AddressBook.java`, so that it will have a container for all the new `Team` objects that is going to be created in MTM.","isFullCredit":false},{"lineNumber":886,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":887,"author":{"gitId":"-"},"content":"Code snippet from `AddressBook.java` that shows the declaration and initialization of `UniqueTeamList`.","isFullCredit":false},{"lineNumber":888,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":889,"author":{"gitId":"-"},"content":"[source, java]","isFullCredit":false},{"lineNumber":890,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":891,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","isFullCredit":false},{"lineNumber":892,"author":{"gitId":"-"},"content":"    //...AddressBook code...","isFullCredit":false},{"lineNumber":893,"author":{"gitId":"-"},"content":"    private final UniqueTeamList teams;","isFullCredit":false},{"lineNumber":894,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":895,"author":{"gitId":"-"},"content":"    {","isFullCredit":false},{"lineNumber":896,"author":{"gitId":"-"},"content":"        teams \u003d new UniqueTeamList;","isFullCredit":false},{"lineNumber":897,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":898,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":899,"author":{"gitId":"-"},"content":"    public void setTeams(List\u003cTeam\u003e teams) throws DuplicateTeamException {","isFullCredit":false},{"lineNumber":900,"author":{"gitId":"-"},"content":"        this.teams.setTeams(teams);","isFullCredit":false},{"lineNumber":901,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":902,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":903,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":904,"author":{"gitId":"-"},"content":"    public ObservableList\u003cTeam\u003e getTeamList() {","isFullCredit":false},{"lineNumber":905,"author":{"gitId":"-"},"content":"        return teams.asObservableList();","isFullCredit":false},{"lineNumber":906,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":907,"author":{"gitId":"-"},"content":"    //...AddressBook code...","isFullCredit":false},{"lineNumber":908,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":909,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":910,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":911,"author":{"gitId":"-"},"content":"Since `Team` inherits the `UniquePersonList` class, we are able to store `Person` object into `Team` by using the super class method `add` in `UniquePersonList`. By storing a list of players inside `Team` object, future enhancements can easily make use of the data to perform functions that requires quick access to all players in a team. However, this have created a coupling in which data made to the `changes made to `AddressBook.persons` needs to be updated in `Team` to maintain synchronicity.","isFullCredit":false},{"lineNumber":912,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":913,"author":{"gitId":"-"},"content":"Code snippet from `AddressBook.java` that shows the propagation of details updated in `Person` from the full player list to the `Person` objects in `Team`.","isFullCredit":false},{"lineNumber":914,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":915,"author":{"gitId":"-"},"content":"[source, java]","isFullCredit":false},{"lineNumber":916,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":917,"author":{"gitId":"-"},"content":"public void updatePerson(Person target, Person editedPerson)","isFullCredit":false},{"lineNumber":918,"author":{"gitId":"-"},"content":"    throws DuplicatePersonException, PersonNotFoundException {","isFullCredit":false},{"lineNumber":919,"author":{"gitId":"-"},"content":"    requireNonNull(editedPerson);","isFullCredit":false},{"lineNumber":920,"author":{"gitId":"-"},"content":"    //...syncEditedPerson initialisation...","isFullCredit":false},{"lineNumber":921,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":922,"author":{"gitId":"-"},"content":"    if (!editedPerson.getTeamName().toString().equals(UNSPECIFIED_FIELD)) {","isFullCredit":false},{"lineNumber":923,"author":{"gitId":"-"},"content":"        teams.getTeam(editedPerson.getTeamName()).setPerson(target, editedPerson);","isFullCredit":false},{"lineNumber":924,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":925,"author":{"gitId":"-"},"content":"    persons.setPerson(target, syncedEditedPerson);","isFullCredit":false},{"lineNumber":926,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":927,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":928,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":929,"author":{"gitId":"-"},"content":"An additional `TeamName` field is also added to `Person` so that the user can quickly determine the team the player is in through the use of `PREDICATE`.","isFullCredit":false},{"lineNumber":930,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":931,"author":{"gitId":"-"},"content":"Code snippet from `Person.java` that shows the `TeamName` field.","isFullCredit":false},{"lineNumber":932,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":933,"author":{"gitId":"-"},"content":"[source, java]","isFullCredit":false},{"lineNumber":934,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":935,"author":{"gitId":"-"},"content":"public class Person {","isFullCredit":false},{"lineNumber":936,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":937,"author":{"gitId":"-"},"content":"    private final TeamName teamName;","isFullCredit":false},{"lineNumber":938,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":939,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Remark remark,","isFullCredit":false},{"lineNumber":940,"author":{"gitId":"-"},"content":"        TeamName teamName, Set\u003cTag\u003e tags, Rating rating, Position position,","isFullCredit":false},{"lineNumber":941,"author":{"gitId":"-"},"content":"        JerseyNumber jerseyNumber, Avatar avatar) {","isFullCredit":false},{"lineNumber":942,"author":{"gitId":"-"},"content":"        //...attributes initialisation...","isFullCredit":false},{"lineNumber":943,"author":{"gitId":"-"},"content":"        this.teamName \u003d teamName;","isFullCredit":false},{"lineNumber":944,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":945,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":946,"author":{"gitId":"-"},"content":"    public TeamName getTeamName() {","isFullCredit":false},{"lineNumber":947,"author":{"gitId":"-"},"content":"        return teamName;","isFullCredit":false},{"lineNumber":948,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":949,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":950,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":951,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":952,"author":{"gitId":"-"},"content":"Code snippet from `ModelManager.java` that shows the use of filtering the person list using the `TeamName` field in `Person`.","isFullCredit":false},{"lineNumber":953,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":954,"author":{"gitId":"-"},"content":"[source, java]","isFullCredit":false},{"lineNumber":955,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":956,"author":{"gitId":"-"},"content":"@Override","isFullCredit":false},{"lineNumber":957,"author":{"gitId":"-"},"content":"public void updateFilteredPersonList(TeamName targetTeam) throws TeamNotFoundException {","isFullCredit":false},{"lineNumber":958,"author":{"gitId":"-"},"content":"    requireNonNull(targetTeam);","isFullCredit":false},{"lineNumber":959,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":960,"author":{"gitId":"-"},"content":"    List\u003cTeam\u003e teamList \u003d addressBook.getTeamList();","isFullCredit":false},{"lineNumber":961,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":962,"author":{"gitId":"-"},"content":"    if (teamList.stream().anyMatch(target -\u003e target.getTeamName().equals(targetTeam))) {","isFullCredit":false},{"lineNumber":963,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(t -\u003e t.getTeamName().equals(targetTeam));","isFullCredit":false},{"lineNumber":964,"author":{"gitId":"-"},"content":"    } else {","isFullCredit":false},{"lineNumber":965,"author":{"gitId":"-"},"content":"        throw new TeamNotFoundException();","isFullCredit":false},{"lineNumber":966,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":967,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":968,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":969,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":970,"author":{"gitId":"-"},"content":"Additional exception classes are also created so that these new exceptions can be thrown during the program, such that when these exceptions are thrown, the code is easily comprehensible.","isFullCredit":false},{"lineNumber":971,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":972,"author":{"gitId":"-"},"content":".`TeamNotFoundException.java`","isFullCredit":false},{"lineNumber":973,"author":{"gitId":"-"},"content":"[source, java]","isFullCredit":false},{"lineNumber":974,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":975,"author":{"gitId":"-"},"content":"public class TeamNotFoundException extends Exception {","isFullCredit":false},{"lineNumber":976,"author":{"gitId":"-"},"content":"    //...TeamNotFoundException...","isFullCredit":false},{"lineNumber":977,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":978,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":979,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":980,"author":{"gitId":"-"},"content":".`DupliecateTeamException.java`","isFullCredit":false},{"lineNumber":981,"author":{"gitId":"-"},"content":"[source, java]","isFullCredit":false},{"lineNumber":982,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":983,"author":{"gitId":"-"},"content":"public class DuplicateTeamException extends DuplicateDataException {","isFullCredit":false},{"lineNumber":984,"author":{"gitId":"-"},"content":"    //...DuplicateTeamException...","isFullCredit":false},{"lineNumber":985,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":986,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":987,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":988,"author":{"gitId":"-"},"content":"Implementing a new component into MTM, the data consisting of `Team` is also stored into storage using `XmlAdaptedTeam.java` to format the output.","isFullCredit":false},{"lineNumber":989,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":990,"author":{"gitId":"-"},"content":"Code snippet from `XmlAdaptedTeam.java` that shows the elements that will be stored into storage.","isFullCredit":false},{"lineNumber":991,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":992,"author":{"gitId":"-"},"content":"[source, java]","isFullCredit":false},{"lineNumber":993,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":994,"author":{"gitId":"-"},"content":"public class XmlAdaptedTeam {","isFullCredit":false},{"lineNumber":995,"author":{"gitId":"-"},"content":"    @XmlElement(required \u003d true)","isFullCredit":false},{"lineNumber":996,"author":{"gitId":"-"},"content":"    private String teamName;","isFullCredit":false},{"lineNumber":997,"author":{"gitId":"-"},"content":"    @XmlElement","isFullCredit":false},{"lineNumber":998,"author":{"gitId":"-"},"content":"    private List\u003cXmlAdaptedPerson\u003e players \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":999,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":1000,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":1001,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1002,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Design Considerations","isFullCredit":false},{"lineNumber":1003,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d Aspect: Implementation of `Team`","isFullCredit":false},{"lineNumber":1004,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1005,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** `Team` object stores a `Person` object that is also in `UniquePersonList` and `TeamName` is also an attribute of `Person`.","isFullCredit":false},{"lineNumber":1006,"author":{"gitId":"-"},"content":"** Pros: Provides an easier lookup of person belonging in which team without the need of iterating through the `UniqueTeamList` for a specific `Person`, and provide ease of access to data for future enhancements.","isFullCredit":false},{"lineNumber":1007,"author":{"gitId":"-"},"content":"** Cons: Checks to ensure synchronicity need to be done thoroughly to ensure that player information is in sync between Team and full player list","isFullCredit":false},{"lineNumber":1008,"author":{"gitId":"-"},"content":"* **Alternative 2:** `Team` object is stored in `Person` object as an attribute.","isFullCredit":false},{"lineNumber":1009,"author":{"gitId":"-"},"content":"** Pros: Logical thought process to include `Team` as an attribute.","isFullCredit":false},{"lineNumber":1010,"author":{"gitId":"-"},"content":"** Cons: Excess storage wasted due to duplicated data of `Team` in every `Person`.","isFullCredit":false},{"lineNumber":1011,"author":{"gitId":"-"},"content":"// end::team[]","isFullCredit":false},{"lineNumber":1012,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1013,"author":{"gitId":"-"},"content":"// tag::teamfunction[]","isFullCredit":false},{"lineNumber":1014,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Team Functions `[since v1.4]`","isFullCredit":false},{"lineNumber":1015,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1016,"author":{"gitId":"-"},"content":"To assist the user with manging teams, we have decided to use the design concept of Create-Read-Update-Delete (CRUD) to implement commands related to `Team`.","isFullCredit":false},{"lineNumber":1017,"author":{"gitId":"-"},"content":"This set of commands provide the basic necessities for the user to efficiently use our application.","isFullCredit":false},{"lineNumber":1018,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1019,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Current Implementation","isFullCredit":false},{"lineNumber":1020,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1021,"author":{"gitId":"-"},"content":"Based on the principles of CRUD, we have created the commands that corresponds to each principles, namely, `create`, `view`, `rename` and `assign`, `remove`.","isFullCredit":false},{"lineNumber":1022,"author":{"gitId":"-"},"content":"With these commands, the application is ready to support the features that the application is designed to be used.","isFullCredit":false},{"lineNumber":1023,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1024,"author":{"gitId":"-"},"content":"Team-related commands that modifies the data in the application, such as `create`, `rename`, `assign`, and `remove`, inherits from `UndoableCommand` class which makes all these commands undoable. Each command has its own `Parser` to uniquely parse user input arguments for the commands, so that it is validated and the command understand what it should be doing.","isFullCredit":false},{"lineNumber":1025,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1026,"author":{"gitId":"-"},"content":"For each feature, new functions are created in `AddressBook.java` and `ModelManager.java` so that the commands executed are able to manipulate the data accordingly.","isFullCredit":false},{"lineNumber":1027,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1028,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d `create`: Creates a `Team`, so that other team-related commands can be executed.","isFullCredit":false},{"lineNumber":1029,"author":{"gitId":"-"},"content":"After the creation of a new team, the user will then be able to perform a new set of commands that performs team management functionality. Moreover, the `add` command can be used with the prefix `tm/` to immediately add the user into MTM and into the team specified.","isFullCredit":false},{"lineNumber":1030,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1031,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the operation of the `create` command:","isFullCredit":false},{"lineNumber":1032,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1033,"author":{"gitId":"-"},"content":".Logic Component: Create Sequence Diagram","isFullCredit":false},{"lineNumber":1034,"author":{"gitId":"-"},"content":"image::TeamCreateSequenceDiagram1.png[width\u003d\"100%\"]","isFullCredit":false},{"lineNumber":1035,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1036,"author":{"gitId":"-"},"content":".Model Component: Create Sequence Diagram","isFullCredit":false},{"lineNumber":1037,"author":{"gitId":"-"},"content":"image::TeamCreateSequenceDiagram2.png[width\u003d\"70%\"]","isFullCredit":false},{"lineNumber":1038,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1039,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d `view`: Views a `Team`, which shows all players in the team.","isFullCredit":false},{"lineNumber":1040,"author":{"gitId":"-"},"content":"The command uses the `filteredPersons` list, and an overloaded `updateFilteredPersonList` method that sets a predicate that filters the list based on a `TeamName`, in `ModelManager.java` so that it can be displayed via the UI.","isFullCredit":false},{"lineNumber":1041,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1042,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the operation of the `view` command:","isFullCredit":false},{"lineNumber":1043,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1044,"author":{"gitId":"-"},"content":".View Sequence Diagram","isFullCredit":false},{"lineNumber":1045,"author":{"gitId":"-"},"content":"image::TeamViewSequenceDiagram.png[width\u003d\"100%\"]","isFullCredit":false},{"lineNumber":1046,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1047,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d `rename`: Renames a given `Team`.","isFullCredit":false},{"lineNumber":1048,"author":{"gitId":"-"},"content":"The user can rename a specified team to a new team name only if the current team name does not existing in MTM. On a side note, it prevents the user from renaming the team to the same name that it currently have.","isFullCredit":false},{"lineNumber":1049,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1050,"author":{"gitId":"-"},"content":"This command will update the name of the teams that are in `teams` in `AddressBook.java` and will update all the players `TeamName` field in `persons` and `Team` with the new team name.","isFullCredit":false},{"lineNumber":1051,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1052,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the operation of the `rename` command:","isFullCredit":false},{"lineNumber":1053,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1054,"author":{"gitId":"-"},"content":".Logic Component: Rename Sequence Diagram","isFullCredit":false},{"lineNumber":1055,"author":{"gitId":"-"},"content":"image::TeamRenameSequenceDiagram1.png[width\u003d\"100%\"]","isFullCredit":false},{"lineNumber":1056,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1057,"author":{"gitId":"-"},"content":".Model Component: Rename Sequence Diagram","isFullCredit":false},{"lineNumber":1058,"author":{"gitId":"-"},"content":"image::TeamRenameSequenceDiagram2.png[width\u003d\"70%\"]","isFullCredit":false},{"lineNumber":1059,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1060,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d `assign`: Assign a set of `Person` to a specified `Team`.","isFullCredit":false},{"lineNumber":1061,"author":{"gitId":"-"},"content":"The core feature that organizes the player into teams so that the user can easily view the desired team players quickly. The command have 2 functions, firstly it is able to assign an individual or a set of players to a specified team, and secondly, it is able to unassign an individual or a set of players from any team.","isFullCredit":false},{"lineNumber":1062,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1063,"author":{"gitId":"-"},"content":"The command takes in a set of indexes that corresponds to the player in the current list, and will perform the assign operation in ascending index order. If the command is unable to process an index given, it will process all the valid index until the index that causes an issue.","isFullCredit":false},{"lineNumber":1064,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1065,"author":{"gitId":"-"},"content":"[NOTE]","isFullCredit":false},{"lineNumber":1066,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":1067,"author":{"gitId":"-"},"content":"Typical issues that the command handles are,","isFullCredit":false},{"lineNumber":1068,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1069,"author":{"gitId":"-"},"content":"* Assigning a player to the same team that it is currently in.","isFullCredit":false},{"lineNumber":1070,"author":{"gitId":"-"},"content":"* Assigning a player to team that does not exist.","isFullCredit":false},{"lineNumber":1071,"author":{"gitId":"-"},"content":"* Unassigning a player that does not exist in any team.","isFullCredit":false},{"lineNumber":1072,"author":{"gitId":"-"},"content":"* Process index starting from 1.","isFullCredit":false},{"lineNumber":1073,"author":{"gitId":"-"},"content":"* Removes all index that exceeds the current number of player listed.","isFullCredit":false},{"lineNumber":1074,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":1075,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1076,"author":{"gitId":"-"},"content":"This command will update and synchronise all affected players in `persons` and in the specified `Team` object, such that their `TeamName` field in `Person` are updated with the new assigned or unassigned team. At the same time, the list of players in `Team` gets update if new player are assigned or unassigned.","isFullCredit":false},{"lineNumber":1077,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1078,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the operation of the `assign` command:","isFullCredit":false},{"lineNumber":1079,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1080,"author":{"gitId":"-"},"content":".Assign Sequence Diagram","isFullCredit":false},{"lineNumber":1081,"author":{"gitId":"-"},"content":"image::TeamAssignSequenceDiagram.png[width\u003d\"100%\"]","isFullCredit":false},{"lineNumber":1082,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1083,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d `remove`: Removes the given `Team`.","isFullCredit":false},{"lineNumber":1084,"author":{"gitId":"-"},"content":"The final step in completing the CRUD design is the removal of team. It will delete the `Team` from `teams` list in `AddressBook.java` and will update all affected players in the team to be unassigned from the team by having their `TeamName` field updated with an unspecifed field.","isFullCredit":false},{"lineNumber":1085,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1086,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the operation of the `remove` command:","isFullCredit":false},{"lineNumber":1087,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1088,"author":{"gitId":"-"},"content":".Logic Component: Remove Sequence Diagram","isFullCredit":false},{"lineNumber":1089,"author":{"gitId":"-"},"content":"image::TeamRemoveSequenceDiagram1.png[width\u003d\"100%\"]","isFullCredit":false},{"lineNumber":1090,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1091,"author":{"gitId":"-"},"content":".Model Component: Remove Sequence Diagram","isFullCredit":false},{"lineNumber":1092,"author":{"gitId":"-"},"content":"image::TeamRemoveSequenceDiagram2.png[width\u003d\"70%\"]","isFullCredit":false},{"lineNumber":1093,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1094,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Design Consideration","isFullCredit":false},{"lineNumber":1095,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d Aspect: Implementation of Team Functions","isFullCredit":false},{"lineNumber":1096,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Uses CRUD design concept to create new commands.","isFullCredit":false},{"lineNumber":1097,"author":{"gitId":"-"},"content":"** Pros: Systematic approach in dealing with what functions should be created to ensure that the product has the features required to perform team management, and provides a platform to work on ideal features that target the needs of the audience.","isFullCredit":false},{"lineNumber":1098,"author":{"gitId":"-"},"content":"** Cons: Simple and only captures the basic requirements of the product.","isFullCredit":false},{"lineNumber":1099,"author":{"gitId":"-"},"content":"* **Alternative 2:** Implement commands based on suggested features.","isFullCredit":false},{"lineNumber":1100,"author":{"gitId":"-"},"content":"** Pros: End product will have features that targets the need of the audiences.","isFullCredit":false},{"lineNumber":1101,"author":{"gitId":"-"},"content":"** Cons: Possible to miss out basic and core features of a team management application.","isFullCredit":false},{"lineNumber":1102,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1103,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d Aspect: Undoable commands for Team Functions","isFullCredit":false},{"lineNumber":1104,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Make all functions that modifies data to be undoable.","isFullCredit":false},{"lineNumber":1105,"author":{"gitId":"-"},"content":"** Pros: Follows the current implementation of `undo` such that if data are modified in MTM, it will be an undoable command.","isFullCredit":false},{"lineNumber":1106,"author":{"gitId":"-"},"content":"** Cons: Need to ensure that regression bugs are squashed when the new commands are executed, and time consuming in identifying regression.","isFullCredit":false},{"lineNumber":1107,"author":{"gitId":"-"},"content":"* **Alternative 2:** Make all functions not undoable.","isFullCredit":false},{"lineNumber":1108,"author":{"gitId":"-"},"content":"** Pros: Easy to implement and will produce lesser regression bugs.","isFullCredit":false},{"lineNumber":1109,"author":{"gitId":"-"},"content":"** Cons: Does not align with the current implementation of `undo` \u0026 `redo`, and the user would require more steps to revert any changes made.","isFullCredit":false},{"lineNumber":1110,"author":{"gitId":"-"},"content":"// end::teamfunction[]","isFullCredit":false},{"lineNumber":1111,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1112,"author":{"gitId":"-"},"content":"// tag::showbestxi[]","isFullCredit":false},{"lineNumber":1113,"author":{"gitId":"lohtianwei"},"content":"\u003d\u003d\u003d\u003d Show Best XI `[coming in v2.0]`","isFullCredit":false},{"lineNumber":1114,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Current Implementation","isFullCredit":false},{"lineNumber":1115,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":1116,"author":{"gitId":"lohtianwei"},"content":"The `showBest` command is able to show the current team\u0027s best 11 players. There is however no functional implementation for this feature yet. Coming soon!","isFullCredit":false},{"lineNumber":1117,"author":{"gitId":"-"},"content":"// end::showbestxi[]","isFullCredit":false},{"lineNumber":1118,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1119,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Usability Enhancements","isFullCredit":false},{"lineNumber":1120,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1121,"author":{"gitId":"-"},"content":"// tag::key[]","isFullCredit":false},{"lineNumber":1122,"author":{"gitId":"lohtianwei"},"content":"\u003d\u003d\u003d\u003d Toggle lock on MTM `[since v1.5]`","isFullCredit":false},{"lineNumber":1123,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Current Implementation","isFullCredit":false},{"lineNumber":1124,"author":{"gitId":"-"},"content":"Locking mechanism of MTM can be toggled on and off using the `Key` command. It utilises the Model to access","isFullCredit":false},{"lineNumber":1125,"author":{"gitId":"-"},"content":"user preferences of MTM. Current lock state and password is stored in `UserPrefs` in the Storage component.","isFullCredit":false},{"lineNumber":1126,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1127,"author":{"gitId":"lohtianwei"},"content":"This activity diagram shows the logic behind the `Key` command:","isFullCredit":false},{"lineNumber":1128,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":1129,"author":{"gitId":"lohtianwei"},"content":".Key Activity Diagram","isFullCredit":false},{"lineNumber":1130,"author":{"gitId":"lohtianwei"},"content":"image::Keyactdiag.png[width\u003d\"900\"]","isFullCredit":false},{"lineNumber":1131,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":1132,"author":{"gitId":"-"},"content":"Password checking done in `Key` command:","isFullCredit":false},{"lineNumber":1133,"author":{"gitId":"-"},"content":"[source, java]","isFullCredit":false},{"lineNumber":1134,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":1135,"author":{"gitId":"-"},"content":"private boolean correctPassword() {","isFullCredit":false},{"lineNumber":1136,"author":{"gitId":"-"},"content":"        UserPrefs up \u003d model.getUserPrefs();","isFullCredit":false},{"lineNumber":1137,"author":{"gitId":"-"},"content":"        String hash \u003d Hashing.sha256().hashString(password, StandardCharsets.UTF_8).toString();","isFullCredit":false},{"lineNumber":1138,"author":{"gitId":"-"},"content":"        return hash.equals(up.getAddressBookHashedPass());","isFullCredit":false},{"lineNumber":1139,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":1140,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":1141,"author":{"gitId":"-"},"content":"When password check is done, the lock on MTM is toggled to the state opposite of the current:","isFullCredit":false},{"lineNumber":1142,"author":{"gitId":"-"},"content":"[source, java]","isFullCredit":false},{"lineNumber":1143,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":1144,"author":{"gitId":"-"},"content":"if (correctPassword()) {","isFullCredit":false},{"lineNumber":1145,"author":{"gitId":"-"},"content":"            if (model.getLockState()) {","isFullCredit":false},{"lineNumber":1146,"author":{"gitId":"-"},"content":"                model.unlockAddressBookModel();","isFullCredit":false},{"lineNumber":1147,"author":{"gitId":"-"},"content":"            } else {","isFullCredit":false},{"lineNumber":1148,"author":{"gitId":"-"},"content":"                model.lockAddressBookModel();","isFullCredit":false},{"lineNumber":1149,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":1150,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1151,"author":{"gitId":"-"},"content":"            logger.info(\"Lock state is now: \" + Boolean.toString(model.getLockState()));","isFullCredit":false},{"lineNumber":1152,"author":{"gitId":"-"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","isFullCredit":false},{"lineNumber":1153,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":1154,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":1155,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1156,"author":{"gitId":"-"},"content":"In a locked state, only certain functions of MTM can be used. This is to prevent unauthorised tampering with the details","isFullCredit":false},{"lineNumber":1157,"author":{"gitId":"-"},"content":"stored on MTM.","isFullCredit":false},{"lineNumber":1158,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1159,"author":{"gitId":"-"},"content":"This is done in `AddressBookParser`. Commands are split into low level or not. When a command is","isFullCredit":false},{"lineNumber":1160,"author":{"gitId":"-"},"content":"being executed, it is checked if it falls under the low level category. If so, it would execute. When adding new features,","isFullCredit":false},{"lineNumber":1161,"author":{"gitId":"-"},"content":"add them to this list should you feel it is \u0027low level\u0027:","isFullCredit":false},{"lineNumber":1162,"author":{"gitId":"-"},"content":"[source, java]","isFullCredit":false},{"lineNumber":1163,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":1164,"author":{"gitId":"-"},"content":"private Command lowLevelCommand(String commandWord, String arguments) throws ParseException {","isFullCredit":false},{"lineNumber":1165,"author":{"gitId":"-"},"content":"        switch(commandWord) {","isFullCredit":false},{"lineNumber":1166,"author":{"gitId":"-"},"content":"        case ChangeThemeCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":1167,"author":{"gitId":"-"},"content":"        case ChangeThemeCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":1168,"author":{"gitId":"-"},"content":"            return new ChangeThemeCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":1169,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1170,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":1171,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":1172,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":1173,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1174,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":1175,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":1176,"author":{"gitId":"-"},"content":"            return new ListCommand();","isFullCredit":false},{"lineNumber":1177,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1178,"author":{"gitId":"-"},"content":"        case KeyCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":1179,"author":{"gitId":"-"},"content":"        case KeyCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":1180,"author":{"gitId":"-"},"content":"            return new KeyCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":1181,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1182,"author":{"gitId":"-"},"content":"        case ViewCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":1183,"author":{"gitId":"-"},"content":"        case ViewCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":1184,"author":{"gitId":"-"},"content":"            return new ViewCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":1185,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1186,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":1187,"author":{"gitId":"-"},"content":"            return new ExitCommand();","isFullCredit":false},{"lineNumber":1188,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1189,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":1190,"author":{"gitId":"-"},"content":"            return new HelpCommand();","isFullCredit":false},{"lineNumber":1191,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1192,"author":{"gitId":"-"},"content":"        case SortCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":1193,"author":{"gitId":"-"},"content":"        case SortCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":1194,"author":{"gitId":"-"},"content":"            return new SortCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":1195,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1196,"author":{"gitId":"-"},"content":"        default:","isFullCredit":false},{"lineNumber":1197,"author":{"gitId":"-"},"content":"            return null;","isFullCredit":false},{"lineNumber":1198,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":1199,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":1200,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":1201,"author":{"gitId":"-"},"content":"If command being executed does not fall into the category of \u0027low level\u0027, a check on the lock state of MTM is done","isFullCredit":false},{"lineNumber":1202,"author":{"gitId":"-"},"content":"before allowing or restricting access:","isFullCredit":false},{"lineNumber":1203,"author":{"gitId":"-"},"content":"[source, java]","isFullCredit":false},{"lineNumber":1204,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":1205,"author":{"gitId":"-"},"content":"if (lockState) {","isFullCredit":false},{"lineNumber":1206,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_RESTRICTED);","isFullCredit":false},{"lineNumber":1207,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":1208,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":1209,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1210,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Design Considerations","isFullCredit":false},{"lineNumber":1211,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d Aspect: Implementation of locking MTM","isFullCredit":false},{"lineNumber":1212,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Lock is toggled with only a single command `Key`.","isFullCredit":false},{"lineNumber":1213,"author":{"gitId":"-"},"content":"** Pros: Easy to implement, just check current lock state and switch it.","isFullCredit":false},{"lineNumber":1214,"author":{"gitId":"-"},"content":"** Cons: With a toggle, user might unlock MTM thinking he/she is locking it.","isFullCredit":false},{"lineNumber":1215,"author":{"gitId":"-"},"content":"* **Alternative 2:** Locking and unlocking of MTM is done with two separate commands.","isFullCredit":false},{"lineNumber":1216,"author":{"gitId":"-"},"content":"** Pros: Ensures that when a lock is done, MTM is truly locked.","isFullCredit":false},{"lineNumber":1217,"author":{"gitId":"-"},"content":"** Cons: Addtional command needs to be created, along with its command parser and implementations.","isFullCredit":false},{"lineNumber":1218,"author":{"gitId":"-"},"content":"// end::key[]","isFullCredit":false},{"lineNumber":1219,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1220,"author":{"gitId":"-"},"content":"// tag::changepass[]","isFullCredit":false},{"lineNumber":1221,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Change Password `[coming in v2.0]`","isFullCredit":false},{"lineNumber":1222,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1223,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Current Implementation","isFullCredit":false},{"lineNumber":1224,"author":{"gitId":"-"},"content":"Default password used for toggling lock on MTM is currently \u0027ilikesports\u0027. In an upcoming update, user would be able","isFullCredit":false},{"lineNumber":1225,"author":{"gitId":"-"},"content":"to change this password to one of his choosing. There is currently no functional implementation for this feature yet.","isFullCredit":false},{"lineNumber":1226,"author":{"gitId":"-"},"content":"Coming soon!","isFullCredit":false},{"lineNumber":1227,"author":{"gitId":"-"},"content":"// end::changepass[]","isFullCredit":false},{"lineNumber":1228,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1229,"author":{"gitId":"codeeong"},"content":"\u003d\u003d\u003d User Experience Enhancements","isFullCredit":false},{"lineNumber":1230,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1231,"author":{"gitId":"-"},"content":"// tag::autocomplete[]","isFullCredit":false},{"lineNumber":1232,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Tab Autocomplete","isFullCredit":false},{"lineNumber":1233,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Current Implementation","isFullCredit":false},{"lineNumber":1234,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1235,"author":{"gitId":"-"},"content":"The tab autocomplete feature works by handling the Tab key pressed event, searching for any commands with matching prefix and returns one if found.","isFullCredit":false},{"lineNumber":1236,"author":{"gitId":"-"},"content":"The command strings are stored in a Trie data structure, named `CommandTrie`, for optimal search.","isFullCredit":false},{"lineNumber":1237,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1238,"author":{"gitId":"-"},"content":"[source, java]","isFullCredit":false},{"lineNumber":1239,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":1240,"author":{"gitId":"-"},"content":"public class CommandTrie {","isFullCredit":false},{"lineNumber":1241,"author":{"gitId":"-"},"content":"    String attemptAutoComplete (String input);","isFullCredit":false},{"lineNumber":1242,"author":{"gitId":"-"},"content":"    void insert (String input);","isFullCredit":false},{"lineNumber":1243,"author":{"gitId":"-"},"content":"    Set\u003cString\u003e getCommandSet();","isFullCredit":false},{"lineNumber":1244,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":1245,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":1246,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1247,"author":{"gitId":"-"},"content":"The trie is made up of `TrieNode` objects which contains three objects. The `TrieNode sibling` represents a character on the same level as the current one. The `TrieNode child` represents a next possible letter.","isFullCredit":false},{"lineNumber":1248,"author":{"gitId":"-"},"content":"For example in the words `edit` and `exit`, the node for `d` would have a child `i` and a sibling `x`. `x` would have a child `i`.","isFullCredit":false},{"lineNumber":1249,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1250,"author":{"gitId":"-"},"content":"[source, java]","isFullCredit":false},{"lineNumber":1251,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":1252,"author":{"gitId":"-"},"content":"public class TrieNode {","isFullCredit":false},{"lineNumber":1253,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1254,"author":{"gitId":"-"},"content":"    private TrieNode sibling;","isFullCredit":false},{"lineNumber":1255,"author":{"gitId":"-"},"content":"    private TrieNode child;","isFullCredit":false},{"lineNumber":1256,"author":{"gitId":"-"},"content":"    private char key;","isFullCredit":false},{"lineNumber":1257,"author":{"gitId":"-"},"content":"    ...","isFullCredit":false},{"lineNumber":1258,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":1259,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1260,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":1261,"author":{"gitId":"-"},"content":"Upon the pressing of the tab key, the command box calls `attemptAutoComplete`, in the `commandTrie` class. With the content of the command box as the query, attemptAutoComplete searches for the query using the standard Trie search algortihm.","isFullCredit":false},{"lineNumber":1262,"author":{"gitId":"-"},"content":"If the query prefix itself is not present in the trie, then the attempt fails. If the query reaches a `TrieNode` with a `sibling` or `child` `TrieNode`,","isFullCredit":false},{"lineNumber":1263,"author":{"gitId":"-"},"content":"it will provide the user with possible commands for a given input. In this case, a dropdown box will appear in the UI that lists the possible commands for the user.","isFullCredit":false},{"lineNumber":1264,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1265,"author":{"gitId":"-"},"content":"Upon finding a matching command, `attemptAutoComplete` returns it and replaces the text in the Command Line. If the no matching command is found, the text is turned red.","isFullCredit":false},{"lineNumber":1266,"author":{"gitId":"-"},"content":"// end::autocomplete[]","isFullCredit":false},{"lineNumber":1267,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1268,"author":{"gitId":"-"},"content":"// tag::enhancedadd[]","isFullCredit":false},{"lineNumber":1269,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Optional Field Add Command `[since v1.1]`","isFullCredit":false},{"lineNumber":1270,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1271,"author":{"gitId":"-"},"content":"MTM is designed to manage a multitude of players and the main function that would be used repetitively is the `add` command, hence it would alleviate the cumbersomeness of entering every detail of the players when you want the command to be executed quickly.","isFullCredit":false},{"lineNumber":1272,"author":{"gitId":"-"},"content":"Having the option to only entering the mandatory fields and leaving the optional ones empty will make the process of adding players more efficient.","isFullCredit":false},{"lineNumber":1273,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1274,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Current Implementation","isFullCredit":false},{"lineNumber":1275,"author":{"gitId":"-"},"content":"This mechanism enhances the original implementation of the `add` command.","isFullCredit":false},{"lineNumber":1276,"author":{"gitId":"-"},"content":"The required fields that are mandatory to be filled by the user are `n/NAME` and `e/EMAIL`.","isFullCredit":false},{"lineNumber":1277,"author":{"gitId":"-"},"content":"This implementation of making fields optional for `AddCommand` allows user to add players without their full information, and can be updated accordingly when the user retrieves their full information.","isFullCredit":false},{"lineNumber":1278,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1279,"author":{"gitId":"-"},"content":"Code snippet from `ParserUtil.java` that shows the implementation of when a field is left empty.","isFullCredit":false},{"lineNumber":1280,"author":{"gitId":"-"},"content":"\"\u003cUNSPECIFIED\u003e\" string will be return when the value passed in is empty.","isFullCredit":false},{"lineNumber":1281,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1282,"author":{"gitId":"-"},"content":"[source, java]","isFullCredit":false},{"lineNumber":1283,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":1284,"author":{"gitId":"-"},"content":"public class ParserUtil {","isFullCredit":false},{"lineNumber":1285,"author":{"gitId":"-"},"content":"    public static final String UNSPECIFIED_FIELD \u003d \"\u003cUNSPECIFIED\u003e\";","isFullCredit":false},{"lineNumber":1286,"author":{"gitId":"-"},"content":"    //...ParserUtil code...","isFullCredit":false},{"lineNumber":1287,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1288,"author":{"gitId":"-"},"content":"    public static Optional\u003cString\u003e parseValue(Optional\u003cString\u003e value, String messageConstraints)","isFullCredit":false},{"lineNumber":1289,"author":{"gitId":"-"},"content":"        throws IllegalValueException {","isFullCredit":false},{"lineNumber":1290,"author":{"gitId":"-"},"content":"    if (value.isPresent() \u0026\u0026 value.get().equals(UNSPECIFIED_FIELD)) {","isFullCredit":false},{"lineNumber":1291,"author":{"gitId":"-"},"content":"        throw new IllegalValueException(messageConstraints);","isFullCredit":false},{"lineNumber":1292,"author":{"gitId":"-"},"content":"    } else {","isFullCredit":false},{"lineNumber":1293,"author":{"gitId":"-"},"content":"        return Optional.of(value.orElse(UNSPECIFIED_FIELD));","isFullCredit":false},{"lineNumber":1294,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":1295,"author":{"gitId":"-"},"content":"    //...ParserUtil code ...","isFullCredit":false},{"lineNumber":1296,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":1297,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":1298,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1299,"author":{"gitId":"-"},"content":"Code snippet from `AddCommandParser.java` that shows the usage of parsing fields that are set as optional.","isFullCredit":false},{"lineNumber":1300,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1301,"author":{"gitId":"-"},"content":"[source,java]","isFullCredit":false},{"lineNumber":1302,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":1303,"author":{"gitId":"-"},"content":"public AddCommand parse(String args) throws ParseException {","isFullCredit":false},{"lineNumber":1304,"author":{"gitId":"-"},"content":"        //...tokenize arguments...","isFullCredit":false},{"lineNumber":1305,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_EMAIL)","isFullCredit":false},{"lineNumber":1306,"author":{"gitId":"-"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","isFullCredit":false},{"lineNumber":1307,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","isFullCredit":false},{"lineNumber":1308,"author":{"gitId":"-"},"content":"                AddCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":1309,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":1310,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1311,"author":{"gitId":"-"},"content":"        //...get person details from arguments...","isFullCredit":false},{"lineNumber":1312,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(ParserUtil.parseValue(argMultimap","isFullCredit":false},{"lineNumber":1313,"author":{"gitId":"-"},"content":"            .getValue(PREFIX_ADDRESS), Address.MESSAGE_ADDRESS_CONSTRAINTS)).get();","isFullCredit":false},{"lineNumber":1314,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1315,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","isFullCredit":false},{"lineNumber":1316,"author":{"gitId":"-"},"content":"        //...AddCommandParser code...","isFullCredit":false},{"lineNumber":1317,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":1318,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":1319,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1320,"author":{"gitId":"-"},"content":"Code snippet from `Address.java` that shows an example of an optional field being valid when not specified.","isFullCredit":false},{"lineNumber":1321,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1322,"author":{"gitId":"-"},"content":"[source, java]","isFullCredit":false},{"lineNumber":1323,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":1324,"author":{"gitId":"-"},"content":"public class Address {","isFullCredit":false},{"lineNumber":1325,"author":{"gitId":"-"},"content":"    //...Address code...","isFullCredit":false},{"lineNumber":1326,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","isFullCredit":false},{"lineNumber":1327,"author":{"gitId":"-"},"content":"        return test.matches(ADDRESS_VALIDATION_REGEX) || test.equals(UNSPECIFIED_FIELD);","isFullCredit":false},{"lineNumber":1328,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":1329,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":1330,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":1331,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1332,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Design Consideration","isFullCredit":false},{"lineNumber":1333,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d Aspect: Implementation of Optional fields","isFullCredit":false},{"lineNumber":1334,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1335,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Set a default value for unspecified fields and parse fields that are mandatory.","isFullCredit":false},{"lineNumber":1336,"author":{"gitId":"-"},"content":"** Pros: Easy to implement as fields are still filled with information even though user did not specify.","isFullCredit":false},{"lineNumber":1337,"author":{"gitId":"-"},"content":"** Cons: Unattractive display of fields when it is unspecified.","isFullCredit":false},{"lineNumber":1338,"author":{"gitId":"-"},"content":"* **Alternative 2:** Require users to input all fields.","isFullCredit":false},{"lineNumber":1339,"author":{"gitId":"-"},"content":"** Pros: The current implementation is used, hence there is no additional code to ensure validity of unspecified input.","isFullCredit":false},{"lineNumber":1340,"author":{"gitId":"-"},"content":"** Cons: Less flexibility is given to the user when adding a player into the application.","isFullCredit":false},{"lineNumber":1341,"author":{"gitId":"-"},"content":"// end::enhancedadd[]","isFullCredit":false},{"lineNumber":1342,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1343,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d UI Enhancements","isFullCredit":false},{"lineNumber":1344,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1345,"author":{"gitId":"-"},"content":"// tag::teamDisplay[]","isFullCredit":false},{"lineNumber":1346,"author":{"gitId":"codeeong"},"content":"\u003d\u003d\u003d\u003d Team Display Bar `[since v1.3]`","isFullCredit":false},{"lineNumber":1347,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Current Implementation","isFullCredit":false},{"lineNumber":1348,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1349,"author":{"gitId":"codeeong"},"content":"The Team Display Bar is implemented as `TeamDisplay` in the UI Component and renders `TeamDisplay.fxml`.","isFullCredit":false},{"lineNumber":1350,"author":{"gitId":"codeeong"},"content":"It is called from `MainWindow` and highlights","isFullCredit":false},{"lineNumber":1351,"author":{"gitId":"codeeong"},"content":"the current team that has been selected in the Command Line Interface by the user. +","isFullCredit":false},{"lineNumber":1352,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1353,"author":{"gitId":"codeeong"},"content":"It calls the `Team` model and displays the `Player` cards associated with that `Team`.","isFullCredit":false},{"lineNumber":1354,"author":{"gitId":"codeeong"},"content":"It contains event handler methods such as handleShowNewTeamEvent(), handleHighlightSelectedTeamEvent(),","isFullCredit":false},{"lineNumber":1355,"author":{"gitId":"codeeong"},"content":"and handleDeselectTeamEvent(), which update the UI accordingly. +","isFullCredit":false},{"lineNumber":1356,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1357,"author":{"gitId":"codeeong"},"content":"The component interactions can be seen in the high level sequence diagram for `TeamDisplay` below, using the example of a `create` command:","isFullCredit":false},{"lineNumber":1358,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1359,"author":{"gitId":"codeeong"},"content":".Component interactions for `create Team` command","isFullCredit":false},{"lineNumber":1360,"author":{"gitId":"codeeong"},"content":"image::ShowNewTeamDiagram.png[width\u003d\"800\"]","isFullCredit":false},{"lineNumber":1361,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1362,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":1363,"author":{"gitId":"codeeong"},"content":"Code snippet from \u0027TeamDisplay\u0027 to show initialisation of UI component and event handlers:","isFullCredit":false},{"lineNumber":1364,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1365,"author":{"gitId":"-"},"content":"[source, java]","isFullCredit":false},{"lineNumber":1366,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":1367,"author":{"gitId":"-"},"content":"public class TeamDisplay extends UiPart\u003cRegion\u003e {","isFullCredit":false},{"lineNumber":1368,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1369,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"TeamDisplay.fxml\";","isFullCredit":false},{"lineNumber":1370,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1371,"author":{"gitId":"-"},"content":"    public TeamDisplay() {","isFullCredit":false},{"lineNumber":1372,"author":{"gitId":"-"},"content":"        super(FXML);","isFullCredit":false},{"lineNumber":1373,"author":{"gitId":"codeeong"},"content":"        //...initialise Teams code...","isFullCredit":false},{"lineNumber":1374,"author":{"gitId":"codeeong"},"content":"        registerAsAnEventHandler(this);","isFullCredit":false},{"lineNumber":1375,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":1376,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1377,"author":{"gitId":"codeeong"},"content":"    @Subscribe","isFullCredit":false},{"lineNumber":1378,"author":{"gitId":"codeeong"},"content":"    private void handleShowNewTeamEvent(ShowNewTeamNameEvent event) {","isFullCredit":false},{"lineNumber":1379,"author":{"gitId":"codeeong"},"content":"        //...handleShowNewTeamEvent code...","isFullCredit":false},{"lineNumber":1380,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":1381,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1382,"author":{"gitId":"codeeong"},"content":"    @Subscribe","isFullCredit":false},{"lineNumber":1383,"author":{"gitId":"codeeong"},"content":"    private void handleHighlightSelectedTeamEvent(HighlightSelectedTeamEvent event) {","isFullCredit":false},{"lineNumber":1384,"author":{"gitId":"codeeong"},"content":"        //...handleHighlightSelectedTeamEvent code...","isFullCredit":false},{"lineNumber":1385,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":1386,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1387,"author":{"gitId":"codeeong"},"content":"    @Subscribe","isFullCredit":false},{"lineNumber":1388,"author":{"gitId":"codeeong"},"content":"    private void handleDeselectTeamEvent(DeselectTeamEvent event) {","isFullCredit":false},{"lineNumber":1389,"author":{"gitId":"codeeong"},"content":"        //...handleDeselectTeamEvent code...","isFullCredit":false},{"lineNumber":1390,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":1391,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":1392,"author":{"gitId":"codeeong"},"content":"----","isFullCredit":false},{"lineNumber":1393,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1394,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Design Considerations","isFullCredit":false},{"lineNumber":1395,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d Aspect: User Experience","isFullCredit":false},{"lineNumber":1396,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1397,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** `TeamDisplay` is placed underneath the `ResultDisplay` and above the `PersonListPanel`.","isFullCredit":false},{"lineNumber":1398,"author":{"gitId":"-"},"content":"** Pros: Located at an obvious location for the user to view the team currently selected.","isFullCredit":false},{"lineNumber":1399,"author":{"gitId":"-"},"content":"** Cons: There will be less space for the `ResultDisplay` and `CommandBox`.","isFullCredit":false},{"lineNumber":1400,"author":{"gitId":"-"},"content":"* **Alternative 2:** `TeamDisplay` is placed on the left of the `PersonListPanel` as a vertical bar.","isFullCredit":false},{"lineNumber":1401,"author":{"gitId":"-"},"content":"** Pros: There will be more space for the `ResultDisplay` and `CommandBox`.","isFullCredit":false},{"lineNumber":1402,"author":{"gitId":"-"},"content":"** Cons: It is less obvious to the user as it is at the side.","isFullCredit":false},{"lineNumber":1403,"author":{"gitId":"-"},"content":"// end::teamDisplay[]","isFullCredit":false},{"lineNumber":1404,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1405,"author":{"gitId":"-"},"content":"// tag::PlayerDetails[]","isFullCredit":false},{"lineNumber":1406,"author":{"gitId":"codeeong"},"content":"\u003d\u003d\u003d\u003d Player Details Pane `[since v1.4]`","isFullCredit":false},{"lineNumber":1407,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Current Implementation","isFullCredit":false},{"lineNumber":1408,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1409,"author":{"gitId":"codeeong"},"content":"The `Player Details` pane is implemented as `PlayerDetails` in the UI Component.","isFullCredit":false},{"lineNumber":1410,"author":{"gitId":"codeeong"},"content":"It is called from `PlayerListPanel`. It renders `PlayerDetails.fxml` and displays the selected `PersonCard`.","isFullCredit":false},{"lineNumber":1411,"author":{"gitId":"codeeong"},"content":"It calls the `Person` model and displays the fields in the `Person` model that are not displayed in the left panel.","isFullCredit":false},{"lineNumber":1412,"author":{"gitId":"codeeong"},"content":"It contains the event handler method handlePersonDetailsChangedEvent(), which updates the UI component when the `edit `","isFullCredit":false},{"lineNumber":1413,"author":{"gitId":"codeeong"},"content":"or `remark` commands are entered. +","isFullCredit":false},{"lineNumber":1414,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1415,"author":{"gitId":"codeeong"},"content":"The component interactions can be seen in the high level sequence diagram for `PlayerDetails` below, using the example of a `remark` command:","isFullCredit":false},{"lineNumber":1416,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1417,"author":{"gitId":"codeeong"},"content":".Component interactions for `remark 1 r/test` command","isFullCredit":false},{"lineNumber":1418,"author":{"gitId":"codeeong"},"content":"image::PlayerDetailsDiagram.png[width\u003d\"800\"]","isFullCredit":false},{"lineNumber":1419,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1420,"author":{"gitId":"-"},"content":"Code snippet from \u0027PlayerDetails\u0027 to show initialisation of UI component:","isFullCredit":false},{"lineNumber":1421,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1422,"author":{"gitId":"-"},"content":"[source, java]","isFullCredit":false},{"lineNumber":1423,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":1424,"author":{"gitId":"-"},"content":"public class PlayerDetails extends UiPart\u003cRegion\u003e {","isFullCredit":false},{"lineNumber":1425,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1426,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PlayerDetails.fxml\";","isFullCredit":false},{"lineNumber":1427,"author":{"gitId":"-"},"content":"    public final Person person;","isFullCredit":false},{"lineNumber":1428,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1429,"author":{"gitId":"-"},"content":"    public PlayerDetails(Person person) {","isFullCredit":false},{"lineNumber":1430,"author":{"gitId":"-"},"content":"        super(FXML);","isFullCredit":false},{"lineNumber":1431,"author":{"gitId":"-"},"content":"        this.person \u003d person;","isFullCredit":false},{"lineNumber":1432,"author":{"gitId":"-"},"content":"        //....player details code...","isFullCredit":false},{"lineNumber":1433,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":1434,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1435,"author":{"gitId":"codeeong"},"content":"    @Subscribe","isFullCredit":false},{"lineNumber":1436,"author":{"gitId":"codeeong"},"content":"    private void handlePersonDetailsChangedEvent(PersonDetailsChangedEvent event) {","isFullCredit":false},{"lineNumber":1437,"author":{"gitId":"codeeong"},"content":"        ...handlePersonDetailsChangedEvent code...","isFullCredit":false},{"lineNumber":1438,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":1439,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1440,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":1441,"author":{"gitId":"-"},"content":"----","isFullCredit":false},{"lineNumber":1442,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1443,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Design Considerations","isFullCredit":false},{"lineNumber":1444,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d Aspect: User Experience","isFullCredit":false},{"lineNumber":1445,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1446,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** `PlayerDetails` is placed on the right of `Person List Panel`, replacing the `BrowserPanel`.","isFullCredit":false},{"lineNumber":1447,"author":{"gitId":"-"},"content":"** Pros: It is the only large unused space in the software left and is right beside the `Person List Panel`, thus is the logical","isFullCredit":false},{"lineNumber":1448,"author":{"gitId":"-"},"content":"place to look at after selection of a person card.","isFullCredit":false},{"lineNumber":1449,"author":{"gitId":"-"},"content":"** Cons: This is a lot of whitespace in the pane as are not many fields.","isFullCredit":false},{"lineNumber":1450,"author":{"gitId":"-"},"content":"* **Alternative 2:** `PlayerDetails` pane size is reduced and the extra space is repurposed.","isFullCredit":false},{"lineNumber":1451,"author":{"gitId":"-"},"content":"** Pros: There will be more space for another new feature e.g. calendar.","isFullCredit":false},{"lineNumber":1452,"author":{"gitId":"-"},"content":"** Cons: It can only be implemented in v2.0 due to time constraints in development.","isFullCredit":false},{"lineNumber":1453,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1454,"author":{"gitId":"codeeong"},"content":"// end::PlayerDetails[]","isFullCredit":false},{"lineNumber":1455,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1456,"author":{"gitId":"codeeong"},"content":"// tag::changeThemeCommand[]","isFullCredit":false},{"lineNumber":1457,"author":{"gitId":"codeeong"},"content":"\u003d\u003d\u003d\u003d Change Theme Command `[since v1.5]`","isFullCredit":false},{"lineNumber":1458,"author":{"gitId":"codeeong"},"content":"\u003d\u003d\u003d\u003d\u003d Current Implementation","isFullCredit":false},{"lineNumber":1459,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1460,"author":{"gitId":"codeeong"},"content":"The `ChangeThemeCommand` is a new feature that allows user to change the current theme to another theme. A new css class is implemented to accommodate the new theme, LightTheme.","isFullCredit":false},{"lineNumber":1461,"author":{"gitId":"codeeong"},"content":"The `MainWindow` class is also changed to contain a handleChangeThemeRequestEvent() method which is an event handler to `setAddressBookTheme`,","isFullCredit":false},{"lineNumber":1462,"author":{"gitId":"codeeong"},"content":"which is a method in `UserPrefs`. +","isFullCredit":false},{"lineNumber":1463,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1464,"author":{"gitId":"codeeong"},"content":"Below is the sequence diagram for how the `ChangeThemeCommand` works:","isFullCredit":false},{"lineNumber":1465,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1466,"author":{"gitId":"codeeong"},"content":".Interactions of the Logic Component with the UI and Model Components for the `changeTheme` Command","isFullCredit":false},{"lineNumber":1467,"author":{"gitId":"codeeong"},"content":"image::ChangeThemeDiagram.png[width\u003d\"800\"]","isFullCredit":false},{"lineNumber":1468,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1469,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1470,"author":{"gitId":"codeeong"},"content":"Code snippet from \u0027ChangeThemeCommand\u0027:","isFullCredit":false},{"lineNumber":1471,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1472,"author":{"gitId":"codeeong"},"content":"[source, java]","isFullCredit":false},{"lineNumber":1473,"author":{"gitId":"codeeong"},"content":"----","isFullCredit":false},{"lineNumber":1474,"author":{"gitId":"codeeong"},"content":"public class ChangeThemeCommand extends Command {","isFullCredit":false},{"lineNumber":1475,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1476,"author":{"gitId":"codeeong"},"content":"    public ChangeThemeCommand(String theme) {","isFullCredit":false},{"lineNumber":1477,"author":{"gitId":"codeeong"},"content":"            this.theme \u003d theme.trim();","isFullCredit":false},{"lineNumber":1478,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":1479,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1480,"author":{"gitId":"codeeong"},"content":"   @Override","isFullCredit":false},{"lineNumber":1481,"author":{"gitId":"codeeong"},"content":"    public CommandResult execute() throws CommandException {","isFullCredit":false},{"lineNumber":1482,"author":{"gitId":"codeeong"},"content":"        //...check for valid theme code...","isFullCredit":false},{"lineNumber":1483,"author":{"gitId":"codeeong"},"content":"        EventsCenter.getInstance().post(new ChangeThemeEvent(this.theme));","isFullCredit":false},{"lineNumber":1484,"author":{"gitId":"codeeong"},"content":"        return new CommandResult(String.format(MESSAGE_THEME_SUCCESS, this.theme));","isFullCredit":false},{"lineNumber":1485,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":1486,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false},{"lineNumber":1487,"author":{"gitId":"codeeong"},"content":"----","isFullCredit":false},{"lineNumber":1488,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1489,"author":{"gitId":"codeeong"},"content":"\u003d\u003d\u003d\u003d\u003d Design Considerations","isFullCredit":false},{"lineNumber":1490,"author":{"gitId":"codeeong"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d Aspect: Command Syntax","isFullCredit":false},{"lineNumber":1491,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1492,"author":{"gitId":"codeeong"},"content":"* **Alternative 1 (current choice):** The command syntax is in the form \"changeTheme Dark\" or \"changeTheme Light\".","isFullCredit":false},{"lineNumber":1493,"author":{"gitId":"codeeong"},"content":"** Pros: This supports future implementation of more themes, so that the developer can easily add the new themes without","isFullCredit":false},{"lineNumber":1494,"author":{"gitId":"codeeong"},"content":"having to change the execution.","isFullCredit":false},{"lineNumber":1495,"author":{"gitId":"codeeong"},"content":"** Cons: The command is longer than it could be. (see alternative 2)","isFullCredit":false},{"lineNumber":1496,"author":{"gitId":"codeeong"},"content":"* **Alternative 2:** The command syntax in the form \"changeTheme\", which would automatically toggle the theme.","isFullCredit":false},{"lineNumber":1497,"author":{"gitId":"codeeong"},"content":"** Pros: User does not have to type anything to change the theme, so it might be more user friendly.","isFullCredit":false},{"lineNumber":1498,"author":{"gitId":"codeeong"},"content":"** Cons: Future implementation of more themes would be harder for the developer as the toggle function would have to be","isFullCredit":false},{"lineNumber":1499,"author":{"gitId":"codeeong"},"content":"changed quite drastically to become a command for selecting a theme out of multiple themes.","isFullCredit":false},{"lineNumber":1500,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1501,"author":{"gitId":"codeeong"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d Aspect: User Experience","isFullCredit":false},{"lineNumber":1502,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1503,"author":{"gitId":"codeeong"},"content":"* **Alternative 1 (current choice):** `ChangeThemeCommand` is implemented as a CLI command.","isFullCredit":false},{"lineNumber":1504,"author":{"gitId":"codeeong"},"content":"** Pros: Consistent with the rest of the application, of which all changes are made by the CLI.","isFullCredit":false},{"lineNumber":1505,"author":{"gitId":"codeeong"},"content":"** Cons: User has yet another command to remember the syntax of.","isFullCredit":false},{"lineNumber":1506,"author":{"gitId":"codeeong"},"content":"* **Alternative 2:** Change of theme is implemented as a button to change onClick.","isFullCredit":false},{"lineNumber":1507,"author":{"gitId":"codeeong"},"content":"** Pros: User does not have to type anything to change the theme, so it might be more user friendly.","isFullCredit":false},{"lineNumber":1508,"author":{"gitId":"codeeong"},"content":"** Cons: Inconsistent with the rest of the application, which is CLI-based.","isFullCredit":false},{"lineNumber":1509,"author":{"gitId":"codeeong"},"content":"// end::changeThemeCommand[]","isFullCredit":false},{"lineNumber":1510,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1511,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1512,"author":{"gitId":"codeeong"},"content":"// tag::settagcolour[]","isFullCredit":false},{"lineNumber":1513,"author":{"gitId":"codeeong"},"content":"\u003d\u003d\u003d\u003d Set Tag Colour feature `[since v1.1]`","isFullCredit":false},{"lineNumber":1514,"author":{"gitId":"codeeong"},"content":"\u003d\u003d\u003d\u003d\u003d Current Implementation","isFullCredit":false},{"lineNumber":1515,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1516,"author":{"gitId":"codeeong"},"content":"The `Set` Command is an entirely new command that allows the user to assign a colour to a specific tag.","isFullCredit":false},{"lineNumber":1517,"author":{"gitId":"codeeong"},"content":"This mechanism is facilitated by the `SetCommandParser`, which creates and returns a new `SetCommand`.","isFullCredit":false},{"lineNumber":1518,"author":{"gitId":"codeeong"},"content":"In `SetCommandParser`, which implements the `Parser` interface, it parses the arguments inputted into the CLI, and checks whether the arguments are valid.","isFullCredit":false},{"lineNumber":1519,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1520,"author":{"gitId":"codeeong"},"content":"`SetCommandParser` is implemented as such:","isFullCredit":false},{"lineNumber":1521,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1522,"author":{"gitId":"codeeong"},"content":"[source, java]","isFullCredit":false},{"lineNumber":1523,"author":{"gitId":"codeeong"},"content":"----","isFullCredit":false},{"lineNumber":1524,"author":{"gitId":"codeeong"},"content":"public class SetCommandParser implements Parser\u003cSetCommand\u003e {","isFullCredit":false},{"lineNumber":1525,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1526,"author":{"gitId":"codeeong"},"content":"    public SetCommand parse(String args) throws ParseException {","isFullCredit":false},{"lineNumber":1527,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1528,"author":{"gitId":"codeeong"},"content":"    // ...parse arguments and check for invalid arguments...","isFullCredit":false},{"lineNumber":1529,"author":{"gitId":"codeeong"},"content":"  }","isFullCredit":false},{"lineNumber":1530,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false},{"lineNumber":1531,"author":{"gitId":"codeeong"},"content":"----","isFullCredit":false},{"lineNumber":1532,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1533,"author":{"gitId":"codeeong"},"content":"`SetCommand` inherits the abstract `Command` class. After `execute()` is called in `SetCommand`, the tag colour is set through the logic portions of `ModelManager` and `AddressBook`, then","isFullCredit":false},{"lineNumber":1534,"author":{"gitId":"codeeong"},"content":"lastly changes `tagColour` attribute within the `Tag` object itself. It also posts an event in `SetCommand`, to which","isFullCredit":false},{"lineNumber":1535,"author":{"gitId":"codeeong"},"content":"its handler in `PersonCard` responds and performs the UI update. +","isFullCredit":false},{"lineNumber":1536,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1537,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1538,"author":{"gitId":"codeeong"},"content":"`SetCommand` is implemented in this way:","isFullCredit":false},{"lineNumber":1539,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1540,"author":{"gitId":"codeeong"},"content":"[source, java]","isFullCredit":false},{"lineNumber":1541,"author":{"gitId":"codeeong"},"content":"----","isFullCredit":false},{"lineNumber":1542,"author":{"gitId":"codeeong"},"content":"public class SetCommand extends Command {","isFullCredit":false},{"lineNumber":1543,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1544,"author":{"gitId":"codeeong"},"content":"    private final Tag tagToSet;","isFullCredit":false},{"lineNumber":1545,"author":{"gitId":"codeeong"},"content":"    private final String tagColour;","isFullCredit":false},{"lineNumber":1546,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1547,"author":{"gitId":"codeeong"},"content":"    public SetCommand(Tag tag, String colour) {","isFullCredit":false},{"lineNumber":1548,"author":{"gitId":"codeeong"},"content":"        requireNonNull(tag);","isFullCredit":false},{"lineNumber":1549,"author":{"gitId":"codeeong"},"content":"        tagToSet \u003d tag;","isFullCredit":false},{"lineNumber":1550,"author":{"gitId":"codeeong"},"content":"        tagColour \u003d colour;","isFullCredit":false},{"lineNumber":1551,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":1552,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1553,"author":{"gitId":"codeeong"},"content":"    @Override","isFullCredit":false},{"lineNumber":1554,"author":{"gitId":"codeeong"},"content":"    public CommandResult execute() {","isFullCredit":false},{"lineNumber":1555,"author":{"gitId":"codeeong"},"content":"    requireNonNull(model);","isFullCredit":false},{"lineNumber":1556,"author":{"gitId":"codeeong"},"content":"        boolean isTagValid \u003d model.setTagColour(tagToSet, tagColour);","isFullCredit":false},{"lineNumber":1557,"author":{"gitId":"codeeong"},"content":"        //...check for valid tagName code....","isFullCredit":false},{"lineNumber":1558,"author":{"gitId":"codeeong"},"content":"        EventsCenter.getInstance().post(new ChangeTagColourEvent(tagToSet.getTagName(), tagColour));","isFullCredit":false},{"lineNumber":1559,"author":{"gitId":"codeeong"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, tagToSet.toString(), tagColour));","isFullCredit":false},{"lineNumber":1560,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":1561,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false},{"lineNumber":1562,"author":{"gitId":"codeeong"},"content":"----","isFullCredit":false},{"lineNumber":1563,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1564,"author":{"gitId":"codeeong"},"content":"The following sequence diagram shows how the set command operation works:","isFullCredit":false},{"lineNumber":1565,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1566,"author":{"gitId":"codeeong"},"content":".Interactions of the Logic Component with the UI and Model Components for the `setTagColour` Command","isFullCredit":false},{"lineNumber":1567,"author":{"gitId":"codeeong"},"content":"image::SetTagCommandDiagram.png[width\u003d\"800\"]","isFullCredit":false},{"lineNumber":1568,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1569,"author":{"gitId":"codeeong"},"content":"\u003d\u003d\u003d\u003d\u003d Design Considerations","isFullCredit":false},{"lineNumber":1570,"author":{"gitId":"codeeong"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d Aspect: Implementation of `Command` vs  `UndoableCommand`","isFullCredit":false},{"lineNumber":1571,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1572,"author":{"gitId":"codeeong"},"content":"* **Alternative 1 (current choice):** Inherit from `Command`.","isFullCredit":false},{"lineNumber":1573,"author":{"gitId":"codeeong"},"content":"** Pros: Does not involve complicated undo/redo tests, simple and quicker implementation,","isFullCredit":false},{"lineNumber":1574,"author":{"gitId":"codeeong"},"content":"lessen chances of mistakes made in implementation.","isFullCredit":false},{"lineNumber":1575,"author":{"gitId":"codeeong"},"content":"** Cons: User cannot use the `undo/redo` command.","isFullCredit":false},{"lineNumber":1576,"author":{"gitId":"codeeong"},"content":"* **Alternative 2 :** Inherit from `UndoableCommand`.","isFullCredit":false},{"lineNumber":1577,"author":{"gitId":"codeeong"},"content":"** Pros: User can utilise the `undo/redo` command.","isFullCredit":false},{"lineNumber":1578,"author":{"gitId":"codeeong"},"content":"** Cons: Hard for developers to implement extra tests, not very necessary as users can just as easily type","isFullCredit":false},{"lineNumber":1579,"author":{"gitId":"codeeong"},"content":"out the colour they would like to change their tag to; it is a short command, especially with the `stc` alias.","isFullCredit":false},{"lineNumber":1580,"author":{"gitId":"codeeong"},"content":"// end::settagcolour[]","isFullCredit":false},{"lineNumber":1581,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1582,"author":{"gitId":"-"},"content":"\u003d\u003d Documentation","isFullCredit":false},{"lineNumber":1583,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1584,"author":{"gitId":"-"},"content":"We use https://asciidoctor.org[asciidoc] for writing documentation.","isFullCredit":false},{"lineNumber":1585,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1586,"author":{"gitId":"-"},"content":"[NOTE]","isFullCredit":false},{"lineNumber":1587,"author":{"gitId":"-"},"content":"We chose asciidoc over Markdown because asciidoc, although a bit more complex than Markdown, provides more flexibility in formatting.","isFullCredit":false},{"lineNumber":1588,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1589,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Editing Documentation","isFullCredit":false},{"lineNumber":1590,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1591,"author":{"gitId":"-"},"content":"See \u003c\u003cUsingGradle#rendering-asciidoc-files, UsingGradle.adoc\u003e\u003e to learn how to render `.adoc` files locally to preview the end result of your edits.","isFullCredit":false},{"lineNumber":1592,"author":{"gitId":"-"},"content":"Alternatively, you can download the AsciiDoc plugin for IntelliJ, which allows you to preview the changes you have made to your `.adoc` files in real-time.","isFullCredit":false},{"lineNumber":1593,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1594,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Publishing Documentation","isFullCredit":false},{"lineNumber":1595,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1596,"author":{"gitId":"-"},"content":"See \u003c\u003cUsingTravis#deploying-github-pages, UsingTravis.adoc\u003e\u003e to learn how to deploy GitHub Pages using Travis.","isFullCredit":false},{"lineNumber":1597,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1598,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Converting Documentation to PDF format","isFullCredit":false},{"lineNumber":1599,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1600,"author":{"gitId":"-"},"content":"We use https://www.google.com/chrome/browser/desktop/[Google Chrome] for converting documentation to PDF format, as Chrome\u0027s PDF engine preserves hyperlinks used in webpages.","isFullCredit":false},{"lineNumber":1601,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1602,"author":{"gitId":"-"},"content":"Here are the steps to convert the project documentation files to PDF format.","isFullCredit":false},{"lineNumber":1603,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1604,"author":{"gitId":"-"},"content":".  Follow the instructions in \u003c\u003cUsingGradle#rendering-asciidoc-files, UsingGradle.adoc\u003e\u003e to convert the AsciiDoc files in the `docs/` directory to HTML format.","isFullCredit":false},{"lineNumber":1605,"author":{"gitId":"-"},"content":".  Go to your generated HTML files in the `build/docs` folder, right click on them and select `Open with` -\u003e `Google Chrome`.","isFullCredit":false},{"lineNumber":1606,"author":{"gitId":"-"},"content":".  Within Chrome, click on the `Print` option in Chrome\u0027s menu.","isFullCredit":false},{"lineNumber":1607,"author":{"gitId":"-"},"content":".  Set the destination to `Save as PDF`, then click `Save` to save a copy of the file in PDF format. For best results, use the settings indicated in the screenshot below.","isFullCredit":false},{"lineNumber":1608,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1609,"author":{"gitId":"-"},"content":".Saving documentation as PDF files in Chrome","isFullCredit":false},{"lineNumber":1610,"author":{"gitId":"-"},"content":"image::chrome_save_as_pdf.png[width\u003d\"300\"]","isFullCredit":false},{"lineNumber":1611,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1612,"author":{"gitId":"-"},"content":"[[Testing]]","isFullCredit":false},{"lineNumber":1613,"author":{"gitId":"-"},"content":"\u003d\u003d Testing","isFullCredit":false},{"lineNumber":1614,"author":{"gitId":"codeeong"},"content":"If you are intending to develop our software further, it is highly recommended that you run tests in the ways listed below.","isFullCredit":false},{"lineNumber":1615,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1616,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Running Tests","isFullCredit":false},{"lineNumber":1617,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1618,"author":{"gitId":"-"},"content":"There are three ways to run tests.","isFullCredit":false},{"lineNumber":1619,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1620,"author":{"gitId":"-"},"content":"[TIP]","isFullCredit":false},{"lineNumber":1621,"author":{"gitId":"-"},"content":"The most reliable way to run tests is the 3rd one. The first two methods might fail some GUI tests due to platform/resolution-specific idiosyncrasies.","isFullCredit":false},{"lineNumber":1622,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1623,"author":{"gitId":"-"},"content":"*Method 1: Using IntelliJ JUnit test runner*","isFullCredit":false},{"lineNumber":1624,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1625,"author":{"gitId":"-"},"content":"* To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","isFullCredit":false},{"lineNumber":1626,"author":{"gitId":"-"},"content":"* To run a subset of tests, you can right-click on a test package, test class, or a test and choose `Run \u0027ABC\u0027`","isFullCredit":false},{"lineNumber":1627,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1628,"author":{"gitId":"-"},"content":"*Method 2: Using Gradle*","isFullCredit":false},{"lineNumber":1629,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1630,"author":{"gitId":"-"},"content":"* Open a console and run the command `gradlew clean allTests` (Mac/Linux: `./gradlew clean allTests`)","isFullCredit":false},{"lineNumber":1631,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1632,"author":{"gitId":"-"},"content":"[NOTE]","isFullCredit":false},{"lineNumber":1633,"author":{"gitId":"-"},"content":"See \u003c\u003cUsingGradle#, UsingGradle.adoc\u003e\u003e for more info on how to run tests using Gradle.","isFullCredit":false},{"lineNumber":1634,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1635,"author":{"gitId":"-"},"content":"*Method 3: Using Gradle (headless)*","isFullCredit":false},{"lineNumber":1636,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1637,"author":{"gitId":"-"},"content":"Thanks to the https://github.com/TestFX/TestFX[TestFX] library we use, our GUI tests can be run in the _headless_ mode. In the headless mode, GUI tests do not show up on the screen. That means the developer can do other things on the Computer while the tests are running.","isFullCredit":false},{"lineNumber":1638,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1639,"author":{"gitId":"-"},"content":"To run tests in headless mode, open a console and run the command `gradlew clean headless allTests` (Mac/Linux: `./gradlew clean headless allTests`)","isFullCredit":false},{"lineNumber":1640,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1641,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Types of tests","isFullCredit":false},{"lineNumber":1642,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1643,"author":{"gitId":"-"},"content":"We have two types of tests:","isFullCredit":false},{"lineNumber":1644,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1645,"author":{"gitId":"-"},"content":".  *GUI Tests* - These are tests involving the GUI. They include,","isFullCredit":false},{"lineNumber":1646,"author":{"gitId":"-"},"content":".. _System Tests_ that test the entire App by simulating user actions on the GUI. These are in the `systemtests` package.","isFullCredit":false},{"lineNumber":1647,"author":{"gitId":"-"},"content":".. _Unit tests_ that test the individual components. These are in `seedu.address.ui` package.","isFullCredit":false},{"lineNumber":1648,"author":{"gitId":"-"},"content":".  *Non-GUI Tests* - These are tests not involving the GUI. They include,","isFullCredit":false},{"lineNumber":1649,"author":{"gitId":"-"},"content":"..  _Unit tests_ targeting the lowest level methods/classes. +","isFullCredit":false},{"lineNumber":1650,"author":{"gitId":"-"},"content":"e.g. `seedu.address.commons.StringUtilTest`","isFullCredit":false},{"lineNumber":1651,"author":{"gitId":"-"},"content":"..  _Integration tests_ that are checking the integration of multiple code units (those code units are assumed to be working). +","isFullCredit":false},{"lineNumber":1652,"author":{"gitId":"-"},"content":"e.g. `seedu.address.storage.StorageManagerTest`","isFullCredit":false},{"lineNumber":1653,"author":{"gitId":"-"},"content":"..  Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together. +","isFullCredit":false},{"lineNumber":1654,"author":{"gitId":"-"},"content":"e.g. `seedu.address.logic.LogicManagerTest`","isFullCredit":false},{"lineNumber":1655,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1656,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1657,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Troubleshooting Testing","isFullCredit":false},{"lineNumber":1658,"author":{"gitId":"-"},"content":"**Problem: `HelpWindowTest` fails with a `NullPointerException`.**","isFullCredit":false},{"lineNumber":1659,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1660,"author":{"gitId":"-"},"content":"* Reason: One of its dependencies, `UserGuide.html` in `src/main/resources/docs` is missing.","isFullCredit":false},{"lineNumber":1661,"author":{"gitId":"-"},"content":"* Solution: Execute Gradle task `processResources`.","isFullCredit":false},{"lineNumber":1662,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1663,"author":{"gitId":"-"},"content":"\u003d\u003d Dev Ops","isFullCredit":false},{"lineNumber":1664,"author":{"gitId":"codeeong"},"content":"This section covers resources for you to develop this software with good practices and prepare it for release.","isFullCredit":false},{"lineNumber":1665,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1666,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Build Automation","isFullCredit":false},{"lineNumber":1667,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1668,"author":{"gitId":"-"},"content":"See \u003c\u003cUsingGradle#, UsingGradle.adoc\u003e\u003e to learn how to use Gradle for build automation.","isFullCredit":false},{"lineNumber":1669,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1670,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Continuous Integration","isFullCredit":false},{"lineNumber":1671,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1672,"author":{"gitId":"-"},"content":"We use https://travis-ci.org/[Travis CI] and https://www.appveyor.com/[AppVeyor] to perform _Continuous Integration_ on our projects. See \u003c\u003cUsingTravis#, UsingTravis.adoc\u003e\u003e and \u003c\u003cUsingAppVeyor#, UsingAppVeyor.adoc\u003e\u003e for more details.","isFullCredit":false},{"lineNumber":1673,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1674,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Coverage Reporting","isFullCredit":false},{"lineNumber":1675,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1676,"author":{"gitId":"-"},"content":"We use https://coveralls.io/[Coveralls] to track the code coverage of our projects. See \u003c\u003cUsingCoveralls#, UsingCoveralls.adoc\u003e\u003e for more details.","isFullCredit":false},{"lineNumber":1677,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1678,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Documentation Previews","isFullCredit":false},{"lineNumber":1679,"author":{"gitId":"-"},"content":"When a pull request has changes to asciidoc files, you can use https://www.netlify.com/[Netlify] to see a preview of how the HTML version of those asciidoc files will look like when the pull request is merged. See \u003c\u003cUsingNetlify#, UsingNetlify.adoc\u003e\u003e for more details.","isFullCredit":false},{"lineNumber":1680,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1681,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Making a Release","isFullCredit":false},{"lineNumber":1682,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1683,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","isFullCredit":false},{"lineNumber":1684,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1685,"author":{"gitId":"-"},"content":".  Update the version number in link:{repoURL}/src/main/java/seedu/address/MainApp.java[`MainApp.java`].","isFullCredit":false},{"lineNumber":1686,"author":{"gitId":"-"},"content":".  Generate a JAR file \u003c\u003cUsingGradle#creating-the-jar-file, using Gradle\u003e\u003e.","isFullCredit":false},{"lineNumber":1687,"author":{"gitId":"-"},"content":".  Tag the repo with the version number. e.g. `v0.1`","isFullCredit":false},{"lineNumber":1688,"author":{"gitId":"-"},"content":".  https://help.github.com/articles/creating-releases/[Create a new release using GitHub] and upload the JAR file you created.","isFullCredit":false},{"lineNumber":1689,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1690,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Managing Dependencies","isFullCredit":false},{"lineNumber":1691,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1692,"author":{"gitId":"-"},"content":"A project often depends on third-party libraries. For example, Address Book depends on the http://wiki.fasterxml.com/JacksonHome[Jackson library] for XML parsing. Managing these _dependencies_ can be automated using Gradle. For example, Gradle can download the dependencies automatically, which is better than these alternatives. +","isFullCredit":false},{"lineNumber":1693,"author":{"gitId":"-"},"content":"a. Include those libraries in the repo (this bloats the repo size) +","isFullCredit":false},{"lineNumber":1694,"author":{"gitId":"-"},"content":"b. Require developers to download those libraries manually (this creates extra work for developers)","isFullCredit":false},{"lineNumber":1695,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1696,"author":{"gitId":"-"},"content":"[appendix]","isFullCredit":false},{"lineNumber":1697,"author":{"gitId":"-"},"content":"\u003d\u003d Product Scope","isFullCredit":false},{"lineNumber":1698,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1699,"author":{"gitId":"codeeong"},"content":"This section tells you more details of our software, our target users, the user stories, and gives you a sneak peak into our development process.","isFullCredit":false},{"lineNumber":1700,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1701,"author":{"gitId":"codeeong"},"content":"\u003d\u003d\u003d Target user profile:","isFullCredit":false},{"lineNumber":1702,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1703,"author":{"gitId":"lohtianwei"},"content":"* football team managers","isFullCredit":false},{"lineNumber":1704,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","isFullCredit":false},{"lineNumber":1705,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","isFullCredit":false},{"lineNumber":1706,"author":{"gitId":"-"},"content":"* can type fast","isFullCredit":false},{"lineNumber":1707,"author":{"gitId":"-"},"content":"* prefers typing over mouse input","isFullCredit":false},{"lineNumber":1708,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","isFullCredit":false},{"lineNumber":1709,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1710,"author":{"gitId":"codeeong"},"content":"\u003d\u003d\u003d Value proposition:","isFullCredit":false},{"lineNumber":1711,"author":{"gitId":"codeeong"},"content":"Exclusive application for management of footballers and football teams that provides an enhanced listing of footballers and convenient lookup on updated information of players.","isFullCredit":false},{"lineNumber":1712,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1713,"author":{"gitId":"codeeong"},"content":"\u003d\u003d\u003d Feature Contribution","isFullCredit":false},{"lineNumber":1714,"author":{"gitId":"codeeong"},"content":"* Codee +","isFullCredit":false},{"lineNumber":1715,"author":{"gitId":"-"},"content":"** Major - Revamp MTM’s whole GUI for ease of viewing teams and players’ details.","isFullCredit":false},{"lineNumber":1716,"author":{"gitId":"-"},"content":"*** e.g. remove browser panel, add player details panel, change person card.","isFullCredit":false},{"lineNumber":1717,"author":{"gitId":"-"},"content":"** Minor - Command to set the colour of tags to colour of choice.","isFullCredit":false},{"lineNumber":1718,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1719,"author":{"gitId":"codeeong"},"content":"* Jordan","isFullCredit":false},{"lineNumber":1720,"author":{"gitId":"-"},"content":"** Major - Implementation of Team Component and Related Functions.","isFullCredit":false},{"lineNumber":1721,"author":{"gitId":"-"},"content":"*** e.g. creation of team, assignment of players, viewing of teams, removal of team, renaming of team.","isFullCredit":false},{"lineNumber":1722,"author":{"gitId":"codeeong"},"content":"** Minor","isFullCredit":false},{"lineNumber":1723,"author":{"gitId":"-"},"content":"*** Introduce `remark` command and `remark` field.","isFullCredit":false},{"lineNumber":1724,"author":{"gitId":"-"},"content":"*** Enhanced add functionality to allow optional fields.","isFullCredit":false},{"lineNumber":1725,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1726,"author":{"gitId":"codeeong"},"content":"* Syafiq","isFullCredit":false},{"lineNumber":1727,"author":{"gitId":"-"},"content":"** Major - Create a new player class that contains more information about the players.","isFullCredit":false},{"lineNumber":1728,"author":{"gitId":"-"},"content":"*** e.g. Position, Rating (0 - 5 Star),  Remarks","isFullCredit":false},{"lineNumber":1729,"author":{"gitId":"-"},"content":"*** Update add, edit ,list, sort to include these fields accordingly.","isFullCredit":false},{"lineNumber":1730,"author":{"gitId":"codeeong"},"content":"** Minor - Autocomplete command","isFullCredit":false},{"lineNumber":1731,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":1732,"author":{"gitId":"codeeong"},"content":"* Tianwei","isFullCredit":false},{"lineNumber":1733,"author":{"gitId":"codeeong"},"content":"** Major - privacy","isFullCredit":false},{"lineNumber":1734,"author":{"gitId":"codeeong"},"content":"*** Set private field and passwords","isFullCredit":false},{"lineNumber":1735,"author":{"gitId":"codeeong"},"content":"*** Make accounts","isFullCredit":false},{"lineNumber":1736,"author":{"gitId":"codeeong"},"content":"** Minor - Sorting players by different fields","isFullCredit":false},{"lineNumber":1737,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1738,"author":{"gitId":"-"},"content":"[appendix]","isFullCredit":false},{"lineNumber":1739,"author":{"gitId":"-"},"content":"\u003d\u003d User Stories","isFullCredit":false},{"lineNumber":1740,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1741,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * \\*`, Medium (nice to have) - `* \\*`, Low (unlikely to have) - `*`","isFullCredit":false},{"lineNumber":1742,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1743,"author":{"gitId":"-"},"content":"[width\u003d\"75%\",cols\u003d\"^8%,^23%,\u003c25%,\u003c30%\",options\u003d\"header\",]","isFullCredit":false},{"lineNumber":1744,"author":{"gitId":"-"},"content":"|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":1745,"author":{"gitId":"-"},"content":"|Priority |As a ... |I want to ... |So that I can...","isFullCredit":false},{"lineNumber":1746,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":1747,"author":{"gitId":"-"},"content":"4.1+^s|First Time User Stories","isFullCredit":false},{"lineNumber":1748,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1749,"author":{"gitId":"-"},"content":"|`* * *` |new user |see usage instructions |refer to instructions when I forget how to use the App","isFullCredit":false},{"lineNumber":1750,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1751,"author":{"gitId":"-"},"content":"|`* * *` |new user |access the user guide |find out how to use fancy features of the application","isFullCredit":false},{"lineNumber":1752,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1753,"author":{"gitId":"-"},"content":"|`* * *` |new user |see a list of instructions available |navigate and use the application easily","isFullCredit":false},{"lineNumber":1754,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1755,"author":{"gitId":"-"},"content":"4.1+^s|Player Related User Stories","isFullCredit":false},{"lineNumber":1756,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1757,"author":{"gitId":"-"},"content":"|`* * *` |team manager |add a new player|","isFullCredit":false},{"lineNumber":1758,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":1759,"author":{"gitId":"-"},"content":"|`* * *` |team manager |add player’s address |mail him important documents","isFullCredit":false},{"lineNumber":1760,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":1761,"author":{"gitId":"-"},"content":"|`* * *` |team manager |add player’s contact number |contact him when needed","isFullCredit":false},{"lineNumber":1762,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":1763,"author":{"gitId":"-"},"content":"|`* * *` |team manager |add player’s email |email him when needed","isFullCredit":false},{"lineNumber":1764,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":1765,"author":{"gitId":"-"},"content":"|`* * *` |team manager |add player’s jersey number |easily identify them during the game","isFullCredit":false},{"lineNumber":1766,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":1767,"author":{"gitId":"-"},"content":"|`* * *` |team manager |add player’s position |easily pick my lineup for match","isFullCredit":false},{"lineNumber":1768,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":1769,"author":{"gitId":"-"},"content":"|`* * *` |team manager |add player\u0027s ratings |easily identify the better players","isFullCredit":false},{"lineNumber":1770,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":1771,"author":{"gitId":"-"},"content":"|`* * *` |team manager |delete a player |remove him if I kick him out from the team or he quits","isFullCredit":false},{"lineNumber":1772,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":1773,"author":{"gitId":"-"},"content":"|`* * *` |team manager |find a player by name |locate details of players without having to go through the entire list","isFullCredit":false},{"lineNumber":1774,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":1775,"author":{"gitId":"-"},"content":"|`* * *` |team manager |edit player’s contact number |","isFullCredit":false},{"lineNumber":1776,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":1777,"author":{"gitId":"-"},"content":"|`* * *` |team manager |edit player’s email |","isFullCredit":false},{"lineNumber":1778,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":1779,"author":{"gitId":"-"},"content":"|`* * *` |team manager |edit player’s jersey number |","isFullCredit":false},{"lineNumber":1780,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":1781,"author":{"gitId":"-"},"content":"|`* *` |team manager |add player’s match stats (e.g. goals scored) |decide the lineup, give award","isFullCredit":false},{"lineNumber":1782,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":1783,"author":{"gitId":"-"},"content":"|`* *` |team manager |add player remarks |for self note","isFullCredit":false},{"lineNumber":1784,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":1785,"author":{"gitId":"-"},"content":"|`* *` |team manager |add player’s avatar |for facial recognition","isFullCredit":false},{"lineNumber":1786,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":1787,"author":{"gitId":"-"},"content":"|`* *` |team manager |edit player’s position |easily pick my lineup for match","isFullCredit":false},{"lineNumber":1788,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":1789,"author":{"gitId":"-"},"content":"|`* *` |team manager |edit player’s address |","isFullCredit":false},{"lineNumber":1790,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1791,"author":{"gitId":"-"},"content":"|`* *` |team manager |edit player’s avatar |","isFullCredit":false},{"lineNumber":1792,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":1793,"author":{"gitId":"-"},"content":"|`* *` |team manager |edit player remarks |for self note","isFullCredit":false},{"lineNumber":1794,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":1795,"author":{"gitId":"-"},"content":"|`* *` |team manager |hide \u003c\u003cprivate-contact-detail,private contact details\u003e\u003e by default |minimize chance of someone else seeing them by accident","isFullCredit":false},{"lineNumber":1796,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":1797,"author":{"gitId":"-"},"content":"|`*` |team manager |edit player’s name |","isFullCredit":false},{"lineNumber":1798,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":1799,"author":{"gitId":"-"},"content":"|`*` |team manager with many players in the team managing application |sort by player name |locate a person easily","isFullCredit":false},{"lineNumber":1800,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":1801,"author":{"gitId":"-"},"content":"4.1+^s|Team Related User Stories","isFullCredit":false},{"lineNumber":1802,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":1803,"author":{"gitId":"-"},"content":"|`* * *` |team manager |create teams |organize and manage my players through their respective team","isFullCredit":false},{"lineNumber":1804,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":1805,"author":{"gitId":"-"},"content":"|`* * *` |team manager |assign player to teams |identify the team that the player is playing for","isFullCredit":false},{"lineNumber":1806,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":1807,"author":{"gitId":"-"},"content":"|`* * *` |team manager |view players in specified team |identify the lineup of the team and which player belongs to which team","isFullCredit":false},{"lineNumber":1808,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":1809,"author":{"gitId":"-"},"content":"|`* * *` |team manager |remove teams |remove teams that I no longer managed","isFullCredit":false},{"lineNumber":1810,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":1811,"author":{"gitId":"-"},"content":"|`* *` |team manager |set match with competing team |acknowledge and plan training session for the team","isFullCredit":false},{"lineNumber":1812,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":1813,"author":{"gitId":"-"},"content":"|`* *` |team manager |view upcoming match |keep track of the upcoming matches with opponent teams","isFullCredit":false},{"lineNumber":1814,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":1815,"author":{"gitId":"-"},"content":"|`* *` |team manager |edit player’s allocated team |move players between teams","isFullCredit":false},{"lineNumber":1816,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":1817,"author":{"gitId":"-"},"content":"|`* *` |team manager |schedule training programs for team |I do not have any conflicting schedule between different teams","isFullCredit":false},{"lineNumber":1818,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":1819,"author":{"gitId":"-"},"content":"|`* *` |team manager |send reminder to team of schedule |my players does not forget about training session","isFullCredit":false},{"lineNumber":1820,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":1821,"author":{"gitId":"-"},"content":"|`*` |team manager |sort by team name |identify group lineup easily","isFullCredit":false},{"lineNumber":1822,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":1823,"author":{"gitId":"-"},"content":"4.1+^s|Additional User Stories","isFullCredit":false},{"lineNumber":1824,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":1825,"author":{"gitId":"-"},"content":"|`* *` |team manager who remembers better with visual |set colours to tags |easily identify the tag that I have set to players","isFullCredit":false},{"lineNumber":1826,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":1827,"author":{"gitId":"-"},"content":"|`* *` |team manager |autofill command |perform task quickly","isFullCredit":false},{"lineNumber":1828,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1829,"author":{"gitId":"-"},"content":"|`* *` |team manager |password login |if team manager wants to protect certain information","isFullCredit":false},{"lineNumber":1830,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":1831,"author":{"gitId":"-"},"content":"|`* *` |team manager |submit feedback to developers |developers can improve the application constantly","isFullCredit":false},{"lineNumber":1832,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1833,"author":{"gitId":"-"},"content":"|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":1834,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1835,"author":{"gitId":"-"},"content":"[appendix]","isFullCredit":false},{"lineNumber":1836,"author":{"gitId":"-"},"content":"\u003d\u003d Use Cases","isFullCredit":false},{"lineNumber":1837,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1838,"author":{"gitId":"-"},"content":"(For all use cases below, the *System* is the `MTM` and the *Team Manager* is the `user`, unless specified otherwise)","isFullCredit":false},{"lineNumber":1839,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1840,"author":{"gitId":"-"},"content":"[discrete]","isFullCredit":false},{"lineNumber":1841,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Use case: Add player","isFullCredit":false},{"lineNumber":1842,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1843,"author":{"gitId":"-"},"content":"*MSS*","isFullCredit":false},{"lineNumber":1844,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1845,"author":{"gitId":"-"},"content":"1.  User enter command to add","isFullCredit":false},{"lineNumber":1846,"author":{"gitId":"-"},"content":"2.  MTM prompt user of format to enter player\u0027s name and details","isFullCredit":false},{"lineNumber":1847,"author":{"gitId":"-"},"content":"3.  User enter player\u0027s name and details in required format","isFullCredit":false},{"lineNumber":1848,"author":{"gitId":"-"},"content":"4.  User press enter to insert person into storage","isFullCredit":false},{"lineNumber":1849,"author":{"gitId":"-"},"content":"+","isFullCredit":false},{"lineNumber":1850,"author":{"gitId":"-"},"content":"Use case ends.","isFullCredit":false},{"lineNumber":1851,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1852,"author":{"gitId":"-"},"content":"*Extensions*","isFullCredit":false},{"lineNumber":1853,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1854,"author":{"gitId":"-"},"content":"[none]","isFullCredit":false},{"lineNumber":1855,"author":{"gitId":"-"},"content":"* 4a. User did not enter any details.","isFullCredit":false},{"lineNumber":1856,"author":{"gitId":"-"},"content":"+","isFullCredit":false},{"lineNumber":1857,"author":{"gitId":"-"},"content":"[none]","isFullCredit":false},{"lineNumber":1858,"author":{"gitId":"-"},"content":"** 4a1. MTM inform user that it is an invalid add command.","isFullCredit":false},{"lineNumber":1859,"author":{"gitId":"-"},"content":"+","isFullCredit":false},{"lineNumber":1860,"author":{"gitId":"-"},"content":"Use case ends.","isFullCredit":false},{"lineNumber":1861,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1862,"author":{"gitId":"-"},"content":"[discrete]","isFullCredit":false},{"lineNumber":1863,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Use case: Edit player\u0027s team","isFullCredit":false},{"lineNumber":1864,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1865,"author":{"gitId":"-"},"content":"*MSS*","isFullCredit":false},{"lineNumber":1866,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1867,"author":{"gitId":"-"},"content":"1.  User enter command to find","isFullCredit":false},{"lineNumber":1868,"author":{"gitId":"-"},"content":"2.  User enter player\u0027s name","isFullCredit":false},{"lineNumber":1869,"author":{"gitId":"-"},"content":"3.  MTM display list of players found","isFullCredit":false},{"lineNumber":1870,"author":{"gitId":"-"},"content":"4.  User enter command to edit player\u0027s team using index of displayed list","isFullCredit":false},{"lineNumber":1871,"author":{"gitId":"-"},"content":"+","isFullCredit":false},{"lineNumber":1872,"author":{"gitId":"-"},"content":"Use case ends.","isFullCredit":false},{"lineNumber":1873,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1874,"author":{"gitId":"-"},"content":"*Extensions*","isFullCredit":false},{"lineNumber":1875,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1876,"author":{"gitId":"-"},"content":"[none]","isFullCredit":false},{"lineNumber":1877,"author":{"gitId":"-"},"content":"* 2a. Player name does not exist.","isFullCredit":false},{"lineNumber":1878,"author":{"gitId":"-"},"content":"+","isFullCredit":false},{"lineNumber":1879,"author":{"gitId":"-"},"content":"[none]","isFullCredit":false},{"lineNumber":1880,"author":{"gitId":"-"},"content":"** 2a1. MTM inform user that player does not exist.","isFullCredit":false},{"lineNumber":1881,"author":{"gitId":"-"},"content":"+","isFullCredit":false},{"lineNumber":1882,"author":{"gitId":"-"},"content":"Use case ends.","isFullCredit":false},{"lineNumber":1883,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1884,"author":{"gitId":"-"},"content":"[discrete]","isFullCredit":false},{"lineNumber":1885,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Use case: Find player by team name","isFullCredit":false},{"lineNumber":1886,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1887,"author":{"gitId":"-"},"content":"*MSS*","isFullCredit":false},{"lineNumber":1888,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1889,"author":{"gitId":"-"},"content":"1.  User enter command to find team","isFullCredit":false},{"lineNumber":1890,"author":{"gitId":"-"},"content":"2.  User enter team name","isFullCredit":false},{"lineNumber":1891,"author":{"gitId":"-"},"content":"3.  MTM display list of players in team","isFullCredit":false},{"lineNumber":1892,"author":{"gitId":"-"},"content":"+","isFullCredit":false},{"lineNumber":1893,"author":{"gitId":"-"},"content":"Use case ends.","isFullCredit":false},{"lineNumber":1894,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1895,"author":{"gitId":"-"},"content":"*Extensions*","isFullCredit":false},{"lineNumber":1896,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1897,"author":{"gitId":"-"},"content":"[none]","isFullCredit":false},{"lineNumber":1898,"author":{"gitId":"-"},"content":"* 2a. Team name does not exist.","isFullCredit":false},{"lineNumber":1899,"author":{"gitId":"-"},"content":"+","isFullCredit":false},{"lineNumber":1900,"author":{"gitId":"-"},"content":"[none]","isFullCredit":false},{"lineNumber":1901,"author":{"gitId":"-"},"content":"** 2a1. MTM informs user that team name does not exist","isFullCredit":false},{"lineNumber":1902,"author":{"gitId":"-"},"content":"+","isFullCredit":false},{"lineNumber":1903,"author":{"gitId":"-"},"content":"Use case ends.","isFullCredit":false},{"lineNumber":1904,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1905,"author":{"gitId":"-"},"content":"[discrete]","isFullCredit":false},{"lineNumber":1906,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Use case: Remove player from team","isFullCredit":false},{"lineNumber":1907,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1908,"author":{"gitId":"-"},"content":"*MSS*","isFullCredit":false},{"lineNumber":1909,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1910,"author":{"gitId":"-"},"content":"1.  User enter command to find","isFullCredit":false},{"lineNumber":1911,"author":{"gitId":"-"},"content":"2.  User enter player\u0027s name","isFullCredit":false},{"lineNumber":1912,"author":{"gitId":"-"},"content":"3.  MTM display list of players found","isFullCredit":false},{"lineNumber":1913,"author":{"gitId":"-"},"content":"4.  User enter remove command and index associated with player","isFullCredit":false},{"lineNumber":1914,"author":{"gitId":"-"},"content":"5.  MTM displays player that is removed and updated list of players","isFullCredit":false},{"lineNumber":1915,"author":{"gitId":"-"},"content":"+","isFullCredit":false},{"lineNumber":1916,"author":{"gitId":"-"},"content":"Use case ends.","isFullCredit":false},{"lineNumber":1917,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1918,"author":{"gitId":"-"},"content":"*Extensions*","isFullCredit":false},{"lineNumber":1919,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1920,"author":{"gitId":"-"},"content":"[none]","isFullCredit":false},{"lineNumber":1921,"author":{"gitId":"-"},"content":"* 4a. Invalid index entered.","isFullCredit":false},{"lineNumber":1922,"author":{"gitId":"-"},"content":"+","isFullCredit":false},{"lineNumber":1923,"author":{"gitId":"-"},"content":"[none]","isFullCredit":false},{"lineNumber":1924,"author":{"gitId":"-"},"content":"** 4a1. MTM informs user that index is invalid.","isFullCredit":false},{"lineNumber":1925,"author":{"gitId":"-"},"content":"** 4a2. User enters valid index.","isFullCredit":false},{"lineNumber":1926,"author":{"gitId":"-"},"content":"+","isFullCredit":false},{"lineNumber":1927,"author":{"gitId":"-"},"content":"Use case resumes at step 5.","isFullCredit":false},{"lineNumber":1928,"author":{"gitId":"-"},"content":"+","isFullCredit":false},{"lineNumber":1929,"author":{"gitId":"-"},"content":"* 4b. User removes wrong index unintentionally.","isFullCredit":false},{"lineNumber":1930,"author":{"gitId":"-"},"content":"+","isFullCredit":false},{"lineNumber":1931,"author":{"gitId":"-"},"content":"[none]","isFullCredit":false},{"lineNumber":1932,"author":{"gitId":"-"},"content":"** 4b1. User undo remove by entering command to undo.","isFullCredit":false},{"lineNumber":1933,"author":{"gitId":"-"},"content":"+","isFullCredit":false},{"lineNumber":1934,"author":{"gitId":"-"},"content":"Use case ends.","isFullCredit":false},{"lineNumber":1935,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1936,"author":{"gitId":"-"},"content":"_{More to be added}_","isFullCredit":false},{"lineNumber":1937,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1938,"author":{"gitId":"-"},"content":"[appendix]","isFullCredit":false},{"lineNumber":1939,"author":{"gitId":"-"},"content":"\u003d\u003d Non Functional Requirements","isFullCredit":false},{"lineNumber":1940,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1941,"author":{"gitId":"codeeong"},"content":".  Should work on any mainstream OS as long as it has Java 1.8.0_60 or higher installed.","isFullCredit":false},{"lineNumber":1942,"author":{"gitId":"-"},"content":".  Should be able to hold up to 150 players without a noticeable sluggishness in performance for typical usage.","isFullCredit":false},{"lineNumber":1943,"author":{"gitId":"-"},"content":".  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","isFullCredit":false},{"lineNumber":1944,"author":{"gitId":"codeeong"},"content":".  Works on both 32-bit and 64-bit machines","isFullCredit":false},{"lineNumber":1945,"author":{"gitId":"codeeong"},"content":".  Should respond within 1 second of query","isFullCredit":false},{"lineNumber":1946,"author":{"gitId":"codeeong"},"content":".  Should be intuitive and easy to use for a first-time user.","isFullCredit":false},{"lineNumber":1947,"author":{"gitId":"codeeong"},"content":".  Should be able to handle any sort of input, i.e. should recover from invalid input.","isFullCredit":false},{"lineNumber":1948,"author":{"gitId":"codeeong"},"content":".  Should have audience-focused user guides and developer guides.","isFullCredit":false},{"lineNumber":1949,"author":{"gitId":"codeeong"},"content":".  Should have command names that concisely describe their function.","isFullCredit":false},{"lineNumber":1950,"author":{"gitId":"codeeong"},"content":".  Should be an open-source project.","isFullCredit":false},{"lineNumber":1951,"author":{"gitId":"codeeong"},"content":".  Development be cost effective or free.","isFullCredit":false},{"lineNumber":1952,"author":{"gitId":"codeeong"},"content":".  App should be able to work offline.","isFullCredit":false},{"lineNumber":1953,"author":{"gitId":"-"},"content":".  Should save and backup the state of the team managing application regularly.","isFullCredit":false},{"lineNumber":1954,"author":{"gitId":"codeeong"},"content":".  Current versions must be backward compatible with older versions to support undo.","isFullCredit":false},{"lineNumber":1955,"author":{"gitId":"codeeong"},"content":".  The user interface should be simple and minimise distractions so that user can continue with their work in a focused manner.","isFullCredit":false},{"lineNumber":1956,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1957,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1958,"author":{"gitId":"-"},"content":"[appendix]","isFullCredit":false},{"lineNumber":1959,"author":{"gitId":"-"},"content":"\u003d\u003d Glossary","isFullCredit":false},{"lineNumber":1960,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1961,"author":{"gitId":"-"},"content":"[[mainstream-os]] Mainstream OS::","isFullCredit":false},{"lineNumber":1962,"author":{"gitId":"-"},"content":"Windows, Linux, Unix, OS-X","isFullCredit":false},{"lineNumber":1963,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1964,"author":{"gitId":"-"},"content":"[[private-contact-detail]] Private contact detail::","isFullCredit":false},{"lineNumber":1965,"author":{"gitId":"-"},"content":"A contact detail that is not meant to be shared with others","isFullCredit":false},{"lineNumber":1966,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1967,"author":{"gitId":"-"},"content":"[[lineuo]] Lineup::","isFullCredit":false},{"lineNumber":1968,"author":{"gitId":"-"},"content":"A list of players that are playing for a match, with their positions specified","isFullCredit":false},{"lineNumber":1969,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1970,"author":{"gitId":"-"},"content":"[[user-guide]] User Guide::","isFullCredit":false},{"lineNumber":1971,"author":{"gitId":"-"},"content":"A documentation on the functionality and usability of MTM","isFullCredit":false},{"lineNumber":1972,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1973,"author":{"gitId":"-"},"content":"[appendix]","isFullCredit":false},{"lineNumber":1974,"author":{"gitId":"-"},"content":"\u003d\u003d Instructions for Manual Testing","isFullCredit":false},{"lineNumber":1975,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1976,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","isFullCredit":false},{"lineNumber":1977,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1978,"author":{"gitId":"-"},"content":"[NOTE]","isFullCredit":false},{"lineNumber":1979,"author":{"gitId":"-"},"content":"These instructions only provide a starting point for testers to work on; testers are expected to do more _exploratory_ testing.","isFullCredit":false},{"lineNumber":1980,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1981,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Launch and Shutdown","isFullCredit":false},{"lineNumber":1982,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1983,"author":{"gitId":"-"},"content":". Initial launch","isFullCredit":false},{"lineNumber":1984,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1985,"author":{"gitId":"-"},"content":".. Download the jar file and copy into an empty folder","isFullCredit":false},{"lineNumber":1986,"author":{"gitId":"-"},"content":".. Double-click the jar file +","isFullCredit":false},{"lineNumber":1987,"author":{"gitId":"-"},"content":"   Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","isFullCredit":false},{"lineNumber":1988,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1989,"author":{"gitId":"-"},"content":". Saving window preferences","isFullCredit":false},{"lineNumber":1990,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1991,"author":{"gitId":"-"},"content":".. Resize the window to an optimum size. Move the window to a different location. Close the window.","isFullCredit":false},{"lineNumber":1992,"author":{"gitId":"-"},"content":".. Re-launch the app by double-clicking the jar file. +","isFullCredit":false},{"lineNumber":1993,"author":{"gitId":"-"},"content":"   Expected: The most recent window size and location is retained.","isFullCredit":false},{"lineNumber":1994,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1995,"author":{"gitId":"-"},"content":"_{ more test cases ... }_","isFullCredit":false},{"lineNumber":1996,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1997,"author":{"gitId":"codeeong"},"content":"\u003d\u003d\u003d Deleting a player","isFullCredit":false},{"lineNumber":1998,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1999,"author":{"gitId":"codeeong"},"content":". Deleting a player while all players are listed","isFullCredit":false},{"lineNumber":2000,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":2001,"author":{"gitId":"codeeong"},"content":".. Prerequisites: List all players using the `list` command. Multiple players in the list.","isFullCredit":false},{"lineNumber":2002,"author":{"gitId":"-"},"content":".. Test case: `delete 1` +","isFullCredit":false},{"lineNumber":2003,"author":{"gitId":"codeeong"},"content":"   Expected: First player is deleted from the list. Details of the deleted player shown in the status message. Timestamp in the status bar is updated.","isFullCredit":false},{"lineNumber":2004,"author":{"gitId":"-"},"content":".. Test case: `delete 0` +","isFullCredit":false},{"lineNumber":2005,"author":{"gitId":"-"},"content":"   Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","isFullCredit":false},{"lineNumber":2006,"author":{"gitId":"-"},"content":".. Other incorrect delete commands to try: `delete`, `delete x` (where x is larger than the list size) _{give more}_ +","isFullCredit":false},{"lineNumber":2007,"author":{"gitId":"-"},"content":"   Expected: Similar to previous.","isFullCredit":false},{"lineNumber":2008,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":2009,"author":{"gitId":"-"},"content":"_{ more test cases ... }_","isFullCredit":false},{"lineNumber":2010,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":2011,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Saving data","isFullCredit":false},{"lineNumber":2012,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":2013,"author":{"gitId":"-"},"content":". Dealing with missing/corrupted data files","isFullCredit":false},{"lineNumber":2014,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":2015,"author":{"gitId":"-"},"content":".. _{explain how to simulate a missing/corrupted file and the expected behavior}_","isFullCredit":false},{"lineNumber":2016,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":2017,"author":{"gitId":"-"},"content":"_{ more test cases ... }_","isFullCredit":false},{"lineNumber":2018,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":2019,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Remarking a player","isFullCredit":false},{"lineNumber":2020,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":2021,"author":{"gitId":"-"},"content":". Remarking a player while all players are listed","isFullCredit":false},{"lineNumber":2022,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":2023,"author":{"gitId":"-"},"content":".. Prerequisites: List all players using the `list` command. Multiple players in the list.","isFullCredit":false},{"lineNumber":2024,"author":{"gitId":"-"},"content":".. Test case: `remark 1 r/This is my remark to you.` +","isFullCredit":false},{"lineNumber":2025,"author":{"gitId":"-"},"content":"Expected: First player is remarked from the list. Details of the remarked player shown in the status message. Timestamp in the status bar is updated.","isFullCredit":false},{"lineNumber":2026,"author":{"gitId":"-"},"content":".. Test case: `remark 0` +","isFullCredit":false},{"lineNumber":2027,"author":{"gitId":"-"},"content":"Expected: No person is remarked. Error details shown in the status message. Status bar remains the same.","isFullCredit":false},{"lineNumber":2028,"author":{"gitId":"-"},"content":".. Other incorrect delete commands to try: `remark`, `remark x` (where x is larger than the list size), `remark -1`, `remark 2 x/` (where x is not the prefix for remark) +","isFullCredit":false},{"lineNumber":2029,"author":{"gitId":"-"},"content":"Expected: Similar to previous.","isFullCredit":false},{"lineNumber":2030,"author":{"gitId":"-"},"content":".. Test case: `remark 1` +","isFullCredit":false},{"lineNumber":2031,"author":{"gitId":"-"},"content":"Expected: First player has its remark removed. Details of the remarked player shown in the status message. Timestamp in the status bar is updated.","isFullCredit":false},{"lineNumber":2032,"author":{"gitId":"-"},"content":".. Test case: `remark 1 r/I want to delete this.` -\u003e `remark 1 r/` +","isFullCredit":false},{"lineNumber":2033,"author":{"gitId":"-"},"content":"Expected: Similar to previous.","isFullCredit":false},{"lineNumber":2034,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":2035,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Adding a player without all fields","isFullCredit":false},{"lineNumber":2036,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":2037,"author":{"gitId":"-"},"content":". Adding a player where player is unique","isFullCredit":false},{"lineNumber":2038,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":2039,"author":{"gitId":"-"},"content":".. Prerequisites: Newly added player must not exist in MTM.","isFullCredit":false},{"lineNumber":2040,"author":{"gitId":"-"},"content":".. Test case: `add n/Tumeric Turner e/tt@tuner.com` +","isFullCredit":false},{"lineNumber":2041,"author":{"gitId":"-"},"content":"Expected: Player added into MTM and will be on the list. Details of the newly added player shown in the status message. Fields that are not input during addition are replaced with `\u003cUNSPECIFIED\u003e` Timestamp in the status bar is updated.","isFullCredit":false},{"lineNumber":2042,"author":{"gitId":"-"},"content":".. Test case: `add n/Guavi Hollae` +","isFullCredit":false},{"lineNumber":2043,"author":{"gitId":"-"},"content":"Expected: Player is not added into MTM. Errors details shown in status message. Name and email are compulsory fields that need to be entered for `add` to work.","isFullCredit":false},{"lineNumber":2044,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":2045,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Team-Related Functions","isFullCredit":false},{"lineNumber":2046,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":2047,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Creating a Team","isFullCredit":false},{"lineNumber":2048,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":2049,"author":{"gitId":"-"},"content":". Creating a Team with current existing data in MTM","isFullCredit":false},{"lineNumber":2050,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":2051,"author":{"gitId":"-"},"content":".. Prerequisites: Team currently does not exist in MTM.","isFullCredit":false},{"lineNumber":2052,"author":{"gitId":"-"},"content":".. Test case: `create NUSTeam` +","isFullCredit":false},{"lineNumber":2053,"author":{"gitId":"-"},"content":"Expected: Team is created and displayed in Team Display Panel. Team name will be shown in the status message. Timestamp in the status bar is updated.","isFullCredit":false},{"lineNumber":2054,"author":{"gitId":"-"},"content":".. Test case: `create NUSTeam` +","isFullCredit":false},{"lineNumber":2055,"author":{"gitId":"-"},"content":"Expected: Team is not created due to team already existing in MTM. Team Display Panel remains the same. Error details shown in the status message. Status bar remains the same.","isFullCredit":false},{"lineNumber":2056,"author":{"gitId":"-"},"content":".. Test case: `create \u0026-Team-\u0026` +","isFullCredit":false},{"lineNumber":2057,"author":{"gitId":"-"},"content":"Expected: Team does not allow names with special characters, only alphanumeric, can consist of all numbers and can contain space in name. Team Display Panel remains the same. Error details shown in the status message. Status bar remains the same.","isFullCredit":false},{"lineNumber":2058,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":2059,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Viewing a Team","isFullCredit":false},{"lineNumber":2060,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":2061,"author":{"gitId":"-"},"content":". Viewing a Team with current existing data in MTM","isFullCredit":false},{"lineNumber":2062,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":2063,"author":{"gitId":"-"},"content":".. Prerequisites: Team currently exist in MTM.","isFullCredit":false},{"lineNumber":2064,"author":{"gitId":"-"},"content":"... Test case: `view Arsenal` +","isFullCredit":false},{"lineNumber":2065,"author":{"gitId":"-"},"content":"Expected: Team in Team Display Panel will be selected. Player list will be updated with list of players that are in the Team. Team name will be shown in the status message.","isFullCredit":false},{"lineNumber":2066,"author":{"gitId":"-"},"content":"... Test case: `view NonExistingTeam` +","isFullCredit":false},{"lineNumber":2067,"author":{"gitId":"-"},"content":"Expected: Team is not viewed as it does not exist in MTM. Error details shown in the status message.","isFullCredit":false},{"lineNumber":2068,"author":{"gitId":"-"},"content":"... Test case: `view chelsea` +","isFullCredit":false},{"lineNumber":2069,"author":{"gitId":"-"},"content":"Expected: Team is not viewed as it does not exist in MTM, as team names are case sensitive. Error details shown in the status message.","isFullCredit":false},{"lineNumber":2070,"author":{"gitId":"-"},"content":".. Prerequisites: The command `create NUSTeam` was executed right before executing this test case.","isFullCredit":false},{"lineNumber":2071,"author":{"gitId":"-"},"content":"... Test case: `view NUSTeam` +","isFullCredit":false},{"lineNumber":2072,"author":{"gitId":"-"},"content":"Expected: Team in Team Display Panel will be selected. Player list will be empty as no players are in the team yet. Team name will be shown in the status message.","isFullCredit":false},{"lineNumber":2073,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":2074,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Assigning Players to Team","isFullCredit":false},{"lineNumber":2075,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":2076,"author":{"gitId":"-"},"content":". Assigning players to a Team after executing `create NUSTeam`","isFullCredit":false},{"lineNumber":2077,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":2078,"author":{"gitId":"-"},"content":".. Test case: `list` -\u003e `assign NUSTeam i/1 3 5` +","isFullCredit":false},{"lineNumber":2079,"author":{"gitId":"-"},"content":"Expected: Team in Team Display panel will be selected. Player list will be updated with list of players that are in the Team with the newly assigned players. Each individual player assign will be shown in the status message. Timestamp in the status bar is updated.","isFullCredit":false},{"lineNumber":2080,"author":{"gitId":"-"},"content":".. Test case: `list` -\u003e `assign NUSTeam i/3` +","isFullCredit":false},{"lineNumber":2081,"author":{"gitId":"-"},"content":"Expected: No player is assigned as player already exist in the team. Error details shown in the status message. Status bar remains the same.","isFullCredit":false},{"lineNumber":2082,"author":{"gitId":"-"},"content":".. Test case: `list` -\u003e `assign NUSTeam i/2 3 4` +","isFullCredit":false},{"lineNumber":2083,"author":{"gitId":"-"},"content":"Expected: Only the player at index 2 is assigned. Assign command will stop once it detects that a player cannot be assigned. Team Display Panel will not be updated. Person Card of index 2 will be updated with assigned team. Timestamp in the status bar is updated.","isFullCredit":false},{"lineNumber":2084,"author":{"gitId":"-"},"content":".. Test case: `list` -\u003e `assign NUSTeam i/9 6 4` +","isFullCredit":false},{"lineNumber":2085,"author":{"gitId":"-"},"content":"Expected: All players will be assigned by ascending index order. Team in Team Display panel will be selected. Player list will be updated with list of players that are in the Team with the newly assigned players. Each individual player assign will be shown in the status message. Timestamp in the status bar is updated.","isFullCredit":false},{"lineNumber":2086,"author":{"gitId":"-"},"content":".. Test case: `list` -\u003e `assign NUSTeam i/7 40` +","isFullCredit":false},{"lineNumber":2087,"author":{"gitId":"-"},"content":"Expected: Index exceeding the number of players listed in the Player List Panel will be ignored. Team in Team Display panel will be selected. Player list will be updated with list of players that are in the Team with the newly assigned players. Each individual player assign will be shown in the status message. Timestamp in the status bar is updated.","isFullCredit":false},{"lineNumber":2088,"author":{"gitId":"-"},"content":".. Test case: `list` -\u003e `assign NUSTeam i/-1` +","isFullCredit":false},{"lineNumber":2089,"author":{"gitId":"-"},"content":"Expected: Invalid index will have error details shown in the status message. Team is not viewed.","isFullCredit":false},{"lineNumber":2090,"author":{"gitId":"-"},"content":".. Test case: `list` -\u003e `assign NUSTeam` +","isFullCredit":false},{"lineNumber":2091,"author":{"gitId":"-"},"content":"Expected: Error details shown in the status message. Invalid command format as no index is given. Team is not viewed.","isFullCredit":false},{"lineNumber":2092,"author":{"gitId":"-"},"content":".. Test case: `assign NoTeam` +","isFullCredit":false},{"lineNumber":2093,"author":{"gitId":"-"},"content":"Expected: Error deatils shown in the status message. No such team found in MTM. Team is not viewed, player list not updated.","isFullCredit":false},{"lineNumber":2094,"author":{"gitId":"-"},"content":".. Test case: `add n/Barry Putter e/bp@hotwot.com tm/NUSTeam` +","isFullCredit":false},{"lineNumber":2095,"author":{"gitId":"-"},"content":"Expected: New person is added into MTM. Team in Team Display Panel will be selected. Player list will be updated with the new added person. Timestamp in the status bar is updated.","isFullCredit":false},{"lineNumber":2096,"author":{"gitId":"-"},"content":".. Test case: `add n/Himonie Branger e/hb@notwot.com tm/MissingTeam` +","isFullCredit":false},{"lineNumber":2097,"author":{"gitId":"-"},"content":"Expected: Person is not added into MTM. Team does not exist in MTM. Error details shown in the status message.","isFullCredit":false},{"lineNumber":2098,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":2099,"author":{"gitId":"-"},"content":". Unassigning players from a Team","isFullCredit":false},{"lineNumber":2100,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":2101,"author":{"gitId":"-"},"content":".. Prerequisites: Players are already existing in the team","isFullCredit":false},{"lineNumber":2102,"author":{"gitId":"-"},"content":".. Test case: `view NUSTeam` -\u003e `assign i/1 2 3` +","isFullCredit":false},{"lineNumber":2103,"author":{"gitId":"-"},"content":"Expected: Player list will be updated as the specified players to be unassigned will be removed from the team. Each individual player unassign will be shown in the status message. Timestamp in the status bar is updated.","isFullCredit":false},{"lineNumber":2104,"author":{"gitId":"-"},"content":".. Test case: `list` -\u003e `assign i/10 11` +","isFullCredit":false},{"lineNumber":2105,"author":{"gitId":"-"},"content":"Expected: Player list will be updated with the specified players to be unassigned will have their team name updated to `\u003cUNSPECIFIED\u003e`. Each individual player unassign will be shown in the status message. Timestamp in the status bar is updated.","isFullCredit":false},{"lineNumber":2106,"author":{"gitId":"-"},"content":".. Test case: `assign i/NUS` +","isFullCredit":false},{"lineNumber":2107,"author":{"gitId":"-"},"content":"Expected: Invalid index will have error details shown in the status message.","isFullCredit":false},{"lineNumber":2108,"author":{"gitId":"-"},"content":".. Test case: `list` -\u003e `assign i/1` +","isFullCredit":false},{"lineNumber":2109,"author":{"gitId":"-"},"content":"Expected: Error details shown in the status message. Player already has no team and can\u0027t be unassigned.","isFullCredit":false},{"lineNumber":2110,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":2111,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Renaming a Team","isFullCredit":false},{"lineNumber":2112,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":2113,"author":{"gitId":"-"},"content":". Renaming a Team after assigning players above","isFullCredit":false},{"lineNumber":2114,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":2115,"author":{"gitId":"-"},"content":".. Prerequisites: Ensure that the team to be renamed into does not exist","isFullCredit":false},{"lineNumber":2116,"author":{"gitId":"-"},"content":".. Test case: `rename NUSTeam tm/SUNTeam` +","isFullCredit":false},{"lineNumber":2117,"author":{"gitId":"-"},"content":"Expected: Team in Team Display Panel will be renamed to the new team name. New team name will be selected in the Team Display Panel. Player list of all the players in the new team name will be displayed. All players in the team will have their team name updated to the new team name. Team rename will be shown in the result status message. Timestamp in the status bar is updated.","isFullCredit":false},{"lineNumber":2118,"author":{"gitId":"-"},"content":".. Test case: `rename NewTeam tm/MooTeam` +","isFullCredit":false},{"lineNumber":2119,"author":{"gitId":"-"},"content":"Expected: Error details shown in the status message. Team to be rename does not exist in MTM.","isFullCredit":false},{"lineNumber":2120,"author":{"gitId":"-"},"content":".. Test case: `rename SUNTeam tm/\u0026-Team` +","isFullCredit":false},{"lineNumber":2121,"author":{"gitId":"-"},"content":"Expected: Error details shown in the status message. Team to be rename into is invalid and should only contains alphanumeric characters.","isFullCredit":false},{"lineNumber":2122,"author":{"gitId":"-"},"content":".. Test case: `rename tm/SmoovTeam` +","isFullCredit":false},{"lineNumber":2123,"author":{"gitId":"-"},"content":"Expected: Error details shown in the status message. Did not specify which team to rename and will indicate invalid command format.","isFullCredit":false},{"lineNumber":2124,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":2125,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Removing a Team","isFullCredit":false},{"lineNumber":2126,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":2127,"author":{"gitId":"-"},"content":". Removing a Team after renaming the team above","isFullCredit":false},{"lineNumber":2128,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":2129,"author":{"gitId":"-"},"content":".. Prerequisites: Team currently exist in MTM.","isFullCredit":false},{"lineNumber":2130,"author":{"gitId":"-"},"content":".. Test case: `view SUNTeam` -\u003e `remove SUNTeam` +","isFullCredit":false},{"lineNumber":2131,"author":{"gitId":"-"},"content":"Expected: Team is removed and Team Display Panel is updated to reflect that the team has been removed. Team name that is being removed will be shown in the status message. All players in the team will have their team name updated in the Player List Panel. Player List Panel will show the full list of players in MTM. Timestamp in the status bar is updated.","isFullCredit":false},{"lineNumber":2132,"author":{"gitId":"-"},"content":".. Test case: `list` -\u003e `remove Arsenal` +","isFullCredit":false},{"lineNumber":2133,"author":{"gitId":"-"},"content":"Expected: Similar to above, will be displaying full list of players before and after `remove` command.","isFullCredit":false},{"lineNumber":2134,"author":{"gitId":"-"},"content":".. Test case: `remove SUNTeam` +","isFullCredit":false},{"lineNumber":2135,"author":{"gitId":"-"},"content":"Expected: Error details shown in the status message. Team does not exist in MTM.","isFullCredit":false},{"lineNumber":2136,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":2137,"author":{"gitId":"codeeong"},"content":"\u003d\u003d\u003d Appearance Related Functions","isFullCredit":false},{"lineNumber":2138,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":2139,"author":{"gitId":"codeeong"},"content":"\u003d\u003d\u003d\u003d Changing a Theme","isFullCredit":false},{"lineNumber":2140,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":2141,"author":{"gitId":"codeeong"},"content":". Changing the theme that MTM is currently on","isFullCredit":false},{"lineNumber":2142,"author":{"gitId":"codeeong"},"content":".. Test case: `cte Dark` (if current theme is Light) or `cte Light` (if current theme is Dark) +","isFullCredit":false},{"lineNumber":2143,"author":{"gitId":"codeeong"},"content":"Expected: MTM colour scheme will change to the respective themes as shown below:","isFullCredit":false},{"lineNumber":2144,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":2145,"author":{"gitId":"codeeong"},"content":"image::DarkTheme.png[width\u003d\"300\"]","isFullCredit":false},{"lineNumber":2146,"author":{"gitId":"codeeong"},"content":"image::LightTheme.png[width\u003d\"300\"]","isFullCredit":false},{"lineNumber":2147,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":2148,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":2149,"author":{"gitId":"codeeong"},"content":"\u003d\u003d\u003d\u003d Setting Tag Colours","isFullCredit":false},{"lineNumber":2150,"author":{"gitId":"codeeong"},"content":". Setting the tags to colour of choice","isFullCredit":false},{"lineNumber":2151,"author":{"gitId":"codeeong"},"content":".. Prerequisites: Player has tags","isFullCredit":false},{"lineNumber":2152,"author":{"gitId":"codeeong"},"content":".. Test case:  `setTagColour t/redCard tc/blue`","isFullCredit":false},{"lineNumber":2153,"author":{"gitId":"codeeong"},"content":"Expected: All tags with the name `redCard` would become blue","isFullCredit":false}],"authorContributionMap":{"lithiumlkid":189,"lohtianwei":210,"codeeong":253,"-":1501}},{"path":"docs/UserGuide.adoc","fileType":"adoc","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003d My Team Manager - User Guide","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":":toc:","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lithiumlkid"},"content":":toc-title: Table Of Contents","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":":toclevels: 3","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":":toc-placement: preamble","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":":sectnums:","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":":imagesDir: images","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":":stylesDir: stylesheets","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":":xrefstyle: full","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":":experimental:","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"ifdef::env-github[]","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":":tip-caption: :bulb:","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":":note-caption: :information_source:","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":":important-caption: :white_check_mark:","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"endif::[]","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lithiumlkid"},"content":":repoURL: https://github.com/CS2103JAN2018-F14-B1/main","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"By: `F14-B1`      Since: `Mar 2018`      Licence: `MIT`","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lithiumlkid"},"content":"// tag::introduction[]","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003d\u003d Introduction","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"My Team Manager (MTM) is a link:https://en.wikipedia.org/wiki/Command-line_interface[Command-Line Interface] (CLI) based address book application for *football team managers*.","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"It is a one-stop solution to help you manage your player\u0027s contact details in an efficient and convenient manner.","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"Using MTM, you can organize players into teams, view player statistics, and, generate player line-ups.","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"Head to \u003c\u003cQuick Start\u003e\u003e to get started with My Team Manager!","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003d\u003d Quick Start","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lithiumlkid"},"content":"Welcome! If you want to learn more about using My Team Manager, you\u0027ve come to the right place. My Team Manager is the easiest","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lithiumlkid"},"content":"way for you to manage your team efficiently, and this quick start section will help you learn the basics so you can get going.","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codeeong"},"content":"Your teams, their players, and all the relevant information is organized clearly in My Team Manager. Teams can be created and","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"codeeong"},"content":"players can be assigned to teams.","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lithiumlkid"},"content":"\u003d\u003d\u003d Before we begin","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":".  Ensure you have Java version `1.8.0_60` or later installed in your Computer.","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":".  You can download Java 8 link:http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html[here].","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"+","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"[NOTE]","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Having any Java 8 version is not enough. +","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"* This app will not work with *earlier* or *later* versions of Java 8.","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"+","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":".  Download the latest `MyTeamManager.jar` link:{repoURL}/releases[here].","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"codeeong"},"content":".  Copy the file to the folder you want to use as the home folder for your MTM.","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lithiumlkid"},"content":".  Double-click the file to start the app. The software interface should appear in a few seconds as shown below.","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"+","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lithiumlkid"},"content":"image::UiNew.png[width\u003d\"790\"]","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lithiumlkid"},"content":"\u003d\u003d\u003d Navigating the interface","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lithiumlkid"},"content":"The figure below shows the different components in My Team Manager and the list below explains their purpose.","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lithiumlkid"},"content":"image::UIGuide.png[width\u003d\"790\"]","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":". *Command Box*: This is where you _key in the commands_ to use My Team Manager.","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":". *Display Box*: The display box _displays results_ to any command you input.","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":". *Team List* : This _displays the teams_ you have created in My Team Manager. +","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"* If a team is being viewed, it would be highlighted.","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":". *Details Panel*: This _displays details of the player_ that is currently selected. +","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"* Here, the player\u0027s _name_, _phone number_, _address_, _email_, _jersey number_ followed by _remarks_ are shown.","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":". *Systems Panel*: This displays information regarding modification to MTM\u0027s data.","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"* On the left, it displays the time and date when MTM is last updated.","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"* On the right, is the location of the data.","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":". *Player List*: This is the list of player cards. In each player card, +","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"* The player\u0027s _name_, _tags_, _team_, _rating_, followed by _position_ is displayed.","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"* The player\u0027s _avatar_ is also shown on the right column.","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lithiumlkid"},"content":"[[Using_Commands]]","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lithiumlkid"},"content":"\u003d\u003d\u003d Using Commands","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":".*Getting started with Commands*","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"****","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"** An example in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"* Fields that are in enclosed with `[ ]` are optional.","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"** An example, `n/NAME [t/TAG]`, can be used as, `n/John Doe t/friend`, or as, `n/John Doe`.","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"** In this example, `[t/TAG]...`, these parameters are valid, `t/friend`, `t/friend t/family`, and even `{nbsp}` (no parameter).","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"* Parameters can be entered in any order.","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"** For example, if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"****","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":".*The Use of Alias*","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"****","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"* Some commands have an alias that you can use to execute the command. This alias acts as a shortcut to execute the commands you want without typing the full command out.","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"** For example, you can type the alias `a` instead of the `add` command word to add a player into MTM.","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"****","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":".*Lookout for Tips, Notes, and Expected Outcomes*","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"****","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"TIP: This box give _tips_ that *might be useful*.","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"NOTE: This box _notes_ down *important details* regarding a feature.","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"IMPORTANT: This box will let you know the _outcome_ and what MTM should be *expected to do*.","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"****","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"lithiumlkid"},"content":"Now that you are familiar with the interface and using commands, you are now ready to begin using My Team Manager!","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"lithiumlkid"},"content":"\u003d\u003d Three steps to get started","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"lithiumlkid"},"content":"\u003d\u003d\u003d Add your first player","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"lithiumlkid"},"content":".  Add your first player, `Ronaldo` by typing the command `add n/Ronaldo e/Ronaldo@arsenal.com` in the command box and pressing kbd:[Enter] to execute it.","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"lithiumlkid"},"content":"+","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"lithiumlkid"},"content":"image::add.png[width\u003d\"400\"]","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"lithiumlkid"},"content":"+","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"lithiumlkid"},"content":".  Your new player, `Ronaldo` should appear in the player list as shown in the white box above.","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"lithiumlkid"},"content":"TIP: The `Add` command has additional optional parameters for you to include more information. For the full list,","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"refer to \u003c\u003cadd, Adding a player\u003e\u003e.","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"lithiumlkid"},"content":"\u003d\u003d\u003d Create your first team","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"lithiumlkid"},"content":"Now that you have a player, let\u0027s explore teams. Teams allow you to manage and group your players together according to","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"lithiumlkid"},"content":"the teams they belong to.","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"lithiumlkid"},"content":". Create your first team, `NUS` by typing the command `create NUS` in the command box and pressing kbd:[Enter] to execute it.","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"lithiumlkid"},"content":"+","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"lithiumlkid"},"content":"image::create.PNG[width\u003d\"300\"]","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"lithiumlkid"},"content":"+","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"lithiumlkid"},"content":". Your new team, `NUS` should appear in the team list.","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"lithiumlkid"},"content":". You can now assign `Ronaldo` to `NUS` by typing the command `assign tm/NUS i/1` in the command box and pressing kbd:[Enter] to execute it.","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"lithiumlkid"},"content":"- The Team List should now show NUS highlighted as shown in the white box labeled 1 above.","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"lithiumlkid"},"content":"- `Ronaldo` \u0027s player card should now show NUS in the team field as shown in the white box labeled 2 above.","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"lithiumlkid"},"content":"- The player list shows only players assigned to the team `NUS`","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"lithiumlkid"},"content":"\u003d\u003d\u003d Viewing more details","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":". View more details about a player, by entering `select` followed by the \u003c\u003cIndex, `INDEX`\u003e\u003e of the player. For example, to view","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"lithiumlkid"},"content":"`Ronaldo` \u0027s details, enter `select 1`.","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"lithiumlkid"},"content":". The details panel should now show the player\u0027s details.","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"lithiumlkid"},"content":"+","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"lithiumlkid"},"content":"image::select.png[width\u003d\"790\"]","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"lithiumlkid"},"content":"+","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"lithiumlkid"},"content":".  You may notice that there are fields that show `\u003cUNSPECIFIED\u003e`. These are optional fields that you can edit later on.","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"lithiumlkid"},"content":"There are also many ways you can customize and add to My Team Manager. Here are a few ways to start:","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":".. \u003c\u003cedit, Editing a player\u003e\u003e","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"lithiumlkid"},"content":".. \u003c\u003cchangeTheme, Changing MTM theme\u003e\u003e","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"lithiumlkid"},"content":".. \u003c\u003csetTagColour, Setting Tag Colour\u003e\u003e","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":".. \u003c\u003ctoggleprivacy, Setting privacy\u003e\u003e","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"lithiumlkid"},"content":".. \u003c\u003csort, Sorting players in the list\u003e\u003e","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"lithiumlkid"},"content":"// end::introduction[]","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"lithiumlkid"},"content":"\u003d\u003d Commands in My Team Manager","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"lithiumlkid"},"content":"Here you can find useful information regarding all the commands in My Team Manager.","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"lithiumlkid"},"content":"If you are not familiar on how to use commands yet, you can refer to \u003c\u003cUsing_Commands\u003e\u003e","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Fundamentals","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"lithiumlkid"},"content":"MTM provides tools that gives you the power to use MTM more efficiently and teach you how to navigate through MTM with ease.","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"lithiumlkid"},"content":"Enter commands more quickly with \u003c\u003cautocomplete,kbd:[tab] autocomplete\u003e\u003e, get \u003c\u003chelp,help\u003e\u003e or find out how to \u003c\u003cundo,undo\u003e\u003e and \u003c\u003credo,redo\u003e\u003e commands.","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"lithiumlkid"},"content":"You can also find information to secure your information in My Team Manger by \u003c\u003ctogglePrivacy, toggling privacy\u003e\u003e or \u003c\u003ckey,set a key to prevent tampering\u003e\u003e","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Saving the data","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"There is no need to save anything manually as My Team Manager will save","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"any data entered directly to the hard drive.","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"// tag::autocomplete[]","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"[[autocomplete]]","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Using kbd:[tab] Autocomplete","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"After typing in the first few characters of a command, pressing kbd:[tab] will fill in the rest of the item.","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"To view the parameters for a command, press tab after the whole command is typed in. Pressing tab again will remove the parameters.","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"[TIP]","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"You can use the autocompleted parameters as a template after viewing them.","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"lithiumlkid"},"content":"Text will turn red if the input has no parameters or if no matching command exists.","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"lithiumlkid"},"content":"If there are multiple possible commands for a given input, i.e. \u0027e\u0027 could be \u0027edit\u0027 or \u0027exit\u0027,","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"then a dropdown box will appear with the possible commands. These can be navigated using mouse or arrow keys. Press enter to select the desired command.","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"// end::autocomplete[]","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"[[help]]","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Viewing help : `help`","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"Feeling lost? Not sure what to do? Don\u0027t worry, our friendly guide will help you! All you have to do is just type the `help` command, and you will get all the information you require.","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"Format: `help` +","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"Alias: kbd:[F1]","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"[[history]]","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Listing entered commands : `history`","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"Have you been extensively using MTM and in the midst of entering more commands, you could not remember what commands you have entered? MTM allows you to look at all your past commands that you have entered in reverse chronological order.","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"Format: `history` +","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"Alias: `h`","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"[NOTE]","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"* Pressing the kbd:[\u0026uarr;] and kbd:[\u0026darr;] arrows will display the previous and next input respectively in the command box.","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"[IMPORTANT]","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":".*What to expect*","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"A list of your previously entered command will be shown to you.","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"// tag::undoredo[]","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"[[undo]]","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Undoing previous command : `undo`","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"Have you entered a wrong command or might have accidentally entered the wrong values to the specified fields to a command? +","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"You don\u0027t have to worry, as MTM provides you with the command to undo most mistakes that you might have made. MTM will restore itself to the state before the previous command was executed.","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"Format: `undo` +","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"Alias: `u`","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"[NOTE]","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"* There are a few commands that can be undoable: commands that modify MTM\u0027s content that are related to players or teams.","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"** Player related commands: `add`, `delete`, `edit`, `clear`, `remark` +","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"** Team related commands: `create`, `assign`, `remove`, `rename`","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"[IMPORTANT]","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":".*What to expect*","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"Commands that are _undoAble_ will be reversed and MTM will be in the state before the command was executed.","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"[[redo]]","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Redoing the previously undone command : `redo`","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"codeeong"},"content":"If you accidentally call the `undo` command too many times and need a way to quickly reverse that, MTM allows you to redo the most recent `undo` command.","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"Format: `redo` +","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"Alias: `r`","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"[IMPORTANT]","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":".*What to expect*","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"Previously executed `undo` command will be reversed and MTM will be in its previous state.","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"// end::undoredo[]","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"// tag::togglePrivacy[]","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"[[toggleprivacy]]","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Toggling various fields to private: `toggleprivacy` `[Since v1.4]`","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"You can toggle the privacy of various fields of players in MTM.","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"Format: `toggleprivacy INDEX [p/] [e/] [r/] [ra/] [a/]` +","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"Alias: `tp`","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"codeeong"},"content":"[NOTE]","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"codeeong"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"* Current version of `toggleprivacy` supports the field to be privated: +","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"** `p/`: PHONE, `e/`: EMAIL, `r/`: REMARK, `ra/`:RATING \u0026 `a/`: ADDRESS.","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"codeeong"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"[IMPORTANT]","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":".*What to expect*","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"Privacy of field will be toggled between private or public. +","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"If Phone: `p/` of player at \u003c\u003cIndex, `INDEX`\u003e\u003e 1 is private, running command: `tp 1 p/` would change phone field to public. +","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"Private fields are shown as \u003cPrivate `FIELD`\u003e.","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"Here are some examples on how you can use the `toggleprivacy` command:","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"* `tp 1 p/ ra/`","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"Toggles privacy of phone and rating of player at \u003c\u003cIndex, `INDEX`\u003e\u003e 1.","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"// end::togglePrivacy[]","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"// tag::key[]","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"[[key]]","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Toggling lock on MTM: `key` `[Since v1.5]`","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"You can toggle a lock on MTM to prevent unauthorised changes to your details in MTM. When MTM is in a locked state, functionality will be limited.","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"Format: `key PASSWORD` +","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"Alias: `k`","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"[NOTE]","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"* Current version of `key` uses a fixed default `PASSWORD`: *ilikesports*","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"[IMPORTANT]","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":".*What to expect*","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"When MTM is locked, only the following commands can be executed: +","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"`changeTheme`, `exit`, `find`, `help`, `key`, `list`, `sort` and `view`","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"Here are examples on how to use `key`:","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"* `key ilikesports`","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"If MTM is in a lock state, use this command to unlock it.","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"* `key ilikesports`","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"To lock MTM, use this command to lock.","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"// end::key[]","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"[[clear]]","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Clearing all entries : `clear`","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"You can clear all entries from MTM with the \u0027clear\u0027 command.","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"Format: `clear` +","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"Alias: `c`","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"[[exit]]","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Exiting the program : `exit`","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"You can exit the program by entering the \u0027exit\u0027 command.","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"Format: `exit`","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Player-Related Commands","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"lithiumlkid"},"content":"Here you can find commands to change your players and their information in My Team Manager +","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"lithiumlkid"},"content":"such as \u003c\u003cadd,adding a player\u003e\u003e, \u003c\u003cedit,editing a player\u003e\u003e or \u003c\u003cremark,adding a remark\u003e\u003e.","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"lithiumlkid"},"content":"You can also find useful tools to \u003c\u003cfind,find\u003e\u003e a player or \u003c\u003csort,sort\u003e\u003e players in your list.","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"lithiumlkid"},"content":"// tag::addplayer[]","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"[[add]]","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Adding a player: `add`","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"lithiumlkid"},"content":"This is the command that you will be using most frequently, especially when dealing with new players. You will be able to add new players with the details that you have obtained into MTM by using the `add` command.","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"lithiumlkid"},"content":"Format: `add n/NAME e/EMAIL [tm/TEAM] [a/ADDRESS] [p/PHONE_NUMBER] [j/JERSEY_NUMBER] [ra/RATING] [po/POSITION] [av/AVATAR] [t/TAG]...` +","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"Alias: `a`","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"The table below explains the correct inputs for the parameters.","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"[width\u003d\"80%\",cols\u003d\"1,2,2\",options\u003d\"header\"]","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"|Parameter |Input type |Example","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"|n/NAME |Player name | n/Ronaldo","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"|e/EMAIL |Player\u0027s email address | a/ronaldo@soccer.com","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"|tm/TEAM |Player\u0027s Team | tm/Real Madrid","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"|a/ADDRESS |Player\u0027s address| a/Blk 123 Bukit Batok St 21","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"|p/PHONE_NUMBER| Player\u0027s phone number| p/92343433","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"|j/JERSEY_NUMBER| Player\u0027s jersey number| j/17","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"|ra/RATING| Player\u0027s performance rating (From 1 to 5)| ra/5","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"|po/POSITION| Player\u0027s postion +","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"(1 for Striker, +","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"2 for Midfiled, +","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"3 for Defender, +","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"4 for Goalkeeper)| po/1","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"|av/AVATAR| Absolute filepath to player\u0027s avatar image file| av/C:\\avatar.png (for Windows) av//User/username/path/to/image.jpg (for MacOS)","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"|t/TAG| Your tag for the player| t/Injured","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"[NOTE]","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"* A player can only be added to an existing team.","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"* If you have not created the team yet, you can create one first using the \u003c\u003cCreating a team: `create` `[Since v1.2]`, `create`\u003e\u003e command.","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"[TIP]","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"A player can have any number of tags (including 0).","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"Output: The added player should appear in the player list panel.","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"Examples:","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"* `add n/Mo Salah e/mo@soccer.com`","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"Adds a player named `Mo Salah` with email `mo@soccer.com`.","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"* `add n/Ronaldo p/92331322 e/ronaldo@soccer.com a/Portugal tm/Real Madrid j/17 ra/5 po/1`","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"Adds a player named Ronaldo with phone number `92331322`, email `ronaldo@soccer.com`, address `Portugal`,","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"team `Real Madrid`, jersey number `17`, rating `5`, and position `1` corresponding to `Striker`.","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"[[edit]]","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Editing a player : `edit`","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"lithiumlkid"},"content":"If you made a mistake when adding a player, or if there\u0027s player information that needs updating, you may edit an existing player in MTM with the \u0027edit\u0027 command.","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [e/EMAIL] [tm/TEAM] [a/ADDRESS] [p/PHONE_NUMBER] [j/JERSEY_NUMBER] [ra/RATING] [po/POSITION] [t/TAG]...` +","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"Alias: `e`","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"[NOTE]","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"* Edits the player at the specified \u003c\u003cIndex, `INDEX`\u003e\u003e.","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"-"},"content":"* Please only edit the player that is currently being selected. If you were to edit a player who is not selected, the player\u0027s details will be updated, but the selection will remain at the currently selected player.","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"-"},"content":"* When you edit tags, the existing tags of the player will be removed i.e adding of tags is not cumulative.","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"-"},"content":"* You can remove all the player\u0027s tags by typing `t/` without specifying any tags after it.","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"Examples:","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"* `edit 1 p/91234567 e/johndoe@example.com`","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"Edits the phone number and email address of the 1st player to be `91234567` and `johndoe@example.com` respectively.","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"* `edit 2 n/Betsy Crower t/`","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"Edits the name of the 2nd player to be `Betsy Crower` and clears all existing tags.","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"lithiumlkid"},"content":"// end::addplayer[]","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"[[delete]]","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Deleting a player : `delete`","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"codeeong"},"content":"If you want to remove a player from MTM, you may use this command to delete the player.","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"-"},"content":"Format: `delete INDEX` +","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"Alias: `d`","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"[NOTE]","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"-"},"content":"* Deletes the player at the specified \u003c\u003cIndex, `INDEX`\u003e\u003e.","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"-"},"content":"Examples:","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"-"},"content":"* `list`","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"-"},"content":"* `delete 2`","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"-"},"content":"Deletes the 2nd player in the MTM.","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"* `find Betsy`","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"-"},"content":"* `delete 1`","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"lohtianwei"},"content":"Deletes the 1st player in the results of the `find` command.","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"-"},"content":"[[remark]]","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Noting down a remark for player: `remark` `[Since v1.1]`","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"-"},"content":"When you need to drop yourself a self-note with regards to a specific player you\u0027re managing, you can make a self-note","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"-"},"content":"of a specific player easily by giving the player a remark for you to remember by.","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"-"},"content":"Format: `remark INDEX [r/[REMARK]]` +","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"-"},"content":"Alias: `rm`","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"-"},"content":"[NOTE]","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"-"},"content":"* By leaving out `r/REMARK` or `REMARK`, the command acts as a remark removal.","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"-"},"content":"* Only use the `remark` command when you want to leave a remark, `add` or `edit` does not allow you to create a remark for the player.","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"-"},"content":"* Please only add remarks to the player that is currently being selected. If you were to add remarks to a player who is not selected, the player\u0027s remarks will be updated, but the selection will remain at the currently selected player.","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"-"},"content":"[IMPORTANT]","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"-"},"content":".*What to expect*","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"-"},"content":"Your specified player will either be given a new remark or have its existing remark removed.","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"-"},"content":"Here are a few valid examples on how you can use the `remark` command:","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"-"},"content":"* `remark 1`","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"-"},"content":"Removes the remark from the specified player at \u003c\u003cIndex, `INDEX`\u003e\u003e 1.","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"-"},"content":"* `remark 5 r/MVP Player`","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"-"},"content":"Give a remark to the specified player at \u003c\u003cIndex, `INDEX`\u003e\u003e 5 with the remark \"MVP Player\".","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"-"},"content":"[[list]]","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Listing all players : `list`","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"-"},"content":"To view a list of all the players you are managing, you can use the `list` command to see all of your players.","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"-"},"content":"Format: `list` +","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"-"},"content":"Alias: `l`","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"lohtianwei"},"content":"// tag::sort[]","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"lithiumlkid"},"content":"[[sort]]","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Sorting players by field: `sort` `[Since v1.2]`","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"-"},"content":"You can sort the players by fields with the \u0027sort\u0027 command. Players can be sorted in both ascending or descending order.","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"-"},"content":"Format: `sort FIELD ORDER` +","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"-"},"content":"Alias: `so`","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"-"},"content":"[NOTE]","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"-"},"content":"* Current version of `sort` supports the following fields and order:","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"-"},"content":"** `FIELD`: `name`, `email`, `address`, `rating`, `jersey` \u0026 `position`","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"-"},"content":"** `ORDER`: `asc` \u0026 `desc`","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"-"},"content":"Here are a few valid examples on how you can use the `sort` command:","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"-"},"content":"* `sort name asc`","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"-"},"content":"This will sort MTM by names, in alphabetical order.","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"-"},"content":"* `sort name desc`","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"-"},"content":"This will sort MTM by names, in reverse alphabetical order.","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"lohtianwei"},"content":"// end::sort[]","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"-"},"content":"[[find]]","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Locating players by name: `find`","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"-"},"content":"You can find a player whose name contain any of the given keywords with this command within the full player listing of MTM.","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [KEYWORD]...` +","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"-"},"content":"Alias: `f`","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"-"},"content":"[NOTE]","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"-"},"content":"* The search is case insensitive. e.g `hans` will match `Hans`.","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`.","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"-"},"content":"* Only the name is searched.","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`.","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"-"},"content":"* Players matching at least one keyword will be returned (i.e. `OR` search). e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`.","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"-"},"content":"Examples:","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"-"},"content":"* `find John`","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"-"},"content":"MTM will find all players with the name `john` with uppercase/lowercase characters in it.","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"-"},"content":"* `find Betsy Tim John`","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"-"},"content":"Display all players that have the name `betsy`, `tim`, or `john`.","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"-"},"content":"[[select]]","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Selecting a player : `select`","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"-"},"content":"Identified the player you\u0027re looking for and want to see more details about the player?","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"-"},"content":"MTM offers you the ability to view details of your specified player via an \u003c\u003cIndex, `INDEX`\u003e\u003e shown in the current listing of players.","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"-"},"content":"Alternatively, you can just scroll to the player you want, click their card,","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"-"},"content":"and their details will be displayed on the right hand side of the screen.","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"-"},"content":"Format: `select INDEX` +","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"-"},"content":"Alias: `s`","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"-"},"content":"[IMPORTANT]","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"-"},"content":".*What to expect*","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"codeeong"},"content":"The details panel will display your selected player\u0027s name, phone number, address, email address,","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"codeeong"},"content":"jersey number, and remarks on the right side of the screen.","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"-"},"content":"Here are a few valid examples on how you can use the `select` command:","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"-"},"content":"* `list`","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"-"},"content":"* `select 2`","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"-"},"content":"Displays the list of all players and selects the 2nd player in that list.","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"-"},"content":"* `find Betsy`","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"-"},"content":"* `select 1`","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"-"},"content":"Finds a player named `betsy` and selects the 1st player in the results of the `find` command.","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Team-Related Commands","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"lithiumlkid"},"content":"Here you can find commands to change your teams and their players in My Team Manager +","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"lithiumlkid"},"content":"such as \u003c\u003ccreate,creating a team\u003e\u003e, \u003c\u003cassign,assigning players to a team\u003e\u003e or \u003c\u003crename,renaming a team\u003e\u003e.","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"lithiumlkid"},"content":"You can also find useful tools like \u003c\u003cview,viewing a team\u003e\u003e.","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"-"},"content":"// tag::create[]","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"-"},"content":"[[create]]","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Creating a team: `create` `[Since v1.2]`","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"-"},"content":"What is a team management application without the functionality of creating a team? When you use this command, it allows you to create a team that can be assigned to players later on.","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"-"},"content":"Format: `create TEAM_NAME` +","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"-"},"content":"Alias: `ct`","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"-"},"content":"[NOTE]","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"-"},"content":"* You can\u0027t create a team that already exist in MTM.","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"-"},"content":"[IMPORTANT]","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"-"},"content":".*What to expect*","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"lohtianwei"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"-"},"content":"Your newly specified team will be created with the name you have given without any players in it, and your team name will appear in the team bar below.","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"lohtianwei"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"-"},"content":"Here are a few valid examples on how you can use the `create` command:","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"-"},"content":"* `create Liverpool`","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"-"},"content":"Creates another new team with the name \"Liverpool\" by entering `create Liverpool` into the Command Box and pressing kbd:[Enter].","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"-"},"content":"image::TeamCreateExampleBefore.png[width\u003d\"200\"]","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"-"},"content":"\"Liverpool\" will be shown in the Team List.","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"-"},"content":"image::TeamCreateExampleAfter.png[width\u003d\"350\"]","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"-"},"content":"// end::create[]","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"-"},"content":"// tag::view[]","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"-"},"content":"[[view]]","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Viewing a team: `view` `[Since v1.3]`","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"-"},"content":"With the ability to manage different teams, you will be able to identify all players in a team easily with the `view` command.","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"-"},"content":"`Coming in v2.0` +","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"-"},"content":"Details of your team will be displayed on the right panel when `view` command is executed.","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"-"},"content":"Format: `view TEAM_NAME` +","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"-"},"content":"Alias: `vt`","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"-"},"content":"[IMPORTANT]","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"-"},"content":".*What to expect*","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"-"},"content":"Displays the list of players on the left panel that are in the team specified.","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"-"},"content":"Here are a few valid examples on how you can use the `view` command:","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"-"},"content":"* `view Arsenal`","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"-"},"content":"You can use the command above to easily view all the players that exist in \"Arsenal\".","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"-"},"content":"image::TeamViewExampleBefore.png[width\u003d\"350\"]","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"-"},"content":"The Player List will be updated with all players in the specified team, \"Arsenal\".","isFullCredit":false},{"lineNumber":645,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":646,"author":{"gitId":"-"},"content":"image::TeamViewExampleAfter.png[width\u003d\"700\"]","isFullCredit":false},{"lineNumber":647,"author":{"gitId":"-"},"content":"// end::view[]","isFullCredit":false},{"lineNumber":648,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":649,"author":{"gitId":"-"},"content":"// tag::assign[]","isFullCredit":false},{"lineNumber":650,"author":{"gitId":"-"},"content":"[[assign]]","isFullCredit":false},{"lineNumber":651,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Assigning player to teams: `assign` `[Since v1.3]`","isFullCredit":false},{"lineNumber":652,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":653,"author":{"gitId":"-"},"content":"Have a player without a team, or have yet to assigned one during the addition of player into MTM, you can call `assign` command to assign that player to a particular team of your choice.","isFullCredit":false},{"lineNumber":654,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":655,"author":{"gitId":"-"},"content":"Format: `assign [TEAM_NAME] i/INDEX [INDEX]...` +","isFullCredit":false},{"lineNumber":656,"author":{"gitId":"-"},"content":"Alias: `at`","isFullCredit":false},{"lineNumber":657,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":658,"author":{"gitId":"-"},"content":"[NOTE]","isFullCredit":false},{"lineNumber":659,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":660,"author":{"gitId":"-"},"content":"* You can assign multiple players to a team by including more than one valid \u003c\u003cIndex, `INDEX`\u003e\u003e.","isFullCredit":false},{"lineNumber":661,"author":{"gitId":"-"},"content":"* A player can only consist of 1 team, assigning a player that have an existing team, will be re-assigned the new team.","isFullCredit":false},{"lineNumber":662,"author":{"gitId":"-"},"content":"* Assigning a player without a given team will unassign the player from its current team.","isFullCredit":false},{"lineNumber":663,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":664,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":665,"author":{"gitId":"-"},"content":"[IMPORTANT]","isFullCredit":false},{"lineNumber":666,"author":{"gitId":"-"},"content":".*What to expect*","isFullCredit":false},{"lineNumber":667,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":668,"author":{"gitId":"-"},"content":"Your specified player, via \u003c\u003cIndex, `INDEX`\u003e\u003e, will be assigned to the specified team or unassigned from any team.","isFullCredit":false},{"lineNumber":669,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":670,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":671,"author":{"gitId":"-"},"content":"Here are a few valid examples on how you can use the `create` command:","isFullCredit":false},{"lineNumber":672,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":673,"author":{"gitId":"-"},"content":"* `list`","isFullCredit":false},{"lineNumber":674,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":675,"author":{"gitId":"-"},"content":"View the full list of players in MTM so that you can determine which player you want to assign a team.","isFullCredit":false},{"lineNumber":676,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":677,"author":{"gitId":"-"},"content":"image::TeamAssignListExample.png[width\u003d\"700\"]","isFullCredit":false},{"lineNumber":678,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":679,"author":{"gitId":"-"},"content":"* `assign Liverpool i/1 2`","isFullCredit":false},{"lineNumber":680,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":681,"author":{"gitId":"-"},"content":"Enter the command into the Command Box which will assign the player with \u003c\u003cIndex, `INDEX`\u003e\u003e 1 and 2 to team \"Liverpool\".","isFullCredit":false},{"lineNumber":682,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":683,"author":{"gitId":"-"},"content":"image::TeamAssignExampleBefore.png[width\u003d\"200\"]","isFullCredit":false},{"lineNumber":684,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":685,"author":{"gitId":"-"},"content":"image::TeamAssignExampleAfter.png[width\u003d\"700\"]","isFullCredit":false},{"lineNumber":686,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":687,"author":{"gitId":"-"},"content":"* `add n/Rembart Loeri e/remlo@tam.com tm/Liverpool`","isFullCredit":false},{"lineNumber":688,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":689,"author":{"gitId":"-"},"content":"Add a player with the prefix `tm/` for `Team` will automatically be assigned to the team specified.","isFullCredit":false},{"lineNumber":690,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":691,"author":{"gitId":"-"},"content":"image::TeamAssignAddExampleBefore.png[width\u003d\"350\"]","isFullCredit":false},{"lineNumber":692,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":693,"author":{"gitId":"-"},"content":"image::TeamAssignAddExampleAfter.png[width\u003d\"700\"]","isFullCredit":false},{"lineNumber":694,"author":{"gitId":"-"},"content":"// end::assign[]","isFullCredit":false},{"lineNumber":695,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":696,"author":{"gitId":"-"},"content":"// tag::rename[]","isFullCredit":false},{"lineNumber":697,"author":{"gitId":"-"},"content":"[[rename]]","isFullCredit":false},{"lineNumber":698,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Rename a team: `rename` `[Since v1.4]`","isFullCredit":false},{"lineNumber":699,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":700,"author":{"gitId":"-"},"content":"Entered your team name wrongly or you need to update it to accordingly, you can use the `rename` command to help you make that change.","isFullCredit":false},{"lineNumber":701,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":702,"author":{"gitId":"-"},"content":"Format: `rename TEAM_NAME tm/RENAME_TEAM_NAME` +","isFullCredit":false},{"lineNumber":703,"author":{"gitId":"-"},"content":"Alias: `rnt`","isFullCredit":false},{"lineNumber":704,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":705,"author":{"gitId":"-"},"content":"[IMPORTANT]","isFullCredit":false},{"lineNumber":706,"author":{"gitId":"-"},"content":".*What to expect*","isFullCredit":false},{"lineNumber":707,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":708,"author":{"gitId":"-"},"content":"Your specified team will be updated with the new team name along with the affected players in the existing team.","isFullCredit":false},{"lineNumber":709,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":710,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":711,"author":{"gitId":"-"},"content":"Here are a few valid examples on how you can use the `rename` command:","isFullCredit":false},{"lineNumber":712,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":713,"author":{"gitId":"-"},"content":"* `rename Liverpool tm/Tello Mello`","isFullCredit":false},{"lineNumber":714,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":715,"author":{"gitId":"-"},"content":"You can rename a `Team` easily by entering a similar command above, which will rename \"Liverpool\" into \"Tello Mello\".","isFullCredit":false},{"lineNumber":716,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":717,"author":{"gitId":"-"},"content":"image::TeamRenameExampleBefore.png[width\u003d\"700\"]","isFullCredit":false},{"lineNumber":718,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":719,"author":{"gitId":"-"},"content":"After renaming, the team name will be updated in the Team List and will be update for each individual player.","isFullCredit":false},{"lineNumber":720,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":721,"author":{"gitId":"-"},"content":"image::TeamRenameExampleAfter.png[width\u003d\"700\"]","isFullCredit":false},{"lineNumber":722,"author":{"gitId":"-"},"content":"// end::rename[]","isFullCredit":false},{"lineNumber":723,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":724,"author":{"gitId":"-"},"content":"// tag::remove[]","isFullCredit":false},{"lineNumber":725,"author":{"gitId":"-"},"content":"[[remove]]","isFullCredit":false},{"lineNumber":726,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Removing a team: `remove` `[Since v1.4]`","isFullCredit":false},{"lineNumber":727,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":728,"author":{"gitId":"-"},"content":"No longer managing the team or the team has been disbanded, you can easily remove the team from MTM.","isFullCredit":false},{"lineNumber":729,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":730,"author":{"gitId":"-"},"content":"Format: `remove TEAM_NAME` +","isFullCredit":false},{"lineNumber":731,"author":{"gitId":"-"},"content":"Alias: `rt`","isFullCredit":false},{"lineNumber":732,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":733,"author":{"gitId":"-"},"content":"[NOTE]","isFullCredit":false},{"lineNumber":734,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":735,"author":{"gitId":"-"},"content":"* Removing a team will automatically update all affected players\u0027 `Team` field.","isFullCredit":false},{"lineNumber":736,"author":{"gitId":"-"},"content":"* Players without a team will need to be re-assigned.","isFullCredit":false},{"lineNumber":737,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":738,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":739,"author":{"gitId":"-"},"content":"[IMPORTANT]","isFullCredit":false},{"lineNumber":740,"author":{"gitId":"-"},"content":".*What to expect*","isFullCredit":false},{"lineNumber":741,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":742,"author":{"gitId":"-"},"content":"Remove the specified team and update all affected players.","isFullCredit":false},{"lineNumber":743,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":744,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":745,"author":{"gitId":"-"},"content":"Here are a few valid examples of how you can use the `remove` command:","isFullCredit":false},{"lineNumber":746,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":747,"author":{"gitId":"-"},"content":"* `view Arsenal`","isFullCredit":false},{"lineNumber":748,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":749,"author":{"gitId":"-"},"content":"Here we show you what it would be like before the removal of \"Arsenal\".","isFullCredit":false},{"lineNumber":750,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":751,"author":{"gitId":"-"},"content":"image::TeamRemoveExampleBefore.png[width\u003d\"700\"]","isFullCredit":false},{"lineNumber":752,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":753,"author":{"gitId":"-"},"content":"* `remove Arsenal`","isFullCredit":false},{"lineNumber":754,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":755,"author":{"gitId":"-"},"content":"After typing the command, you will remove the the team from MTM and will be taken off the Team Display as well as updating each individual player affected to be without a team.","isFullCredit":false},{"lineNumber":756,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":757,"author":{"gitId":"-"},"content":"image::TeamRemoveExampleAfter.png[width\u003d\"700\"]","isFullCredit":false},{"lineNumber":758,"author":{"gitId":"-"},"content":"// end::remove[]","isFullCredit":false},{"lineNumber":759,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":760,"author":{"gitId":"lithiumlkid"},"content":"\u003d\u003d\u003d Appearance Commands","isFullCredit":false},{"lineNumber":761,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":762,"author":{"gitId":"lithiumlkid"},"content":"Here you can find useful commands to change the look of My Team Manager to \u003c\u003csetTagColour, set the colour of your tags\u003e\u003e and \u003c\u003cchangeTeam,change the theme\u003e\u003e.","isFullCredit":false},{"lineNumber":763,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":764,"author":{"gitId":"-"},"content":"// tag::setTagColour[]","isFullCredit":false},{"lineNumber":765,"author":{"gitId":"lithiumlkid"},"content":"[[setTagColour]]","isFullCredit":false},{"lineNumber":766,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Setting colour of tags : `setTagColour` `[Since v1.2]`","isFullCredit":false},{"lineNumber":767,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":768,"author":{"gitId":"-"},"content":"You can set the tags to a colour of your choice with the \u0027setColourTag\u0027 command.","isFullCredit":false},{"lineNumber":769,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":770,"author":{"gitId":"-"},"content":"Format: `setTagColour t/TAG tc/COLOUR` +","isFullCredit":false},{"lineNumber":771,"author":{"gitId":"-"},"content":"Alias: `stc`","isFullCredit":false},{"lineNumber":772,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":773,"author":{"gitId":"codeeong"},"content":"[NOTE]","isFullCredit":false},{"lineNumber":774,"author":{"gitId":"codeeong"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":775,"author":{"gitId":"-"},"content":"* The tag must currently be in used in MTM for this command to work.","isFullCredit":false},{"lineNumber":776,"author":{"gitId":"-"},"content":"* Current version of `setTagColour` supports only this list of preset `COLOUR`:","isFullCredit":false},{"lineNumber":777,"author":{"gitId":"-"},"content":"** `teal`, `red`, `yellow`, `blue`, `orange`, `brown`, `green`, `pink`, `black`, `grey`","isFullCredit":false},{"lineNumber":778,"author":{"gitId":"-"},"content":"* The current version of `setTagColour` is *NOT* an UndoableCommand.","isFullCredit":false},{"lineNumber":779,"author":{"gitId":"-"},"content":"** i.e. You cannot `undo` a setTagCommand.","isFullCredit":false},{"lineNumber":780,"author":{"gitId":"-"},"content":"* Instead, just enter `stc t/TAG tc/COLOUR` to change the colour back!","isFullCredit":false},{"lineNumber":781,"author":{"gitId":"codeeong"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":782,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":783,"author":{"gitId":"codeeong"},"content":"[IMPORTANT]","isFullCredit":false},{"lineNumber":784,"author":{"gitId":"codeeong"},"content":".*What to expect*","isFullCredit":false},{"lineNumber":785,"author":{"gitId":"codeeong"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":786,"author":{"gitId":"codeeong"},"content":"You will see the specified tags in the left panel change to the colour of your choice.","isFullCredit":false},{"lineNumber":787,"author":{"gitId":"codeeong"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":788,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":789,"author":{"gitId":"codeeong"},"content":"Here is a valid example on how you can use the `setTagColour` command:","isFullCredit":false},{"lineNumber":790,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":791,"author":{"gitId":"codeeong"},"content":"* `stc t/redCard t/red`","isFullCredit":false},{"lineNumber":792,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":793,"author":{"gitId":"codeeong"},"content":"All the tags that say \"redCard\" in the left panel will now turn red.","isFullCredit":false},{"lineNumber":794,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":795,"author":{"gitId":"-"},"content":"// end::setTagColour[]","isFullCredit":false},{"lineNumber":796,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":797,"author":{"gitId":"-"},"content":"// tag::changeTheme[]","isFullCredit":false},{"lineNumber":798,"author":{"gitId":"-"},"content":"[[changeTheme]]","isFullCredit":false},{"lineNumber":799,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Changing theme : `changeTheme` `[Since v1.5]`","isFullCredit":false},{"lineNumber":800,"author":{"gitId":"codeeong"},"content":"If you feel that the dark theme is not for you, and you prefer to work on a brighter interface,","isFullCredit":false},{"lineNumber":801,"author":{"gitId":"codeeong"},"content":"you can change the theme from the default Dark Theme to Light Theme with the \u0027changeTheme\u0027 command.","isFullCredit":false},{"lineNumber":802,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":803,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":804,"author":{"gitId":"-"},"content":"Format: `changeTheme THEME` +","isFullCredit":false},{"lineNumber":805,"author":{"gitId":"codeeong"},"content":"Alias: `cte`","isFullCredit":false},{"lineNumber":806,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":807,"author":{"gitId":"lohtianwei"},"content":"[NOTE]","isFullCredit":false},{"lineNumber":808,"author":{"gitId":"lohtianwei"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":809,"author":{"gitId":"-"},"content":"* Current version of `changeTheme` only supports this 2 `THEME`:","isFullCredit":false},{"lineNumber":810,"author":{"gitId":"-"},"content":"** `Light` or `Dark`","isFullCredit":false},{"lineNumber":811,"author":{"gitId":"-"},"content":"* The current version of `changTheme` is *NOT* an UndoableCommand.","isFullCredit":false},{"lineNumber":812,"author":{"gitId":"-"},"content":"** i.e. You cannot `undo` a `changeTheme` command.","isFullCredit":false},{"lineNumber":813,"author":{"gitId":"-"},"content":"* Instead, just enter `cte THEME` to change the colour back!","isFullCredit":false},{"lineNumber":814,"author":{"gitId":"lohtianwei"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":815,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":816,"author":{"gitId":"codeeong"},"content":"Here is a valid example on how you can use the `changeTheme` command:","isFullCredit":false},{"lineNumber":817,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":818,"author":{"gitId":"codeeong"},"content":"* `cte Light`","isFullCredit":false},{"lineNumber":819,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":820,"author":{"gitId":"codeeong"},"content":"You will see the whole interface change from a dark-coloured theme to become light-coloured.","isFullCredit":false},{"lineNumber":821,"author":{"gitId":"-"},"content":"// end::changeTheme[]","isFullCredit":false},{"lineNumber":822,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":823,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Coming Soon","isFullCredit":false},{"lineNumber":824,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":825,"author":{"gitId":"lohtianwei"},"content":"There is more to come with the next upcoming update! Keep a lookout for these newly implemented features soon!","isFullCredit":false},{"lineNumber":826,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":827,"author":{"gitId":"-"},"content":"// tag::changePass2.0[]","isFullCredit":false},{"lineNumber":828,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Change password: `changepass` `[Coming in v2.0]`","isFullCredit":false},{"lineNumber":829,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":830,"author":{"gitId":"-"},"content":"Should you feel that the default password used in `key` could be more secure, you may change it to a password of your","isFullCredit":false},{"lineNumber":831,"author":{"gitId":"-"},"content":"choosing with this command.","isFullCredit":false},{"lineNumber":832,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":833,"author":{"gitId":"-"},"content":"Format: `changepass CURRENT_PASSWORD NEW_PASSWORD CONFIRM_PASSWORD` +","isFullCredit":false},{"lineNumber":834,"author":{"gitId":"-"},"content":"Alias: `cpw`","isFullCredit":false},{"lineNumber":835,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":836,"author":{"gitId":"-"},"content":"Here is how you can change the your password:","isFullCredit":false},{"lineNumber":837,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":838,"author":{"gitId":"-"},"content":"* `changepass ilikesports Securep@ssword1 Securep@ssword1`","isFullCredit":false},{"lineNumber":839,"author":{"gitId":"-"},"content":"// end::changePass2.0[]","isFullCredit":false},{"lineNumber":840,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":841,"author":{"gitId":"lohtianwei"},"content":"// tag::showBest2.0[]","isFullCredit":false},{"lineNumber":842,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Showing Best XI players: `showBest` `[Coming in v2.0]`","isFullCredit":false},{"lineNumber":843,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":844,"author":{"gitId":"-"},"content":"If you went to see your current best 11 players in your team based on their respective stats, this command","isFullCredit":false},{"lineNumber":845,"author":{"gitId":"-"},"content":"is for you.","isFullCredit":false},{"lineNumber":846,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":847,"author":{"gitId":"lohtianwei"},"content":"Format: `showBest` +","isFullCredit":false},{"lineNumber":848,"author":{"gitId":"lohtianwei"},"content":"Alias: `sb`","isFullCredit":false},{"lineNumber":849,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":850,"author":{"gitId":"lohtianwei"},"content":"[IMPORTANT]","isFullCredit":false},{"lineNumber":851,"author":{"gitId":"lohtianwei"},"content":".*What to expect*","isFullCredit":false},{"lineNumber":852,"author":{"gitId":"lohtianwei"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":853,"author":{"gitId":"lohtianwei"},"content":"A lineup of the best 11 players would be displayed. It would consist of 1 Goalkeeper,","isFullCredit":false},{"lineNumber":854,"author":{"gitId":"lohtianwei"},"content":"4 Defenders, 4 Midfielders and 2 Strikers.","isFullCredit":false},{"lineNumber":855,"author":{"gitId":"lohtianwei"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":856,"author":{"gitId":"lohtianwei"},"content":"// end::showBest2.0[]","isFullCredit":false},{"lineNumber":857,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":858,"author":{"gitId":"-"},"content":"// tag::team2.0[]","isFullCredit":false},{"lineNumber":859,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Setting an upcoming match with an opposing team: `setmatch` `[Coming in v2.0]`","isFullCredit":false},{"lineNumber":860,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":861,"author":{"gitId":"-"},"content":"With this command, it gives you a convenient way to keep track of the upcoming match of a team.","isFullCredit":false},{"lineNumber":862,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":863,"author":{"gitId":"-"},"content":"Format: `setmatch TEAM_NAME OPPONENT_TEAM_NAME DATE` +","isFullCredit":false},{"lineNumber":864,"author":{"gitId":"-"},"content":"Alias: `sm`","isFullCredit":false},{"lineNumber":865,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":866,"author":{"gitId":"-"},"content":"[NOTE]","isFullCredit":false},{"lineNumber":867,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":868,"author":{"gitId":"-"},"content":"* Date format to be entered is in `DD/MM/YYYY`. +","isFullCredit":false},{"lineNumber":869,"author":{"gitId":"-"},"content":"* Opponent team does not need to exist in MTM.","isFullCredit":false},{"lineNumber":870,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":871,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":872,"author":{"gitId":"-"},"content":"[IMPORTANT]","isFullCredit":false},{"lineNumber":873,"author":{"gitId":"-"},"content":".*What to expect*","isFullCredit":false},{"lineNumber":874,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":875,"author":{"gitId":"-"},"content":"The upcoming match of the team will be captured and displayed to you.","isFullCredit":false},{"lineNumber":876,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":877,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":878,"author":{"gitId":"-"},"content":"Here are a few valid examples on how you can use the `create` command:","isFullCredit":false},{"lineNumber":879,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":880,"author":{"gitId":"-"},"content":"* `view Arsenal`","isFullCredit":false},{"lineNumber":881,"author":{"gitId":"-"},"content":"* `setmatch Arsenal Liverpool 14/03/2018`","isFullCredit":false},{"lineNumber":882,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":883,"author":{"gitId":"-"},"content":"Display the list of players in team \"Arsenal\" and set an upcoming match for Arsenal with Liverpool on 14/03/2018.","isFullCredit":false},{"lineNumber":884,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":885,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Viewing the team\u0027s next upcoming match: `nextmatch` `[Coming in v2.0]`","isFullCredit":false},{"lineNumber":886,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":887,"author":{"gitId":"codeeong"},"content":"You can easily determine the up and coming match with the team so that you never miss an important date.","isFullCredit":false},{"lineNumber":888,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":889,"author":{"gitId":"-"},"content":"Format: `nextmatch TEAM_NAME` +","isFullCredit":false},{"lineNumber":890,"author":{"gitId":"-"},"content":"Alias: `nm`","isFullCredit":false},{"lineNumber":891,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":892,"author":{"gitId":"-"},"content":"[IMPORTANT]","isFullCredit":false},{"lineNumber":893,"author":{"gitId":"-"},"content":".*What to expect*","isFullCredit":false},{"lineNumber":894,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":895,"author":{"gitId":"-"},"content":"Displays the date and opponent for the upcoming match of the team specified.","isFullCredit":false},{"lineNumber":896,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":897,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":898,"author":{"gitId":"codeeong"},"content":"Here are a few valid examples on how you can use the `nextmatch` command:","isFullCredit":false},{"lineNumber":899,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":900,"author":{"gitId":"-"},"content":"* `view Arsenal`","isFullCredit":false},{"lineNumber":901,"author":{"gitId":"-"},"content":"* `nextmatch Arsenal`","isFullCredit":false},{"lineNumber":902,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":903,"author":{"gitId":"-"},"content":"Displays the list of players in team \"Arsenal\" and view the next upcoming match for \"Arsenal\".","isFullCredit":false},{"lineNumber":904,"author":{"gitId":"-"},"content":"// end::team2.0[]","isFullCredit":false},{"lineNumber":905,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":906,"author":{"gitId":"codeeong"},"content":"// tag::showlineup[]","isFullCredit":false},{"lineNumber":907,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Displaying lineup for next match: `showLineup` `[Coming in v2.0]`","isFullCredit":false},{"lineNumber":908,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":909,"author":{"gitId":"codeeong"},"content":"You can view the lineup for the current best 11 players.","isFullCredit":false},{"lineNumber":910,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":911,"author":{"gitId":"-"},"content":"Format: `showLineup TEAM_NAME` +","isFullCredit":false},{"lineNumber":912,"author":{"gitId":"codeeong"},"content":"Alias: `sl`","isFullCredit":false},{"lineNumber":913,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":914,"author":{"gitId":"codeeong"},"content":"[IMPORTANT]","isFullCredit":false},{"lineNumber":915,"author":{"gitId":"codeeong"},"content":".*What to expect*","isFullCredit":false},{"lineNumber":916,"author":{"gitId":"codeeong"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":917,"author":{"gitId":"codeeong"},"content":"The panel on the right will show the avatars of the 11 players that will be playing for the next match.","isFullCredit":false},{"lineNumber":918,"author":{"gitId":"codeeong"},"content":"\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":919,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":920,"author":{"gitId":"codeeong"},"content":"Here is an valid example on how you can use the `showLineup` command:","isFullCredit":false},{"lineNumber":921,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":922,"author":{"gitId":"-"},"content":"* `showLineup Arsenal`","isFullCredit":false},{"lineNumber":923,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":924,"author":{"gitId":"codeeong"},"content":"Displays the 11 main players that will be playing for the next match.","isFullCredit":false},{"lineNumber":925,"author":{"gitId":"codeeong"},"content":"// end::showlineup[]","isFullCredit":false},{"lineNumber":926,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":927,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Scheduling trainings for team `schedule` `[Coming in v2.0]`","isFullCredit":false},{"lineNumber":928,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":929,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Sending reminder emails to players: `send` `[Coming in v2.0]`","isFullCredit":false},{"lineNumber":930,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":931,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Giving feedback to developers: `feedback` `[Coming in v2.0]`","isFullCredit":false},{"lineNumber":932,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":933,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d\u003d Giving demerit to players based on performance: `demerit` `[Coming in v2.0]`","isFullCredit":false},{"lineNumber":934,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":935,"author":{"gitId":"-"},"content":"\u003d\u003d FAQ","isFullCredit":false},{"lineNumber":936,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":937,"author":{"gitId":"-"},"content":"*Q*: How do I transfer my data to another Computer? +","isFullCredit":false},{"lineNumber":938,"author":{"gitId":"-"},"content":"*A*: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous MTM folder.","isFullCredit":false},{"lineNumber":939,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":940,"author":{"gitId":"-"},"content":"// tag::commandsummary[]","isFullCredit":false},{"lineNumber":941,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":942,"author":{"gitId":"lithiumlkid"},"content":"\u003d\u003d Glossary","isFullCredit":false},{"lineNumber":943,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":944,"author":{"gitId":"-"},"content":"[[Index]]`INDEX` - The `INDEX` refers to the index number shown in the last player listing. The `INDEX` must be a positive integer 1, 2, 3, …","isFullCredit":false},{"lineNumber":945,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":946,"author":{"gitId":"-"},"content":"\u003d\u003d Command Summary","isFullCredit":false},{"lineNumber":947,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":948,"author":{"gitId":"-"},"content":"Just a quick reference sheet for all your needs. Never forget how to use MTM ever again.","isFullCredit":false},{"lineNumber":949,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":950,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Basic Commands and Features","isFullCredit":false},{"lineNumber":951,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":952,"author":{"gitId":"-"},"content":"[width\u003d\"100%\", cols\u003d\"^1s, ^1s, \u003c2m, \u003c2m\", options\u003d\"header\"]","isFullCredit":false},{"lineNumber":953,"author":{"gitId":"-"},"content":"|\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":954,"author":{"gitId":"-"},"content":"^|Command","isFullCredit":false},{"lineNumber":955,"author":{"gitId":"-"},"content":"^|Alias","isFullCredit":false},{"lineNumber":956,"author":{"gitId":"-"},"content":"^|Parameter","isFullCredit":false},{"lineNumber":957,"author":{"gitId":"-"},"content":"^|Example","isFullCredit":false},{"lineNumber":958,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":959,"author":{"gitId":"-"},"content":"|\u003c\u003cautocomplete, `Autocomplete`\u003e\u003e","isFullCredit":false},{"lineNumber":960,"author":{"gitId":"-"},"content":"|kbd:[tab]","isFullCredit":false},{"lineNumber":961,"author":{"gitId":"-"},"content":"|kbd:[tab] kbd:[space] kbd:[\u0026uarr;] kbd:[\u0026darr;]","isFullCredit":false},{"lineNumber":962,"author":{"gitId":"-"},"content":"d|Fills in your command for you","isFullCredit":false},{"lineNumber":963,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":964,"author":{"gitId":"-"},"content":"|\u003c\u003chelp, `help`\u003e\u003e","isFullCredit":false},{"lineNumber":965,"author":{"gitId":"-"},"content":"|kbd:[F1]","isFullCredit":false},{"lineNumber":966,"author":{"gitId":"-"},"content":"|help","isFullCredit":false},{"lineNumber":967,"author":{"gitId":"-"},"content":"d|Shows the user guide","isFullCredit":false},{"lineNumber":968,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":969,"author":{"gitId":"-"},"content":"|\u003c\u003chistory, `history`\u003e\u003e","isFullCredit":false},{"lineNumber":970,"author":{"gitId":"-"},"content":"|`h`","isFullCredit":false},{"lineNumber":971,"author":{"gitId":"-"},"content":"|history","isFullCredit":false},{"lineNumber":972,"author":{"gitId":"-"},"content":"d|Displays the list of commands entered previously","isFullCredit":false},{"lineNumber":973,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":974,"author":{"gitId":"-"},"content":"|\u003c\u003cundo, `undo`\u003e\u003e","isFullCredit":false},{"lineNumber":975,"author":{"gitId":"-"},"content":"|`u`","isFullCredit":false},{"lineNumber":976,"author":{"gitId":"-"},"content":"|undo","isFullCredit":false},{"lineNumber":977,"author":{"gitId":"-"},"content":"d|Undo the previous command","isFullCredit":false},{"lineNumber":978,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":979,"author":{"gitId":"-"},"content":"|\u003c\u003credo, `redo`\u003e\u003e","isFullCredit":false},{"lineNumber":980,"author":{"gitId":"-"},"content":"|`r`","isFullCredit":false},{"lineNumber":981,"author":{"gitId":"-"},"content":"|redo","isFullCredit":false},{"lineNumber":982,"author":{"gitId":"-"},"content":"d|Redo the previous command","isFullCredit":false},{"lineNumber":983,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":984,"author":{"gitId":"-"},"content":"|\u003c\u003ctoggleprivacy, `toggleprivacy`\u003e\u003e","isFullCredit":false},{"lineNumber":985,"author":{"gitId":"-"},"content":"|`tp`","isFullCredit":false},{"lineNumber":986,"author":{"gitId":"-"},"content":"|toggleprivacy INDEX [p/] [e/] [r/] [ra/] [a/]","isFullCredit":false},{"lineNumber":987,"author":{"gitId":"-"},"content":"|toggleprivacy 2 a/","isFullCredit":false},{"lineNumber":988,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":989,"author":{"gitId":"-"},"content":"|\u003c\u003ckey, `key`\u003e\u003e","isFullCredit":false},{"lineNumber":990,"author":{"gitId":"-"},"content":"|`k`","isFullCredit":false},{"lineNumber":991,"author":{"gitId":"-"},"content":"|key PASSWORD","isFullCredit":false},{"lineNumber":992,"author":{"gitId":"-"},"content":"|key ilikesports","isFullCredit":false},{"lineNumber":993,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":994,"author":{"gitId":"-"},"content":"|\u003c\u003cclear, `clear`\u003e\u003e","isFullCredit":false},{"lineNumber":995,"author":{"gitId":"-"},"content":"|`c`","isFullCredit":false},{"lineNumber":996,"author":{"gitId":"-"},"content":"|clear","isFullCredit":false},{"lineNumber":997,"author":{"gitId":"-"},"content":"d|Removes all information in the application","isFullCredit":false},{"lineNumber":998,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":999,"author":{"gitId":"-"},"content":"|\u003c\u003cexit, `exit`\u003e\u003e","isFullCredit":false},{"lineNumber":1000,"author":{"gitId":"-"},"content":"|`NONE`","isFullCredit":false},{"lineNumber":1001,"author":{"gitId":"-"},"content":"|exit","isFullCredit":false},{"lineNumber":1002,"author":{"gitId":"-"},"content":"d|Exits the application","isFullCredit":false},{"lineNumber":1003,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1004,"author":{"gitId":"-"},"content":"|\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":1005,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1006,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Player-Related Commands","isFullCredit":false},{"lineNumber":1007,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1008,"author":{"gitId":"-"},"content":"[width\u003d\"100%\", cols\u003d\"^1s, ^1s, \u003c2m, \u003c2m\", options\u003d\"header\"]","isFullCredit":false},{"lineNumber":1009,"author":{"gitId":"-"},"content":"|\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":1010,"author":{"gitId":"-"},"content":"^|Command","isFullCredit":false},{"lineNumber":1011,"author":{"gitId":"-"},"content":"^|Alias","isFullCredit":false},{"lineNumber":1012,"author":{"gitId":"-"},"content":"^|Parameter","isFullCredit":false},{"lineNumber":1013,"author":{"gitId":"-"},"content":"^|Example","isFullCredit":false},{"lineNumber":1014,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1015,"author":{"gitId":"-"},"content":"|\u003c\u003cadd, `add`\u003e\u003e","isFullCredit":false},{"lineNumber":1016,"author":{"gitId":"-"},"content":"|`a`","isFullCredit":false},{"lineNumber":1017,"author":{"gitId":"lithiumlkid"},"content":"|add n/NAME e/EMAIL [tm/TEAM] [a/ADDRESS] [p/PHONE_NUMBER] [j/JERSEY_NUMBER] [ra/RATING] [po/POSITION] [av/AVATAR] [t/TAG]...","isFullCredit":false},{"lineNumber":1018,"author":{"gitId":"lithiumlkid"},"content":"|add n/Ospina e/Ospina@arsenal.com tm/Arsenal a/70 Jurong Central Circle p/90722998 j/1 ra/2 po/4 av/Capture.png t/redCard","isFullCredit":false},{"lineNumber":1019,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1020,"author":{"gitId":"-"},"content":"|\u003c\u003cedit, `edit`\u003e\u003e","isFullCredit":false},{"lineNumber":1021,"author":{"gitId":"-"},"content":"|`e`","isFullCredit":false},{"lineNumber":1022,"author":{"gitId":"-"},"content":"|edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [j/JERSEY_NUMBER] [ra/RATING] [po/POSITION] [t/TAG]...","isFullCredit":false},{"lineNumber":1023,"author":{"gitId":"-"},"content":"|edit 2 n/James Lee e/jameslee@example.com","isFullCredit":false},{"lineNumber":1024,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1025,"author":{"gitId":"-"},"content":"|\u003c\u003cdelete, `delete`\u003e\u003e","isFullCredit":false},{"lineNumber":1026,"author":{"gitId":"-"},"content":"|`d`","isFullCredit":false},{"lineNumber":1027,"author":{"gitId":"-"},"content":"|delete INDEX","isFullCredit":false},{"lineNumber":1028,"author":{"gitId":"-"},"content":"|delete 3","isFullCredit":false},{"lineNumber":1029,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1030,"author":{"gitId":"-"},"content":"|\u003c\u003cremark, `remark`\u003e\u003e","isFullCredit":false},{"lineNumber":1031,"author":{"gitId":"-"},"content":"|`rm`","isFullCredit":false},{"lineNumber":1032,"author":{"gitId":"-"},"content":"|remark INDEX [r/[REMARK]]","isFullCredit":false},{"lineNumber":1033,"author":{"gitId":"-"},"content":"|remark 4 r/Gotta go faster","isFullCredit":false},{"lineNumber":1034,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1035,"author":{"gitId":"-"},"content":"|\u003c\u003clist, `list`\u003e\u003e","isFullCredit":false},{"lineNumber":1036,"author":{"gitId":"-"},"content":"|`l`","isFullCredit":false},{"lineNumber":1037,"author":{"gitId":"-"},"content":"|list","isFullCredit":false},{"lineNumber":1038,"author":{"gitId":"-"},"content":"d|List all the players","isFullCredit":false},{"lineNumber":1039,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1040,"author":{"gitId":"-"},"content":"|\u003c\u003csort, `sort`\u003e\u003e","isFullCredit":false},{"lineNumber":1041,"author":{"gitId":"-"},"content":"|`so`","isFullCredit":false},{"lineNumber":1042,"author":{"gitId":"-"},"content":"|sort FIELD ORDER","isFullCredit":false},{"lineNumber":1043,"author":{"gitId":"-"},"content":"|sort name asc","isFullCredit":false},{"lineNumber":1044,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1045,"author":{"gitId":"-"},"content":"|\u003c\u003cfind, `find`\u003e\u003e","isFullCredit":false},{"lineNumber":1046,"author":{"gitId":"-"},"content":"|`f`","isFullCredit":false},{"lineNumber":1047,"author":{"gitId":"-"},"content":"|find KEYWORD [KEYWORD]...","isFullCredit":false},{"lineNumber":1048,"author":{"gitId":"-"},"content":"|find James Jake","isFullCredit":false},{"lineNumber":1049,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1050,"author":{"gitId":"-"},"content":"|\u003c\u003cselect, `select`\u003e\u003e","isFullCredit":false},{"lineNumber":1051,"author":{"gitId":"-"},"content":"|`s`","isFullCredit":false},{"lineNumber":1052,"author":{"gitId":"-"},"content":"|select INDEX","isFullCredit":false},{"lineNumber":1053,"author":{"gitId":"-"},"content":"|select 2","isFullCredit":false},{"lineNumber":1054,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1055,"author":{"gitId":"-"},"content":"|\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":1056,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1057,"author":{"gitId":"-"},"content":"\u003d\u003d\u003d Team-Related Commands","isFullCredit":false},{"lineNumber":1058,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1059,"author":{"gitId":"-"},"content":"[width\u003d\"100%\", cols\u003d\"^1s, ^1s, \u003c2m, \u003c2m\", options\u003d\"header\"]","isFullCredit":false},{"lineNumber":1060,"author":{"gitId":"-"},"content":"|\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":1061,"author":{"gitId":"-"},"content":"^|Command","isFullCredit":false},{"lineNumber":1062,"author":{"gitId":"-"},"content":"^|Alias","isFullCredit":false},{"lineNumber":1063,"author":{"gitId":"-"},"content":"^|Parameter","isFullCredit":false},{"lineNumber":1064,"author":{"gitId":"-"},"content":"^|Example","isFullCredit":false},{"lineNumber":1065,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1066,"author":{"gitId":"-"},"content":"|\u003c\u003ccreate, `create`\u003e\u003e","isFullCredit":false},{"lineNumber":1067,"author":{"gitId":"-"},"content":"|`ct`","isFullCredit":false},{"lineNumber":1068,"author":{"gitId":"-"},"content":"|create TEAM_NAME","isFullCredit":false},{"lineNumber":1069,"author":{"gitId":"-"},"content":"|create Arsenal","isFullCredit":false},{"lineNumber":1070,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1071,"author":{"gitId":"-"},"content":"|\u003c\u003cview, `view`\u003e\u003e","isFullCredit":false},{"lineNumber":1072,"author":{"gitId":"-"},"content":"|`vt`","isFullCredit":false},{"lineNumber":1073,"author":{"gitId":"-"},"content":"|view TEAM_NAME","isFullCredit":false},{"lineNumber":1074,"author":{"gitId":"-"},"content":"|view Liverpool","isFullCredit":false},{"lineNumber":1075,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1076,"author":{"gitId":"-"},"content":"|\u003c\u003cassign, `assign`\u003e\u003e","isFullCredit":false},{"lineNumber":1077,"author":{"gitId":"-"},"content":"|`at`","isFullCredit":false},{"lineNumber":1078,"author":{"gitId":"-"},"content":"|assign [TEAM_NAME] i/INDEX [INDEX]...","isFullCredit":false},{"lineNumber":1079,"author":{"gitId":"-"},"content":"|assign Barcelona i/1 2 3","isFullCredit":false},{"lineNumber":1080,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1081,"author":{"gitId":"-"},"content":"|\u003c\u003crename, `rename`\u003e\u003e","isFullCredit":false},{"lineNumber":1082,"author":{"gitId":"-"},"content":"|`rnt`","isFullCredit":false},{"lineNumber":1083,"author":{"gitId":"-"},"content":"|rename TEAM_NAME tm/RENAME_TEAM_NAME","isFullCredit":false},{"lineNumber":1084,"author":{"gitId":"-"},"content":"|rename Arsenal tm/Neo Arsenal","isFullCredit":false},{"lineNumber":1085,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1086,"author":{"gitId":"-"},"content":"|\u003c\u003cremove, `remove`\u003e\u003e","isFullCredit":false},{"lineNumber":1087,"author":{"gitId":"-"},"content":"|`rt`","isFullCredit":false},{"lineNumber":1088,"author":{"gitId":"-"},"content":"|remove TEAM_NAME","isFullCredit":false},{"lineNumber":1089,"author":{"gitId":"-"},"content":"|remove Real Madrid","isFullCredit":false},{"lineNumber":1090,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1091,"author":{"gitId":"-"},"content":"|\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":1092,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1093,"author":{"gitId":"lithiumlkid"},"content":"\u003d\u003d\u003d Appearance Commands","isFullCredit":false},{"lineNumber":1094,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1095,"author":{"gitId":"-"},"content":"[width\u003d\"100%\", cols\u003d\"^1s, ^1s, \u003c2m, \u003c2m\", options\u003d\"header\"]","isFullCredit":false},{"lineNumber":1096,"author":{"gitId":"-"},"content":"|\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":1097,"author":{"gitId":"-"},"content":"^|Command","isFullCredit":false},{"lineNumber":1098,"author":{"gitId":"-"},"content":"^|Alias","isFullCredit":false},{"lineNumber":1099,"author":{"gitId":"-"},"content":"^|Parameter","isFullCredit":false},{"lineNumber":1100,"author":{"gitId":"-"},"content":"^|Example","isFullCredit":false},{"lineNumber":1101,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1102,"author":{"gitId":"-"},"content":"|\u003c\u003csetTagColour, `setTagColour`\u003e\u003e","isFullCredit":false},{"lineNumber":1103,"author":{"gitId":"-"},"content":"|`stc`","isFullCredit":false},{"lineNumber":1104,"author":{"gitId":"-"},"content":"|setTagColour t/TAG tc/COLOUR","isFullCredit":false},{"lineNumber":1105,"author":{"gitId":"-"},"content":"|setTagColour t/friends tc/yellow","isFullCredit":false},{"lineNumber":1106,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1107,"author":{"gitId":"-"},"content":"|\u003c\u003cchangeTheme, `changeTheme`\u003e\u003e","isFullCredit":false},{"lineNumber":1108,"author":{"gitId":"-"},"content":"|`cte`","isFullCredit":false},{"lineNumber":1109,"author":{"gitId":"-"},"content":"|changeTheme THEME","isFullCredit":false},{"lineNumber":1110,"author":{"gitId":"-"},"content":"|changeTheme Dark","isFullCredit":false},{"lineNumber":1111,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":1112,"author":{"gitId":"-"},"content":"|\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":1113,"author":{"gitId":"-"},"content":"// end::commandsummary[]","isFullCredit":false}],"authorContributionMap":{"lithiumlkid":106,"lohtianwei":26,"codeeong":64,"-":917}},{"path":"docs/team/ahmadsyafiq.adoc","fileType":"adoc","lines":[{"lineNumber":1,"author":{"gitId":"lithiumlkid"},"content":"\u003d Ahmad Syafiq - Project Portfolio","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lithiumlkid"},"content":":imagesDir: ../images","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lithiumlkid"},"content":":stylesDir: ../stylesheets","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lithiumlkid"},"content":"\u003d\u003d PROJECT: My Team Manager","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lithiumlkid"},"content":"---","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lithiumlkid"},"content":"\u003d\u003d Overview","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lithiumlkid"},"content":"My Team Manager is a desktop address book application developed as part of a Software Engineering module requirement. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 6 kLoC.","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lithiumlkid"},"content":"\u003d\u003d Summary of contributions","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lithiumlkid"},"content":"* *Major enhancement*: added *replaced person object with player object*","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lithiumlkid"},"content":"** What it does: allows the user to add and edit players that contain more attributes/information such as jersey, position, rating and avatar","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lithiumlkid"},"content":"** Justification: This feature improves the product significantly because a user can fill the address book with more important information which can be used for other utility functions such as sort.","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lithiumlkid"},"content":"It is accompanied with improved GUI to increase usability. Eg. the user can see player\u0027s avatar for better identification.","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lithiumlkid"},"content":"** Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lithiumlkid"},"content":"* *Minor enhancement*: added a *tab - autocomplete function*","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lithiumlkid"},"content":"** What it does: allows the user to enter command lines more quickly by helping them complete commands by pressing the tab key. It also allows them to view suggested command and command parameters in case","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lithiumlkid"},"content":"the forget.","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lithiumlkid"},"content":"** Credits: To make the search optimal, I used Tries as suggested on geek-for-geeks.","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"* *Code contributed*: [https://github.com/CS2103JAN2018-F14-B1/main/blob/master/collated/functional/lithiumlkid.md[Functional code]] [https://github.com/CS2103JAN2018-F14-B1/main/blob/master/collated/test/lithiumlkid.md[Test code]]","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lithiumlkid"},"content":"* *Other contributions*:","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lithiumlkid"},"content":"** Project management:","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lithiumlkid"},"content":"*** Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lithiumlkid"},"content":"** Enhancements to existing features:","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lithiumlkid"},"content":"*** Enhanced the help function to only allow one help window at a time. (Pull request https://github.com/CS2103JAN2018-F14-B1/main/pull/169[#169])","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lithiumlkid"},"content":"** Documentation:","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lithiumlkid"},"content":"*** Did cosmetic tweaks to existing contents of the User Guide: https://github.com/CS2103JAN2018-F14-B1/main/pull/53[#53]","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lithiumlkid"},"content":"** Community:","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lithiumlkid"},"content":"*** PRs reviewed (with non-trivial review comments): https://github.com/CS2103JAN2018-F14-B1/main/pull/172[#172]","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lithiumlkid"},"content":"*** Contributed to forum discussions (examples:  https://github.com/nus-cs2103-AY1718S2/forum/issues/39[39], https://github.com/nus-cs2103-AY1718S2/forum/issues/47[#47])","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lithiumlkid"},"content":"*** Reported bugs and suggestions for other teams in the class (example:  https://github.com/CS2103JAN2018-F14-B3/main/issues/228[#228])","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lithiumlkid"},"content":"** Tools:","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lithiumlkid"},"content":"*** Integrated a new Github plugin (CircleCI) to the team repo","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lithiumlkid"},"content":"\u003d\u003d Contributions to the User Guide","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lithiumlkid"},"content":"|\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lithiumlkid"},"content":"|_Given below are sections I contributed to the User Guide. They showcase my ability to write documentation targeting end-users._","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lithiumlkid"},"content":"|\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lithiumlkid"},"content":"include::../UserGuide.adoc[tag\u003daddplayer]","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lithiumlkid"},"content":"include::../UserGuide.adoc[tag\u003dautocomplete]","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lithiumlkid"},"content":"\u003d\u003d Contributions to the Developer Guide","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lithiumlkid"},"content":"|\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lithiumlkid"},"content":"|_Given below are sections I contributed to the Developer Guide. They showcase my ability to write technical documentation and the technical depth of my contributions to the project._","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lithiumlkid"},"content":"|\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lithiumlkid"},"content":"include::../DeveloperGuide.adoc[tag\u003dplayer]","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lithiumlkid"},"content":"include::../DeveloperGuide.adoc[tag\u003dautocomplete]","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lithiumlkid"},"content":"","isFullCredit":false}],"authorContributionMap":{"lithiumlkid":60,"-":1}},{"path":"docs/team/codeeong.adoc","fileType":"adoc","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"\u003d Codee Ong - Project Portfolio","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":":imagesDir: ../images","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":":stylesDir: ../stylesheets","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"\u003d\u003d PROJECT: My Team Manager (MTM)","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"---","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"\u003d\u003d Overview","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"My Team Manager (MTM) is a desktop application for *football team managers* to organise the information of players they are in charge of.","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"The primary usage of this application is to add and assign players to teams, and then edit and remove information related to","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"the players as and when it is required. MTM is value added with usability features that help the team manager manage his/her","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"teams and players efficiently.","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"The user interacts with MTM using a *Command Line Interface*, and it has a GUI created with JavaFX.","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"\u003d\u003d Summary of contributions","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"* *Major enhancement*: Revamped the original user interface to one that suits the usage of an application for *team managers*.","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"** What it does: The change in  UI allows the user to *keep track* of which team he/she is looking at, to *view his/her players\u0027 details*,","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"and even perform some *customisation* of the application theme.","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"** Justification: The overhaul of the UI is absolutely necessary to ensure the *best user experience* for users of My Team Manager. Previously,","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codeeong"},"content":"the existing UI components were neither sufficient nor suitable for management of sports teams.","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"codeeong"},"content":"** Highlights: Addition of the *team display bar*, the *player details pane* when a player is selected, addition of *MTM logo*,","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codeeong"},"content":"and *changeTheme* command.","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"codeeong"},"content":"* *Minor enhancement*: addition of a *setTagCommand* that allows the user to change existing tags to a colour of their choice.","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"codeeong"},"content":"* *Code contributed*: [https://github.com/CS2103JAN2018-F14-B1/main/blob/master/collated/functional/Codee.md[Functional code]] [https://github.com/CS2103JAN2018-F14-B1/main/blob/master/collated/test/Codee.md[Test code]]","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"codeeong"},"content":"* *Other contributions*:","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"codeeong"},"content":"** Project management:","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"codeeong"},"content":"*** Generated release files (.jar) in `v1.4` and `v1.5rc` (2 releases), and contributed release descriptions on GitHub.","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codeeong"},"content":"** Enhancements to existing features:","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"codeeong"},"content":"*** changed the original GUI colour scheme [https://github.com/CS2103JAN2018-F14-B1/main/pull/89[PR #89]]","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"codeeong"},"content":"** Documentation:","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"codeeong"},"content":"*** changed the project name in all the relevant files so that it will be \"My Team Manager\" and not \"Address Book App\", including the data files. [https://github.com/CS2103JAN2018-F14-B1/main/pull/120[PR #120]]","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"codeeong"},"content":"*** Constantly updated the README and UserGuide\u0027s application preview image. [https://github.com/CS2103JAN2018-F14-B1/main/pull/99[PR #99]][https://github.com/CS2103JAN2018-F14-B1/main/pull/160[PR #160]]","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"codeeong"},"content":"** Community:","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"codeeong"},"content":"*** PRs Reviewed (with non trivial comments) [https://github.com/CS2103JAN2018-F14-B1/main/pull/95[PR #95]][https://github.com/CS2103JAN2018-F14-B1/main/pull/169[PR #169]][https://github.com/CS2103JAN2018-F14-B1/main/pull/175[PR #175]]","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"codeeong"},"content":"\u003d\u003d Contributions to the User Guide","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"codeeong"},"content":"|\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"codeeong"},"content":"|_Given below are sections I contributed to the User Guide. They showcase my ability to write documentation targeting the users of MTM._","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"codeeong"},"content":"|\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"codeeong"},"content":"include::../UserGuide.adoc[tag\u003dchangeTheme]","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"codeeong"},"content":"include::../UserGuide.adoc[tag\u003dsetTagColour]","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"codeeong"},"content":"include::../UserGuide.adoc[tag\u003dshowlineup]","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"codeeong"},"content":"\u003d\u003d Contributions to the Developer Guide","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"codeeong"},"content":"|\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"codeeong"},"content":"|_Given below are sections I contributed to the Developer Guide. They showcase my ability to write technical documentation and the technical depth of my contributions to the project._","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"codeeong"},"content":"|\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"codeeong"},"content":"include::../DeveloperGuide.adoc[tag\u003dsettagcolour]","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"codeeong"},"content":"include::../DeveloperGuide.adoc[tag\u003dteamDisplay]","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"codeeong"},"content":"include::../DeveloperGuide.adoc[tag\u003dPlayerDetails]","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"codeeong"},"content":"include::../DeveloperGuide.adoc[tag\u003dchangeThemeCommand]","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false}],"authorContributionMap":{"codeeong":72}},{"path":"docs/team/lohtianwei.adoc","fileType":"adoc","lines":[{"lineNumber":1,"author":{"gitId":"lohtianwei"},"content":"\u003d Loh Tian Wei - Project Portfolio","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lohtianwei"},"content":":imagesDir: ../images","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lohtianwei"},"content":":stylesDir: ../stylesheets","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lohtianwei"},"content":"\u003d\u003d PROJECT: My Team Manager (MTM)","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lohtianwei"},"content":"---","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lohtianwei"},"content":"\u003d\u003d Overview","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lohtianwei"},"content":"My Team Manager (MTM) is a dekstop address book application for *football team managers*.","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lohtianwei"},"content":"It can also be personalised to be used for other sports team management too such as basketball.","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lohtianwei"},"content":"With the features it provides, management of your players\u0027 contact details and team information is made easy. While","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lohtianwei"},"content":"interactions between user and application is mainly by a *Command Line Interface (CLI)*, it features a JavaFx GUI display.","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lohtianwei"},"content":"\u003d\u003d Summary of contributions","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lohtianwei"},"content":"* *Major enhancement*: Added *security and privacy features*","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lohtianwei"},"content":"** *What it does*: Ensures the information stored in MTM is *secured and kept private* when needed","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lohtianwei"},"content":"** *Justification*: This feature is crucial for protecting the *confidentiality and integrity* of the details stored in MTM.","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lohtianwei"},"content":"It prevents unauthorised tampering of information while also maintaining confidentiality.","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lohtianwei"},"content":"** *Highlights*: Addition of a *locking mechanism* to limit functionality of MTM and changing *privacy of fields* that would maintain","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lohtianwei"},"content":"confidentiality of certain information","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lohtianwei"},"content":"* *Minor enhancement*:","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lohtianwei"},"content":"** Added a sort function that allows the list to be sorted by fields for quick viewing of relevant information","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"* *Code contributed*: [https://github.com/CS2103JAN2018-F14-B1/main/blob/master/collated/functional/lohtianwei.md[Functional code]] [https://github.com/CS2103JAN2018-F14-B1/main/blob/master/collated/test/lohtianwei.md[Test code]]","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lohtianwei"},"content":"* *Other contributions*:","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lohtianwei"},"content":"** Project management:","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lohtianwei"},"content":"*** Documented issues of project using GitHub\u0027s Issue Tracker and address the issues accordingly.","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lohtianwei"},"content":"** Enhancements to existing features:","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lohtianwei"},"content":"*** Changes are mentioned in \u003c\u003cMinor Enhancement, Minor enhancement\u003e\u003e.","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lohtianwei"},"content":"** Documentation:","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lohtianwei"},"content":"** Community:","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lohtianwei"},"content":"*** PRs reviewed (with non-trivial review comments) [https://github.com/CS2103JAN2018-F14-B1/main/pull/169[PR#169]]","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lohtianwei"},"content":"*** Reported bugs and suggestions for other teams in the class (https://github.com/CS2103JAN2018-W09-B2/main/issues/198[1],","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lohtianwei"},"content":"https://github.com/CS2103JAN2018-W09-B2/main/issues/194[2],","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lohtianwei"},"content":"https://github.com/CS2103JAN2018-W09-B2/main/issues/182[3],","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lohtianwei"},"content":"https://github.com/CS2103JAN2018-W09-B2/main/issues/174[4])","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lohtianwei"},"content":"\u003d\u003d Contributions to the User Guide","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lohtianwei"},"content":"|\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lohtianwei"},"content":"|_Given below are sections I contributed to the User Guide. They showcase my ability to write documentation targeting end-users._","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lohtianwei"},"content":"|\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lohtianwei"},"content":"include::../UserGuide.adoc[tag\u003dtogglePrivacy]","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lohtianwei"},"content":"include::../UserGuide.adoc[tag\u003dkey]","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lohtianwei"},"content":"\u003d\u003d Contributions to the Developer Guide","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lohtianwei"},"content":"|\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lohtianwei"},"content":"|_Given below are sections I contributed to the Developer Guide. They showcase my ability to write technical documentation and the technical depth of my contributions to the project._","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lohtianwei"},"content":"|\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lohtianwei"},"content":"include::../DeveloperGuide.adoc[tag\u003dsort]","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lohtianwei"},"content":"include::../DeveloperGuide.adoc[tag\u003dkey]","isFullCredit":false}],"authorContributionMap":{"lohtianwei":68,"-":1}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Map;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.google.common.eventbus.Subscribe;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.application.Application;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.EventsCenter;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.events.ui.ExitAppRequestEvent;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.XmlAddressBookStorage;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":" * The main entry point to the application.","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"codeeong"},"content":"    public static final Version VERSION \u003d new Version(1, 1, 0, true);","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    protected UserPrefs userPrefs;","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        super.init();","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        config \u003d initConfig(getApplicationParameter(\"config\"));","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        userPrefs \u003d initPrefs(userPrefsStorage);","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new XmlAddressBookStorage(userPrefs.getAddressBookFilePath());","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        initLogging(config);","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model);","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic, config, userPrefs);","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        initEventsCenter();","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private String getApplicationParameter(String parameterName) {","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e applicationParameters \u003d getParameters().getNamed();","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return applicationParameters.get(parameterName);","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, UserPrefs userPrefs) {","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    protected Config initConfig(String configFilePath) {","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Config initializedConfig;","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String configFilePathUsed;","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return initializedConfig;","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * reading from the file.","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        String prefsFilePath \u003d storage.getUserPrefsFilePath();","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        return initializedPrefs;","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"    private void initEventsCenter() {","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        EventsCenter.getInstance().registerHandler(this);","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void stop() {","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        ui.stop();","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(userPrefs);","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        Platform.exit();","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        System.exit(0);","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Subscribe","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void handleExitAppRequestEvent(ExitAppRequestEvent event) {","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        this.stop();","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        launch(args);","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":1,"-":211}},{"path":"src/main/java/seedu/address/commons/core/Config.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Objects;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Config values used by the app","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Config {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_CONFIG_FILE \u003d \"config.json\";","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"    private String appTitle \u003d \"My Team Manager\";","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private String userPrefsFilePath \u003d \"preferences.json\";","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String getAppTitle() {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return appTitle;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void setAppTitle(String appTitle) {","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.appTitle \u003d appTitle;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return logLevel;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public String getUserPrefsFilePath() {","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(String userPrefsFilePath) {","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return Objects.equals(appTitle, o.appTitle)","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(logLevel, o.logLevel)","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public int hashCode() {","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Objects.hash(appTitle, logLevel, userPrefsFilePath);","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        sb.append(\"App title : \" + appTitle);","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        sb.append(\"\\nCurrent log level : \" + logLevel);","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return sb.toString();","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":1,"-":71}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"    public static final String MESSAGE_INVALID_THEME \u003d \"This theme does not exist!\\n\";","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_TEAM_NOT_FOUND \u003d \"Team does not exist or is not specified!\";","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_ALL_INDEX \u003d \"All person index provided is invalid\";","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":1,"-":15}},{"path":"src/main/java/seedu/address/commons/events/ui/ChangeTagColourEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.commons.events.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.BaseEvent;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":" * Indicates a request to change tag colour","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"/** @@author Codee */","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"public class ChangeTagColourEvent extends BaseEvent {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"    public final String tagColour;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"    public final String tagName;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"    public ChangeTagColourEvent(String tagName, String tagColour) {","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"        this.tagName \u003d tagName;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"        this.tagColour \u003d tagColour;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"    @Override","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"        return this.getClass().getSimpleName();","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":23}},{"path":"src/main/java/seedu/address/commons/events/ui/ChangeThemeEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.commons.events.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.BaseEvent;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"/**@@author Codee */","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":" * Indicates a request for theme change.","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"public class ChangeThemeEvent extends BaseEvent {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"    public final String theme;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"    public ChangeThemeEvent(String theme) {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"        this.theme \u003d theme;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"    @Override","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"        return this.getClass().toString();","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":21}},{"path":"src/main/java/seedu/address/commons/events/ui/ClearTeamsEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.commons.events.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.BaseEvent;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":" * Event handler for clearing of all teams.","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"// @@author Codee","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ClearTeamsEvent extends BaseEvent {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public ClearTeamsEvent() {","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return this.getClass().getSimpleName();","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false}],"authorContributionMap":{"codeeong":7,"-":13}},{"path":"src/main/java/seedu/address/commons/events/ui/DeselectTeamEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.commons.events.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.BaseEvent;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":" * Indicates a request to deselected selected teams.","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"public class DeselectTeamEvent extends BaseEvent {","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":"    public DeselectTeamEvent() {","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"    @Override","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"        return this.getClass().getSimpleName();","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":17}},{"path":"src/main/java/seedu/address/commons/events/ui/HighlightSelectedTeamEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.commons.events.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.BaseEvent;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":" * Indicates a request to highlight selected team name.","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"/** @@author Codee */","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"public class HighlightSelectedTeamEvent extends BaseEvent {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"    public final String teamName;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"    public HighlightSelectedTeamEvent(String teamName) {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"        this.teamName \u003d teamName;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"    @Override","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"        return this.getClass().getSimpleName();","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":21}},{"path":"src/main/java/seedu/address/commons/events/ui/PersonDetailsChangedEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.commons.events.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.BaseEvent;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":" * Represents a change in the person details panel.","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":" *","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":" /** @@author Codee */","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"public class PersonDetailsChangedEvent extends BaseEvent {","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"    private final Person editedPerson;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"    private final Index index;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"    public PersonDetailsChangedEvent(Person editedPerson, Index index) {","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"        this.editedPerson \u003d editedPerson;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"        this.index \u003d index;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"    public Person getPerson() {","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"        return this.editedPerson;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codeeong"},"content":"    public Index getIndex() {","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"codeeong"},"content":"        return this.index;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"codeeong"},"content":"    @Override","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codeeong"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"codeeong"},"content":"        return this.getClass().getSimpleName();","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":34}},{"path":"src/main/java/seedu/address/commons/events/ui/PersonDetailsChangedNoParamEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.commons.events.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.BaseEvent;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":" * Represents a change in the person details panel, but no paramaters.","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":" *","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":" /** @@author Codee */","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"public class PersonDetailsChangedNoParamEvent extends BaseEvent {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"    public PersonDetailsChangedNoParamEvent() { }","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"    @Override","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"        return this.getClass().getSimpleName();","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":17}},{"path":"src/main/java/seedu/address/commons/events/ui/ShowNewTeamNameEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.commons.events.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.BaseEvent;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":" * Indicates a request to show new team name.","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"/** @@author Codee */","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"public class ShowNewTeamNameEvent extends BaseEvent {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"    public final String teamName;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"    public ShowNewTeamNameEvent(String teamName) {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"        this.teamName \u003d teamName;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"    @Override","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"        return this.getClass().getSimpleName();","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":22}},{"path":"src/main/java/seedu/address/commons/events/ui/UndoTeamsEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.commons.events.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.BaseEvent;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":" * Event handler for undoing clearing of all teams.","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"// @@author Codee","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class UndoTeamsEvent extends BaseEvent {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public UndoTeamsEvent() {","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return this.getClass().getSimpleName();","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":7,"-":11}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandTrie;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.team.Team;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * API of the Logic component","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Logic {","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"codeeong"},"content":"    /** Returns an unmodifiable view of list of teams */","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"codeeong"},"content":"    ObservableList\u003cTeam\u003e getInitTeamList();","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /** Returns the list of input entered by the user, encapsulated in a {@code ListElementPointer} object */","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ListElementPointer getHistorySnapshot();","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /** Returns the command trie. */","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    CommandTrie getCommandTrie();","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":4,"-":32}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.ComponentManager;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandTrie;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.team.Team;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class LogicManager extends ComponentManager implements Logic {","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Model model;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final CommandHistory history;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UndoRedoStack undoRedoStack;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final CommandTrie commandTrie;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public LogicManager(Model model) {","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.model \u003d model;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        history \u003d new CommandHistory();","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        undoRedoStack \u003d new UndoRedoStack();","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        commandTrie \u003d new CommandTrie();","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lohtianwei"},"content":"            Command command \u003d addressBookParser.parseCommand(commandText, model.getLockState());","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            command.setData(model, history, undoRedoStack);","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute();","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            undoRedoStack.push(command);","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            return result;","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } finally {","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            history.add(commandText);","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"codeeong"},"content":"    @Override","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"codeeong"},"content":"    public ObservableList\u003cTeam\u003e getInitTeamList() {","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"codeeong"},"content":"        return model.getInitTeamList();","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public ListElementPointer getHistorySnapshot() {","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new ListElementPointer(history.getHistory());","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public CommandTrie getCommandTrie() {","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return commandTrie;","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":1,"codeeong":6,"-":64}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AVATAR;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JERSEY_NUMBER;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSITION;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RATING;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAM_NAME;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.UNSPECIFIED_FIELD;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.io.IOException;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.EventsCenter;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.events.ui.DeselectTeamEvent;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.events.ui.HighlightSelectedTeamEvent;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.team.TeamName;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.team.exceptions.TeamNotFoundException;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"//@@author lithiumlkid","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Adds a player to the address book.","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddCommand extends UndoableCommand {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lohtianwei"},"content":"    public static final String COMMAND_ALIAS \u003d \"a\";","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a player to the address book. \"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TEAM_NAME + \"TEAMNAME] \"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_RATING + \"RATING] \"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_POSITION + \"POSITION] \"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_JERSEY_NUMBER + \"JERSEY_NUMBER] \"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_AVATAR + \"AVATAR] \"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + PREFIX_RATING + \"0 \"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + PREFIX_POSITION + \"1 \"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + PREFIX_JERSEY_NUMBER + \"17 \"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"codeeong"},"content":"            + PREFIX_TAG + \"goodAttitude\";","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PARAMETERS \u003d PREFIX_NAME + \"NAME \"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_RATING + \"RATING] \"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_POSITION + \"POSITION] \"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_JERSEY_NUMBER + \"JERSEY_NUMBER] \"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_AVATAR + \"AVATAR] \"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]\";","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New player added: %1$s\";","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This player already exists in the address book\";","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_FILE_NOT_FOUND \u003d \"Avatar image file specified does not exist\";","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private final Person toAdd;","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(person);","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public CommandResult executeUndoableCommand() throws CommandException {","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(model);","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (!toAdd.getAvatar().toString().equals(UNSPECIFIED_FIELD)) {","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"                toAdd.getAvatar().setFilePath(toAdd.getName().fullName);","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"            model.addPerson(toAdd);","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"            if (!toAdd.getTeamName().toString().equals(UNSPECIFIED_FIELD)) {","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"                model.assignPersonToTeam(toAdd, toAdd.getTeamName());","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"                model.updateFilteredPersonList(toAdd.getTeamName());","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"                EventsCenter.getInstance().post(new HighlightSelectedTeamEvent(toAdd.getTeamName().toString()));","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"            } else {","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"                EventsCenter.getInstance().post(new DeselectTeamEvent());","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        } catch (DuplicatePersonException e) {","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_FILE_NOT_FOUND);","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        } catch (TeamNotFoundException e) {","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_TEAM_NOT_FOUND);","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    protected void preprocessUndoableCommand() throws CommandException {","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        TeamName teamName \u003d toAdd.getTeamName();","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!model.getAddressBook().getTeamList().stream().anyMatch(t -\u003e t.getTeamName().equals(teamName))) {","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"            if (!teamName.toString().equals(UNSPECIFIED_FIELD)) {","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"                throw new CommandException((Messages.MESSAGE_TEAM_NOT_FOUND));","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":1,"codeeong":1,"-":122}},{"path":"src/main/java/seedu/address/logic/commands/ChangeThemeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.core.EventsCenter;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.core.Messages;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.ChangeThemeEvent;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"import seedu.address.ui.MainWindow;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":" * Changes the theme of the Address Book.","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"/** @@author Codee */","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"public class ChangeThemeCommand extends Command {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"    public static final String COMMAND_WORD \u003d \"changeTheme\";","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"    public static final String COMMAND_ALIAS \u003d \"cte\";","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"            + \": Changes the theme of MTM.\\n\"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"            + \"Parameters: THEME (must be either Light, or Dark)\\n\"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"            + \"Examples: changeTheme Light, cte Dark\";","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"    public static final String MESSAGE_THEME_SUCCESS \u003d \"Theme updated to: %1$s\";","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"codeeong"},"content":"    private final String theme;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"codeeong"},"content":"    public ChangeThemeCommand(String theme) {","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"codeeong"},"content":"        this.theme \u003d theme.trim();","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codeeong"},"content":"    @Override","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"codeeong"},"content":"    public CommandResult execute() throws CommandException {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codeeong"},"content":"        if (!isValidTheme(this.theme)) {","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"codeeong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_THEME);","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codeeong"},"content":"        if ((MainWindow.getCurrentTheme()).contains(this.theme)) {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"codeeong"},"content":"            throw new CommandException(\"Theme is already set to \" + this.theme + \"!\");","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"codeeong"},"content":"        EventsCenter.getInstance().post(new ChangeThemeEvent(this.theme));","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"codeeong"},"content":"        return new CommandResult(String.format(MESSAGE_THEME_SUCCESS, this.theme));","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"codeeong"},"content":"    private boolean isValidTheme(String theme) {","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"codeeong"},"content":"        return theme.equals(\"Light\") || theme.equals(\"Dark\");","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"codeeong"},"content":"    @Override","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"codeeong"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"codeeong"},"content":"        return other \u003d\u003d this // short circuit if same object","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"codeeong"},"content":"                || (other instanceof ChangeThemeCommand // instanceof handles nulls","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"codeeong"},"content":"                \u0026\u0026 this.theme.equals(((ChangeThemeCommand) other).theme)); // state check","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":54}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.core.EventsCenter;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.ClearTeamsEvent;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Clears the address book.","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ClearCommand extends UndoableCommand {","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lohtianwei"},"content":"    public static final String COMMAND_ALIAS \u003d \"c\";","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult executeUndoableCommand() {","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        model.resetData(new AddressBook());","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // @@author Codee","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EventsCenter.getInstance().post(new ClearTeamsEvent());","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // @@author","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":1,"codeeong":2,"-":25}},{"path":"src/main/java/seedu/address/logic/commands/CreateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.core.EventsCenter;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.ShowNewTeamNameEvent;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.team.Team;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.team.exceptions.DuplicateTeamException;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"//@@author jordancjq","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Creates a team to the application","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CreateCommand extends UndoableCommand {","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"create\";","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_ALIAS \u003d \"ct\";","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \"Creates a team in MTM. \"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"TEAM_NAME\\n\"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Arsenal\";","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PARAMETERS \u003d \"TEAM_NAME\";","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New team created: %1$s\";","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_TEAM \u003d \"This team already exist in the manager\";","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Team toCreate;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a CreateCommand to add the specified (@code Team)","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CreateCommand(Team team) {","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(team);","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.toCreate \u003d team;","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult executeUndoableCommand() throws CommandException {","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(model);","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            model.createTeam(toCreate);","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (DuplicateTeamException e) {","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TEAM);","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"codeeong"},"content":"        EventsCenter.getInstance().post(new ShowNewTeamNameEvent(toCreate.getTeamName().toString()));","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toCreate.getTeamName().toString()));","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"                || (other instanceof CreateCommand // instanceof handles nulls","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"                \u0026\u0026 toCreate.equals(((CreateCommand) other).toCreate));","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":3,"-":57}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s last displayed index from the address book.","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends UndoableCommand {","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lohtianwei"},"content":"    public static final String COMMAND_ALIAS \u003d \"d\";","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the last person listing.\\n\"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PARAMETERS \u003d \"INDEX\";","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Person personToDelete;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult executeUndoableCommand() {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(personToDelete);","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            model.deletePerson(personToDelete);","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        } catch (PersonNotFoundException pnfe) {","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The target person cannot be missing\");","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    protected void preprocessUndoableCommand() throws CommandException {","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.targetIndex.equals(((DeleteCommand) other).targetIndex) // state check","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(this.personToDelete, ((DeleteCommand) other).personToDelete));","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":1,"-":69}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AVATAR;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JERSEY_NUMBER;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSITION;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RATING;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.UNSPECIFIED_FIELD;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.io.IOException;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collections;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.HashSet;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Objects;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Optional;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.EventsCenter;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.commons.events.ui.DeselectTeamEvent;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.PersonDetailsChangedEvent;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Avatar;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.JerseyNumber;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Position;","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Rating;","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Remark;","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.team.TeamName;","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"//@@author lithiumlkid","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":" * Edits the details of an existing player in the address book.","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"public class EditCommand extends UndoableCommand {","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lohtianwei"},"content":"    public static final String COMMAND_ALIAS \u003d \"e\";","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the player identified \"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last player listing. \"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_RATING + \"RATING] \"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_POSITION + \"POSITION] \"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_JERSEY_NUMBER + \"JERSEY_NUMBER] \"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_AVATAR + \"AVATAR] \"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PARAMETERS \u003d \"INDEX \"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_RATING + \"RATING] \"","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_POSITION + \"POSITION] \"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_JERSEY_NUMBER + \"JERSEY_NUMBER] \"","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_AVATAR + \"AVATAR] \"","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]\";","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This player already exists in the address book.\";","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_FILE_NOT_FOUND \u003d \"Avatar image file specified does not exist\";","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private final Index index;","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private Person personToEdit;","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private Person editedPerson;","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @param index of the player in the filtered player list to edit","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the player with","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(index);","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        this.index \u003d index;","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public CommandResult executeUndoableCommand() throws CommandException {","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"            if (!editedPerson.getAvatar().toString().equals(UNSPECIFIED_FIELD)) {","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"                editedPerson.getAvatar().setFilePath(editedPerson.getName().fullName);","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"            model.updatePerson(personToEdit, editedPerson);","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        } catch (DuplicatePersonException dpe) {","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        } catch (PersonNotFoundException pnfe) {","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The target player cannot be missing\");","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_FILE_NOT_FOUND);","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        //@@author Codee","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        EventsCenter.getInstance().post(new PersonDetailsChangedEvent(editedPerson, index));","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //@@author","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EventsCenter.getInstance().post(new DeselectTeamEvent());","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    protected void preprocessUndoableCommand() throws CommandException {","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        personToEdit \u003d lastShownList.get(index.getZeroBased());","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * NOTE: Private fields will not be edited.","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d (personToEdit.getPhone().isPrivate())","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"                ? personToEdit.getPhone() : editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d (personToEdit.getEmail().isPrivate())","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"                ? personToEdit.getEmail() : editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d (personToEdit.getAddress().isPrivate())","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"                ? personToEdit.getAddress() : editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Remark updatedRemark \u003d (personToEdit.getRemark().isPrivate())","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"                ? personToEdit.getRemark() : personToEdit.getRemark();","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        TeamName updatedTeamName \u003d personToEdit.getTeamName();","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Rating updatedRating \u003d editPersonDescriptor.getRating().orElse(personToEdit.getRating());","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        JerseyNumber updatedJerseyNumber \u003d editPersonDescriptor.getJerseyNumber()","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"                .orElse(personToEdit.getJerseyNumber());","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Position updatedPosition \u003d editPersonDescriptor.getPosition().orElse(personToEdit.getPosition());","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Avatar updatedAvatar \u003d editPersonDescriptor.getAvatar().orElse(personToEdit.getAvatar());","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedRemark,","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"                updatedTeamName, updatedTags, updatedRating, updatedPosition, updatedJerseyNumber, updatedAvatar);","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // short circuit if same object","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // state check","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor)","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(personToEdit, e.personToEdit);","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * Stores the details to edit the player with. Each non-empty field value will replace the","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * corresponding field value of the player.","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        private Name name;","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        private Phone phone;","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        private Email email;","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        private Address address;","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        private Rating rating;","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        private Position position;","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        private JerseyNumber jerseyNumber;","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        private Avatar avatar;","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        /**","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"         * Copy constructor.","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"         */","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"            setRating(toCopy.rating);","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"            setPosition(toCopy.position);","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"            setJerseyNumber(toCopy.jerseyNumber);","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"            setAvatar(toCopy.avatar);","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"        /**","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"         */","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(this.name, this.phone, this.email, this.address, this.tags,","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"                    this.rating, this.position, this.jerseyNumber, this.avatar);","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"            this.name \u003d name;","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"            this.email \u003d email;","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"            this.address \u003d address;","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"        /**","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"         */","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"        /**","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"         * if modification is attempted.","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"         */","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"        public void setRating(Rating rating) {","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"            this.rating \u003d rating;","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"        public Optional\u003cRating\u003e getRating() {","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(rating);","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"        public void setPosition(Position position) {","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"            this.position \u003d position;","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"        public Optional\u003cPosition\u003e getPosition() {","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(position);","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"        public void setJerseyNumber(JerseyNumber jerseyNumber) {","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"            this.jerseyNumber \u003d jerseyNumber;","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"        public Optional\u003cJerseyNumber\u003e getJerseyNumber() {","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(jerseyNumber);","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"        public void setAvatar(Avatar avatar) {","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"            this.avatar \u003d avatar;","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"        public Optional\u003cAvatar\u003e getAvatar() {","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(avatar);","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"            // short circuit if same object","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"                return true;","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"                return false;","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"            // state check","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getRating().equals(e.getRating())","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPosition().equals(e.getPosition())","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getJerseyNumber().equals(e.getJerseyNumber())","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAvatar().equals(e.getAvatar());","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":1,"codeeong":1,"-":335}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Keyword matching is case sensitive.","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lohtianwei"},"content":"    public static final String COMMAND_ALIAS \u003d \"f\";","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-sensitive) and displays them as a list with index numbers.\\n\"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PARAMETERS \u003d \"KEYWORD [MORE KEYWORD]\";","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandResult execute() {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new CommandResult(getMessageForPersonListShownSummary(model.getFilteredPersonList().size()));","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.predicate.equals(((FindCommand) other).predicate)); // state check","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":1,"-":38}},{"path":"src/main/java/seedu/address/logic/commands/HistoryCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.CommandHistory;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.UndoRedoStack;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Lists all the commands entered by user from the start of app launch.","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class HistoryCommand extends Command {","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"history\";","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lohtianwei"},"content":"    public static final String COMMAND_ALIAS \u003d \"h\";","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Entered commands (from most recent to earliest):\\n%1$s\";","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NO_HISTORY \u003d \"You have not yet entered any commands.\";","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult execute() {","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        List\u003cString\u003e previousCommands \u003d history.getHistory();","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        if (previousCommands.isEmpty()) {","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            return new CommandResult(MESSAGE_NO_HISTORY);","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Collections.reverse(previousCommands);","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, String.join(\"\\n\", previousCommands)));","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void setData(Model model, CommandHistory history, UndoRedoStack undoRedoStack) {","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(history);","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.history \u003d history;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":1,"-":38}},{"path":"src/main/java/seedu/address/logic/commands/KeyCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lohtianwei"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lohtianwei"},"content":"//@@author lohtianwei","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lohtianwei"},"content":"import java.nio.charset.StandardCharsets;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lohtianwei"},"content":"import java.util.logging.Logger;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lohtianwei"},"content":"import com.google.common.hash.Hashing;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.commons.core.LogsCenter;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lohtianwei"},"content":"/**","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lohtianwei"},"content":" * Sets lock in model to true/false depending on current state","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lohtianwei"},"content":" */","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lohtianwei"},"content":"public class KeyCommand extends Command {","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lohtianwei"},"content":"    public static final String COMMAND_WORD \u003d \"key\";","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lohtianwei"},"content":"    public static final String COMMAND_ALIAS \u003d \"k\";","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lohtianwei"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Toggles the lock on MTM. \"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lohtianwei"},"content":"            + \"Functionality of MTM reduced\\n\"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lohtianwei"},"content":"            + \"Input empty password to see current lock state\\n\"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lohtianwei"},"content":"            + \"Parameters: [PASSWORD]\\n\"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lohtianwei"},"content":"            + \"Example: \" + COMMAND_WORD","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lohtianwei"},"content":"            + \" myPassword\";","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lohtianwei"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"MTM lock toggled!\";","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lohtianwei"},"content":"    public static final String MESSAGE_WRONG_PASS \u003d \"Password entered is incorrect. Please try again.\";","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lohtianwei"},"content":"    public static final String MESSAGE_PARAMETERS \u003d \"[PASSWORD]\";","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lohtianwei"},"content":"    private String password;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lohtianwei"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(KeyCommand.class);","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lohtianwei"},"content":"    public KeyCommand(String password) {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lohtianwei"},"content":"        this.password \u003d password;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lohtianwei"},"content":"    /**","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lohtianwei"},"content":"     * Checks if input password is correct.","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lohtianwei"},"content":"     */","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lohtianwei"},"content":"    private boolean correctPassword() {","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lohtianwei"},"content":"        UserPrefs up \u003d model.getUserPrefs();","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lohtianwei"},"content":"        String hash \u003d Hashing.sha256().hashString(password, StandardCharsets.UTF_8).toString();","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lohtianwei"},"content":"        return hash.equals(up.getAddressBookHashedPass());","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lohtianwei"},"content":"    private boolean emptyPass() {","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lohtianwei"},"content":"        return password.isEmpty();","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lohtianwei"},"content":"    @Override","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lohtianwei"},"content":"    public CommandResult execute() throws CommandException {","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lohtianwei"},"content":"        if (emptyPass()) {","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lohtianwei"},"content":"            return new CommandResult(MESSAGE_USAGE + \"\\nLock state is now: \"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lohtianwei"},"content":"                    + Boolean.toString(model.getLockState()));","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lohtianwei"},"content":"        if (correctPassword()) {","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lohtianwei"},"content":"            if (model.getLockState()) {","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lohtianwei"},"content":"                model.unlockAddressBookModel();","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lohtianwei"},"content":"            } else {","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lohtianwei"},"content":"                model.lockAddressBookModel();","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lohtianwei"},"content":"            }","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lohtianwei"},"content":"            logger.info(\"Lock state is now: \" + Boolean.toString(model.getLockState()));","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lohtianwei"},"content":"            return new CommandResult(MESSAGE_SUCCESS + \"\\nLock state is now: \"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lohtianwei"},"content":"                    + Boolean.toString(model.getLockState()));","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lohtianwei"},"content":"        } else {","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lohtianwei"},"content":"            throw new CommandException(MESSAGE_WRONG_PASS);","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lohtianwei"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":74}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.core.EventsCenter;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.DeselectTeamEvent;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lohtianwei"},"content":"    public static final String COMMAND_ALIAS \u003d \"l\";","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute() {","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"        EventsCenter.getInstance().post(new DeselectTeamEvent());","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":1,"codeeong":4,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/RedoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.core.EventsCenter;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.PersonDetailsChangedNoParamEvent;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.UndoTeamsEvent;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.CommandHistory;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.UndoRedoStack;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Redo the previously undone command.","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class RedoCommand extends Command {","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lohtianwei"},"content":"    public static final String COMMAND_ALIAS \u003d \"r\";","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Redo success!\";","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_FAILURE \u003d \"No more commands to redo!\";","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public CommandResult execute() throws CommandException {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireAllNonNull(model, undoRedoStack);","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!undoRedoStack.canRedo()) {","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_FAILURE);","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        undoRedoStack.popRedo().redo();","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // @@author Codee","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        EventsCenter.getInstance().post(new UndoTeamsEvent());","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        EventsCenter.getInstance().post(new PersonDetailsChangedNoParamEvent());","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // @@author","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setData(Model model, CommandHistory commandHistory, UndoRedoStack undoRedoStack) {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.undoRedoStack \u003d undoRedoStack;","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":1,"codeeong":3,"-":40}},{"path":"src/main/java/seedu/address/logic/commands/RemarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.core.EventsCenter;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.PersonDetailsChangedEvent;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Remark;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"//@@author jordancjq","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Updates the remark of an existing player in the address book.","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class RemarkCommand extends UndoableCommand {","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String COMMAND_ALIAS \u003d \"rm\";","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Updates the remark of the player identified \"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last player listing. \"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_REMARK + \"[REMARK]\\n\"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_REMARK + \"Must put on field\";","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PARAMETERS \u003d \"INDEX\";","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Remark added to: %1$s\";","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Remark removed from: %1$s\";","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final Index index;","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final Remark remark;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Person personToEdit;","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Person editedPerson;","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, Remark remark) {","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(index);","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(remark);","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.index \u003d index;","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult executeUndoableCommand() throws CommandException {","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(personToEdit);","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            model.updatePerson(personToEdit, editedPerson);","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        } catch (DuplicatePersonException dpe) {","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Updating remark should not result in duplicate\");","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        } catch (PersonNotFoundException pnfe) {","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The target player cannot be missing\");","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"codeeong"},"content":"        EventsCenter.getInstance().post(new PersonDetailsChangedEvent(editedPerson, index));","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new CommandResult(getSuccessMessage(editedPerson));","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    protected void preprocessUndoableCommand() throws CommandException {","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        personToEdit \u003d lastShownList.get(index.getZeroBased());","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTeamName(), personToEdit.getTags(),","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"                personToEdit.getRating(), personToEdit.getPosition(), personToEdit.getJerseyNumber(),","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"                personToEdit.getAvatar());","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // short circuit if same object","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // state check","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Gets the corresponding success message based on the remark field from {@code personToEdit} after editing.","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private String getSuccessMessage(Person person) {","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String message \u003d remark.value.isEmpty() ? MESSAGE_DELETE_REMARK_SUCCESS : MESSAGE_ADD_REMARK_SUCCESS;","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":4,"-":107}},{"path":"src/main/java/seedu/address/logic/commands/SelectCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.EventsCenter;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.events.ui.JumpToListRequestEvent;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Selects a person identified using it\u0027s last displayed index from the address book.","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class SelectCommand extends Command {","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"select\";","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lohtianwei"},"content":"    public static final String COMMAND_ALIAS \u003d \"s\";","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Selects the person identified by the index number used in the last person listing.\\n\"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PARAMETERS \u003d \"INDEX\";","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SELECT_PERSON_SUCCESS \u003d \"Selected Person: %1$s\";","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public SelectCommand(Index targetIndex) {","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult execute() throws CommandException {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        EventsCenter.getInstance().post(new JumpToListRequestEvent(targetIndex));","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SELECT_PERSON_SUCCESS, targetIndex.getOneBased()));","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"                || (other instanceof SelectCommand // instanceof handles nulls","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.targetIndex.equals(((SelectCommand) other).targetIndex)); // state check","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":1,"-":54}},{"path":"src/main/java/seedu/address/logic/commands/SetCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG_COLOUR;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.core.EventsCenter;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.ChangeTagColourEvent;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":" * Adds a colour to a tag in address book.","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"/** @@author Codee Ong Ong */","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"public class SetCommand extends Command {","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"    public static final String COMMAND_WORD \u003d \"setTagColour\";","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"    public static final String COMMAND_ALIAS \u003d \"stc\";","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sets the colour of tags to the colour of choice \"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"            + \"Parameters: \"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"TAG \"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + PREFIX_TAG_COLOUR + \"TAG_COLOUR\\n\"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codeeong"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"codeeong"},"content":"            + PREFIX_TAG + \"friends \"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codeeong"},"content":"            + PREFIX_TAG_COLOUR + \"green\\n\"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"codeeong"},"content":"            + \"Colours to choose from are : teal, red, yellow, blue, orange, brown, \\n\"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"codeeong"},"content":"            + \"green, pink, black, grey\\n\";","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PARAMETERS \u003d PREFIX_TAG + \"TAG \" + PREFIX_TAG_COLOUR + \"TAG_COLOUR\";","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"codeeong"},"content":"    public static final String MESSAGE_INVALID_TAG \u003d \"tag is invalid! Please input a valid tag name!\";","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codeeong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"tag %1$s colour changed to %2$s\";","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"codeeong"},"content":"    private final Tag tagToSet;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codeeong"},"content":"    private final String tagColour;","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"codeeong"},"content":"     * Creates an AddCommand to add the specified {@code Person}","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"codeeong"},"content":"    public SetCommand(Tag tag, String colour) {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"codeeong"},"content":"        requireNonNull(tag);","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"codeeong"},"content":"        tagToSet \u003d tag;","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"codeeong"},"content":"        tagColour \u003d colour;","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"codeeong"},"content":"    @Override","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"codeeong"},"content":"    public CommandResult execute() {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"codeeong"},"content":"        requireNonNull(model);","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"codeeong"},"content":"        boolean isTagValid \u003d model.setTagColour(tagToSet, tagColour);","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"codeeong"},"content":"        if (!tagToSet.isValidTagName(tagToSet.getTagName()) || !isTagValid) {","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"codeeong"},"content":"            return new CommandResult(String.format(MESSAGE_INVALID_TAG));","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"codeeong"},"content":"        EventsCenter.getInstance().post(new ChangeTagColourEvent(tagToSet.getTagName(), tagColour));","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"codeeong"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, tagToSet.toString(), tagColour));","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"codeeong"},"content":"    @Override","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"codeeong"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"codeeong"},"content":"        // Check if","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"codeeong"},"content":"        // (a) Object is the same object","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"codeeong"},"content":"        // (b) Object is an instance of the object and that toSet, tag and color are the same","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"codeeong"},"content":"        return other \u003d\u003d this // short circuit if same object","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"codeeong"},"content":"                || (other instanceof SetCommand // instanceof handles nulls","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"codeeong"},"content":"                \u0026\u0026 this.tagToSet.getTagName().equals(((SetCommand) other).tagToSet.getTagName()))","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"codeeong"},"content":"                \u0026\u0026 this.tagColour.equals(((SetCommand) other).tagColour);","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false}],"authorContributionMap":{"codeeong":65,"-":4}},{"path":"src/main/java/seedu/address/logic/commands/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lohtianwei"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lohtianwei"},"content":"//@@author lohtianwei","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lohtianwei"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.exceptions.NoPlayerException;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lohtianwei"},"content":"/**","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lohtianwei"},"content":" * Sorts all players in address book by field. Can be done in asc or desc order.","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lohtianwei"},"content":" */","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lohtianwei"},"content":"public class SortCommand extends UndoableCommand {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lohtianwei"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lohtianwei"},"content":"    public static final String COMMAND_ALIAS \u003d \"so\";","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lohtianwei"},"content":"    public static final String BY_ASCENDING \u003d \"asc\";","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lohtianwei"},"content":"    public static final String BY_DESCENDING \u003d \"desc\";","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lohtianwei"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sorts players in address book \"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lohtianwei"},"content":"            + \"by fields in either ascending or descending order.\\n\"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lohtianwei"},"content":"            + \"Parameters: FIELD ORDER\\n\"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lohtianwei"},"content":"            + \"Accepted fields for sort: name, email, address, rating, jersey, pos\\n\"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lohtianwei"},"content":"            + \"Accepted orders: asc \u0026 desc\\n\"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lohtianwei"},"content":"            + \"Example: \" + COMMAND_WORD","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lohtianwei"},"content":"            + \" name \" + BY_ASCENDING;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lohtianwei"},"content":"    public static final String MESSAGE_PARAMETERS \u003d \"FIELD ORDER\";","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lohtianwei"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Players in address book have been sorted.\";","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lohtianwei"},"content":"    public static final String MESSAGE_EMPTY_BOOK \u003d \"No player(s) to sort.\";","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lohtianwei"},"content":"    private final String field;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lohtianwei"},"content":"    private final String order;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lohtianwei"},"content":"    public SortCommand(String field, String order) {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lohtianwei"},"content":"        requireNonNull(field);","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lohtianwei"},"content":"        requireNonNull(order);","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lohtianwei"},"content":"        this.field \u003d field;","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lohtianwei"},"content":"        this.order \u003d order;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lohtianwei"},"content":"    public String getField() {","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lohtianwei"},"content":"        return this.field;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lohtianwei"},"content":"    public String getOrder() {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lohtianwei"},"content":"        return this.order;","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lohtianwei"},"content":"    @Override","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lohtianwei"},"content":"    public CommandResult executeUndoableCommand() throws CommandException {","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lohtianwei"},"content":"        try {","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lohtianwei"},"content":"            model.sortPlayers(getField(), getOrder());","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lohtianwei"},"content":"        } catch (NoPlayerException npe) {","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lohtianwei"},"content":"            throw new CommandException(MESSAGE_EMPTY_BOOK);","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lohtianwei"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lohtianwei"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":62}},{"path":"src/main/java/seedu/address/logic/commands/TogglePrivacyCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lohtianwei"},"content":"//@@author lohtianwei","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lohtianwei"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RATING;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lohtianwei"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lohtianwei"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.commons.core.EventsCenter;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.commons.core.Messages;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.commons.events.ui.PersonDetailsChangedEvent;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.commons.util.CollectionUtil;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.Address;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.Avatar;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.Email;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.JerseyNumber;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.Name;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.Phone;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.Position;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.Rating;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.Remark;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.team.TeamName;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lohtianwei"},"content":"/**","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lohtianwei"},"content":" * Toggles privacy of fields of player identified using it\u0027s last displayed index from the address book.","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lohtianwei"},"content":" */","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lohtianwei"},"content":"public class TogglePrivacyCommand extends UndoableCommand {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lohtianwei"},"content":"    public static final String COMMAND_WORD \u003d \"toggleprivacy\";","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lohtianwei"},"content":"    public static final String COMMAND_ALIAS \u003d \"tp\";","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lohtianwei"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Toggles the field privacy of the person\"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lohtianwei"},"content":"            + \" identified by the index number used in the last person listing.\\n\"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lohtianwei"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lohtianwei"},"content":"            + \"[\" + PREFIX_PHONE + \"]\"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lohtianwei"},"content":"            + \"[\" + PREFIX_EMAIL + \"]\"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lohtianwei"},"content":"            + \"[\" + PREFIX_REMARK + \"]\"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lohtianwei"},"content":"            + \"[\" + PREFIX_RATING + \"]\"","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lohtianwei"},"content":"            + \"[\" + PREFIX_ADDRESS + \"]\\n\"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lohtianwei"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lohtianwei"},"content":"            + PREFIX_PHONE + \" \"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lohtianwei"},"content":"            + PREFIX_EMAIL + \" \"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lohtianwei"},"content":"            + PREFIX_ADDRESS;","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lohtianwei"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Changed the Privacy of the Person: %1$s\";","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lohtianwei"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lohtianwei"},"content":"    public static final String MESSAGE_NO_FIELDS \u003d \"No prefixes were specified!\";","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lohtianwei"},"content":"    public static final String MESSAGE_PARAMETERS \u003d \"INDEX \"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lohtianwei"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE]\"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lohtianwei"},"content":"            + \" [\" + PREFIX_EMAIL + \"EMAIL]\"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lohtianwei"},"content":"            + \" [\" + PREFIX_REMARK + \"REMARK]\"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lohtianwei"},"content":"            + \" [\" + PREFIX_RATING + \"RATING]\"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lohtianwei"},"content":"            + \" [\" + PREFIX_ADDRESS + \"ADDRESS]\";","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lohtianwei"},"content":"    private final Index index;","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lohtianwei"},"content":"    private final EditPersonPrivacy epp;","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lohtianwei"},"content":"    private Person personToEdit;","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lohtianwei"},"content":"    private Person editedPerson;","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lohtianwei"},"content":"    /**","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lohtianwei"},"content":"     * @param index of the person in the filtered person list to edit privacy","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lohtianwei"},"content":"     */","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lohtianwei"},"content":"    public TogglePrivacyCommand(Index index, EditPersonPrivacy epp) {","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lohtianwei"},"content":"        requireNonNull(index);","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lohtianwei"},"content":"        requireNonNull(epp);","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"lohtianwei"},"content":"        this.index \u003d index;","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lohtianwei"},"content":"        this.epp \u003d epp;","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lohtianwei"},"content":"    @Override","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"lohtianwei"},"content":"    public CommandResult executeUndoableCommand() throws CommandException {","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"lohtianwei"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"lohtianwei"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"lohtianwei"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"lohtianwei"},"content":"        personToEdit \u003d lastShownList.get(index.getZeroBased());","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"lohtianwei"},"content":"        try {","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"lohtianwei"},"content":"            editedPerson \u003d createEditedPrivacyPerson(personToEdit, epp);","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"lohtianwei"},"content":"        } catch (IllegalValueException e) {","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"lohtianwei"},"content":"            throw new AssertionError(\"Person must have all fields!\");","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"lohtianwei"},"content":"        try {","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"lohtianwei"},"content":"            model.updatePerson(personToEdit, editedPerson);","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"lohtianwei"},"content":"        } catch (DuplicatePersonException dpe) {","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"lohtianwei"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"lohtianwei"},"content":"        } catch (PersonNotFoundException pnfe) {","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"lohtianwei"},"content":"            throw new AssertionError(\"The target person cannot be missing\");","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"lohtianwei"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"lohtianwei"},"content":"        EventsCenter.getInstance().post(new PersonDetailsChangedEvent(editedPerson, index));","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"lohtianwei"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, editedPerson));","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"lohtianwei"},"content":"    /**","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"lohtianwei"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"lohtianwei"},"content":"     * edited with {@code editPersonPrivacy}.","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"lohtianwei"},"content":"     * NOTE: Private fields will not be edited.","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"lohtianwei"},"content":"     */","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"lohtianwei"},"content":"    private static Person createEditedPrivacyPerson(Person personToEdit, EditPersonPrivacy epp)","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"lohtianwei"},"content":"            throws IllegalValueException {","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"lohtianwei"},"content":"        assert personToEdit !\u003d null;","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"lohtianwei"},"content":"        Name updatedName \u003d personToEdit.getName();","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"lohtianwei"},"content":"        Phone updatedPhone \u003d createPhonePrivacy(personToEdit, epp);","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"lohtianwei"},"content":"        Email updatedEmail \u003d createEmailPrivacy(personToEdit, epp);","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"lohtianwei"},"content":"        Address updatedAddress \u003d createAddressPrivacy(personToEdit, epp);","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"lohtianwei"},"content":"        Remark updatedRemark \u003d createRemarkPrivacy(personToEdit, epp);","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"lohtianwei"},"content":"        TeamName updatedTeamName \u003d personToEdit.getTeamName();","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"lohtianwei"},"content":"        Set\u003cTag\u003e updatedTags \u003d personToEdit.getTags();","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"lohtianwei"},"content":"        Rating updatedRating \u003d createRatingPrivacy(personToEdit, epp);","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"lohtianwei"},"content":"        Position updatedPosition \u003d personToEdit.getPosition();","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"lohtianwei"},"content":"        JerseyNumber updatedJerseyNumber \u003d personToEdit.getJerseyNumber();","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"lohtianwei"},"content":"        Avatar updatedAvatar \u003d personToEdit.getAvatar();","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"lohtianwei"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedRemark,","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"lohtianwei"},"content":"                updatedTeamName, updatedTags, updatedRating, updatedPosition, updatedJerseyNumber, updatedAvatar);","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"lohtianwei"},"content":"    /**","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"lohtianwei"},"content":"     * Creates a new (@code Phone) based on the input (@code Person) and (@code EditPersonPrivacy)","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"lohtianwei"},"content":"     * @return A (@code Phone) with the same value as that of the (@code Person)\u0027s but with the privacy set to that","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"lohtianwei"},"content":"     * of the (@code EditPersonPrivacy)","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"lohtianwei"},"content":"     */","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"lohtianwei"},"content":"    private static Phone createPhonePrivacy(Person person, EditPersonPrivacy epp) {","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"lohtianwei"},"content":"        Phone phone;","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"lohtianwei"},"content":"        try {","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"lohtianwei"},"content":"            if (person.getPhone().isPrivate()) {","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"lohtianwei"},"content":"                person.getPhone().togglePrivacy();","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"lohtianwei"},"content":"                phone \u003d new Phone(person.getPhone().toString());","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"lohtianwei"},"content":"                person.getPhone().togglePrivacy();","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"lohtianwei"},"content":"            } else {","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"lohtianwei"},"content":"                phone \u003d new Phone(person.getPhone().toString());","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"lohtianwei"},"content":"            }","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"lohtianwei"},"content":"        } catch (Exception e) {","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"lohtianwei"},"content":"            throw new AssertionError(\"Invalid Phone\");","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"lohtianwei"},"content":"        if (epp.getPrivatePhone() !\u003d null) {","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"lohtianwei"},"content":"            phone.setPrivate(person.getPhone().isPrivate());","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"lohtianwei"},"content":"            phone.togglePrivacy();","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"lohtianwei"},"content":"        } else {","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"lohtianwei"},"content":"            phone.setPrivate(person.getPhone().isPrivate());","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"lohtianwei"},"content":"        return phone;","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"lohtianwei"},"content":"    /**","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"lohtianwei"},"content":"     * Creates a new (@code Email) based on the input (@code Person) and (@code EditPersonPrivacy)","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"lohtianwei"},"content":"     * @return A (@code Email) with the same value as that of the (@code Person)\u0027s but with the privacy set to that","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"lohtianwei"},"content":"     * of the (@code EditPersonPrivacy)","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"lohtianwei"},"content":"     */","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"lohtianwei"},"content":"    private static Email createEmailPrivacy(Person person, EditPersonPrivacy epp) {","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"lohtianwei"},"content":"        Email email;","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"lohtianwei"},"content":"        try {","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"lohtianwei"},"content":"            if (person.getEmail().isPrivate()) {","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"lohtianwei"},"content":"                person.getEmail().togglePrivacy();","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"lohtianwei"},"content":"                email \u003d new Email(person.getEmail().toString());","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"lohtianwei"},"content":"                person.getEmail().togglePrivacy();","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"lohtianwei"},"content":"            } else {","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"lohtianwei"},"content":"                email \u003d new Email(person.getEmail().toString());","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"lohtianwei"},"content":"            }","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"lohtianwei"},"content":"        } catch (Exception e) {","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"lohtianwei"},"content":"            throw new AssertionError(\"Invalid Email\");","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"lohtianwei"},"content":"        if (epp.getPrivateEmail() !\u003d null) {","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"lohtianwei"},"content":"            email.setPrivate(person.getEmail().isPrivate());","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"lohtianwei"},"content":"            email.togglePrivacy();","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"lohtianwei"},"content":"        } else {","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"lohtianwei"},"content":"            email.setPrivate(person.getEmail().isPrivate());","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"lohtianwei"},"content":"        return email;","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"lohtianwei"},"content":"    /**","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"lohtianwei"},"content":"     * Creates a new (@code Address) based on the input (@code Person) and (@code EditPersonPrivacy)","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"lohtianwei"},"content":"     * @return A (@code Address) with the same value as that of the (@code Person)\u0027s but with the privacy set to that","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"lohtianwei"},"content":"     * of the (@code EditPersonPrivacy)","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"lohtianwei"},"content":"     */","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"lohtianwei"},"content":"    private static Address createAddressPrivacy(Person person, EditPersonPrivacy epp) {","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"lohtianwei"},"content":"        Address address;","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"lohtianwei"},"content":"        try {","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"lohtianwei"},"content":"            if (person.getAddress().isPrivate()) {","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"lohtianwei"},"content":"                person.getAddress().togglePrivacy();","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"lohtianwei"},"content":"                address \u003d new Address(person.getAddress().toString());","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"lohtianwei"},"content":"                person.getAddress().togglePrivacy();","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"lohtianwei"},"content":"            } else {","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"lohtianwei"},"content":"                address \u003d new Address(person.getAddress().toString());","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"lohtianwei"},"content":"            }","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"lohtianwei"},"content":"        } catch (Exception e) {","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"lohtianwei"},"content":"            throw new AssertionError(\"Invalid Address\");","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"lohtianwei"},"content":"        if (epp.getPrivateAddress() !\u003d null) {","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"lohtianwei"},"content":"            address.setPrivate(person.getAddress().isPrivate());","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"lohtianwei"},"content":"            address.togglePrivacy();","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"lohtianwei"},"content":"        } else {","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"lohtianwei"},"content":"            address.setPrivate(person.getAddress().isPrivate());","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"lohtianwei"},"content":"        return address;","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"lohtianwei"},"content":"    /**","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"lohtianwei"},"content":"     * Creates a new (@code Remark) based on the input (@code Person) and (@code EditPersonPrivacy)","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"lohtianwei"},"content":"     * @return A (@code Remark) with the same value as that of the (@code Person)\u0027s but with the privacy set to that","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"lohtianwei"},"content":"     * of the (@code EditPersonPrivacy)","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"lohtianwei"},"content":"     */","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"lohtianwei"},"content":"    private static Remark createRemarkPrivacy(Person person, EditPersonPrivacy epp) {","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"lohtianwei"},"content":"        Remark remark;","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"lohtianwei"},"content":"        try {","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"lohtianwei"},"content":"            if (person.getRemark().isPrivate()) {","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"lohtianwei"},"content":"                person.getRemark().togglePrivacy();","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"lohtianwei"},"content":"                remark \u003d new Remark(person.getRemark().toString());","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"lohtianwei"},"content":"                person.getRemark().togglePrivacy();","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"lohtianwei"},"content":"            } else {","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"lohtianwei"},"content":"                remark \u003d new Remark(person.getRemark().toString());","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"lohtianwei"},"content":"            }","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"lohtianwei"},"content":"        } catch (Exception e) {","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"lohtianwei"},"content":"            throw new AssertionError(\"Invalid Remark\");","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"lohtianwei"},"content":"        if (epp.getPrivateRemark() !\u003d null) {","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"lohtianwei"},"content":"            remark.setPrivate(person.getRemark().isPrivate());","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"lohtianwei"},"content":"            remark.togglePrivacy();","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"lohtianwei"},"content":"        } else {","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"lohtianwei"},"content":"            remark.setPrivate(person.getRemark().isPrivate());","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"lohtianwei"},"content":"        return remark;","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"lohtianwei"},"content":"    /**","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"lohtianwei"},"content":"     * Creates a new (@code Rating) based on the input (@code Person) and (@code EditPersonPrivacy)","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"lohtianwei"},"content":"     * @return A (@code Rating) with the same value as that of the (@code Person)\u0027s but with the privacy set to that","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"lohtianwei"},"content":"     * of the (@code EditPersonPrivacy)","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"lohtianwei"},"content":"     */","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"lohtianwei"},"content":"    private static Rating createRatingPrivacy(Person person, EditPersonPrivacy epp) {","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"lohtianwei"},"content":"        Rating rating;","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"lohtianwei"},"content":"        try {","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"lohtianwei"},"content":"            if (person.getRating().isPrivate()) {","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"lohtianwei"},"content":"                person.getRating().togglePrivacy();","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"lohtianwei"},"content":"                rating \u003d new Rating(person.getRating().toString());","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"lohtianwei"},"content":"                person.getRating().togglePrivacy();","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"lohtianwei"},"content":"            } else {","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"lohtianwei"},"content":"                rating \u003d new Rating(person.getRating().toString());","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"lohtianwei"},"content":"            }","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"lohtianwei"},"content":"        } catch (Exception e) {","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"lohtianwei"},"content":"            throw new AssertionError(\"Invalid Rating\");","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"lohtianwei"},"content":"        if (epp.getPrivateRating() !\u003d null) {","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"lohtianwei"},"content":"            rating.setPrivate(person.getRating().isPrivate());","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"lohtianwei"},"content":"            rating.togglePrivacy();","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"lohtianwei"},"content":"        } else {","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"lohtianwei"},"content":"            rating.setPrivate(person.getRating().isPrivate());","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"lohtianwei"},"content":"        return rating;","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"lohtianwei"},"content":"    public Index getIndex() {","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"lohtianwei"},"content":"        return index;","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"lohtianwei"},"content":"    public EditPersonPrivacy getEpp() {","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"lohtianwei"},"content":"        return epp;","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"lohtianwei"},"content":"    @Override","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"lohtianwei"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"lohtianwei"},"content":"        // short circuit if same object","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"lohtianwei"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"lohtianwei"},"content":"            return true;","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"lohtianwei"},"content":"        // instanceof handles nulls","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"lohtianwei"},"content":"        if (!(other instanceof TogglePrivacyCommand)) {","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"lohtianwei"},"content":"            return false;","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"lohtianwei"},"content":"        // state check","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"lohtianwei"},"content":"        TogglePrivacyCommand e \u003d (TogglePrivacyCommand) other;","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"lohtianwei"},"content":"        return index.equals(e.index)","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"lohtianwei"},"content":"                \u0026\u0026 epp.equals(e.epp);","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"lohtianwei"},"content":"    /**","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"lohtianwei"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"lohtianwei"},"content":"     * corresponding field value of the person.","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"lohtianwei"},"content":"     */","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"lohtianwei"},"content":"    public static class EditPersonPrivacy {","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"lohtianwei"},"content":"        private Boolean privatePhone;","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"lohtianwei"},"content":"        private Boolean privateEmail;","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"lohtianwei"},"content":"        private Boolean privateAddress;","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"lohtianwei"},"content":"        private Boolean privateRemark;","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"lohtianwei"},"content":"        private Boolean privateRating;","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"lohtianwei"},"content":"        public EditPersonPrivacy() {}","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"lohtianwei"},"content":"        /**","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"lohtianwei"},"content":"         * Copy constructor.","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"lohtianwei"},"content":"         * A defensive copy of {@code tags} is used internally.","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"lohtianwei"},"content":"         */","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"lohtianwei"},"content":"        public EditPersonPrivacy (EditPersonPrivacy toCopy) {","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"lohtianwei"},"content":"            this.privateAddress \u003d toCopy.privateAddress;","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"lohtianwei"},"content":"            this.privateEmail \u003d toCopy.privateEmail;","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"lohtianwei"},"content":"            this.privatePhone \u003d toCopy.privatePhone;","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"lohtianwei"},"content":"            this.privateRemark \u003d toCopy.privateRemark;","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"lohtianwei"},"content":"            this.privateRating \u003d toCopy.privateRating;","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"lohtianwei"},"content":"        public void setPrivatePhone(boolean privatePhone) {","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"lohtianwei"},"content":"            this.privatePhone \u003d privatePhone;","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"lohtianwei"},"content":"        public Boolean getPrivatePhone() {","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"lohtianwei"},"content":"            return privatePhone;","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"lohtianwei"},"content":"        public void setPrivateEmail(boolean privateEmail) {","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"lohtianwei"},"content":"            this.privateEmail \u003d privateEmail;","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"lohtianwei"},"content":"        public Boolean getPrivateEmail() {","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"lohtianwei"},"content":"            return privateEmail;","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"lohtianwei"},"content":"        public void setPrivateAddress(boolean privateAddress) {","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"lohtianwei"},"content":"            this.privateAddress \u003d privateAddress;","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"lohtianwei"},"content":"        public Boolean getPrivateAddress() {","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"lohtianwei"},"content":"            return privateAddress;","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"lohtianwei"},"content":"        public void setPrivateRemark(boolean privateRemark) {","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"lohtianwei"},"content":"            this.privateRemark \u003d privateRemark;","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"lohtianwei"},"content":"        public Boolean getPrivateRemark() {","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"lohtianwei"},"content":"            return privateRemark;","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"lohtianwei"},"content":"        public void setPrivateRating(boolean privateRating) {","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"lohtianwei"},"content":"            this.privateRating \u003d privateRating;","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"lohtianwei"},"content":"        public Boolean getPrivateRating() {","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"lohtianwei"},"content":"            return privateRating;","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"lohtianwei"},"content":"        /**","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"lohtianwei"},"content":"         *","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"lohtianwei"},"content":"         * @return true if at least one field is not null","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"lohtianwei"},"content":"         */","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"lohtianwei"},"content":"        public boolean anyNonNullField() {","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"lohtianwei"},"content":"            return CollectionUtil.isAnyNonNull(this.privateAddress, this.privateEmail, this.privatePhone,","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"lohtianwei"},"content":"                    this.privateRating, this.privateRemark);","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"lohtianwei"},"content":"        @Override","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"lohtianwei"},"content":"        public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"lohtianwei"},"content":"            // short circuit if same object","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"lohtianwei"},"content":"            if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"lohtianwei"},"content":"                return true;","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"lohtianwei"},"content":"            }","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"lohtianwei"},"content":"            // instanceof handles nulls","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"lohtianwei"},"content":"            if (!(other instanceof EditPersonPrivacy)) {","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"lohtianwei"},"content":"                return false;","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"lohtianwei"},"content":"            }","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"lohtianwei"},"content":"            // state check","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"lohtianwei"},"content":"            EditPersonPrivacy e \u003d (EditPersonPrivacy) other;","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"lohtianwei"},"content":"            return getPrivatePhone().equals(e.getPrivatePhone())","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"lohtianwei"},"content":"                    \u0026\u0026 getPrivateAddress().equals(e.getPrivateAddress())","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"lohtianwei"},"content":"                    \u0026\u0026 getPrivateEmail().equals(e.getPrivateEmail())","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"lohtianwei"},"content":"                    \u0026\u0026 getPrivateRemark().equals(e.getPrivateRemark())","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"lohtianwei"},"content":"                    \u0026\u0026 getPrivateRating().equals(e.getPrivateRating());","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"lohtianwei"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":394,"-":2}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.core.EventsCenter;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.PersonDetailsChangedNoParamEvent;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.UndoTeamsEvent;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.CommandHistory;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.UndoRedoStack;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Undo the previous {@code UndoableCommand}.","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UndoCommand extends Command {","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lohtianwei"},"content":"    public static final String COMMAND_ALIAS \u003d \"u\";","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Undo success!\";","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_FAILURE \u003d \"No more commands to undo!\";","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public CommandResult execute() throws CommandException {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireAllNonNull(model, undoRedoStack);","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!undoRedoStack.canUndo()) {","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_FAILURE);","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        undoRedoStack.popUndo().undo();","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // @@author Codee","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        EventsCenter.getInstance().post(new UndoTeamsEvent());","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        EventsCenter.getInstance().post(new PersonDetailsChangedNoParamEvent());","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // @@author","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setData(Model model, CommandHistory commandHistory, UndoRedoStack undoRedoStack) {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.undoRedoStack \u003d undoRedoStack;","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":1,"codeeong":3,"-":40}},{"path":"src/main/java/seedu/address/logic/commands/ViewCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.core.EventsCenter;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.HighlightSelectedTeamEvent;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.team.TeamName;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.team.exceptions.TeamNotFoundException;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"//@@author jordancjq","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * View a team identified using it\u0027s team name from the address book.","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ViewCommand extends Command {","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_ALIAS \u003d \"vt\";","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \": Views the team identified by the team name.\\n\"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: TEAM_NAME\\n\"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" Arsenal\";","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PARAMETERS \u003d \"TEAM_NAME\";","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_VIEW_TEAM_SUCCESS \u003d \"Viewing Team: %1$s\";","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final TeamName targetTeam;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ViewCommand(TeamName targetTeam) {","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(targetTeam);","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.targetTeam \u003d targetTeam;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult execute() throws CommandException {","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            EventsCenter.getInstance().post(new HighlightSelectedTeamEvent(targetTeam.toString()));","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            model.updateFilteredPersonList(targetTeam);","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (TeamNotFoundException tnfe) {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_TEAM_NOT_FOUND);","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_VIEW_TEAM_SUCCESS, targetTeam.toString()));","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof ViewCommand // instanceof handles nulls","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.targetTeam.equals(((ViewCommand) other).targetTeam)); // state check","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":2,"-":51}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.AddCommand;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AssignCommand;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"import seedu.address.logic.commands.ChangeThemeCommand;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.ClearCommand;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.Command;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CreateCommand;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.DeleteCommand;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.EditCommand;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.ExitCommand;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.FindCommand;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.HelpCommand;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.HistoryCommand;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.KeyCommand;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.ListCommand;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.RedoCommand;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.RemarkCommand;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.RemoveCommand;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.RenameCommand;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.SelectCommand;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"codeeong"},"content":"import seedu.address.logic.commands.SetCommand;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.SortCommand;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.TogglePrivacyCommand;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.UndoCommand;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ViewCommand;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Parses user input.","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class AddressBookParser {","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lohtianwei"},"content":"    public static final String MESSAGE_RESTRICTED \u003d \"Not allowed! Please unlock MTM before execution.\\n\"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lohtianwei"},"content":"            + KeyCommand.MESSAGE_USAGE;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lohtianwei"},"content":"    public Command parseCommand(String userInput, boolean lockState) throws ParseException {","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lohtianwei"},"content":"        Command res \u003d lowLevelCommand(commandWord, arguments);","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lohtianwei"},"content":"        if (res !\u003d null) {","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lohtianwei"},"content":"            return res;","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lohtianwei"},"content":"        if (lockState) {","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lohtianwei"},"content":"            throw new ParseException(MESSAGE_RESTRICTED);","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        switch (commandWord) {","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lohtianwei"},"content":"        case AddCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lohtianwei"},"content":"        case EditCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        case SelectCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lohtianwei"},"content":"        case SelectCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new SelectCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"lohtianwei"},"content":"        case DeleteCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"lohtianwei"},"content":"        case ClearCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return new ClearCommand();","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        case RemarkCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        case RemarkCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return new RemarkCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        case HistoryCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"lohtianwei"},"content":"        case HistoryCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return new HistoryCommand();","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        case CreateCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        case CreateCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return new CreateCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        case RemoveCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        case RemoveCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return new RemoveCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        case AssignCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        case AssignCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return new AssignCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        case RenameCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        case RenameCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return new RenameCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        case UndoCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"lohtianwei"},"content":"        case UndoCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return new UndoCommand();","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        case RedoCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"lohtianwei"},"content":"        case RedoCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return new RedoCommand();","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"codeeong"},"content":"        case SetCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"codeeong"},"content":"        case SetCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"codeeong"},"content":"            return new SetCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        case TogglePrivacyCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"lohtianwei"},"content":"        case TogglePrivacyCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return new TogglePrivacyCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        default:","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"lohtianwei"},"content":"    //@@author lohtianwei","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"lohtianwei"},"content":"    /**","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"lohtianwei"},"content":"     * Checks for low level command words or aliases that do not violate restriction of a locked MTM.","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"lohtianwei"},"content":"     * Else, control is returned back to original parseCommand method.","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"lohtianwei"},"content":"     * @param commandWord","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"lohtianwei"},"content":"     * @param arguments","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"lohtianwei"},"content":"     */","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"lohtianwei"},"content":"    private Command lowLevelCommand(String commandWord, String arguments) throws ParseException {","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"lohtianwei"},"content":"        switch(commandWord) {","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"lohtianwei"},"content":"        case ChangeThemeCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"lohtianwei"},"content":"        case ChangeThemeCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"lohtianwei"},"content":"            return new ChangeThemeCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"lohtianwei"},"content":"        case FindCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"lohtianwei"},"content":"        case FindCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"lohtianwei"},"content":"            return new FindCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"lohtianwei"},"content":"        case ListCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"lohtianwei"},"content":"        case ListCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"lohtianwei"},"content":"            return new ListCommand();","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"lohtianwei"},"content":"        case KeyCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"lohtianwei"},"content":"        case KeyCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"lohtianwei"},"content":"            return new KeyCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"lohtianwei"},"content":"        case ViewCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"lohtianwei"},"content":"        case ViewCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"lohtianwei"},"content":"            return new ViewCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"lohtianwei"},"content":"        case ExitCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"lohtianwei"},"content":"            return new ExitCommand();","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"lohtianwei"},"content":"        case HelpCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"lohtianwei"},"content":"            return new HelpCommand();","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"lohtianwei"},"content":"        case SortCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"lohtianwei"},"content":"        case SortCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"lohtianwei"},"content":"            return new SortCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"lohtianwei"},"content":"        default:","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"lohtianwei"},"content":"            return null;","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"lohtianwei"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":84,"codeeong":6,"-":93}},{"path":"src/main/java/seedu/address/logic/parser/ChangeThemeCommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"import static seedu.address.logic.commands.ChangeThemeCommand.MESSAGE_USAGE;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"import seedu.address.logic.commands.ChangeThemeCommand;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":" * Parses input arguments and creates a new ThemeCommand object.","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"/** @@author Codee */","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"public class ChangeThemeCommandParser implements Parser\u003cChangeThemeCommand\u003e {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"     * Parses the given (@code String) in the context of a ThemeCommand.","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"     * @return ThemeCommand Object for execution","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"     * @throws ParseException if the user input does not conform the expected format","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"    public ChangeThemeCommand parse(String userInput) throws ParseException {","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"        if (userInput.length() \u003d\u003d 0) {","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codeeong"},"content":"        return new ChangeThemeCommand(userInput);","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":26}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"    public static final Prefix PREFIX_TAG_COLOUR \u003d new Prefix(\"tc/\");","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TEAM_NAME \u003d new Prefix(\"tm/\");","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_INDEX \u003d new Prefix(\"i/\");","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_RATING \u003d new Prefix(\"ra/\");","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_JERSEY_NUMBER \u003d new Prefix(\"j/\");","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_POSITION \u003d new Prefix(\"po/\");","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_AVATAR \u003d new Prefix(\"av/\");","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lohtianwei"},"content":"    public static final Prefix PREFIX_PASSWORD \u003d new Prefix(\"pw/\");","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":1,"codeeong":1,"-":21}},{"path":"src/main/java/seedu/address/logic/parser/KeyCommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lohtianwei"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lohtianwei"},"content":"//@@author lohtianwei","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.KeyCommand;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lohtianwei"},"content":"/**","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lohtianwei"},"content":" * Parses input and creates KeyCommand object with password provided","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lohtianwei"},"content":" */","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lohtianwei"},"content":"public class KeyCommandParser implements Parser\u003cKeyCommand\u003e {","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lohtianwei"},"content":"    /**","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lohtianwei"},"content":"     * Parses the given {@code String} of arguments in the context of the KeyCommand","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lohtianwei"},"content":"     * and returns a KeyCommand object for execution.","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lohtianwei"},"content":"     * @throws ParseException if the user input does not conform the expected format","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lohtianwei"},"content":"     */","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lohtianwei"},"content":"    public KeyCommand parse(String args) throws ParseException {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lohtianwei"},"content":"        String trimmedArgs \u003d args.trim();","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lohtianwei"},"content":"        /*if (trimmedArgs.isEmpty()) {","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lohtianwei"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, KeyCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lohtianwei"},"content":"        }*/","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lohtianwei"},"content":"        String[] argKeywords \u003d trimmedArgs.split(\"\\\\s+\");","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lohtianwei"},"content":"        if (argKeywords.length \u003e 1) {","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lohtianwei"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, KeyCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lohtianwei"},"content":"        return new KeyCommand(argKeywords[0]);","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lohtianwei"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":31}},{"path":"src/main/java/seedu/address/logic/parser/SetCommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG_COLOUR;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"import java.util.stream.Stream;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":"import seedu.address.logic.commands.SetCommand;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":" * This class is to check whether Set Command was input correctly","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"/** @@author Codee */","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"public class SetCommandParser implements Parser\u003cSetCommand\u003e {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"     * Parses the given {@code String} of arguments in the context of the SetCommand","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"     * and returns an SetCommand object for execution.","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"     * @throws ParseException if the user input does not conform the expected format","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"codeeong"},"content":"    public SetCommand parse(String args) throws ParseException {","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"codeeong"},"content":"        ArgumentMultimap argMultimap \u003d","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"codeeong"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TAG, PREFIX_TAG_COLOUR);","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"codeeong"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TAG, PREFIX_TAG_COLOUR)","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codeeong"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"codeeong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SetCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"codeeong"},"content":"        try {","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codeeong"},"content":"            Tag tag \u003d ParserUtil.parseTag(argMultimap.getValue(PREFIX_TAG).get());","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"codeeong"},"content":"            String colour \u003d ParserUtil.parseTagColour(argMultimap.getValue(PREFIX_TAG_COLOUR).get());","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"codeeong"},"content":"            if (!tag.isValidTagColour(colour)) {","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"codeeong"},"content":"                throw new ParseException(","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"codeeong"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, SetCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"codeeong"},"content":"            }","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"codeeong"},"content":"            return new SetCommand(tag, colour);","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"codeeong"},"content":"        } catch (IllegalValueException ive) {","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"codeeong"},"content":"            throw new ParseException(","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"codeeong"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SetCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"codeeong"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"codeeong"},"content":"     * {@code ArgumentMultimap}.","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"codeeong"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"codeeong"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":56}},{"path":"src/main/java/seedu/address/logic/parser/SortCommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lohtianwei"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lohtianwei"},"content":"//@@author lohtianwei","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lohtianwei"},"content":"import java.util.ArrayList;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lohtianwei"},"content":"import java.util.Arrays;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lohtianwei"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.SortCommand;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lohtianwei"},"content":"/**","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lohtianwei"},"content":" * Parses input arguments and creates a new SortCommand object with field and order parameters provided","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lohtianwei"},"content":" */","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lohtianwei"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lohtianwei"},"content":"    public static final List\u003cString\u003e ACCEPTED_FIELDS \u003d new ArrayList\u003c\u003e(Arrays.asList(","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lohtianwei"},"content":"            \"name\", \"email\", \"address\", \"rating\", \"jersey\", \"pos\"));","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lohtianwei"},"content":"    public static final List\u003cString\u003e ACCEPTED_ORDERS \u003d new ArrayList\u003c\u003e(Arrays.asList(","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lohtianwei"},"content":"            \"asc\", \"desc\"));","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lohtianwei"},"content":"    @Override","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lohtianwei"},"content":"    public SortCommand parse(String args) throws ParseException {","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lohtianwei"},"content":"        String trimmedArgs \u003d args.trim();","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lohtianwei"},"content":"        if (trimmedArgs.isEmpty()) {","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lohtianwei"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lohtianwei"},"content":"        //eliminates spaces","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lohtianwei"},"content":"        String[] argKeywords \u003d trimmedArgs.split(\"\\\\s+\");","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lohtianwei"},"content":"        //accounts for caps entries","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lohtianwei"},"content":"        for (int i \u003d 0; i \u003c argKeywords.length; i++) {","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lohtianwei"},"content":"            argKeywords[i] \u003d argKeywords[i].toLowerCase();","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lohtianwei"},"content":"        if (argKeywords.length !\u003d 2) {","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lohtianwei"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lohtianwei"},"content":"        if (!ACCEPTED_FIELDS.contains(argKeywords[0])) {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lohtianwei"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lohtianwei"},"content":"        if (!ACCEPTED_ORDERS.contains(argKeywords[1])) {","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lohtianwei"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lohtianwei"},"content":"        return new SortCommand(argKeywords[0], argKeywords[1]);","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lohtianwei"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":51}},{"path":"src/main/java/seedu/address/logic/parser/TogglePrivacyCommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lohtianwei"},"content":"//@@author lohtianwei","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lohtianwei"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RATING;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.TogglePrivacyCommand;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.TogglePrivacyCommand.EditPersonPrivacy;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lohtianwei"},"content":"/**","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lohtianwei"},"content":" * Parses input arguments and creates a new TogglePrivacyCommand object","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lohtianwei"},"content":" */","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lohtianwei"},"content":"public class TogglePrivacyCommandParser implements Parser\u003cTogglePrivacyCommand\u003e {","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lohtianwei"},"content":"    /**","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lohtianwei"},"content":"     * Parses the given {@code String} of arguments in the context of the TogglePrivacyCommand","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lohtianwei"},"content":"     * and returns an TogglePrivacyCommand object for execution.","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lohtianwei"},"content":"     * @throws ParseException if the user input does not conform the expected format","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lohtianwei"},"content":"     */","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lohtianwei"},"content":"    public TogglePrivacyCommand parse(String args) throws ParseException {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lohtianwei"},"content":"        requireNonNull(args);","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lohtianwei"},"content":"        ArgumentMultimap argMultimap \u003d","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lohtianwei"},"content":"                ArgumentTokenizer.tokenize(args,","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lohtianwei"},"content":"                        PREFIX_REMARK, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_RATING);","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lohtianwei"},"content":"        Index index;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lohtianwei"},"content":"        try {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lohtianwei"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lohtianwei"},"content":"        } catch (IllegalValueException ive) {","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lohtianwei"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TogglePrivacyCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lohtianwei"},"content":"        EditPersonPrivacy epp \u003d new EditPersonPrivacy();","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lohtianwei"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lohtianwei"},"content":"            epp.setPrivatePhone(false);","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lohtianwei"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lohtianwei"},"content":"            epp.setPrivateAddress(false);","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lohtianwei"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lohtianwei"},"content":"            epp.setPrivateEmail(false);","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lohtianwei"},"content":"        if (argMultimap.getValue(PREFIX_REMARK).isPresent()) {","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lohtianwei"},"content":"            epp.setPrivateRemark(false);","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lohtianwei"},"content":"        if (argMultimap.getValue(PREFIX_RATING).isPresent()) {","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lohtianwei"},"content":"            epp.setPrivateRating(false);","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lohtianwei"},"content":"        if (!epp.anyNonNullField()) {","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lohtianwei"},"content":"            throw new ParseException(TogglePrivacyCommand.MESSAGE_NO_FIELDS);","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lohtianwei"},"content":"        return new TogglePrivacyCommand(index, epp);","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lohtianwei"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":67,"-":2}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.UNSPECIFIED_FIELD;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Map;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Objects;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.exceptions.NoPlayerException;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.UniqueTagList;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.team.Team;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.team.TeamName;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.team.UniqueTeamList;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.team.exceptions.DuplicateTeamException;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.team.exceptions.TeamNotFoundException;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .equals comparison)","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final UniqueTagList tags;","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final UniqueTeamList teams;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /*","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is an non-static initialization block, sometimes used to avoid duplication","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *   among constructors.","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    {","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        tags \u003d new UniqueTagList();","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        teams \u003d new UniqueTeamList();","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public AddressBook() {}","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons and Tags in the {@code toBeCopied}","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this();","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    //// list overwrite operations","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) throws DuplicatePersonException {","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setTags(Set\u003cTag\u003e tags) {","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.tags.setTags(tags);","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setTeams(List\u003cTeam\u003e teams) throws DuplicateTeamException {","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.teams.setTeams(teams);","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setTags(new HashSet\u003c\u003e(newData.getTagList()));","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e syncedPersonList \u003d newData.getPersonList().stream()","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .map(this::syncWithMasterTagList)","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        List\u003cTeam\u003e syncedTeamList \u003d newData.getTeamList();","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"            setPersons(syncedPersonList);","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"            setTeams(syncedTeamList);","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        } catch (DuplicatePersonException e) {","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"AddressBooks should not have duplicate persons\");","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        } catch (DuplicateTeamException e) {","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"MTM should not have duplicate teams\");","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //// person-level operations","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Also checks the new person\u0027s tags and updates {@link #tags} with any new tags found,","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * and updates the Tag objects in the person to point to those in {@link #tags}.","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws DuplicatePersonException if an equivalent person already exists.","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) throws DuplicatePersonException {","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Person person \u003d syncWithMasterTagList(p);","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // TODO: the tags master list will be updated even though the below line fails.","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // This can cause the tags master list to have additional tags that are not tagged to any person","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // in the person list.","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        persons.add(person);","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * {@code AddressBook}\u0027s tag list will be updated with the tags of {@code editedPerson}.","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @throws DuplicatePersonException if updating the person\u0027s details causes the person to be equivalent to","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"     *      another existing person in the list.","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @throws PersonNotFoundException if {@code target} could not be found in the list.","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #syncWithMasterTagList(Person)","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void updatePerson(Person target, Person editedPerson)","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throws DuplicatePersonException, PersonNotFoundException {","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Person syncedEditedPerson \u003d syncWithMasterTagList(editedPerson);","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // TODO: the tags master list will be updated even though the below line fails.","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // This can cause the tags master list to have additional tags that are not tagged to any person","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // in the person list.","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (!editedPerson.getTeamName().toString().equals(UNSPECIFIED_FIELD)) {","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"            teams.getTeam(editedPerson.getTeamName()).setPerson(target, editedPerson);","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        persons.setPerson(target, syncedEditedPerson);","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        removeUnusedTags();","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"lohtianwei"},"content":"    //@@author lohtianwei","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"lohtianwei"},"content":"    public void sortPlayersBy(String field, String order) throws NoPlayerException {","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"lohtianwei"},"content":"        persons.sortBy(field, order);","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"lohtianwei"},"content":"    //@@author","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"     *  Updates the master tag list to include tags in {@code person} that are not in the list.","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"     *  @return a copy of this {@code person} such that every tag in this person points to a Tag object in the master","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"     *  list.","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private Person syncWithMasterTagList(Person person) {","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        final UniqueTagList personTags \u003d new UniqueTagList(person.getTags());","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        tags.mergeFrom(personTags);","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // Create map with values \u003d tag object references in the master list","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // used for checking person tag references","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        final Map\u003cTag, Tag\u003e masterTagObjects \u003d new HashMap\u003c\u003e();","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        tags.forEach(tag -\u003e masterTagObjects.put(tag, tag));","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // Rebuild the list of person tags to point to the relevant tags in the master tag list.","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e correctTagReferences \u003d new HashSet\u003c\u003e();","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        personTags.forEach(tag -\u003e correctTagReferences.add(masterTagObjects.get(tag)));","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return new Person(","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"                person.getName(), person.getPhone(), person.getEmail(), person.getAddress(), person.getRemark(),","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"                person.getTeamName(), correctTagReferences, person.getRating(), person.getPosition(),","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"                person.getJerseyNumber(), person.getAvatar());","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * @throws PersonNotFoundException if the {@code key} is not in this {@code AddressBook}.","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public boolean removePerson(Person key) throws PersonNotFoundException {","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        if (persons.remove(key)) {","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        } else {","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"    //// tag-level operations","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void addTag(Tag t) throws UniqueTagList.DuplicateTagException {","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        tags.add(t);","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"codeeong"},"content":"     *","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"codeeong"},"content":"     * Sets the colour of {@code tag}.","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"codeeong"},"content":"    /** @@author Codee */","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"codeeong"},"content":"    public void setTagColour(Tag tag, String colour) {","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"codeeong"},"content":"        for (Tag t : tags) {","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"codeeong"},"content":"            if (t.getTagName().equals(tag.getTagName())) {","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"codeeong"},"content":"                t.changeTagColour(colour);","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"codeeong"},"content":"            }","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"    //@@author","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * Removes {@code tag} from all persons in this {@code AddressBook}.","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void removeTag(Tag tag) {","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"            for (Person person : persons) {","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"                removeTagFromPerson(tag, person);","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"        } catch (PersonNotFoundException pnfe) {","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Impossible: AddressBook should contain this person\");","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"     * Removes {@code tag} from {@code person} in this {@code AddressBook}.","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"     * @throws PersonNotFoundException if the {@code person} is not in this {@code AddressBook}.","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"    private void removeTagFromPerson(Tag tag, Person person) throws PersonNotFoundException {","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e newTags \u003d new HashSet\u003c\u003e(person.getTags());","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"        if (!newTags.remove(tag)) {","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"            return;","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"        Person newPerson \u003d","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"                new Person(person.getName(), person.getPhone(), person.getEmail(), person.getAddress(),","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"                        person.getRemark(), person.getTeamName(), newTags, person.getRating(), person.getPosition(),","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"                        person.getJerseyNumber(), person.getAvatar());","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"            updatePerson(person, newPerson);","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"        } catch (DuplicatePersonException dpe) {","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"AddressBook should not have duplicate person \"","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"                    + \"after updating person\u0027s tag.\");","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"     * Removes all {@code tag} that are not in used by any {@code Person} in this {@code AddressBook}.","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"    private void removeUnusedTags() {","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagsInPersons \u003d persons.asObservableList().stream()","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"                .map(Person::getTags)","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"                .flatMap(Set::stream)","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"        tags.setTags(tagsInPersons);","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"    //@@author jordancjq","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"     * Creates a team in the manager.","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"     * @throws DuplicateTeamException if an equivalent team already exists.","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"    public void createTeam(Team t) throws DuplicateTeamException {","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"        teams.add(t);","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"     * Assigns a {@code person} to a {@code team}.","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"     * @throws TeamNotFoundException if the {@code team} is not found in this {@code AddressBook}.","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"    public void assignPersonToTeam(Person person, TeamName teamName) throws DuplicatePersonException {","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"        teams.assignPersonToTeam(person, teams.getTeam(teamName));","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"        if (!person.getTeamName().toString().equals(UNSPECIFIED_FIELD)) {","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"            try {","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"                removePersonFromTeam(person, person.getTeamName());","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"            } catch (PersonNotFoundException pnfe) {","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"                throw new AssertionError(\"Impossible: Team should contain of this person\");","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"        Person newPersonWithTeam \u003d","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"                new Person(person.getName(), person.getPhone(), person.getEmail(), person.getAddress(),","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"                        person.getRemark(), teamName, person.getTags(), person.getRating(), person.getPosition(),","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"                        person.getJerseyNumber(), person.getAvatar());","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"        if (!person.getTeamName().equals(newPersonWithTeam.getTeamName())) {","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"            try {","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"                updatePerson(person, newPersonWithTeam);","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"            } catch (DuplicatePersonException dpe) {","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"                throw new AssertionError(\"AddressBook should not have duplicate person after assigning team\");","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"            } catch (PersonNotFoundException pnfe) {","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"                throw new AssertionError(\"Impossible: AddressBook should contain this person\");","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"     * Unassigns a {@code person} from team.","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"     * @throws TeamNotFoundException if the {@code teamName} in {@code person} is {@code UNSPECIFIED_FIELD}.","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"    public void unassignPersonFromTeam(Person person) throws TeamNotFoundException {","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"        if (person.getTeamName().toString().equals(UNSPECIFIED_FIELD)) {","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"            throw new TeamNotFoundException(person.getName().toString());","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"        Person newPersonWithTeam \u003d","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"                new Person(person.getName(), person.getPhone(), person.getEmail(), person.getAddress(),","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"                        person.getRemark(), new TeamName(UNSPECIFIED_FIELD), person.getTags(), person.getRating(),","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"                        person.getPosition(), person.getJerseyNumber(), person.getAvatar());","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"            removePersonFromTeam(person, person.getTeamName());","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"        } catch (PersonNotFoundException pnfe) {","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Impossible: Team should contain of this person\");","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"            updatePerson(person, newPersonWithTeam);","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"        } catch (DuplicatePersonException dpe) {","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"AddressBook should not have duplicate person after assigning team\");","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"        } catch (PersonNotFoundException pnfe) {","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Impossible: AddressBook should contain this person\");","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"     * Immediately add a {@code person} to a {@code team}.","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"     * @throws TeamNotFoundException if the {@code team} is not found in this {@code AddressBook}.","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"    public void addPersonToTeam(Person person, TeamName teamName) throws DuplicatePersonException {","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"        teams.assignPersonToTeam(person, teams.getTeam(teamName));","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"     * Removes a {@code person} from a {@code team}.","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"    private void removePersonFromTeam(Person person, TeamName teamName) throws PersonNotFoundException {","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"            teams.removePersonFromTeam(person, teams.getTeam(teamName));","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"        } catch (PersonNotFoundException pnfe) {","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"     * Removes a {@code team} from {@code teams}.","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"    public void removeTeam(TeamName teamName) throws TeamNotFoundException {","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"        if (!teams.contains(teamName)) {","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"            throw new TeamNotFoundException();","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"        Team teamToRemove \u003d teams.getTeam(teamName);","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"        for (Person person : teamToRemove) {","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"            removeTeamFromPerson(person);","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"        teams.remove(teamToRemove);","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"     * Removes {@code teamName} from {@code person} in this {@code Team}.","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"    private void removeTeamFromPerson(Person person) {","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"        Person personWithRemoveTeam \u003d","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"                new Person(person.getName(), person.getPhone(), person.getEmail(), person.getAddress(),","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"                        person.getRemark(), new TeamName(UNSPECIFIED_FIELD), person.getTags(), person.getRating(),","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"                        person.getPosition(), person.getJerseyNumber(), person.getAvatar());","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"            persons.setPerson(person, personWithRemoveTeam);","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"        } catch (DuplicatePersonException dpe) {","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"AddressBook should not have duplicate person after assigning team\");","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"        } catch (PersonNotFoundException pnfe) {","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Impossible: AddressBook should contain this person\");","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"     * Renames {@code Team} with {@code updatedTeamName}.","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"     * @return","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"    public void renameTeam(Team targetTeam, TeamName updatedTeamName) {","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"            List\u003cPerson\u003e renameTeamPersonList \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"            for (Person person : persons) {","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"                if (person.getTeamName().equals(targetTeam.getTeamName())) {","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"                    renameTeamPersonList.add(renameTeamInPerson(person, updatedTeamName, targetTeam));","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"                }","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"            Team updatedTeam \u003d new Team(updatedTeamName, renameTeamPersonList);","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"            teams.setTeam(targetTeam, updatedTeam);","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"        } catch (DuplicateTeamException dte) {","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"AddressBook should not have duplicate team after renaming\");","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"        } catch (TeamNotFoundException tnfe) {","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Impossible: Teams should contain this team\");","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"     * Renames {@code teamName} in {@code person} with {@code teamName}.","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"    private Person renameTeamInPerson(Person person, TeamName teamName, Team targetTeam) {","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"        Person personWithRenameTeam \u003d","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"                new Person(person.getName(), person.getPhone(), person.getEmail(), person.getAddress(),","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"                        person.getRemark(), teamName, person.getTags(), person.getRating(),","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"                        person.getPosition(), person.getJerseyNumber(), person.getAvatar());","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"            persons.setPerson(person, personWithRenameTeam);","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"            return personWithRenameTeam;","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"        } catch (DuplicatePersonException dpe) {","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"AddressBook should not have duplicate person after assigning team\");","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"        } catch (PersonNotFoundException pnfe) {","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Impossible: AddressBook should contain this person\");","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"-"},"content":"    //@@author","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"-"},"content":"    //// util methods","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"        return persons.asObservableList().size() + \" persons, \" + tags.asObservableList().size() +  \" tags\";","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"        // TODO: refine later","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"        return persons.asObservableList();","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"    public ObservableList\u003cTag\u003e getTagList() {","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"        return tags.asObservableList();","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"-"},"content":"    public ObservableList\u003cTeam\u003e getTeamList() {","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"        return teams.asObservableList();","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.persons.equals(((AddressBook) other).persons)","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.tags.equalsOrderInsensitive(((AddressBook) other).tags));","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"-"},"content":"    public int hashCode() {","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"        return Objects.hash(persons, tags);","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":7,"codeeong":13,"-":431}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.exceptions.NoPlayerException;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.team.Team;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.team.TeamName;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.team.exceptions.DuplicateTeamException;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.team.exceptions.TeamNotFoundException;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The API of the Model component.","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Model {","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /** Clears existing backing model and replaces with the provided new data. */","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void resetData(ReadOnlyAddressBook newData);","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /** Deletes the given person. */","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void deletePerson(Person target) throws PersonNotFoundException;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /** Adds the given person */","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    void addPerson(Person person) throws DuplicatePersonException;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws DuplicatePersonException if updating the person\u0027s details causes the person to be equivalent to","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *      another existing person in the list.","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws PersonNotFoundException if {@code target} could not be found in the list.","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    void updatePerson(Person target, Person editedPerson)","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throws DuplicatePersonException, PersonNotFoundException;","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code teamName}.","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(TeamName targetTeam) throws TeamNotFoundException;","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lohtianwei"},"content":"    /**","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lohtianwei"},"content":"     * Sorts players in address book by field in asc or desc order","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lohtianwei"},"content":"     * @param field","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lohtianwei"},"content":"     * @param order","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lohtianwei"},"content":"     */","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lohtianwei"},"content":"    void sortPlayers(String field, String order) throws NoPlayerException;","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lohtianwei"},"content":"    boolean getLockState();","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lohtianwei"},"content":"    UserPrefs getUserPrefs();","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lohtianwei"},"content":"    /** Locks address book from model*/","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lohtianwei"},"content":"    void lockAddressBookModel();","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lohtianwei"},"content":"    /** Unlocks address book from model*/","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lohtianwei"},"content":"    void unlockAddressBookModel();","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /** Removes the given {@code tag} from all {@code Person}s. */","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void deleteTag(Tag tag);","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /** Create the given team */","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    void createTeam(Team team) throws DuplicateTeamException;","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /** Assign person to team */","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    void assignPersonToTeam(Person person, TeamName teamName)","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throws DuplicatePersonException;","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /** Unassign person from team */","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    void unassignPersonFromTeam(Person person) throws TeamNotFoundException;","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /** Removes the given team */","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    void removeTeam(TeamName teamName) throws TeamNotFoundException;","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /** Renames the given team */","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    void renameTeam(Team targetTeam, TeamName teamName);","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"codeeong"},"content":"    /** sets the given {@code tag} to color. */","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"codeeong"},"content":"    boolean setTagColour(Tag tag, String colour);","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"codeeong"},"content":"    /** Returns an unmodifiable view of the team list */","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"codeeong"},"content":"    ObservableList\u003cTeam\u003e getInitTeamList();","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":18,"codeeong":5,"-":78}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.ComponentManager;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.events.model.AddressBookChangedEvent;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.events.ui.RemoveSelectedTeamEvent;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.exceptions.NoPlayerException;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.team.Team;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.team.TeamName;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.team.exceptions.DuplicateTeamException;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.team.exceptions.TeamNotFoundException;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":" * All changes to any model should be synchronized.","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class ModelManager extends ComponentManager implements Model {","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lohtianwei"},"content":"    private final UserPrefs userPrefs;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, UserPrefs userPrefs) {","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        super();","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lohtianwei"},"content":"        this.userPrefs \u003d userPrefs;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public ModelManager() {","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        indicateAddressBookChanged();","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return addressBook;","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /** Raises an event to indicate the model has changed */","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private void indicateAddressBookChanged() {","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        raise(new AddressBookChangedEvent(addressBook));","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public synchronized void deletePerson(Person target) throws PersonNotFoundException {","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        indicateAddressBookChanged();","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public synchronized void addPerson(Person person) throws DuplicatePersonException {","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        indicateAddressBookChanged();","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void updatePerson(Person target, Person editedPerson)","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throws DuplicatePersonException, PersonNotFoundException {","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        addressBook.updatePerson(target, editedPerson);","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        indicateAddressBookChanged();","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"lohtianwei"},"content":"    //@@author lohtianwei","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"lohtianwei"},"content":"    @Override","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"lohtianwei"},"content":"    public void sortPlayers(String field, String order) throws NoPlayerException {","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"lohtianwei"},"content":"        addressBook.sortPlayersBy(field, order);","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"lohtianwei"},"content":"        indicateAddressBookChanged();","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"lohtianwei"},"content":"    public UserPrefs getUserPrefs() {","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"lohtianwei"},"content":"        return userPrefs;","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"lohtianwei"},"content":"    public void lockAddressBookModel() {","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"lohtianwei"},"content":"        getUserPrefs().lockAddressBook();","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"lohtianwei"},"content":"    public void unlockAddressBookModel() {","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"lohtianwei"},"content":"        getUserPrefs().unlockAddressBook();","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"lohtianwei"},"content":"    public boolean getLockState() {","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"lohtianwei"},"content":"        return getUserPrefs().getAddressBookLockState();","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"lohtianwei"},"content":"    //@@author","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"codeeong"},"content":"    @Override","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void deleteTag(Tag tag) {","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        addressBook.removeTag(tag);","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"codeeong"},"content":"        indicateAddressBookChanged();","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    //@@author jordancjq","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public synchronized void createTeam(Team team) throws DuplicateTeamException {","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        addressBook.createTeam(team);","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        indicateAddressBookChanged();","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public synchronized void assignPersonToTeam(Person person, TeamName teamName) throws DuplicatePersonException {","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        addressBook.assignPersonToTeam(person, teamName);","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        indicateAddressBookChanged();","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public synchronized void unassignPersonFromTeam(Person person) throws TeamNotFoundException {","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        addressBook.unassignPersonFromTeam(person);","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        indicateAddressBookChanged();","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public synchronized void removeTeam(TeamName teamName) throws TeamNotFoundException {","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        requireNonNull(teamName);","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        raise(new RemoveSelectedTeamEvent(teamName));","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        addressBook.removeTeam(teamName);","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        indicateAddressBookChanged();","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public synchronized void renameTeam(Team targetTeam, TeamName updatedTeamName) {","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        requireAllNonNull(targetTeam, updatedTeamName);","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        addressBook.renameTeam(targetTeam, updatedTeamName);","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        indicateAddressBookChanged();","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    //@@author Codee","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public boolean setTagColour(Tag tag, String colour) {","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        ObservableList\u003cTag\u003e allTags \u003d addressBook.getTagList();","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        boolean isTagValid \u003d false;","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        for (Tag t : allTags) {","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"            if (t.getTagName().equals(tag.getTagName())) {","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"                isTagValid \u003d true;","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"                break;","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        if (!isTagValid) {","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        addressBook.setTagColour(tag, colour);","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        indicateAddressBookChanged();","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return isTagValid;","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"    //@@author","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"codeeong"},"content":"    @Override","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"codeeong"},"content":"    public ObservableList\u003cTeam\u003e getInitTeamList() {","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"codeeong"},"content":"        return addressBook.getTeamList();","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * {@code addressBook}","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"        return FXCollections.unmodifiableObservableList(filteredPersons);","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"    //@@author jordancjq","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(TeamName targetTeam) throws TeamNotFoundException {","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        requireNonNull(targetTeam);","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        List\u003cTeam\u003e teamList \u003d addressBook.getTeamList();","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        if (teamList.stream().anyMatch(target -\u003e target.getTeamName().equals(targetTeam))) {","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"            filteredPersons.setPredicate(t -\u003e t.getTeamName().equals(targetTeam));","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"        } else {","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"            throw new TeamNotFoundException();","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"    //@@author","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        // short circuit if same object","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"        // state check","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":28,"codeeong":7,"-":197}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lohtianwei"},"content":"import java.nio.charset.StandardCharsets;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Objects;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lohtianwei"},"content":"import com.google.common.hash.Hashing;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class UserPrefs {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"    private String addressBookFilePath \u003d \"data/myteammanager.xml\";","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"    private String addressBookName \u003d \"MyTeamManager\";","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"    private String addressBookTheme \u003d \"DarkTheme.css\";","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lohtianwei"},"content":"    private boolean addressBookLockState \u003d false;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lohtianwei"},"content":"    private String addressBookHashedPass \u003d Hashing.sha256()","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lohtianwei"},"content":"            .hashString(\"ilikesports\", StandardCharsets.UTF_8).toString();","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public UserPrefs() {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.setGuiSettings(500, 500, 0, 0);","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return guiSettings \u003d\u003d null ? new GuiSettings() : guiSettings;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void updateLastUsedGuiSetting(GuiSettings guiSettings) {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void setGuiSettings(double width, double height, int x, int y) {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        guiSettings \u003d new GuiSettings(width, height, x, y);","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public String getAddressBookFilePath() {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(String addressBookFilePath) {","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public String getAddressBookName() {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return addressBookName;","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lohtianwei"},"content":"    //@@author lohtianwei","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lohtianwei"},"content":"    public void lockAddressBook() {","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lohtianwei"},"content":"        this.addressBookLockState \u003d true;","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lohtianwei"},"content":"    public void unlockAddressBook() {","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lohtianwei"},"content":"        this.addressBookLockState \u003d false;","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lohtianwei"},"content":"    public String getAddressBookHashedPass() {","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lohtianwei"},"content":"        return addressBookHashedPass;","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lohtianwei"},"content":"    public boolean getAddressBookLockState() {","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lohtianwei"},"content":"        return this.addressBookLockState;","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    //@@author Codee","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookName(String addressBookName) {","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.addressBookName \u003d addressBookName;","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public String getAddressBookTheme() {","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return addressBookTheme;","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    //@@author","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"codeeong"},"content":"    public void setAddressBookTheme(String addressBookTheme) {","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"codeeong"},"content":"        this.addressBookTheme \u003d addressBookTheme;","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return Objects.equals(guiSettings, o.guiSettings)","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(addressBookFilePath, o.addressBookFilePath)","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"lohtianwei"},"content":"                \u0026\u0026 Objects.equals(addressBookName, o.addressBookName)","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"lohtianwei"},"content":"                \u0026\u0026 Objects.equals(addressBookHashedPass, o.addressBookHashedPass)","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"lohtianwei"},"content":"                \u0026\u0026 Objects.equals(addressBookLockState, o.addressBookLockState);","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public int hashCode() {","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath, addressBookName);","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings.toString());","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        sb.append(\"\\nAddressBook name : \" + addressBookName);","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"lohtianwei"},"content":"        sb.append(\"\\nPassword: \" + addressBookHashedPass);","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"lohtianwei"},"content":"        sb.append(\"\\nLock State: \" + Boolean.toString(this.addressBookLockState));","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return sb.toString();","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":28,"codeeong":9,"-":80}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.UNSPECIFIED_FIELD;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Address {","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADDRESS_CONSTRAINTS \u003d","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Person addresses can take any values, and it should not be blank\";","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_VALIDATION_REGEX \u003d \"[^\\\\s].*\";","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String value;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private boolean isPrivate;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param address A valid address.","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Address(String address) {","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(address);","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_ADDRESS_CONSTRAINTS);","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.value \u003d address;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.isPrivate \u003d false;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lohtianwei"},"content":"    public Address(String address, boolean isPrivate) {","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lohtianwei"},"content":"        this(address);","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lohtianwei"},"content":"        this.setPrivate(isPrivate);","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid person email.","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return test.matches(ADDRESS_VALIDATION_REGEX) || test.equals(UNSPECIFIED_FIELD);","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (isPrivate) {","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return \"\u003cPrivate Address\u003e\";","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value;","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lohtianwei"},"content":"    public boolean isPrivate() {","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lohtianwei"},"content":"        return isPrivate;","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void togglePrivacy() {","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.isPrivate \u003d isPrivate ? false : true;","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setPrivate(boolean isPrivate) {","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.isPrivate \u003d isPrivate;","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.value.equals(((Address) other).value)); // state check","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int hashCode() {","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return value.hashCode();","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":8,"-":73}},{"path":"src/main/java/seedu/address/model/person/Avatar.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.UNSPECIFIED_FIELD;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.File;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.IOException;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.StandardCopyOption;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"//@@author lithiumlkid","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Represents a Player\u0027s avatar in the address book. Contains filepath to avatar image file.","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAvatar(String)}","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class Avatar {","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_AVATAR_CONSTRAINTS \u003d","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \"Please specify the absolute filepath for the avatar image eg. av/C:\\\\image.png\\n (for Windows), \"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"av//User/username/path/to/image.jpg (for MacOS). \"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Image file should be 200x200 and in jpg or png format\";","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String AVATAR_VALIDATION_PATTERN \u003d \"([^\\\\s]+(\\\\.(?i)(jpg|png))$)\";","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private String value;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs an {@code Avatar}.","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param avatar A valid avatar.","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Avatar(String avatar) {","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(avatar);","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        checkArgument(isValidAvatar(avatar), MESSAGE_AVATAR_CONSTRAINTS);","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.value \u003d avatar;","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid player\u0027s avatar.","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static boolean isValidAvatar(String test) {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Pattern pattern \u003d Pattern.compile(AVATAR_VALIDATION_PATTERN);","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Matcher matcher \u003d pattern.matcher(test);","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return matcher.matches() || test.equals(UNSPECIFIED_FIELD);","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /*","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"                || (other instanceof Avatar // instanceof handles nulls","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.value.equals(((Avatar) other).value)); // state check","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    */","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Copies the image file from file path entered into images/ and renames it as [name].png","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * and saves the file path in value","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @param player player\u0027s avatar image filepath string","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @throws IOException  thrown when file not found","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setFilePath(String player) throws IOException {","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (value.equals(\"\u003cUNSPECIFIED\u003e\")) {","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return;","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        final File file \u003d new File(value);","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Path dest \u003d new File(\"images/\" + player.replaceAll(\"\\\\s+\", \"\") + \".png\").toPath();","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Files.createDirectories(Paths.get(\"images\")); // Creates missing directories if any","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Files.copy(file.toPath(), dest, StandardCopyOption.REPLACE_EXISTING);","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.value \u003d dest.toString();","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public String getValue() {","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return value;","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static void setUpPlaceholderForTest() {","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"codeeong"},"content":"            Files.copy(Avatar.class.getResourceAsStream(\"/images/placeholder_test.png\"),","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"codeeong"},"content":"                    Paths.get(\"images/placeholder_test.png\"), StandardCopyOption.REPLACE_EXISTING);","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"            LogsCenter.getLogger(Avatar.class).warning(\"placeholder image file missing\");","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"                || (other instanceof Avatar // instanceof handles nulls","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.value.equals(((Avatar) other).value)); // state check","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public int hashCode() {","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return value.hashCode();","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":2,"-":108}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static  final String SPECIAL_CHARACTERS \u003d \"!#$%\u0026\u0027*+/\u003d?`{|}~^.-\";","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EMAIL_CONSTRAINTS \u003d \"Person emails should be of the format local-part@domain \"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \") .\\n\"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. \"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    - be at least 2 characters long\\n\"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    - start and end with alphanumeric characters\\n\"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - consist of alphanumeric characters, a period or a hyphen for the characters in between, if any.\";","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^[\\\\w\" + SPECIAL_CHARACTERS + \"]+\";","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_FIRST_CHARACTER_REGEX \u003d \"[^\\\\W_]\"; // alphanumeric characters except underscore","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_MIDDLE_REGEX \u003d \"[a-zA-Z0-9.-]*\"; // alphanumeric, period and hyphen","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_CHARACTER_REGEX \u003d \"[^\\\\W_]$\";","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String EMAIL_VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + DOMAIN_FIRST_CHARACTER_REGEX + DOMAIN_MIDDLE_REGEX + DOMAIN_LAST_CHARACTER_REGEX;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public final String value;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private boolean isPrivate;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Email(String email) {","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(email);","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_EMAIL_CONSTRAINTS);","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.value \u003d email;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.isPrivate \u003d false;","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lohtianwei"},"content":"    public Email(String email, boolean isPrivate) {","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lohtianwei"},"content":"        this(email);","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lohtianwei"},"content":"        this.setPrivate(isPrivate);","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid person email.","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return test.matches(EMAIL_VALIDATION_REGEX);","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (isPrivate) {","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return \"\u003cPrivate Email\u003e\";","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return value;","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lohtianwei"},"content":"    public boolean isPrivate() {","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lohtianwei"},"content":"        return isPrivate;","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void togglePrivacy() {","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.isPrivate \u003d isPrivate ? false : true;","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setPrivate(boolean isPrivate) {","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.isPrivate \u003d isPrivate;","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.value.equals(((Email) other).value)); // state check","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public int hashCode() {","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return value.hashCode();","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":8,"-":81}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.UNSPECIFIED_FIELD;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Phone {","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PHONE_CONSTRAINTS \u003d","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \"Phone numbers can only contain numbers, and should be at least 3 digits long\";","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String PHONE_VALIDATION_REGEX \u003d \"\\\\d{3,}\";","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String value;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private boolean isPrivate;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_PHONE_CONSTRAINTS);","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.value \u003d phone;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.isPrivate \u003d false;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lohtianwei"},"content":"    public Phone(String phone, boolean isPrivate) {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lohtianwei"},"content":"        this(phone);","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lohtianwei"},"content":"        this.setPrivate(isPrivate);","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid person phone number.","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return test.matches(PHONE_VALIDATION_REGEX) || test.equals(UNSPECIFIED_FIELD);","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (isPrivate) {","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            return \"\u003cPrivate Phone\u003e\";","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return value;","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lohtianwei"},"content":"    public boolean isPrivate() {","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lohtianwei"},"content":"        return isPrivate;","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void togglePrivacy() {","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.isPrivate \u003d isPrivate ? false : true;","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setPrivate(boolean isPrivate) {","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.isPrivate \u003d isPrivate;","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.value.equals(((Phone) other).value)); // state check","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public int hashCode() {","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return value.hashCode();","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":8,"-":68}},{"path":"src/main/java/seedu/address/model/person/Rating.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.UNSPECIFIED_FIELD;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"//@@author lithiumlkid","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a Player\u0027s rating in the address book.","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidRating(String)}","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Rating {","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_RATING_CONSTRAINTS \u003d","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \"Player\u0027s rating should be an integer from 0 - 5.\";","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String RATING_VALIDATION_REGEX \u003d \"[0-5]\";","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public final String value;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lohtianwei"},"content":"    private boolean isPrivate;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Rating}.","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param rating A valid rating.","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Rating(String rating) {","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(rating);","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidRating(rating), MESSAGE_RATING_CONSTRAINTS);","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.value \u003d rating;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lohtianwei"},"content":"    public Rating(String rating, boolean isPrivate) {","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lohtianwei"},"content":"        this(rating);","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lohtianwei"},"content":"        this.setPrivate(isPrivate);","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid player\u0027s rating.","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static boolean isValidRating(String test) {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return test.matches(RATING_VALIDATION_REGEX) || test.equals(UNSPECIFIED_FIELD);","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lohtianwei"},"content":"        if (isPrivate) {","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lohtianwei"},"content":"            return \"\u003cPrivate Rating\u003e\";","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value;","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lohtianwei"},"content":"    public boolean isPrivate() {","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lohtianwei"},"content":"        return isPrivate;","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lohtianwei"},"content":"    public void togglePrivacy() {","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lohtianwei"},"content":"        this.isPrivate \u003d isPrivate ? false : true;","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lohtianwei"},"content":"    public void setPrivate(boolean isPrivate) {","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lohtianwei"},"content":"        this.isPrivate \u003d isPrivate;","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"                || (other instanceof Rating // instanceof handles nulls","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.value.equals(((Rating) other).value)); // state check","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public int hashCode() {","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return value.hashCode();","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":21,"-":56}},{"path":"src/main/java/seedu/address/model/person/Remark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"//@@author jordancjq","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s remark in the address book.","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is always valid}","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Remark {","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_REMARK_CONSTRAINTS \u003d","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Remark can contain any values, can even be blank\";","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String value;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private boolean isPrivate;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Remark}","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param remark Any remark","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Remark(String remark) {","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(remark);","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.value \u003d remark;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.isPrivate \u003d false;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lohtianwei"},"content":"    public Remark(String remark, boolean isPrivate) {","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lohtianwei"},"content":"        this(remark);","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lohtianwei"},"content":"        this.setPrivate(isPrivate);","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (isPrivate) {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            return \"\u003cPrivate Remarks\u003e\";","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return value;","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lohtianwei"},"content":"    public boolean isPrivate() {","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lohtianwei"},"content":"        return isPrivate;","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void togglePrivacy() {","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.isPrivate \u003d isPrivate ? false : true;","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setPrivate(boolean isPrivate) {","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.isPrivate \u003d isPrivate;","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"                || (other instanceof Remark // instanceof handles nulls","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.value.equals(((Remark) other).value)); // state check","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public int hashCode() {","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return value.hashCode();","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":8,"-":57}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lohtianwei"},"content":"import java.util.Collection;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lohtianwei"},"content":"import java.util.Collections;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lohtianwei"},"content":"import java.util.Comparator;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lohtianwei"},"content":"import java.util.Iterator;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lohtianwei"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.exceptions.NoPlayerException;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" *","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" * @see Person#equals(Object)","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" * @see CollectionUtil#elementsAreUnique(Collection)","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return internalList.contains(toCheck);","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DuplicatePersonException if the person to add is a duplicate of an existing person in the list.","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) throws DuplicatePersonException {","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DuplicatePersonException if the replacement is equivalent to another existing person in the list.","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws PersonNotFoundException if {@code target} could not be found in the list.","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson)","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throws DuplicatePersonException, PersonNotFoundException {","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!target.equals(editedPerson) \u0026\u0026 internalList.contains(editedPerson)) {","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws PersonNotFoundException if no such person could be found in the list.","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public boolean remove(Person toRemove) throws PersonNotFoundException {","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        final boolean personFoundAndDeleted \u003d internalList.remove(toRemove);","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!personFoundAndDeleted) {","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return personFoundAndDeleted;","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.internalList.setAll(replacement.internalList);","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) throws DuplicatePersonException {","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final UniquePersonList replacement \u003d new UniquePersonList();","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        for (final Person person : persons) {","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"            replacement.add(person);","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        setPersons(replacement);","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asObservableList() {","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return FXCollections.unmodifiableObservableList(internalList);","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"lohtianwei"},"content":"    //@@author lohtianwei","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"lohtianwei"},"content":"    /**","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"lohtianwei"},"content":"     * Sorts players by selected field in asc or desc order.","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"lohtianwei"},"content":"     * @return","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"lohtianwei"},"content":"     */","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"lohtianwei"},"content":"    public void sortBy(String field, String order) throws NoPlayerException {","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"lohtianwei"},"content":"        if (internalList.size() \u003c 1) {","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"lohtianwei"},"content":"            throw new NoPlayerException();","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"lohtianwei"},"content":"        Comparator\u003cPerson\u003e comparator \u003d null;","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"lohtianwei"},"content":"        Comparator\u003cPerson\u003e nameComparator \u003d new Comparator\u003cPerson\u003e() {","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"lohtianwei"},"content":"            @Override","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"lohtianwei"},"content":"            public int compare(Person p1, Person p2) {","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"lohtianwei"},"content":"                return p1.getName().fullName.compareTo(p2.getName().fullName);","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"lohtianwei"},"content":"            }","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"lohtianwei"},"content":"        };","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"lohtianwei"},"content":"        Comparator\u003cPerson\u003e jerseyComparator \u003d new Comparator\u003cPerson\u003e() {","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"lohtianwei"},"content":"            @Override","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"lohtianwei"},"content":"            public int compare(Person p1, Person p2) {","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"lohtianwei"},"content":"                return p1.getJerseyNumber().value.compareTo(p2.getJerseyNumber().value);","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"lohtianwei"},"content":"            }","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"lohtianwei"},"content":"        };","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"lohtianwei"},"content":"        Comparator\u003cPerson\u003e ratingComparator \u003d new Comparator\u003cPerson\u003e() {","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"lohtianwei"},"content":"            @Override","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"lohtianwei"},"content":"            public int compare(Person p1, Person p2) {","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"lohtianwei"},"content":"                return p1.getRating().toString().compareTo(p2.getRating().toString());","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"lohtianwei"},"content":"            }","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"lohtianwei"},"content":"        };","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"lohtianwei"},"content":"        Comparator\u003cPerson\u003e posComparator \u003d new Comparator\u003cPerson\u003e() {","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"lohtianwei"},"content":"            @Override","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"lohtianwei"},"content":"            public int compare(Person p1, Person p2) {","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"lohtianwei"},"content":"                return p1.getPosition().value.compareTo(p2.getPosition().value);","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"lohtianwei"},"content":"            }","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"lohtianwei"},"content":"        };","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"lohtianwei"},"content":"        Comparator\u003cPerson\u003e emailComparator \u003d new Comparator\u003cPerson\u003e() {","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"lohtianwei"},"content":"            @Override","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"lohtianwei"},"content":"            public int compare(Person p1, Person p2) {","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"lohtianwei"},"content":"                return p1.getEmail().toString().compareTo(p2.getEmail().toString());","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"lohtianwei"},"content":"            }","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"lohtianwei"},"content":"        };","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"lohtianwei"},"content":"        Comparator\u003cPerson\u003e addressComparator \u003d new Comparator\u003cPerson\u003e() {","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"lohtianwei"},"content":"            @Override","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"lohtianwei"},"content":"            public int compare(Person p1, Person p2) {","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"lohtianwei"},"content":"                return p1.getAddress().toString().compareTo(p2.getAddress().toString());","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"lohtianwei"},"content":"            }","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"lohtianwei"},"content":"        };","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"lohtianwei"},"content":"        switch (field) {","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"lohtianwei"},"content":"        case \"name\":","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"lohtianwei"},"content":"            comparator \u003d nameComparator;","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"lohtianwei"},"content":"            break;","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"lohtianwei"},"content":"        case \"jersey\":","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"lohtianwei"},"content":"            comparator \u003d jerseyComparator;","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"lohtianwei"},"content":"            break;","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"lohtianwei"},"content":"        case \"pos\":","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"lohtianwei"},"content":"            comparator \u003d posComparator;","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"lohtianwei"},"content":"            break;","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"lohtianwei"},"content":"        case \"rating\":","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"lohtianwei"},"content":"            comparator \u003d ratingComparator;","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"lohtianwei"},"content":"            break;","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"lohtianwei"},"content":"        case \"email\":","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"lohtianwei"},"content":"            comparator \u003d emailComparator;","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"lohtianwei"},"content":"            break;","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"lohtianwei"},"content":"        case \"address\":","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"lohtianwei"},"content":"            comparator \u003d addressComparator;","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"lohtianwei"},"content":"            break;","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"lohtianwei"},"content":"        default:","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"lohtianwei"},"content":"            throw new AssertionError(\"Invalid field parameter entered...\\n\");","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"lohtianwei"},"content":"        switch (order) {","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"lohtianwei"},"content":"        case \"asc\":","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"lohtianwei"},"content":"            Collections.sort(internalList, comparator);","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"lohtianwei"},"content":"            break;","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"lohtianwei"},"content":"        case \"desc\":","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"lohtianwei"},"content":"            Collections.sort(internalList, Collections.reverseOrder(comparator));","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"lohtianwei"},"content":"            break;","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"lohtianwei"},"content":"        default:","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"lohtianwei"},"content":"            throw new AssertionError(\"Invalid field parameter entered...\\n\");","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"lohtianwei"},"content":"    //@@author","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"        return internalList.iterator();","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"                        \u0026\u0026 this.internalList.equals(((UniquePersonList) other).internalList));","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public int hashCode() {","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":105,"-":118}},{"path":"src/main/java/seedu/address/model/person/exceptions/NoPlayerException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lohtianwei"},"content":"package seedu.address.model.person.exceptions;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lohtianwei"},"content":"/**","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lohtianwei"},"content":" * Singals that the operation is unable to sort due to no players in book.","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lohtianwei"},"content":" */","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lohtianwei"},"content":"public class NoPlayerException extends Exception {","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lohtianwei"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":7}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"    public static final String MESSAGE_TAG_CONSTRAINTS \u003d \"Tags names should be a string\";","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"    public static final String MESSAGE_TAG_COLOUR_CONSTRAINTS \u003d \"Tag colours should be one of these colours:\"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"        + \"teal, red, yellow, blue, orange, brown, green, pink, black, grey\";","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String TAG_VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"    private static final String[] TAG_COLOR_STYLES \u003d","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"        { \"teal\", \"red\", \"yellow\", \"blue\", \"orange\", \"brown\", \"green\", \"pink\", \"black\", \"grey\" };","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public final String tagName;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"    private String tagColour;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_TAG_CONSTRAINTS);","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codeeong"},"content":"        this.tagColour \u003d \"teal\";","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"codeeong"},"content":"     * Overloaded constructor for a {@code Tag}.","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codeeong"},"content":"     *","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"codeeong"},"content":"     * @param tagName A valid tag name","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"codeeong"},"content":"     * @param tagColour A valid tag colour.","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"codeeong"},"content":"    public Tag(String tagName, String tagColour) {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"codeeong"},"content":"        requireNonNull(tagName);","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"codeeong"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_TAG_CONSTRAINTS);","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"codeeong"},"content":"        this.tagName \u003d tagName;","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"codeeong"},"content":"        this.tagColour \u003d tagColour;","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"codeeong"},"content":"    public String getTagName() {","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"codeeong"},"content":"        return this.tagName;","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"codeeong"},"content":"     * Returns true if a given string is a valid tag name.","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"codeeong"},"content":"    public static boolean isValidTagName(String test) {","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"codeeong"},"content":"        return test.matches(TAG_VALIDATION_REGEX);","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"codeeong"},"content":"    /** @@author Codee */","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"codeeong"},"content":"    public String getTagColour() {","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"codeeong"},"content":"        return this.tagColour;","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"codeeong"},"content":"     * Changes the {@code tagColour} for {@code tagName}\u0027s label","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"codeeong"},"content":"    public void changeTagColour(String colour) {","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"codeeong"},"content":"        this.tagColour \u003d colour;","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"codeeong"},"content":"     * Returns true if a given string is a valid tag colour.","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"codeeong"},"content":"    public static boolean isValidTagColour(String testColour) {","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"codeeong"},"content":"        for (String tcs : TAG_COLOR_STYLES) {","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"codeeong"},"content":"            if (testColour.equals(tcs)) {","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"codeeong"},"content":"                return true;","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"codeeong"},"content":"            }","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"codeeong"},"content":"        return false;","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    //@@author","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.tagName.equals(((Tag) other).tagName)); // state check","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public int hashCode() {","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":54,"-":49}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Avatar;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.JerseyNumber;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Position;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Rating;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Remark;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.team.Team;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.team.TeamName;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.team.exceptions.DuplicateTeamException;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new Person[] {","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Aaron Ramsey\"), new Phone(\"87438807\"), new Email(\"aramsey@example.com\"),","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"codeeong"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), new Remark(\"Sign him for one more year\"),","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codeeong"},"content":"                new TeamName(\"Arsenal\"),","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"                getTagSet(\"redCard\"), new Rating(\"3\"), new Position(\"1\"), new JerseyNumber(\"2\"),","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Hector Moruno\"), new Phone(\"99272758\"), new Email(\"hectorm@example.com\"),","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"codeeong"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new Remark(\"\"), new TeamName(\"Arsenal\"),","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"codeeong"},"content":"                getTagSet(\"fastRunner\", \"goodAttitude\"), new Rating(\"1\"), new Position(\"1\"), new JerseyNumber(\"2\"),","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Cesc Fabregas\"), new Phone(\"93210283\"), new Email(\"cescfabregas@example.com\"),","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"codeeong"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new Remark(\"\"), new TeamName(\"Chelsea\"),","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"                getTagSet(\"yellowCard\"), new Rating(\"4\"), new Position(\"1\"), new JerseyNumber(\"2\"),","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"codeeong"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new Remark(\"\"), new TeamName(\"Chelsea\"),","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"codeeong"},"content":"                    getTagSet(\"yellowCard\"), new Rating(\"0\"), new Position(\"1\"), new JerseyNumber(\"2\"),","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"codeeong"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Ospina\"), new Phone(\"99272758\"), new Email(\"Ospina@arsenal.com\"),","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"codeeong"},"content":"                    new Address(\"70 Jurong Central Circle\"), new Remark(\"\"), new TeamName(\"Arsenal\"),","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"codeeong"},"content":"                    getTagSet(\"fastRunner\", \"goodAttitude\"), new Rating(\"1\"), new Position(\"1\"), new JerseyNumber(\"22\"),","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"codeeong"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Cech\"), new Phone(\"93210283\"), new Email(\"cech@arsenal.com\"),","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"codeeong"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new Remark(\"\"), new TeamName(\"Chelsea\"),","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"codeeong"},"content":"                    getTagSet(\"yellowCard\"), new Rating(\"4\"), new Position(\"1\"), new JerseyNumber(\"2\"),","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"codeeong"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Mertesacker\"), new Phone(\"95432223\"), new Email(\"mertesacker@arsenal.com\"),","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"codeeong"},"content":"                    new Address(\"Blk 430 Pasir Ris Street 33, #12-26\"), new Remark(\"\"),","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"codeeong"},"content":"                    new TeamName(\"Arsenal\"), getTagSet(\"injured\"),","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"codeeong"},"content":"                    new Rating(\"0\"), new Position(\"1\"), new JerseyNumber(\"23\"),","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"codeeong"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Koscielny\"), new Phone(\"92352021\"), new Email(\"koscielny@example.com\"),","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"codeeong"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"), new Remark(\"\"), new TeamName(\"Arsenal\"),","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"codeeong"},"content":"                    getTagSet(\"badAttitude\"),","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"codeeong"},"content":"                    new Rating(\"0\"), new Position(\"1\"), new JerseyNumber(\"2\"),","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"codeeong"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Holding\"), new Phone(\"92624417\"), new Email(\"holding@example.com\"),","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"codeeong"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new Remark(\"\"), new TeamName(\"Arsenal\"),","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"codeeong"},"content":"                    getTagSet(\"fastRunner\"), new Rating(\"0\"), new Position(\"1\"), new JerseyNumber(\"7\"),","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"codeeong"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Monreal\"), new Phone(\"99272758\"), new Email(\"monreal@arsenal.com\"),","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"codeeong"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new Remark(\"\"), new TeamName(\"Arsenal\"),","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"codeeong"},"content":"                    getTagSet(\"fastRunner\", \"goodAttitude\"), new Rating(\"1\"), new Position(\"1\"), new JerseyNumber(\"2\"),","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"codeeong"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Mustafi\"), new Phone(\"93215483\"), new Email(\"mustafi@arsenal.com\"),","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"codeeong"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new Remark(\"\"), new TeamName(\"Arsenal\"),","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"codeeong"},"content":"                    getTagSet(\"yellowCard\"), new Rating(\"4\"), new Position(\"1\"), new JerseyNumber(\"4\"),","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"codeeong"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Chambers\"), new Phone(\"91031282\"), new Email(\"chambers@arsenal.com\"),","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"codeeong"},"content":"                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new Remark(\"\"),","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"codeeong"},"content":"                    new TeamName(\"Arsenal\"), getTagSet(\"injured\"),","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"codeeong"},"content":"                    new Rating(\"0\"), new Position(\"1\"), new JerseyNumber(\"2\"),","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"codeeong"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Chambers\"), new Phone(\"92492021\"), new Email(\"chambers@arsenal.com\"),","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"codeeong"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"), new Remark(\"\"), new TeamName(\"Arsenal\"),","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"codeeong"},"content":"                    getTagSet(\"badAttitude\"),","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"codeeong"},"content":"                    new Rating(\"0\"), new Position(\"1\"), new JerseyNumber(\"2\"),","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"codeeong"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new Remark(\"\"),","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"                    new TeamName(\"Chelsea\"), getTagSet(\"injured\"),","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"                    new Rating(\"0\"), new Position(\"1\"), new JerseyNumber(\"2\"),","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Irfan Fandi\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"codeeong"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), new Remark(\"\"), new TeamName(\"Chelsea\"),","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"codeeong"},"content":"                getTagSet(\"badAttitude\"),","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    new Rating(\"0\"), new Position(\"1\"), new JerseyNumber(\"2\"),","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Mavropanos\"), new Phone(\"92624417\"), new Email(\"mavropanos@arsenal.com\"),","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"codeeong"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new Remark(\"\"), new TeamName(\"Chelsea\"),","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"codeeong"},"content":"                    getTagSet(\"yellowCard\"), new Rating(\"0\"), new Position(\"1\"), new JerseyNumber(\"98\"),","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"codeeong"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Kolasinac\"), new Phone(\"99272758\"), new Email(\"kolasinac@arsenal.com\"),","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"codeeong"},"content":"                    new Address(\"70 Jurong Central Circle\"), new Remark(\"\"), new TeamName(\"Arsenal\"),","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"codeeong"},"content":"                    getTagSet(\"fastRunner\", \"goodAttitude\"), new Rating(\"1\"), new Position(\"2\"), new JerseyNumber(\"52\"),","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"codeeong"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Mkhitaryan\"), new Phone(\"93210283\"), new Email(\"mkhitaryan@arsenal.com\"),","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"codeeong"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new Remark(\"\"), new TeamName(\"Arsenal\"),","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"codeeong"},"content":"                    getTagSet(\"yellowCard\"), new Rating(\"4\"), new Position(\"1\"), new JerseyNumber(\"2\"),","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"codeeong"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Wilshere\"), new Phone(\"95432223\"), new Email(\"wilshere@arsenal.com\"),","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"codeeong"},"content":"                    new Address(\"Blk 430 Pasir Ris Street 33, #12-26\"), new Remark(\"\"),","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"codeeong"},"content":"                    new TeamName(\"Arsenal\"), getTagSet(\"injured\"),","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"codeeong"},"content":"                    new Rating(\"0\"), new Position(\"1\"), new JerseyNumber(\"23\"),","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"codeeong"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Ozil\"), new Phone(\"92352021\"), new Email(\"ozil@example.com\"),","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"codeeong"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"), new Remark(\"\"), new TeamName(\"Arsenal\"),","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"codeeong"},"content":"                    getTagSet(\"badAttitude\"),","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"codeeong"},"content":"                    new Rating(\"0\"), new Position(\"1\"), new JerseyNumber(\"2\"),","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"codeeong"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Xhaka\"), new Phone(\"92624417\"), new Email(\"xhaka@example.com\"),","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"codeeong"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new Remark(\"\"), new TeamName(\"Arsenal\"),","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"codeeong"},"content":"                    getTagSet(\"fastRunner\"), new Rating(\"0\"), new Position(\"1\"), new JerseyNumber(\"7\"),","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"codeeong"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        };","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    //@@author Codee","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static Team[] getSampleTeams()  {","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return new Team[] {","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"            new Team(new TeamName(\"Arsenal\")),","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"            new Team(new TeamName(\"Chelsea\"))","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        };","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    //@@author","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"            AddressBook sampleAb \u003d new AddressBook();","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"            //@@author Codee","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"            for (Team sampleTeam : getSampleTeams()) {","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"                sampleAb.createTeam(sampleTeam);","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"            //@@author","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"            for (Person samplePerson : getSamplePersons()) {","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"                sampleAb.addPerson(samplePerson);","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"                sampleAb.addPersonToTeam(samplePerson, samplePerson.getTeamName());","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"            return sampleAb;","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } catch (DuplicatePersonException e) {","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"sample data cannot contain duplicate persons\", e);","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"codeeong"},"content":"        } catch (DuplicateTeamException e) {","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"codeeong"},"content":"            throw new AssertionError(\" sample data cannot contain duplicate teams\", e);","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        HashSet\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        for (String s : strings) {","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"            tags.add(new Tag(s));","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return tags;","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":86,"-":83}},{"path":"src/main/java/seedu/address/storage/XmlAdaptedPerson.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javax.xml.bind.annotation.XmlElement;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Avatar;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.JerseyNumber;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Position;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Rating;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Remark;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.team.TeamName;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" * JAXB-friendly version of the Person.","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class XmlAdaptedPerson {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @XmlElement(required \u003d true)","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private String name;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @XmlElement(required \u003d true)","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private String phone;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @XmlElement(required \u003d true)","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Boolean phonePrivacy;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @XmlElement(required \u003d true)","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private String email;","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @XmlElement(required \u003d true)","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Boolean emailPrivacy;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @XmlElement(required \u003d true)","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private String address;","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @XmlElement(required \u003d true)","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Boolean addressPrivacy;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @XmlElement(required \u003d true)","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private String remark;","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @XmlElement(required \u003d true)","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private Boolean remarkPrivacy;","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @XmlElement(required \u003d true)","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private String teamName;","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @XmlElement(required \u003d true)","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private String rating;","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @XmlElement(required \u003d true)","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lohtianwei"},"content":"    private Boolean ratingPrivacy;","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lohtianwei"},"content":"    @XmlElement(required \u003d true)","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private String position;","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @XmlElement(required \u003d true)","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private String jerseyNumber;","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @XmlElement(required \u003d true)","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private String avatar;","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @XmlElement","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private List\u003cXmlAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Constructs an XmlAdaptedPerson.","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * This is the no-arg constructor that is required by JAXB.","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public XmlAdaptedPerson() {}","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Constructs an {@code XmlAdaptedPerson} with the given person details.","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public XmlAdaptedPerson(String name, String phone, String email, String address, List\u003cXmlAdaptedTag\u003e tagged) {","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.name \u003d name;","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.email \u003d email;","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.address \u003d address;","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"lohtianwei"},"content":"        this.remarkPrivacy \u003d false;","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lohtianwei"},"content":"        this.phonePrivacy \u003d false;","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"lohtianwei"},"content":"        this.addressPrivacy \u003d false;","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lohtianwei"},"content":"        this.emailPrivacy \u003d false;","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"            this.tagged \u003d new ArrayList\u003c\u003e(tagged);","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Converts a given Person into this class for JAXB use.","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created XmlAdaptedPerson","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public XmlAdaptedPerson(Person source) {","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        remark \u003d source.getRemark().value;","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        teamName \u003d source.getTeamName().fullName;","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        phonePrivacy \u003d source.getPhone().isPrivate();","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        emailPrivacy \u003d source.getEmail().isPrivate();","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        addressPrivacy \u003d source.getAddress().isPrivate();","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        remarkPrivacy \u003d source.getRemark().isPrivate();","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"lohtianwei"},"content":"        ratingPrivacy \u003d source.getRating().isPrivate();","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        tagged \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        rating \u003d source.getRating().value;","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        position \u003d source.getPosition().value;","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        jerseyNumber \u003d source.getJerseyNumber().value;","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        avatar \u003d source.getAvatar().getValue();","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        for (Tag tag : source.getTags()) {","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"            tagged.add(new XmlAdaptedTag(tag));","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Converts this jaxb-friendly adapted person object into the model\u0027s Person object.","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        for (XmlAdaptedTag tag : tagged) {","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"lohtianwei"},"content":"        if (phonePrivacy \u003d\u003d null) {","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"lohtianwei"},"content":"            phonePrivacy \u003d false;","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"lohtianwei"},"content":"        if (emailPrivacy \u003d\u003d null) {","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"lohtianwei"},"content":"            emailPrivacy \u003d false;","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"lohtianwei"},"content":"        if (addressPrivacy \u003d\u003d null) {","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"lohtianwei"},"content":"            addressPrivacy \u003d false;","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"lohtianwei"},"content":"        if (remarkPrivacy \u003d\u003d null) {","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"lohtianwei"},"content":"            remarkPrivacy \u003d false;","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"lohtianwei"},"content":"        if (ratingPrivacy \u003d\u003d null) {","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"lohtianwei"},"content":"            ratingPrivacy \u003d false;","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (this.name \u003d\u003d null) {","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(this.name)) {","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_NAME_CONSTRAINTS);","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        final Name name \u003d new Name(this.name);","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (this.phone \u003d\u003d null) {","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(this.phone)) {","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_PHONE_CONSTRAINTS);","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"lohtianwei"},"content":"        final Phone phone \u003d new Phone(this.phone, this.phonePrivacy);","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        if (this.email \u003d\u003d null) {","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(this.email)) {","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_EMAIL_CONSTRAINTS);","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"lohtianwei"},"content":"        final Email email \u003d new Email(this.email, this.emailPrivacy);","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        if (this.address \u003d\u003d null) {","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(this.address)) {","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_ADDRESS_CONSTRAINTS);","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"lohtianwei"},"content":"        final Address address \u003d new Address(this.address, this.addressPrivacy);","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"lohtianwei"},"content":"        final Remark remark \u003d new Remark(this.remark, this.remarkPrivacy);","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        final TeamName teamName \u003d new TeamName(this.teamName);","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e(personTags);","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"        if (this.rating \u003d\u003d null) {","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Rating.class.getSimpleName()));","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        if (!Rating.isValidRating(this.rating)) {","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Rating.MESSAGE_RATING_CONSTRAINTS);","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"lohtianwei"},"content":"        final Rating rating \u003d new Rating(this.rating, this.ratingPrivacy);","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        if (this.position \u003d\u003d null) {","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"                    Position.class.getSimpleName()));","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        if (!Position.isValidPosition(this.position)) {","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Position.MESSAGE_POSITION_CONSTRAINTS);","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        final Position position \u003d new Position(this.position);","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        if (this.jerseyNumber \u003d\u003d null) {","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"                    JerseyNumber.class.getSimpleName()));","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        if (!JerseyNumber.isValidJerseyNumber(this.jerseyNumber)) {","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(JerseyNumber.MESSAGE_JERSEY_NUMBER_CONSTRAINTS);","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"        final JerseyNumber jerseyNumber \u003d new JerseyNumber(this.jerseyNumber);","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"        if (this.avatar \u003d\u003d null) {","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"                    Avatar.class.getSimpleName()));","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"        if (!Avatar.isValidAvatar(this.avatar)) {","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Avatar.MESSAGE_AVATAR_CONSTRAINTS);","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"        final Avatar avatar \u003d new Avatar(this.avatar);","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"        return new Person(name, phone, email, address, remark, teamName, tags, rating, position, jerseyNumber, avatar);","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"        if (!(other instanceof XmlAdaptedPerson)) {","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"        XmlAdaptedPerson otherPerson \u003d (XmlAdaptedPerson) other;","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"        return Objects.equals(name, otherPerson.name)","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(phone, otherPerson.phone)","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(email, otherPerson.email)","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(address, otherPerson.address)","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagged.equals(otherPerson.tagged);","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":34,"-":209}},{"path":"src/main/java/seedu/address/storage/XmlAdaptedTag.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import javax.xml.bind.annotation.XmlElement;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * JAXB-friendly adapted version of the Tag.","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class XmlAdaptedTag {","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"    @XmlElement","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private String tagName;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"    @XmlElement","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"    private String tagColour;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs an XmlAdaptedTag.","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * This is the no-arg constructor that is required by JAXB.","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public XmlAdaptedTag() {}","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code XmlAdaptedTag} with the given {@code tagName}.","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public XmlAdaptedTag(String tagName) {","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codeeong"},"content":"        this.tagColour \u003d \"teal\";","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"codeeong"},"content":"     * Constructs a {@code XmlAdaptedTag} with the given {@code tagName} and {@code tagColour}.","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"codeeong"},"content":"    /** @@author Codee */","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"codeeong"},"content":"    public XmlAdaptedTag(String tagName, String tagColour) {","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"codeeong"},"content":"        this.tagName \u003d tagName;","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"codeeong"},"content":"        this.tagColour \u003d tagColour;","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts a given Tag into this class for JAXB use.","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public XmlAdaptedTag(Tag source) {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"codeeong"},"content":"        tagColour \u003d source.getTagColour();","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Converts this jaxb-friendly adapted tag object into the model\u0027s Tag object.","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_TAG_CONSTRAINTS);","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"codeeong"},"content":"        if (!Tag.isValidTagColour(tagColour)) {","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"codeeong"},"content":"            throw new IllegalValueException(Tag.MESSAGE_TAG_COLOUR_CONSTRAINTS);","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"codeeong"},"content":"        return new Tag(tagName, tagColour);","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    //@@author","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!(other instanceof XmlAdaptedTag)) {","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return tagName.equals(((XmlAdaptedTag) other).tagName);","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":22,"-":59}},{"path":"src/main/java/seedu/address/storage/XmlAdaptedTeam.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.storage;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import java.util.ArrayList;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"import javax.xml.bind.annotation.XmlElement;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.team.Team;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.team.TeamName;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * JAXB-friendly adapted version of the Team","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"/** @@author Codee */","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"public class XmlAdaptedTeam {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Team\u0027s %s field is missing!\";","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @XmlElement(required \u003d true)","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"    private String teamName;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codeeong"},"content":"    @XmlElement","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private List\u003cXmlAdaptedPerson\u003e players \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"codeeong"},"content":"     * Constructs an XmlAdaptedTeam.","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"codeeong"},"content":"     * This is the no-arg constructor that is required by JAXB.","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codeeong"},"content":"    public XmlAdaptedTeam() {}","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"codeeong"},"content":"     * Constructs a {@code XmlAdaptedTeam} with the given {@code teamName}.","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public XmlAdaptedTeam(String teamName, List\u003cXmlAdaptedPerson\u003e persons) {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"codeeong"},"content":"        this.teamName \u003d teamName;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (persons !\u003d null) {","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            this.players \u003d new ArrayList\u003c\u003e(persons);","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"codeeong"},"content":"     * Converts a given Team into this class for JAXB use.","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"codeeong"},"content":"     *","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created XmlAdaptedTeam","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"codeeong"},"content":"    public XmlAdaptedTeam(Team source) {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"codeeong"},"content":"        teamName \u003d source.getTeamName().toString();","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        players \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        for (Person person : source.getTeamPlayers()) {","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"            players.add(new XmlAdaptedPerson(person));","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Converts this jaxb-friendly adapted tag object into the model\u0027s Team object.","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"codeeong"},"content":"     *","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"codeeong"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"codeeong"},"content":"    public Team toModelType() throws IllegalValueException {","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (this.teamName \u003d\u003d null) {","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new IllegalValueException((String.format(MISSING_FIELD_MESSAGE_FORMAT,","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"                    TeamName.class.getSimpleName())));","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!TeamName.isValidName(this.teamName)) {","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(TeamName.MESSAGE_TEAM_NAME_CONSTRAINTS);","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        final TeamName teamName \u003d new TeamName(this.teamName);","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        final List\u003cPerson\u003e teamPlayers \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        for (XmlAdaptedPerson player : players) {","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"            teamPlayers.add(player.toModelType());","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new Team(teamName, teamPlayers);","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"codeeong"},"content":"    @Override","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"codeeong"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"codeeong"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"codeeong"},"content":"            return true;","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"codeeong"},"content":"        if (!(other instanceof XmlAdaptedTeam)) {","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"codeeong"},"content":"            return false;","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        XmlAdaptedTeam otherTeam \u003d (XmlAdaptedTeam) other;","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return Objects.equals(teamName, otherTeam.teamName)","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"                \u0026\u0026 players.equals(otherTeam.players);","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":60,"-":33}},{"path":"src/main/java/seedu/address/storage/XmlSerializableAddressBook.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"package seedu.address.storage;","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javax.xml.bind.annotation.XmlElement;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javax.xml.bind.annotation.XmlRootElement;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to XML format","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"@XmlRootElement(name \u003d \"addressbook\")","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class XmlSerializableAddressBook {","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"    /** @@author Codee */","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @XmlElement","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private List\u003cXmlAdaptedTeam\u003e teams;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @XmlElement","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private List\u003cXmlAdaptedPerson\u003e persons;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    //@@author","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @XmlElement","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cXmlAdaptedTag\u003e tags;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates an empty XmlSerializableAddressBook.","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * This empty constructor is required for marshalling.","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public XmlSerializableAddressBook() {","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        persons \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        tags \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        teams \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Conversion","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /** @@author Codee */","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public XmlSerializableAddressBook(ReadOnlyAddressBook src) {","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this();","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        persons.addAll(src.getPersonList().stream().map(XmlAdaptedPerson::new).collect(Collectors.toList()));","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        tags.addAll(src.getTagList().stream().map(XmlAdaptedTag::new).collect(Collectors.toList()));","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        teams.addAll(src.getTeamList().stream().map(XmlAdaptedTeam::new).collect(Collectors.toList()));","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Converts this addressbook into the model\u0027s {@code AddressBook} object.","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated or duplicates in the","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * {@code XmlAdaptedPerson} or {@code XmlAdaptedTag}.","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        for (XmlAdaptedTag t : tags) {","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            addressBook.addTag(t.toModelType());","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        for (XmlAdaptedPerson p : persons) {","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            addressBook.addPerson(p.toModelType());","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        for (XmlAdaptedTeam tm : teams) {","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"            addressBook.createTeam(tm.toModelType());","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return addressBook;","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    //@@author","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!(other instanceof XmlSerializableAddressBook)) {","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        XmlSerializableAddressBook otherAb \u003d (XmlSerializableAddressBook) other;","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return persons.equals(otherAb.persons) \u0026\u0026 tags.equals(otherAb.tags) \u0026\u0026 teams.equals(otherAb.teams);","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":2,"-":83}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import com.google.common.eventbus.Subscribe;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"import javafx.scene.control.Menu;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"import javafx.scene.image.Image;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"import javafx.scene.image.ImageView;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"import javafx.scene.layout.VBox;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.ChangeThemeEvent;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.events.ui.ExitAppRequestEvent;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.events.ui.ShowHelpRequestEvent;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codeeong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codeeong"},"content":"    private static String currentTheme \u003d \"view/DarkTheme.css\";","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(this.getClass());","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Logic logic;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Config config;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private UserPrefs prefs;","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"codeeong"},"content":"    @FXML","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"codeeong"},"content":"    private Menu mtmLogo;","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"codeeong"},"content":"    @FXML","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"codeeong"},"content":"    private StackPane teamDisplayPlaceholder;","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"codeeong"},"content":"    @FXML","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"codeeong"},"content":"    private VBox mainWindow;","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Config config, UserPrefs prefs, Logic logic) {","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Set dependencies","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.config \u003d config;","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.prefs \u003d prefs;","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Configure the UI","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        setTitle(config.getAppTitle());","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(prefs);","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        setAccelerators();","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        registerAsAnEventHandler(this);","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return primaryStage;","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        /*","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"         *","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"         *","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"         */","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"                event.consume();","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        });","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        //@@author Codee","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        currentTheme \u003d \"view/\" + prefs.getAddressBookTheme();","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        mainWindow.getStylesheets().add(currentTheme);","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        mainWindow.getStylesheets().add(\"view/Extensions.css\");","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        final Image image \u003d new Image(\"images/MyTeamManagerLogo.png\", true);","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        mtmLogo.setGraphic(new ImageView(image));","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        mtmLogo.setDisable(true);","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        //@@author","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        ResultDisplay resultDisplay \u003d new ResultDisplay();","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"codeeong"},"content":"        TeamDisplay teamDisplay \u003d new TeamDisplay(logic.getInitTeamList());","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"codeeong"},"content":"        teamDisplayPlaceholder.getChildren().add(teamDisplay.getRoot());","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(prefs.getAddressBookFilePath());","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(logic);","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    void hide() {","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        primaryStage.hide();","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"    private void setTitle(String appTitle) {","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.setTitle(appTitle);","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Sets the default size based on user preferences.","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(UserPrefs prefs) {","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(prefs.getGuiSettings().getWindowHeight());","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(prefs.getGuiSettings().getWindowWidth());","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (prefs.getGuiSettings().getWindowCoordinates() !\u003d null) {","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"            primaryStage.setX(prefs.getGuiSettings().getWindowCoordinates().getX());","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"            primaryStage.setY(prefs.getGuiSettings().getWindowCoordinates().getY());","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"codeeong"},"content":"    /** @@author Codee */","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"codeeong"},"content":"     * @returns the {@code currentTheme}.","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"codeeong"},"content":"    public static String getCurrentTheme() {","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"codeeong"},"content":"        return currentTheme;","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"codeeong"},"content":"    @Subscribe","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"codeeong"},"content":"    public void handleChangeThemeRequestEvent(ChangeThemeEvent event) throws CommandException {","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"codeeong"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"codeeong"},"content":"        mainWindow.getStylesheets().remove(currentTheme);","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"codeeong"},"content":"        prefs.setAddressBookTheme(event.theme + \"Theme.css\");","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"codeeong"},"content":"        currentTheme \u003d \"view/\" + prefs.getAddressBookTheme();","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"codeeong"},"content":"        mainWindow.getStylesheets().add(currentTheme);","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"    //@@author","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * Returns the current size and the position of the main Window.","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"    GuiSettings getCurrentGuiSetting() {","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        return new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * Opens the help window.","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public void handleHelp() {","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"        if (helpWindow \u003d\u003d null) {","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"            helpWindow \u003d new HelpWindow();","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"        helpWindow.show();","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"    void show() {","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        primaryStage.show();","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"     * Closes the application.","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"    private void handleExit() {","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"        raise(new ExitAppRequestEvent());","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"        return this.personListPanel;","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"    @Subscribe","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"    private void handleShowHelpEvent(ShowHelpRequestEvent event) {","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"        handleHelp();","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":35,"-":201}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.File;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.net.MalformedURLException;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"import java.util.Iterator;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"import java.util.logging.Logger;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"import com.google.common.eventbus.Subscribe;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.scene.paint.ImagePattern;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.scene.shape.Circle;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.core.LogsCenter;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.ChangeTagColourEvent;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public final Person person;","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"codeeong"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonCard.class);","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private HBox cardPane;","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Label name;","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Label id;","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private Label teamName;","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private FlowPane tags;","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Label rating;","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private Label position;","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private Label jerseyNumber;","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private Circle avatar;","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        super(FXML);","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.person \u003d person;","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lohtianwei"},"content":"        if (person.getRating().isPrivate()) {","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lohtianwei"},"content":"            rating.setText(person.getRating().toString());","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lohtianwei"},"content":"        } else {","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"            rating.setText(person.getRating().value);","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lohtianwei"},"content":"        teamName.setText(person.getTeamName().fullName);","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        position.setText(person.getPosition().getPositionName());","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"codeeong"},"content":"        initTags(person);","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        setContactImage(person.getAvatar().getValue());","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setContactImage(String path) {","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Image img \u003d null;","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"            if (new File(path).isFile()) {","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"                img \u003d new Image(new File(path).toURI().toURL().toString());","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"            } else {","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"                img \u003d new Image(getClass().getResource(\"/images/placeholder_test.png\").toString());","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (MalformedURLException e) {","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"            img \u003d new Image(getClass().getResource(\"/images/placeholder_test.png\").toString());","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        avatar.setVisible(true);","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        avatar.setFill(new ImagePattern(img));","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        avatar.setVisible(true);","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"codeeong"},"content":"        registerAsAnEventHandler(this);","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"codeeong"},"content":"     * Creates the tag labels for {@code person}.","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"codeeong"},"content":"    private void initTags(Person person) {","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"codeeong"},"content":"        person.getTags().forEach(tag -\u003e {","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"codeeong"},"content":"            Label tagLabel \u003d new Label(tag.getTagName());","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"codeeong"},"content":"            tagLabel.getStyleClass().add(tag.getTagColour());","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"codeeong"},"content":"            tags.getChildren().add(tagLabel);","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"codeeong"},"content":"        });","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // short circuit if same object","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // state check","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"codeeong"},"content":"    /** @@author Codee */","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"codeeong"},"content":"    @Subscribe","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"codeeong"},"content":"    public void handleColourChangeEvent(ChangeTagColourEvent event) {","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"codeeong"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"codeeong"},"content":"        Set\u003cTag\u003e tagSet \u003d person.getTags();","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"codeeong"},"content":"        int i \u003d 0;","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"codeeong"},"content":"        for (Iterator\u003cTag\u003e it \u003d tagSet.iterator(); it.hasNext();) {","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"codeeong"},"content":"            Tag tag \u003d it.next();","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"codeeong"},"content":"            if (tag.getTagName().equals(event.tagName)) {","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"codeeong"},"content":"                tags.getChildren().remove(i);","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"codeeong"},"content":"                Label newTagLabel \u003d new Label(event.tagName);","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"codeeong"},"content":"                newTagLabel.getStyleClass().add(event.tagColour);","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"codeeong"},"content":"                tags.getChildren().add(i, newTagLabel);","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"codeeong"},"content":"            }","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"codeeong"},"content":"            i++;","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":5,"codeeong":42,"-":97}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.fxmisc.easybind.EasyBind;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.google.common.eventbus.Subscribe;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"import javafx.scene.layout.StackPane;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.events.ui.JumpToListRequestEvent;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.PersonDetailsChangedNoParamEvent;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.events.ui.PersonPanelSelectionChangedEvent;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"codeeong"},"content":"    private PlayerDetails playerDetails;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"codeeong"},"content":"    private Integer selectedCardIndex;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private ListView\u003cPersonCard\u003e personListView;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"codeeong"},"content":"    @FXML","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codeeong"},"content":"    private StackPane playerDetailsPlaceholder;","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        super(FXML);","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        setConnections(personList);","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        registerAsAnEventHandler(this);","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private void setConnections(ObservableList\u003cPerson\u003e personList) {","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        ObservableList\u003cPersonCard\u003e mappedList \u003d EasyBind.map(","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"                personList, (person) -\u003e new PersonCard(person, personList.indexOf(person) + 1));","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        personListView.setItems(mappedList);","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        setEventHandlerForSelectionChangeEvent();","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void setEventHandlerForSelectionChangeEvent() {","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        personListView.getSelectionModel().selectedItemProperty()","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .addListener((observable, oldValue, newValue) -\u003e {","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"                    if (newValue !\u003d null) {","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"codeeong"},"content":"                        playerDetailsPlaceholder.getChildren().clear();","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"                        logger.fine(\"Selection in person list panel changed to : \u0027\" + newValue + \"\u0027\");","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"                        raise(new PersonPanelSelectionChangedEvent(newValue));","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"codeeong"},"content":"                        playerDetails \u003d new PlayerDetails(newValue.person);","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"codeeong"},"content":"                        playerDetailsPlaceholder.getChildren().add(playerDetails.getRoot());","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"                    }","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"                });","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Scrolls to the {@code PersonCard} at the {@code index} and selects it.","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private void scrollTo(int index) {","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Platform.runLater(() -\u003e {","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"            personListView.scrollTo(index);","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            personListView.getSelectionModel().clearAndSelect(index);","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"codeeong"},"content":"            this.selectedCardIndex \u003d index;","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        });","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Subscribe","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private void handleJumpToListRequestEvent(JumpToListRequestEvent event) {","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        scrollTo(event.targetIndex);","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    //@@author Codee","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Subscribe","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private void handlePersonDetailsChangedNoParamEvent(PersonDetailsChangedNoParamEvent event) {","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        PersonCard newPersonCard \u003d personListView.getItems().get(selectedCardIndex);","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        playerDetailsPlaceholder.getChildren().clear();","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        playerDetails \u003d new PlayerDetails(newPersonCard.person);","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        playerDetailsPlaceholder.getChildren().add(playerDetails.getRoot());","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    //@author","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code PersonCard}.","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPersonCard\u003e {","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        protected void updateItem(PersonCard person, boolean empty) {","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"                setGraphic(null);","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"                setText(null);","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"            } else {","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"                setGraphic(person.getRoot());","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":12,"-":98}},{"path":"src/main/java/seedu/address/ui/PlayerDetails.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import com.google.common.eventbus.Subscribe;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"import javafx.fxml.FXML;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"import javafx.scene.control.Label;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"import javafx.scene.layout.HBox;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"import javafx.scene.layout.Region;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.PersonDetailsChangedEvent;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":" * The Browser Panel of the App.","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"/** @@author Codee */","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"public class PlayerDetails extends UiPart\u003cRegion\u003e {","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"    private static final String FXML \u003d \"PlayerDetails.fxml\";","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codeeong"},"content":"     * or an exception will be thrown by JavaFX during runtime.","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"codeeong"},"content":"     *","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codeeong"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"codeeong"},"content":"    public final Person person;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"codeeong"},"content":"    private Person personBeforeChange;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"codeeong"},"content":"    @FXML","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codeeong"},"content":"    private HBox cardPane;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"codeeong"},"content":"    @FXML","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"codeeong"},"content":"    private Label name;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codeeong"},"content":"    @FXML","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"codeeong"},"content":"    private Label phone;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"codeeong"},"content":"    @FXML","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"codeeong"},"content":"    private Label address;","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"codeeong"},"content":"    @FXML","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"codeeong"},"content":"    private Label email;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"codeeong"},"content":"    @FXML","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"codeeong"},"content":"    private Label jerseyNumber;","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"codeeong"},"content":"    @FXML","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"codeeong"},"content":"    private Label remark;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lohtianwei"},"content":"    //@@author lohtianwei","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lohtianwei"},"content":"    public PlayerDetails(Person person) {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lohtianwei"},"content":"        super(FXML);","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lohtianwei"},"content":"        registerAsAnEventHandler(this);","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lohtianwei"},"content":"        this.person \u003d person;","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lohtianwei"},"content":"        name.setText(person.getName().fullName);","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lohtianwei"},"content":"        jerseyNumber.setText(\"Jersey Number: \" + person.getJerseyNumber().value);","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lohtianwei"},"content":"        if (person.getPhone().isPrivate()) {","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lohtianwei"},"content":"            phone.setText(person.getPhone().toString());","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lohtianwei"},"content":"        } else {","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lohtianwei"},"content":"            phone.setText(person.getPhone().value);","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lohtianwei"},"content":"        if (person.getAddress().isPrivate()) {","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lohtianwei"},"content":"            address.setText(person.getAddress().toString());","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lohtianwei"},"content":"        } else {","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lohtianwei"},"content":"            address.setText(person.getAddress().value);","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lohtianwei"},"content":"        if (person.getEmail().isPrivate()) {","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lohtianwei"},"content":"            email.setText(person.getEmail().toString());","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lohtianwei"},"content":"        } else {","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lohtianwei"},"content":"            email.setText(person.getEmail().value);","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lohtianwei"},"content":"        if (person.getRemark().isPrivate()) {","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lohtianwei"},"content":"            remark.setText(\"Remarks: \" + person.getRemark().toString());","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lohtianwei"},"content":"        } else {","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lohtianwei"},"content":"            remark.setText(\"Remarks: \" + person.getRemark().value);","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lohtianwei"},"content":"        personBeforeChange \u003d this.person;","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    //@@author Codee","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Subscribe","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void handlePersonDetailsChangedEvent(PersonDetailsChangedEvent event) {","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (event.getPerson().getName().fullName.equals(person.getName().fullName)) {","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"            name.setText((event.getPerson().getName().toString()));","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"            phone.setText(event.getPerson().getPhone().toString());","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"            jerseyNumber.setText(\"Jersey Number: \" + event.getPerson().getJerseyNumber().toString());","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"            address.setText(event.getPerson().getAddress().toString());","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"            email.setText(event.getPerson().getEmail().toString());","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"            remark.setText(\"Remarks: \" + event.getPerson().getRemark().toString());","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","isFullCredit":false}],"authorContributionMap":{"lohtianwei":34,"codeeong":46,"-":14}},{"path":"src/main/java/seedu/address/ui/TeamDisplay.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"import com.google.common.eventbus.Subscribe;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"import javafx.collections.FXCollections;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":"import javafx.fxml.FXML;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"import javafx.scene.control.Label;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"import javafx.scene.layout.FlowPane;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"import javafx.scene.layout.Region;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.ClearTeamsEvent;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.DeselectTeamEvent;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.HighlightSelectedTeamEvent;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.events.ui.RemoveSelectedTeamEvent;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.ShowNewTeamNameEvent;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.UndoTeamsEvent;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.team.Team;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"codeeong"},"content":" * A ui for displaying the team currently chosen","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"codeeong"},"content":"/** @@author Codee */","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"codeeong"},"content":"public class TeamDisplay extends UiPart\u003cRegion\u003e {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(TeamDisplay.class);","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codeeong"},"content":"    private static final String FXML \u003d \"TeamDisplay.fxml\";","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codeeong"},"content":"    private ObservableList\u003cTeam\u003e teamList;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"codeeong"},"content":"    @FXML","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codeeong"},"content":"    private FlowPane teams;","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"codeeong"},"content":"    public TeamDisplay(ObservableList\u003cTeam\u003e teamList) {","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"codeeong"},"content":"        super(FXML);","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"codeeong"},"content":"        this.teamList \u003d teamList;","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"codeeong"},"content":"        initTeams();","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"codeeong"},"content":"        getTeams();","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"codeeong"},"content":"        registerAsAnEventHandler(this);","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"codeeong"},"content":"     * Creates the tag labels for {@code person}.","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"codeeong"},"content":"    private void initTeams() {","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"codeeong"},"content":"        for (Team t: this.teamList) {","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"codeeong"},"content":"            Label teamLabel \u003d new Label(t.getTeamName().toString());","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"codeeong"},"content":"            teamLabel.setStyle(\"-fx-text-fill: #3f7bbf\");","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"codeeong"},"content":"            teams.getChildren().add(teamLabel);","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"codeeong"},"content":"            teams.setHgap(10);","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"codeeong"},"content":"    public List\u003cString\u003e getTeams() {","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"codeeong"},"content":"        List\u003cString\u003e listOfTeams \u003d FXCollections.observableArrayList();","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"codeeong"},"content":"        for (Team t: teamList) {","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"codeeong"},"content":"            listOfTeams.add(t.getTeamName().toString());","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"codeeong"},"content":"        return listOfTeams;","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"codeeong"},"content":"    @Subscribe","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"codeeong"},"content":"    private void handleShowNewTeamEvent(ShowNewTeamNameEvent event) {","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"codeeong"},"content":"        Label newTeamLabel \u003d new Label(event.teamName);","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"codeeong"},"content":"        newTeamLabel.getStyleClass();","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"codeeong"},"content":"        teams.getChildren().add(newTeamLabel);","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"codeeong"},"content":"    @Subscribe","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"codeeong"},"content":"    private void handleHighlightSelectedTeamEvent(HighlightSelectedTeamEvent event) {","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"codeeong"},"content":"        for (int i \u003d 0; i \u003c teamList.size(); i++) {","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"codeeong"},"content":"            if (event.teamName.equals(teamList.get(i).getTeamName().toString())) {","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"codeeong"},"content":"                teams.getChildren().remove(i);","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"codeeong"},"content":"                Label newTeamLabel \u003d new Label(event.teamName);","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"codeeong"},"content":"                newTeamLabel.getStyleClass().add(\"selected\");","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"codeeong"},"content":"                teams.getChildren().add(i, newTeamLabel);","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"codeeong"},"content":"            } else {","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"codeeong"},"content":"                teams.getChildren().remove(i);","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"codeeong"},"content":"                Label newTeamLabel \u003d new Label(teamList.get(i).getTeamName().toString());","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"codeeong"},"content":"                newTeamLabel.getStyleClass();","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"codeeong"},"content":"                teams.getChildren().add(i, newTeamLabel);","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"codeeong"},"content":"            }","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"codeeong"},"content":"    @Subscribe","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"codeeong"},"content":"    private void handleDeselectTeamEvent(DeselectTeamEvent event) {","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"codeeong"},"content":"        for (int i \u003d 0; i \u003c teamList.size(); i++) {","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"codeeong"},"content":"            teams.getChildren().remove(i);","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"codeeong"},"content":"            Label newTeamLabel \u003d new Label(teamList.get(i).getTeamName().toString());","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"codeeong"},"content":"            newTeamLabel.getStyleClass();","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"codeeong"},"content":"            teams.getChildren().add(i, newTeamLabel);","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Subscribe","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void handleRemoveSelectedTeamEvent(RemoveSelectedTeamEvent event) {","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c teams.getChildren().size(); i++) {","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"            if (teamList.get(i).getTeamName().equals(event.teamName)) {","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"                teams.getChildren().remove(i);","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"codeeong"},"content":"    @Subscribe","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"codeeong"},"content":"    private void handleClearTeamsEvent(ClearTeamsEvent event) {","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"codeeong"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"codeeong"},"content":"        teams.getChildren().clear();","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"codeeong"},"content":"    @Subscribe","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"codeeong"},"content":"    private void handleUndoTeamsEvent(UndoTeamsEvent event) {","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"codeeong"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"codeeong"},"content":"        teams.getChildren().clear();","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"codeeong"},"content":"        initTeams();","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"codeeong"},"content":"        getTeams();","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false}],"authorContributionMap":{"codeeong":109,"-":15}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import com.google.common.eventbus.Subscribe;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.ComponentManager;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.events.storage.DataSavingExceptionEvent;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The manager of the UI component.","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class UiManager extends ComponentManager implements Ui {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_DIALOG_STAGE_TITLE \u003d \"File Op Error\";","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_DIALOG_HEADER_MESSAGE \u003d \"Could not save data\";","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_DIALOG_CONTENT_MESSAGE \u003d \"Could not save data to file\";","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codeeong"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/football.png\";","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Logic logic;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Config config;","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private UserPrefs prefs;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic, Config config, UserPrefs prefs) {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        super();","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.config \u003d config;","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.prefs \u003d prefs;","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        //Set the application icon.","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, config, prefs, logic);","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void stop() {","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        prefs.updateLastUsedGuiSetting(mainWindow.getCurrentGuiSetting());","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        mainWindow.hide();","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private void showFileOperationAlertAndWait(String description, String details, Throwable cause) {","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        final String content \u003d details + \":\\n\" + cause.toString();","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(AlertType.ERROR, FILE_OPS_ERROR_DIALOG_STAGE_TITLE, description, content);","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"                                               String contentText) {","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        alert.showAndWait();","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Platform.exit();","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        System.exit(1);","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Event Handling Code \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Subscribe","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void handleDataSavingExceptionEvent(DataSavingExceptionEvent event) {","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        showFileOperationAlertAndWait(FILE_OPS_ERROR_DIALOG_HEADER_MESSAGE, FILE_OPS_ERROR_DIALOG_CONTENT_MESSAGE,","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"                event.exception);","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":1,"-":118}},{"path":"src/test/java/guitests/guihandles/MainWindowHandle.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package guitests.guihandles;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Provides a handle for {@code MainWindow}.","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class MainWindowHandle extends StageHandle {","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private final PersonListPanelHandle personListPanel;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private final ResultDisplayHandle resultDisplay;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"    private final TeamDisplayHandle teamDisplayBar;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final CommandBoxHandle commandBox;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final StatusBarFooterHandle statusBarFooter;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final MainMenuHandle mainMenu;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public MainWindowHandle(Stage stage) {","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        super(stage);","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanelHandle(getChildNode(PersonListPanelHandle.PERSON_LIST_VIEW_ID));","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplayHandle(getChildNode(ResultDisplayHandle.RESULT_DISPLAY_ID));","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"        teamDisplayBar \u003d new TeamDisplayHandle(getChildNode(TeamDisplayHandle.TEAM_DISPLAY_ID));","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        commandBox \u003d new CommandBoxHandle(getChildNode(CommandBoxHandle.COMMAND_INPUT_FIELD_ID));","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        statusBarFooter \u003d new StatusBarFooterHandle(getChildNode(StatusBarFooterHandle.STATUS_BAR_PLACEHOLDER));","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        mainMenu \u003d new MainMenuHandle(getChildNode(MainMenuHandle.MENU_BAR_ID));","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public PersonListPanelHandle getPersonListPanel() {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return personListPanel;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public ResultDisplayHandle getResultDisplay() {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return resultDisplay;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandBoxHandle getCommandBox() {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return commandBox;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public StatusBarFooterHandle getStatusBarFooter() {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return statusBarFooter;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public MainMenuHandle getMainMenu() {","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return mainMenu;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":2,"-":46}},{"path":"src/test/java/guitests/guihandles/PersonCardHandle.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package guitests.guihandles;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.Node;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Provides a handle to a person card in the person list panel.","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class PersonCardHandle extends NodeHandle\u003cNode\u003e {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String ID_FIELD_ID \u003d \"#id\";","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String NAME_FIELD_ID \u003d \"#name\";","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String TAGS_FIELD_ID \u003d \"#tags\";","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"    private static final String RATING_FIELD_ID \u003d \"#rating\";","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"    private static final String POSITION_FIELD_ID \u003d \"#position\";","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"    private static final String TEAMNAME_FIELD_ID \u003d \"#teamName\";","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Label idLabel;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Label nameLabel;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"    private final Label positionLabel;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codeeong"},"content":"    private final Label ratingLabel;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"codeeong"},"content":"    private final Label teamNameLabel;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final List\u003cLabel\u003e tagLabels;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public PersonCardHandle(Node cardNode) {","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        super(cardNode);","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.idLabel \u003d getChildNode(ID_FIELD_ID);","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.nameLabel \u003d getChildNode(NAME_FIELD_ID);","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"codeeong"},"content":"        this.positionLabel \u003d getChildNode(POSITION_FIELD_ID);","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"codeeong"},"content":"        this.ratingLabel \u003d getChildNode(RATING_FIELD_ID);","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codeeong"},"content":"        this.teamNameLabel \u003d getChildNode(TEAMNAME_FIELD_ID);","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Region tagsContainer \u003d getChildNode(TAGS_FIELD_ID);","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.tagLabels \u003d tagsContainer","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .getChildrenUnmodifiable()","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .stream()","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .map(Label.class::cast)","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public String getId() {","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return idLabel.getText();","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String getName() {","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return nameLabel.getText();","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"codeeong"},"content":"    public String getPosition() {","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"codeeong"},"content":"        return positionLabel.getText();","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"codeeong"},"content":"    public String getRating() {","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"codeeong"},"content":"        return ratingLabel.getText();","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"codeeong"},"content":"    public String getTeamName() {","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"codeeong"},"content":"        return teamNameLabel.getText();","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getTags() {","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return tagLabels","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .stream()","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .map(Label::getText)","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"codeeong"},"content":"    public List\u003cString\u003e getTagStyleClasses(String tag) {","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"codeeong"},"content":"        return tagLabels","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"codeeong"},"content":"                .stream()","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"codeeong"},"content":"                .filter(label -\u003e label.getText().equals(tag))","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"codeeong"},"content":"                .map(Label::getStyleClass)","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"codeeong"},"content":"                .findFirst()","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"codeeong"},"content":"                .orElseThrow(() -\u003e new IllegalArgumentException(\"No such tag.\"));","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":25,"-":56}},{"path":"src/test/java/guitests/guihandles/PlayerDetailsHandle.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package guitests.guihandles;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import javafx.scene.Node;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"import javafx.scene.control.Label;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":" * Provides a handle to a player details pane.","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"//@@author Codee","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class PlayerDetailsHandle extends NodeHandle\u003cNode\u003e {","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String PLAYER_DETAILS_DISPLAY_ID \u003d \"#playerDetails\";","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String NAME_FIELD_ID \u003d \"#name\";","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String JERSEY_FIELD_ID \u003d \"#jerseyNumber\";","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String PHONE_FIELD_ID \u003d \"#phone\";","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String EMAIL_FIELD_ID \u003d \"#email\";","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String ADDRESS_FIELD_ID \u003d \"#address\";","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String REMARK_FIELD_ID \u003d \"#remark\";","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Label nameLabel;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Label jerseyLabel;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Label addressLabel;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Label phoneLabel;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Label emailLabel;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Label remarkLabel;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public PlayerDetailsHandle(Node cardNode) {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(cardNode);","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.nameLabel \u003d getChildNode(NAME_FIELD_ID);","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.phoneLabel \u003d getChildNode(PHONE_FIELD_ID);","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.addressLabel \u003d getChildNode(ADDRESS_FIELD_ID);","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.emailLabel \u003d getChildNode(EMAIL_FIELD_ID);","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.remarkLabel \u003d getChildNode(REMARK_FIELD_ID);","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.jerseyLabel \u003d getChildNode(JERSEY_FIELD_ID);","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public String getPhone() {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return phoneLabel.getText();","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String getName() {","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return nameLabel.getText();","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public String getAddress() {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return addressLabel.getText();","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public String getJerseyNumber() {","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return jerseyLabel.getText().substring(15);","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String getRemarks() {","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return remarkLabel.getText().substring(9);","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public String getEmail() {","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return emailLabel.getText();","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":8,"-":56}},{"path":"src/test/java/guitests/guihandles/TeamDisplayHandle.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package guitests.guihandles;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"import java.util.stream.Collectors;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"import javafx.scene.Node;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"import javafx.scene.control.Label;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"import javafx.scene.layout.Region;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":" * Provides a handle for {@code TeamDisplayHandle} containing the list of {@code Teams}.","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"/** @@author Codee */","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"public class TeamDisplayHandle extends NodeHandle\u003cNode\u003e {","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"    public static final String TEAM_DISPLAY_ID \u003d \"#teams\";","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"    private final List\u003cLabel\u003e teamLabels;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"    public TeamDisplayHandle(Node teamDisplayNode) {","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"        super(teamDisplayNode);","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"        Region teamContainer \u003d getChildNode(TEAM_DISPLAY_ID);","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"        this.teamLabels \u003d teamContainer","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codeeong"},"content":"                .getChildrenUnmodifiable()","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"codeeong"},"content":"                .stream()","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codeeong"},"content":"                .map(Label.class::cast)","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"codeeong"},"content":"                .collect(Collectors.toList());","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"codeeong"},"content":"    public List\u003cString\u003e getTeams() {","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codeeong"},"content":"        return teamLabels","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"codeeong"},"content":"                .stream()","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codeeong"},"content":"                .map(Label::getText)","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"codeeong"},"content":"                .collect(Collectors.toList());","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":37}},{"path":"src/test/java/seedu/address/commons/core/ConfigTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertNotNull;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertTrue;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.Rule;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.rules.ExpectedException;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ConfigTest {","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Rule","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"        String defaultConfigAsString \u003d \"App title : My Team Manager\\n\"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"                + \"Current log level : INFO\\n\"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":1,"-":31}},{"path":"src/test/java/seedu/address/commons/util/XmlUtilTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.File;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javax.xml.bind.JAXBException;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javax.xml.bind.annotation.XmlRootElement;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.Rule;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.rules.ExpectedException;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.storage.XmlAdaptedPerson;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.XmlAdaptedTag;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.XmlSerializableAddressBook;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TestUtil;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class XmlUtilTest {","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String TEST_DATA_FOLDER \u003d FileUtil.getPath(\"src/test/data/XmlUtilTest/\");","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final File EMPTY_FILE \u003d new File(TEST_DATA_FOLDER + \"empty.xml\");","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final File MISSING_FILE \u003d new File(TEST_DATA_FOLDER + \"missing.xml\");","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final File VALID_FILE \u003d new File(TEST_DATA_FOLDER + \"validAddressBook.xml\");","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final File MISSING_PERSON_FIELD_FILE \u003d new File(TEST_DATA_FOLDER + \"missingPersonField.xml\");","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final File INVALID_PERSON_FIELD_FILE \u003d new File(TEST_DATA_FOLDER + \"invalidPersonField.xml\");","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final File VALID_PERSON_FILE \u003d new File(TEST_DATA_FOLDER + \"validPerson.xml\");","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final File TEMP_FILE \u003d new File(TestUtil.getFilePathInSandboxFolder(\"tempAddressBook.xml\"));","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"9482asf424\";","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Hans Muster\";","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"9482424\";","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"hans@example\";","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"4th street\";","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final List\u003cXmlAdaptedTag\u003e VALID_TAGS \u003d Collections.singletonList(new XmlAdaptedTag(\"friends\"));","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Rule","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void getDataFromFile_nullFile_throwsNullPointerException() throws Exception {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        thrown.expect(NullPointerException.class);","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        XmlUtil.getDataFromFile(null, AddressBook.class);","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void getDataFromFile_nullClass_throwsNullPointerException() throws Exception {","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        thrown.expect(NullPointerException.class);","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        XmlUtil.getDataFromFile(VALID_FILE, null);","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void getDataFromFile_missingFile_fileNotFoundException() throws Exception {","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        thrown.expect(FileNotFoundException.class);","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        XmlUtil.getDataFromFile(MISSING_FILE, AddressBook.class);","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void getDataFromFile_emptyFile_dataFormatMismatchException() throws Exception {","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        thrown.expect(JAXBException.class);","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        XmlUtil.getDataFromFile(EMPTY_FILE, AddressBook.class);","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void getDataFromFile_validFile_validResult() throws Exception {","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        AddressBook dataFromFile \u003d XmlUtil.getDataFromFile(VALID_FILE, XmlSerializableAddressBook.class).toModelType();","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"codeeong"},"content":"        assertEquals(0, dataFromFile.getTeamList().size());","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(0, dataFromFile.getTagList().size());","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void xmlAdaptedPersonFromFile_fileWithMissingPersonField_validResult() throws Exception {","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        XmlAdaptedPerson actualPerson \u003d XmlUtil.getDataFromFile(","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"                MISSING_PERSON_FIELD_FILE, XmlAdaptedPersonWithRootElement.class);","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        XmlAdaptedPerson expectedPerson \u003d new XmlAdaptedPerson(","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"                null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expectedPerson, actualPerson);","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void xmlAdaptedPersonFromFile_fileWithInvalidPersonField_validResult() throws Exception {","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        XmlAdaptedPerson actualPerson \u003d XmlUtil.getDataFromFile(","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"                INVALID_PERSON_FIELD_FILE, XmlAdaptedPersonWithRootElement.class);","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        XmlAdaptedPerson expectedPerson \u003d new XmlAdaptedPerson(","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"                VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedPerson, actualPerson);","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void xmlAdaptedPersonFromFile_fileWithValidPerson_validResult() throws Exception {","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        XmlAdaptedPerson actualPerson \u003d XmlUtil.getDataFromFile(","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"                VALID_PERSON_FILE, XmlAdaptedPersonWithRootElement.class);","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        XmlAdaptedPerson expectedPerson \u003d new XmlAdaptedPerson(","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPerson, actualPerson);","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void saveDataToFile_nullFile_throwsNullPointerException() throws Exception {","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        thrown.expect(NullPointerException.class);","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        XmlUtil.saveDataToFile(null, new AddressBook());","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void saveDataToFile_nullClass_throwsNullPointerException() throws Exception {","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        thrown.expect(NullPointerException.class);","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        XmlUtil.saveDataToFile(VALID_FILE, null);","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void saveDataToFile_missingFile_fileNotFoundException() throws Exception {","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        thrown.expect(FileNotFoundException.class);","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        XmlUtil.saveDataToFile(MISSING_FILE, new AddressBook());","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void saveDataToFile_validFile_dataSaved() throws Exception {","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        TEMP_FILE.createNewFile();","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        XmlSerializableAddressBook dataToWrite \u003d new XmlSerializableAddressBook(new AddressBook());","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        XmlUtil.saveDataToFile(TEMP_FILE, dataToWrite);","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        XmlSerializableAddressBook dataFromFile \u003d XmlUtil.getDataFromFile(TEMP_FILE, XmlSerializableAddressBook.class);","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(dataToWrite, dataFromFile);","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        AddressBookBuilder builder \u003d new AddressBookBuilder(new AddressBook());","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        dataToWrite \u003d new XmlSerializableAddressBook(","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"                builder.withPerson(new PersonBuilder().build()).withTag(\"Friends\").build());","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        XmlUtil.saveDataToFile(TEMP_FILE, dataToWrite);","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        dataFromFile \u003d XmlUtil.getDataFromFile(TEMP_FILE, XmlSerializableAddressBook.class);","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertEquals(dataToWrite, dataFromFile);","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Test class annotated with {@code XmlRootElement} to allow unmarshalling of .xml data to {@code XmlAdaptedPerson}","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * objects.","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @XmlRootElement(name \u003d \"person\")","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private static class XmlAdaptedPersonWithRootElement extends XmlAdaptedPerson {}","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":1,"-":145}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertEquals;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertFalse;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertTrue;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.Assert.fail;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.Rule;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.rules.ExpectedException;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.CommandHistory;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.UndoRedoStack;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.exceptions.NoPlayerException;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.team.Team;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.team.TeamName;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.team.exceptions.TeamNotFoundException;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddCommandTest {","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Rule","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        thrown.expect(NullPointerException.class);","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        new AddCommand(null);","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d getAddCommandForPerson(validPerson, modelStub).execute();","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.feedbackToUser);","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() throws Exception {","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubThrowingDuplicatePersonException();","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        thrown.expect(CommandException.class);","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        thrown.expectMessage(AddCommand.MESSAGE_DUPLICATE_PERSON);","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        getAddCommandForPerson(validPerson, modelStub).execute();","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void equals() {","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Generates a new AddCommand with the details of the given person.","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private AddCommand getAddCommandForPerson(Person person, Model model) {","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        AddCommand command \u003d new AddCommand(person);","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        command.setData(model, new CommandHistory(), new UndoRedoStack());","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return command;","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) throws DuplicatePersonException {","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"            fail(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"lohtianwei"},"content":"        @Override","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"lohtianwei"},"content":"        public void sortPlayers(String field, String order) throws NoPlayerException {","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"lohtianwei"},"content":"            fail(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"lohtianwei"},"content":"        @Override","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"lohtianwei"},"content":"        public void lockAddressBookModel() {","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"lohtianwei"},"content":"            fail(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"lohtianwei"},"content":"        @Override","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"lohtianwei"},"content":"        public void unlockAddressBookModel() {","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"lohtianwei"},"content":"            fail(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"lohtianwei"},"content":"        @Override","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"lohtianwei"},"content":"        public boolean getLockState() {","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"lohtianwei"},"content":"            fail(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"lohtianwei"},"content":"            return false;","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"lohtianwei"},"content":"        @Override","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"lohtianwei"},"content":"        public UserPrefs getUserPrefs() {","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"lohtianwei"},"content":"            fail(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"lohtianwei"},"content":"            return null;","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public void resetData(ReadOnlyAddressBook newData) {","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"            fail(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"            fail(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return null;","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) throws PersonNotFoundException {","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"            fail(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public void updatePerson(Person target, Person editedPerson)","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"                throws DuplicatePersonException {","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"            fail(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"            fail(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return null;","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"codeeong"},"content":"        @Override","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"codeeong"},"content":"        public ObservableList\u003cTeam\u003e getInitTeamList() {","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"codeeong"},"content":"            fail(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"codeeong"},"content":"            return null;","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"            fail(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(TeamName targetTeam) throws TeamNotFoundException {","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"            fail(\"This method should not be called\");","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public void deleteTag(Tag tag) {","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"            fail(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public void createTeam(Team team) {","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"            fail(\"This method should not be be called.\");","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public void assignPersonToTeam(Person person, TeamName teamName) throws DuplicatePersonException {","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"            fail(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public void unassignPersonFromTeam(Person person) throws TeamNotFoundException {","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"            fail(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public void removeTeam(TeamName teamName) throws TeamNotFoundException {","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"            fail(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public void renameTeam(Team targetTeam, TeamName updatedTeamName) {","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"            fail(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"codeeong"},"content":"        @Override","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"codeeong"},"content":"        public boolean setTagColour(Tag tag, String colour) {","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"codeeong"},"content":"            fail(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"codeeong"},"content":"            return false;","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"     * A Model stub that always throw a DuplicatePersonException when trying to add a person.","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"    private class ModelStubThrowingDuplicatePersonException extends ModelStub {","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) throws DuplicatePersonException {","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"            return new AddressBook();","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) throws DuplicatePersonException {","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"            requireNonNull(person);","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"        public void assignPersonToTeam(Person person, TeamName teamName)","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"            throws DuplicatePersonException {","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"            return new AddressBook();","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":29,"codeeong":12,"-":216}},{"path":"src/test/java/seedu/address/logic/commands/ChangeThemeCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import static org.junit.Assert.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"import static org.junit.Assert.assertFalse;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"import static org.junit.Assert.assertTrue;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"import static org.junit.Assert.fail;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.core.Messages;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"/** @@author Codee */","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"public class ChangeThemeCommandTest {","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"    private String[] listThemes \u003d { \"Light\", \"Dark\" };","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"    @Test","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"    public void execute_validTheme_success() {","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"        assertExecutionSuccess(listThemes[0]);","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"    @Test","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codeeong"},"content":"    public void execute_invalidTheme_failure() {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"codeeong"},"content":"        assertExecutionFailure(\"FakeTheme\", Messages.MESSAGE_INVALID_THEME);","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"codeeong"},"content":"    @Test","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"codeeong"},"content":"    public void equals() {","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"codeeong"},"content":"        ChangeThemeCommand[] listThemeCommands \u003d new ChangeThemeCommand[2];","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codeeong"},"content":"        for (int i \u003d 0; i \u003c 2; i++) {","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"codeeong"},"content":"            listThemeCommands[i] \u003d new ChangeThemeCommand(listThemes[i]);","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"codeeong"},"content":"        // same object -\u003e returns true","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codeeong"},"content":"        for (int i \u003d 0; i \u003c 2; i++) {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"codeeong"},"content":"            assertTrue(listThemeCommands[i].equals(new ChangeThemeCommand(listThemes[i])));","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"codeeong"},"content":"        // different types -\u003e returns false","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"codeeong"},"content":"        for (int i \u003d 0; i \u003c 2; i++) {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"codeeong"},"content":"            assertFalse(listThemeCommands[i].equals(1));","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"codeeong"},"content":"        // null -\u003e returns false","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"codeeong"},"content":"        for (int i \u003d 0; i \u003c 2; i++) {","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"codeeong"},"content":"            assertFalse(listThemeCommands[i].equals(null));","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"codeeong"},"content":"        // different theme -\u003e returns false","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"codeeong"},"content":"        int j \u003d 1;","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"codeeong"},"content":"        for (int i \u003d 0; i \u003c 2; i++) {","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"codeeong"},"content":"            if (i !\u003d j) {","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"codeeong"},"content":"                assertFalse(listThemeCommands[i].equals(listThemeCommands[j]));","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"codeeong"},"content":"            }","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"codeeong"},"content":"            j--;","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"codeeong"},"content":"     * Executes a {@code ChangeThemeCommand} with the given {@code theme}.","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"codeeong"},"content":"    private void assertExecutionSuccess(String theme) {","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"codeeong"},"content":"        ChangeThemeCommand changethemeCommand \u003d new ChangeThemeCommand(theme);","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"codeeong"},"content":"        try {","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"codeeong"},"content":"            CommandResult commandResult \u003d changethemeCommand.execute();","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"codeeong"},"content":"            assertEquals(String.format(ChangeThemeCommand.MESSAGE_THEME_SUCCESS, theme),","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"codeeong"},"content":"                    commandResult.feedbackToUser);","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"codeeong"},"content":"        } catch (CommandException ce) {","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"codeeong"},"content":"            throw new IllegalArgumentException(\"Execution of command should not fail.\", ce);","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"codeeong"},"content":"     * Executes a {@code ChangeThemeCommand} with the given {@code theme}.","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"codeeong"},"content":"    private void assertExecutionFailure(String theme, String expectedMessage) {","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"codeeong"},"content":"        ChangeThemeCommand changethemeCommand \u003d new ChangeThemeCommand(theme);","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"codeeong"},"content":"        try {","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"codeeong"},"content":"            changethemeCommand.execute();","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"codeeong"},"content":"            fail(\"The expected CommandException was not thrown.\");","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"codeeong"},"content":"        } catch (CommandException ce) {","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"codeeong"},"content":"            assertEquals(expectedMessage, ce.getMessage());","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":89}},{"path":"src/test/java/seedu/address/logic/commands/KeyCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lohtianwei"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lohtianwei"},"content":"//@@author lohtianwei","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lohtianwei"},"content":"import static org.junit.Assert.assertFalse;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lohtianwei"},"content":"import static org.junit.Assert.assertTrue;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lohtianwei"},"content":"import org.junit.Before;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lohtianwei"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.ModelManager;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lohtianwei"},"content":"public class KeyCommandTest {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lohtianwei"},"content":"    private Model model;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lohtianwei"},"content":"    @Before","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lohtianwei"},"content":"    public void start() {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lohtianwei"},"content":"        model \u003d new ModelManager();","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lohtianwei"},"content":"    public void checkKey() throws Exception {","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lohtianwei"},"content":"        //checks that default lock state is false","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lohtianwei"},"content":"        assertFalse(model.getLockState());","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lohtianwei"},"content":"        //checks that key can lock MTM","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lohtianwei"},"content":"        model.lockAddressBookModel();","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(model.getLockState());","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lohtianwei"},"content":"        //checks that key can unlock MTM","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lohtianwei"},"content":"        model.unlockAddressBookModel();","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lohtianwei"},"content":"        assertFalse(model.getLockState());","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lohtianwei"},"content":"        //checks that toggling works","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lohtianwei"},"content":"        model.lockAddressBookModel();","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lohtianwei"},"content":"        model.unlockAddressBookModel();","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lohtianwei"},"content":"        assertFalse(model.getLockState());","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lohtianwei"},"content":"        model.unlockAddressBookModel();","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lohtianwei"},"content":"        model.lockAddressBookModel();","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(model.getLockState());","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lohtianwei"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":44}},{"path":"src/test/java/seedu/address/logic/commands/RemarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertFalse;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertNotEquals;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertTrue;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_EMPTY;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.prepareRedoCommand;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.prepareUndoCommand;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.CommandHistory;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.UndoRedoStack;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Remark;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"//@@author jordancjq","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for RemarkCommand.","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class RemarkCommandTest {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_addRemarkUnfilteredList_success() throws Exception {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person remarkedPerson \u003d personInList.withRemark(VALID_REMARK_AMY).build();","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        RemarkCommand remarkCommand \u003d prepareCommand(indexLastPerson, remarkedPerson.getRemark().toString());","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, remarkedPerson);","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        expectedModel.updatePerson(lastPerson, remarkedPerson);","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_deleteRemarkUnfilteredList_success() throws Exception {","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person remarkedPerson \u003d personInList.withRemark(VALID_REMARK_EMPTY).build();","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        RemarkCommand remarkCommand \u003d prepareCommand(indexLastPerson, remarkedPerson.getRemark().toString());","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_DELETE_REMARK_SUCCESS, remarkedPerson);","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        expectedModel.updatePerson(lastPerson, remarkedPerson);","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() throws Exception {","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person remarkedPerson \u003d new PersonBuilder(personInFilteredList).withRemark(VALID_REMARK_BOB).build();","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        RemarkCommand remarkCommand \u003d prepareCommand(INDEX_FIRST_PERSON, remarkedPerson.getRemark().toString());","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, remarkedPerson);","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        expectedModel.updatePerson(personInFilteredList, remarkedPerson);","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"codeeong"},"content":"        model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        RemarkCommand remarkCommand \u003d prepareCommand(outOfBoundIndex, VALID_REMARK_BOB);","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertCommandFailure(remarkCommand, model, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Remark filtered list where index is larger than size of filtered list,","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        RemarkCommand remarkCommand \u003d prepareCommand(outOfBoundIndex, VALID_REMARK_BOB);","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(remarkCommand, model, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void executeUndoRedo_validIndexUnfilteredList_success() throws Exception {","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        UndoRedoStack undoRedoStack \u003d new UndoRedoStack();","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        UndoCommand undoCommand \u003d prepareUndoCommand(model, undoRedoStack);","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        RedoCommand redoCommand \u003d prepareRedoCommand(model, undoRedoStack);","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Person personToRemark \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Person remarkedPerson \u003d new PersonBuilder(personToRemark).withRemark(VALID_REMARK_AMY).build();","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        RemarkCommand remarkCommand \u003d prepareCommand(INDEX_FIRST_PERSON, VALID_REMARK_AMY);","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // remark -\u003e first person remarked","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        remarkCommand.execute();","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        undoRedoStack.push(remarkCommand);","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // undo -\u003e reverts addressbook back to previous state and filtered person list to show all persons","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // redo -\u003e same first person remarked again","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        expectedModel.updatePerson(personToRemark, remarkedPerson);","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertCommandSuccess(redoCommand, model, RedoCommand.MESSAGE_SUCCESS, expectedModel);","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void executeUndoRedo_invalidIndexUnfilteredList_failure() {","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        UndoRedoStack undoRedoStack \u003d new UndoRedoStack();","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        UndoCommand undoCommand \u003d prepareUndoCommand(model, undoRedoStack);","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        RedoCommand redoCommand \u003d prepareRedoCommand(model, undoRedoStack);","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        RemarkCommand remarkCommand \u003d prepareCommand(outOfBoundIndex, VALID_REMARK_EMPTY);","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // execution failed -\u003e remarkCommand not pushed into undoRedoStack","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertCommandFailure(remarkCommand, model, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // no commands in undoRedoStack -\u003e undoCommand and redoCommand fail","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertCommandFailure(undoCommand, model, UndoCommand.MESSAGE_FAILURE);","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertCommandFailure(redoCommand, model, RedoCommand.MESSAGE_FAILURE);","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * 1. Updates {@code Person#remark} from a filtered list.","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * 2. Undo the update.","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * 3. The unfiltered list should be shown now. Verify that the index of the previously updated person in the","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * unfiltered list is different from the index at the filtered list.","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * 4. Redo the update. This ensures {@code RedoCommand} updates the person object regardless of indexing.","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void executeUndoRedo_validIndexFilteredList_samePersonRemarked() throws Exception {","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        UndoRedoStack undoRedoStack \u003d new UndoRedoStack();","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        UndoCommand undoCommand \u003d prepareUndoCommand(model, undoRedoStack);","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        RedoCommand redoCommand \u003d prepareRedoCommand(model, undoRedoStack);","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        RemarkCommand remarkCommand \u003d prepareCommand(INDEX_FIRST_PERSON, VALID_REMARK_BOB);","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_SECOND_PERSON);","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Person personToRemark \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Person remarkedPerson \u003d new PersonBuilder(personToRemark).withRemark(VALID_REMARK_BOB).build();","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // remark -\u003e remarks second person in unfiltered person list / first person in filtered person list","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        remarkCommand.execute();","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        undoRedoStack.push(remarkCommand);","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // undo -\u003e reverts addressbook back to previous state and filtered person list to show all persons","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        expectedModel.updatePerson(personToRemark, remarkedPerson);","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertNotEquals(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()), personToRemark);","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // redo -\u003e remarks same second person in unfiltered person list","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertCommandSuccess(redoCommand, model, RedoCommand.MESSAGE_SUCCESS, expectedModel);","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void equals() {","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"        final RemarkCommand standardCommand \u003d prepareCommand(INDEX_FIRST_PERSON, VALID_REMARK_AMY);","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        RemarkCommand commandWithSameValues \u003d prepareCommand(INDEX_FIRST_PERSON, VALID_REMARK_AMY);","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_SECOND_PERSON, new Remark(VALID_REMARK_AMY))));","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"        // different remark -\u003e returns false","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_FIRST_PERSON, new Remark(VALID_REMARK_BOB))));","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"     * Returns an {@code RemarkCommand} with parameters {@code index} and {@code remark}.","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"    private RemarkCommand prepareCommand(Index index, String remark) {","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(index, new Remark(remark));","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"        remarkCommand.setData(model, new CommandHistory(), new UndoRedoStack());","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"        return remarkCommand;","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":2,"-":218}},{"path":"src/test/java/seedu/address/logic/commands/SetCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import static org.junit.Assert.assertFalse;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"import static org.junit.Assert.assertTrue;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":"import org.junit.Before;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"import seedu.address.logic.CommandHistory;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"import seedu.address.logic.UndoRedoStack;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.ModelManager;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codeeong"},"content":" * This is the unit test for {@code SetCommand}.","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codeeong"},"content":"/** @@author Codee */","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"codeeong"},"content":"public class SetCommandTest {","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"codeeong"},"content":"    private Model model;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"codeeong"},"content":"    private Tag tagOne \u003d new Tag(\"testTagOne\");","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codeeong"},"content":"    private Tag tagTwo \u003d new Tag(\"testTagTwo\");","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codeeong"},"content":"    @Before","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"codeeong"},"content":"    public void setUp() {","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"codeeong"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"codeeong"},"content":"    @Test","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"codeeong"},"content":"    public void equals() {","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"codeeong"},"content":"        SetCommand testCommand \u003d new SetCommand(tagOne, \"teal\");","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"codeeong"},"content":"        SetCommand testCommandTwo \u003d new SetCommand(tagOne, \"teal\");","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"codeeong"},"content":"        //Test to ensure command is strictly a SetCommand","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"codeeong"},"content":"        assertFalse(testCommand.equals(new AddCommand(CARL)));","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"codeeong"},"content":"        assertFalse(testCommand.equals(new ClearCommand()));","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"codeeong"},"content":"        assertFalse(testCommand.equals(new DeleteCommand(INDEX_FIRST_PERSON)));","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"codeeong"},"content":"        assertFalse(testCommand.equals(new HistoryCommand()));","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"codeeong"},"content":"        assertFalse(testCommand.equals(new HelpCommand()));","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"codeeong"},"content":"        assertFalse(testCommand.equals(new RedoCommand()));","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"codeeong"},"content":"        assertFalse(testCommand.equals(new UndoCommand()));","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"codeeong"},"content":"        assertFalse(testCommand.equals(new ListCommand()));","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"codeeong"},"content":"        assertFalse(testCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_AMY)));","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"codeeong"},"content":"        //Test to check that different tag string returns false","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"codeeong"},"content":"        assertFalse(testCommand.equals(new SetCommand(tagTwo, \"teal\")));","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"codeeong"},"content":"        assertFalse(testCommandTwo.equals(new SetCommand(tagTwo, \"teal\")));","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"codeeong"},"content":"        //Test to check that different color strings returns false","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"codeeong"},"content":"        assertFalse(testCommand.equals(new SetCommand(tagOne, \"red\")));","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"codeeong"},"content":"        assertFalse(testCommandTwo.equals(new SetCommand(tagTwo, \"red\")));","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"codeeong"},"content":"    @Test","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"codeeong"},"content":"    public void checkCommandResult() throws CommandException {","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"codeeong"},"content":"        //Check if the result message is correct when there is no tags found","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"codeeong"},"content":"        SetCommand command \u003d new SetCommand(new Tag(\"blablabla\"), \"teal\");","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"codeeong"},"content":"        command.setData(model, new CommandHistory(), new UndoRedoStack());","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"codeeong"},"content":"        assertTrue(command.execute().feedbackToUser.equals(\"tag is invalid! Please input a valid tag name!\"));","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"codeeong"},"content":"        //When tags is present","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"codeeong"},"content":"        command \u003d new SetCommand(new Tag(\"friends\"), \"red\");","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"codeeong"},"content":"        command.setData(model, new CommandHistory(), new UndoRedoStack());","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"codeeong"},"content":"        assertFalse(command.execute().feedbackToUser.equals(\"No such tag\"));","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"codeeong"},"content":"        assertTrue(command.execute().feedbackToUser.equals(\"tag [friends] colour changed to red\"));","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"codeeong"},"content":"        //Check if friends tags are set to color","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"codeeong"},"content":"        command \u003d new SetCommand(new Tag(\"friends\"), \"teal\");","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"codeeong"},"content":"        command.setData(model, new CommandHistory(), new UndoRedoStack());","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"codeeong"},"content":"        assertTrue(command.execute().feedbackToUser.equals(\"tag [friends] colour changed to teal\"));","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"codeeong"},"content":"        for (Tag tag : model.getAddressBook().getTagList()) {","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"codeeong"},"content":"            if (\"friends\".equals(tag.tagName)) {","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"codeeong"},"content":"                assertTrue(tag.getTagColour().equals(\"teal\"));","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"codeeong"},"content":"                assertFalse(tag.getTagColour().equals(\"pink\"));","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"codeeong"},"content":"            }","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"codeeong"},"content":"        resetAllTagsToDefault();","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"codeeong"},"content":"     * This method allows all tags to be set to the default colour \"teal\"","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"codeeong"},"content":"    public void resetAllTagsToDefault() {","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"codeeong"},"content":"        ObservableList\u003cTag\u003e allTags \u003d model.getAddressBook().getTagList();","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"codeeong"},"content":"        for (Tag t : allTags) {","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"codeeong"},"content":"            t.changeTagColour(\"teal\");","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":100}},{"path":"src/test/java/seedu/address/logic/commands/SortCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lohtianwei"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lohtianwei"},"content":"//@@author lohtianwei","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.commands.SortCommand.MESSAGE_SUCCESS;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.testutil.TypicalPersons.getEmptyAddressBook;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.testutil.TypicalPersons.getSortedAddressBook;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lohtianwei"},"content":"import org.junit.Rule;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lohtianwei"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lohtianwei"},"content":"import org.junit.rules.ExpectedException;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.CommandHistory;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.UndoRedoStack;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.ModelManager;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lohtianwei"},"content":"public class SortCommandTest {","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lohtianwei"},"content":"    @Rule","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lohtianwei"},"content":"    public ExpectedException error \u003d ExpectedException.none();","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lohtianwei"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lohtianwei"},"content":"    private Model emptyModel \u003d new ModelManager(getEmptyAddressBook(), new UserPrefs());","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lohtianwei"},"content":"    private Model sortedByNameDesc \u003d new ModelManager(","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lohtianwei"},"content":"            getSortedAddressBook(\"name\", \"desc\"), new UserPrefs());","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lohtianwei"},"content":"    private Model sortedByAdd \u003d new ModelManager(","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lohtianwei"},"content":"            getSortedAddressBook(\"address\", \"asc\"), new UserPrefs());","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lohtianwei"},"content":"    private Model sortedByAddDesc \u003d new ModelManager(","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lohtianwei"},"content":"            getSortedAddressBook(\"address\", \"desc\"), new UserPrefs());","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lohtianwei"},"content":"    private Model sortedByEmail \u003d new ModelManager(getSortedAddressBook(\"email\", \"asc\"), new UserPrefs());","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lohtianwei"},"content":"    private Model sortedByEmailDesc \u003d new ModelManager(","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lohtianwei"},"content":"            getSortedAddressBook(\"email\", \"desc\"), new UserPrefs());","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lohtianwei"},"content":"    public void noPlayers() throws CommandException {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lohtianwei"},"content":"        error.expect(CommandException.class);","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lohtianwei"},"content":"        prepareCommand(\"name\", \"asc\", emptyModel).execute();","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lohtianwei"},"content":"    public void emptySortField_throwsNullPointerEx() {","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lohtianwei"},"content":"        error.expect(NullPointerException.class);","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lohtianwei"},"content":"        new SortCommand(\"name\", null);","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lohtianwei"},"content":"    public void emptySortOrder_throwsNullPointerEx() {","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lohtianwei"},"content":"        error.expect(NullPointerException.class);","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lohtianwei"},"content":"        new SortCommand(null, \"asc\");","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lohtianwei"},"content":"    public void sortByName_success() throws Exception {","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lohtianwei"},"content":"        SortCommand so \u003d prepareCommand(\"name\", \"asc\", model);","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lohtianwei"},"content":"        String expected \u003d String.format(MESSAGE_SUCCESS, \"name\", \"asc\");","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lohtianwei"},"content":"        assertCommandSuccess(so, model, expected, model);","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lohtianwei"},"content":"    public void sortByNameDesc_success() throws Exception {","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lohtianwei"},"content":"        SortCommand so \u003d prepareCommand(\"name\", \"desc\", model);","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lohtianwei"},"content":"        String expected \u003d String.format(MESSAGE_SUCCESS, \"name\", \"desc\");","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lohtianwei"},"content":"        assertCommandSuccess(so, model, expected, sortedByNameDesc);","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lohtianwei"},"content":"    public void sortByAdd_success() throws Exception {","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lohtianwei"},"content":"        SortCommand so \u003d prepareCommand(\"address\", \"asc\", model);","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lohtianwei"},"content":"        String expected \u003d String.format(MESSAGE_SUCCESS, \"address\", \"asc\");","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lohtianwei"},"content":"        assertCommandSuccess(so, model, expected, sortedByAdd);","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lohtianwei"},"content":"    public void sortByAddDesc_success() throws Exception {","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"lohtianwei"},"content":"        SortCommand so \u003d prepareCommand(\"address\", \"desc\", model);","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lohtianwei"},"content":"        String expected \u003d String.format(MESSAGE_SUCCESS, \"address\", \"desc\");","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"lohtianwei"},"content":"        assertCommandSuccess(so, model, expected, sortedByAddDesc);","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"lohtianwei"},"content":"    public void sortByEmail_success() throws Exception {","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"lohtianwei"},"content":"        SortCommand so \u003d prepareCommand(\"email\", \"asc\", model);","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"lohtianwei"},"content":"        String expected \u003d String.format(MESSAGE_SUCCESS, \"email\", \"asc\");","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"lohtianwei"},"content":"        assertCommandSuccess(so, model, expected, sortedByEmail);","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"lohtianwei"},"content":"    public void sortByEmailDesc_success() throws Exception {","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"lohtianwei"},"content":"        SortCommand so \u003d prepareCommand(\"email\", \"desc\", model);","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"lohtianwei"},"content":"        String expected \u003d String.format(MESSAGE_SUCCESS, \"email\", \"desc\");","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"lohtianwei"},"content":"        assertCommandSuccess(so, model, expected, sortedByEmailDesc);","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"lohtianwei"},"content":"    /**","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"lohtianwei"},"content":"     * Returns a {@code sortCommand} with the parameters {@code field and @code order}.","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"lohtianwei"},"content":"     */","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"lohtianwei"},"content":"    private SortCommand prepareCommand(String field, String order, Model model) {","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"lohtianwei"},"content":"        SortCommand sortCommand \u003d new SortCommand(field, order);","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"lohtianwei"},"content":"        sortCommand.setData(model, new CommandHistory(), new UndoRedoStack());","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"lohtianwei"},"content":"        return sortCommand;","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"lohtianwei"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":108}},{"path":"src/test/java/seedu/address/logic/commands/TogglePrivacyCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lohtianwei"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lohtianwei"},"content":"//@@author lohtianwei","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lohtianwei"},"content":"import static junit.framework.TestCase.assertEquals;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lohtianwei"},"content":"import static junit.framework.TestCase.assertFalse;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.commands.TogglePrivacyCommand.EditPersonPrivacy;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lohtianwei"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.CommandHistory;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.UndoRedoStack;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.AddressBook;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.ModelManager;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.testutil.EditPersonPrivacyBuilder;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lohtianwei"},"content":"public class TogglePrivacyCommandTest {","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lohtianwei"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lohtianwei"},"content":"    public void editPersonPrivacyTest() {","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lohtianwei"},"content":"        EditPersonPrivacy epp \u003d new EditPersonPrivacy();","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lohtianwei"},"content":"        assertFalse(epp.anyNonNullField());","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lohtianwei"},"content":"        EditPersonPrivacy eppBuilder \u003d new EditPersonPrivacyBuilder().setAddressPrivate(\"false\")","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lohtianwei"},"content":"                .setEmailPrivate(\"false\").setPhonePrivate(\"true\").setRatingPrivate(\"false\")","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lohtianwei"},"content":"                .setRemarkPrivate(\"true\").build();","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lohtianwei"},"content":"        epp.setPrivateAddress(false);","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lohtianwei"},"content":"        epp.setPrivateEmail(false);","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lohtianwei"},"content":"        epp.setPrivatePhone(true);","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lohtianwei"},"content":"        epp.setPrivateRating(false);","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lohtianwei"},"content":"        epp.setPrivateRemark(true);","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lohtianwei"},"content":"        assertEquals(eppBuilder.getPrivateAddress(), epp.getPrivateAddress());","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lohtianwei"},"content":"        assertEquals(eppBuilder.getPrivateEmail(), epp.getPrivateEmail());","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lohtianwei"},"content":"        assertEquals(eppBuilder.getPrivatePhone(), epp.getPrivatePhone());","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lohtianwei"},"content":"        assertEquals(eppBuilder.getPrivateRating(), epp.getPrivateRating());","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lohtianwei"},"content":"        assertEquals(eppBuilder.getPrivateRemark(), epp.getPrivateRemark());","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lohtianwei"},"content":"    public void oneFieldToggledSuccess() throws Exception {","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lohtianwei"},"content":"        Index indexLast \u003d Index.fromOneBased(model.getFilteredPersonList().size());","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lohtianwei"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLast.getZeroBased());","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lohtianwei"},"content":"        Person listedPerson \u003d new PersonBuilder().withName(lastPerson.getName().toString())","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lohtianwei"},"content":"                .withEmail(lastPerson.getEmail().toString()).withRating(lastPerson.getRating().toString())","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lohtianwei"},"content":"                .withPhone(lastPerson.getPhone().toString()).build();","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lohtianwei"},"content":"        listedPerson.getPhone().setPrivate(true);","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lohtianwei"},"content":"        EditPersonPrivacy epp \u003d new EditPersonPrivacyBuilder(listedPerson).setPhonePrivate(\"true\").build();","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lohtianwei"},"content":"        TogglePrivacyCommand togglePrivacyCommand \u003d new TogglePrivacyCommand(indexLast, epp);","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lohtianwei"},"content":"        togglePrivacyCommand.setData(model, new CommandHistory(), new UndoRedoStack());","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lohtianwei"},"content":"        String expected \u003d String.format(TogglePrivacyCommand.MESSAGE_SUCCESS, listedPerson);","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lohtianwei"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lohtianwei"},"content":"        expectedModel.updatePerson(lastPerson, listedPerson);","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lohtianwei"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":67}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertTrue;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.Assert.fail;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TEAM_ARSENAL;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.Rule;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.rules.ExpectedException;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"import seedu.address.logic.commands.ChangeThemeCommand;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CreateCommand;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HistoryCommand;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.KeyCommand;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.RedoCommand;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.RemarkCommand;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.SelectCommand;","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.SortCommand;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.TogglePrivacyCommand;","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.UndoCommand;","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Remark;","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.team.Team;","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.team.TeamName;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lohtianwei"},"content":"    private static final boolean DEFAULT_LOCK_STATE \u003d false;","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Rule","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lohtianwei"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person), DEFAULT_LOCK_STATE);","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lohtianwei"},"content":"    public void parseCommand_addAlias() throws Exception {","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lohtianwei"},"content":"        Person person \u003d new PersonBuilder().build();","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(AddCommand.COMMAND_ALIAS + \" \"","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lohtianwei"},"content":"                + PersonUtil.getPersonDetails(person), DEFAULT_LOCK_STATE);","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lohtianwei"},"content":"        assertEquals(new AddCommand(person), command);","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD, DEFAULT_LOCK_STATE) instanceof ClearCommand);","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\", DEFAULT_LOCK_STATE) instanceof ClearCommand);","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lohtianwei"},"content":"    public void parseCommand_clearAlias() throws Exception {","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_ALIAS, DEFAULT_LOCK_STATE) instanceof ClearCommand);","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_ALIAS + \" 3\", DEFAULT_LOCK_STATE) instanceof ClearCommand);","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"lohtianwei"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased(), DEFAULT_LOCK_STATE);","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"lohtianwei"},"content":"    public void parseCommand_deleteAlias() throws Exception {","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"lohtianwei"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"lohtianwei"},"content":"                DeleteCommand.COMMAND_ALIAS + \" \" + INDEX_FIRST_PERSON.getOneBased(), DEFAULT_LOCK_STATE);","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"lohtianwei"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"lohtianwei"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getPersonDetails(person), DEFAULT_LOCK_STATE);","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"lohtianwei"},"content":"    public void parseCommand_editAlias() throws Exception {","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"lohtianwei"},"content":"        Person person \u003d new PersonBuilder().build();","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"lohtianwei"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"lohtianwei"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_ALIAS + \" \"","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"lohtianwei"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getPersonDetails(person), DEFAULT_LOCK_STATE);","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"lohtianwei"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD, DEFAULT_LOCK_STATE) instanceof ExitCommand);","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\", DEFAULT_LOCK_STATE) instanceof ExitCommand);","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseCommand_remark() throws Exception {","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final Remark remark \u003d new Remark(\"foobar\");","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        RemarkCommand command \u003d (RemarkCommand) parser.parseCommand(RemarkCommand.COMMAND_WORD + \" \"","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"lohtianwei"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PREFIX_REMARK + remark, DEFAULT_LOCK_STATE);","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(new RemarkCommand(INDEX_FIRST_PERSON, remark), command);","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseCommand_remarkAlias() throws Exception {","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        final Remark remark \u003d new Remark(\"foobar\");","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        RemarkCommand command \u003d (RemarkCommand) parser.parseCommand(RemarkCommand.COMMAND_ALIAS + \" \"","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"lohtianwei"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PREFIX_REMARK + remark, DEFAULT_LOCK_STATE);","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(new RemarkCommand(INDEX_FIRST_PERSON, remark), command);","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"lohtianwei"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream()","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"lohtianwei"},"content":"                        .collect(Collectors.joining(\" \")), DEFAULT_LOCK_STATE);","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"lohtianwei"},"content":"    public void parseCommand_findAlias() throws Exception {","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"lohtianwei"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"lohtianwei"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"lohtianwei"},"content":"                FindCommand.COMMAND_ALIAS + \" \" + keywords.stream()","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"lohtianwei"},"content":"                        .collect(Collectors.joining(\" \")), DEFAULT_LOCK_STATE);","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"lohtianwei"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD, DEFAULT_LOCK_STATE) instanceof HelpCommand);","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\",","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"lohtianwei"},"content":"                DEFAULT_LOCK_STATE) instanceof HelpCommand);","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void parseCommand_history() throws Exception {","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(HistoryCommand.COMMAND_WORD, DEFAULT_LOCK_STATE) instanceof HistoryCommand);","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(HistoryCommand.COMMAND_WORD + \" 3\",","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"lohtianwei"},"content":"                DEFAULT_LOCK_STATE) instanceof HistoryCommand);","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"lohtianwei"},"content":"            parser.parseCommand(\"histories\", DEFAULT_LOCK_STATE);","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"            fail(\"The expected ParseException was not thrown.\");","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"            assertEquals(MESSAGE_UNKNOWN_COMMAND, pe.getMessage());","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"lohtianwei"},"content":"    public void parseCommand_historyAlias() throws Exception {","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(HistoryCommand.COMMAND_ALIAS, DEFAULT_LOCK_STATE) instanceof HistoryCommand);","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(HistoryCommand.COMMAND_ALIAS + \" 3\",","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"lohtianwei"},"content":"                DEFAULT_LOCK_STATE) instanceof HistoryCommand);","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseCommand_create() throws Exception {","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Team team \u003d new Team(new TeamName(VALID_TEAM_ARSENAL));","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"        CreateCommand command \u003d (CreateCommand) parser.parseCommand(CreateCommand.COMMAND_WORD + \" \"","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"lohtianwei"},"content":"            + VALID_TEAM_ARSENAL, DEFAULT_LOCK_STATE);","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertEquals(new CreateCommand(team), command);","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void parseCommand_createAlias() throws Exception {","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        Team team \u003d new Team(new TeamName(VALID_TEAM_ARSENAL));","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        CreateCommand command \u003d (CreateCommand) parser.parseCommand(CreateCommand.COMMAND_ALIAS + \" \"","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"lohtianwei"},"content":"                + VALID_TEAM_ARSENAL, DEFAULT_LOCK_STATE);","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertEquals(new CreateCommand(team), command);","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD, DEFAULT_LOCK_STATE) instanceof ListCommand);","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\",","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"lohtianwei"},"content":"                DEFAULT_LOCK_STATE) instanceof ListCommand);","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"lohtianwei"},"content":"    public void parseCommand_listAlias() throws Exception {","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_ALIAS, DEFAULT_LOCK_STATE) instanceof ListCommand);","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_ALIAS + \" 3\",","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"lohtianwei"},"content":"                DEFAULT_LOCK_STATE) instanceof ListCommand);","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public void parseCommand_select() throws Exception {","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        SelectCommand command \u003d (SelectCommand) parser.parseCommand(","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"lohtianwei"},"content":"                SelectCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased(), DEFAULT_LOCK_STATE);","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"        assertEquals(new SelectCommand(INDEX_FIRST_PERSON), command);","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"lohtianwei"},"content":"    public void parseCommand_selectAlias() throws Exception {","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"lohtianwei"},"content":"        SelectCommand command \u003d (SelectCommand) parser.parseCommand(","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"lohtianwei"},"content":"                SelectCommand.COMMAND_ALIAS + \" \" + INDEX_FIRST_PERSON.getOneBased(), DEFAULT_LOCK_STATE);","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"lohtianwei"},"content":"        assertEquals(new SelectCommand(INDEX_FIRST_PERSON), command);","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"    public void parseCommand_redoCommandWord_returnsRedoCommand() throws Exception {","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(RedoCommand.COMMAND_WORD, DEFAULT_LOCK_STATE) instanceof RedoCommand);","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(\"redo 1\", DEFAULT_LOCK_STATE) instanceof RedoCommand);","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"lohtianwei"},"content":"    public void parseCommand_redoCommandAlias_returnsRedoCommand() throws Exception {","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(RedoCommand.COMMAND_ALIAS, DEFAULT_LOCK_STATE) instanceof RedoCommand);","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(RedoCommand.COMMAND_ALIAS + \" 1\",","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"lohtianwei"},"content":"                DEFAULT_LOCK_STATE) instanceof RedoCommand);","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public void parseCommand_undoCommandWord_returnsUndoCommand() throws Exception {","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(UndoCommand.COMMAND_WORD, DEFAULT_LOCK_STATE) instanceof UndoCommand);","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(\"undo 3\", DEFAULT_LOCK_STATE) instanceof UndoCommand);","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"lohtianwei"},"content":"    public void parseCommand_undoCommandAlias_returnsUndoCommand() throws Exception {","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(UndoCommand.COMMAND_ALIAS, DEFAULT_LOCK_STATE) instanceof UndoCommand);","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(UndoCommand.COMMAND_ALIAS + \" 3\",","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"lohtianwei"},"content":"                DEFAULT_LOCK_STATE) instanceof UndoCommand);","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() throws Exception {","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"        thrown.expect(ParseException.class);","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"        thrown.expectMessage(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"lohtianwei"},"content":"        parser.parseCommand(\"\", DEFAULT_LOCK_STATE);","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() throws Exception {","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"        thrown.expect(ParseException.class);","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"        thrown.expectMessage(MESSAGE_UNKNOWN_COMMAND);","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"lohtianwei"},"content":"        parser.parseCommand(\"unknownCommand\", DEFAULT_LOCK_STATE);","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"lohtianwei"},"content":"    /** @lohtianwei */","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"lohtianwei"},"content":"    public void parseCommand_sort() throws Exception {","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(SortCommand.COMMAND_WORD + \" \"","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"lohtianwei"},"content":"                + SortCommandParser.ACCEPTED_FIELDS.get(0) + \" \"","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"lohtianwei"},"content":"                + SortCommandParser.ACCEPTED_ORDERS.get(0), DEFAULT_LOCK_STATE) instanceof SortCommand);","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"lohtianwei"},"content":"    public void parseCommand_sortAlias() throws Exception {","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(SortCommand.COMMAND_ALIAS + \" \"","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"lohtianwei"},"content":"                + SortCommandParser.ACCEPTED_FIELDS.get(0) + \" \"","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"lohtianwei"},"content":"                + SortCommandParser.ACCEPTED_ORDERS.get(0), DEFAULT_LOCK_STATE) instanceof SortCommand);","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"lohtianwei"},"content":"    public void parseCommand_key() throws Exception {","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(KeyCommand.COMMAND_WORD","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"lohtianwei"},"content":"                + \" ilikesports\", DEFAULT_LOCK_STATE) instanceof KeyCommand);","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"lohtianwei"},"content":"    public void parseCommand_keyAlias() throws Exception {","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(KeyCommand.COMMAND_WORD","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"lohtianwei"},"content":"                + \" ilikesports\", DEFAULT_LOCK_STATE) instanceof KeyCommand);","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"lohtianwei"},"content":"    public void parseCommand_togglePrivacy() throws Exception {","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(TogglePrivacyCommand.COMMAND_WORD + \" \"","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"lohtianwei"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \"","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"lohtianwei"},"content":"                + PREFIX_PHONE, DEFAULT_LOCK_STATE) instanceof TogglePrivacyCommand);","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"lohtianwei"},"content":"    public void parseCommand_togglePrivacyAlias() throws Exception {","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(TogglePrivacyCommand.COMMAND_ALIAS + \" \"","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"lohtianwei"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \"","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"lohtianwei"},"content":"                + PREFIX_PHONE, DEFAULT_LOCK_STATE) instanceof TogglePrivacyCommand);","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"codeeong"},"content":"    /** @@Codee */","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"codeeong"},"content":"    @Test","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"codeeong"},"content":"    public void parseCommand_theme() throws Exception {","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"codeeong"},"content":"        String[] listThemes \u003d { \"Light\", \"Dark\" };","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"codeeong"},"content":"        for (int i \u003d 0; i \u003c 2; i++) {","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"codeeong"},"content":"            ChangeThemeCommand command \u003d (ChangeThemeCommand) parser.parseCommand(","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"lohtianwei"},"content":"                    ChangeThemeCommand.COMMAND_WORD + \" \" + listThemes[i], DEFAULT_LOCK_STATE);","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"codeeong"},"content":"            assertEquals(new ChangeThemeCommand(listThemes[i]), command);","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"    //@@author","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":150,"codeeong":12,"-":159}},{"path":"src/test/java/seedu/address/logic/parser/ChangeThemeCommandParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"import seedu.address.logic.commands.ChangeThemeCommand;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"/** @@author Codee */","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"public class ChangeThemeCommandParserTest {","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"    private ChangeThemeCommandParser parser \u003d new ChangeThemeCommandParser();","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"    private String[] listThemes \u003d { \"Light\", \"Dark\" };","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"    @Test","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"    public void parse_validArgs_returnsThemeCommand() {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"        for (int i \u003d 0; i \u003c 2; i++) {","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"            assertParseSuccess(parser, listThemes[i], new ChangeThemeCommand(listThemes[i]));","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codeeong"},"content":"    @Test","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"codeeong"},"content":"    public void parse_invalidArgs_throwsParseException() {","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codeeong"},"content":"        // Empty Argument","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"codeeong"},"content":"        assertParseFailure(parser, \"\",","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"codeeong"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ChangeThemeCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":30}},{"path":"src/test/java/seedu/address/logic/parser/SetCommandParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG_COLOUR;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"import static seedu.address.testutil.TypicalTags.FRIEND;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":"import seedu.address.logic.commands.SetCommand;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"/** @@author Codee */","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"public class SetCommandParserTest {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"    private SetCommandParser parser \u003d new SetCommandParser();","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"    @Test","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"    public void parse_validArgs_returnsSetCommand() {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"        String userInput \u003d \" \" + PREFIX_TAG + FRIEND.getTagName() + \" \" + PREFIX_TAG_COLOUR + \"green\";","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"        assertParseSuccess(parser, userInput, new SetCommand(FRIEND, \"green\"));","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":23}},{"path":"src/test/java/seedu/address/logic/parser/SortCommandParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lohtianwei"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lohtianwei"},"content":"//@@author lohtianwei","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lohtianwei"},"content":"//import static seedu.address.logic.commands.SortCommand.BY_ASCENDING;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lohtianwei"},"content":"//import static seedu.address.logic.commands.SortCommand.BY_DESCENDING;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.commands.SortCommand.MESSAGE_USAGE;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lohtianwei"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lohtianwei"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lohtianwei"},"content":"//import seedu.address.logic.commands.SortCommand;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lohtianwei"},"content":"public class SortCommandParserTest {","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lohtianwei"},"content":"    private SortCommandParser parser \u003d new SortCommandParser();","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lohtianwei"},"content":"    public void noArguments_throwsParseException() {","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lohtianwei"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lohtianwei"},"content":"    public void parse_invalidArguments_failure() {","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lohtianwei"},"content":"        //more than 1 field entered","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lohtianwei"},"content":"        assertParseFailure(parser, \"name\" + \" \" + \"address\" + \" \" + \"asc\",","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lohtianwei"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lohtianwei"},"content":"        //invalid field entered","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lohtianwei"},"content":"        assertParseFailure(parser, \"invalid\" + \"asc\",","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lohtianwei"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lohtianwei"},"content":"        //invalid sort order entered","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lohtianwei"},"content":"        assertParseFailure(parser, \"name\" + \" \" + \"invalid\",","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lohtianwei"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lohtianwei"},"content":"        //no field entered","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lohtianwei"},"content":"        assertParseFailure(parser, \"asc\",","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lohtianwei"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lohtianwei"},"content":"        //no order entered","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lohtianwei"},"content":"        assertParseFailure(parser, \"name\",","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lohtianwei"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lohtianwei"},"content":"    /*","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lohtianwei"},"content":"    public void parse_validArguments_success() {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lohtianwei"},"content":"        //valid input for sort by name in asc order","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lohtianwei"},"content":"        assertParseSuccess(parser, \"name\" + \" \" + BY_ASCENDING,","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lohtianwei"},"content":"                new SortCommand(\"name\", BY_ASCENDING));","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lohtianwei"},"content":"        //valid input for sort by name in desc order","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lohtianwei"},"content":"        assertParseSuccess(parser, \"name\" + \" \" + BY_DESCENDING,","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lohtianwei"},"content":"                new SortCommand(\"name\", BY_DESCENDING));","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lohtianwei"},"content":"        //valid input for sort by address in asc order","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lohtianwei"},"content":"        assertParseSuccess(parser, \"address\" + \" \" + BY_ASCENDING,","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lohtianwei"},"content":"                new SortCommand(\"address\", BY_ASCENDING));","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lohtianwei"},"content":"        //valid input for sort by address in desc order","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lohtianwei"},"content":"        assertParseSuccess(parser, \"address\" + \" \" + BY_DESCENDING,","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lohtianwei"},"content":"                new SortCommand(\"address\", BY_DESCENDING));","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lohtianwei"},"content":"        //valid input for sort by phone in asc order","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lohtianwei"},"content":"        assertParseSuccess(parser, \"phone\" + \" \" + BY_ASCENDING,","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lohtianwei"},"content":"                new SortCommand(\"phone\", BY_ASCENDING));","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lohtianwei"},"content":"        //valid input for sort by phone in desc order","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lohtianwei"},"content":"        assertParseSuccess(parser, \"phone\" + \" \" + BY_DESCENDING,","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lohtianwei"},"content":"                new SortCommand(\"phone\", BY_DESCENDING));","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lohtianwei"},"content":"        //valid input for sort by email in asc order","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lohtianwei"},"content":"        assertParseSuccess(parser, \"email\" + \" \" + BY_ASCENDING,","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lohtianwei"},"content":"                new SortCommand(\"email\", BY_ASCENDING));","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lohtianwei"},"content":"        //valid input for sort by email in desc order","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lohtianwei"},"content":"        assertParseSuccess(parser, \"email\" + \" \" + BY_DESCENDING,","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lohtianwei"},"content":"                new SortCommand(\"email\", BY_DESCENDING));","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"lohtianwei"},"content":"    */","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lohtianwei"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":82}},{"path":"src/test/java/seedu/address/logic/parser/TogglePrivacyCommandParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lohtianwei"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lohtianwei"},"content":"//@@author lohtianwei","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lohtianwei"},"content":"import static org.junit.Assert.assertEquals;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lohtianwei"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.TogglePrivacyCommand;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.TogglePrivacyCommand.EditPersonPrivacy;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.testutil.EditPersonPrivacyBuilder;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lohtianwei"},"content":"public class TogglePrivacyCommandParserTest {","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lohtianwei"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d String.format","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lohtianwei"},"content":"            (MESSAGE_INVALID_COMMAND_FORMAT, TogglePrivacyCommand.MESSAGE_USAGE);","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lohtianwei"},"content":"    private static final String MESSAGE_NO_FIELDS \u003d String.format(TogglePrivacyCommand.MESSAGE_NO_FIELDS);","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lohtianwei"},"content":"    private TogglePrivacyCommandParser parser \u003d new TogglePrivacyCommandParser();","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lohtianwei"},"content":"    public void parseInvalidIndex() {","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lohtianwei"},"content":"        // zero index","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lohtianwei"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lohtianwei"},"content":"        //negative index","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lohtianwei"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lohtianwei"},"content":"        //invalid index","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lohtianwei"},"content":"        assertParseFailure(parser, \"1 random\", MESSAGE_INVALID_FORMAT);","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lohtianwei"},"content":"    public void parseMissingField_fail() {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lohtianwei"},"content":"        // no prefix specified","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lohtianwei"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_NO_FIELDS);","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lohtianwei"},"content":"        //no index specified","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lohtianwei"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lohtianwei"},"content":"        //nothing specified after command word","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lohtianwei"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lohtianwei"},"content":"    public void parseInvalidPrefix_fail() {","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lohtianwei"},"content":"        assertParseFailure(parser, \"1\" + \" \" + PREFIX_NAME,","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lohtianwei"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, TogglePrivacyCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lohtianwei"},"content":"    public void parseOneField_success() throws ParseException {","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lohtianwei"},"content":"        Index target \u003d INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lohtianwei"},"content":"        String input \u003d target.getOneBased() + \" \" + PREFIX_PHONE;","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lohtianwei"},"content":"        EditPersonPrivacy epp \u003d new EditPersonPrivacyBuilder().setPhonePrivate(\"false\").build();","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lohtianwei"},"content":"        TogglePrivacyCommand expected \u003d new TogglePrivacyCommand(target, epp);","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lohtianwei"},"content":"        TogglePrivacyCommand actual \u003d parser.parse(input);","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lohtianwei"},"content":"        compareTpCommand(expected, actual);","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lohtianwei"},"content":"    public void parseValidFollowedbyInvalid_success() throws ParseException {","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lohtianwei"},"content":"        Index target \u003d INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lohtianwei"},"content":"        String input \u003d target.getOneBased() + \" \" + PREFIX_PHONE + \" \" + PREFIX_NAME;","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lohtianwei"},"content":"        EditPersonPrivacy epp \u003d new EditPersonPrivacyBuilder().setPhonePrivate(\"false\").build();","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lohtianwei"},"content":"        TogglePrivacyCommand expected \u003d new TogglePrivacyCommand(target, epp);","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lohtianwei"},"content":"        TogglePrivacyCommand actual \u003d parser.parse(input);","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lohtianwei"},"content":"        compareTpCommand(expected, actual);","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lohtianwei"},"content":"    /**","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"lohtianwei"},"content":"     * Checks if two TP commands are equal","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lohtianwei"},"content":"     * @param expected","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lohtianwei"},"content":"     * @param actual","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"lohtianwei"},"content":"     */","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"lohtianwei"},"content":"    private void compareTpCommand(TogglePrivacyCommand expected, TogglePrivacyCommand actual) {","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"lohtianwei"},"content":"        assertEquals(expected.getIndex(), actual.getIndex());","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"lohtianwei"},"content":"        assertEquals(expected.getEpp().getPrivateRemark(), actual.getEpp().getPrivateRemark());","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"lohtianwei"},"content":"        assertEquals(expected.getEpp().getPrivateAddress(), actual.getEpp().getPrivateAddress());","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"lohtianwei"},"content":"        assertEquals(expected.getEpp().getPrivateRating(), actual.getEpp().getPrivateRating());","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"lohtianwei"},"content":"        assertEquals(expected.getEpp().getPrivatePhone(), actual.getEpp().getPrivatePhone());","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"lohtianwei"},"content":"        assertEquals(expected.getEpp().getPrivateEmail(), actual.getEpp().getPrivateEmail());","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"lohtianwei"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":95}},{"path":"src/test/java/seedu/address/model/tag/TagTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.testutil.Assert;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Tag(null));","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"    @Test","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"    public void constructor_invalidTagColourName_throwsIllegalArgumentException() {","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"        String invalidTagColourName \u003d \"\";","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagColourName));","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // null tag name","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"codeeong"},"content":"    @Test","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codeeong"},"content":"    public void isValidTagColour() {","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"codeeong"},"content":"        // null tag name","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"codeeong"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagColour(null));","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":12,"-":26}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertFalse;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.File;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.Rule;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.rules.ExpectedException;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.rules.TemporaryFolder;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String TEST_DATA_FOLDER \u003d FileUtil.getPath(\"./src/test/data/JsonUserPrefsStorageTest/\");","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Rule","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Rule","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public TemporaryFolder testFolder \u003d new TemporaryFolder();","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() throws DataConversionException {","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        thrown.expect(NullPointerException.class);","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        readUserPrefs(null);","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() throws DataConversionException {","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        thrown.expect(DataConversionException.class);","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        readUserPrefs(\"NotJsonFormatUserPrefs.json\");","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        /* IMPORTANT: Any code below an exception-throwing line (like the one above) will be ignored.","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"         * That means you should not have more than one exception test in one method","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"         */","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private String addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER + userPrefsFileInTestDataFolder","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"                : null;","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(1000, 500, 300, 100);","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"codeeong"},"content":"        userPrefs.setAddressBookFilePath(\"myteammanager.xml\");","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookName(\"TypicalAddressBookName\");","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return userPrefs;","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        thrown.expect(NullPointerException.class);","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        saveUserPrefs(null, \"SomeFile.json\");","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        thrown.expect(NullPointerException.class);","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        saveUserPrefs(new UserPrefs(), null);","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        original.setGuiSettings(1200, 200, 0, 2);","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String pefsFilePath \u003d testFolder.getRoot() + File.separator + \"TempPrefs.json\";","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        original.setGuiSettings(5, 5, 5, 5);","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":1,"-":134}},{"path":"src/test/java/seedu/address/testutil/EditPersonPrivacyBuilder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lohtianwei"},"content":"//@@author lohtianwei","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.TogglePrivacyCommand.EditPersonPrivacy;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lohtianwei"},"content":"/**","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lohtianwei"},"content":" * A utility class to help with building EditPersonPrivacy objects.","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lohtianwei"},"content":" */","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lohtianwei"},"content":"public class EditPersonPrivacyBuilder {","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lohtianwei"},"content":"    private EditPersonPrivacy epp;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lohtianwei"},"content":"    public EditPersonPrivacyBuilder() {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lohtianwei"},"content":"        epp \u003d new EditPersonPrivacy();","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lohtianwei"},"content":"    public EditPersonPrivacyBuilder(EditPersonPrivacy epp) {","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lohtianwei"},"content":"        this.epp \u003d new EditPersonPrivacy(epp);","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lohtianwei"},"content":"    /**","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lohtianwei"},"content":"     * Returns an {@code EditPersonPrivacy} with fields containing {@code person}\u0027s privacy details","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lohtianwei"},"content":"     */","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lohtianwei"},"content":"    public EditPersonPrivacyBuilder(Person p) {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lohtianwei"},"content":"        epp \u003d new EditPersonPrivacy();","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lohtianwei"},"content":"        epp.setPrivateAddress(p.getAddress().isPrivate());","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lohtianwei"},"content":"        epp.setPrivateEmail(p.getEmail().isPrivate());","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lohtianwei"},"content":"        epp.setPrivatePhone(p.getPhone().isPrivate());","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lohtianwei"},"content":"        epp.setPrivateRemark(p.getRemark().isPrivate());","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lohtianwei"},"content":"        epp.setPrivateRating(p.getRating().isPrivate());","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lohtianwei"},"content":"    public EditPersonPrivacyBuilder setPhonePrivate(String phone) {","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lohtianwei"},"content":"        if (phone.equals(\"Optional[true]\") || phone.equals(\"true\")) {","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lohtianwei"},"content":"            epp.setPrivatePhone(true);","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lohtianwei"},"content":"        } else if (phone.equals(\"Optional[false]\") || phone.equals(\"false\")) {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lohtianwei"},"content":"            epp.setPrivatePhone(false);","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lohtianwei"},"content":"        } else {","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lohtianwei"},"content":"            throw new IllegalArgumentException(\"Privacy of phone should be true or false\");","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lohtianwei"},"content":"        return this;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lohtianwei"},"content":"    public EditPersonPrivacyBuilder setEmailPrivate(String email) {","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lohtianwei"},"content":"        if (email.equals(\"Optional[true]\") || email.equals(\"true\")) {","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lohtianwei"},"content":"            epp.setPrivateEmail(true);","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lohtianwei"},"content":"        } else if (email.equals(\"Optional[false]\") || email.equals(\"false\")) {","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lohtianwei"},"content":"            epp.setPrivateEmail(false);","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lohtianwei"},"content":"        } else {","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lohtianwei"},"content":"            throw new IllegalArgumentException(\"Privacy of email should be true or false\");","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lohtianwei"},"content":"        return this;","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lohtianwei"},"content":"    public EditPersonPrivacyBuilder setAddressPrivate(String address) {","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lohtianwei"},"content":"        if (address.equals(\"Optional[true]\") || address.equals(\"true\")) {","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lohtianwei"},"content":"            epp.setPrivateAddress(true);","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lohtianwei"},"content":"        } else if (address.equals(\"Optional[false]\") || address.equals(\"false\")) {","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lohtianwei"},"content":"            epp.setPrivateAddress(false);","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lohtianwei"},"content":"        } else {","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lohtianwei"},"content":"            throw new IllegalArgumentException(\"Privacy of address should be true or false\");","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lohtianwei"},"content":"        return this;","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lohtianwei"},"content":"    public EditPersonPrivacyBuilder setRatingPrivate(String rating) {","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lohtianwei"},"content":"        if (rating.equals(\"Optional[true]\") || rating.equals(\"true\")) {","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lohtianwei"},"content":"            epp.setPrivateRating(true);","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lohtianwei"},"content":"        } else if (rating.equals(\"Optional[false]\") || rating.equals(\"false\")) {","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lohtianwei"},"content":"            epp.setPrivateRating(false);","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lohtianwei"},"content":"        } else {","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lohtianwei"},"content":"            throw new IllegalArgumentException(\"Privacy of rating should be true or false\");","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lohtianwei"},"content":"        return this;","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lohtianwei"},"content":"    public EditPersonPrivacyBuilder setRemarkPrivate(String remark) {","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lohtianwei"},"content":"        if (remark.equals(\"Optional[true]\") || remark.equals(\"true\")) {","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lohtianwei"},"content":"            epp.setPrivateRemark(true);","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lohtianwei"},"content":"        } else if (remark.equals(\"Optional[false]\") || remark.equals(\"false\")) {","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"lohtianwei"},"content":"            epp.setPrivateRemark(false);","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lohtianwei"},"content":"        } else {","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"lohtianwei"},"content":"            throw new IllegalArgumentException(\"Privacy of remark should be true or false\");","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lohtianwei"},"content":"        return this;","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"lohtianwei"},"content":"    public EditPersonPrivacy build() {","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"lohtianwei"},"content":"        return epp;","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"lohtianwei"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":89,"-":2}},{"path":"src/test/java/seedu/address/testutil/TeamBuilder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.testutil;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.team.Team;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.team.TeamName;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":" * A utility class to help with building a TeamList.","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"//@@author Codee","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TeamBuilder {","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_TEAM_NAME \u003d \"Arsenal\";","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private TeamName teamName;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public TeamBuilder() {","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        teamName \u003d new TeamName(DEFAULT_TEAM_NAME);","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Initializes the TeamBuilder with the data of {@code teamToCopy}.","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public TeamBuilder(Team teamToCopy) {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        teamName \u003d teamToCopy.getTeamName();","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Sets the {@code TeamName} of the {@code Team} that we are building.","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public TeamBuilder withTeamName(String teamName) {","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.teamName \u003d new TeamName(teamName);","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return this;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public Team build() {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return new Team(teamName);","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":8,"-":31}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JERSEY_NUMBER_17;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JERSEY_NUMBER_2;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POSITION_MIDFIELD;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POSITION_STRIKER;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RATING_0;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RATING_1;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Arrays;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lohtianwei"},"content":"import java.util.Collections;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class TypicalPersons {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withPhone(\"85355255\").withTags(\"friends\").withRating(\"0\")","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withPosition(\"1\").withJerseyNumber(\"1\").build();","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").withRating(\"1\")","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withPosition(\"2\").withJerseyNumber(\"2\").build();","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withRating(\"2\")","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .withPosition(\"3\").withJerseyNumber(\"3\").build();","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withRating(\"3\")","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .withPosition(\"4\").withJerseyNumber(\"4\").build();","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withRating(\"4\")","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"            .withPosition(\"1\").withJerseyNumber(\"5\").build();","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withRating(\"5\")","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            .withPosition(\"2\").withJerseyNumber(\"6\").build();","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withRemark(\"Could be famous\").withRating(\"0\")","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            .withPosition(\"3\").withJerseyNumber(\"7\").build();","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    // Manually added","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withRating(VALID_RATING_0)","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"            .withPosition(VALID_POSITION_STRIKER).withJerseyNumber(VALID_JERSEY_NUMBER_2)","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"            .withTags(VALID_TAG_FRIEND).build();","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withRating(VALID_RATING_1)","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"            .withPosition(VALID_POSITION_MIDFIELD).withJerseyNumber(VALID_JERSEY_NUMBER_17)","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"            try {","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"                ab.addPerson(person);","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"            } catch (DuplicatePersonException e) {","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"                throw new AssertionError(\"not possible\");","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return ab;","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"lohtianwei"},"content":"    //@@author lohtianwei","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"lohtianwei"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"lohtianwei"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"lohtianwei"},"content":"    public static List\u003cPerson\u003e getTypicalPersonsSortedByAddress() {","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"lohtianwei"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(DANIEL, ALICE, BENSON, GEORGE, FIONA, ELLE, CARL));","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"lohtianwei"},"content":"    public static List\u003cPerson\u003e getTypicalPersonsSortedByEmail() {","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"lohtianwei"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, GEORGE, DANIEL, CARL, BENSON, FIONA, ELLE));","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"lohtianwei"},"content":"    public static List\u003cPerson\u003e getTypicalPersonsSortedByPhone() {","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"lohtianwei"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, DANIEL, ELLE, FIONA, GEORGE, CARL, BENSON));","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"lohtianwei"},"content":"    public static AddressBook getSortedAddressBook(String field, String order) {","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"lohtianwei"},"content":"        AddressBook ab \u003d new AddressBook();","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"lohtianwei"},"content":"        List\u003cPerson\u003e personList;","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"lohtianwei"},"content":"        switch(field) {","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"lohtianwei"},"content":"        case \"name\":","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"lohtianwei"},"content":"            personList \u003d getTypicalPersons();","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"lohtianwei"},"content":"            break;","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"lohtianwei"},"content":"        case \"phone\":","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"lohtianwei"},"content":"            personList \u003d getTypicalPersonsSortedByPhone();","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"lohtianwei"},"content":"            break;","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"lohtianwei"},"content":"        case \"email\":","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"lohtianwei"},"content":"            personList \u003d getTypicalPersonsSortedByEmail();","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"lohtianwei"},"content":"            break;","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"lohtianwei"},"content":"        case \"address\":","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"lohtianwei"},"content":"            personList \u003d getTypicalPersonsSortedByAddress();","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"lohtianwei"},"content":"            break;","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"lohtianwei"},"content":"        default:","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"lohtianwei"},"content":"            personList \u003d getTypicalPersons();","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"lohtianwei"},"content":"        if (order.equals(\"desc\")) {","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"lohtianwei"},"content":"            Collections.reverse(personList);","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"lohtianwei"},"content":"        for (Person person : personList) {","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"lohtianwei"},"content":"            try {","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"lohtianwei"},"content":"                ab.addPerson(person);","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"lohtianwei"},"content":"            } catch (DuplicatePersonException e) {","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"lohtianwei"},"content":"                assert false : \"not possible\";","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"lohtianwei"},"content":"            }","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"lohtianwei"},"content":"        return ab;","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"lohtianwei"},"content":"    public static AddressBook getEmptyAddressBook() {","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"lohtianwei"},"content":"        AddressBook ab \u003d new AddressBook();","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"lohtianwei"},"content":"        return ab;","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"lohtianwei"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":59,"-":91}},{"path":"src/test/java/seedu/address/testutil/TypicalTags.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.testutil;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import java.util.ArrayList;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"import java.util.Arrays;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.AddressBook;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.tag.UniqueTagList;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":" * A utility class containing a list of {@code Tag} objects to be used in tests.","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"/** @@author Codee */","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"public class TypicalTags {","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"    public static final Tag GOOD_ATTITUDE \u003d new Tag(\"goodAttitude\", \"teal\");","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"    public static final Tag FRIEND \u003d new Tag(\"friends\", \"teal\");","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"    private TypicalTags() {} //prevents instantiation","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"codeeong"},"content":"     * Returns an {@code AddressBook} with all the typical teams.","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"codeeong"},"content":"    public static AddressBook getTypicalAddressBook() {","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"codeeong"},"content":"        AddressBook ab \u003d new AddressBook();","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"codeeong"},"content":"        for (Tag tag : getTypicalTags()) {","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"codeeong"},"content":"            try {","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codeeong"},"content":"                ab.addTag(tag);","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"codeeong"},"content":"            } catch (UniqueTagList.DuplicateTagException e) {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codeeong"},"content":"                throw new AssertionError(\"not possible\");","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"codeeong"},"content":"            }","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codeeong"},"content":"        return ab;","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"codeeong"},"content":"    public static List\u003cTag\u003e getTypicalTags() {","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"codeeong"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(GOOD_ATTITUDE, FRIEND));","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":43}},{"path":"src/test/java/seedu/address/ui/PlayerDetailsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import static org.junit.Assert.assertFalse;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"import static org.junit.Assert.assertTrue;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"import static seedu.address.ui.testutil.GuiTestAssert.assertPlayerDetailsDisplaysPerson;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"import guitests.guihandles.PlayerDetailsHandle;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"//@@author Codee","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PlayerDetailsTest extends GuiUnitTest {","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void display() {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // no tags","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Person personWithNoTags \u003d new PersonBuilder().withTags(new String[0]).build();","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        PlayerDetails playerDetails \u003d new PlayerDetails(personWithNoTags);","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        uiPartRule.setUiPart(playerDetails);","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertCardDisplay(playerDetails, personWithNoTags);","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void equals() {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        PlayerDetails playerDetails \u003d new PlayerDetails(person);","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(playerDetails.equals(playerDetails));","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(playerDetails.equals(null));","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(playerDetails.equals(0));","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different person, same index -\u003e returns false","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person differentPerson \u003d new PersonBuilder().withName(\"differentName\").build();","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(playerDetails.equals(new PlayerDetails(differentPerson)));","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Asserts that {@code playerDetails} displays the details of {@code expectedPerson} correctly","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private void assertCardDisplay(PlayerDetails playerDetails, Person expectedPerson) {","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        guiRobot.pauseForHuman();","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        PlayerDetailsHandle playerDetailsHandle \u003d new PlayerDetailsHandle(playerDetails.getRoot());","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // verify player details are displayed correctly","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertPlayerDetailsDisplaysPerson(expectedPerson, playerDetailsHandle);","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":13,"-":44}},{"path":"src/test/java/seedu/address/ui/TeamDisplayTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import static seedu.address.testutil.EventsUtil.postNow;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"import static seedu.address.ui.testutil.GuiTestAssert.assertTeamDisplayEquals;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"import org.junit.Before;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"import guitests.guihandles.TeamDisplayHandle;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.ShowNewTeamNameEvent;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.team.Team;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.team.TeamName;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"import seedu.address.testutil.TeamBuilder;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":" * tests for TeamDisplay UI Component.","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"/** @@author Codee */","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"public class TeamDisplayTest extends GuiUnitTest {","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codeeong"},"content":"    private static final String NEW_TEAM_NAME \u003d \"myTeam\";","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"codeeong"},"content":"    private static final ShowNewTeamNameEvent SHOW_NEW_TEAM_NAME_EVENT \u003d new ShowNewTeamNameEvent(NEW_TEAM_NAME);","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"codeeong"},"content":"    private TeamDisplay teamDisplay;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"codeeong"},"content":"    private TeamDisplayHandle teamDisplayHandle;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"codeeong"},"content":"    private ObservableList\u003cTeam\u003e teamList;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codeeong"},"content":"    @Before","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"codeeong"},"content":"    public void setUp() {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        teamList \u003d FXCollections.observableArrayList();","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        teamList.add(new TeamBuilder().withTeamName(\"Arsenal\").build());","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        teamList.add(new TeamBuilder().withTeamName(\"Chelsea\").build());","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codeeong"},"content":"        teamDisplay \u003d new TeamDisplay(teamList);","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"codeeong"},"content":"        uiPartRule.setUiPart(teamDisplay);","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"codeeong"},"content":"        teamDisplayHandle \u003d new TeamDisplayHandle(teamDisplay.getRoot());","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"codeeong"},"content":"    @Test","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"codeeong"},"content":"    public void display() {","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"codeeong"},"content":"        assertTeamDisplay(teamDisplay, teamList);","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"codeeong"},"content":"     * Asserts that {@code personCard} displays the details of {@code expectedPerson} correctly and matches","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"codeeong"},"content":"     * {@code expectedId}.","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"codeeong"},"content":"    private void assertTeamDisplay(TeamDisplay teamDisplay, ObservableList\u003cTeam\u003e teamlist) {","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"codeeong"},"content":"        guiRobot.pauseForHuman();","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"codeeong"},"content":"        // verify team names are displayed correctly","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"codeeong"},"content":"        assertTeamDisplayEquals(teamDisplay, teamDisplayHandle);","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"codeeong"},"content":"    @Test","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"codeeong"},"content":"    public void handleShowNewTeamNameEvent() {","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"codeeong"},"content":"        postNow(SHOW_NEW_TEAM_NAME_EVENT);","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"codeeong"},"content":"        // verify team names are displayed correctly after event","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"codeeong"},"content":"        guiRobot.pauseForHuman();","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"codeeong"},"content":"        teamList.add(new Team(new TeamName(NEW_TEAM_NAME)));","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"codeeong"},"content":"        TeamDisplay expectedTeamDisplay \u003d new TeamDisplay(teamList);","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"codeeong"},"content":"        teamDisplayHandle \u003d new TeamDisplayHandle(teamDisplay.getRoot());","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"codeeong"},"content":"        // verify team names are displayed correctly","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"codeeong"},"content":"        assertTeamDisplayEquals(expectedTeamDisplay, teamDisplayHandle);","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":65,"-":4}},{"path":"src/test/java/seedu/address/ui/UiPartTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertNotNull;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.Rule;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.rules.ExpectedException;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.rules.TemporaryFolder;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.Assert;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class UiPartTest {","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Rule","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Rule","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public TemporaryFolder testFolder \u003d new TemporaryFolder();","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.getRoot().toURI().toURL(), MISSING_FILE_PATH);","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertNotNull(testFilePathInView + \" does not exist.\", testFileUrl);","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return testFileUrl;","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @FXML","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false}],"authorContributionMap":{"codeeong":1,"-":118}},{"path":"src/test/java/seedu/address/ui/testutil/GuiTestAssert.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui.testutil;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"import static org.junit.Assert.fail;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"import java.util.Arrays;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import guitests.guihandles.PersonCardHandle;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import guitests.guihandles.PersonListPanelHandle;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"import guitests.guihandles.PlayerDetailsHandle;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import guitests.guihandles.ResultDisplayHandle;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"import guitests.guihandles.TeamDisplayHandle;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"import seedu.address.ui.PersonCard;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"import seedu.address.ui.TeamDisplay;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing GUI tests.","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class GuiTestAssert {","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"    private static final String LABEL_DEFAULT_STYLE \u003d \"label\";","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Asserts that {@code actualCard} displays the same values as {@code expectedCard}.","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static void assertCardEquals(PersonCardHandle expectedCard, PersonCardHandle actualCard) {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(expectedCard.getId(), actualCard.getId());","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"codeeong"},"content":"        assertEquals(expectedCard.getPosition(), actualCard.getPosition());","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codeeong"},"content":"        assertEquals(expectedCard.getRating(), actualCard.getRating());","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(expectedCard.getName(), actualCard.getName());","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codeeong"},"content":"        assertEquals(expectedCard.getTeamName(), actualCard.getTeamName());","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(expectedCard.getTags(), actualCard.getTags());","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codeeong"},"content":"        expectedCard.getTags().forEach(tag -\u003e","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"codeeong"},"content":"                assertEquals(expectedCard.getTagStyleClasses(tag), actualCard.getTagStyleClasses(tag)));","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"codeeong"},"content":"     * Asserts that {@code actualTeamDisplay} displays the details of {@code expectedTeamDisplay}.","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    //@@author Codee","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static void assertTeamDisplayEquals(TeamDisplay expectedTeamDisplay, TeamDisplayHandle actualTeamDisplay) {","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        expectedTeamDisplay.getTeams().forEach(team -\u003e","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"                assertEquals(expectedTeamDisplay.getTeams().toString(), actualTeamDisplay.getTeams().toString()));","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //@@author","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Asserts that {@code actualCard} displays the details of {@code expectedPerson}.","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static void assertCardDisplaysPerson(Person expectedPerson, PersonCardHandle actualCard) {","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(expectedPerson.getName().fullName, actualCard.getName());","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"codeeong"},"content":"        assertEquals(expectedPerson.getTeamName().toString(), actualCard.getTeamName());","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"codeeong"},"content":"        assertEquals(expectedPerson.getRating().value, actualCard.getRating());","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"codeeong"},"content":"        assertEquals(expectedPerson.getPosition().getPositionName(), actualCard.getPosition());","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"codeeong"},"content":"        assertTagsEqual(expectedPerson, actualCard);","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"codeeong"},"content":"     * Asserts that {@code actualPlayerDetails} displays the details of {@code expectedPerson}.","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    //@@author Codee","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static void assertPlayerDetailsDisplaysPerson(Person expectedPerson, PlayerDetailsHandle actualPlayerPanel) {","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(expectedPerson.getName().fullName, actualPlayerPanel.getName());","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(expectedPerson.getAddress().toString(), actualPlayerPanel.getAddress());","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(expectedPerson.getEmail().value, actualPlayerPanel.getEmail());","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expectedPerson.getJerseyNumber().value, actualPlayerPanel.getJerseyNumber());","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(expectedPerson.getPhone().value, actualPlayerPanel.getPhone());","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedPerson.getRemark().toString(), actualPlayerPanel.getRemarks());","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    //@@author","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"codeeong"},"content":"     * Returns the color style for {@code tagName}\u0027s label. The tag\u0027s color is determined by looking up the color","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"codeeong"},"content":"     * of {@tagColour}","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"codeeong"},"content":"     *","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"codeeong"},"content":"     * @see PersonCard getTagColorStyleFor(String)","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"codeeong"},"content":"    private static String getTagColorStyleFor(String tagName) {","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"codeeong"},"content":"        switch (tagName) {","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"codeeong"},"content":"        case \"classmates\":","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"codeeong"},"content":"        case \"owesMoney\":","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"codeeong"},"content":"        case \"colleagues\":","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"codeeong"},"content":"        case \"neighbours\":","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"codeeong"},"content":"        case \"family\":","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"codeeong"},"content":"        case \"friend\":","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"codeeong"},"content":"        case \"friends\":","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"codeeong"},"content":"        case \"husband\":","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"codeeong"},"content":"        case \"redCard\":","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"codeeong"},"content":"        case \"yellowCard\":","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"codeeong"},"content":"        case \"goodAttitude\":","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"codeeong"},"content":"        case \"badAttitude\":","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"codeeong"},"content":"        case \"injured\":","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"codeeong"},"content":"        case \"fastRunner\":","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"codeeong"},"content":"            return \"teal\";","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"codeeong"},"content":"        default:","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"codeeong"},"content":"            fail(tagName + \" does not have a color assigned.\");","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"codeeong"},"content":"            return \"\";","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"codeeong"},"content":"     * Asserts that the tags in {@code actualCard} matches all the tags in {@code expectedPerson} with the correct","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"codeeong"},"content":"     * color.","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"codeeong"},"content":"    private static void assertTagsEqual(Person expectedPerson, PersonCardHandle actualCard) {","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"codeeong"},"content":"        List\u003cString\u003e expectedTags \u003d expectedPerson.getTags().stream()","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"codeeong"},"content":"                .map(tag -\u003e tag.tagName).collect(Collectors.toList());","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"codeeong"},"content":"        assertEquals(expectedTags, actualCard.getTags());","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"codeeong"},"content":"        expectedTags.forEach(tag -\u003e","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"codeeong"},"content":"                assertEquals(Arrays.asList(LABEL_DEFAULT_STYLE, getTagColorStyleFor(tag)),","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"codeeong"},"content":"                        actualCard.getTagStyleClasses(tag)));","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Asserts that the list in {@code personListPanelHandle} displays the details of {@code persons} correctly and","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * in the correct order.","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static void assertListMatching(PersonListPanelHandle personListPanelHandle, Person... persons) {","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.length; i++) {","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"            assertCardDisplaysPerson(persons[i], personListPanelHandle.getPersonCardHandle(i));","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Asserts that the list in {@code personListPanelHandle} displays the details of {@code persons} correctly and","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * in the correct order.","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public static void assertListMatching(PersonListPanelHandle personListPanelHandle, List\u003cPerson\u003e persons) {","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertListMatching(personListPanelHandle, persons.toArray(new Person[0]));","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Asserts the size of the list in {@code personListPanelHandle} equals to {@code size}.","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public static void assertListSize(PersonListPanelHandle personListPanelHandle, int size) {","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        int numberOfPeople \u003d personListPanelHandle.getListSize();","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(size, numberOfPeople);","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Asserts the message shown in {@code resultDisplayHandle} equals to {@code expected}.","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public static void assertResultMessage(ResultDisplayHandle resultDisplayHandle, String expected) {","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expected, resultDisplayHandle.getText());","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":70,"-":81}},{"path":"src/test/java/systemtests/AddCommandSystemTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package systemtests;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AVATAR_MAC_LINUX;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AVATAR_WINDOWS;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_AVATAR_NO_FILE;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_AVATAR_TYPE;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_JERSEY_NUMBER_DESC;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_POSITION_DESC;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_RATING_DESC;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.JERSEY_NUMBER_DESC_17;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codeeong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POSITION_DESC_MIDFILED;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POSITION_DESC_STRIKER;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RATING_DESC_0;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"codeeong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RATING_DESC_1;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AVATAR_MAC_LINUX;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AVATAR_WINDOWS;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JERSEY_NUMBER_17;","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JERSEY_NUMBER_2;","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POSITION_STRIKER;","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RATING_0;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.UNSPECIFIED_FIELD;","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.KEYWORD_MATCHING_MEIER;","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"import com.sun.javafx.PlatformUtil;","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.RedoCommand;","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.UndoCommand;","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Avatar;","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"import seedu.address.model.person.JerseyNumber;","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Position;","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Rating;","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"public class AddCommandSystemTest extends AddressBookSystemTest {","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void add() throws Exception {","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Model model \u003d getModel();","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        /* ------------------------ Perform add operations on the shown unfiltered list ----------------------------- */","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        /* Case: add a person without tags to a non-empty address book, command with leading spaces and trailing spaces","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"         * -\u003e added","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"         */","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Avatar.setUpPlaceholderForTest();","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person toAdd \u003d AMY;","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + RATING_DESC_0 + POSITION_DESC_STRIKER + JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, toAdd);","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        /* Case: undo adding Amy to the list -\u003e Amy deleted */","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        command \u003d UndoCommand.COMMAND_WORD;","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedResultMessage \u003d UndoCommand.MESSAGE_SUCCESS;","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedResultMessage);","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        /* Case: redo adding Amy to the list -\u003e Amy added again */","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        command \u003d RedoCommand.COMMAND_WORD;","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        expectedResultMessage \u003d RedoCommand.MESSAGE_SUCCESS;","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedResultMessage);","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Case: add a person with all fields same as another person in the address book except name -\u003e added */","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        toAdd \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).withRating(VALID_RATING_0)","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .withPosition(VALID_POSITION_STRIKER).withJerseyNumber(VALID_JERSEY_NUMBER_2).build();","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_BOB + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND  + \" \" + RATING_DESC_0 + \"   \" + POSITION_DESC_STRIKER + \"   \"","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"                + JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, toAdd);","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        /* Case: add a person with all fields same as another person in the address book except phone -\u003e added */","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        toAdd \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY)","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).withRating(VALID_RATING_0)","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .withPosition(VALID_POSITION_STRIKER).withJerseyNumber(VALID_JERSEY_NUMBER_2).build();","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"codeeong"},"content":"                + TAG_DESC_FRIEND + RATING_DESC_0 + POSITION_DESC_STRIKER + JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, toAdd);","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        /* Case: add a person with all fields same as another person in the address book except email -\u003e added */","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        toAdd \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_BOB)","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).withRating(VALID_RATING_0)","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .withPosition(VALID_POSITION_STRIKER).withJerseyNumber(VALID_JERSEY_NUMBER_2).build();","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND  + \" \" + RATING_DESC_0 + \"   \" + POSITION_DESC_STRIKER + \"   \"","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"                + JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, toAdd);","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        /* Case: add a person with all fields same as another person in the address book except address -\u003e added */","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        toAdd \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND).withRating(VALID_RATING_0)","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .withPosition(VALID_POSITION_STRIKER).withJerseyNumber(VALID_JERSEY_NUMBER_2).build();","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_BOB","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND  + \" \" + RATING_DESC_0 + \"   \" + POSITION_DESC_STRIKER + \"   \"","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"                + JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, toAdd);","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        /* Case: add to empty address book -\u003e added */","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        deleteAllPersons();","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertCommandSuccess(ALICE);","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        /* Case: add a person with tags, command with parameters in random order -\u003e added */","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        toAdd \u003d BOB;","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + TAG_DESC_FRIEND + PHONE_DESC_BOB + ADDRESS_DESC_BOB + NAME_DESC_BOB","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"codeeong"},"content":"                + TAG_DESC_HUSBAND + EMAIL_DESC_BOB + POSITION_DESC_MIDFILED + JERSEY_NUMBER_DESC_17 + RATING_DESC_1;","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, toAdd);","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        /* Case: add a person, missing tags -\u003e added */","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertCommandSuccess(HOON);","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        /* Case: missing phone -\u003e added */","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        toAdd \u003d new PersonBuilder().withName(VALID_NAME_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"                .withPhone(UNSPECIFIED_FIELD).withTags().withRating(VALID_RATING_0)","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"                .withPosition(VALID_POSITION_STRIKER).withJerseyNumber(VALID_JERSEY_NUMBER_2).build();","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + RATING_DESC_0","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"                + POSITION_DESC_STRIKER + JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, toAdd);","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        /* Case: missing address -\u003e added */","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        toAdd \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"                .withAddress(UNSPECIFIED_FIELD).withTags().withRating(VALID_RATING_0)","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"                .withPosition(VALID_POSITION_STRIKER).withJerseyNumber(VALID_JERSEY_NUMBER_2).build();","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + RATING_DESC_0","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"                + POSITION_DESC_STRIKER + JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, toAdd);","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        /* Case: missing rating -\u003e added */","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        toAdd \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_AMY).withTags().withRating(UNSPECIFIED_FIELD)","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withPosition(VALID_POSITION_STRIKER).withJerseyNumber(VALID_JERSEY_NUMBER_2).build();","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"                + POSITION_DESC_STRIKER + JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, toAdd);","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        if (PlatformUtil.isWindows()) {","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"            toAdd \u003d new PersonBuilder().withName(VALID_NAME_BOB).withEmail(VALID_EMAIL_BOB)","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"                    .withPhone(VALID_PHONE_AMY).withAddress(VALID_ADDRESS_AMY).withAvatar(VALID_AVATAR_WINDOWS)","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"                    .withTags(VALID_TAG_FRIEND).withRating(VALID_RATING_0).withJerseyNumber(VALID_JERSEY_NUMBER_17)","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"                            .build();","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"            command \u003d AddCommand.COMMAND_WORD + NAME_DESC_BOB + EMAIL_DESC_BOB + AVATAR_WINDOWS","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"                    + PHONE_DESC_AMY + ADDRESS_DESC_AMY + RATING_DESC_0 + JERSEY_NUMBER_DESC_17 + POSITION_DESC_STRIKER","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"                    + TAG_DESC_FRIEND;","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"            assertCommandSuccess(command, toAdd);","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } else if (PlatformUtil.isMac() || PlatformUtil.isLinux()) {","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"            toAdd \u003d new PersonBuilder().withName(VALID_NAME_BOB).withEmail(VALID_EMAIL_BOB)","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"                    .withPhone(VALID_PHONE_AMY).withAddress(VALID_ADDRESS_AMY).withAvatar(VALID_AVATAR_MAC_LINUX)","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"                    .withTags(VALID_TAG_FRIEND).withRating(VALID_RATING_0).withJerseyNumber(VALID_JERSEY_NUMBER_17)","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"                    .build();","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"            command \u003d AddCommand.COMMAND_WORD + NAME_DESC_BOB + EMAIL_DESC_BOB + AVATAR_MAC_LINUX","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"                    + PHONE_DESC_AMY + ADDRESS_DESC_AMY + RATING_DESC_0 + JERSEY_NUMBER_DESC_17 + POSITION_DESC_STRIKER","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"                    + TAG_DESC_FRIEND;","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"            assertCommandSuccess(command, toAdd);","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        /* -------------------------- Perform add operation on the shown filtered list ------------------------------ */","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"        /* Case: filters the person list before adding -\u003e added */","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        showPersonsWithName(KEYWORD_MATCHING_MEIER);","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertCommandSuccess(IDA);","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"        /* ------------------------ Perform add operation while a person card is selected --------------------------- */","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"        /* Case: selects first card in the person list, add a person -\u003e added, card selection remains unchanged */","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        selectPerson(Index.fromOneBased(1));","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertCommandSuccess(CARL);","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"        /* ----------------------------------- Perform invalid add operations --------------------------------------- */","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"        /* Case: add a duplicate person -\u003e rejected */","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        command \u003d PersonUtil.getAddCommand(HOON);","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"        assertCommandFailure(command, AddCommand.MESSAGE_DUPLICATE_PERSON);","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"        /* Case: add a duplicate person except with different tags -\u003e rejected */","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"        // \"friends\" is an existing tag used in the default model, see TypicalPersons#ALICE","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"        // This test will fail if a new tag that is not in the model is used, see the bug documented in","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"        // AddressBook#addPerson(Person)","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"        command \u003d PersonUtil.getAddCommand(HOON) + \" \" + PREFIX_TAG.getPrefix() + \"friends\";","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"        assertCommandFailure(command, AddCommand.MESSAGE_DUPLICATE_PERSON);","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"        /* Case: missing name -\u003e rejected */","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + RATING_DESC_0","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"                + POSITION_DESC_STRIKER + JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"        assertCommandFailure(command, String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"        /* Case: missing email -\u003e rejected */","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + ADDRESS_DESC_AMY + RATING_DESC_0","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"                + POSITION_DESC_STRIKER + JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"        assertCommandFailure(command, String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"        /* Case: invalid keyword -\u003e rejected */","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"        command \u003d \"adds \" + PersonUtil.getPersonDetails(toAdd);","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"        assertCommandFailure(command, Messages.MESSAGE_UNKNOWN_COMMAND);","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"        /* Case: invalid name -\u003e rejected */","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + INVALID_NAME_DESC + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"                + RATING_DESC_0 + POSITION_DESC_STRIKER + JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"        assertCommandFailure(command, Name.MESSAGE_NAME_CONSTRAINTS);","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"        /* Case: invalid phone -\u003e rejected */","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + INVALID_PHONE_DESC + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"                + RATING_DESC_0 + POSITION_DESC_STRIKER + JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"        assertCommandFailure(command, Phone.MESSAGE_PHONE_CONSTRAINTS);","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"        /* Case: invalid email -\u003e rejected */","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + INVALID_EMAIL_DESC + ADDRESS_DESC_AMY","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"                + RATING_DESC_0 + POSITION_DESC_STRIKER + JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"        assertCommandFailure(command, Email.MESSAGE_EMAIL_CONSTRAINTS);","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"        /* Case: invalid address -\u003e rejected */","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + INVALID_ADDRESS_DESC","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"                + RATING_DESC_0 + POSITION_DESC_STRIKER + JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"        assertCommandFailure(command, Address.MESSAGE_ADDRESS_CONSTRAINTS);","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"        /* Case: invalid tag -\u003e rejected */","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + RATING_DESC_0 + POSITION_DESC_STRIKER + JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"        assertCommandFailure(command, Tag.MESSAGE_TAG_CONSTRAINTS);","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"        //@@author lithiumlkid","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"        /* Case: invalid rating -\u003e rejected */","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"                 + INVALID_RATING_DESC + POSITION_DESC_STRIKER + JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"        assertCommandFailure(command, Rating.MESSAGE_RATING_CONSTRAINTS);","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"        /* Case: invalid position -\u003e rejected */","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"                 + RATING_DESC_0 + INVALID_POSITION_DESC + JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"        assertCommandFailure(command, Position.MESSAGE_POSITION_CONSTRAINTS);","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"        /* Case: invalid jersey number -\u003e rejected */","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"                 + RATING_DESC_0 + POSITION_DESC_STRIKER + INVALID_JERSEY_NUMBER_DESC;","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"        assertCommandFailure(command, JerseyNumber.MESSAGE_JERSEY_NUMBER_CONSTRAINTS);","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"        /* Case: invalid jersey avatar -\u003e rejected */","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"                + RATING_DESC_0 + POSITION_DESC_STRIKER + JERSEY_NUMBER_DESC_2 + INVALID_AVATAR_NO_FILE;","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"        assertCommandFailure(command, AddCommand.MESSAGE_FILE_NOT_FOUND);","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"        /* Case: invalid jersey avatar -\u003e rejected */","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"                + RATING_DESC_0 + POSITION_DESC_STRIKER + JERSEY_NUMBER_DESC_2 + INVALID_AVATAR_TYPE;","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"        assertCommandFailure(command, Avatar.MESSAGE_AVATAR_CONSTRAINTS);","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"     * Executes the {@code AddCommand} that adds {@code toAdd} to the model and asserts that the,\u003cbr\u003e","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"     * 1. Command box displays an empty string.\u003cbr\u003e","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"     * 2. Command box has the default style class.\u003cbr\u003e","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"     * 3. Result display box displays the success message of executing {@code AddCommand} with the details of","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"     * {@code toAdd}.\u003cbr\u003e","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"     * 4. {@code Model}, {@code Storage} and {@code PersonListPanel} equal to the corresponding components in","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"     * the current model added with {@code toAdd}.\u003cbr\u003e","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"     * 5. Browser url and selected card remain unchanged.\u003cbr\u003e","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"     * 6. Status bar\u0027s sync status changes.\u003cbr\u003e","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"     * Verifications 1, 3 and 4 are performed by","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"     * {@code AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"     * @see AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(Person toAdd) {","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"        assertCommandSuccess(PersonUtil.getAddCommand(toAdd), toAdd);","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"     * Performs the same verification as {@code assertCommandSuccess(Person)}. Executes {@code command}","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"     * instead.","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"     * @see AddCommandSystemTest#assertCommandSuccess(Person)","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String command, Person toAdd) {","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d getModel();","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"            expectedModel.addPerson(toAdd);","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"        } catch (DuplicatePersonException dpe) {","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"toAdd already exists in the model.\");","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"        // TODO: place holder for success message, change to proper assert method","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"        String expectedResultMessage \u003d String.format(AddCommand.MESSAGE_SUCCESS, toAdd);","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, expectedModel, expectedResultMessage);","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"     * Performs the same verification as {@code assertCommandSuccess(String, Person)} except asserts that","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"     * the,\u003cbr\u003e","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"     * 1. Result display box displays {@code expectedResultMessage}.\u003cbr\u003e","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"     * 2. {@code Model}, {@code Storage} and {@code PersonListPanel} equal to the corresponding components in","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"     * {@code expectedModel}.\u003cbr\u003e","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"     * @see AddCommandSystemTest#assertCommandSuccess(String, Person)","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String command, Model expectedModel, String expectedResultMessage) {","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"        executeCommand(command);","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"        assertApplicationDisplaysExpected(\"\", expectedResultMessage, expectedModel);","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"        assertSelectedCardUnchanged();","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"        assertCommandBoxShowsDefaultStyle();","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"        assertStatusBarUnchangedExceptSyncStatus();","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"     * Executes {@code command} and asserts that the,\u003cbr\u003e","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"     * 1. Command box displays {@code command}.\u003cbr\u003e","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"     * 2. Command box has the error style class.\u003cbr\u003e","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"     * 3. Result display box displays {@code expectedResultMessage}.\u003cbr\u003e","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"     * 4. {@code Model}, {@code Storage} and {@code PersonListPanel} remain unchanged.\u003cbr\u003e","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"     * 5. Browser url, selected card and status bar remain unchanged.\u003cbr\u003e","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"     * Verifications 1, 3 and 4 are performed by","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"     * {@code AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"     * @see AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String command, String expectedResultMessage) {","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d getModel();","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"        executeCommand(command);","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"        assertApplicationDisplaysExpected(command, expectedResultMessage, expectedModel);","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"        assertSelectedCardUnchanged();","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"        assertCommandBoxShowsErrorStyle();","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"        assertStatusBarUnchanged();","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":5,"-":359}},{"path":"src/test/java/systemtests/AddressBookSystemTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package systemtests;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertFalse;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertTrue;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.ui.StatusBarFooter.SYNC_STATUS_INITIAL;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.ui.StatusBarFooter.SYNC_STATUS_UPDATED;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.ui.testutil.GuiTestAssert.assertListMatching;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Date;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.After;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.Before;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.BeforeClass;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.ClassRule;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import guitests.guihandles.CommandBoxHandle;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import guitests.guihandles.MainMenuHandle;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import guitests.guihandles.MainWindowHandle;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import guitests.guihandles.PersonListPanelHandle;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import guitests.guihandles.ResultDisplayHandle;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import guitests.guihandles.StatusBarFooterHandle;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.TestApp;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.EventsCenter;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.SelectCommand;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.ui.CommandBox;","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":" * A system test class for AddressBook, which provides access to handles of GUI components and helper methods","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":" * for test verification.","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"public abstract class AddressBookSystemTest {","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @ClassRule","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static ClockRule clockRule \u003d new ClockRule();","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e COMMAND_BOX_DEFAULT_STYLE \u003d Arrays.asList(\"text-input\", \"text-field\");","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e COMMAND_BOX_ERROR_STYLE \u003d","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            Arrays.asList(\"text-input\", \"text-field\", CommandBox.ERROR_STYLE_CLASS);","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private MainWindowHandle mainWindowHandle;","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private TestApp testApp;","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private SystemTestSetupHelper setupHelper;","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @BeforeClass","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static void setupBeforeClass() {","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        SystemTestSetupHelper.initialize();","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Before","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setUp() {","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        setupHelper \u003d new SystemTestSetupHelper();","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        testApp \u003d setupHelper.setupApplication(this::getInitialData, getDataFileLocation());","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        mainWindowHandle \u003d setupHelper.setupMainWindowHandle();","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertApplicationStartingStateIsCorrect();","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @After","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void tearDown() throws Exception {","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setupHelper.tearDownStage();","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        EventsCenter.clearSubscribers();","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns the data to be loaded into the file in {@link #getDataFileLocation()}.","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    protected AddressBook getInitialData() {","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return TypicalPersons.getTypicalAddressBook();","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Returns the directory of the data file.","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    protected String getDataFileLocation() {","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return TestApp.SAVE_LOCATION_FOR_TESTING;","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public MainWindowHandle getMainWindowHandle() {","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return mainWindowHandle;","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public CommandBoxHandle getCommandBox() {","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return mainWindowHandle.getCommandBox();","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public PersonListPanelHandle getPersonListPanel() {","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return mainWindowHandle.getPersonListPanel();","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public MainMenuHandle getMainMenu() {","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return mainWindowHandle.getMainMenu();","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public StatusBarFooterHandle getStatusBarFooter() {","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return mainWindowHandle.getStatusBarFooter();","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public ResultDisplayHandle getResultDisplay() {","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return mainWindowHandle.getResultDisplay();","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes {@code command} in the application\u0027s {@code CommandBox}.","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Method returns after UI components have been updated.","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    protected void executeCommand(String command) {","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        rememberStates();","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // Injects a fixed clock before executing a command so that the time stamp shown in the status bar","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // after each command is predictable and also different from the previous command.","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        clockRule.setInjectedClockToCurrentTime();","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        mainWindowHandle.getCommandBox().run(command);","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Displays all persons in the address book.","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    protected void showAllPersons() {","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        executeCommand(ListCommand.COMMAND_WORD);","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(getModel().getAddressBook().getPersonList().size(), getModel().getFilteredPersonList().size());","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Displays all persons with any parts of their names matching {@code keyword} (case-insensitive).","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    protected void showPersonsWithName(String keyword) {","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        executeCommand(FindCommand.COMMAND_WORD + \" \" + keyword);","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertTrue(getModel().getFilteredPersonList().size() \u003c getModel().getAddressBook().getPersonList().size());","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Selects the person at {@code index} of the displayed list.","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    protected void selectPerson(Index index) {","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        executeCommand(SelectCommand.COMMAND_WORD + \" \" + index.getOneBased());","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(index.getZeroBased(), getPersonListPanel().getSelectedCardIndex());","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Deletes all persons in the address book.","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    protected void deleteAllPersons() {","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        executeCommand(ClearCommand.COMMAND_WORD);","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(0, getModel().getAddressBook().getPersonList().size());","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Asserts that the {@code CommandBox} displays {@code expectedCommandInput}, the {@code ResultDisplay} displays","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * {@code expectedResultMessage}, the model and storage contains the same person objects as {@code expectedModel}","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * and the person list panel displays the persons in the model correctly.","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    protected void assertApplicationDisplaysExpected(String expectedCommandInput, String expectedResultMessage,","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"            Model expectedModel) {","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertEquals(expectedCommandInput, getCommandBox().getInput());","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertEquals(expectedResultMessage, getResultDisplay().getText());","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, getModel());","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel.getAddressBook(), testApp.readStorageAddressBook());","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertListMatching(getPersonListPanel(), expectedModel.getFilteredPersonList());","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * Calls {@code BrowserPanelHandle}, {@code PersonListPanelHandle} and {@code StatusBarFooterHandle} to remember","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * their current state.","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"    private void rememberStates() {","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        StatusBarFooterHandle statusBarFooterHandle \u003d getStatusBarFooter();","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        statusBarFooterHandle.rememberSaveLocation();","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        statusBarFooterHandle.rememberSyncStatus();","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        getPersonListPanel().rememberSelectedPersonCard();","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * Asserts that the previously selected card is now deselected and the browser\u0027s url remains displaying the details","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * of the previously selected person.","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"    protected void assertSelectedCardDeselected() {","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertFalse(getPersonListPanel().isAnyCardSelected());","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * Asserts that the browser\u0027s url is changed to display the details of the person in the person list panel at","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * {@code expectedSelectedCardIndex}, and only the card at {@code expectedSelectedCardIndex} is selected.","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * @see PersonListPanelHandle#isSelectedPersonCardChanged()","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"    protected void assertSelectedCardChanged(Index expectedSelectedCardIndex) {","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertEquals(expectedSelectedCardIndex.getZeroBased(), getPersonListPanel().getSelectedCardIndex());","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * Asserts that the browser\u0027s url and the selected card in the person list panel remain unchanged.","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * @see PersonListPanelHandle#isSelectedPersonCardChanged()","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"    protected void assertSelectedCardUnchanged() {","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertFalse(getPersonListPanel().isSelectedPersonCardChanged());","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * Asserts that the command box\u0027s shows the default style.","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"    protected void assertCommandBoxShowsDefaultStyle() {","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"        assertEquals(COMMAND_BOX_DEFAULT_STYLE, getCommandBox().getStyleClass());","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"     * Asserts that the command box\u0027s shows the error style.","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"    protected void assertCommandBoxShowsErrorStyle() {","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"        assertEquals(COMMAND_BOX_ERROR_STYLE, getCommandBox().getStyleClass());","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"     * Asserts that the entire status bar remains the same.","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"    protected void assertStatusBarUnchanged() {","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"        StatusBarFooterHandle handle \u003d getStatusBarFooter();","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"        assertFalse(handle.isSaveLocationChanged());","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"        assertFalse(handle.isSyncStatusChanged());","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"     * Asserts that only the sync status in the status bar was changed to the timing of","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"     * {@code ClockRule#getInjectedClock()}, while the save location remains the same.","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"    protected void assertStatusBarUnchangedExceptSyncStatus() {","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"        StatusBarFooterHandle handle \u003d getStatusBarFooter();","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"        String timestamp \u003d new Date(clockRule.getInjectedClock().millis()).toString();","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"        String expectedSyncStatus \u003d String.format(SYNC_STATUS_UPDATED, timestamp);","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"        assertEquals(expectedSyncStatus, handle.getSyncStatus());","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"        assertFalse(handle.isSaveLocationChanged());","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"     * Asserts that the starting state of the application is correct.","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"    private void assertApplicationStartingStateIsCorrect() {","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"            assertEquals(\"\", getCommandBox().getInput());","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"            assertEquals(\"\", getResultDisplay().getText());","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"            assertListMatching(getPersonListPanel(), getModel().getFilteredPersonList());","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"codeeong"},"content":"            //assertEquals that the detail card is correct","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"            assertEquals(\"./\" + testApp.getStorageSaveLocation(), getStatusBarFooter().getSaveLocation());","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"            assertEquals(SYNC_STATUS_INITIAL, getStatusBarFooter().getSyncStatus());","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"        } catch (Exception e) {","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Starting state is wrong.\", e);","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"     * Returns a defensive copy of the current model.","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"    protected Model getModel() {","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"        return testApp.getModel();","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":2,"-":264}},{"path":"src/test/java/systemtests/EditCommandSystemTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package systemtests;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertFalse;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertTrue;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_AVATAR_NO_FILE;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_AVATAR_TYPE;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.JERSEY_NUMBER_DESC_17;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POSITION_DESC_MIDFILED;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codeeong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POSITION_DESC_STRIKER;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"codeeong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RATING_DESC_0;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codeeong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RATING_DESC_1;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JERSEY_NUMBER_2;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POSITION_MIDFIELD;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RATING_1;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.KEYWORD_MATCHING_MEIER;","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.RedoCommand;","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.UndoCommand;","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Avatar;","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"public class EditCommandSystemTest extends AddressBookSystemTest {","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void edit() throws Exception {","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Model model \u003d getModel();","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        /* ----------------- Performing edit operation while an unfiltered list is being shown ---------------------- */","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        /* Case: edit all fields, command with leading spaces, trailing spaces and multiple spaces between each field","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"         * -\u003e edited","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"         */","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Index index \u003d INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String command \u003d \" \" + EditCommand.COMMAND_WORD + \"  \" + index.getOneBased() + \"  \" + NAME_DESC_BOB + \"  \"","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + \" \" + EMAIL_DESC_BOB + \"  \" + ADDRESS_DESC_BOB + \" \" + TAG_DESC_HUSBAND + \" \"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"                + RATING_DESC_1 + \" \" + POSITION_DESC_MIDFILED + \" \" + JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"codeeong"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .withRating(VALID_RATING_1).withPosition(VALID_POSITION_MIDFIELD)","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .withJerseyNumber(VALID_JERSEY_NUMBER_2).build();","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, index, editedPerson);","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /* Case: undo editing the last person in the list -\u003e last person restored */","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        command \u003d UndoCommand.COMMAND_WORD;","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedResultMessage \u003d UndoCommand.MESSAGE_SUCCESS;","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedResultMessage);","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        /* Case: redo editing the last person in the list -\u003e last person edited again */","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        command \u003d RedoCommand.COMMAND_WORD;","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        expectedResultMessage \u003d RedoCommand.MESSAGE_SUCCESS;","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        model.updatePerson(","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"                getModel().getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()), editedPerson);","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedResultMessage);","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        /* Case: edit a person with new values same as existing values -\u003e edited */","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        command \u003d EditCommand.COMMAND_WORD + \" \" + index.getOneBased() + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + POSITION_DESC_MIDFILED + RATING_DESC_1","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"                + JERSEY_NUMBER_DESC_17;","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, index, BOB);","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        /* Case: edit some fields -\u003e edited */","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        index \u003d INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        command \u003d EditCommand.COMMAND_WORD + \" \" + index.getOneBased() + TAG_DESC_FRIEND;","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d getModel().getFilteredPersonList().get(index.getZeroBased());","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        editedPerson \u003d new PersonBuilder(personToEdit).withTags(VALID_TAG_FRIEND).build();","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, index, editedPerson);","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        /* Case: clear tags -\u003e cleared */","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        index \u003d INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        command \u003d EditCommand.COMMAND_WORD + \" \" + index.getOneBased() + \" \" + PREFIX_TAG.getPrefix();","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        editedPerson \u003d new PersonBuilder(personToEdit).withTags().build();","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, index, editedPerson);","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        /* ------------------ Performing edit operation while a filtered list is being shown ------------------------ */","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        /* Case: filtered person list, edit index within bounds of address book and person list -\u003e edited */","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        showPersonsWithName(KEYWORD_MATCHING_MEIER);","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        index \u003d INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(index.getZeroBased() \u003c getModel().getFilteredPersonList().size());","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        command \u003d EditCommand.COMMAND_WORD + \" \" + index.getOneBased() + \" \" + NAME_DESC_BOB;","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        personToEdit \u003d getModel().getFilteredPersonList().get(index.getZeroBased());","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        editedPerson \u003d new PersonBuilder(personToEdit).withName(VALID_NAME_BOB).build();","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, index, editedPerson);","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        /* Case: filtered person list, edit index within bounds of address book but out of bounds of person list","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * -\u003e rejected","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"         */","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        showPersonsWithName(KEYWORD_MATCHING_MEIER);","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        int invalidIndex \u003d getModel().getAddressBook().getPersonList().size();","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" \" + invalidIndex + NAME_DESC_BOB,","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"                Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        /* --------------------- Performing edit operation while a person card is selected -------------------------- */","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        /* Case: selects first card in the person list, edit a person -\u003e edited, card selection remains unchanged but","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"         * browser url changes","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"         */","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        showAllPersons();","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        index \u003d INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        selectPerson(index);","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        command \u003d EditCommand.COMMAND_WORD + \" \" + index.getOneBased() + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY + TAG_DESC_FRIEND + RATING_DESC_0 + POSITION_DESC_STRIKER + JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // this can be misleading: card selection actually remains unchanged but the","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // browser\u0027s url is updated to reflect the new person\u0027s name","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, index, AMY, index);","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        /* --------------------------------- Performing invalid edit operation -------------------------------------- */","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        /* Case: invalid index (0) -\u003e rejected */","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" 0\" + NAME_DESC_BOB,","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        /* Case: invalid index (-1) -\u003e rejected */","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" -1\" + NAME_DESC_BOB,","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        /* Case: invalid index (size + 1) -\u003e rejected */","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        invalidIndex \u003d getModel().getFilteredPersonList().size() + 1;","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" \" + invalidIndex + NAME_DESC_BOB,","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"                Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        /* Case: missing index -\u003e rejected */","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + NAME_DESC_BOB,","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        /* Case: missing all fields -\u003e rejected */","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased(),","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"                EditCommand.MESSAGE_NOT_EDITED);","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        /* Case: invalid name -\u003e rejected */","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + INVALID_NAME_DESC,","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"                Name.MESSAGE_NAME_CONSTRAINTS);","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        /* Case: invalid phone -\u003e rejected */","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + INVALID_PHONE_DESC,","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"                Phone.MESSAGE_PHONE_CONSTRAINTS);","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        /* Case: invalid email -\u003e rejected */","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + INVALID_EMAIL_DESC,","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"                Email.MESSAGE_EMAIL_CONSTRAINTS);","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        /* Case: invalid address -\u003e rejected */","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + INVALID_ADDRESS_DESC,","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"                Address.MESSAGE_ADDRESS_CONSTRAINTS);","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"        Avatar.setUpPlaceholderForTest();","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        /* Case: invalid tag -\u003e rejected */","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + INVALID_TAG_DESC,","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"                Tag.MESSAGE_TAG_CONSTRAINTS);","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        /* Case: invalid avatar -\u003e rejected */","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + INVALID_AVATAR_NO_FILE,","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"                EditCommand.MESSAGE_FILE_NOT_FOUND);","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        /* Case: invalid avatar -\u003e rejected */","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + INVALID_AVATAR_TYPE,","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"                Avatar.MESSAGE_AVATAR_CONSTRAINTS);","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"        /* Case: edit a person with new values same as another person\u0027s values -\u003e rejected */","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        executeCommand(PersonUtil.getAddCommand(BOB));","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertTrue(getModel().getAddressBook().getPersonList().contains(BOB));","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        index \u003d INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertFalse(getModel().getFilteredPersonList().get(index.getZeroBased()).equals(BOB));","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"        command \u003d EditCommand.COMMAND_WORD + \" \" + index.getOneBased() + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + TAG_DESC_HUSBAND;","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertCommandFailure(command, EditCommand.MESSAGE_DUPLICATE_PERSON);","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"        /* Case: edit a person with new values same as another person\u0027s values but with different tags -\u003e rejected */","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"        command \u003d EditCommand.COMMAND_WORD + \" \" + index.getOneBased() + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND;","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertCommandFailure(command, EditCommand.MESSAGE_DUPLICATE_PERSON);","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"     * Performs the same verification as {@code assertCommandSuccess(String, Index, Person, Index)} except that","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"     * the browser url and selected card remain unchanged.","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"     * @param toEdit the index of the current model\u0027s filtered list","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"     * @see EditCommandSystemTest#assertCommandSuccess(String, Index, Person, Index)","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String command, Index toEdit, Person editedPerson) {","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, toEdit, editedPerson, null);","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"     * Performs the same verification as {@code assertCommandSuccess(String, Model, String, Index)} and in addition,\u003cbr\u003e","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * 1. Asserts that result display box displays the success message of executing {@code EditCommand}.\u003cbr\u003e","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * 2. Asserts that the model related components are updated to reflect the person at index {@code toEdit} being","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"     * updated to values specified {@code editedPerson}.\u003cbr\u003e","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"     * @param toEdit the index of the current model\u0027s filtered list.","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"     * @see EditCommandSystemTest#assertCommandSuccess(String, Model, String, Index)","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String command, Index toEdit, Person editedPerson,","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"            Index expectedSelectedCardIndex) {","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d getModel();","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"            expectedModel.updatePerson(","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"                    expectedModel.getFilteredPersonList().get(toEdit.getZeroBased()), editedPerson);","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"            expectedModel.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"        } catch (DuplicatePersonException | PersonNotFoundException e) {","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"                    \"editedPerson is a duplicate in expectedModel, or it isn\u0027t found in the model.\");","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, expectedModel,","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"                String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson), expectedSelectedCardIndex);","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"     * Performs the same verification as {@code assertCommandSuccess(String, Model, String, Index)} except that the","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"     * browser url and selected card remain unchanged.","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"     * @see EditCommandSystemTest#assertCommandSuccess(String, Model, String, Index)","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String command, Model expectedModel, String expectedResultMessage) {","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, expectedModel, expectedResultMessage, null);","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"     * Executes {@code command} and in addition,\u003cbr\u003e","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"     * 1. Asserts that the command box displays an empty string.\u003cbr\u003e","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"     * 2. Asserts that the result display box displays {@code expectedResultMessage}.\u003cbr\u003e","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"     * 3. Asserts that the model related components equal to {@code expectedModel}.\u003cbr\u003e","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"     * 4. Asserts that the browser url and selected card update accordingly depending on the card at","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"     * {@code expectedSelectedCardIndex}.\u003cbr\u003e","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"     * 5. Asserts that the status bar\u0027s sync status changes.\u003cbr\u003e","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"     * 6. Asserts that the command box has the default style class.\u003cbr\u003e","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"     * Verifications 1 to 3 are performed by","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"     * {@code AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"     * @see AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"     * @see AddressBookSystemTest#assertSelectedCardChanged(Index)","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String command, Model expectedModel, String expectedResultMessage,","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"            Index expectedSelectedCardIndex) {","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"        executeCommand(command);","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"        assertApplicationDisplaysExpected(\"\", expectedResultMessage, expectedModel);","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"        assertCommandBoxShowsDefaultStyle();","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"        if (expectedSelectedCardIndex !\u003d null) {","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"            assertSelectedCardChanged(expectedSelectedCardIndex);","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"        } else {","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"            assertSelectedCardUnchanged();","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"        assertStatusBarUnchangedExceptSyncStatus();","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"     * Executes {@code command} and in addition,\u003cbr\u003e","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"     * 1. Asserts that the command box displays {@code command}.\u003cbr\u003e","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"     * 2. Asserts that result display box displays {@code expectedResultMessage}.\u003cbr\u003e","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"     * 3. Asserts that the model related components equal to the current model.\u003cbr\u003e","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"     * 4. Asserts that the browser url, selected card and status bar remain unchanged.\u003cbr\u003e","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"     * 5. Asserts that the command box has the error style.\u003cbr\u003e","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"     * Verifications 1 to 3 are performed by","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"     * {@code AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"     * @see AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String command, String expectedResultMessage) {","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d getModel();","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"        executeCommand(command);","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"        assertApplicationDisplaysExpected(command, expectedResultMessage, expectedModel);","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"        assertSelectedCardUnchanged();","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"        assertCommandBoxShowsErrorStyle();","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"        assertStatusBarUnchanged();","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":6,"-":302}},{"path":"src/test/java/systemtests/HelpCommandSystemTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package systemtests;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertFalse;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertNotEquals;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertTrue;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.ui.testutil.GuiTestAssert.assertListMatching;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import guitests.GuiRobot;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import guitests.guihandles.HelpWindowHandle;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.SelectCommand;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.ui.StatusBarFooter;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A system test class for the help window, which contains interaction with other UI components.","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class HelpCommandSystemTest extends AddressBookSystemTest {","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ERROR_MESSAGE \u003d \"ATTENTION!!!! : On some computers, this test may fail when run on \"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"non-headless mode as FxRobot#clickOn(Node, MouseButton...) clicks on the wrong location. We suspect \"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"that this is a bug with TestFX library that we are using. If this test fails, you have to run your \"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"tests on headless mode. See UsingGradle.adoc on how to do so.\";","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final GuiRobot guiRobot \u003d new GuiRobot();","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void openHelpWindow() {","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        //use accelerator","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        getCommandBox().click();","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        getMainMenu().openHelpWindowUsingAccelerator();","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertHelpWindowOpen();","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        getResultDisplay().click();","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        getMainMenu().openHelpWindowUsingAccelerator();","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertHelpWindowOpen();","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        getPersonListPanel().click();","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        getMainMenu().openHelpWindowUsingAccelerator();","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertHelpWindowOpen();","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        //use menu button","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        getMainMenu().openHelpWindowUsingMenu();","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertHelpWindowOpen();","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        //use command box","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        executeCommand(HelpCommand.COMMAND_WORD);","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertHelpWindowOpen();","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // open help window and give it focus","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        executeCommand(HelpCommand.COMMAND_WORD);","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        getMainWindowHandle().focus();","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // assert that while the help window is open the UI updates correctly for a command execution","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        executeCommand(SelectCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(\"\", getCommandBox().getInput());","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertCommandBoxShowsDefaultStyle();","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertNotEquals(HelpCommand.SHOWING_HELP_MESSAGE, getResultDisplay().getText());","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"codeeong"},"content":"        //assertNotEquals(BrowserPanel.DEFAULT_PAGE, getBrowserPanel().getLoadedUrl());","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertListMatching(getPersonListPanel(), getModel().getFilteredPersonList());","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // assert that the status bar too is updated correctly while the help window is open","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // note: the select command tested above does not update the status bar","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        executeCommand(DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNotEquals(StatusBarFooter.SYNC_STATUS_INITIAL, getStatusBarFooter().getSyncStatus());","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Asserts that the help window is open, and closes it after checking.","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private void assertHelpWindowOpen() {","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(ERROR_MESSAGE, HelpWindowHandle.isWindowPresent());","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        guiRobot.pauseForHuman();","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        new HelpWindowHandle(guiRobot.getStage(HelpWindowHandle.HELP_WINDOW_TITLE)).close();","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        getMainWindowHandle().focus();","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Asserts that the help window isn\u0027t open.","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private void assertHelpWindowNotOpen() {","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ERROR_MESSAGE, HelpWindowHandle.isWindowPresent());","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":1,"-":88}}]
