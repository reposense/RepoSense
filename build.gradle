plugins {
    id 'java'
    id 'checkstyle'
    id 'com.github.johnrengelman.shadow' version '2.0.3'
    id 'application'
}
mainClassName = "reposense.frontend.RepoSense"

repositories {
    mavenCentral()
}

checkstyle {
    toolVersion = '8.1'
}

test {
  testLogging.showStandardStreams = true
}

dependencies {
    implementation  group: 'commons-collections', name: 'commons-collections', version: '3.2'
    implementation  'com.github.javaparser:javaparser-core:3.0.1'
    implementation  'com.google.code.gson:gson:2.6.2'
    implementation  group: 'org.json', name: 'json', version: '20180130'

    testImplementation group: 'junit', name: 'junit', version: '4.12'
}

shadowJar {
    archiveName = 'RepoSense.jar'
    destinationDir = file("${buildDir}/jar/")
}

task myZip(type: Zip) {
    from 'template/'
    baseName = 'templateZip'
    destinationDir = file("src/main/resources")
}

tasks.shadowJar.dependsOn("myZip");
tasks.run.dependsOn("myZip");

configurations {
  functionalImplementation.extendsFrom testImplementation
  functionalRuntime.extendsFrom testRuntime
}
sourceSets {
  functional {
    compileClasspath += main.output + test.output
    runtimeClasspath += main.output + test.output
    java.srcDir file('src/functional/java')
  }
  test {
    resources.srcDir file('src/functional/resources')
  }
}

task functional(type: Test) {
  testClassesDirs = sourceSets.functional.output.classesDirs
  classpath = sourceSets.functional.runtimeClasspath
  testLogging {
    events "passed", "skipped", "failed"
    showStandardStreams = true
  }
}
tasks.functional.dependsOn("myZip");
